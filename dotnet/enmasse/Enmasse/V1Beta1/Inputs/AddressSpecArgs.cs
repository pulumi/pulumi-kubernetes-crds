// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Enmasse.V1Beta1
{

    public class AddressSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Messaging address.
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("forwarders")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Enmasse.V1Beta1.AddressSpecForwardersArgs>? _forwarders;

        /// <summary>
        /// Address forwarders for this address.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Enmasse.V1Beta1.AddressSpecForwardersArgs> Forwarders
        {
            get => _forwarders ?? (_forwarders = new InputList<Pulumi.Kubernetes.Types.Inputs.Enmasse.V1Beta1.AddressSpecForwardersArgs>());
            set => _forwarders = value;
        }

        /// <summary>
        /// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
        /// </summary>
        [Input("messageTtl")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Enmasse.V1Beta1.AddressSpecMessageTtlArgs>? MessageTtl { get; set; }

        /// <summary>
        /// Plan referenced by this address.
        /// </summary>
        [Input("plan", required: true)]
        public Input<string> Plan { get; set; } = null!;

        /// <summary>
        /// Properties that can be set for subscription type addresses.
        /// </summary>
        [Input("subscription")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Enmasse.V1Beta1.AddressSpecSubscriptionArgs>? Subscription { get; set; }

        /// <summary>
        /// Address of topic that this subscription refers to (only applicable to subscription types).
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        /// <summary>
        /// Address type for this address.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AddressSpecArgs()
        {
        }
    }
}
