// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Monitoring.V1
{

    [OutputType]
    public sealed class AlertmanagerSpec
    {
        /// <summary>
        /// AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalPeers;
        /// <summary>
        /// If specified, the pod's scheduling constraints.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecAffinity Affinity;
        /// <summary>
        /// Base image that is used to deploy pods, without tag.
        /// </summary>
        public readonly string BaseImage;
        /// <summary>
        /// ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/&lt;configmap-name&gt;.
        /// </summary>
        public readonly ImmutableArray<string> ConfigMaps;
        /// <summary>
        /// ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains configuration for this Alertmanager instance. Defaults to 'alertmanager-&lt;alertmanager-name&gt;' The secret is mounted into /etc/alertmanager/config.
        /// </summary>
        public readonly string ConfigSecret;
        /// <summary>
        /// Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecContainers> Containers;
        /// <summary>
        /// The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name.
        /// </summary>
        public readonly string ExternalUrl;
        /// <summary>
        /// Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Alertmanager is being configured.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecImagePullSecrets> ImagePullSecrets;
        /// <summary>
        /// InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Alertmanager configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecInitContainers> InitContainers;
        /// <summary>
        /// ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP. Note this is only for the Alertmanager UI, not the gossip communication.
        /// </summary>
        public readonly bool ListenLocal;
        /// <summary>
        /// Log format for Alertmanager to be configured with.
        /// </summary>
        public readonly string LogFormat;
        /// <summary>
        /// Log level for Alertmanager to be configured with.
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// Define which Nodes the Pods are scheduled on.
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// If set to true all actions on the underlaying managed objects are not goint to be performed, except for delete actions.
        /// </summary>
        public readonly bool Paused;
        /// <summary>
        /// PodMetadata configures Labels and Annotations which are propagated to the alertmanager pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecPodMetadata PodMetadata;
        /// <summary>
        /// Port name used for the pods and governing service. This defaults to web
        /// </summary>
        public readonly string PortName;
        /// <summary>
        /// Priority class assigned to the Pods
        /// </summary>
        public readonly string PriorityClassName;
        /// <summary>
        /// Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the running cluster equal to the expected size.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// Define resources requests and limits for single Pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecResources Resources;
        /// <summary>
        /// Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.
        /// </summary>
        public readonly string RoutePrefix;
        /// <summary>
        /// Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/&lt;secret-name&gt;.
        /// </summary>
        public readonly ImmutableArray<string> Secrets;
        /// <summary>
        /// SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecSecurityContext SecurityContext;
        /// <summary>
        /// ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// SHA of Alertmanager container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.
        /// </summary>
        public readonly string Sha;
        /// <summary>
        /// Storage is the definition of how storage will be used by the Alertmanager instances.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecStorage Storage;
        /// <summary>
        /// Tag of Alertmanager container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// If specified, the pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecTolerations> Tolerations;
        /// <summary>
        /// Version the cluster should be on.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the alertmanager container, that are generated as a result of StorageSpec objects.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecVolumeMounts> VolumeMounts;
        /// <summary>
        /// Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecVolumes> Volumes;

        [OutputConstructor]
        private AlertmanagerSpec(
            ImmutableArray<string> additionalPeers,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecAffinity affinity,

            string baseImage,

            ImmutableArray<string> configMaps,

            string configSecret,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecContainers> containers,

            string externalUrl,

            string image,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecImagePullSecrets> imagePullSecrets,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecInitContainers> initContainers,

            bool listenLocal,

            string logFormat,

            string logLevel,

            ImmutableDictionary<string, string> nodeSelector,

            bool paused,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecPodMetadata podMetadata,

            string portName,

            string priorityClassName,

            int replicas,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecResources resources,

            string retention,

            string routePrefix,

            ImmutableArray<string> secrets,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecSecurityContext securityContext,

            string serviceAccountName,

            string sha,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecStorage storage,

            string tag,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecTolerations> tolerations,

            string version,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecVolumeMounts> volumeMounts,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.AlertmanagerSpecVolumes> volumes)
        {
            AdditionalPeers = additionalPeers;
            Affinity = affinity;
            BaseImage = baseImage;
            ConfigMaps = configMaps;
            ConfigSecret = configSecret;
            Containers = containers;
            ExternalUrl = externalUrl;
            Image = image;
            ImagePullSecrets = imagePullSecrets;
            InitContainers = initContainers;
            ListenLocal = listenLocal;
            LogFormat = logFormat;
            LogLevel = logLevel;
            NodeSelector = nodeSelector;
            Paused = paused;
            PodMetadata = podMetadata;
            PortName = portName;
            PriorityClassName = priorityClassName;
            Replicas = replicas;
            Resources = resources;
            Retention = retention;
            RoutePrefix = routePrefix;
            Secrets = secrets;
            SecurityContext = securityContext;
            ServiceAccountName = serviceAccountName;
            Sha = sha;
            Storage = storage;
            Tag = tag;
            Tolerations = tolerations;
            Version = version;
            VolumeMounts = volumeMounts;
            Volumes = volumes;
        }
    }
}
