// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Submariner.V1Alpha1
{

    [OutputType]
    public sealed class ServiceDiscoverySpec
    {
        public readonly string BrokerK8sApiServer;
        public readonly string BrokerK8sApiServerToken;
        public readonly string BrokerK8sCA;
        public readonly string BrokerK8sRemoteNamespace;
        public readonly string ClusterID;
        public readonly bool Debug;
        public readonly bool GlobalnetEnabled;
        public readonly string Namespace;
        public readonly string Repository;
        public readonly string Version;

        [OutputConstructor]
        private ServiceDiscoverySpec(
            string brokerK8sApiServer,

            string brokerK8sApiServerToken,

            string brokerK8sCA,

            string brokerK8sRemoteNamespace,

            string clusterID,

            bool debug,

            bool globalnetEnabled,

            string @namespace,

            string repository,

            string version)
        {
            BrokerK8sApiServer = brokerK8sApiServer;
            BrokerK8sApiServerToken = brokerK8sApiServerToken;
            BrokerK8sCA = brokerK8sCA;
            BrokerK8sRemoteNamespace = brokerK8sRemoteNamespace;
            ClusterID = clusterID;
            Debug = debug;
            GlobalnetEnabled = globalnetEnabled;
            Namespace = @namespace;
            Repository = repository;
            Version = version;
        }
    }
}
