// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Org.V1
{

    [OutputType]
    public sealed class CheClusterSpecStorage
    {
        /// <summary>
        /// Storage class for the Persistent Volume Claim dedicated to the Postgres database. If omitted or left blank, default storage class is used.
        /// </summary>
        public readonly string PostgresPVCStorageClassName;
        /// <summary>
        /// Instructs the Che server to launch a special pod to pre-create a subpath in the Persistent Volumes. Defaults to `false`, however it might need to enable it according to the configuration of your K8S cluster.
        /// </summary>
        public readonly bool PreCreateSubPaths;
        /// <summary>
        /// Size of the persistent volume claim for workspaces. Defaults to `1Gi`
        /// </summary>
        public readonly string PvcClaimSize;
        /// <summary>
        /// Overrides the container image used to create sub-paths in the Persistent Volumes. This includes the image tag. Omit it or leave it empty to use the defaut container image provided by the operator. See also the `preCreateSubPaths` field.
        /// </summary>
        public readonly string PvcJobsImage;
        /// <summary>
        /// Persistent volume claim strategy for the Che server. This Can be:`common` (all workspaces PVCs in one volume), `per-workspace` (one PVC per workspace for all declared volumes) and `unique` (one PVC per declared volume). Defaults to `common`.
        /// </summary>
        public readonly string PvcStrategy;
        /// <summary>
        /// Storage class for the Persistent Volume Claims dedicated to the Che workspaces. If omitted or left blank, default storage class is used.
        /// </summary>
        public readonly string WorkspacePVCStorageClassName;

        [OutputConstructor]
        private CheClusterSpecStorage(
            string postgresPVCStorageClassName,

            bool preCreateSubPaths,

            string pvcClaimSize,

            string pvcJobsImage,

            string pvcStrategy,

            string workspacePVCStorageClassName)
        {
            PostgresPVCStorageClassName = postgresPVCStorageClassName;
            PreCreateSubPaths = preCreateSubPaths;
            PvcClaimSize = pvcClaimSize;
            PvcJobsImage = pvcJobsImage;
            PvcStrategy = pvcStrategy;
            WorkspacePVCStorageClassName = workspacePVCStorageClassName;
        }
    }
}
