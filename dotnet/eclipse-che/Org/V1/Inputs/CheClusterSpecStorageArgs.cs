// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Org.V1
{

    /// <summary>
    /// Configuration settings related to the persistent storage used by the Che installation.
    /// </summary>
    public class CheClusterSpecStorageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Storage class for the Persistent Volume Claim dedicated to the Postgres database. If omitted or left blank, default storage class is used.
        /// </summary>
        [Input("postgresPVCStorageClassName")]
        public Input<string>? PostgresPVCStorageClassName { get; set; }

        /// <summary>
        /// Instructs the Che server to launch a special pod to pre-create a subpath in the Persistent Volumes. Defaults to `false`, however it might need to enable it according to the configuration of your K8S cluster.
        /// </summary>
        [Input("preCreateSubPaths")]
        public Input<bool>? PreCreateSubPaths { get; set; }

        /// <summary>
        /// Size of the persistent volume claim for workspaces. Defaults to `1Gi`
        /// </summary>
        [Input("pvcClaimSize")]
        public Input<string>? PvcClaimSize { get; set; }

        /// <summary>
        /// Overrides the container image used to create sub-paths in the Persistent Volumes. This includes the image tag. Omit it or leave it empty to use the defaut container image provided by the operator. See also the `preCreateSubPaths` field.
        /// </summary>
        [Input("pvcJobsImage")]
        public Input<string>? PvcJobsImage { get; set; }

        /// <summary>
        /// Persistent volume claim strategy for the Che server. This Can be:`common` (all workspaces PVCs in one volume), `per-workspace` (one PVC per workspace for all declared volumes) and `unique` (one PVC per declared volume). Defaults to `common`.
        /// </summary>
        [Input("pvcStrategy")]
        public Input<string>? PvcStrategy { get; set; }

        /// <summary>
        /// Storage class for the Persistent Volume Claims dedicated to the Che workspaces. If omitted or left blank, default storage class is used.
        /// </summary>
        [Input("workspacePVCStorageClassName")]
        public Input<string>? WorkspacePVCStorageClassName { get; set; }

        public CheClusterSpecStorageArgs()
        {
        }
    }
}
