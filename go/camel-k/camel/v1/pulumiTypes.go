// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Build is the Schema for the builds API
type BuildType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildSpec defines the desired state of Build
	Spec *BuildSpec `pulumi:"spec"`
	// BuildStatus defines the observed state of Build
	Status *BuildStatus `pulumi:"status"`
}

// BuildTypeInput is an input type that accepts BuildTypeArgs and BuildTypeOutput values.
// You can construct a concrete instance of `BuildTypeInput` via:
//
//          BuildTypeArgs{...}
type BuildTypeInput interface {
	pulumi.Input

	ToBuildTypeOutput() BuildTypeOutput
	ToBuildTypeOutputWithContext(context.Context) BuildTypeOutput
}

// Build is the Schema for the builds API
type BuildTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BuildSpec defines the desired state of Build
	Spec BuildSpecPtrInput `pulumi:"spec"`
	// BuildStatus defines the observed state of Build
	Status BuildStatusPtrInput `pulumi:"status"`
}

func (BuildTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildType)(nil)).Elem()
}

func (i BuildTypeArgs) ToBuildTypeOutput() BuildTypeOutput {
	return i.ToBuildTypeOutputWithContext(context.Background())
}

func (i BuildTypeArgs) ToBuildTypeOutputWithContext(ctx context.Context) BuildTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildTypeOutput)
}

// Build is the Schema for the builds API
type BuildTypeOutput struct{ *pulumi.OutputState }

func (BuildTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildType)(nil)).Elem()
}

func (o BuildTypeOutput) ToBuildTypeOutput() BuildTypeOutput {
	return o
}

func (o BuildTypeOutput) ToBuildTypeOutputWithContext(ctx context.Context) BuildTypeOutput {
	return o
}

func (o BuildTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BuildTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BuildTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BuildType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BuildSpec defines the desired state of Build
func (o BuildTypeOutput) Spec() BuildSpecPtrOutput {
	return o.ApplyT(func(v BuildType) *BuildSpec { return v.Spec }).(BuildSpecPtrOutput)
}

// BuildStatus defines the observed state of Build
func (o BuildTypeOutput) Status() BuildStatusPtrOutput {
	return o.ApplyT(func(v BuildType) *BuildStatus { return v.Status }).(BuildStatusPtrOutput)
}

type BuildMetadata struct {
}

// BuildMetadataInput is an input type that accepts BuildMetadataArgs and BuildMetadataOutput values.
// You can construct a concrete instance of `BuildMetadataInput` via:
//
//          BuildMetadataArgs{...}
type BuildMetadataInput interface {
	pulumi.Input

	ToBuildMetadataOutput() BuildMetadataOutput
	ToBuildMetadataOutputWithContext(context.Context) BuildMetadataOutput
}

type BuildMetadataArgs struct {
}

func (BuildMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildMetadata)(nil)).Elem()
}

func (i BuildMetadataArgs) ToBuildMetadataOutput() BuildMetadataOutput {
	return i.ToBuildMetadataOutputWithContext(context.Background())
}

func (i BuildMetadataArgs) ToBuildMetadataOutputWithContext(ctx context.Context) BuildMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildMetadataOutput)
}

type BuildMetadataOutput struct{ *pulumi.OutputState }

func (BuildMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildMetadata)(nil)).Elem()
}

func (o BuildMetadataOutput) ToBuildMetadataOutput() BuildMetadataOutput {
	return o
}

func (o BuildMetadataOutput) ToBuildMetadataOutputWithContext(ctx context.Context) BuildMetadataOutput {
	return o
}

// BuildSpec defines the desired state of Build
type BuildSpec struct {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file
	Tasks []BuildSpecTasks `pulumi:"tasks"`
}

// BuildSpecInput is an input type that accepts BuildSpecArgs and BuildSpecOutput values.
// You can construct a concrete instance of `BuildSpecInput` via:
//
//          BuildSpecArgs{...}
type BuildSpecInput interface {
	pulumi.Input

	ToBuildSpecOutput() BuildSpecOutput
	ToBuildSpecOutputWithContext(context.Context) BuildSpecOutput
}

// BuildSpec defines the desired state of Build
type BuildSpecArgs struct {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file
	Tasks BuildSpecTasksArrayInput `pulumi:"tasks"`
}

func (BuildSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpec)(nil)).Elem()
}

func (i BuildSpecArgs) ToBuildSpecOutput() BuildSpecOutput {
	return i.ToBuildSpecOutputWithContext(context.Background())
}

func (i BuildSpecArgs) ToBuildSpecOutputWithContext(ctx context.Context) BuildSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutput)
}

func (i BuildSpecArgs) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return i.ToBuildSpecPtrOutputWithContext(context.Background())
}

func (i BuildSpecArgs) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutput).ToBuildSpecPtrOutputWithContext(ctx)
}

// BuildSpecPtrInput is an input type that accepts BuildSpecArgs, BuildSpecPtr and BuildSpecPtrOutput values.
// You can construct a concrete instance of `BuildSpecPtrInput` via:
//
//          BuildSpecArgs{...}
//
//  or:
//
//          nil
type BuildSpecPtrInput interface {
	pulumi.Input

	ToBuildSpecPtrOutput() BuildSpecPtrOutput
	ToBuildSpecPtrOutputWithContext(context.Context) BuildSpecPtrOutput
}

type buildSpecPtrType BuildSpecArgs

func BuildSpecPtr(v *BuildSpecArgs) BuildSpecPtrInput {
	return (*buildSpecPtrType)(v)
}

func (*buildSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpec)(nil)).Elem()
}

func (i *buildSpecPtrType) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return i.ToBuildSpecPtrOutputWithContext(context.Background())
}

func (i *buildSpecPtrType) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecPtrOutput)
}

// BuildSpec defines the desired state of Build
type BuildSpecOutput struct{ *pulumi.OutputState }

func (BuildSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpec)(nil)).Elem()
}

func (o BuildSpecOutput) ToBuildSpecOutput() BuildSpecOutput {
	return o
}

func (o BuildSpecOutput) ToBuildSpecOutputWithContext(ctx context.Context) BuildSpecOutput {
	return o
}

func (o BuildSpecOutput) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return o.ToBuildSpecPtrOutputWithContext(context.Background())
}

func (o BuildSpecOutput) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return o.ApplyT(func(v BuildSpec) *BuildSpec {
		return &v
	}).(BuildSpecPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file
func (o BuildSpecOutput) Tasks() BuildSpecTasksArrayOutput {
	return o.ApplyT(func(v BuildSpec) []BuildSpecTasks { return v.Tasks }).(BuildSpecTasksArrayOutput)
}

type BuildSpecPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpec)(nil)).Elem()
}

func (o BuildSpecPtrOutput) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return o
}

func (o BuildSpecPtrOutput) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return o
}

func (o BuildSpecPtrOutput) Elem() BuildSpecOutput {
	return o.ApplyT(func(v *BuildSpec) BuildSpec { return *v }).(BuildSpecOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file
func (o BuildSpecPtrOutput) Tasks() BuildSpecTasksArrayOutput {
	return o.ApplyT(func(v *BuildSpec) []BuildSpecTasks {
		if v == nil {
			return nil
		}
		return v.Tasks
	}).(BuildSpecTasksArrayOutput)
}

// Task --
type BuildSpecTasks struct {
	// BuilderTask --
	Builder *BuildSpecTasksBuilder `pulumi:"builder"`
	// ImageTask --
	Image *BuildSpecTasksImage `pulumi:"image"`
}

// BuildSpecTasksInput is an input type that accepts BuildSpecTasksArgs and BuildSpecTasksOutput values.
// You can construct a concrete instance of `BuildSpecTasksInput` via:
//
//          BuildSpecTasksArgs{...}
type BuildSpecTasksInput interface {
	pulumi.Input

	ToBuildSpecTasksOutput() BuildSpecTasksOutput
	ToBuildSpecTasksOutputWithContext(context.Context) BuildSpecTasksOutput
}

// Task --
type BuildSpecTasksArgs struct {
	// BuilderTask --
	Builder BuildSpecTasksBuilderPtrInput `pulumi:"builder"`
	// ImageTask --
	Image BuildSpecTasksImagePtrInput `pulumi:"image"`
}

func (BuildSpecTasksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasks)(nil)).Elem()
}

func (i BuildSpecTasksArgs) ToBuildSpecTasksOutput() BuildSpecTasksOutput {
	return i.ToBuildSpecTasksOutputWithContext(context.Background())
}

func (i BuildSpecTasksArgs) ToBuildSpecTasksOutputWithContext(ctx context.Context) BuildSpecTasksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksOutput)
}

// BuildSpecTasksArrayInput is an input type that accepts BuildSpecTasksArray and BuildSpecTasksArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksArrayInput` via:
//
//          BuildSpecTasksArray{ BuildSpecTasksArgs{...} }
type BuildSpecTasksArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksArrayOutput() BuildSpecTasksArrayOutput
	ToBuildSpecTasksArrayOutputWithContext(context.Context) BuildSpecTasksArrayOutput
}

type BuildSpecTasksArray []BuildSpecTasksInput

func (BuildSpecTasksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasks)(nil)).Elem()
}

func (i BuildSpecTasksArray) ToBuildSpecTasksArrayOutput() BuildSpecTasksArrayOutput {
	return i.ToBuildSpecTasksArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksArray) ToBuildSpecTasksArrayOutputWithContext(ctx context.Context) BuildSpecTasksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksArrayOutput)
}

// Task --
type BuildSpecTasksOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasks)(nil)).Elem()
}

func (o BuildSpecTasksOutput) ToBuildSpecTasksOutput() BuildSpecTasksOutput {
	return o
}

func (o BuildSpecTasksOutput) ToBuildSpecTasksOutputWithContext(ctx context.Context) BuildSpecTasksOutput {
	return o
}

// BuilderTask --
func (o BuildSpecTasksOutput) Builder() BuildSpecTasksBuilderPtrOutput {
	return o.ApplyT(func(v BuildSpecTasks) *BuildSpecTasksBuilder { return v.Builder }).(BuildSpecTasksBuilderPtrOutput)
}

// ImageTask --
func (o BuildSpecTasksOutput) Image() BuildSpecTasksImagePtrOutput {
	return o.ApplyT(func(v BuildSpecTasks) *BuildSpecTasksImage { return v.Image }).(BuildSpecTasksImagePtrOutput)
}

type BuildSpecTasksArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasks)(nil)).Elem()
}

func (o BuildSpecTasksArrayOutput) ToBuildSpecTasksArrayOutput() BuildSpecTasksArrayOutput {
	return o
}

func (o BuildSpecTasksArrayOutput) ToBuildSpecTasksArrayOutputWithContext(ctx context.Context) BuildSpecTasksArrayOutput {
	return o
}

func (o BuildSpecTasksArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasks {
		return vs[0].([]BuildSpecTasks)[vs[1].(int)]
	}).(BuildSpecTasksOutput)
}

// BuilderTask --
type BuildSpecTasksBuilder struct {
	// Affinity is a group of affinity scheduling rules.
	Affinity     *BuildSpecTasksBuilderAffinity `pulumi:"affinity"`
	BaseImage    *string                        `pulumi:"baseImage"`
	BuildDir     *string                        `pulumi:"buildDir"`
	Dependencies []string                       `pulumi:"dependencies"`
	Image        *string                        `pulumi:"image"`
	// MavenSpec --
	Maven *BuildSpecTasksBuilderMaven `pulumi:"maven"`
	// This is required until https://github.com/kubernetes-sigs/controller-tools/pull/395 gets merged
	Meta       map[string]interface{}           `pulumi:"meta"`
	Name       *string                          `pulumi:"name"`
	Properties map[string]string                `pulumi:"properties"`
	Resources  []BuildSpecTasksBuilderResources `pulumi:"resources"`
	// RuntimeSpec --
	Runtime      *BuildSpecTasksBuilderRuntime       `pulumi:"runtime"`
	Sources      []BuildSpecTasksBuilderSources      `pulumi:"sources"`
	Steps        []string                            `pulumi:"steps"`
	Timeout      *string                             `pulumi:"timeout"`
	VolumeMounts []BuildSpecTasksBuilderVolumeMounts `pulumi:"volumeMounts"`
	Volumes      []BuildSpecTasksBuilderVolumes      `pulumi:"volumes"`
}

// BuildSpecTasksBuilderInput is an input type that accepts BuildSpecTasksBuilderArgs and BuildSpecTasksBuilderOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderInput` via:
//
//          BuildSpecTasksBuilderArgs{...}
type BuildSpecTasksBuilderInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderOutput() BuildSpecTasksBuilderOutput
	ToBuildSpecTasksBuilderOutputWithContext(context.Context) BuildSpecTasksBuilderOutput
}

// BuilderTask --
type BuildSpecTasksBuilderArgs struct {
	// Affinity is a group of affinity scheduling rules.
	Affinity     BuildSpecTasksBuilderAffinityPtrInput `pulumi:"affinity"`
	BaseImage    pulumi.StringPtrInput                 `pulumi:"baseImage"`
	BuildDir     pulumi.StringPtrInput                 `pulumi:"buildDir"`
	Dependencies pulumi.StringArrayInput               `pulumi:"dependencies"`
	Image        pulumi.StringPtrInput                 `pulumi:"image"`
	// MavenSpec --
	Maven BuildSpecTasksBuilderMavenPtrInput `pulumi:"maven"`
	// This is required until https://github.com/kubernetes-sigs/controller-tools/pull/395 gets merged
	Meta       pulumi.MapInput                          `pulumi:"meta"`
	Name       pulumi.StringPtrInput                    `pulumi:"name"`
	Properties pulumi.StringMapInput                    `pulumi:"properties"`
	Resources  BuildSpecTasksBuilderResourcesArrayInput `pulumi:"resources"`
	// RuntimeSpec --
	Runtime      BuildSpecTasksBuilderRuntimePtrInput        `pulumi:"runtime"`
	Sources      BuildSpecTasksBuilderSourcesArrayInput      `pulumi:"sources"`
	Steps        pulumi.StringArrayInput                     `pulumi:"steps"`
	Timeout      pulumi.StringPtrInput                       `pulumi:"timeout"`
	VolumeMounts BuildSpecTasksBuilderVolumeMountsArrayInput `pulumi:"volumeMounts"`
	Volumes      BuildSpecTasksBuilderVolumesArrayInput      `pulumi:"volumes"`
}

func (BuildSpecTasksBuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilder)(nil)).Elem()
}

func (i BuildSpecTasksBuilderArgs) ToBuildSpecTasksBuilderOutput() BuildSpecTasksBuilderOutput {
	return i.ToBuildSpecTasksBuilderOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderArgs) ToBuildSpecTasksBuilderOutputWithContext(ctx context.Context) BuildSpecTasksBuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderOutput)
}

func (i BuildSpecTasksBuilderArgs) ToBuildSpecTasksBuilderPtrOutput() BuildSpecTasksBuilderPtrOutput {
	return i.ToBuildSpecTasksBuilderPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderArgs) ToBuildSpecTasksBuilderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderOutput).ToBuildSpecTasksBuilderPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderPtrInput is an input type that accepts BuildSpecTasksBuilderArgs, BuildSpecTasksBuilderPtr and BuildSpecTasksBuilderPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderPtrInput` via:
//
//          BuildSpecTasksBuilderArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderPtrOutput() BuildSpecTasksBuilderPtrOutput
	ToBuildSpecTasksBuilderPtrOutputWithContext(context.Context) BuildSpecTasksBuilderPtrOutput
}

type buildSpecTasksBuilderPtrType BuildSpecTasksBuilderArgs

func BuildSpecTasksBuilderPtr(v *BuildSpecTasksBuilderArgs) BuildSpecTasksBuilderPtrInput {
	return (*buildSpecTasksBuilderPtrType)(v)
}

func (*buildSpecTasksBuilderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilder)(nil)).Elem()
}

func (i *buildSpecTasksBuilderPtrType) ToBuildSpecTasksBuilderPtrOutput() BuildSpecTasksBuilderPtrOutput {
	return i.ToBuildSpecTasksBuilderPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderPtrType) ToBuildSpecTasksBuilderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderPtrOutput)
}

// BuilderTask --
type BuildSpecTasksBuilderOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilder)(nil)).Elem()
}

func (o BuildSpecTasksBuilderOutput) ToBuildSpecTasksBuilderOutput() BuildSpecTasksBuilderOutput {
	return o
}

func (o BuildSpecTasksBuilderOutput) ToBuildSpecTasksBuilderOutputWithContext(ctx context.Context) BuildSpecTasksBuilderOutput {
	return o
}

func (o BuildSpecTasksBuilderOutput) ToBuildSpecTasksBuilderPtrOutput() BuildSpecTasksBuilderPtrOutput {
	return o.ToBuildSpecTasksBuilderPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderOutput) ToBuildSpecTasksBuilderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *BuildSpecTasksBuilder {
		return &v
	}).(BuildSpecTasksBuilderPtrOutput)
}

// Affinity is a group of affinity scheduling rules.
func (o BuildSpecTasksBuilderOutput) Affinity() BuildSpecTasksBuilderAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *BuildSpecTasksBuilderAffinity { return v.Affinity }).(BuildSpecTasksBuilderAffinityPtrOutput)
}

func (o BuildSpecTasksBuilderOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderOutput) BuildDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *string { return v.BuildDir }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) []string { return v.Dependencies }).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksBuilderOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// MavenSpec --
func (o BuildSpecTasksBuilderOutput) Maven() BuildSpecTasksBuilderMavenPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *BuildSpecTasksBuilderMaven { return v.Maven }).(BuildSpecTasksBuilderMavenPtrOutput)
}

// This is required until https://github.com/kubernetes-sigs/controller-tools/pull/395 gets merged
func (o BuildSpecTasksBuilderOutput) Meta() pulumi.MapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) map[string]interface{} { return v.Meta }).(pulumi.MapOutput)
}

func (o BuildSpecTasksBuilderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

func (o BuildSpecTasksBuilderOutput) Resources() BuildSpecTasksBuilderResourcesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) []BuildSpecTasksBuilderResources { return v.Resources }).(BuildSpecTasksBuilderResourcesArrayOutput)
}

// RuntimeSpec --
func (o BuildSpecTasksBuilderOutput) Runtime() BuildSpecTasksBuilderRuntimePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *BuildSpecTasksBuilderRuntime { return v.Runtime }).(BuildSpecTasksBuilderRuntimePtrOutput)
}

func (o BuildSpecTasksBuilderOutput) Sources() BuildSpecTasksBuilderSourcesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) []BuildSpecTasksBuilderSources { return v.Sources }).(BuildSpecTasksBuilderSourcesArrayOutput)
}

func (o BuildSpecTasksBuilderOutput) Steps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) []string { return v.Steps }).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksBuilderOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderOutput) VolumeMounts() BuildSpecTasksBuilderVolumeMountsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) []BuildSpecTasksBuilderVolumeMounts { return v.VolumeMounts }).(BuildSpecTasksBuilderVolumeMountsArrayOutput)
}

func (o BuildSpecTasksBuilderOutput) Volumes() BuildSpecTasksBuilderVolumesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilder) []BuildSpecTasksBuilderVolumes { return v.Volumes }).(BuildSpecTasksBuilderVolumesArrayOutput)
}

type BuildSpecTasksBuilderPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilder)(nil)).Elem()
}

func (o BuildSpecTasksBuilderPtrOutput) ToBuildSpecTasksBuilderPtrOutput() BuildSpecTasksBuilderPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderPtrOutput) ToBuildSpecTasksBuilderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderPtrOutput) Elem() BuildSpecTasksBuilderOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) BuildSpecTasksBuilder { return *v }).(BuildSpecTasksBuilderOutput)
}

// Affinity is a group of affinity scheduling rules.
func (o BuildSpecTasksBuilderPtrOutput) Affinity() BuildSpecTasksBuilderAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *BuildSpecTasksBuilderAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(BuildSpecTasksBuilderAffinityPtrOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) BuildDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *string {
		if v == nil {
			return nil
		}
		return v.BuildDir
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) []string {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// MavenSpec --
func (o BuildSpecTasksBuilderPtrOutput) Maven() BuildSpecTasksBuilderMavenPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *BuildSpecTasksBuilderMaven {
		if v == nil {
			return nil
		}
		return v.Maven
	}).(BuildSpecTasksBuilderMavenPtrOutput)
}

// This is required until https://github.com/kubernetes-sigs/controller-tools/pull/395 gets merged
func (o BuildSpecTasksBuilderPtrOutput) Meta() pulumi.MapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Meta
	}).(pulumi.MapOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Resources() BuildSpecTasksBuilderResourcesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) []BuildSpecTasksBuilderResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(BuildSpecTasksBuilderResourcesArrayOutput)
}

// RuntimeSpec --
func (o BuildSpecTasksBuilderPtrOutput) Runtime() BuildSpecTasksBuilderRuntimePtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *BuildSpecTasksBuilderRuntime {
		if v == nil {
			return nil
		}
		return v.Runtime
	}).(BuildSpecTasksBuilderRuntimePtrOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Sources() BuildSpecTasksBuilderSourcesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) []BuildSpecTasksBuilderSources {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(BuildSpecTasksBuilderSourcesArrayOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Steps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) []string {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) VolumeMounts() BuildSpecTasksBuilderVolumeMountsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) []BuildSpecTasksBuilderVolumeMounts {
		if v == nil {
			return nil
		}
		return v.VolumeMounts
	}).(BuildSpecTasksBuilderVolumeMountsArrayOutput)
}

func (o BuildSpecTasksBuilderPtrOutput) Volumes() BuildSpecTasksBuilderVolumesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilder) []BuildSpecTasksBuilderVolumes {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(BuildSpecTasksBuilderVolumesArrayOutput)
}

// Affinity is a group of affinity scheduling rules.
type BuildSpecTasksBuilderAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *BuildSpecTasksBuilderAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *BuildSpecTasksBuilderAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *BuildSpecTasksBuilderAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// BuildSpecTasksBuilderAffinityInput is an input type that accepts BuildSpecTasksBuilderAffinityArgs and BuildSpecTasksBuilderAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityInput` via:
//
//          BuildSpecTasksBuilderAffinityArgs{...}
type BuildSpecTasksBuilderAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityOutput() BuildSpecTasksBuilderAffinityOutput
	ToBuildSpecTasksBuilderAffinityOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityOutput
}

// Affinity is a group of affinity scheduling rules.
type BuildSpecTasksBuilderAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity BuildSpecTasksBuilderAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity BuildSpecTasksBuilderAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity BuildSpecTasksBuilderAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (BuildSpecTasksBuilderAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinity)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityArgs) ToBuildSpecTasksBuilderAffinityOutput() BuildSpecTasksBuilderAffinityOutput {
	return i.ToBuildSpecTasksBuilderAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityArgs) ToBuildSpecTasksBuilderAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityOutput)
}

func (i BuildSpecTasksBuilderAffinityArgs) ToBuildSpecTasksBuilderAffinityPtrOutput() BuildSpecTasksBuilderAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityArgs) ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityOutput).ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityArgs, BuildSpecTasksBuilderAffinityPtr and BuildSpecTasksBuilderAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPtrOutput() BuildSpecTasksBuilderAffinityPtrOutput
	ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPtrOutput
}

type buildSpecTasksBuilderAffinityPtrType BuildSpecTasksBuilderAffinityArgs

func BuildSpecTasksBuilderAffinityPtr(v *BuildSpecTasksBuilderAffinityArgs) BuildSpecTasksBuilderAffinityPtrInput {
	return (*buildSpecTasksBuilderAffinityPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinity)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPtrType) ToBuildSpecTasksBuilderAffinityPtrOutput() BuildSpecTasksBuilderAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPtrType) ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPtrOutput)
}

// Affinity is a group of affinity scheduling rules.
type BuildSpecTasksBuilderAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityOutput) ToBuildSpecTasksBuilderAffinityOutput() BuildSpecTasksBuilderAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityOutput) ToBuildSpecTasksBuilderAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityOutput) ToBuildSpecTasksBuilderAffinityPtrOutput() BuildSpecTasksBuilderAffinityPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityOutput) ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinity {
		return &v
	}).(BuildSpecTasksBuilderAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o BuildSpecTasksBuilderAffinityOutput) NodeAffinity() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinityNodeAffinity {
		return v.NodeAffinity
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksBuilderAffinityOutput) PodAffinity() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinityPodAffinity { return v.PodAffinity }).(BuildSpecTasksBuilderAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksBuilderAffinityOutput) PodAntiAffinity() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput)
}

type BuildSpecTasksBuilderAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityPtrOutput() BuildSpecTasksBuilderAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPtrOutput) Elem() BuildSpecTasksBuilderAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinity) BuildSpecTasksBuilderAffinity { return *v }).(BuildSpecTasksBuilderAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o BuildSpecTasksBuilderAffinityPtrOutput) NodeAffinity() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksBuilderAffinityPtrOutput) PodAffinity() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(BuildSpecTasksBuilderAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksBuilderAffinityPtrOutput) PodAntiAffinity() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinity) *BuildSpecTasksBuilderAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type BuildSpecTasksBuilderAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityArgs and BuildSpecTasksBuilderAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityOutput() BuildSpecTasksBuilderAffinityNodeAffinityOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type BuildSpecTasksBuilderAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinity)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityOutput() BuildSpecTasksBuilderAffinityNodeAffinityOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityOutput)
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityOutput).ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityNodeAffinityPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityArgs, BuildSpecTasksBuilderAffinityNodeAffinityPtr and BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput
}

type buildSpecTasksBuilderAffinityNodeAffinityPtrType BuildSpecTasksBuilderAffinityNodeAffinityArgs

func BuildSpecTasksBuilderAffinityNodeAffinityPtr(v *BuildSpecTasksBuilderAffinityNodeAffinityArgs) BuildSpecTasksBuilderAffinityNodeAffinityPtrInput {
	return (*buildSpecTasksBuilderAffinityNodeAffinityPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityNodeAffinity)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityNodeAffinityPtrType) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityNodeAffinityPtrType) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type BuildSpecTasksBuilderAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityOutput() BuildSpecTasksBuilderAffinityNodeAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinity) *BuildSpecTasksBuilderAffinityNodeAffinity {
		return &v
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksBuilderAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinity) []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o BuildSpecTasksBuilderAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinity) *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityNodeAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput) Elem() BuildSpecTasksBuilderAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityNodeAffinity) BuildSpecTasksBuilderAffinityNodeAffinity {
		return *v
	}).(BuildSpecTasksBuilderAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityNodeAffinity) []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityNodeAffinity) *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type buildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*buildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return *v
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToBuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksBuilderAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// BuildSpecTasksBuilderAffinityPodAffinityInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityArgs and BuildSpecTasksBuilderAffinityPodAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityOutput() BuildSpecTasksBuilderAffinityPodAffinityOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksBuilderAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinity)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAffinityOutput() BuildSpecTasksBuilderAffinityPodAffinityOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityOutput)
}

func (i BuildSpecTasksBuilderAffinityPodAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityOutput).ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPodAffinityPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityArgs, BuildSpecTasksBuilderAffinityPodAffinityPtr and BuildSpecTasksBuilderAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPtrOutput
}

type buildSpecTasksBuilderAffinityPodAffinityPtrType BuildSpecTasksBuilderAffinityPodAffinityArgs

func BuildSpecTasksBuilderAffinityPodAffinityPtr(v *BuildSpecTasksBuilderAffinityPodAffinityArgs) BuildSpecTasksBuilderAffinityPodAffinityPtrInput {
	return (*buildSpecTasksBuilderAffinityPodAffinityPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAffinity)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPodAffinityPtrType) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPodAffinityPtrType) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksBuilderAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAffinityOutput() BuildSpecTasksBuilderAffinityPodAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityPodAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinity) *BuildSpecTasksBuilderAffinityPodAffinity {
		return &v
	}).(BuildSpecTasksBuilderAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksBuilderAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinity) []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksBuilderAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinity) []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPtrOutput) Elem() BuildSpecTasksBuilderAffinityPodAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinity) BuildSpecTasksBuilderAffinityPodAffinity { return *v }).(BuildSpecTasksBuilderAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksBuilderAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinity) []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksBuilderAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinity) []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type buildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*buildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type buildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*buildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksBuilderAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksBuilderAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinity)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityOutput)
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityOutput).ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityArgs, BuildSpecTasksBuilderAffinityPodAntiAffinityPtr and BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput
}

type buildSpecTasksBuilderAffinityPodAntiAffinityPtrType BuildSpecTasksBuilderAffinityPodAntiAffinityArgs

func BuildSpecTasksBuilderAffinityPodAntiAffinityPtr(v *BuildSpecTasksBuilderAffinityPodAntiAffinityArgs) BuildSpecTasksBuilderAffinityPodAntiAffinityPtrInput {
	return (*buildSpecTasksBuilderAffinityPodAntiAffinityPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPodAntiAffinityPtrType) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPodAntiAffinityPtrType) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksBuilderAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinity) *BuildSpecTasksBuilderAffinityPodAntiAffinity {
		return &v
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinity) []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinity) []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAntiAffinity)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput) Elem() BuildSpecTasksBuilderAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinity) BuildSpecTasksBuilderAffinityPodAntiAffinity {
		return *v
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinity) []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinity) []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type buildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*buildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type buildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*buildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*buildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// MavenSpec --
type BuildSpecTasksBuilderMaven struct {
	LocalRepository *string `pulumi:"localRepository"`
	// ValueSource --
	Settings *BuildSpecTasksBuilderMavenSettings `pulumi:"settings"`
	Timeout  *string                             `pulumi:"timeout"`
}

// BuildSpecTasksBuilderMavenInput is an input type that accepts BuildSpecTasksBuilderMavenArgs and BuildSpecTasksBuilderMavenOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenInput` via:
//
//          BuildSpecTasksBuilderMavenArgs{...}
type BuildSpecTasksBuilderMavenInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenOutput() BuildSpecTasksBuilderMavenOutput
	ToBuildSpecTasksBuilderMavenOutputWithContext(context.Context) BuildSpecTasksBuilderMavenOutput
}

// MavenSpec --
type BuildSpecTasksBuilderMavenArgs struct {
	LocalRepository pulumi.StringPtrInput `pulumi:"localRepository"`
	// ValueSource --
	Settings BuildSpecTasksBuilderMavenSettingsPtrInput `pulumi:"settings"`
	Timeout  pulumi.StringPtrInput                      `pulumi:"timeout"`
}

func (BuildSpecTasksBuilderMavenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMaven)(nil)).Elem()
}

func (i BuildSpecTasksBuilderMavenArgs) ToBuildSpecTasksBuilderMavenOutput() BuildSpecTasksBuilderMavenOutput {
	return i.ToBuildSpecTasksBuilderMavenOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenArgs) ToBuildSpecTasksBuilderMavenOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenOutput)
}

func (i BuildSpecTasksBuilderMavenArgs) ToBuildSpecTasksBuilderMavenPtrOutput() BuildSpecTasksBuilderMavenPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenArgs) ToBuildSpecTasksBuilderMavenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenOutput).ToBuildSpecTasksBuilderMavenPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderMavenPtrInput is an input type that accepts BuildSpecTasksBuilderMavenArgs, BuildSpecTasksBuilderMavenPtr and BuildSpecTasksBuilderMavenPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenPtrInput` via:
//
//          BuildSpecTasksBuilderMavenArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderMavenPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenPtrOutput() BuildSpecTasksBuilderMavenPtrOutput
	ToBuildSpecTasksBuilderMavenPtrOutputWithContext(context.Context) BuildSpecTasksBuilderMavenPtrOutput
}

type buildSpecTasksBuilderMavenPtrType BuildSpecTasksBuilderMavenArgs

func BuildSpecTasksBuilderMavenPtr(v *BuildSpecTasksBuilderMavenArgs) BuildSpecTasksBuilderMavenPtrInput {
	return (*buildSpecTasksBuilderMavenPtrType)(v)
}

func (*buildSpecTasksBuilderMavenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMaven)(nil)).Elem()
}

func (i *buildSpecTasksBuilderMavenPtrType) ToBuildSpecTasksBuilderMavenPtrOutput() BuildSpecTasksBuilderMavenPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderMavenPtrType) ToBuildSpecTasksBuilderMavenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenPtrOutput)
}

// MavenSpec --
type BuildSpecTasksBuilderMavenOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMaven)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenOutput) ToBuildSpecTasksBuilderMavenOutput() BuildSpecTasksBuilderMavenOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenOutput) ToBuildSpecTasksBuilderMavenOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenOutput) ToBuildSpecTasksBuilderMavenPtrOutput() BuildSpecTasksBuilderMavenPtrOutput {
	return o.ToBuildSpecTasksBuilderMavenPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderMavenOutput) ToBuildSpecTasksBuilderMavenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMaven) *BuildSpecTasksBuilderMaven {
		return &v
	}).(BuildSpecTasksBuilderMavenPtrOutput)
}
func (o BuildSpecTasksBuilderMavenOutput) LocalRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMaven) *string { return v.LocalRepository }).(pulumi.StringPtrOutput)
}

// ValueSource --
func (o BuildSpecTasksBuilderMavenOutput) Settings() BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMaven) *BuildSpecTasksBuilderMavenSettings { return v.Settings }).(BuildSpecTasksBuilderMavenSettingsPtrOutput)
}

func (o BuildSpecTasksBuilderMavenOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMaven) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderMavenPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMaven)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenPtrOutput) ToBuildSpecTasksBuilderMavenPtrOutput() BuildSpecTasksBuilderMavenPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenPtrOutput) ToBuildSpecTasksBuilderMavenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenPtrOutput) Elem() BuildSpecTasksBuilderMavenOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMaven) BuildSpecTasksBuilderMaven { return *v }).(BuildSpecTasksBuilderMavenOutput)
}

func (o BuildSpecTasksBuilderMavenPtrOutput) LocalRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMaven) *string {
		if v == nil {
			return nil
		}
		return v.LocalRepository
	}).(pulumi.StringPtrOutput)
}

// ValueSource --
func (o BuildSpecTasksBuilderMavenPtrOutput) Settings() BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMaven) *BuildSpecTasksBuilderMavenSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(BuildSpecTasksBuilderMavenSettingsPtrOutput)
}

func (o BuildSpecTasksBuilderMavenPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMaven) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// ValueSource --
type BuildSpecTasksBuilderMavenSettings struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a key of a secret.
	SecretKeyRef *BuildSpecTasksBuilderMavenSettingsSecretKeyRef `pulumi:"secretKeyRef"`
}

// BuildSpecTasksBuilderMavenSettingsInput is an input type that accepts BuildSpecTasksBuilderMavenSettingsArgs and BuildSpecTasksBuilderMavenSettingsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenSettingsInput` via:
//
//          BuildSpecTasksBuilderMavenSettingsArgs{...}
type BuildSpecTasksBuilderMavenSettingsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenSettingsOutput() BuildSpecTasksBuilderMavenSettingsOutput
	ToBuildSpecTasksBuilderMavenSettingsOutputWithContext(context.Context) BuildSpecTasksBuilderMavenSettingsOutput
}

// ValueSource --
type BuildSpecTasksBuilderMavenSettingsArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a key of a secret.
	SecretKeyRef BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (BuildSpecTasksBuilderMavenSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMavenSettings)(nil)).Elem()
}

func (i BuildSpecTasksBuilderMavenSettingsArgs) ToBuildSpecTasksBuilderMavenSettingsOutput() BuildSpecTasksBuilderMavenSettingsOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenSettingsArgs) ToBuildSpecTasksBuilderMavenSettingsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsOutput)
}

func (i BuildSpecTasksBuilderMavenSettingsArgs) ToBuildSpecTasksBuilderMavenSettingsPtrOutput() BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenSettingsArgs) ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsOutput).ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderMavenSettingsPtrInput is an input type that accepts BuildSpecTasksBuilderMavenSettingsArgs, BuildSpecTasksBuilderMavenSettingsPtr and BuildSpecTasksBuilderMavenSettingsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenSettingsPtrInput` via:
//
//          BuildSpecTasksBuilderMavenSettingsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderMavenSettingsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenSettingsPtrOutput() BuildSpecTasksBuilderMavenSettingsPtrOutput
	ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(context.Context) BuildSpecTasksBuilderMavenSettingsPtrOutput
}

type buildSpecTasksBuilderMavenSettingsPtrType BuildSpecTasksBuilderMavenSettingsArgs

func BuildSpecTasksBuilderMavenSettingsPtr(v *BuildSpecTasksBuilderMavenSettingsArgs) BuildSpecTasksBuilderMavenSettingsPtrInput {
	return (*buildSpecTasksBuilderMavenSettingsPtrType)(v)
}

func (*buildSpecTasksBuilderMavenSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMavenSettings)(nil)).Elem()
}

func (i *buildSpecTasksBuilderMavenSettingsPtrType) ToBuildSpecTasksBuilderMavenSettingsPtrOutput() BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderMavenSettingsPtrType) ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsPtrOutput)
}

// ValueSource --
type BuildSpecTasksBuilderMavenSettingsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMavenSettings)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenSettingsOutput) ToBuildSpecTasksBuilderMavenSettingsOutput() BuildSpecTasksBuilderMavenSettingsOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsOutput) ToBuildSpecTasksBuilderMavenSettingsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsOutput) ToBuildSpecTasksBuilderMavenSettingsPtrOutput() BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return o.ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderMavenSettingsOutput) ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettings) *BuildSpecTasksBuilderMavenSettings {
		return &v
	}).(BuildSpecTasksBuilderMavenSettingsPtrOutput)
}

// Selects a key of a ConfigMap.
func (o BuildSpecTasksBuilderMavenSettingsOutput) ConfigMapKeyRef() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettings) *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret.
func (o BuildSpecTasksBuilderMavenSettingsOutput) SecretKeyRef() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettings) *BuildSpecTasksBuilderMavenSettingsSecretKeyRef {
		return v.SecretKeyRef
	}).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput)
}

type BuildSpecTasksBuilderMavenSettingsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMavenSettings)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenSettingsPtrOutput) ToBuildSpecTasksBuilderMavenSettingsPtrOutput() BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsPtrOutput) ToBuildSpecTasksBuilderMavenSettingsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsPtrOutput) Elem() BuildSpecTasksBuilderMavenSettingsOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettings) BuildSpecTasksBuilderMavenSettings { return *v }).(BuildSpecTasksBuilderMavenSettingsOutput)
}

// Selects a key of a ConfigMap.
func (o BuildSpecTasksBuilderMavenSettingsPtrOutput) ConfigMapKeyRef() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettings) *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret.
func (o BuildSpecTasksBuilderMavenSettingsPtrOutput) SecretKeyRef() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettings) *BuildSpecTasksBuilderMavenSettingsSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefInput is an input type that accepts BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs and BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefInput` via:
//
//          BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs{...}
type BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput
	ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutputWithContext(context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput)
}

func (i BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput).ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrInput is an input type that accepts BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs, BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtr and BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrInput` via:
//
//          BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput
	ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput
}

type buildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrType BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs

func BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtr(v *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefArgs) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrInput {
	return (*buildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrType)(v)
}

func (*buildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrType) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrType) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return o.ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef {
		return &v
	}).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) ToBuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) Elem() BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef {
		return *v
	}).(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput)
}

// The key to select.
func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a key of a secret.
type BuildSpecTasksBuilderMavenSettingsSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksBuilderMavenSettingsSecretKeyRefInput is an input type that accepts BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs and BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenSettingsSecretKeyRefInput` via:
//
//          BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs{...}
type BuildSpecTasksBuilderMavenSettingsSecretKeyRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput
	ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutputWithContext(context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput
}

// Selects a key of a secret.
type BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMavenSettingsSecretKeyRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput)
}

func (i BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput).ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrInput is an input type that accepts BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs, BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtr and BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrInput` via:
//
//          BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput
	ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput
}

type buildSpecTasksBuilderMavenSettingsSecretKeyRefPtrType BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs

func BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtr(v *BuildSpecTasksBuilderMavenSettingsSecretKeyRefArgs) BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrInput {
	return (*buildSpecTasksBuilderMavenSettingsSecretKeyRefPtrType)(v)
}

func (*buildSpecTasksBuilderMavenSettingsSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMavenSettingsSecretKeyRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderMavenSettingsSecretKeyRefPtrType) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return i.ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderMavenSettingsSecretKeyRefPtrType) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput)
}

// Selects a key of a secret.
type BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderMavenSettingsSecretKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return o.ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsSecretKeyRef) *BuildSpecTasksBuilderMavenSettingsSecretKeyRef {
		return &v
	}).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderMavenSettingsSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderMavenSettingsSecretKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput() BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) ToBuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) Elem() BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsSecretKeyRef) BuildSpecTasksBuilderMavenSettingsSecretKeyRef {
		return *v
	}).(BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderMavenSettingsSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderProperties struct {
}

// BuildSpecTasksBuilderPropertiesInput is an input type that accepts BuildSpecTasksBuilderPropertiesArgs and BuildSpecTasksBuilderPropertiesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderPropertiesInput` via:
//
//          BuildSpecTasksBuilderPropertiesArgs{...}
type BuildSpecTasksBuilderPropertiesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderPropertiesOutput() BuildSpecTasksBuilderPropertiesOutput
	ToBuildSpecTasksBuilderPropertiesOutputWithContext(context.Context) BuildSpecTasksBuilderPropertiesOutput
}

type BuildSpecTasksBuilderPropertiesArgs struct {
}

func (BuildSpecTasksBuilderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderProperties)(nil)).Elem()
}

func (i BuildSpecTasksBuilderPropertiesArgs) ToBuildSpecTasksBuilderPropertiesOutput() BuildSpecTasksBuilderPropertiesOutput {
	return i.ToBuildSpecTasksBuilderPropertiesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderPropertiesArgs) ToBuildSpecTasksBuilderPropertiesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderPropertiesOutput)
}

type BuildSpecTasksBuilderPropertiesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderProperties)(nil)).Elem()
}

func (o BuildSpecTasksBuilderPropertiesOutput) ToBuildSpecTasksBuilderPropertiesOutput() BuildSpecTasksBuilderPropertiesOutput {
	return o
}

func (o BuildSpecTasksBuilderPropertiesOutput) ToBuildSpecTasksBuilderPropertiesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderPropertiesOutput {
	return o
}

// ResourceSpec --
type BuildSpecTasksBuilderResources struct {
	Compression *bool   `pulumi:"compression"`
	Content     *string `pulumi:"content"`
	ContentKey  *string `pulumi:"contentKey"`
	ContentRef  *string `pulumi:"contentRef"`
	MountPath   *string `pulumi:"mountPath"`
	Name        *string `pulumi:"name"`
	// ResourceType --
	Type *string `pulumi:"type"`
}

// BuildSpecTasksBuilderResourcesInput is an input type that accepts BuildSpecTasksBuilderResourcesArgs and BuildSpecTasksBuilderResourcesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderResourcesInput` via:
//
//          BuildSpecTasksBuilderResourcesArgs{...}
type BuildSpecTasksBuilderResourcesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderResourcesOutput() BuildSpecTasksBuilderResourcesOutput
	ToBuildSpecTasksBuilderResourcesOutputWithContext(context.Context) BuildSpecTasksBuilderResourcesOutput
}

// ResourceSpec --
type BuildSpecTasksBuilderResourcesArgs struct {
	Compression pulumi.BoolPtrInput   `pulumi:"compression"`
	Content     pulumi.StringPtrInput `pulumi:"content"`
	ContentKey  pulumi.StringPtrInput `pulumi:"contentKey"`
	ContentRef  pulumi.StringPtrInput `pulumi:"contentRef"`
	MountPath   pulumi.StringPtrInput `pulumi:"mountPath"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	// ResourceType --
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BuildSpecTasksBuilderResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderResources)(nil)).Elem()
}

func (i BuildSpecTasksBuilderResourcesArgs) ToBuildSpecTasksBuilderResourcesOutput() BuildSpecTasksBuilderResourcesOutput {
	return i.ToBuildSpecTasksBuilderResourcesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderResourcesArgs) ToBuildSpecTasksBuilderResourcesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderResourcesOutput)
}

// BuildSpecTasksBuilderResourcesArrayInput is an input type that accepts BuildSpecTasksBuilderResourcesArray and BuildSpecTasksBuilderResourcesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderResourcesArrayInput` via:
//
//          BuildSpecTasksBuilderResourcesArray{ BuildSpecTasksBuilderResourcesArgs{...} }
type BuildSpecTasksBuilderResourcesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderResourcesArrayOutput() BuildSpecTasksBuilderResourcesArrayOutput
	ToBuildSpecTasksBuilderResourcesArrayOutputWithContext(context.Context) BuildSpecTasksBuilderResourcesArrayOutput
}

type BuildSpecTasksBuilderResourcesArray []BuildSpecTasksBuilderResourcesInput

func (BuildSpecTasksBuilderResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderResources)(nil)).Elem()
}

func (i BuildSpecTasksBuilderResourcesArray) ToBuildSpecTasksBuilderResourcesArrayOutput() BuildSpecTasksBuilderResourcesArrayOutput {
	return i.ToBuildSpecTasksBuilderResourcesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderResourcesArray) ToBuildSpecTasksBuilderResourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderResourcesArrayOutput)
}

// ResourceSpec --
type BuildSpecTasksBuilderResourcesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderResources)(nil)).Elem()
}

func (o BuildSpecTasksBuilderResourcesOutput) ToBuildSpecTasksBuilderResourcesOutput() BuildSpecTasksBuilderResourcesOutput {
	return o
}

func (o BuildSpecTasksBuilderResourcesOutput) ToBuildSpecTasksBuilderResourcesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderResourcesOutput {
	return o
}

func (o BuildSpecTasksBuilderResourcesOutput) Compression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *bool { return v.Compression }).(pulumi.BoolPtrOutput)
}

func (o BuildSpecTasksBuilderResourcesOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderResourcesOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *string { return v.ContentKey }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderResourcesOutput) ContentRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *string { return v.ContentRef }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderResourcesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderResourcesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ResourceType --
func (o BuildSpecTasksBuilderResourcesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderResources) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderResourcesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderResources)(nil)).Elem()
}

func (o BuildSpecTasksBuilderResourcesArrayOutput) ToBuildSpecTasksBuilderResourcesArrayOutput() BuildSpecTasksBuilderResourcesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderResourcesArrayOutput) ToBuildSpecTasksBuilderResourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderResourcesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderResourcesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderResources {
		return vs[0].([]BuildSpecTasksBuilderResources)[vs[1].(int)]
	}).(BuildSpecTasksBuilderResourcesOutput)
}

// RuntimeSpec --
type BuildSpecTasksBuilderRuntime struct {
	ApplicationClass string                                              `pulumi:"applicationClass"`
	Capabilities     map[string]BuildSpecTasksBuilderRuntimeCapabilities `pulumi:"capabilities"`
	Dependencies     []BuildSpecTasksBuilderRuntimeDependencies          `pulumi:"dependencies"`
	Metadata         map[string]string                                   `pulumi:"metadata"`
	// RuntimeProvider --
	Provider string `pulumi:"provider"`
	Version  string `pulumi:"version"`
}

// BuildSpecTasksBuilderRuntimeInput is an input type that accepts BuildSpecTasksBuilderRuntimeArgs and BuildSpecTasksBuilderRuntimeOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeInput` via:
//
//          BuildSpecTasksBuilderRuntimeArgs{...}
type BuildSpecTasksBuilderRuntimeInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeOutput() BuildSpecTasksBuilderRuntimeOutput
	ToBuildSpecTasksBuilderRuntimeOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeOutput
}

// RuntimeSpec --
type BuildSpecTasksBuilderRuntimeArgs struct {
	ApplicationClass pulumi.StringInput                                 `pulumi:"applicationClass"`
	Capabilities     BuildSpecTasksBuilderRuntimeCapabilitiesMapInput   `pulumi:"capabilities"`
	Dependencies     BuildSpecTasksBuilderRuntimeDependenciesArrayInput `pulumi:"dependencies"`
	Metadata         pulumi.StringMapInput                              `pulumi:"metadata"`
	// RuntimeProvider --
	Provider pulumi.StringInput `pulumi:"provider"`
	Version  pulumi.StringInput `pulumi:"version"`
}

func (BuildSpecTasksBuilderRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntime)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeArgs) ToBuildSpecTasksBuilderRuntimeOutput() BuildSpecTasksBuilderRuntimeOutput {
	return i.ToBuildSpecTasksBuilderRuntimeOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeArgs) ToBuildSpecTasksBuilderRuntimeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeOutput)
}

func (i BuildSpecTasksBuilderRuntimeArgs) ToBuildSpecTasksBuilderRuntimePtrOutput() BuildSpecTasksBuilderRuntimePtrOutput {
	return i.ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeArgs) ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeOutput).ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderRuntimePtrInput is an input type that accepts BuildSpecTasksBuilderRuntimeArgs, BuildSpecTasksBuilderRuntimePtr and BuildSpecTasksBuilderRuntimePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimePtrInput` via:
//
//          BuildSpecTasksBuilderRuntimeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderRuntimePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimePtrOutput() BuildSpecTasksBuilderRuntimePtrOutput
	ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimePtrOutput
}

type buildSpecTasksBuilderRuntimePtrType BuildSpecTasksBuilderRuntimeArgs

func BuildSpecTasksBuilderRuntimePtr(v *BuildSpecTasksBuilderRuntimeArgs) BuildSpecTasksBuilderRuntimePtrInput {
	return (*buildSpecTasksBuilderRuntimePtrType)(v)
}

func (*buildSpecTasksBuilderRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderRuntime)(nil)).Elem()
}

func (i *buildSpecTasksBuilderRuntimePtrType) ToBuildSpecTasksBuilderRuntimePtrOutput() BuildSpecTasksBuilderRuntimePtrOutput {
	return i.ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderRuntimePtrType) ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimePtrOutput)
}

// RuntimeSpec --
type BuildSpecTasksBuilderRuntimeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntime)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeOutput) ToBuildSpecTasksBuilderRuntimeOutput() BuildSpecTasksBuilderRuntimeOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeOutput) ToBuildSpecTasksBuilderRuntimeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeOutput) ToBuildSpecTasksBuilderRuntimePtrOutput() BuildSpecTasksBuilderRuntimePtrOutput {
	return o.ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderRuntimeOutput) ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) *BuildSpecTasksBuilderRuntime {
		return &v
	}).(BuildSpecTasksBuilderRuntimePtrOutput)
}
func (o BuildSpecTasksBuilderRuntimeOutput) ApplicationClass() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) string { return v.ApplicationClass }).(pulumi.StringOutput)
}

func (o BuildSpecTasksBuilderRuntimeOutput) Capabilities() BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) map[string]BuildSpecTasksBuilderRuntimeCapabilities {
		return v.Capabilities
	}).(BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput)
}

func (o BuildSpecTasksBuilderRuntimeOutput) Dependencies() BuildSpecTasksBuilderRuntimeDependenciesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) []BuildSpecTasksBuilderRuntimeDependencies { return v.Dependencies }).(BuildSpecTasksBuilderRuntimeDependenciesArrayOutput)
}

func (o BuildSpecTasksBuilderRuntimeOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// RuntimeProvider --
func (o BuildSpecTasksBuilderRuntimeOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) string { return v.Provider }).(pulumi.StringOutput)
}

func (o BuildSpecTasksBuilderRuntimeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntime) string { return v.Version }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderRuntimePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderRuntime)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) ToBuildSpecTasksBuilderRuntimePtrOutput() BuildSpecTasksBuilderRuntimePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) ToBuildSpecTasksBuilderRuntimePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) Elem() BuildSpecTasksBuilderRuntimeOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) BuildSpecTasksBuilderRuntime { return *v }).(BuildSpecTasksBuilderRuntimeOutput)
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) ApplicationClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationClass
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) Capabilities() BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) map[string]BuildSpecTasksBuilderRuntimeCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput)
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) Dependencies() BuildSpecTasksBuilderRuntimeDependenciesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) []BuildSpecTasksBuilderRuntimeDependencies {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(BuildSpecTasksBuilderRuntimeDependenciesArrayOutput)
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// RuntimeProvider --
func (o BuildSpecTasksBuilderRuntimePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderRuntimePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Capability --
type BuildSpecTasksBuilderRuntimeCapabilities struct {
	Dependencies []BuildSpecTasksBuilderRuntimeCapabilitiesDependencies `pulumi:"dependencies"`
	Metadata     map[string]string                                      `pulumi:"metadata"`
}

// BuildSpecTasksBuilderRuntimeCapabilitiesInput is an input type that accepts BuildSpecTasksBuilderRuntimeCapabilitiesArgs and BuildSpecTasksBuilderRuntimeCapabilitiesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeCapabilitiesInput` via:
//
//          BuildSpecTasksBuilderRuntimeCapabilitiesArgs{...}
type BuildSpecTasksBuilderRuntimeCapabilitiesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeCapabilitiesOutput() BuildSpecTasksBuilderRuntimeCapabilitiesOutput
	ToBuildSpecTasksBuilderRuntimeCapabilitiesOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesOutput
}

// Capability --
type BuildSpecTasksBuilderRuntimeCapabilitiesArgs struct {
	Dependencies BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayInput `pulumi:"dependencies"`
	Metadata     pulumi.StringMapInput                                          `pulumi:"metadata"`
}

func (BuildSpecTasksBuilderRuntimeCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeCapabilities)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesArgs) ToBuildSpecTasksBuilderRuntimeCapabilitiesOutput() BuildSpecTasksBuilderRuntimeCapabilitiesOutput {
	return i.ToBuildSpecTasksBuilderRuntimeCapabilitiesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesArgs) ToBuildSpecTasksBuilderRuntimeCapabilitiesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeCapabilitiesOutput)
}

// BuildSpecTasksBuilderRuntimeCapabilitiesMapInput is an input type that accepts BuildSpecTasksBuilderRuntimeCapabilitiesMap and BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeCapabilitiesMapInput` via:
//
//          BuildSpecTasksBuilderRuntimeCapabilitiesMap{ "key": BuildSpecTasksBuilderRuntimeCapabilitiesArgs{...} }
type BuildSpecTasksBuilderRuntimeCapabilitiesMapInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutput() BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput
	ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput
}

type BuildSpecTasksBuilderRuntimeCapabilitiesMap map[string]BuildSpecTasksBuilderRuntimeCapabilitiesInput

func (BuildSpecTasksBuilderRuntimeCapabilitiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BuildSpecTasksBuilderRuntimeCapabilities)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesMap) ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutput() BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput {
	return i.ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesMap) ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput)
}

// Capability --
type BuildSpecTasksBuilderRuntimeCapabilitiesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeCapabilities)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesOutput() BuildSpecTasksBuilderRuntimeCapabilitiesOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesOutput) Dependencies() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeCapabilities) []BuildSpecTasksBuilderRuntimeCapabilitiesDependencies {
		return v.Dependencies
	}).(BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput)
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeCapabilities) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BuildSpecTasksBuilderRuntimeCapabilities)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutput() BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesMapOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput) MapIndex(k pulumi.StringInput) BuildSpecTasksBuilderRuntimeCapabilitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderRuntimeCapabilities {
		return vs[0].(map[string]BuildSpecTasksBuilderRuntimeCapabilities)[vs[1].(string)]
	}).(BuildSpecTasksBuilderRuntimeCapabilitiesOutput)
}

// MavenArtifact --
type BuildSpecTasksBuilderRuntimeCapabilitiesDependencies struct {
	ArtifactId string  `pulumi:"artifactId"`
	GroupId    string  `pulumi:"groupId"`
	Version    *string `pulumi:"version"`
}

// BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesInput is an input type that accepts BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs and BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesInput` via:
//
//          BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs{...}
type BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput
	ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput
}

// MavenArtifact --
type BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs struct {
	ArtifactId pulumi.StringInput    `pulumi:"artifactId"`
	GroupId    pulumi.StringInput    `pulumi:"groupId"`
	Version    pulumi.StringPtrInput `pulumi:"version"`
}

func (BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeCapabilitiesDependencies)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput {
	return i.ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput)
}

// BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayInput is an input type that accepts BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArray and BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayInput` via:
//
//          BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArray{ BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArgs{...} }
type BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput
	ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput
}

type BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArray []BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesInput

func (BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderRuntimeCapabilitiesDependencies)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArray) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput {
	return i.ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArray) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput)
}

// MavenArtifact --
type BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeCapabilitiesDependencies)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeCapabilitiesDependencies) string { return v.ArtifactId }).(pulumi.StringOutput)
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeCapabilitiesDependencies) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeCapabilitiesDependencies) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderRuntimeCapabilitiesDependencies)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput() BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderRuntimeCapabilitiesDependencies {
		return vs[0].([]BuildSpecTasksBuilderRuntimeCapabilitiesDependencies)[vs[1].(int)]
	}).(BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput)
}

type BuildSpecTasksBuilderRuntimeCapabilitiesMetadata struct {
}

// BuildSpecTasksBuilderRuntimeCapabilitiesMetadataInput is an input type that accepts BuildSpecTasksBuilderRuntimeCapabilitiesMetadataArgs and BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeCapabilitiesMetadataInput` via:
//
//          BuildSpecTasksBuilderRuntimeCapabilitiesMetadataArgs{...}
type BuildSpecTasksBuilderRuntimeCapabilitiesMetadataInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput() BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput
	ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput
}

type BuildSpecTasksBuilderRuntimeCapabilitiesMetadataArgs struct {
}

func (BuildSpecTasksBuilderRuntimeCapabilitiesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeCapabilitiesMetadata)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesMetadataArgs) ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput() BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput {
	return i.ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeCapabilitiesMetadataArgs) ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput)
}

type BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeCapabilitiesMetadata)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput() BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput) ToBuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput {
	return o
}

// MavenArtifact --
type BuildSpecTasksBuilderRuntimeDependencies struct {
	ArtifactId string  `pulumi:"artifactId"`
	GroupId    string  `pulumi:"groupId"`
	Version    *string `pulumi:"version"`
}

// BuildSpecTasksBuilderRuntimeDependenciesInput is an input type that accepts BuildSpecTasksBuilderRuntimeDependenciesArgs and BuildSpecTasksBuilderRuntimeDependenciesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeDependenciesInput` via:
//
//          BuildSpecTasksBuilderRuntimeDependenciesArgs{...}
type BuildSpecTasksBuilderRuntimeDependenciesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeDependenciesOutput() BuildSpecTasksBuilderRuntimeDependenciesOutput
	ToBuildSpecTasksBuilderRuntimeDependenciesOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeDependenciesOutput
}

// MavenArtifact --
type BuildSpecTasksBuilderRuntimeDependenciesArgs struct {
	ArtifactId pulumi.StringInput    `pulumi:"artifactId"`
	GroupId    pulumi.StringInput    `pulumi:"groupId"`
	Version    pulumi.StringPtrInput `pulumi:"version"`
}

func (BuildSpecTasksBuilderRuntimeDependenciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeDependencies)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeDependenciesArgs) ToBuildSpecTasksBuilderRuntimeDependenciesOutput() BuildSpecTasksBuilderRuntimeDependenciesOutput {
	return i.ToBuildSpecTasksBuilderRuntimeDependenciesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeDependenciesArgs) ToBuildSpecTasksBuilderRuntimeDependenciesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeDependenciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeDependenciesOutput)
}

// BuildSpecTasksBuilderRuntimeDependenciesArrayInput is an input type that accepts BuildSpecTasksBuilderRuntimeDependenciesArray and BuildSpecTasksBuilderRuntimeDependenciesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeDependenciesArrayInput` via:
//
//          BuildSpecTasksBuilderRuntimeDependenciesArray{ BuildSpecTasksBuilderRuntimeDependenciesArgs{...} }
type BuildSpecTasksBuilderRuntimeDependenciesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutput() BuildSpecTasksBuilderRuntimeDependenciesArrayOutput
	ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeDependenciesArrayOutput
}

type BuildSpecTasksBuilderRuntimeDependenciesArray []BuildSpecTasksBuilderRuntimeDependenciesInput

func (BuildSpecTasksBuilderRuntimeDependenciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderRuntimeDependencies)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeDependenciesArray) ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutput() BuildSpecTasksBuilderRuntimeDependenciesArrayOutput {
	return i.ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeDependenciesArray) ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeDependenciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeDependenciesArrayOutput)
}

// MavenArtifact --
type BuildSpecTasksBuilderRuntimeDependenciesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeDependenciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeDependencies)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeDependenciesOutput) ToBuildSpecTasksBuilderRuntimeDependenciesOutput() BuildSpecTasksBuilderRuntimeDependenciesOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeDependenciesOutput) ToBuildSpecTasksBuilderRuntimeDependenciesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeDependenciesOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeDependenciesOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeDependencies) string { return v.ArtifactId }).(pulumi.StringOutput)
}

func (o BuildSpecTasksBuilderRuntimeDependenciesOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeDependencies) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o BuildSpecTasksBuilderRuntimeDependenciesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderRuntimeDependencies) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderRuntimeDependenciesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeDependenciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderRuntimeDependencies)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeDependenciesArrayOutput) ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutput() BuildSpecTasksBuilderRuntimeDependenciesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeDependenciesArrayOutput) ToBuildSpecTasksBuilderRuntimeDependenciesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeDependenciesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeDependenciesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderRuntimeDependenciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderRuntimeDependencies {
		return vs[0].([]BuildSpecTasksBuilderRuntimeDependencies)[vs[1].(int)]
	}).(BuildSpecTasksBuilderRuntimeDependenciesOutput)
}

type BuildSpecTasksBuilderRuntimeMetadata struct {
}

// BuildSpecTasksBuilderRuntimeMetadataInput is an input type that accepts BuildSpecTasksBuilderRuntimeMetadataArgs and BuildSpecTasksBuilderRuntimeMetadataOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderRuntimeMetadataInput` via:
//
//          BuildSpecTasksBuilderRuntimeMetadataArgs{...}
type BuildSpecTasksBuilderRuntimeMetadataInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderRuntimeMetadataOutput() BuildSpecTasksBuilderRuntimeMetadataOutput
	ToBuildSpecTasksBuilderRuntimeMetadataOutputWithContext(context.Context) BuildSpecTasksBuilderRuntimeMetadataOutput
}

type BuildSpecTasksBuilderRuntimeMetadataArgs struct {
}

func (BuildSpecTasksBuilderRuntimeMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeMetadata)(nil)).Elem()
}

func (i BuildSpecTasksBuilderRuntimeMetadataArgs) ToBuildSpecTasksBuilderRuntimeMetadataOutput() BuildSpecTasksBuilderRuntimeMetadataOutput {
	return i.ToBuildSpecTasksBuilderRuntimeMetadataOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderRuntimeMetadataArgs) ToBuildSpecTasksBuilderRuntimeMetadataOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderRuntimeMetadataOutput)
}

type BuildSpecTasksBuilderRuntimeMetadataOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderRuntimeMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderRuntimeMetadata)(nil)).Elem()
}

func (o BuildSpecTasksBuilderRuntimeMetadataOutput) ToBuildSpecTasksBuilderRuntimeMetadataOutput() BuildSpecTasksBuilderRuntimeMetadataOutput {
	return o
}

func (o BuildSpecTasksBuilderRuntimeMetadataOutput) ToBuildSpecTasksBuilderRuntimeMetadataOutputWithContext(ctx context.Context) BuildSpecTasksBuilderRuntimeMetadataOutput {
	return o
}

// SourceSpec --
type BuildSpecTasksBuilderSources struct {
	Compression *bool   `pulumi:"compression"`
	Content     *string `pulumi:"content"`
	ContentKey  *string `pulumi:"contentKey"`
	ContentRef  *string `pulumi:"contentRef"`
	// Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
	Interceptors []string `pulumi:"interceptors"`
	// Language --
	Language *string `pulumi:"language"`
	// Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
	Loader *string `pulumi:"loader"`
	Name   *string `pulumi:"name"`
}

// BuildSpecTasksBuilderSourcesInput is an input type that accepts BuildSpecTasksBuilderSourcesArgs and BuildSpecTasksBuilderSourcesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderSourcesInput` via:
//
//          BuildSpecTasksBuilderSourcesArgs{...}
type BuildSpecTasksBuilderSourcesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderSourcesOutput() BuildSpecTasksBuilderSourcesOutput
	ToBuildSpecTasksBuilderSourcesOutputWithContext(context.Context) BuildSpecTasksBuilderSourcesOutput
}

// SourceSpec --
type BuildSpecTasksBuilderSourcesArgs struct {
	Compression pulumi.BoolPtrInput   `pulumi:"compression"`
	Content     pulumi.StringPtrInput `pulumi:"content"`
	ContentKey  pulumi.StringPtrInput `pulumi:"contentKey"`
	ContentRef  pulumi.StringPtrInput `pulumi:"contentRef"`
	// Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
	Interceptors pulumi.StringArrayInput `pulumi:"interceptors"`
	// Language --
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
	Loader pulumi.StringPtrInput `pulumi:"loader"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderSources)(nil)).Elem()
}

func (i BuildSpecTasksBuilderSourcesArgs) ToBuildSpecTasksBuilderSourcesOutput() BuildSpecTasksBuilderSourcesOutput {
	return i.ToBuildSpecTasksBuilderSourcesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderSourcesArgs) ToBuildSpecTasksBuilderSourcesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderSourcesOutput)
}

// BuildSpecTasksBuilderSourcesArrayInput is an input type that accepts BuildSpecTasksBuilderSourcesArray and BuildSpecTasksBuilderSourcesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderSourcesArrayInput` via:
//
//          BuildSpecTasksBuilderSourcesArray{ BuildSpecTasksBuilderSourcesArgs{...} }
type BuildSpecTasksBuilderSourcesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderSourcesArrayOutput() BuildSpecTasksBuilderSourcesArrayOutput
	ToBuildSpecTasksBuilderSourcesArrayOutputWithContext(context.Context) BuildSpecTasksBuilderSourcesArrayOutput
}

type BuildSpecTasksBuilderSourcesArray []BuildSpecTasksBuilderSourcesInput

func (BuildSpecTasksBuilderSourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderSources)(nil)).Elem()
}

func (i BuildSpecTasksBuilderSourcesArray) ToBuildSpecTasksBuilderSourcesArrayOutput() BuildSpecTasksBuilderSourcesArrayOutput {
	return i.ToBuildSpecTasksBuilderSourcesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderSourcesArray) ToBuildSpecTasksBuilderSourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderSourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderSourcesArrayOutput)
}

// SourceSpec --
type BuildSpecTasksBuilderSourcesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderSources)(nil)).Elem()
}

func (o BuildSpecTasksBuilderSourcesOutput) ToBuildSpecTasksBuilderSourcesOutput() BuildSpecTasksBuilderSourcesOutput {
	return o
}

func (o BuildSpecTasksBuilderSourcesOutput) ToBuildSpecTasksBuilderSourcesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderSourcesOutput {
	return o
}

func (o BuildSpecTasksBuilderSourcesOutput) Compression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *bool { return v.Compression }).(pulumi.BoolPtrOutput)
}

func (o BuildSpecTasksBuilderSourcesOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderSourcesOutput) ContentKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *string { return v.ContentKey }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderSourcesOutput) ContentRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *string { return v.ContentRef }).(pulumi.StringPtrOutput)
}

// Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
func (o BuildSpecTasksBuilderSourcesOutput) Interceptors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) []string { return v.Interceptors }).(pulumi.StringArrayOutput)
}

// Language --
func (o BuildSpecTasksBuilderSourcesOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
func (o BuildSpecTasksBuilderSourcesOutput) Loader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *string { return v.Loader }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksBuilderSourcesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderSources) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderSourcesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderSourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderSources)(nil)).Elem()
}

func (o BuildSpecTasksBuilderSourcesArrayOutput) ToBuildSpecTasksBuilderSourcesArrayOutput() BuildSpecTasksBuilderSourcesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderSourcesArrayOutput) ToBuildSpecTasksBuilderSourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderSourcesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderSourcesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderSourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderSources {
		return vs[0].([]BuildSpecTasksBuilderSources)[vs[1].(int)]
	}).(BuildSpecTasksBuilderSourcesOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildSpecTasksBuilderVolumeMounts struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// BuildSpecTasksBuilderVolumeMountsInput is an input type that accepts BuildSpecTasksBuilderVolumeMountsArgs and BuildSpecTasksBuilderVolumeMountsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumeMountsInput` via:
//
//          BuildSpecTasksBuilderVolumeMountsArgs{...}
type BuildSpecTasksBuilderVolumeMountsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumeMountsOutput() BuildSpecTasksBuilderVolumeMountsOutput
	ToBuildSpecTasksBuilderVolumeMountsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumeMountsOutput
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildSpecTasksBuilderVolumeMountsArgs struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (BuildSpecTasksBuilderVolumeMountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumeMounts)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumeMountsArgs) ToBuildSpecTasksBuilderVolumeMountsOutput() BuildSpecTasksBuilderVolumeMountsOutput {
	return i.ToBuildSpecTasksBuilderVolumeMountsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumeMountsArgs) ToBuildSpecTasksBuilderVolumeMountsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumeMountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumeMountsOutput)
}

// BuildSpecTasksBuilderVolumeMountsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumeMountsArray and BuildSpecTasksBuilderVolumeMountsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumeMountsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumeMountsArray{ BuildSpecTasksBuilderVolumeMountsArgs{...} }
type BuildSpecTasksBuilderVolumeMountsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumeMountsArrayOutput() BuildSpecTasksBuilderVolumeMountsArrayOutput
	ToBuildSpecTasksBuilderVolumeMountsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumeMountsArrayOutput
}

type BuildSpecTasksBuilderVolumeMountsArray []BuildSpecTasksBuilderVolumeMountsInput

func (BuildSpecTasksBuilderVolumeMountsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumeMounts)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumeMountsArray) ToBuildSpecTasksBuilderVolumeMountsArrayOutput() BuildSpecTasksBuilderVolumeMountsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumeMountsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumeMountsArray) ToBuildSpecTasksBuilderVolumeMountsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumeMountsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumeMountsArrayOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildSpecTasksBuilderVolumeMountsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumeMountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumeMounts)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumeMountsOutput) ToBuildSpecTasksBuilderVolumeMountsOutput() BuildSpecTasksBuilderVolumeMountsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumeMountsOutput) ToBuildSpecTasksBuilderVolumeMountsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumeMountsOutput {
	return o
}

// Path within the container at which the volume should be mounted.  Must not contain ':'.
func (o BuildSpecTasksBuilderVolumeMountsOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumeMounts) string { return v.MountPath }).(pulumi.StringOutput)
}

// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
func (o BuildSpecTasksBuilderVolumeMountsOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumeMounts) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o BuildSpecTasksBuilderVolumeMountsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumeMounts) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
func (o BuildSpecTasksBuilderVolumeMountsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumeMounts) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
func (o BuildSpecTasksBuilderVolumeMountsOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumeMounts) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
func (o BuildSpecTasksBuilderVolumeMountsOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumeMounts) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumeMountsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumeMountsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumeMounts)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumeMountsArrayOutput) ToBuildSpecTasksBuilderVolumeMountsArrayOutput() BuildSpecTasksBuilderVolumeMountsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumeMountsArrayOutput) ToBuildSpecTasksBuilderVolumeMountsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumeMountsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumeMountsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumeMountsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumeMounts {
		return vs[0].([]BuildSpecTasksBuilderVolumeMounts)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumeMountsOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type BuildSpecTasksBuilderVolumes struct {
	// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	AwsElasticBlockStore *BuildSpecTasksBuilderVolumesAwsElasticBlockStore `pulumi:"awsElasticBlockStore"`
	// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
	AzureDisk *BuildSpecTasksBuilderVolumesAzureDisk `pulumi:"azureDisk"`
	// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
	AzureFile *BuildSpecTasksBuilderVolumesAzureFile `pulumi:"azureFile"`
	// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
	Cephfs *BuildSpecTasksBuilderVolumesCephfs `pulumi:"cephfs"`
	// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	Cinder *BuildSpecTasksBuilderVolumesCinder `pulumi:"cinder"`
	// ConfigMap represents a configMap that should populate this volume
	ConfigMap *BuildSpecTasksBuilderVolumesConfigMap `pulumi:"configMap"`
	// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
	Csi *BuildSpecTasksBuilderVolumesCsi `pulumi:"csi"`
	// DownwardAPI represents downward API about the pod that should populate this volume
	DownwardAPI *BuildSpecTasksBuilderVolumesDownwardAPI `pulumi:"downwardAPI"`
	// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	EmptyDir *BuildSpecTasksBuilderVolumesEmptyDir `pulumi:"emptyDir"`
	// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
	Fc *BuildSpecTasksBuilderVolumesFc `pulumi:"fc"`
	// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
	FlexVolume *BuildSpecTasksBuilderVolumesFlexVolume `pulumi:"flexVolume"`
	// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
	Flocker *BuildSpecTasksBuilderVolumesFlocker `pulumi:"flocker"`
	// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	GcePersistentDisk *BuildSpecTasksBuilderVolumesGcePersistentDisk `pulumi:"gcePersistentDisk"`
	// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
	GitRepo *BuildSpecTasksBuilderVolumesGitRepo `pulumi:"gitRepo"`
	// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
	Glusterfs *BuildSpecTasksBuilderVolumesGlusterfs `pulumi:"glusterfs"`
	// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
	HostPath *BuildSpecTasksBuilderVolumesHostPath `pulumi:"hostPath"`
	// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
	Iscsi *BuildSpecTasksBuilderVolumesIscsi `pulumi:"iscsi"`
	// Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
	// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Nfs *BuildSpecTasksBuilderVolumesNfs `pulumi:"nfs"`
	// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	PersistentVolumeClaim *BuildSpecTasksBuilderVolumesPersistentVolumeClaim `pulumi:"persistentVolumeClaim"`
	// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
	PhotonPersistentDisk *BuildSpecTasksBuilderVolumesPhotonPersistentDisk `pulumi:"photonPersistentDisk"`
	// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
	PortworxVolume *BuildSpecTasksBuilderVolumesPortworxVolume `pulumi:"portworxVolume"`
	// Items for all in one resources secrets, configmaps, and downward API
	Projected *BuildSpecTasksBuilderVolumesProjected `pulumi:"projected"`
	// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
	Quobyte *BuildSpecTasksBuilderVolumesQuobyte `pulumi:"quobyte"`
	// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
	Rbd *BuildSpecTasksBuilderVolumesRbd `pulumi:"rbd"`
	// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
	ScaleIO *BuildSpecTasksBuilderVolumesScaleIO `pulumi:"scaleIO"`
	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	Secret *BuildSpecTasksBuilderVolumesSecret `pulumi:"secret"`
	// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
	Storageos *BuildSpecTasksBuilderVolumesStorageos `pulumi:"storageos"`
	// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
	VsphereVolume *BuildSpecTasksBuilderVolumesVsphereVolume `pulumi:"vsphereVolume"`
}

// BuildSpecTasksBuilderVolumesInput is an input type that accepts BuildSpecTasksBuilderVolumesArgs and BuildSpecTasksBuilderVolumesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesInput` via:
//
//          BuildSpecTasksBuilderVolumesArgs{...}
type BuildSpecTasksBuilderVolumesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesOutput() BuildSpecTasksBuilderVolumesOutput
	ToBuildSpecTasksBuilderVolumesOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesOutput
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type BuildSpecTasksBuilderVolumesArgs struct {
	// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	AwsElasticBlockStore BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrInput `pulumi:"awsElasticBlockStore"`
	// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
	AzureDisk BuildSpecTasksBuilderVolumesAzureDiskPtrInput `pulumi:"azureDisk"`
	// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
	AzureFile BuildSpecTasksBuilderVolumesAzureFilePtrInput `pulumi:"azureFile"`
	// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
	Cephfs BuildSpecTasksBuilderVolumesCephfsPtrInput `pulumi:"cephfs"`
	// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	Cinder BuildSpecTasksBuilderVolumesCinderPtrInput `pulumi:"cinder"`
	// ConfigMap represents a configMap that should populate this volume
	ConfigMap BuildSpecTasksBuilderVolumesConfigMapPtrInput `pulumi:"configMap"`
	// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
	Csi BuildSpecTasksBuilderVolumesCsiPtrInput `pulumi:"csi"`
	// DownwardAPI represents downward API about the pod that should populate this volume
	DownwardAPI BuildSpecTasksBuilderVolumesDownwardAPIPtrInput `pulumi:"downwardAPI"`
	// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	EmptyDir BuildSpecTasksBuilderVolumesEmptyDirPtrInput `pulumi:"emptyDir"`
	// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
	Fc BuildSpecTasksBuilderVolumesFcPtrInput `pulumi:"fc"`
	// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
	FlexVolume BuildSpecTasksBuilderVolumesFlexVolumePtrInput `pulumi:"flexVolume"`
	// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
	Flocker BuildSpecTasksBuilderVolumesFlockerPtrInput `pulumi:"flocker"`
	// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	GcePersistentDisk BuildSpecTasksBuilderVolumesGcePersistentDiskPtrInput `pulumi:"gcePersistentDisk"`
	// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
	GitRepo BuildSpecTasksBuilderVolumesGitRepoPtrInput `pulumi:"gitRepo"`
	// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
	Glusterfs BuildSpecTasksBuilderVolumesGlusterfsPtrInput `pulumi:"glusterfs"`
	// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
	HostPath BuildSpecTasksBuilderVolumesHostPathPtrInput `pulumi:"hostPath"`
	// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
	Iscsi BuildSpecTasksBuilderVolumesIscsiPtrInput `pulumi:"iscsi"`
	// Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
	// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Nfs BuildSpecTasksBuilderVolumesNfsPtrInput `pulumi:"nfs"`
	// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	PersistentVolumeClaim BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrInput `pulumi:"persistentVolumeClaim"`
	// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
	PhotonPersistentDisk BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrInput `pulumi:"photonPersistentDisk"`
	// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
	PortworxVolume BuildSpecTasksBuilderVolumesPortworxVolumePtrInput `pulumi:"portworxVolume"`
	// Items for all in one resources secrets, configmaps, and downward API
	Projected BuildSpecTasksBuilderVolumesProjectedPtrInput `pulumi:"projected"`
	// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
	Quobyte BuildSpecTasksBuilderVolumesQuobytePtrInput `pulumi:"quobyte"`
	// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
	Rbd BuildSpecTasksBuilderVolumesRbdPtrInput `pulumi:"rbd"`
	// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
	ScaleIO BuildSpecTasksBuilderVolumesScaleIOPtrInput `pulumi:"scaleIO"`
	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	Secret BuildSpecTasksBuilderVolumesSecretPtrInput `pulumi:"secret"`
	// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
	Storageos BuildSpecTasksBuilderVolumesStorageosPtrInput `pulumi:"storageos"`
	// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
	VsphereVolume BuildSpecTasksBuilderVolumesVsphereVolumePtrInput `pulumi:"vsphereVolume"`
}

func (BuildSpecTasksBuilderVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumes)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesArgs) ToBuildSpecTasksBuilderVolumesOutput() BuildSpecTasksBuilderVolumesOutput {
	return i.ToBuildSpecTasksBuilderVolumesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesArgs) ToBuildSpecTasksBuilderVolumesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesOutput)
}

// BuildSpecTasksBuilderVolumesArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesArray and BuildSpecTasksBuilderVolumesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesArray{ BuildSpecTasksBuilderVolumesArgs{...} }
type BuildSpecTasksBuilderVolumesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesArrayOutput() BuildSpecTasksBuilderVolumesArrayOutput
	ToBuildSpecTasksBuilderVolumesArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesArrayOutput
}

type BuildSpecTasksBuilderVolumesArray []BuildSpecTasksBuilderVolumesInput

func (BuildSpecTasksBuilderVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumes)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesArray) ToBuildSpecTasksBuilderVolumesArrayOutput() BuildSpecTasksBuilderVolumesArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesArray) ToBuildSpecTasksBuilderVolumesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesArrayOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type BuildSpecTasksBuilderVolumesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumes)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesOutput) ToBuildSpecTasksBuilderVolumesOutput() BuildSpecTasksBuilderVolumesOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesOutput) ToBuildSpecTasksBuilderVolumesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesOutput {
	return o
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksBuilderVolumesOutput) AwsElasticBlockStore() BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesAwsElasticBlockStore {
		return v.AwsElasticBlockStore
	}).(BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput)
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
func (o BuildSpecTasksBuilderVolumesOutput) AzureDisk() BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesAzureDisk { return v.AzureDisk }).(BuildSpecTasksBuilderVolumesAzureDiskPtrOutput)
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
func (o BuildSpecTasksBuilderVolumesOutput) AzureFile() BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesAzureFile { return v.AzureFile }).(BuildSpecTasksBuilderVolumesAzureFilePtrOutput)
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
func (o BuildSpecTasksBuilderVolumesOutput) Cephfs() BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesCephfs { return v.Cephfs }).(BuildSpecTasksBuilderVolumesCephfsPtrOutput)
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesOutput) Cinder() BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesCinder { return v.Cinder }).(BuildSpecTasksBuilderVolumesCinderPtrOutput)
}

// ConfigMap represents a configMap that should populate this volume
func (o BuildSpecTasksBuilderVolumesOutput) ConfigMap() BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesConfigMap { return v.ConfigMap }).(BuildSpecTasksBuilderVolumesConfigMapPtrOutput)
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
func (o BuildSpecTasksBuilderVolumesOutput) Csi() BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesCsi { return v.Csi }).(BuildSpecTasksBuilderVolumesCsiPtrOutput)
}

// DownwardAPI represents downward API about the pod that should populate this volume
func (o BuildSpecTasksBuilderVolumesOutput) DownwardAPI() BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesDownwardAPI { return v.DownwardAPI }).(BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput)
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o BuildSpecTasksBuilderVolumesOutput) EmptyDir() BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesEmptyDir { return v.EmptyDir }).(BuildSpecTasksBuilderVolumesEmptyDirPtrOutput)
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
func (o BuildSpecTasksBuilderVolumesOutput) Fc() BuildSpecTasksBuilderVolumesFcPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesFc { return v.Fc }).(BuildSpecTasksBuilderVolumesFcPtrOutput)
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
func (o BuildSpecTasksBuilderVolumesOutput) FlexVolume() BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesFlexVolume { return v.FlexVolume }).(BuildSpecTasksBuilderVolumesFlexVolumePtrOutput)
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
func (o BuildSpecTasksBuilderVolumesOutput) Flocker() BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesFlocker { return v.Flocker }).(BuildSpecTasksBuilderVolumesFlockerPtrOutput)
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesOutput) GcePersistentDisk() BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesGcePersistentDisk {
		return v.GcePersistentDisk
	}).(BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput)
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
func (o BuildSpecTasksBuilderVolumesOutput) GitRepo() BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesGitRepo { return v.GitRepo }).(BuildSpecTasksBuilderVolumesGitRepoPtrOutput)
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
func (o BuildSpecTasksBuilderVolumesOutput) Glusterfs() BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesGlusterfs { return v.Glusterfs }).(BuildSpecTasksBuilderVolumesGlusterfsPtrOutput)
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
func (o BuildSpecTasksBuilderVolumesOutput) HostPath() BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesHostPath { return v.HostPath }).(BuildSpecTasksBuilderVolumesHostPathPtrOutput)
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
func (o BuildSpecTasksBuilderVolumesOutput) Iscsi() BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesIscsi { return v.Iscsi }).(BuildSpecTasksBuilderVolumesIscsiPtrOutput)
}

// Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o BuildSpecTasksBuilderVolumesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) string { return v.Name }).(pulumi.StringOutput)
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesOutput) Nfs() BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesNfs { return v.Nfs }).(BuildSpecTasksBuilderVolumesNfsPtrOutput)
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o BuildSpecTasksBuilderVolumesOutput) PersistentVolumeClaim() BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesPersistentVolumeClaim {
		return v.PersistentVolumeClaim
	}).(BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput)
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
func (o BuildSpecTasksBuilderVolumesOutput) PhotonPersistentDisk() BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesPhotonPersistentDisk {
		return v.PhotonPersistentDisk
	}).(BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput)
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
func (o BuildSpecTasksBuilderVolumesOutput) PortworxVolume() BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesPortworxVolume {
		return v.PortworxVolume
	}).(BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput)
}

// Items for all in one resources secrets, configmaps, and downward API
func (o BuildSpecTasksBuilderVolumesOutput) Projected() BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesProjected { return v.Projected }).(BuildSpecTasksBuilderVolumesProjectedPtrOutput)
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
func (o BuildSpecTasksBuilderVolumesOutput) Quobyte() BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesQuobyte { return v.Quobyte }).(BuildSpecTasksBuilderVolumesQuobytePtrOutput)
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
func (o BuildSpecTasksBuilderVolumesOutput) Rbd() BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesRbd { return v.Rbd }).(BuildSpecTasksBuilderVolumesRbdPtrOutput)
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
func (o BuildSpecTasksBuilderVolumesOutput) ScaleIO() BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesScaleIO { return v.ScaleIO }).(BuildSpecTasksBuilderVolumesScaleIOPtrOutput)
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o BuildSpecTasksBuilderVolumesOutput) Secret() BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesSecret { return v.Secret }).(BuildSpecTasksBuilderVolumesSecretPtrOutput)
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
func (o BuildSpecTasksBuilderVolumesOutput) Storageos() BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesStorageos { return v.Storageos }).(BuildSpecTasksBuilderVolumesStorageosPtrOutput)
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
func (o BuildSpecTasksBuilderVolumesOutput) VsphereVolume() BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumes) *BuildSpecTasksBuilderVolumesVsphereVolume {
		return v.VsphereVolume
	}).(BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput)
}

type BuildSpecTasksBuilderVolumesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumes)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesArrayOutput) ToBuildSpecTasksBuilderVolumesArrayOutput() BuildSpecTasksBuilderVolumesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesArrayOutput) ToBuildSpecTasksBuilderVolumesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumes {
		return vs[0].([]BuildSpecTasksBuilderVolumes)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesOutput)
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type BuildSpecTasksBuilderVolumesAwsElasticBlockStore struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition *int `pulumi:"partition"`
	// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly *bool `pulumi:"readOnly"`
	// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID string `pulumi:"volumeID"`
}

// BuildSpecTasksBuilderVolumesAwsElasticBlockStoreInput is an input type that accepts BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs and BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesAwsElasticBlockStoreInput` via:
//
//          BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs{...}
type BuildSpecTasksBuilderVolumesAwsElasticBlockStoreInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput
	ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput {
	return i.ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput)
}

func (i BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput).ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrInput is an input type that accepts BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs, BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtr and BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrInput` via:
//
//          BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput
	ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput
}

type buildSpecTasksBuilderVolumesAwsElasticBlockStorePtrType BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs

func BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtr(v *BuildSpecTasksBuilderVolumesAwsElasticBlockStoreArgs) BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrInput {
	return (*buildSpecTasksBuilderVolumesAwsElasticBlockStorePtrType)(v)
}

func (*buildSpecTasksBuilderVolumesAwsElasticBlockStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesAwsElasticBlockStorePtrType) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesAwsElasticBlockStorePtrType) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput)
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *BuildSpecTasksBuilderVolumesAwsElasticBlockStore {
		return &v
	}).(BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAwsElasticBlockStore) string { return v.VolumeID }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) ToBuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) Elem() BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAwsElasticBlockStore) BuildSpecTasksBuilderVolumesAwsElasticBlockStore {
		return *v
	}).(BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAwsElasticBlockStore) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type BuildSpecTasksBuilderVolumesAzureDisk struct {
	// Host Caching mode: None, Read Only, Read Write.
	CachingMode *string `pulumi:"cachingMode"`
	// The Name of the data disk in the blob storage
	DiskName string `pulumi:"diskName"`
	// The URI the data disk in the blob storage
	DiskURI string `pulumi:"diskURI"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
	Kind *string `pulumi:"kind"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksBuilderVolumesAzureDiskInput is an input type that accepts BuildSpecTasksBuilderVolumesAzureDiskArgs and BuildSpecTasksBuilderVolumesAzureDiskOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesAzureDiskInput` via:
//
//          BuildSpecTasksBuilderVolumesAzureDiskArgs{...}
type BuildSpecTasksBuilderVolumesAzureDiskInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesAzureDiskOutput() BuildSpecTasksBuilderVolumesAzureDiskOutput
	ToBuildSpecTasksBuilderVolumesAzureDiskOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesAzureDiskOutput
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type BuildSpecTasksBuilderVolumesAzureDiskArgs struct {
	// Host Caching mode: None, Read Only, Read Write.
	CachingMode pulumi.StringPtrInput `pulumi:"cachingMode"`
	// The Name of the data disk in the blob storage
	DiskName pulumi.StringInput `pulumi:"diskName"`
	// The URI the data disk in the blob storage
	DiskURI pulumi.StringInput `pulumi:"diskURI"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksBuilderVolumesAzureDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesAzureDisk)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesAzureDiskArgs) ToBuildSpecTasksBuilderVolumesAzureDiskOutput() BuildSpecTasksBuilderVolumesAzureDiskOutput {
	return i.ToBuildSpecTasksBuilderVolumesAzureDiskOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesAzureDiskArgs) ToBuildSpecTasksBuilderVolumesAzureDiskOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAzureDiskOutput)
}

func (i BuildSpecTasksBuilderVolumesAzureDiskArgs) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutput() BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesAzureDiskArgs) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAzureDiskOutput).ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesAzureDiskPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesAzureDiskArgs, BuildSpecTasksBuilderVolumesAzureDiskPtr and BuildSpecTasksBuilderVolumesAzureDiskPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesAzureDiskPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesAzureDiskArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesAzureDiskPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutput() BuildSpecTasksBuilderVolumesAzureDiskPtrOutput
	ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesAzureDiskPtrOutput
}

type buildSpecTasksBuilderVolumesAzureDiskPtrType BuildSpecTasksBuilderVolumesAzureDiskArgs

func BuildSpecTasksBuilderVolumesAzureDiskPtr(v *BuildSpecTasksBuilderVolumesAzureDiskArgs) BuildSpecTasksBuilderVolumesAzureDiskPtrInput {
	return (*buildSpecTasksBuilderVolumesAzureDiskPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesAzureDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesAzureDisk)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesAzureDiskPtrType) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutput() BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesAzureDiskPtrType) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAzureDiskPtrOutput)
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type BuildSpecTasksBuilderVolumesAzureDiskOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesAzureDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesAzureDisk)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) ToBuildSpecTasksBuilderVolumesAzureDiskOutput() BuildSpecTasksBuilderVolumesAzureDiskOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) ToBuildSpecTasksBuilderVolumesAzureDiskOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureDiskOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutput() BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) *BuildSpecTasksBuilderVolumesAzureDisk {
		return &v
	}).(BuildSpecTasksBuilderVolumesAzureDiskPtrOutput)
}

// Host Caching mode: None, Read Only, Read Write.
func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) CachingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) *string { return v.CachingMode }).(pulumi.StringPtrOutput)
}

// The Name of the data disk in the blob storage
func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) string { return v.DiskName }).(pulumi.StringOutput)
}

// The URI the data disk in the blob storage
func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) DiskURI() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) string { return v.DiskURI }).(pulumi.StringOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesAzureDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesAzureDiskPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesAzureDisk)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutput() BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) ToBuildSpecTasksBuilderVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureDiskPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) Elem() BuildSpecTasksBuilderVolumesAzureDiskOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) BuildSpecTasksBuilderVolumesAzureDisk { return *v }).(BuildSpecTasksBuilderVolumesAzureDiskOutput)
}

// Host Caching mode: None, Read Only, Read Write.
func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) CachingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.CachingMode
	}).(pulumi.StringPtrOutput)
}

// The Name of the data disk in the blob storage
func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return &v.DiskName
	}).(pulumi.StringPtrOutput)
}

// The URI the data disk in the blob storage
func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) DiskURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return &v.DiskURI
	}).(pulumi.StringPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesAzureDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type BuildSpecTasksBuilderVolumesAzureFile struct {
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// the name of secret that contains Azure Storage Account Name and Key
	SecretName string `pulumi:"secretName"`
	// Share Name
	ShareName string `pulumi:"shareName"`
}

// BuildSpecTasksBuilderVolumesAzureFileInput is an input type that accepts BuildSpecTasksBuilderVolumesAzureFileArgs and BuildSpecTasksBuilderVolumesAzureFileOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesAzureFileInput` via:
//
//          BuildSpecTasksBuilderVolumesAzureFileArgs{...}
type BuildSpecTasksBuilderVolumesAzureFileInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesAzureFileOutput() BuildSpecTasksBuilderVolumesAzureFileOutput
	ToBuildSpecTasksBuilderVolumesAzureFileOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesAzureFileOutput
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type BuildSpecTasksBuilderVolumesAzureFileArgs struct {
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// the name of secret that contains Azure Storage Account Name and Key
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Share Name
	ShareName pulumi.StringInput `pulumi:"shareName"`
}

func (BuildSpecTasksBuilderVolumesAzureFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesAzureFile)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesAzureFileArgs) ToBuildSpecTasksBuilderVolumesAzureFileOutput() BuildSpecTasksBuilderVolumesAzureFileOutput {
	return i.ToBuildSpecTasksBuilderVolumesAzureFileOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesAzureFileArgs) ToBuildSpecTasksBuilderVolumesAzureFileOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAzureFileOutput)
}

func (i BuildSpecTasksBuilderVolumesAzureFileArgs) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutput() BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesAzureFileArgs) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAzureFileOutput).ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesAzureFilePtrInput is an input type that accepts BuildSpecTasksBuilderVolumesAzureFileArgs, BuildSpecTasksBuilderVolumesAzureFilePtr and BuildSpecTasksBuilderVolumesAzureFilePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesAzureFilePtrInput` via:
//
//          BuildSpecTasksBuilderVolumesAzureFileArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesAzureFilePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesAzureFilePtrOutput() BuildSpecTasksBuilderVolumesAzureFilePtrOutput
	ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesAzureFilePtrOutput
}

type buildSpecTasksBuilderVolumesAzureFilePtrType BuildSpecTasksBuilderVolumesAzureFileArgs

func BuildSpecTasksBuilderVolumesAzureFilePtr(v *BuildSpecTasksBuilderVolumesAzureFileArgs) BuildSpecTasksBuilderVolumesAzureFilePtrInput {
	return (*buildSpecTasksBuilderVolumesAzureFilePtrType)(v)
}

func (*buildSpecTasksBuilderVolumesAzureFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesAzureFile)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesAzureFilePtrType) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutput() BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesAzureFilePtrType) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesAzureFilePtrOutput)
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type BuildSpecTasksBuilderVolumesAzureFileOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesAzureFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesAzureFile)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesAzureFileOutput) ToBuildSpecTasksBuilderVolumesAzureFileOutput() BuildSpecTasksBuilderVolumesAzureFileOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureFileOutput) ToBuildSpecTasksBuilderVolumesAzureFileOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureFileOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureFileOutput) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutput() BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesAzureFileOutput) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureFile) *BuildSpecTasksBuilderVolumesAzureFile {
		return &v
	}).(BuildSpecTasksBuilderVolumesAzureFilePtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesAzureFileOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureFile) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// the name of secret that contains Azure Storage Account Name and Key
func (o BuildSpecTasksBuilderVolumesAzureFileOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureFile) string { return v.SecretName }).(pulumi.StringOutput)
}

// Share Name
func (o BuildSpecTasksBuilderVolumesAzureFileOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesAzureFile) string { return v.ShareName }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesAzureFilePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesAzureFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesAzureFile)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesAzureFilePtrOutput) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutput() BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureFilePtrOutput) ToBuildSpecTasksBuilderVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesAzureFilePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesAzureFilePtrOutput) Elem() BuildSpecTasksBuilderVolumesAzureFileOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureFile) BuildSpecTasksBuilderVolumesAzureFile { return *v }).(BuildSpecTasksBuilderVolumesAzureFileOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesAzureFilePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureFile) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// the name of secret that contains Azure Storage Account Name and Key
func (o BuildSpecTasksBuilderVolumesAzureFilePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureFile) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Share Name
func (o BuildSpecTasksBuilderVolumesAzureFilePtrOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesAzureFile) *string {
		if v == nil {
			return nil
		}
		return &v.ShareName
	}).(pulumi.StringPtrOutput)
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type BuildSpecTasksBuilderVolumesCephfs struct {
	// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path *string `pulumi:"path"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile *string `pulumi:"secretFile"`
	// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef *BuildSpecTasksBuilderVolumesCephfsSecretRef `pulumi:"secretRef"`
	// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// BuildSpecTasksBuilderVolumesCephfsInput is an input type that accepts BuildSpecTasksBuilderVolumesCephfsArgs and BuildSpecTasksBuilderVolumesCephfsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCephfsInput` via:
//
//          BuildSpecTasksBuilderVolumesCephfsArgs{...}
type BuildSpecTasksBuilderVolumesCephfsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCephfsOutput() BuildSpecTasksBuilderVolumesCephfsOutput
	ToBuildSpecTasksBuilderVolumesCephfsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCephfsOutput
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type BuildSpecTasksBuilderVolumesCephfsArgs struct {
	// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile pulumi.StringPtrInput `pulumi:"secretFile"`
	// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef BuildSpecTasksBuilderVolumesCephfsSecretRefPtrInput `pulumi:"secretRef"`
	// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (BuildSpecTasksBuilderVolumesCephfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCephfs)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCephfsArgs) ToBuildSpecTasksBuilderVolumesCephfsOutput() BuildSpecTasksBuilderVolumesCephfsOutput {
	return i.ToBuildSpecTasksBuilderVolumesCephfsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCephfsArgs) ToBuildSpecTasksBuilderVolumesCephfsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCephfsOutput)
}

func (i BuildSpecTasksBuilderVolumesCephfsArgs) ToBuildSpecTasksBuilderVolumesCephfsPtrOutput() BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCephfsArgs) ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCephfsOutput).ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesCephfsPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesCephfsArgs, BuildSpecTasksBuilderVolumesCephfsPtr and BuildSpecTasksBuilderVolumesCephfsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCephfsPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesCephfsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesCephfsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCephfsPtrOutput() BuildSpecTasksBuilderVolumesCephfsPtrOutput
	ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCephfsPtrOutput
}

type buildSpecTasksBuilderVolumesCephfsPtrType BuildSpecTasksBuilderVolumesCephfsArgs

func BuildSpecTasksBuilderVolumesCephfsPtr(v *BuildSpecTasksBuilderVolumesCephfsArgs) BuildSpecTasksBuilderVolumesCephfsPtrInput {
	return (*buildSpecTasksBuilderVolumesCephfsPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesCephfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCephfs)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesCephfsPtrType) ToBuildSpecTasksBuilderVolumesCephfsPtrOutput() BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesCephfsPtrType) ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCephfsPtrOutput)
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type BuildSpecTasksBuilderVolumesCephfsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCephfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCephfs)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCephfsOutput) ToBuildSpecTasksBuilderVolumesCephfsOutput() BuildSpecTasksBuilderVolumesCephfsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsOutput) ToBuildSpecTasksBuilderVolumesCephfsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsOutput) ToBuildSpecTasksBuilderVolumesCephfsPtrOutput() BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesCephfsOutput) ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) *BuildSpecTasksBuilderVolumesCephfs {
		return &v
	}).(BuildSpecTasksBuilderVolumesCephfsPtrOutput)
}

// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
func (o BuildSpecTasksBuilderVolumesCephfsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsOutput) SecretFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) *string { return v.SecretFile }).(pulumi.StringPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsOutput) SecretRef() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) *BuildSpecTasksBuilderVolumesCephfsSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput)
}

// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfs) *string { return v.User }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesCephfsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCephfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCephfs)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) ToBuildSpecTasksBuilderVolumesCephfsPtrOutput() BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) ToBuildSpecTasksBuilderVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) Elem() BuildSpecTasksBuilderVolumesCephfsOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) BuildSpecTasksBuilderVolumesCephfs { return *v }).(BuildSpecTasksBuilderVolumesCephfsOutput)
}

// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) SecretFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.SecretFile
	}).(pulumi.StringPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) SecretRef() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) *BuildSpecTasksBuilderVolumesCephfsSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput)
}

// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesCephfsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type BuildSpecTasksBuilderVolumesCephfsSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesCephfsSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesCephfsSecretRefArgs and BuildSpecTasksBuilderVolumesCephfsSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCephfsSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesCephfsSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesCephfsSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefOutput
	ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefOutput
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type BuildSpecTasksBuilderVolumesCephfsSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesCephfsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCephfsSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCephfsSecretRefArgs) ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCephfsSecretRefArgs) ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCephfsSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesCephfsSecretRefArgs) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCephfsSecretRefArgs) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCephfsSecretRefOutput).ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesCephfsSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesCephfsSecretRefArgs, BuildSpecTasksBuilderVolumesCephfsSecretRefPtr and BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCephfsSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesCephfsSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesCephfsSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesCephfsSecretRefPtrType BuildSpecTasksBuilderVolumesCephfsSecretRefArgs

func BuildSpecTasksBuilderVolumesCephfsSecretRefPtr(v *BuildSpecTasksBuilderVolumesCephfsSecretRefArgs) BuildSpecTasksBuilderVolumesCephfsSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesCephfsSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesCephfsSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCephfsSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesCephfsSecretRefPtrType) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesCephfsSecretRefPtrType) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type BuildSpecTasksBuilderVolumesCephfsSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCephfsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCephfsSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefOutput) ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefOutput) ToBuildSpecTasksBuilderVolumesCephfsSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefOutput) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefOutput) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfsSecretRef) *BuildSpecTasksBuilderVolumesCephfsSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesCephfsSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCephfsSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCephfsSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesCephfsSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfsSecretRef) BuildSpecTasksBuilderVolumesCephfsSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesCephfsSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCephfsSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type BuildSpecTasksBuilderVolumesCinder struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	FsType *string `pulumi:"fsType"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: points to a secret object containing parameters used to connect to OpenStack.
	SecretRef *BuildSpecTasksBuilderVolumesCinderSecretRef `pulumi:"secretRef"`
	// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	VolumeID string `pulumi:"volumeID"`
}

// BuildSpecTasksBuilderVolumesCinderInput is an input type that accepts BuildSpecTasksBuilderVolumesCinderArgs and BuildSpecTasksBuilderVolumesCinderOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCinderInput` via:
//
//          BuildSpecTasksBuilderVolumesCinderArgs{...}
type BuildSpecTasksBuilderVolumesCinderInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCinderOutput() BuildSpecTasksBuilderVolumesCinderOutput
	ToBuildSpecTasksBuilderVolumesCinderOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCinderOutput
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type BuildSpecTasksBuilderVolumesCinderArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: points to a secret object containing parameters used to connect to OpenStack.
	SecretRef BuildSpecTasksBuilderVolumesCinderSecretRefPtrInput `pulumi:"secretRef"`
	// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (BuildSpecTasksBuilderVolumesCinderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCinder)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCinderArgs) ToBuildSpecTasksBuilderVolumesCinderOutput() BuildSpecTasksBuilderVolumesCinderOutput {
	return i.ToBuildSpecTasksBuilderVolumesCinderOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCinderArgs) ToBuildSpecTasksBuilderVolumesCinderOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCinderOutput)
}

func (i BuildSpecTasksBuilderVolumesCinderArgs) ToBuildSpecTasksBuilderVolumesCinderPtrOutput() BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCinderArgs) ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCinderOutput).ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesCinderPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesCinderArgs, BuildSpecTasksBuilderVolumesCinderPtr and BuildSpecTasksBuilderVolumesCinderPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCinderPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesCinderArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesCinderPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCinderPtrOutput() BuildSpecTasksBuilderVolumesCinderPtrOutput
	ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCinderPtrOutput
}

type buildSpecTasksBuilderVolumesCinderPtrType BuildSpecTasksBuilderVolumesCinderArgs

func BuildSpecTasksBuilderVolumesCinderPtr(v *BuildSpecTasksBuilderVolumesCinderArgs) BuildSpecTasksBuilderVolumesCinderPtrInput {
	return (*buildSpecTasksBuilderVolumesCinderPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesCinderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCinder)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesCinderPtrType) ToBuildSpecTasksBuilderVolumesCinderPtrOutput() BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesCinderPtrType) ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCinderPtrOutput)
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type BuildSpecTasksBuilderVolumesCinderOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCinderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCinder)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCinderOutput) ToBuildSpecTasksBuilderVolumesCinderOutput() BuildSpecTasksBuilderVolumesCinderOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderOutput) ToBuildSpecTasksBuilderVolumesCinderOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderOutput) ToBuildSpecTasksBuilderVolumesCinderPtrOutput() BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesCinderOutput) ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinder) *BuildSpecTasksBuilderVolumesCinder {
		return &v
	}).(BuildSpecTasksBuilderVolumesCinderPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesCinderOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinder) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesCinderOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinder) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
func (o BuildSpecTasksBuilderVolumesCinderOutput) SecretRef() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinder) *BuildSpecTasksBuilderVolumesCinderSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput)
}

// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesCinderOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinder) string { return v.VolumeID }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesCinderPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCinderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCinder)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) ToBuildSpecTasksBuilderVolumesCinderPtrOutput() BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) ToBuildSpecTasksBuilderVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) Elem() BuildSpecTasksBuilderVolumesCinderOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinder) BuildSpecTasksBuilderVolumesCinder { return *v }).(BuildSpecTasksBuilderVolumesCinderOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinder) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinder) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) SecretRef() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinder) *BuildSpecTasksBuilderVolumesCinderSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput)
}

// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksBuilderVolumesCinderPtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinder) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
type BuildSpecTasksBuilderVolumesCinderSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesCinderSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesCinderSecretRefArgs and BuildSpecTasksBuilderVolumesCinderSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCinderSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesCinderSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesCinderSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCinderSecretRefOutput() BuildSpecTasksBuilderVolumesCinderSecretRefOutput
	ToBuildSpecTasksBuilderVolumesCinderSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefOutput
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
type BuildSpecTasksBuilderVolumesCinderSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesCinderSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCinderSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCinderSecretRefArgs) ToBuildSpecTasksBuilderVolumesCinderSecretRefOutput() BuildSpecTasksBuilderVolumesCinderSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesCinderSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCinderSecretRefArgs) ToBuildSpecTasksBuilderVolumesCinderSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCinderSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesCinderSecretRefArgs) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCinderSecretRefArgs) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCinderSecretRefOutput).ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesCinderSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesCinderSecretRefArgs, BuildSpecTasksBuilderVolumesCinderSecretRefPtr and BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCinderSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesCinderSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesCinderSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesCinderSecretRefPtrType BuildSpecTasksBuilderVolumesCinderSecretRefArgs

func BuildSpecTasksBuilderVolumesCinderSecretRefPtr(v *BuildSpecTasksBuilderVolumesCinderSecretRefArgs) BuildSpecTasksBuilderVolumesCinderSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesCinderSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesCinderSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCinderSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesCinderSecretRefPtrType) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesCinderSecretRefPtrType) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
type BuildSpecTasksBuilderVolumesCinderSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCinderSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCinderSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefOutput) ToBuildSpecTasksBuilderVolumesCinderSecretRefOutput() BuildSpecTasksBuilderVolumesCinderSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefOutput) ToBuildSpecTasksBuilderVolumesCinderSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefOutput) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefOutput) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinderSecretRef) *BuildSpecTasksBuilderVolumesCinderSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesCinderSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCinderSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCinderSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesCinderSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinderSecretRef) BuildSpecTasksBuilderVolumesCinderSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesCinderSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCinderSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ConfigMap represents a configMap that should populate this volume
type BuildSpecTasksBuilderVolumesConfigMap struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksBuilderVolumesConfigMapItems `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksBuilderVolumesConfigMapInput is an input type that accepts BuildSpecTasksBuilderVolumesConfigMap and BuildSpecTasksBuilderVolumesConfigMapOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesConfigMapInput` via:
//
//          BuildSpecTasksBuilderVolumesConfigMap{ "key": BuildSpecTasksBuilderVolumesConfigArgs{...} }
type BuildSpecTasksBuilderVolumesConfigMapInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesConfigMapOutput() BuildSpecTasksBuilderVolumesConfigMapOutput
	ToBuildSpecTasksBuilderVolumesConfigMapOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesConfigMapOutput
}

// ConfigMap represents a configMap that should populate this volume
type BuildSpecTasksBuilderVolumesConfigMapArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksBuilderVolumesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksBuilderVolumesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesConfigMap)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesConfigMapArgs) ToBuildSpecTasksBuilderVolumesConfigMapOutput() BuildSpecTasksBuilderVolumesConfigMapOutput {
	return i.ToBuildSpecTasksBuilderVolumesConfigMapOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesConfigMapArgs) ToBuildSpecTasksBuilderVolumesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesConfigMapOutput)
}

func (i BuildSpecTasksBuilderVolumesConfigMapArgs) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesConfigMapArgs) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesConfigMapOutput).ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesConfigMapPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesConfigMapArgs, BuildSpecTasksBuilderVolumesConfigMapPtr and BuildSpecTasksBuilderVolumesConfigMapPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesConfigMapPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesConfigMapArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesConfigMapPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesConfigMapPtrOutput
	ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesConfigMapPtrOutput
}

type buildSpecTasksBuilderVolumesConfigMapPtrType BuildSpecTasksBuilderVolumesConfigMapArgs

func BuildSpecTasksBuilderVolumesConfigMapPtr(v *BuildSpecTasksBuilderVolumesConfigMapArgs) BuildSpecTasksBuilderVolumesConfigMapPtrInput {
	return (*buildSpecTasksBuilderVolumesConfigMapPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesConfigMap)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesConfigMapPtrType) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesConfigMapPtrType) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesConfigMapPtrOutput)
}

// ConfigMap represents a configMap that should populate this volume
type BuildSpecTasksBuilderVolumesConfigMapOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesConfigMapOutput) ToBuildSpecTasksBuilderVolumesConfigMapOutput() BuildSpecTasksBuilderVolumesConfigMapOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapOutput) ToBuildSpecTasksBuilderVolumesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapOutput) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesConfigMapOutput) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMap) *BuildSpecTasksBuilderVolumesConfigMap {
		return &v
	}).(BuildSpecTasksBuilderVolumesConfigMapPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesConfigMapOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMap) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesConfigMapOutput) Items() BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMap) []BuildSpecTasksBuilderVolumesConfigMapItems {
		return v.Items
	}).(BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksBuilderVolumesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) ToBuildSpecTasksBuilderVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) Elem() BuildSpecTasksBuilderVolumesConfigMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesConfigMap) BuildSpecTasksBuilderVolumesConfigMap { return *v }).(BuildSpecTasksBuilderVolumesConfigMapOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesConfigMap) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) Items() BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesConfigMap) []BuildSpecTasksBuilderVolumesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksBuilderVolumesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesConfigMapItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksBuilderVolumesConfigMapItemsInput is an input type that accepts BuildSpecTasksBuilderVolumesConfigMapItemsArgs and BuildSpecTasksBuilderVolumesConfigMapItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesConfigMapItemsInput` via:
//
//          BuildSpecTasksBuilderVolumesConfigMapItemsArgs{...}
type BuildSpecTasksBuilderVolumesConfigMapItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesConfigMapItemsOutput() BuildSpecTasksBuilderVolumesConfigMapItemsOutput
	ToBuildSpecTasksBuilderVolumesConfigMapItemsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesConfigMapItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksBuilderVolumesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesConfigMapItemsArgs) ToBuildSpecTasksBuilderVolumesConfigMapItemsOutput() BuildSpecTasksBuilderVolumesConfigMapItemsOutput {
	return i.ToBuildSpecTasksBuilderVolumesConfigMapItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesConfigMapItemsArgs) ToBuildSpecTasksBuilderVolumesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesConfigMapItemsOutput)
}

// BuildSpecTasksBuilderVolumesConfigMapItemsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesConfigMapItemsArray and BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesConfigMapItemsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesConfigMapItemsArray{ BuildSpecTasksBuilderVolumesConfigMapItemsArgs{...} }
type BuildSpecTasksBuilderVolumesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput() BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput
	ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput
}

type BuildSpecTasksBuilderVolumesConfigMapItemsArray []BuildSpecTasksBuilderVolumesConfigMapItemsInput

func (BuildSpecTasksBuilderVolumesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesConfigMapItemsArray) ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput() BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesConfigMapItemsArray) ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesConfigMapItemsOutput) ToBuildSpecTasksBuilderVolumesConfigMapItemsOutput() BuildSpecTasksBuilderVolumesConfigMapItemsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapItemsOutput) ToBuildSpecTasksBuilderVolumesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksBuilderVolumesConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksBuilderVolumesConfigMapItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesConfigMapItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput) ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput() BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput) ToBuildSpecTasksBuilderVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesConfigMapItems {
		return vs[0].([]BuildSpecTasksBuilderVolumesConfigMapItems)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesConfigMapItemsOutput)
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
type BuildSpecTasksBuilderVolumesCsi struct {
	// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
	Driver string `pulumi:"driver"`
	// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
	FsType *string `pulumi:"fsType"`
	// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
	NodePublishSecretRef *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef `pulumi:"nodePublishSecretRef"`
	// Specifies a read-only configuration for the volume. Defaults to false (read/write).
	ReadOnly *bool `pulumi:"readOnly"`
	// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
	VolumeAttributes map[string]string `pulumi:"volumeAttributes"`
}

// BuildSpecTasksBuilderVolumesCsiInput is an input type that accepts BuildSpecTasksBuilderVolumesCsiArgs and BuildSpecTasksBuilderVolumesCsiOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCsiInput` via:
//
//          BuildSpecTasksBuilderVolumesCsiArgs{...}
type BuildSpecTasksBuilderVolumesCsiInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCsiOutput() BuildSpecTasksBuilderVolumesCsiOutput
	ToBuildSpecTasksBuilderVolumesCsiOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCsiOutput
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
type BuildSpecTasksBuilderVolumesCsiArgs struct {
	// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
	Driver pulumi.StringInput `pulumi:"driver"`
	// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
	NodePublishSecretRef BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrInput `pulumi:"nodePublishSecretRef"`
	// Specifies a read-only configuration for the volume. Defaults to false (read/write).
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
	VolumeAttributes pulumi.StringMapInput `pulumi:"volumeAttributes"`
}

func (BuildSpecTasksBuilderVolumesCsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCsi)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCsiArgs) ToBuildSpecTasksBuilderVolumesCsiOutput() BuildSpecTasksBuilderVolumesCsiOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCsiArgs) ToBuildSpecTasksBuilderVolumesCsiOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiOutput)
}

func (i BuildSpecTasksBuilderVolumesCsiArgs) ToBuildSpecTasksBuilderVolumesCsiPtrOutput() BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCsiArgs) ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiOutput).ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesCsiPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesCsiArgs, BuildSpecTasksBuilderVolumesCsiPtr and BuildSpecTasksBuilderVolumesCsiPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCsiPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesCsiArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesCsiPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCsiPtrOutput() BuildSpecTasksBuilderVolumesCsiPtrOutput
	ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCsiPtrOutput
}

type buildSpecTasksBuilderVolumesCsiPtrType BuildSpecTasksBuilderVolumesCsiArgs

func BuildSpecTasksBuilderVolumesCsiPtr(v *BuildSpecTasksBuilderVolumesCsiArgs) BuildSpecTasksBuilderVolumesCsiPtrInput {
	return (*buildSpecTasksBuilderVolumesCsiPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesCsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCsi)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesCsiPtrType) ToBuildSpecTasksBuilderVolumesCsiPtrOutput() BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesCsiPtrType) ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiPtrOutput)
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
type BuildSpecTasksBuilderVolumesCsiOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCsi)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCsiOutput) ToBuildSpecTasksBuilderVolumesCsiOutput() BuildSpecTasksBuilderVolumesCsiOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiOutput) ToBuildSpecTasksBuilderVolumesCsiOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiOutput) ToBuildSpecTasksBuilderVolumesCsiPtrOutput() BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesCsiOutput) ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsi) *BuildSpecTasksBuilderVolumesCsi {
		return &v
	}).(BuildSpecTasksBuilderVolumesCsiPtrOutput)
}

// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
func (o BuildSpecTasksBuilderVolumesCsiOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsi) string { return v.Driver }).(pulumi.StringOutput)
}

// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
func (o BuildSpecTasksBuilderVolumesCsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
func (o BuildSpecTasksBuilderVolumesCsiOutput) NodePublishSecretRef() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsi) *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef {
		return v.NodePublishSecretRef
	}).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput)
}

// Specifies a read-only configuration for the volume. Defaults to false (read/write).
func (o BuildSpecTasksBuilderVolumesCsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
func (o BuildSpecTasksBuilderVolumesCsiOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsi) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type BuildSpecTasksBuilderVolumesCsiPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCsi)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) ToBuildSpecTasksBuilderVolumesCsiPtrOutput() BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) ToBuildSpecTasksBuilderVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) Elem() BuildSpecTasksBuilderVolumesCsiOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsi) BuildSpecTasksBuilderVolumesCsi { return *v }).(BuildSpecTasksBuilderVolumesCsiOutput)
}

// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) NodePublishSecretRef() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsi) *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput)
}

// Specifies a read-only configuration for the volume. Defaults to false (read/write).
func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
func (o BuildSpecTasksBuilderVolumesCsiPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsi) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
type BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs and BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput
	ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
type BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput).ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs, BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtr and BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrType BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs

func BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtr(v *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefArgs) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrType) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrType) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
type BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef) *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef) BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesCsiNodePublishSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
type BuildSpecTasksBuilderVolumesCsiVolumeAttributes struct {
}

// BuildSpecTasksBuilderVolumesCsiVolumeAttributesInput is an input type that accepts BuildSpecTasksBuilderVolumesCsiVolumeAttributesArgs and BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesCsiVolumeAttributesInput` via:
//
//          BuildSpecTasksBuilderVolumesCsiVolumeAttributesArgs{...}
type BuildSpecTasksBuilderVolumesCsiVolumeAttributesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput() BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput
	ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
type BuildSpecTasksBuilderVolumesCsiVolumeAttributesArgs struct {
}

func (BuildSpecTasksBuilderVolumesCsiVolumeAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCsiVolumeAttributes)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesCsiVolumeAttributesArgs) ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput() BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput {
	return i.ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesCsiVolumeAttributesArgs) ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
type BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesCsiVolumeAttributes)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput) ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput() BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput) ToBuildSpecTasksBuilderVolumesCsiVolumeAttributesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput {
	return o
}

// DownwardAPI represents downward API about the pod that should populate this volume
type BuildSpecTasksBuilderVolumesDownwardAPI struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items []BuildSpecTasksBuilderVolumesDownwardAPIItems `pulumi:"items"`
}

// BuildSpecTasksBuilderVolumesDownwardAPIInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIArgs and BuildSpecTasksBuilderVolumesDownwardAPIOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIArgs{...}
type BuildSpecTasksBuilderVolumesDownwardAPIInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIOutput() BuildSpecTasksBuilderVolumesDownwardAPIOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIOutput
}

// DownwardAPI represents downward API about the pod that should populate this volume
type BuildSpecTasksBuilderVolumesDownwardAPIArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayInput `pulumi:"items"`
}

func (BuildSpecTasksBuilderVolumesDownwardAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPI)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIOutput() BuildSpecTasksBuilderVolumesDownwardAPIOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIOutput)
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIOutput).ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesDownwardAPIPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIArgs, BuildSpecTasksBuilderVolumesDownwardAPIPtr and BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesDownwardAPIPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput
}

type buildSpecTasksBuilderVolumesDownwardAPIPtrType BuildSpecTasksBuilderVolumesDownwardAPIArgs

func BuildSpecTasksBuilderVolumesDownwardAPIPtr(v *BuildSpecTasksBuilderVolumesDownwardAPIArgs) BuildSpecTasksBuilderVolumesDownwardAPIPtrInput {
	return (*buildSpecTasksBuilderVolumesDownwardAPIPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesDownwardAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPI)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput)
}

// DownwardAPI represents downward API about the pod that should populate this volume
type BuildSpecTasksBuilderVolumesDownwardAPIOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIOutput() BuildSpecTasksBuilderVolumesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPI) *BuildSpecTasksBuilderVolumesDownwardAPI {
		return &v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesDownwardAPIOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPI) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o BuildSpecTasksBuilderVolumesDownwardAPIOutput) Items() BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPI) []BuildSpecTasksBuilderVolumesDownwardAPIItems {
		return v.Items
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput) Elem() BuildSpecTasksBuilderVolumesDownwardAPIOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPI) BuildSpecTasksBuilderVolumesDownwardAPI { return *v }).(BuildSpecTasksBuilderVolumesDownwardAPIOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPI) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput) Items() BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPI) []BuildSpecTasksBuilderVolumesDownwardAPIItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksBuilderVolumesDownwardAPIItems struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path string `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs and BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs{...}
type BuildSpecTasksBuilderVolumesDownwardAPIItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path pulumi.StringInput `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput)
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsArray and BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsArray{ BuildSpecTasksBuilderVolumesDownwardAPIItemsArgs{...} }
type BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsArray []BuildSpecTasksBuilderVolumesDownwardAPIItemsInput

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsArray) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsArray) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput {
	return o
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) FieldRef() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItems) *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef {
		return v.FieldRef
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItems) string { return v.Path }).(pulumi.StringOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput) ResourceFieldRef() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItems) *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesDownwardAPIItems {
		return vs[0].([]BuildSpecTasksBuilderVolumesDownwardAPIItems)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs and BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs{...}
type BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput)
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput).ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs, BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtr and BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput
}

type buildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrType BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs

func BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtr(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefArgs) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrInput {
	return (*buildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef) *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef) BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs and BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs{...}
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput)
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput).ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs, BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtr and BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput
}

type buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrType BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs

func BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtr(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefArgs) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrInput {
	return (*buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) Divisor() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor {
		return v.Divisor
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Divisor() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor struct {
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs and BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs struct {
}

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput).ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs, BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtr and BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
	ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
}

type buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs

func BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtr(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput {
	return (*buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor) *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor {
		return &v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) Elem() BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor) BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisor {
		return *v
	}).(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type BuildSpecTasksBuilderVolumesEmptyDir struct {
	// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium *string `pulumi:"medium"`
	// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
	SizeLimit *BuildSpecTasksBuilderVolumesEmptyDirSizeLimit `pulumi:"sizeLimit"`
}

// BuildSpecTasksBuilderVolumesEmptyDirInput is an input type that accepts BuildSpecTasksBuilderVolumesEmptyDirArgs and BuildSpecTasksBuilderVolumesEmptyDirOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesEmptyDirInput` via:
//
//          BuildSpecTasksBuilderVolumesEmptyDirArgs{...}
type BuildSpecTasksBuilderVolumesEmptyDirInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesEmptyDirOutput() BuildSpecTasksBuilderVolumesEmptyDirOutput
	ToBuildSpecTasksBuilderVolumesEmptyDirOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesEmptyDirOutput
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type BuildSpecTasksBuilderVolumesEmptyDirArgs struct {
	// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
	SizeLimit BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrInput `pulumi:"sizeLimit"`
}

func (BuildSpecTasksBuilderVolumesEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesEmptyDir)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesEmptyDirArgs) ToBuildSpecTasksBuilderVolumesEmptyDirOutput() BuildSpecTasksBuilderVolumesEmptyDirOutput {
	return i.ToBuildSpecTasksBuilderVolumesEmptyDirOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesEmptyDirArgs) ToBuildSpecTasksBuilderVolumesEmptyDirOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesEmptyDirOutput)
}

func (i BuildSpecTasksBuilderVolumesEmptyDirArgs) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesEmptyDirArgs) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesEmptyDirOutput).ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesEmptyDirPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesEmptyDirArgs, BuildSpecTasksBuilderVolumesEmptyDirPtr and BuildSpecTasksBuilderVolumesEmptyDirPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesEmptyDirPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesEmptyDirArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesEmptyDirPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirPtrOutput
	ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesEmptyDirPtrOutput
}

type buildSpecTasksBuilderVolumesEmptyDirPtrType BuildSpecTasksBuilderVolumesEmptyDirArgs

func BuildSpecTasksBuilderVolumesEmptyDirPtr(v *BuildSpecTasksBuilderVolumesEmptyDirArgs) BuildSpecTasksBuilderVolumesEmptyDirPtrInput {
	return (*buildSpecTasksBuilderVolumesEmptyDirPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesEmptyDir)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesEmptyDirPtrType) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesEmptyDirPtrType) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesEmptyDirPtrOutput)
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type BuildSpecTasksBuilderVolumesEmptyDirOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesEmptyDir)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesEmptyDirOutput) ToBuildSpecTasksBuilderVolumesEmptyDirOutput() BuildSpecTasksBuilderVolumesEmptyDirOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirOutput) ToBuildSpecTasksBuilderVolumesEmptyDirOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirOutput) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesEmptyDirOutput) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesEmptyDir) *BuildSpecTasksBuilderVolumesEmptyDir {
		return &v
	}).(BuildSpecTasksBuilderVolumesEmptyDirPtrOutput)
}

// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o BuildSpecTasksBuilderVolumesEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
func (o BuildSpecTasksBuilderVolumesEmptyDirOutput) SizeLimit() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesEmptyDir) *BuildSpecTasksBuilderVolumesEmptyDirSizeLimit {
		return v.SizeLimit
	}).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksBuilderVolumesEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesEmptyDir)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesEmptyDirPtrOutput) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirPtrOutput) ToBuildSpecTasksBuilderVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirPtrOutput) Elem() BuildSpecTasksBuilderVolumesEmptyDirOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesEmptyDir) BuildSpecTasksBuilderVolumesEmptyDir { return *v }).(BuildSpecTasksBuilderVolumesEmptyDirOutput)
}

// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o BuildSpecTasksBuilderVolumesEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
func (o BuildSpecTasksBuilderVolumesEmptyDirPtrOutput) SizeLimit() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesEmptyDir) *BuildSpecTasksBuilderVolumesEmptyDirSizeLimit {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksBuilderVolumesEmptyDirSizeLimit struct {
}

// BuildSpecTasksBuilderVolumesEmptyDirSizeLimitInput is an input type that accepts BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs and BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesEmptyDirSizeLimitInput` via:
//
//          BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs{...}
type BuildSpecTasksBuilderVolumesEmptyDirSizeLimitInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput
	ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput
}

type BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs struct {
}

func (BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput {
	return i.ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput)
}

func (i BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput).ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs, BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtr and BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput
	ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput
}

type buildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrType BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs

func BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtr(v *BuildSpecTasksBuilderVolumesEmptyDirSizeLimitArgs) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrInput {
	return (*buildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrType) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrType) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesEmptyDirSizeLimit) *BuildSpecTasksBuilderVolumesEmptyDirSizeLimit {
		return &v
	}).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput) ToBuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput) Elem() BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesEmptyDirSizeLimit) BuildSpecTasksBuilderVolumesEmptyDirSizeLimit {
		return *v
	}).(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput)
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type BuildSpecTasksBuilderVolumesFc struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// Optional: FC target lun number
	Lun *int `pulumi:"lun"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: FC target worldwide names (WWNs)
	TargetWWNs []string `pulumi:"targetWWNs"`
	// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids []string `pulumi:"wwids"`
}

// BuildSpecTasksBuilderVolumesFcInput is an input type that accepts BuildSpecTasksBuilderVolumesFcArgs and BuildSpecTasksBuilderVolumesFcOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFcInput` via:
//
//          BuildSpecTasksBuilderVolumesFcArgs{...}
type BuildSpecTasksBuilderVolumesFcInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFcOutput() BuildSpecTasksBuilderVolumesFcOutput
	ToBuildSpecTasksBuilderVolumesFcOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFcOutput
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type BuildSpecTasksBuilderVolumesFcArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Optional: FC target lun number
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: FC target worldwide names (WWNs)
	TargetWWNs pulumi.StringArrayInput `pulumi:"targetWWNs"`
	// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids pulumi.StringArrayInput `pulumi:"wwids"`
}

func (BuildSpecTasksBuilderVolumesFcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFc)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesFcArgs) ToBuildSpecTasksBuilderVolumesFcOutput() BuildSpecTasksBuilderVolumesFcOutput {
	return i.ToBuildSpecTasksBuilderVolumesFcOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFcArgs) ToBuildSpecTasksBuilderVolumesFcOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFcOutput)
}

func (i BuildSpecTasksBuilderVolumesFcArgs) ToBuildSpecTasksBuilderVolumesFcPtrOutput() BuildSpecTasksBuilderVolumesFcPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFcArgs) ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFcOutput).ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesFcPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesFcArgs, BuildSpecTasksBuilderVolumesFcPtr and BuildSpecTasksBuilderVolumesFcPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFcPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesFcArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesFcPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFcPtrOutput() BuildSpecTasksBuilderVolumesFcPtrOutput
	ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFcPtrOutput
}

type buildSpecTasksBuilderVolumesFcPtrType BuildSpecTasksBuilderVolumesFcArgs

func BuildSpecTasksBuilderVolumesFcPtr(v *BuildSpecTasksBuilderVolumesFcArgs) BuildSpecTasksBuilderVolumesFcPtrInput {
	return (*buildSpecTasksBuilderVolumesFcPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesFcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFc)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesFcPtrType) ToBuildSpecTasksBuilderVolumesFcPtrOutput() BuildSpecTasksBuilderVolumesFcPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesFcPtrType) ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFcPtrOutput)
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type BuildSpecTasksBuilderVolumesFcOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFc)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFcOutput) ToBuildSpecTasksBuilderVolumesFcOutput() BuildSpecTasksBuilderVolumesFcOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFcOutput) ToBuildSpecTasksBuilderVolumesFcOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFcOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFcOutput) ToBuildSpecTasksBuilderVolumesFcPtrOutput() BuildSpecTasksBuilderVolumesFcPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesFcOutput) ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFcPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFc) *BuildSpecTasksBuilderVolumesFc {
		return &v
	}).(BuildSpecTasksBuilderVolumesFcPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesFcOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFc) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Optional: FC target lun number
func (o BuildSpecTasksBuilderVolumesFcOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFc) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesFcOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFc) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: FC target worldwide names (WWNs)
func (o BuildSpecTasksBuilderVolumesFcOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFc) []string { return v.TargetWWNs }).(pulumi.StringArrayOutput)
}

// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o BuildSpecTasksBuilderVolumesFcOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFc) []string { return v.Wwids }).(pulumi.StringArrayOutput)
}

type BuildSpecTasksBuilderVolumesFcPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFc)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFcPtrOutput) ToBuildSpecTasksBuilderVolumesFcPtrOutput() BuildSpecTasksBuilderVolumesFcPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFcPtrOutput) ToBuildSpecTasksBuilderVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFcPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFcPtrOutput) Elem() BuildSpecTasksBuilderVolumesFcOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFc) BuildSpecTasksBuilderVolumesFc { return *v }).(BuildSpecTasksBuilderVolumesFcOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesFcPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFc) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Optional: FC target lun number
func (o BuildSpecTasksBuilderVolumesFcPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFc) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesFcPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFc) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: FC target worldwide names (WWNs)
func (o BuildSpecTasksBuilderVolumesFcPtrOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.TargetWWNs
	}).(pulumi.StringArrayOutput)
}

// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o BuildSpecTasksBuilderVolumesFcPtrOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.Wwids
	}).(pulumi.StringArrayOutput)
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type BuildSpecTasksBuilderVolumesFlexVolume struct {
	// Driver is the name of the driver to use for this volume.
	Driver string `pulumi:"driver"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType *string `pulumi:"fsType"`
	// Optional: Extra command options if any.
	Options map[string]string `pulumi:"options"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
	SecretRef *BuildSpecTasksBuilderVolumesFlexVolumeSecretRef `pulumi:"secretRef"`
}

// BuildSpecTasksBuilderVolumesFlexVolumeInput is an input type that accepts BuildSpecTasksBuilderVolumesFlexVolumeArgs and BuildSpecTasksBuilderVolumesFlexVolumeOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlexVolumeInput` via:
//
//          BuildSpecTasksBuilderVolumesFlexVolumeArgs{...}
type BuildSpecTasksBuilderVolumesFlexVolumeInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlexVolumeOutput() BuildSpecTasksBuilderVolumesFlexVolumeOutput
	ToBuildSpecTasksBuilderVolumesFlexVolumeOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlexVolumeOutput
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type BuildSpecTasksBuilderVolumesFlexVolumeArgs struct {
	// Driver is the name of the driver to use for this volume.
	Driver pulumi.StringInput `pulumi:"driver"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Optional: Extra command options if any.
	Options pulumi.StringMapInput `pulumi:"options"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
	SecretRef BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrInput `pulumi:"secretRef"`
}

func (BuildSpecTasksBuilderVolumesFlexVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlexVolume)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeOutput() BuildSpecTasksBuilderVolumesFlexVolumeOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumeOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumeOutput)
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeArgs) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutput() BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeArgs) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumeOutput).ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesFlexVolumePtrInput is an input type that accepts BuildSpecTasksBuilderVolumesFlexVolumeArgs, BuildSpecTasksBuilderVolumesFlexVolumePtr and BuildSpecTasksBuilderVolumesFlexVolumePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlexVolumePtrInput` via:
//
//          BuildSpecTasksBuilderVolumesFlexVolumeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesFlexVolumePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutput() BuildSpecTasksBuilderVolumesFlexVolumePtrOutput
	ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlexVolumePtrOutput
}

type buildSpecTasksBuilderVolumesFlexVolumePtrType BuildSpecTasksBuilderVolumesFlexVolumeArgs

func BuildSpecTasksBuilderVolumesFlexVolumePtr(v *BuildSpecTasksBuilderVolumesFlexVolumeArgs) BuildSpecTasksBuilderVolumesFlexVolumePtrInput {
	return (*buildSpecTasksBuilderVolumesFlexVolumePtrType)(v)
}

func (*buildSpecTasksBuilderVolumesFlexVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFlexVolume)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesFlexVolumePtrType) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutput() BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesFlexVolumePtrType) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumePtrOutput)
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type BuildSpecTasksBuilderVolumesFlexVolumeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlexVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlexVolume)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeOutput() BuildSpecTasksBuilderVolumesFlexVolumeOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutput() BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolume) *BuildSpecTasksBuilderVolumesFlexVolume {
		return &v
	}).(BuildSpecTasksBuilderVolumesFlexVolumePtrOutput)
}

// Driver is the name of the driver to use for this volume.
func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolume) string { return v.Driver }).(pulumi.StringOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Optional: Extra command options if any.
func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolume) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
func (o BuildSpecTasksBuilderVolumesFlexVolumeOutput) SecretRef() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolume) *BuildSpecTasksBuilderVolumesFlexVolumeSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput)
}

type BuildSpecTasksBuilderVolumesFlexVolumePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFlexVolume)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutput() BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) ToBuildSpecTasksBuilderVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) Elem() BuildSpecTasksBuilderVolumesFlexVolumeOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolume) BuildSpecTasksBuilderVolumesFlexVolume { return *v }).(BuildSpecTasksBuilderVolumesFlexVolumeOutput)
}

// Driver is the name of the driver to use for this volume.
func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Optional: Extra command options if any.
func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolume) map[string]string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringMapOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
func (o BuildSpecTasksBuilderVolumesFlexVolumePtrOutput) SecretRef() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolume) *BuildSpecTasksBuilderVolumesFlexVolumeSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput)
}

// Optional: Extra command options if any.
type BuildSpecTasksBuilderVolumesFlexVolumeOptions struct {
}

// BuildSpecTasksBuilderVolumesFlexVolumeOptionsInput is an input type that accepts BuildSpecTasksBuilderVolumesFlexVolumeOptionsArgs and BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlexVolumeOptionsInput` via:
//
//          BuildSpecTasksBuilderVolumesFlexVolumeOptionsArgs{...}
type BuildSpecTasksBuilderVolumesFlexVolumeOptionsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput() BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput
	ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput
}

// Optional: Extra command options if any.
type BuildSpecTasksBuilderVolumesFlexVolumeOptionsArgs struct {
}

func (BuildSpecTasksBuilderVolumesFlexVolumeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlexVolumeOptions)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeOptionsArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput() BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeOptionsArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput)
}

// Optional: Extra command options if any.
type BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlexVolumeOptions)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput() BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeOptionsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput {
	return o
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
type BuildSpecTasksBuilderVolumesFlexVolumeSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesFlexVolumeSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs and BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlexVolumeSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesFlexVolumeSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput
	ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
type BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput).ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs, BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtr and BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrType BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs

func BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtr(v *BuildSpecTasksBuilderVolumesFlexVolumeSecretRefArgs) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrType) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrType) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput)
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
type BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolumeSecretRef) *BuildSpecTasksBuilderVolumesFlexVolumeSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlexVolumeSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolumeSecretRef) BuildSpecTasksBuilderVolumesFlexVolumeSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlexVolumeSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type BuildSpecTasksBuilderVolumesFlocker struct {
	// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
	DatasetName *string `pulumi:"datasetName"`
	// UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `pulumi:"datasetUUID"`
}

// BuildSpecTasksBuilderVolumesFlockerInput is an input type that accepts BuildSpecTasksBuilderVolumesFlockerArgs and BuildSpecTasksBuilderVolumesFlockerOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlockerInput` via:
//
//          BuildSpecTasksBuilderVolumesFlockerArgs{...}
type BuildSpecTasksBuilderVolumesFlockerInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlockerOutput() BuildSpecTasksBuilderVolumesFlockerOutput
	ToBuildSpecTasksBuilderVolumesFlockerOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlockerOutput
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type BuildSpecTasksBuilderVolumesFlockerArgs struct {
	// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
	DatasetName pulumi.StringPtrInput `pulumi:"datasetName"`
	// UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID pulumi.StringPtrInput `pulumi:"datasetUUID"`
}

func (BuildSpecTasksBuilderVolumesFlockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlocker)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesFlockerArgs) ToBuildSpecTasksBuilderVolumesFlockerOutput() BuildSpecTasksBuilderVolumesFlockerOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlockerOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlockerArgs) ToBuildSpecTasksBuilderVolumesFlockerOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlockerOutput)
}

func (i BuildSpecTasksBuilderVolumesFlockerArgs) ToBuildSpecTasksBuilderVolumesFlockerPtrOutput() BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesFlockerArgs) ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlockerOutput).ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesFlockerPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesFlockerArgs, BuildSpecTasksBuilderVolumesFlockerPtr and BuildSpecTasksBuilderVolumesFlockerPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesFlockerPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesFlockerArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesFlockerPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesFlockerPtrOutput() BuildSpecTasksBuilderVolumesFlockerPtrOutput
	ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesFlockerPtrOutput
}

type buildSpecTasksBuilderVolumesFlockerPtrType BuildSpecTasksBuilderVolumesFlockerArgs

func BuildSpecTasksBuilderVolumesFlockerPtr(v *BuildSpecTasksBuilderVolumesFlockerArgs) BuildSpecTasksBuilderVolumesFlockerPtrInput {
	return (*buildSpecTasksBuilderVolumesFlockerPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesFlockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFlocker)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesFlockerPtrType) ToBuildSpecTasksBuilderVolumesFlockerPtrOutput() BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesFlockerPtrType) ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesFlockerPtrOutput)
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type BuildSpecTasksBuilderVolumesFlockerOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesFlocker)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlockerOutput) ToBuildSpecTasksBuilderVolumesFlockerOutput() BuildSpecTasksBuilderVolumesFlockerOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlockerOutput) ToBuildSpecTasksBuilderVolumesFlockerOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlockerOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlockerOutput) ToBuildSpecTasksBuilderVolumesFlockerPtrOutput() BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesFlockerOutput) ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlocker) *BuildSpecTasksBuilderVolumesFlocker {
		return &v
	}).(BuildSpecTasksBuilderVolumesFlockerPtrOutput)
}

// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
func (o BuildSpecTasksBuilderVolumesFlockerOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlocker) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// UUID of the dataset. This is unique identifier of a Flocker dataset
func (o BuildSpecTasksBuilderVolumesFlockerOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesFlocker) *string { return v.DatasetUUID }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesFlockerPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesFlockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesFlocker)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesFlockerPtrOutput) ToBuildSpecTasksBuilderVolumesFlockerPtrOutput() BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlockerPtrOutput) ToBuildSpecTasksBuilderVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesFlockerPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesFlockerPtrOutput) Elem() BuildSpecTasksBuilderVolumesFlockerOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlocker) BuildSpecTasksBuilderVolumesFlocker { return *v }).(BuildSpecTasksBuilderVolumesFlockerOutput)
}

// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
func (o BuildSpecTasksBuilderVolumesFlockerPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetName
	}).(pulumi.StringPtrOutput)
}

// UUID of the dataset. This is unique identifier of a Flocker dataset
func (o BuildSpecTasksBuilderVolumesFlockerPtrOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetUUID
	}).(pulumi.StringPtrOutput)
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type BuildSpecTasksBuilderVolumesGcePersistentDisk struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition *int `pulumi:"partition"`
	// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName string `pulumi:"pdName"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksBuilderVolumesGcePersistentDiskInput is an input type that accepts BuildSpecTasksBuilderVolumesGcePersistentDiskArgs and BuildSpecTasksBuilderVolumesGcePersistentDiskOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesGcePersistentDiskInput` via:
//
//          BuildSpecTasksBuilderVolumesGcePersistentDiskArgs{...}
type BuildSpecTasksBuilderVolumesGcePersistentDiskInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskOutput
	ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskOutput
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type BuildSpecTasksBuilderVolumesGcePersistentDiskArgs struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName pulumi.StringInput `pulumi:"pdName"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksBuilderVolumesGcePersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesGcePersistentDisk)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesGcePersistentDiskArgs) ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskOutput {
	return i.ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesGcePersistentDiskArgs) ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGcePersistentDiskOutput)
}

func (i BuildSpecTasksBuilderVolumesGcePersistentDiskArgs) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesGcePersistentDiskArgs) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGcePersistentDiskOutput).ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesGcePersistentDiskPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesGcePersistentDiskArgs, BuildSpecTasksBuilderVolumesGcePersistentDiskPtr and BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesGcePersistentDiskPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesGcePersistentDiskArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesGcePersistentDiskPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput
	ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput
}

type buildSpecTasksBuilderVolumesGcePersistentDiskPtrType BuildSpecTasksBuilderVolumesGcePersistentDiskArgs

func BuildSpecTasksBuilderVolumesGcePersistentDiskPtr(v *BuildSpecTasksBuilderVolumesGcePersistentDiskArgs) BuildSpecTasksBuilderVolumesGcePersistentDiskPtrInput {
	return (*buildSpecTasksBuilderVolumesGcePersistentDiskPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesGcePersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesGcePersistentDisk)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesGcePersistentDiskPtrType) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesGcePersistentDiskPtrType) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput)
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type BuildSpecTasksBuilderVolumesGcePersistentDiskOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesGcePersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) ToBuildSpecTasksBuilderVolumesGcePersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGcePersistentDisk) *BuildSpecTasksBuilderVolumesGcePersistentDisk {
		return &v
	}).(BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGcePersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGcePersistentDisk) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) PdName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGcePersistentDisk) string { return v.PdName }).(pulumi.StringOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGcePersistentDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesGcePersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) ToBuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) Elem() BuildSpecTasksBuilderVolumesGcePersistentDiskOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGcePersistentDisk) BuildSpecTasksBuilderVolumesGcePersistentDisk {
		return *v
	}).(BuildSpecTasksBuilderVolumesGcePersistentDiskOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGcePersistentDisk) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return &v.PdName
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGcePersistentDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type BuildSpecTasksBuilderVolumesGitRepo struct {
	// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
	Directory *string `pulumi:"directory"`
	// Repository URL
	Repository string `pulumi:"repository"`
	// Commit hash for the specified revision.
	Revision *string `pulumi:"revision"`
}

// BuildSpecTasksBuilderVolumesGitRepoInput is an input type that accepts BuildSpecTasksBuilderVolumesGitRepoArgs and BuildSpecTasksBuilderVolumesGitRepoOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesGitRepoInput` via:
//
//          BuildSpecTasksBuilderVolumesGitRepoArgs{...}
type BuildSpecTasksBuilderVolumesGitRepoInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesGitRepoOutput() BuildSpecTasksBuilderVolumesGitRepoOutput
	ToBuildSpecTasksBuilderVolumesGitRepoOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesGitRepoOutput
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type BuildSpecTasksBuilderVolumesGitRepoArgs struct {
	// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// Repository URL
	Repository pulumi.StringInput `pulumi:"repository"`
	// Commit hash for the specified revision.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
}

func (BuildSpecTasksBuilderVolumesGitRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesGitRepo)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesGitRepoArgs) ToBuildSpecTasksBuilderVolumesGitRepoOutput() BuildSpecTasksBuilderVolumesGitRepoOutput {
	return i.ToBuildSpecTasksBuilderVolumesGitRepoOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesGitRepoArgs) ToBuildSpecTasksBuilderVolumesGitRepoOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGitRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGitRepoOutput)
}

func (i BuildSpecTasksBuilderVolumesGitRepoArgs) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutput() BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesGitRepoArgs) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGitRepoOutput).ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesGitRepoPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesGitRepoArgs, BuildSpecTasksBuilderVolumesGitRepoPtr and BuildSpecTasksBuilderVolumesGitRepoPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesGitRepoPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesGitRepoArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesGitRepoPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesGitRepoPtrOutput() BuildSpecTasksBuilderVolumesGitRepoPtrOutput
	ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesGitRepoPtrOutput
}

type buildSpecTasksBuilderVolumesGitRepoPtrType BuildSpecTasksBuilderVolumesGitRepoArgs

func BuildSpecTasksBuilderVolumesGitRepoPtr(v *BuildSpecTasksBuilderVolumesGitRepoArgs) BuildSpecTasksBuilderVolumesGitRepoPtrInput {
	return (*buildSpecTasksBuilderVolumesGitRepoPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesGitRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesGitRepo)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesGitRepoPtrType) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutput() BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesGitRepoPtrType) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGitRepoPtrOutput)
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type BuildSpecTasksBuilderVolumesGitRepoOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesGitRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesGitRepo)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesGitRepoOutput) ToBuildSpecTasksBuilderVolumesGitRepoOutput() BuildSpecTasksBuilderVolumesGitRepoOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGitRepoOutput) ToBuildSpecTasksBuilderVolumesGitRepoOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGitRepoOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGitRepoOutput) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutput() BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesGitRepoOutput) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGitRepo) *BuildSpecTasksBuilderVolumesGitRepo {
		return &v
	}).(BuildSpecTasksBuilderVolumesGitRepoPtrOutput)
}

// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
func (o BuildSpecTasksBuilderVolumesGitRepoOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGitRepo) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// Repository URL
func (o BuildSpecTasksBuilderVolumesGitRepoOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGitRepo) string { return v.Repository }).(pulumi.StringOutput)
}

// Commit hash for the specified revision.
func (o BuildSpecTasksBuilderVolumesGitRepoOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGitRepo) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesGitRepoPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesGitRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesGitRepo)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesGitRepoPtrOutput) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutput() BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGitRepoPtrOutput) ToBuildSpecTasksBuilderVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGitRepoPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGitRepoPtrOutput) Elem() BuildSpecTasksBuilderVolumesGitRepoOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGitRepo) BuildSpecTasksBuilderVolumesGitRepo { return *v }).(BuildSpecTasksBuilderVolumesGitRepoOutput)
}

// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
func (o BuildSpecTasksBuilderVolumesGitRepoPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// Repository URL
func (o BuildSpecTasksBuilderVolumesGitRepoPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// Commit hash for the specified revision.
func (o BuildSpecTasksBuilderVolumesGitRepoPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
type BuildSpecTasksBuilderVolumesGlusterfs struct {
	// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints string `pulumi:"endpoints"`
	// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path string `pulumi:"path"`
	// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksBuilderVolumesGlusterfsInput is an input type that accepts BuildSpecTasksBuilderVolumesGlusterfsArgs and BuildSpecTasksBuilderVolumesGlusterfsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesGlusterfsInput` via:
//
//          BuildSpecTasksBuilderVolumesGlusterfsArgs{...}
type BuildSpecTasksBuilderVolumesGlusterfsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesGlusterfsOutput() BuildSpecTasksBuilderVolumesGlusterfsOutput
	ToBuildSpecTasksBuilderVolumesGlusterfsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesGlusterfsOutput
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
type BuildSpecTasksBuilderVolumesGlusterfsArgs struct {
	// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints pulumi.StringInput `pulumi:"endpoints"`
	// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path pulumi.StringInput `pulumi:"path"`
	// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksBuilderVolumesGlusterfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesGlusterfs)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesGlusterfsArgs) ToBuildSpecTasksBuilderVolumesGlusterfsOutput() BuildSpecTasksBuilderVolumesGlusterfsOutput {
	return i.ToBuildSpecTasksBuilderVolumesGlusterfsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesGlusterfsArgs) ToBuildSpecTasksBuilderVolumesGlusterfsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGlusterfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGlusterfsOutput)
}

func (i BuildSpecTasksBuilderVolumesGlusterfsArgs) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutput() BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesGlusterfsArgs) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGlusterfsOutput).ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesGlusterfsPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesGlusterfsArgs, BuildSpecTasksBuilderVolumesGlusterfsPtr and BuildSpecTasksBuilderVolumesGlusterfsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesGlusterfsPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesGlusterfsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesGlusterfsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutput() BuildSpecTasksBuilderVolumesGlusterfsPtrOutput
	ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesGlusterfsPtrOutput
}

type buildSpecTasksBuilderVolumesGlusterfsPtrType BuildSpecTasksBuilderVolumesGlusterfsArgs

func BuildSpecTasksBuilderVolumesGlusterfsPtr(v *BuildSpecTasksBuilderVolumesGlusterfsArgs) BuildSpecTasksBuilderVolumesGlusterfsPtrInput {
	return (*buildSpecTasksBuilderVolumesGlusterfsPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesGlusterfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesGlusterfs)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesGlusterfsPtrType) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutput() BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesGlusterfsPtrType) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesGlusterfsPtrOutput)
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
type BuildSpecTasksBuilderVolumesGlusterfsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesGlusterfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesGlusterfs)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) ToBuildSpecTasksBuilderVolumesGlusterfsOutput() BuildSpecTasksBuilderVolumesGlusterfsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) ToBuildSpecTasksBuilderVolumesGlusterfsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGlusterfsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutput() BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGlusterfs) *BuildSpecTasksBuilderVolumesGlusterfs {
		return &v
	}).(BuildSpecTasksBuilderVolumesGlusterfsPtrOutput)
}

// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) Endpoints() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGlusterfs) string { return v.Endpoints }).(pulumi.StringOutput)
}

// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGlusterfs) string { return v.Path }).(pulumi.StringOutput)
}

// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksBuilderVolumesGlusterfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesGlusterfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesGlusterfsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesGlusterfs)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutput() BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) ToBuildSpecTasksBuilderVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesGlusterfsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) Elem() BuildSpecTasksBuilderVolumesGlusterfsOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGlusterfs) BuildSpecTasksBuilderVolumesGlusterfs { return *v }).(BuildSpecTasksBuilderVolumesGlusterfsOutput)
}

// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoints
	}).(pulumi.StringPtrOutput)
}

// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksBuilderVolumesGlusterfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesGlusterfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
type BuildSpecTasksBuilderVolumesHostPath struct {
	// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path string `pulumi:"path"`
	// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type *string `pulumi:"type"`
}

// BuildSpecTasksBuilderVolumesHostPathInput is an input type that accepts BuildSpecTasksBuilderVolumesHostPathArgs and BuildSpecTasksBuilderVolumesHostPathOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesHostPathInput` via:
//
//          BuildSpecTasksBuilderVolumesHostPathArgs{...}
type BuildSpecTasksBuilderVolumesHostPathInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesHostPathOutput() BuildSpecTasksBuilderVolumesHostPathOutput
	ToBuildSpecTasksBuilderVolumesHostPathOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesHostPathOutput
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
type BuildSpecTasksBuilderVolumesHostPathArgs struct {
	// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path pulumi.StringInput `pulumi:"path"`
	// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BuildSpecTasksBuilderVolumesHostPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesHostPath)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesHostPathArgs) ToBuildSpecTasksBuilderVolumesHostPathOutput() BuildSpecTasksBuilderVolumesHostPathOutput {
	return i.ToBuildSpecTasksBuilderVolumesHostPathOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesHostPathArgs) ToBuildSpecTasksBuilderVolumesHostPathOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesHostPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesHostPathOutput)
}

func (i BuildSpecTasksBuilderVolumesHostPathArgs) ToBuildSpecTasksBuilderVolumesHostPathPtrOutput() BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesHostPathArgs) ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesHostPathOutput).ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesHostPathPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesHostPathArgs, BuildSpecTasksBuilderVolumesHostPathPtr and BuildSpecTasksBuilderVolumesHostPathPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesHostPathPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesHostPathArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesHostPathPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesHostPathPtrOutput() BuildSpecTasksBuilderVolumesHostPathPtrOutput
	ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesHostPathPtrOutput
}

type buildSpecTasksBuilderVolumesHostPathPtrType BuildSpecTasksBuilderVolumesHostPathArgs

func BuildSpecTasksBuilderVolumesHostPathPtr(v *BuildSpecTasksBuilderVolumesHostPathArgs) BuildSpecTasksBuilderVolumesHostPathPtrInput {
	return (*buildSpecTasksBuilderVolumesHostPathPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesHostPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesHostPath)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesHostPathPtrType) ToBuildSpecTasksBuilderVolumesHostPathPtrOutput() BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesHostPathPtrType) ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesHostPathPtrOutput)
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
type BuildSpecTasksBuilderVolumesHostPathOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesHostPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesHostPath)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesHostPathOutput) ToBuildSpecTasksBuilderVolumesHostPathOutput() BuildSpecTasksBuilderVolumesHostPathOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesHostPathOutput) ToBuildSpecTasksBuilderVolumesHostPathOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesHostPathOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesHostPathOutput) ToBuildSpecTasksBuilderVolumesHostPathPtrOutput() BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesHostPathOutput) ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesHostPath) *BuildSpecTasksBuilderVolumesHostPath {
		return &v
	}).(BuildSpecTasksBuilderVolumesHostPathPtrOutput)
}

// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksBuilderVolumesHostPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesHostPath) string { return v.Path }).(pulumi.StringOutput)
}

// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksBuilderVolumesHostPathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesHostPath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesHostPathPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesHostPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesHostPath)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesHostPathPtrOutput) ToBuildSpecTasksBuilderVolumesHostPathPtrOutput() BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesHostPathPtrOutput) ToBuildSpecTasksBuilderVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesHostPathPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesHostPathPtrOutput) Elem() BuildSpecTasksBuilderVolumesHostPathOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesHostPath) BuildSpecTasksBuilderVolumesHostPath { return *v }).(BuildSpecTasksBuilderVolumesHostPathOutput)
}

// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksBuilderVolumesHostPathPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksBuilderVolumesHostPathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
type BuildSpecTasksBuilderVolumesIscsi struct {
	// whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery *bool `pulumi:"chapAuthDiscovery"`
	// whether support iSCSI Session CHAP authentication
	ChapAuthSession *bool `pulumi:"chapAuthSession"`
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
	InitiatorName *string `pulumi:"initiatorName"`
	// Target iSCSI Qualified Name.
	Iqn string `pulumi:"iqn"`
	// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
	IscsiInterface *string `pulumi:"iscsiInterface"`
	// iSCSI Target Lun number.
	Lun int `pulumi:"lun"`
	// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	Portals []string `pulumi:"portals"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// CHAP Secret for iSCSI target and initiator authentication
	SecretRef *BuildSpecTasksBuilderVolumesIscsiSecretRef `pulumi:"secretRef"`
	// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	TargetPortal string `pulumi:"targetPortal"`
}

// BuildSpecTasksBuilderVolumesIscsiInput is an input type that accepts BuildSpecTasksBuilderVolumesIscsiArgs and BuildSpecTasksBuilderVolumesIscsiOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesIscsiInput` via:
//
//          BuildSpecTasksBuilderVolumesIscsiArgs{...}
type BuildSpecTasksBuilderVolumesIscsiInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesIscsiOutput() BuildSpecTasksBuilderVolumesIscsiOutput
	ToBuildSpecTasksBuilderVolumesIscsiOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesIscsiOutput
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
type BuildSpecTasksBuilderVolumesIscsiArgs struct {
	// whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery pulumi.BoolPtrInput `pulumi:"chapAuthDiscovery"`
	// whether support iSCSI Session CHAP authentication
	ChapAuthSession pulumi.BoolPtrInput `pulumi:"chapAuthSession"`
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
	InitiatorName pulumi.StringPtrInput `pulumi:"initiatorName"`
	// Target iSCSI Qualified Name.
	Iqn pulumi.StringInput `pulumi:"iqn"`
	// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
	IscsiInterface pulumi.StringPtrInput `pulumi:"iscsiInterface"`
	// iSCSI Target Lun number.
	Lun pulumi.IntInput `pulumi:"lun"`
	// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	Portals pulumi.StringArrayInput `pulumi:"portals"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// CHAP Secret for iSCSI target and initiator authentication
	SecretRef BuildSpecTasksBuilderVolumesIscsiSecretRefPtrInput `pulumi:"secretRef"`
	// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	TargetPortal pulumi.StringInput `pulumi:"targetPortal"`
}

func (BuildSpecTasksBuilderVolumesIscsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesIscsi)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesIscsiArgs) ToBuildSpecTasksBuilderVolumesIscsiOutput() BuildSpecTasksBuilderVolumesIscsiOutput {
	return i.ToBuildSpecTasksBuilderVolumesIscsiOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesIscsiArgs) ToBuildSpecTasksBuilderVolumesIscsiOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesIscsiOutput)
}

func (i BuildSpecTasksBuilderVolumesIscsiArgs) ToBuildSpecTasksBuilderVolumesIscsiPtrOutput() BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesIscsiArgs) ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesIscsiOutput).ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesIscsiPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesIscsiArgs, BuildSpecTasksBuilderVolumesIscsiPtr and BuildSpecTasksBuilderVolumesIscsiPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesIscsiPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesIscsiArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesIscsiPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesIscsiPtrOutput() BuildSpecTasksBuilderVolumesIscsiPtrOutput
	ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesIscsiPtrOutput
}

type buildSpecTasksBuilderVolumesIscsiPtrType BuildSpecTasksBuilderVolumesIscsiArgs

func BuildSpecTasksBuilderVolumesIscsiPtr(v *BuildSpecTasksBuilderVolumesIscsiArgs) BuildSpecTasksBuilderVolumesIscsiPtrInput {
	return (*buildSpecTasksBuilderVolumesIscsiPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesIscsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesIscsi)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesIscsiPtrType) ToBuildSpecTasksBuilderVolumesIscsiPtrOutput() BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesIscsiPtrType) ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesIscsiPtrOutput)
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
type BuildSpecTasksBuilderVolumesIscsiOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesIscsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesIscsi)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesIscsiOutput) ToBuildSpecTasksBuilderVolumesIscsiOutput() BuildSpecTasksBuilderVolumesIscsiOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiOutput) ToBuildSpecTasksBuilderVolumesIscsiOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiOutput) ToBuildSpecTasksBuilderVolumesIscsiPtrOutput() BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesIscsiOutput) ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *BuildSpecTasksBuilderVolumesIscsi {
		return &v
	}).(BuildSpecTasksBuilderVolumesIscsiPtrOutput)
}

// whether support iSCSI Discovery CHAP authentication
func (o BuildSpecTasksBuilderVolumesIscsiOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *bool { return v.ChapAuthDiscovery }).(pulumi.BoolPtrOutput)
}

// whether support iSCSI Session CHAP authentication
func (o BuildSpecTasksBuilderVolumesIscsiOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *bool { return v.ChapAuthSession }).(pulumi.BoolPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesIscsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
func (o BuildSpecTasksBuilderVolumesIscsiOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *string { return v.InitiatorName }).(pulumi.StringPtrOutput)
}

// Target iSCSI Qualified Name.
func (o BuildSpecTasksBuilderVolumesIscsiOutput) Iqn() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) string { return v.Iqn }).(pulumi.StringOutput)
}

// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
func (o BuildSpecTasksBuilderVolumesIscsiOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *string { return v.IscsiInterface }).(pulumi.StringPtrOutput)
}

// iSCSI Target Lun number.
func (o BuildSpecTasksBuilderVolumesIscsiOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) int { return v.Lun }).(pulumi.IntOutput)
}

// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksBuilderVolumesIscsiOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) []string { return v.Portals }).(pulumi.StringArrayOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
func (o BuildSpecTasksBuilderVolumesIscsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
func (o BuildSpecTasksBuilderVolumesIscsiOutput) SecretRef() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) *BuildSpecTasksBuilderVolumesIscsiSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput)
}

// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksBuilderVolumesIscsiOutput) TargetPortal() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsi) string { return v.TargetPortal }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesIscsiPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesIscsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesIscsi)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) ToBuildSpecTasksBuilderVolumesIscsiPtrOutput() BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) ToBuildSpecTasksBuilderVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) Elem() BuildSpecTasksBuilderVolumesIscsiOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) BuildSpecTasksBuilderVolumesIscsi { return *v }).(BuildSpecTasksBuilderVolumesIscsiOutput)
}

// whether support iSCSI Discovery CHAP authentication
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthDiscovery
	}).(pulumi.BoolPtrOutput)
}

// whether support iSCSI Session CHAP authentication
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthSession
	}).(pulumi.BoolPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// Target iSCSI Qualified Name.
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return &v.Iqn
	}).(pulumi.StringPtrOutput)
}

// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.IscsiInterface
	}).(pulumi.StringPtrOutput)
}

// iSCSI Target Lun number.
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *int {
		if v == nil {
			return nil
		}
		return &v.Lun
	}).(pulumi.IntPtrOutput)
}

// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) []string {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(pulumi.StringArrayOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) SecretRef() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *BuildSpecTasksBuilderVolumesIscsiSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput)
}

// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksBuilderVolumesIscsiPtrOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return &v.TargetPortal
	}).(pulumi.StringPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
type BuildSpecTasksBuilderVolumesIscsiSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesIscsiSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesIscsiSecretRefArgs and BuildSpecTasksBuilderVolumesIscsiSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesIscsiSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesIscsiSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesIscsiSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefOutput
	ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefOutput
}

// CHAP Secret for iSCSI target and initiator authentication
type BuildSpecTasksBuilderVolumesIscsiSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesIscsiSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesIscsiSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesIscsiSecretRefArgs) ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesIscsiSecretRefArgs) ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesIscsiSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesIscsiSecretRefArgs) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesIscsiSecretRefArgs) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesIscsiSecretRefOutput).ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesIscsiSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesIscsiSecretRefArgs, BuildSpecTasksBuilderVolumesIscsiSecretRefPtr and BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesIscsiSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesIscsiSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesIscsiSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesIscsiSecretRefPtrType BuildSpecTasksBuilderVolumesIscsiSecretRefArgs

func BuildSpecTasksBuilderVolumesIscsiSecretRefPtr(v *BuildSpecTasksBuilderVolumesIscsiSecretRefArgs) BuildSpecTasksBuilderVolumesIscsiSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesIscsiSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesIscsiSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesIscsiSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesIscsiSecretRefPtrType) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesIscsiSecretRefPtrType) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
type BuildSpecTasksBuilderVolumesIscsiSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesIscsiSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesIscsiSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefOutput) ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefOutput) ToBuildSpecTasksBuilderVolumesIscsiSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefOutput) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefOutput) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsiSecretRef) *BuildSpecTasksBuilderVolumesIscsiSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesIscsiSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesIscsiSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesIscsiSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput() BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesIscsiSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsiSecretRef) BuildSpecTasksBuilderVolumesIscsiSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesIscsiSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesIscsiSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type BuildSpecTasksBuilderVolumesNfs struct {
	// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path string `pulumi:"path"`
	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `pulumi:"readOnly"`
	// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server string `pulumi:"server"`
}

// BuildSpecTasksBuilderVolumesNfsInput is an input type that accepts BuildSpecTasksBuilderVolumesNfsArgs and BuildSpecTasksBuilderVolumesNfsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesNfsInput` via:
//
//          BuildSpecTasksBuilderVolumesNfsArgs{...}
type BuildSpecTasksBuilderVolumesNfsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesNfsOutput() BuildSpecTasksBuilderVolumesNfsOutput
	ToBuildSpecTasksBuilderVolumesNfsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesNfsOutput
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type BuildSpecTasksBuilderVolumesNfsArgs struct {
	// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path pulumi.StringInput `pulumi:"path"`
	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server pulumi.StringInput `pulumi:"server"`
}

func (BuildSpecTasksBuilderVolumesNfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesNfs)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesNfsArgs) ToBuildSpecTasksBuilderVolumesNfsOutput() BuildSpecTasksBuilderVolumesNfsOutput {
	return i.ToBuildSpecTasksBuilderVolumesNfsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesNfsArgs) ToBuildSpecTasksBuilderVolumesNfsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesNfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesNfsOutput)
}

func (i BuildSpecTasksBuilderVolumesNfsArgs) ToBuildSpecTasksBuilderVolumesNfsPtrOutput() BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesNfsArgs) ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesNfsOutput).ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesNfsPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesNfsArgs, BuildSpecTasksBuilderVolumesNfsPtr and BuildSpecTasksBuilderVolumesNfsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesNfsPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesNfsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesNfsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesNfsPtrOutput() BuildSpecTasksBuilderVolumesNfsPtrOutput
	ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesNfsPtrOutput
}

type buildSpecTasksBuilderVolumesNfsPtrType BuildSpecTasksBuilderVolumesNfsArgs

func BuildSpecTasksBuilderVolumesNfsPtr(v *BuildSpecTasksBuilderVolumesNfsArgs) BuildSpecTasksBuilderVolumesNfsPtrInput {
	return (*buildSpecTasksBuilderVolumesNfsPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesNfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesNfs)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesNfsPtrType) ToBuildSpecTasksBuilderVolumesNfsPtrOutput() BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesNfsPtrType) ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesNfsPtrOutput)
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type BuildSpecTasksBuilderVolumesNfsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesNfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesNfs)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesNfsOutput) ToBuildSpecTasksBuilderVolumesNfsOutput() BuildSpecTasksBuilderVolumesNfsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesNfsOutput) ToBuildSpecTasksBuilderVolumesNfsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesNfsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesNfsOutput) ToBuildSpecTasksBuilderVolumesNfsPtrOutput() BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesNfsOutput) ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesNfs) *BuildSpecTasksBuilderVolumesNfs {
		return &v
	}).(BuildSpecTasksBuilderVolumesNfsPtrOutput)
}

// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesNfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesNfs) string { return v.Path }).(pulumi.StringOutput)
}

// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesNfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesNfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesNfsOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesNfs) string { return v.Server }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesNfsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesNfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesNfs)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesNfsPtrOutput) ToBuildSpecTasksBuilderVolumesNfsPtrOutput() BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesNfsPtrOutput) ToBuildSpecTasksBuilderVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesNfsPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesNfsPtrOutput) Elem() BuildSpecTasksBuilderVolumesNfsOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesNfs) BuildSpecTasksBuilderVolumesNfs { return *v }).(BuildSpecTasksBuilderVolumesNfsOutput)
}

// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesNfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesNfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesNfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksBuilderVolumesNfsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type BuildSpecTasksBuilderVolumesPersistentVolumeClaim struct {
	// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName string `pulumi:"claimName"`
	// Will force the ReadOnly setting in VolumeMounts. Default false.
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksBuilderVolumesPersistentVolumeClaimInput is an input type that accepts BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs and BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesPersistentVolumeClaimInput` via:
//
//          BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs{...}
type BuildSpecTasksBuilderVolumesPersistentVolumeClaimInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput
	ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs struct {
	// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName pulumi.StringInput `pulumi:"claimName"`
	// Will force the ReadOnly setting in VolumeMounts. Default false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput {
	return i.ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput)
}

func (i BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput).ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs, BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtr and BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput
	ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput
}

type buildSpecTasksBuilderVolumesPersistentVolumeClaimPtrType BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs

func BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtr(v *BuildSpecTasksBuilderVolumesPersistentVolumeClaimArgs) BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrInput {
	return (*buildSpecTasksBuilderVolumesPersistentVolumeClaimPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesPersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesPersistentVolumeClaimPtrType) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesPersistentVolumeClaimPtrType) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput)
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPersistentVolumeClaim) *BuildSpecTasksBuilderVolumesPersistentVolumeClaim {
		return &v
	}).(BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput)
}

// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ClaimName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPersistentVolumeClaim) string { return v.ClaimName }).(pulumi.StringOutput)
}

// Will force the ReadOnly setting in VolumeMounts. Default false.
func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPersistentVolumeClaim) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput) ToBuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput) Elem() BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPersistentVolumeClaim) BuildSpecTasksBuilderVolumesPersistentVolumeClaim {
		return *v
	}).(BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput)
}

// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPersistentVolumeClaim) *string {
		if v == nil {
			return nil
		}
		return &v.ClaimName
	}).(pulumi.StringPtrOutput)
}

// Will force the ReadOnly setting in VolumeMounts. Default false.
func (o BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPersistentVolumeClaim) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesPhotonPersistentDisk struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// ID that identifies Photon Controller persistent disk
	PdID string `pulumi:"pdID"`
}

// BuildSpecTasksBuilderVolumesPhotonPersistentDiskInput is an input type that accepts BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs and BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesPhotonPersistentDiskInput` via:
//
//          BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs{...}
type BuildSpecTasksBuilderVolumesPhotonPersistentDiskInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput
	ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// ID that identifies Photon Controller persistent disk
	PdID pulumi.StringInput `pulumi:"pdID"`
}

func (BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput {
	return i.ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput)
}

func (i BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput).ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs, BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtr and BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput
	ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput
}

type buildSpecTasksBuilderVolumesPhotonPersistentDiskPtrType BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs

func BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtr(v *BuildSpecTasksBuilderVolumesPhotonPersistentDiskArgs) BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrInput {
	return (*buildSpecTasksBuilderVolumesPhotonPersistentDiskPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesPhotonPersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesPhotonPersistentDiskPtrType) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesPhotonPersistentDiskPtrType) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput)
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPhotonPersistentDisk) *BuildSpecTasksBuilderVolumesPhotonPersistentDisk {
		return &v
	}).(BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPhotonPersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// ID that identifies Photon Controller persistent disk
func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput) PdID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPhotonPersistentDisk) string { return v.PdID }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput) ToBuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput) Elem() BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPhotonPersistentDisk) BuildSpecTasksBuilderVolumesPhotonPersistentDisk {
		return *v
	}).(BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// ID that identifies Photon Controller persistent disk
func (o BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return &v.PdID
	}).(pulumi.StringPtrOutput)
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesPortworxVolume struct {
	// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// VolumeID uniquely identifies a Portworx volume
	VolumeID string `pulumi:"volumeID"`
}

// BuildSpecTasksBuilderVolumesPortworxVolumeInput is an input type that accepts BuildSpecTasksBuilderVolumesPortworxVolumeArgs and BuildSpecTasksBuilderVolumesPortworxVolumeOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesPortworxVolumeInput` via:
//
//          BuildSpecTasksBuilderVolumesPortworxVolumeArgs{...}
type BuildSpecTasksBuilderVolumesPortworxVolumeInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesPortworxVolumeOutput() BuildSpecTasksBuilderVolumesPortworxVolumeOutput
	ToBuildSpecTasksBuilderVolumesPortworxVolumeOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesPortworxVolumeOutput
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesPortworxVolumeArgs struct {
	// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// VolumeID uniquely identifies a Portworx volume
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (BuildSpecTasksBuilderVolumesPortworxVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesPortworxVolume)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesPortworxVolumeArgs) ToBuildSpecTasksBuilderVolumesPortworxVolumeOutput() BuildSpecTasksBuilderVolumesPortworxVolumeOutput {
	return i.ToBuildSpecTasksBuilderVolumesPortworxVolumeOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesPortworxVolumeArgs) ToBuildSpecTasksBuilderVolumesPortworxVolumeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPortworxVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPortworxVolumeOutput)
}

func (i BuildSpecTasksBuilderVolumesPortworxVolumeArgs) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutput() BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesPortworxVolumeArgs) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPortworxVolumeOutput).ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesPortworxVolumePtrInput is an input type that accepts BuildSpecTasksBuilderVolumesPortworxVolumeArgs, BuildSpecTasksBuilderVolumesPortworxVolumePtr and BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesPortworxVolumePtrInput` via:
//
//          BuildSpecTasksBuilderVolumesPortworxVolumeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesPortworxVolumePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutput() BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput
	ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput
}

type buildSpecTasksBuilderVolumesPortworxVolumePtrType BuildSpecTasksBuilderVolumesPortworxVolumeArgs

func BuildSpecTasksBuilderVolumesPortworxVolumePtr(v *BuildSpecTasksBuilderVolumesPortworxVolumeArgs) BuildSpecTasksBuilderVolumesPortworxVolumePtrInput {
	return (*buildSpecTasksBuilderVolumesPortworxVolumePtrType)(v)
}

func (*buildSpecTasksBuilderVolumesPortworxVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesPortworxVolume)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesPortworxVolumePtrType) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutput() BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesPortworxVolumePtrType) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput)
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesPortworxVolumeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesPortworxVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesPortworxVolume)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) ToBuildSpecTasksBuilderVolumesPortworxVolumeOutput() BuildSpecTasksBuilderVolumesPortworxVolumeOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) ToBuildSpecTasksBuilderVolumesPortworxVolumeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPortworxVolumeOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutput() BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPortworxVolume) *BuildSpecTasksBuilderVolumesPortworxVolume {
		return &v
	}).(BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput)
}

// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPortworxVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPortworxVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// VolumeID uniquely identifies a Portworx volume
func (o BuildSpecTasksBuilderVolumesPortworxVolumeOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesPortworxVolume) string { return v.VolumeID }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesPortworxVolume)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutput() BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) ToBuildSpecTasksBuilderVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) Elem() BuildSpecTasksBuilderVolumesPortworxVolumeOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPortworxVolume) BuildSpecTasksBuilderVolumesPortworxVolume {
		return *v
	}).(BuildSpecTasksBuilderVolumesPortworxVolumeOutput)
}

// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPortworxVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// VolumeID uniquely identifies a Portworx volume
func (o BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// Items for all in one resources secrets, configmaps, and downward API
type BuildSpecTasksBuilderVolumesProjected struct {
	// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// list of volume projections
	Sources []BuildSpecTasksBuilderVolumesProjectedSources `pulumi:"sources"`
}

// BuildSpecTasksBuilderVolumesProjectedInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedArgs and BuildSpecTasksBuilderVolumesProjectedOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedArgs{...}
type BuildSpecTasksBuilderVolumesProjectedInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedOutput() BuildSpecTasksBuilderVolumesProjectedOutput
	ToBuildSpecTasksBuilderVolumesProjectedOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedOutput
}

// Items for all in one resources secrets, configmaps, and downward API
type BuildSpecTasksBuilderVolumesProjectedArgs struct {
	// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// list of volume projections
	Sources BuildSpecTasksBuilderVolumesProjectedSourcesArrayInput `pulumi:"sources"`
}

func (BuildSpecTasksBuilderVolumesProjectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjected)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedArgs) ToBuildSpecTasksBuilderVolumesProjectedOutput() BuildSpecTasksBuilderVolumesProjectedOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedArgs) ToBuildSpecTasksBuilderVolumesProjectedOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedArgs) ToBuildSpecTasksBuilderVolumesProjectedPtrOutput() BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedArgs) ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedOutput).ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedArgs, BuildSpecTasksBuilderVolumesProjectedPtr and BuildSpecTasksBuilderVolumesProjectedPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedPtrOutput() BuildSpecTasksBuilderVolumesProjectedPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedPtrType BuildSpecTasksBuilderVolumesProjectedArgs

func BuildSpecTasksBuilderVolumesProjectedPtr(v *BuildSpecTasksBuilderVolumesProjectedArgs) BuildSpecTasksBuilderVolumesProjectedPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjected)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedPtrType) ToBuildSpecTasksBuilderVolumesProjectedPtrOutput() BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedPtrType) ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedPtrOutput)
}

// Items for all in one resources secrets, configmaps, and downward API
type BuildSpecTasksBuilderVolumesProjectedOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjected)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedOutput) ToBuildSpecTasksBuilderVolumesProjectedOutput() BuildSpecTasksBuilderVolumesProjectedOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedOutput) ToBuildSpecTasksBuilderVolumesProjectedOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedOutput) ToBuildSpecTasksBuilderVolumesProjectedPtrOutput() BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedOutput) ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjected) *BuildSpecTasksBuilderVolumesProjected {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedPtrOutput)
}

// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesProjectedOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjected) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// list of volume projections
func (o BuildSpecTasksBuilderVolumesProjectedOutput) Sources() BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjected) []BuildSpecTasksBuilderVolumesProjectedSources {
		return v.Sources
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput)
}

type BuildSpecTasksBuilderVolumesProjectedPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjected)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedPtrOutput() BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjected) BuildSpecTasksBuilderVolumesProjected { return *v }).(BuildSpecTasksBuilderVolumesProjectedOutput)
}

// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesProjectedPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjected) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// list of volume projections
func (o BuildSpecTasksBuilderVolumesProjectedPtrOutput) Sources() BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjected) []BuildSpecTasksBuilderVolumesProjectedSources {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types
type BuildSpecTasksBuilderVolumesProjectedSources struct {
	// information about the configMap data to project
	ConfigMap *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap `pulumi:"configMap"`
	// information about the downwardAPI data to project
	DownwardAPI *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI `pulumi:"downwardAPI"`
	// information about the secret data to project
	Secret *BuildSpecTasksBuilderVolumesProjectedSourcesSecret `pulumi:"secret"`
	// information about the serviceAccountToken data to project
	ServiceAccountToken *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken `pulumi:"serviceAccountToken"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesArgs and BuildSpecTasksBuilderVolumesProjectedSourcesOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesOutput() BuildSpecTasksBuilderVolumesProjectedSourcesOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesOutput
}

// Projection that may be projected along with other supported volume types
type BuildSpecTasksBuilderVolumesProjectedSourcesArgs struct {
	// information about the configMap data to project
	ConfigMap BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrInput `pulumi:"configMap"`
	// information about the downwardAPI data to project
	DownwardAPI BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrInput `pulumi:"downwardAPI"`
	// information about the secret data to project
	Secret BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrInput `pulumi:"secret"`
	// information about the serviceAccountToken data to project
	ServiceAccountToken BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrInput `pulumi:"serviceAccountToken"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSources)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesOutput() BuildSpecTasksBuilderVolumesProjectedSourcesOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesOutput)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesArray and BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesArray{ BuildSpecTasksBuilderVolumesProjectedSourcesArgs{...} }
type BuildSpecTasksBuilderVolumesProjectedSourcesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput
}

type BuildSpecTasksBuilderVolumesProjectedSourcesArray []BuildSpecTasksBuilderVolumesProjectedSourcesInput

func (BuildSpecTasksBuilderVolumesProjectedSourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSources)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types
type BuildSpecTasksBuilderVolumesProjectedSourcesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSources)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesOutput() BuildSpecTasksBuilderVolumesProjectedSourcesOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesOutput {
	return o
}

// information about the configMap data to project
func (o BuildSpecTasksBuilderVolumesProjectedSourcesOutput) ConfigMap() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSources) *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap {
		return v.ConfigMap
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput)
}

// information about the downwardAPI data to project
func (o BuildSpecTasksBuilderVolumesProjectedSourcesOutput) DownwardAPI() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSources) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI {
		return v.DownwardAPI
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// information about the secret data to project
func (o BuildSpecTasksBuilderVolumesProjectedSourcesOutput) Secret() BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSources) *BuildSpecTasksBuilderVolumesProjectedSourcesSecret {
		return v.Secret
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput)
}

// information about the serviceAccountToken data to project
func (o BuildSpecTasksBuilderVolumesProjectedSourcesOutput) ServiceAccountToken() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSources) *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken {
		return v.ServiceAccountToken
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSources)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesProjectedSourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesProjectedSources {
		return vs[0].([]BuildSpecTasksBuilderVolumesProjectedSources)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesOutput)
}

// information about the configMap data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap struct {
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap and BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap{ "key": BuildSpecTasksBuilderVolumesProjectedSourcesConfigArgs{...} }
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput
}

// information about the configMap data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs struct {
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs, BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtr and BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrType BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapArgs) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput)
}

// information about the configMap data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) Items() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) []BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems {
		return v.Items
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) Items() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) []BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs and BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArray and BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArray{ BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArgs{...} }
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput
}

type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArray []BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsInput

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems {
		return vs[0].([]BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItems)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput)
}

// information about the downwardAPI data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI struct {
	// Items is a list of DownwardAPIVolume file
	Items []BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems `pulumi:"items"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput
}

// information about the downwardAPI data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs struct {
	// Items is a list of DownwardAPIVolume file
	Items BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayInput `pulumi:"items"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs, BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtr and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrType BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIArgs) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// information about the downwardAPI data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// Items is a list of DownwardAPIVolume file
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput) Items() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI) []BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems {
		return v.Items
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput)
}

// Items is a list of DownwardAPIVolume file
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput) Items() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPI) []BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path string `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path pulumi.StringInput `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArray and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArray{ BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArgs{...} }
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArray []BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsInput

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput {
	return o
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) FieldRef() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return v.FieldRef
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems) string { return v.Path }).(pulumi.StringOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput) ResourceFieldRef() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems {
		return vs[0].([]BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItems)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs, BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtr and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef) string {
		return v.FieldPath
	}).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs, BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtr and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) Divisor() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		return v.Divisor
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) string {
		return v.Resource
	}).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Divisor() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor struct {
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs struct {
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs, BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtr and BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor) *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor) BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

// information about the secret data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesSecret struct {
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesSecretInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs and BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesSecretInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput
}

// information about the secret data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs struct {
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayInput `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs, BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtr and BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesSecretPtrType BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesSecretArgs) BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesSecretPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesSecretPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesSecretPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput)
}

// information about the secret data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecret) *BuildSpecTasksBuilderVolumesProjectedSourcesSecret {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) Items() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecret) []BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems {
		return v.Items
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesSecret) BuildSpecTasksBuilderVolumesProjectedSourcesSecret {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) Items() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesSecret) []BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs and BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArray and BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArray{ BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArgs{...} }
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput
}

type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArray []BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsInput

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArray) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput() BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems {
		return vs[0].([]BuildSpecTasksBuilderVolumesProjectedSourcesSecretItems)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput)
}

// information about the serviceAccountToken data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken struct {
	// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
	Audience *string `pulumi:"audience"`
	// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// Path is the path relative to the mount point of the file to project the token into.
	Path string `pulumi:"path"`
}

// BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs and BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs{...}
type BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput
}

// information about the serviceAccountToken data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs struct {
	// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// Path is the path relative to the mount point of the file to project the token into.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput)
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput).ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs, BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtr and BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput
	ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput
}

type buildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrType BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs

func BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtr(v *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenArgs) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrInput {
	return (*buildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrType) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// information about the serviceAccountToken data to project
type BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken {
		return &v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Path is the path relative to the mount point of the file to project the token into.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToBuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) Elem() BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken {
		return *v
	}).(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput)
}

// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Path is the path relative to the mount point of the file to project the token into.
func (o BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type BuildSpecTasksBuilderVolumesQuobyte struct {
	// Group to map volume access to Default is no group
	Group *string `pulumi:"group"`
	// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
	Registry string `pulumi:"registry"`
	// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant *string `pulumi:"tenant"`
	// User to map volume access to Defaults to serivceaccount user
	User *string `pulumi:"user"`
	// Volume is a string that references an already created Quobyte volume by name.
	Volume string `pulumi:"volume"`
}

// BuildSpecTasksBuilderVolumesQuobyteInput is an input type that accepts BuildSpecTasksBuilderVolumesQuobyteArgs and BuildSpecTasksBuilderVolumesQuobyteOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesQuobyteInput` via:
//
//          BuildSpecTasksBuilderVolumesQuobyteArgs{...}
type BuildSpecTasksBuilderVolumesQuobyteInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesQuobyteOutput() BuildSpecTasksBuilderVolumesQuobyteOutput
	ToBuildSpecTasksBuilderVolumesQuobyteOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesQuobyteOutput
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type BuildSpecTasksBuilderVolumesQuobyteArgs struct {
	// Group to map volume access to Default is no group
	Group pulumi.StringPtrInput `pulumi:"group"`
	// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
	Registry pulumi.StringInput `pulumi:"registry"`
	// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// User to map volume access to Defaults to serivceaccount user
	User pulumi.StringPtrInput `pulumi:"user"`
	// Volume is a string that references an already created Quobyte volume by name.
	Volume pulumi.StringInput `pulumi:"volume"`
}

func (BuildSpecTasksBuilderVolumesQuobyteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesQuobyte)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesQuobyteArgs) ToBuildSpecTasksBuilderVolumesQuobyteOutput() BuildSpecTasksBuilderVolumesQuobyteOutput {
	return i.ToBuildSpecTasksBuilderVolumesQuobyteOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesQuobyteArgs) ToBuildSpecTasksBuilderVolumesQuobyteOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesQuobyteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesQuobyteOutput)
}

func (i BuildSpecTasksBuilderVolumesQuobyteArgs) ToBuildSpecTasksBuilderVolumesQuobytePtrOutput() BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesQuobyteArgs) ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesQuobyteOutput).ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesQuobytePtrInput is an input type that accepts BuildSpecTasksBuilderVolumesQuobyteArgs, BuildSpecTasksBuilderVolumesQuobytePtr and BuildSpecTasksBuilderVolumesQuobytePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesQuobytePtrInput` via:
//
//          BuildSpecTasksBuilderVolumesQuobyteArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesQuobytePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesQuobytePtrOutput() BuildSpecTasksBuilderVolumesQuobytePtrOutput
	ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesQuobytePtrOutput
}

type buildSpecTasksBuilderVolumesQuobytePtrType BuildSpecTasksBuilderVolumesQuobyteArgs

func BuildSpecTasksBuilderVolumesQuobytePtr(v *BuildSpecTasksBuilderVolumesQuobyteArgs) BuildSpecTasksBuilderVolumesQuobytePtrInput {
	return (*buildSpecTasksBuilderVolumesQuobytePtrType)(v)
}

func (*buildSpecTasksBuilderVolumesQuobytePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesQuobyte)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesQuobytePtrType) ToBuildSpecTasksBuilderVolumesQuobytePtrOutput() BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesQuobytePtrType) ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesQuobytePtrOutput)
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type BuildSpecTasksBuilderVolumesQuobyteOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesQuobyteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesQuobyte)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesQuobyteOutput) ToBuildSpecTasksBuilderVolumesQuobyteOutput() BuildSpecTasksBuilderVolumesQuobyteOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesQuobyteOutput) ToBuildSpecTasksBuilderVolumesQuobyteOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesQuobyteOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesQuobyteOutput) ToBuildSpecTasksBuilderVolumesQuobytePtrOutput() BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesQuobyteOutput) ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) *BuildSpecTasksBuilderVolumesQuobyte {
		return &v
	}).(BuildSpecTasksBuilderVolumesQuobytePtrOutput)
}

// Group to map volume access to Default is no group
func (o BuildSpecTasksBuilderVolumesQuobyteOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
func (o BuildSpecTasksBuilderVolumesQuobyteOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
func (o BuildSpecTasksBuilderVolumesQuobyteOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) string { return v.Registry }).(pulumi.StringOutput)
}

// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o BuildSpecTasksBuilderVolumesQuobyteOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// User to map volume access to Defaults to serivceaccount user
func (o BuildSpecTasksBuilderVolumesQuobyteOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Volume is a string that references an already created Quobyte volume by name.
func (o BuildSpecTasksBuilderVolumesQuobyteOutput) Volume() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesQuobyte) string { return v.Volume }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesQuobytePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesQuobytePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesQuobyte)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) ToBuildSpecTasksBuilderVolumesQuobytePtrOutput() BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) ToBuildSpecTasksBuilderVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesQuobytePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) Elem() BuildSpecTasksBuilderVolumesQuobyteOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) BuildSpecTasksBuilderVolumesQuobyte { return *v }).(BuildSpecTasksBuilderVolumesQuobyteOutput)
}

// Group to map volume access to Default is no group
func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// User to map volume access to Defaults to serivceaccount user
func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Volume is a string that references an already created Quobyte volume by name.
func (o BuildSpecTasksBuilderVolumesQuobytePtrOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return &v.Volume
	}).(pulumi.StringPtrOutput)
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
type BuildSpecTasksBuilderVolumesRbd struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image string `pulumi:"image"`
	// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring *string `pulumi:"keyring"`
	// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool *string `pulumi:"pool"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly *bool `pulumi:"readOnly"`
	// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	SecretRef *BuildSpecTasksBuilderVolumesRbdSecretRef `pulumi:"secretRef"`
	// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// BuildSpecTasksBuilderVolumesRbdInput is an input type that accepts BuildSpecTasksBuilderVolumesRbdArgs and BuildSpecTasksBuilderVolumesRbdOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesRbdInput` via:
//
//          BuildSpecTasksBuilderVolumesRbdArgs{...}
type BuildSpecTasksBuilderVolumesRbdInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesRbdOutput() BuildSpecTasksBuilderVolumesRbdOutput
	ToBuildSpecTasksBuilderVolumesRbdOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesRbdOutput
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
type BuildSpecTasksBuilderVolumesRbdArgs struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image pulumi.StringInput `pulumi:"image"`
	// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring pulumi.StringPtrInput `pulumi:"keyring"`
	// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool pulumi.StringPtrInput `pulumi:"pool"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	SecretRef BuildSpecTasksBuilderVolumesRbdSecretRefPtrInput `pulumi:"secretRef"`
	// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (BuildSpecTasksBuilderVolumesRbdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesRbd)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesRbdArgs) ToBuildSpecTasksBuilderVolumesRbdOutput() BuildSpecTasksBuilderVolumesRbdOutput {
	return i.ToBuildSpecTasksBuilderVolumesRbdOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesRbdArgs) ToBuildSpecTasksBuilderVolumesRbdOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesRbdOutput)
}

func (i BuildSpecTasksBuilderVolumesRbdArgs) ToBuildSpecTasksBuilderVolumesRbdPtrOutput() BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesRbdArgs) ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesRbdOutput).ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesRbdPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesRbdArgs, BuildSpecTasksBuilderVolumesRbdPtr and BuildSpecTasksBuilderVolumesRbdPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesRbdPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesRbdArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesRbdPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesRbdPtrOutput() BuildSpecTasksBuilderVolumesRbdPtrOutput
	ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesRbdPtrOutput
}

type buildSpecTasksBuilderVolumesRbdPtrType BuildSpecTasksBuilderVolumesRbdArgs

func BuildSpecTasksBuilderVolumesRbdPtr(v *BuildSpecTasksBuilderVolumesRbdArgs) BuildSpecTasksBuilderVolumesRbdPtrInput {
	return (*buildSpecTasksBuilderVolumesRbdPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesRbdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesRbd)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesRbdPtrType) ToBuildSpecTasksBuilderVolumesRbdPtrOutput() BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesRbdPtrType) ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesRbdPtrOutput)
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
type BuildSpecTasksBuilderVolumesRbdOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesRbdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesRbd)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesRbdOutput) ToBuildSpecTasksBuilderVolumesRbdOutput() BuildSpecTasksBuilderVolumesRbdOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdOutput) ToBuildSpecTasksBuilderVolumesRbdOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdOutput) ToBuildSpecTasksBuilderVolumesRbdPtrOutput() BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesRbdOutput) ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *BuildSpecTasksBuilderVolumesRbd {
		return &v
	}).(BuildSpecTasksBuilderVolumesRbdPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesRbdOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) string { return v.Image }).(pulumi.StringOutput)
}

// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *string { return v.Keyring }).(pulumi.StringPtrOutput)
}

// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) SecretRef() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *BuildSpecTasksBuilderVolumesRbdSecretRef { return v.SecretRef }).(BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput)
}

// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbd) *string { return v.User }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesRbdPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesRbdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesRbd)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) ToBuildSpecTasksBuilderVolumesRbdPtrOutput() BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) ToBuildSpecTasksBuilderVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) Elem() BuildSpecTasksBuilderVolumesRbdOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) BuildSpecTasksBuilderVolumesRbd { return *v }).(BuildSpecTasksBuilderVolumesRbdOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Keyring
	}).(pulumi.StringPtrOutput)
}

// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Pool
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) SecretRef() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *BuildSpecTasksBuilderVolumesRbdSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput)
}

// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksBuilderVolumesRbdPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type BuildSpecTasksBuilderVolumesRbdSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesRbdSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesRbdSecretRefArgs and BuildSpecTasksBuilderVolumesRbdSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesRbdSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesRbdSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesRbdSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesRbdSecretRefOutput() BuildSpecTasksBuilderVolumesRbdSecretRefOutput
	ToBuildSpecTasksBuilderVolumesRbdSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefOutput
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type BuildSpecTasksBuilderVolumesRbdSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesRbdSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesRbdSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesRbdSecretRefArgs) ToBuildSpecTasksBuilderVolumesRbdSecretRefOutput() BuildSpecTasksBuilderVolumesRbdSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesRbdSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesRbdSecretRefArgs) ToBuildSpecTasksBuilderVolumesRbdSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesRbdSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesRbdSecretRefArgs) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesRbdSecretRefArgs) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesRbdSecretRefOutput).ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesRbdSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesRbdSecretRefArgs, BuildSpecTasksBuilderVolumesRbdSecretRefPtr and BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesRbdSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesRbdSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesRbdSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesRbdSecretRefPtrType BuildSpecTasksBuilderVolumesRbdSecretRefArgs

func BuildSpecTasksBuilderVolumesRbdSecretRefPtr(v *BuildSpecTasksBuilderVolumesRbdSecretRefArgs) BuildSpecTasksBuilderVolumesRbdSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesRbdSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesRbdSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesRbdSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesRbdSecretRefPtrType) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesRbdSecretRefPtrType) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type BuildSpecTasksBuilderVolumesRbdSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesRbdSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesRbdSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefOutput) ToBuildSpecTasksBuilderVolumesRbdSecretRefOutput() BuildSpecTasksBuilderVolumesRbdSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefOutput) ToBuildSpecTasksBuilderVolumesRbdSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefOutput) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefOutput) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbdSecretRef) *BuildSpecTasksBuilderVolumesRbdSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesRbdSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesRbdSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesRbdSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput() BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesRbdSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbdSecretRef) BuildSpecTasksBuilderVolumesRbdSecretRef { return *v }).(BuildSpecTasksBuilderVolumesRbdSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesRbdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksBuilderVolumesScaleIO struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
	FsType *string `pulumi:"fsType"`
	// The host address of the ScaleIO API Gateway.
	Gateway string `pulumi:"gateway"`
	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `pulumi:"protectionDomain"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
	SecretRef BuildSpecTasksBuilderVolumesScaleIOSecretRef `pulumi:"secretRef"`
	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
	StorageMode *string `pulumi:"storageMode"`
	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `pulumi:"storagePool"`
	// The name of the storage system as configured in ScaleIO.
	System string `pulumi:"system"`
	// The name of a volume already created in the ScaleIO system that is associated with this volume source.
	VolumeName *string `pulumi:"volumeName"`
}

// BuildSpecTasksBuilderVolumesScaleIOInput is an input type that accepts BuildSpecTasksBuilderVolumesScaleIOArgs and BuildSpecTasksBuilderVolumesScaleIOOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesScaleIOInput` via:
//
//          BuildSpecTasksBuilderVolumesScaleIOArgs{...}
type BuildSpecTasksBuilderVolumesScaleIOInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesScaleIOOutput() BuildSpecTasksBuilderVolumesScaleIOOutput
	ToBuildSpecTasksBuilderVolumesScaleIOOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesScaleIOOutput
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksBuilderVolumesScaleIOArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The host address of the ScaleIO API Gateway.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain pulumi.StringPtrInput `pulumi:"protectionDomain"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
	SecretRef BuildSpecTasksBuilderVolumesScaleIOSecretRefInput `pulumi:"secretRef"`
	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
	StorageMode pulumi.StringPtrInput `pulumi:"storageMode"`
	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool pulumi.StringPtrInput `pulumi:"storagePool"`
	// The name of the storage system as configured in ScaleIO.
	System pulumi.StringInput `pulumi:"system"`
	// The name of a volume already created in the ScaleIO system that is associated with this volume source.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (BuildSpecTasksBuilderVolumesScaleIOArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesScaleIO)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesScaleIOArgs) ToBuildSpecTasksBuilderVolumesScaleIOOutput() BuildSpecTasksBuilderVolumesScaleIOOutput {
	return i.ToBuildSpecTasksBuilderVolumesScaleIOOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesScaleIOArgs) ToBuildSpecTasksBuilderVolumesScaleIOOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesScaleIOOutput)
}

func (i BuildSpecTasksBuilderVolumesScaleIOArgs) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutput() BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesScaleIOArgs) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesScaleIOOutput).ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesScaleIOPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesScaleIOArgs, BuildSpecTasksBuilderVolumesScaleIOPtr and BuildSpecTasksBuilderVolumesScaleIOPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesScaleIOPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesScaleIOArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesScaleIOPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesScaleIOPtrOutput() BuildSpecTasksBuilderVolumesScaleIOPtrOutput
	ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesScaleIOPtrOutput
}

type buildSpecTasksBuilderVolumesScaleIOPtrType BuildSpecTasksBuilderVolumesScaleIOArgs

func BuildSpecTasksBuilderVolumesScaleIOPtr(v *BuildSpecTasksBuilderVolumesScaleIOArgs) BuildSpecTasksBuilderVolumesScaleIOPtrInput {
	return (*buildSpecTasksBuilderVolumesScaleIOPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesScaleIOPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesScaleIO)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesScaleIOPtrType) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutput() BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesScaleIOPtrType) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesScaleIOPtrOutput)
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksBuilderVolumesScaleIOOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesScaleIOOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesScaleIO)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesScaleIOOutput) ToBuildSpecTasksBuilderVolumesScaleIOOutput() BuildSpecTasksBuilderVolumesScaleIOOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOOutput) ToBuildSpecTasksBuilderVolumesScaleIOOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOOutput) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutput() BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesScaleIOOutput) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *BuildSpecTasksBuilderVolumesScaleIO {
		return &v
	}).(BuildSpecTasksBuilderVolumesScaleIOPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The host address of the ScaleIO API Gateway.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) string { return v.Gateway }).(pulumi.StringOutput)
}

// The name of the ScaleIO Protection Domain for the configured storage.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *string { return v.ProtectionDomain }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) SecretRef() BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) BuildSpecTasksBuilderVolumesScaleIOSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput)
}

// Flag to enable/disable SSL communication with Gateway, default false
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *string { return v.StorageMode }).(pulumi.StringPtrOutput)
}

// The ScaleIO Storage Pool associated with the protection domain.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *string { return v.StoragePool }).(pulumi.StringPtrOutput)
}

// The name of the storage system as configured in ScaleIO.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) System() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) string { return v.System }).(pulumi.StringOutput)
}

// The name of a volume already created in the ScaleIO system that is associated with this volume source.
func (o BuildSpecTasksBuilderVolumesScaleIOOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIO) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesScaleIOPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesScaleIOPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesScaleIO)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutput() BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) ToBuildSpecTasksBuilderVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) Elem() BuildSpecTasksBuilderVolumesScaleIOOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) BuildSpecTasksBuilderVolumesScaleIO { return *v }).(BuildSpecTasksBuilderVolumesScaleIOOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The host address of the ScaleIO API Gateway.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return &v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The name of the ScaleIO Protection Domain for the configured storage.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionDomain
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) SecretRef() BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *BuildSpecTasksBuilderVolumesScaleIOSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput)
}

// Flag to enable/disable SSL communication with Gateway, default false
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.StorageMode
	}).(pulumi.StringPtrOutput)
}

// The ScaleIO Storage Pool associated with the protection domain.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.StoragePool
	}).(pulumi.StringPtrOutput)
}

// The name of the storage system as configured in ScaleIO.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return &v.System
	}).(pulumi.StringPtrOutput)
}

// The name of a volume already created in the ScaleIO system that is associated with this volume source.
func (o BuildSpecTasksBuilderVolumesScaleIOPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
type BuildSpecTasksBuilderVolumesScaleIOSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesScaleIOSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs and BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesScaleIOSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesScaleIOSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput
	ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
type BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesScaleIOSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput).ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs, BuildSpecTasksBuilderVolumesScaleIOSecretRefPtr and BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesScaleIOSecretRefPtrType BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs

func BuildSpecTasksBuilderVolumesScaleIOSecretRefPtr(v *BuildSpecTasksBuilderVolumesScaleIOSecretRefArgs) BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesScaleIOSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesScaleIOSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesScaleIOSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesScaleIOSecretRefPtrType) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesScaleIOSecretRefPtrType) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
type BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesScaleIOSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIOSecretRef) *BuildSpecTasksBuilderVolumesScaleIOSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesScaleIOSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesScaleIOSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIOSecretRef) BuildSpecTasksBuilderVolumesScaleIOSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesScaleIOSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type BuildSpecTasksBuilderVolumesSecret struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksBuilderVolumesSecretItems `pulumi:"items"`
	// Specify whether the Secret or its keys must be defined
	Optional *bool `pulumi:"optional"`
	// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName *string `pulumi:"secretName"`
}

// BuildSpecTasksBuilderVolumesSecretInput is an input type that accepts BuildSpecTasksBuilderVolumesSecretArgs and BuildSpecTasksBuilderVolumesSecretOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesSecretInput` via:
//
//          BuildSpecTasksBuilderVolumesSecretArgs{...}
type BuildSpecTasksBuilderVolumesSecretInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesSecretOutput() BuildSpecTasksBuilderVolumesSecretOutput
	ToBuildSpecTasksBuilderVolumesSecretOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesSecretOutput
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type BuildSpecTasksBuilderVolumesSecretArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksBuilderVolumesSecretItemsArrayInput `pulumi:"items"`
	// Specify whether the Secret or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (BuildSpecTasksBuilderVolumesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesSecret)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesSecretArgs) ToBuildSpecTasksBuilderVolumesSecretOutput() BuildSpecTasksBuilderVolumesSecretOutput {
	return i.ToBuildSpecTasksBuilderVolumesSecretOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesSecretArgs) ToBuildSpecTasksBuilderVolumesSecretOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesSecretOutput)
}

func (i BuildSpecTasksBuilderVolumesSecretArgs) ToBuildSpecTasksBuilderVolumesSecretPtrOutput() BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesSecretArgs) ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesSecretOutput).ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesSecretPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesSecretArgs, BuildSpecTasksBuilderVolumesSecretPtr and BuildSpecTasksBuilderVolumesSecretPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesSecretPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesSecretArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesSecretPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesSecretPtrOutput() BuildSpecTasksBuilderVolumesSecretPtrOutput
	ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesSecretPtrOutput
}

type buildSpecTasksBuilderVolumesSecretPtrType BuildSpecTasksBuilderVolumesSecretArgs

func BuildSpecTasksBuilderVolumesSecretPtr(v *BuildSpecTasksBuilderVolumesSecretArgs) BuildSpecTasksBuilderVolumesSecretPtrInput {
	return (*buildSpecTasksBuilderVolumesSecretPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesSecret)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesSecretPtrType) ToBuildSpecTasksBuilderVolumesSecretPtrOutput() BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesSecretPtrType) ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesSecretPtrOutput)
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type BuildSpecTasksBuilderVolumesSecretOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesSecret)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesSecretOutput) ToBuildSpecTasksBuilderVolumesSecretOutput() BuildSpecTasksBuilderVolumesSecretOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretOutput) ToBuildSpecTasksBuilderVolumesSecretOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretOutput) ToBuildSpecTasksBuilderVolumesSecretPtrOutput() BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesSecretOutput) ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecret) *BuildSpecTasksBuilderVolumesSecret {
		return &v
	}).(BuildSpecTasksBuilderVolumesSecretPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesSecretOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecret) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesSecretOutput) Items() BuildSpecTasksBuilderVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecret) []BuildSpecTasksBuilderVolumesSecretItems { return v.Items }).(BuildSpecTasksBuilderVolumesSecretItemsArrayOutput)
}

// Specify whether the Secret or its keys must be defined
func (o BuildSpecTasksBuilderVolumesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o BuildSpecTasksBuilderVolumesSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesSecretPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesSecret)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) ToBuildSpecTasksBuilderVolumesSecretPtrOutput() BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) ToBuildSpecTasksBuilderVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) Elem() BuildSpecTasksBuilderVolumesSecretOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesSecret) BuildSpecTasksBuilderVolumesSecret { return *v }).(BuildSpecTasksBuilderVolumesSecretOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesSecret) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) Items() BuildSpecTasksBuilderVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesSecret) []BuildSpecTasksBuilderVolumesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksBuilderVolumesSecretItemsArrayOutput)
}

// Specify whether the Secret or its keys must be defined
func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o BuildSpecTasksBuilderVolumesSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesSecretItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksBuilderVolumesSecretItemsInput is an input type that accepts BuildSpecTasksBuilderVolumesSecretItemsArgs and BuildSpecTasksBuilderVolumesSecretItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesSecretItemsInput` via:
//
//          BuildSpecTasksBuilderVolumesSecretItemsArgs{...}
type BuildSpecTasksBuilderVolumesSecretItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesSecretItemsOutput() BuildSpecTasksBuilderVolumesSecretItemsOutput
	ToBuildSpecTasksBuilderVolumesSecretItemsOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesSecretItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksBuilderVolumesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesSecretItemsArgs) ToBuildSpecTasksBuilderVolumesSecretItemsOutput() BuildSpecTasksBuilderVolumesSecretItemsOutput {
	return i.ToBuildSpecTasksBuilderVolumesSecretItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesSecretItemsArgs) ToBuildSpecTasksBuilderVolumesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesSecretItemsOutput)
}

// BuildSpecTasksBuilderVolumesSecretItemsArrayInput is an input type that accepts BuildSpecTasksBuilderVolumesSecretItemsArray and BuildSpecTasksBuilderVolumesSecretItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesSecretItemsArrayInput` via:
//
//          BuildSpecTasksBuilderVolumesSecretItemsArray{ BuildSpecTasksBuilderVolumesSecretItemsArgs{...} }
type BuildSpecTasksBuilderVolumesSecretItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutput() BuildSpecTasksBuilderVolumesSecretItemsArrayOutput
	ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesSecretItemsArrayOutput
}

type BuildSpecTasksBuilderVolumesSecretItemsArray []BuildSpecTasksBuilderVolumesSecretItemsInput

func (BuildSpecTasksBuilderVolumesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesSecretItemsArray) ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutput() BuildSpecTasksBuilderVolumesSecretItemsArrayOutput {
	return i.ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesSecretItemsArray) ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksBuilderVolumesSecretItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesSecretItemsOutput) ToBuildSpecTasksBuilderVolumesSecretItemsOutput() BuildSpecTasksBuilderVolumesSecretItemsOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretItemsOutput) ToBuildSpecTasksBuilderVolumesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksBuilderVolumesSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksBuilderVolumesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksBuilderVolumesSecretItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesSecretItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksBuilderVolumesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesSecretItemsArrayOutput) ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutput() BuildSpecTasksBuilderVolumesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretItemsArrayOutput) ToBuildSpecTasksBuilderVolumesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesSecretItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksBuilderVolumesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksBuilderVolumesSecretItems {
		return vs[0].([]BuildSpecTasksBuilderVolumesSecretItems)[vs[1].(int)]
	}).(BuildSpecTasksBuilderVolumesSecretItemsOutput)
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksBuilderVolumesStorageos struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
	SecretRef *BuildSpecTasksBuilderVolumesStorageosSecretRef `pulumi:"secretRef"`
	// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
	VolumeName *string `pulumi:"volumeName"`
	// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace *string `pulumi:"volumeNamespace"`
}

// BuildSpecTasksBuilderVolumesStorageosInput is an input type that accepts BuildSpecTasksBuilderVolumesStorageosArgs and BuildSpecTasksBuilderVolumesStorageosOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesStorageosInput` via:
//
//          BuildSpecTasksBuilderVolumesStorageosArgs{...}
type BuildSpecTasksBuilderVolumesStorageosInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesStorageosOutput() BuildSpecTasksBuilderVolumesStorageosOutput
	ToBuildSpecTasksBuilderVolumesStorageosOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesStorageosOutput
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksBuilderVolumesStorageosArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
	SecretRef BuildSpecTasksBuilderVolumesStorageosSecretRefPtrInput `pulumi:"secretRef"`
	// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
	// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace pulumi.StringPtrInput `pulumi:"volumeNamespace"`
}

func (BuildSpecTasksBuilderVolumesStorageosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesStorageos)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesStorageosArgs) ToBuildSpecTasksBuilderVolumesStorageosOutput() BuildSpecTasksBuilderVolumesStorageosOutput {
	return i.ToBuildSpecTasksBuilderVolumesStorageosOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesStorageosArgs) ToBuildSpecTasksBuilderVolumesStorageosOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesStorageosOutput)
}

func (i BuildSpecTasksBuilderVolumesStorageosArgs) ToBuildSpecTasksBuilderVolumesStorageosPtrOutput() BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesStorageosArgs) ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesStorageosOutput).ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesStorageosPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesStorageosArgs, BuildSpecTasksBuilderVolumesStorageosPtr and BuildSpecTasksBuilderVolumesStorageosPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesStorageosPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesStorageosArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesStorageosPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesStorageosPtrOutput() BuildSpecTasksBuilderVolumesStorageosPtrOutput
	ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesStorageosPtrOutput
}

type buildSpecTasksBuilderVolumesStorageosPtrType BuildSpecTasksBuilderVolumesStorageosArgs

func BuildSpecTasksBuilderVolumesStorageosPtr(v *BuildSpecTasksBuilderVolumesStorageosArgs) BuildSpecTasksBuilderVolumesStorageosPtrInput {
	return (*buildSpecTasksBuilderVolumesStorageosPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesStorageosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesStorageos)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesStorageosPtrType) ToBuildSpecTasksBuilderVolumesStorageosPtrOutput() BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesStorageosPtrType) ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesStorageosPtrOutput)
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksBuilderVolumesStorageosOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesStorageosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesStorageos)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesStorageosOutput) ToBuildSpecTasksBuilderVolumesStorageosOutput() BuildSpecTasksBuilderVolumesStorageosOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosOutput) ToBuildSpecTasksBuilderVolumesStorageosOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosOutput) ToBuildSpecTasksBuilderVolumesStorageosPtrOutput() BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesStorageosOutput) ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageos) *BuildSpecTasksBuilderVolumesStorageos {
		return &v
	}).(BuildSpecTasksBuilderVolumesStorageosPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesStorageosOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageos) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesStorageosOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageos) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
func (o BuildSpecTasksBuilderVolumesStorageosOutput) SecretRef() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageos) *BuildSpecTasksBuilderVolumesStorageosSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput)
}

// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
func (o BuildSpecTasksBuilderVolumesStorageosOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageos) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
func (o BuildSpecTasksBuilderVolumesStorageosOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageos) *string { return v.VolumeNamespace }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesStorageosPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesStorageosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesStorageos)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) ToBuildSpecTasksBuilderVolumesStorageosPtrOutput() BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) ToBuildSpecTasksBuilderVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) Elem() BuildSpecTasksBuilderVolumesStorageosOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageos) BuildSpecTasksBuilderVolumesStorageos { return *v }).(BuildSpecTasksBuilderVolumesStorageosOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageos) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) SecretRef() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageos) *BuildSpecTasksBuilderVolumesStorageosSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput)
}

// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
func (o BuildSpecTasksBuilderVolumesStorageosPtrOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeNamespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
type BuildSpecTasksBuilderVolumesStorageosSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksBuilderVolumesStorageosSecretRefInput is an input type that accepts BuildSpecTasksBuilderVolumesStorageosSecretRefArgs and BuildSpecTasksBuilderVolumesStorageosSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesStorageosSecretRefInput` via:
//
//          BuildSpecTasksBuilderVolumesStorageosSecretRefArgs{...}
type BuildSpecTasksBuilderVolumesStorageosSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefOutput
	ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefOutput
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
type BuildSpecTasksBuilderVolumesStorageosSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksBuilderVolumesStorageosSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesStorageosSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesStorageosSecretRefArgs) ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefOutput {
	return i.ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesStorageosSecretRefArgs) ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesStorageosSecretRefOutput)
}

func (i BuildSpecTasksBuilderVolumesStorageosSecretRefArgs) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesStorageosSecretRefArgs) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesStorageosSecretRefOutput).ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesStorageosSecretRefPtrInput is an input type that accepts BuildSpecTasksBuilderVolumesStorageosSecretRefArgs, BuildSpecTasksBuilderVolumesStorageosSecretRefPtr and BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesStorageosSecretRefPtrInput` via:
//
//          BuildSpecTasksBuilderVolumesStorageosSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesStorageosSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput
	ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput
}

type buildSpecTasksBuilderVolumesStorageosSecretRefPtrType BuildSpecTasksBuilderVolumesStorageosSecretRefArgs

func BuildSpecTasksBuilderVolumesStorageosSecretRefPtr(v *BuildSpecTasksBuilderVolumesStorageosSecretRefArgs) BuildSpecTasksBuilderVolumesStorageosSecretRefPtrInput {
	return (*buildSpecTasksBuilderVolumesStorageosSecretRefPtrType)(v)
}

func (*buildSpecTasksBuilderVolumesStorageosSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesStorageosSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesStorageosSecretRefPtrType) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesStorageosSecretRefPtrType) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
type BuildSpecTasksBuilderVolumesStorageosSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesStorageosSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesStorageosSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefOutput) ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefOutput) ToBuildSpecTasksBuilderVolumesStorageosSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefOutput) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefOutput) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageosSecretRef) *BuildSpecTasksBuilderVolumesStorageosSecretRef {
		return &v
	}).(BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesStorageosSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesStorageosSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesStorageosSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput() BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput) ToBuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput) Elem() BuildSpecTasksBuilderVolumesStorageosSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageosSecretRef) BuildSpecTasksBuilderVolumesStorageosSecretRef {
		return *v
	}).(BuildSpecTasksBuilderVolumesStorageosSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesStorageosSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesVsphereVolume struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `pulumi:"storagePolicyID"`
	// Storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `pulumi:"storagePolicyName"`
	// Path that identifies vSphere volume vmdk
	VolumePath string `pulumi:"volumePath"`
}

// BuildSpecTasksBuilderVolumesVsphereVolumeInput is an input type that accepts BuildSpecTasksBuilderVolumesVsphereVolumeArgs and BuildSpecTasksBuilderVolumesVsphereVolumeOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesVsphereVolumeInput` via:
//
//          BuildSpecTasksBuilderVolumesVsphereVolumeArgs{...}
type BuildSpecTasksBuilderVolumesVsphereVolumeInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesVsphereVolumeOutput() BuildSpecTasksBuilderVolumesVsphereVolumeOutput
	ToBuildSpecTasksBuilderVolumesVsphereVolumeOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesVsphereVolumeOutput
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesVsphereVolumeArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID pulumi.StringPtrInput `pulumi:"storagePolicyID"`
	// Storage Policy Based Management (SPBM) profile name.
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
	// Path that identifies vSphere volume vmdk
	VolumePath pulumi.StringInput `pulumi:"volumePath"`
}

func (BuildSpecTasksBuilderVolumesVsphereVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesVsphereVolume)(nil)).Elem()
}

func (i BuildSpecTasksBuilderVolumesVsphereVolumeArgs) ToBuildSpecTasksBuilderVolumesVsphereVolumeOutput() BuildSpecTasksBuilderVolumesVsphereVolumeOutput {
	return i.ToBuildSpecTasksBuilderVolumesVsphereVolumeOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesVsphereVolumeArgs) ToBuildSpecTasksBuilderVolumesVsphereVolumeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesVsphereVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesVsphereVolumeOutput)
}

func (i BuildSpecTasksBuilderVolumesVsphereVolumeArgs) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutput() BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksBuilderVolumesVsphereVolumeArgs) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesVsphereVolumeOutput).ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(ctx)
}

// BuildSpecTasksBuilderVolumesVsphereVolumePtrInput is an input type that accepts BuildSpecTasksBuilderVolumesVsphereVolumeArgs, BuildSpecTasksBuilderVolumesVsphereVolumePtr and BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksBuilderVolumesVsphereVolumePtrInput` via:
//
//          BuildSpecTasksBuilderVolumesVsphereVolumeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksBuilderVolumesVsphereVolumePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutput() BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput
	ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(context.Context) BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput
}

type buildSpecTasksBuilderVolumesVsphereVolumePtrType BuildSpecTasksBuilderVolumesVsphereVolumeArgs

func BuildSpecTasksBuilderVolumesVsphereVolumePtr(v *BuildSpecTasksBuilderVolumesVsphereVolumeArgs) BuildSpecTasksBuilderVolumesVsphereVolumePtrInput {
	return (*buildSpecTasksBuilderVolumesVsphereVolumePtrType)(v)
}

func (*buildSpecTasksBuilderVolumesVsphereVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesVsphereVolume)(nil)).Elem()
}

func (i *buildSpecTasksBuilderVolumesVsphereVolumePtrType) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutput() BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return i.ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksBuilderVolumesVsphereVolumePtrType) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput)
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type BuildSpecTasksBuilderVolumesVsphereVolumeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesVsphereVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksBuilderVolumesVsphereVolume)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) ToBuildSpecTasksBuilderVolumesVsphereVolumeOutput() BuildSpecTasksBuilderVolumesVsphereVolumeOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) ToBuildSpecTasksBuilderVolumesVsphereVolumeOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesVsphereVolumeOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutput() BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return o.ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesVsphereVolume) *BuildSpecTasksBuilderVolumesVsphereVolume {
		return &v
	}).(BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesVsphereVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesVsphereVolume) *string { return v.StoragePolicyID }).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile name.
func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesVsphereVolume) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

// Path that identifies vSphere volume vmdk
func (o BuildSpecTasksBuilderVolumesVsphereVolumeOutput) VolumePath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksBuilderVolumesVsphereVolume) string { return v.VolumePath }).(pulumi.StringOutput)
}

type BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksBuilderVolumesVsphereVolume)(nil)).Elem()
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutput() BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) ToBuildSpecTasksBuilderVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput {
	return o
}

func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) Elem() BuildSpecTasksBuilderVolumesVsphereVolumeOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesVsphereVolume) BuildSpecTasksBuilderVolumesVsphereVolume {
		return *v
	}).(BuildSpecTasksBuilderVolumesVsphereVolumeOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyID
	}).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile name.
func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyName
	}).(pulumi.StringPtrOutput)
}

// Path that identifies vSphere volume vmdk
func (o BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksBuilderVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumePath
	}).(pulumi.StringPtrOutput)
}

// ImageTask --
type BuildSpecTasksImage struct {
	// Affinity is a group of affinity scheduling rules.
	Affinity   *BuildSpecTasksImageAffinity `pulumi:"affinity"`
	Args       []string                     `pulumi:"args"`
	BuiltImage *string                      `pulumi:"builtImage"`
	Command    []string                     `pulumi:"command"`
	Env        []BuildSpecTasksImageEnv     `pulumi:"env"`
	Image      *string                      `pulumi:"image"`
	Name       *string                      `pulumi:"name"`
	// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
	SecurityContext *BuildSpecTasksImageSecurityContext `pulumi:"securityContext"`
	VolumeMounts    []BuildSpecTasksImageVolumeMounts   `pulumi:"volumeMounts"`
	Volumes         []BuildSpecTasksImageVolumes        `pulumi:"volumes"`
	WorkingDir      *string                             `pulumi:"workingDir"`
}

// BuildSpecTasksImageInput is an input type that accepts BuildSpecTasksImageArgs and BuildSpecTasksImageOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageInput` via:
//
//          BuildSpecTasksImageArgs{...}
type BuildSpecTasksImageInput interface {
	pulumi.Input

	ToBuildSpecTasksImageOutput() BuildSpecTasksImageOutput
	ToBuildSpecTasksImageOutputWithContext(context.Context) BuildSpecTasksImageOutput
}

// ImageTask --
type BuildSpecTasksImageArgs struct {
	// Affinity is a group of affinity scheduling rules.
	Affinity   BuildSpecTasksImageAffinityPtrInput `pulumi:"affinity"`
	Args       pulumi.StringArrayInput             `pulumi:"args"`
	BuiltImage pulumi.StringPtrInput               `pulumi:"builtImage"`
	Command    pulumi.StringArrayInput             `pulumi:"command"`
	Env        BuildSpecTasksImageEnvArrayInput    `pulumi:"env"`
	Image      pulumi.StringPtrInput               `pulumi:"image"`
	Name       pulumi.StringPtrInput               `pulumi:"name"`
	// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
	SecurityContext BuildSpecTasksImageSecurityContextPtrInput `pulumi:"securityContext"`
	VolumeMounts    BuildSpecTasksImageVolumeMountsArrayInput  `pulumi:"volumeMounts"`
	Volumes         BuildSpecTasksImageVolumesArrayInput       `pulumi:"volumes"`
	WorkingDir      pulumi.StringPtrInput                      `pulumi:"workingDir"`
}

func (BuildSpecTasksImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImage)(nil)).Elem()
}

func (i BuildSpecTasksImageArgs) ToBuildSpecTasksImageOutput() BuildSpecTasksImageOutput {
	return i.ToBuildSpecTasksImageOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageArgs) ToBuildSpecTasksImageOutputWithContext(ctx context.Context) BuildSpecTasksImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageOutput)
}

func (i BuildSpecTasksImageArgs) ToBuildSpecTasksImagePtrOutput() BuildSpecTasksImagePtrOutput {
	return i.ToBuildSpecTasksImagePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageArgs) ToBuildSpecTasksImagePtrOutputWithContext(ctx context.Context) BuildSpecTasksImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageOutput).ToBuildSpecTasksImagePtrOutputWithContext(ctx)
}

// BuildSpecTasksImagePtrInput is an input type that accepts BuildSpecTasksImageArgs, BuildSpecTasksImagePtr and BuildSpecTasksImagePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImagePtrInput` via:
//
//          BuildSpecTasksImageArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImagePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImagePtrOutput() BuildSpecTasksImagePtrOutput
	ToBuildSpecTasksImagePtrOutputWithContext(context.Context) BuildSpecTasksImagePtrOutput
}

type buildSpecTasksImagePtrType BuildSpecTasksImageArgs

func BuildSpecTasksImagePtr(v *BuildSpecTasksImageArgs) BuildSpecTasksImagePtrInput {
	return (*buildSpecTasksImagePtrType)(v)
}

func (*buildSpecTasksImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImage)(nil)).Elem()
}

func (i *buildSpecTasksImagePtrType) ToBuildSpecTasksImagePtrOutput() BuildSpecTasksImagePtrOutput {
	return i.ToBuildSpecTasksImagePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImagePtrType) ToBuildSpecTasksImagePtrOutputWithContext(ctx context.Context) BuildSpecTasksImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImagePtrOutput)
}

// ImageTask --
type BuildSpecTasksImageOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImage)(nil)).Elem()
}

func (o BuildSpecTasksImageOutput) ToBuildSpecTasksImageOutput() BuildSpecTasksImageOutput {
	return o
}

func (o BuildSpecTasksImageOutput) ToBuildSpecTasksImageOutputWithContext(ctx context.Context) BuildSpecTasksImageOutput {
	return o
}

func (o BuildSpecTasksImageOutput) ToBuildSpecTasksImagePtrOutput() BuildSpecTasksImagePtrOutput {
	return o.ToBuildSpecTasksImagePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageOutput) ToBuildSpecTasksImagePtrOutputWithContext(ctx context.Context) BuildSpecTasksImagePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *BuildSpecTasksImage {
		return &v
	}).(BuildSpecTasksImagePtrOutput)
}

// Affinity is a group of affinity scheduling rules.
func (o BuildSpecTasksImageOutput) Affinity() BuildSpecTasksImageAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *BuildSpecTasksImageAffinity { return v.Affinity }).(BuildSpecTasksImageAffinityPtrOutput)
}

func (o BuildSpecTasksImageOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksImageOutput) BuiltImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *string { return v.BuiltImage }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksImageOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) []string { return v.Command }).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksImageOutput) Env() BuildSpecTasksImageEnvArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) []BuildSpecTasksImageEnv { return v.Env }).(BuildSpecTasksImageEnvArrayOutput)
}

func (o BuildSpecTasksImageOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksImageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
func (o BuildSpecTasksImageOutput) SecurityContext() BuildSpecTasksImageSecurityContextPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *BuildSpecTasksImageSecurityContext { return v.SecurityContext }).(BuildSpecTasksImageSecurityContextPtrOutput)
}

func (o BuildSpecTasksImageOutput) VolumeMounts() BuildSpecTasksImageVolumeMountsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) []BuildSpecTasksImageVolumeMounts { return v.VolumeMounts }).(BuildSpecTasksImageVolumeMountsArrayOutput)
}

func (o BuildSpecTasksImageOutput) Volumes() BuildSpecTasksImageVolumesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) []BuildSpecTasksImageVolumes { return v.Volumes }).(BuildSpecTasksImageVolumesArrayOutput)
}

func (o BuildSpecTasksImageOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImage) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImagePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImage)(nil)).Elem()
}

func (o BuildSpecTasksImagePtrOutput) ToBuildSpecTasksImagePtrOutput() BuildSpecTasksImagePtrOutput {
	return o
}

func (o BuildSpecTasksImagePtrOutput) ToBuildSpecTasksImagePtrOutputWithContext(ctx context.Context) BuildSpecTasksImagePtrOutput {
	return o
}

func (o BuildSpecTasksImagePtrOutput) Elem() BuildSpecTasksImageOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) BuildSpecTasksImage { return *v }).(BuildSpecTasksImageOutput)
}

// Affinity is a group of affinity scheduling rules.
func (o BuildSpecTasksImagePtrOutput) Affinity() BuildSpecTasksImageAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) *BuildSpecTasksImageAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(BuildSpecTasksImageAffinityPtrOutput)
}

func (o BuildSpecTasksImagePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksImagePtrOutput) BuiltImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) *string {
		if v == nil {
			return nil
		}
		return v.BuiltImage
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksImagePtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

func (o BuildSpecTasksImagePtrOutput) Env() BuildSpecTasksImageEnvArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) []BuildSpecTasksImageEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(BuildSpecTasksImageEnvArrayOutput)
}

func (o BuildSpecTasksImagePtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o BuildSpecTasksImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
func (o BuildSpecTasksImagePtrOutput) SecurityContext() BuildSpecTasksImageSecurityContextPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) *BuildSpecTasksImageSecurityContext {
		if v == nil {
			return nil
		}
		return v.SecurityContext
	}).(BuildSpecTasksImageSecurityContextPtrOutput)
}

func (o BuildSpecTasksImagePtrOutput) VolumeMounts() BuildSpecTasksImageVolumeMountsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) []BuildSpecTasksImageVolumeMounts {
		if v == nil {
			return nil
		}
		return v.VolumeMounts
	}).(BuildSpecTasksImageVolumeMountsArrayOutput)
}

func (o BuildSpecTasksImagePtrOutput) Volumes() BuildSpecTasksImageVolumesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) []BuildSpecTasksImageVolumes {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(BuildSpecTasksImageVolumesArrayOutput)
}

func (o BuildSpecTasksImagePtrOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImage) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDir
	}).(pulumi.StringPtrOutput)
}

// Affinity is a group of affinity scheduling rules.
type BuildSpecTasksImageAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *BuildSpecTasksImageAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *BuildSpecTasksImageAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *BuildSpecTasksImageAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// BuildSpecTasksImageAffinityInput is an input type that accepts BuildSpecTasksImageAffinityArgs and BuildSpecTasksImageAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityInput` via:
//
//          BuildSpecTasksImageAffinityArgs{...}
type BuildSpecTasksImageAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityOutput() BuildSpecTasksImageAffinityOutput
	ToBuildSpecTasksImageAffinityOutputWithContext(context.Context) BuildSpecTasksImageAffinityOutput
}

// Affinity is a group of affinity scheduling rules.
type BuildSpecTasksImageAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity BuildSpecTasksImageAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity BuildSpecTasksImageAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity BuildSpecTasksImageAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (BuildSpecTasksImageAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinity)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityArgs) ToBuildSpecTasksImageAffinityOutput() BuildSpecTasksImageAffinityOutput {
	return i.ToBuildSpecTasksImageAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityArgs) ToBuildSpecTasksImageAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityOutput)
}

func (i BuildSpecTasksImageAffinityArgs) ToBuildSpecTasksImageAffinityPtrOutput() BuildSpecTasksImageAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityArgs) ToBuildSpecTasksImageAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityOutput).ToBuildSpecTasksImageAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPtrInput is an input type that accepts BuildSpecTasksImageAffinityArgs, BuildSpecTasksImageAffinityPtr and BuildSpecTasksImageAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPtrInput` via:
//
//          BuildSpecTasksImageAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPtrOutput() BuildSpecTasksImageAffinityPtrOutput
	ToBuildSpecTasksImageAffinityPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPtrOutput
}

type buildSpecTasksImageAffinityPtrType BuildSpecTasksImageAffinityArgs

func BuildSpecTasksImageAffinityPtr(v *BuildSpecTasksImageAffinityArgs) BuildSpecTasksImageAffinityPtrInput {
	return (*buildSpecTasksImageAffinityPtrType)(v)
}

func (*buildSpecTasksImageAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinity)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPtrType) ToBuildSpecTasksImageAffinityPtrOutput() BuildSpecTasksImageAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPtrType) ToBuildSpecTasksImageAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPtrOutput)
}

// Affinity is a group of affinity scheduling rules.
type BuildSpecTasksImageAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityOutput) ToBuildSpecTasksImageAffinityOutput() BuildSpecTasksImageAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityOutput) ToBuildSpecTasksImageAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityOutput) ToBuildSpecTasksImageAffinityPtrOutput() BuildSpecTasksImageAffinityPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityOutput) ToBuildSpecTasksImageAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinity {
		return &v
	}).(BuildSpecTasksImageAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o BuildSpecTasksImageAffinityOutput) NodeAffinity() BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinityNodeAffinity { return v.NodeAffinity }).(BuildSpecTasksImageAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksImageAffinityOutput) PodAffinity() BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinityPodAffinity { return v.PodAffinity }).(BuildSpecTasksImageAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksImageAffinityOutput) PodAntiAffinity() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput)
}

type BuildSpecTasksImageAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPtrOutput) ToBuildSpecTasksImageAffinityPtrOutput() BuildSpecTasksImageAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPtrOutput) ToBuildSpecTasksImageAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPtrOutput) Elem() BuildSpecTasksImageAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinity) BuildSpecTasksImageAffinity { return *v }).(BuildSpecTasksImageAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o BuildSpecTasksImageAffinityPtrOutput) NodeAffinity() BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(BuildSpecTasksImageAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksImageAffinityPtrOutput) PodAffinity() BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(BuildSpecTasksImageAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o BuildSpecTasksImageAffinityPtrOutput) PodAntiAffinity() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinity) *BuildSpecTasksImageAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type BuildSpecTasksImageAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// BuildSpecTasksImageAffinityNodeAffinityInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityArgs and BuildSpecTasksImageAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityOutput() BuildSpecTasksImageAffinityNodeAffinityOutput
	ToBuildSpecTasksImageAffinityNodeAffinityOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type BuildSpecTasksImageAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (BuildSpecTasksImageAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinity)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityArgs) ToBuildSpecTasksImageAffinityNodeAffinityOutput() BuildSpecTasksImageAffinityNodeAffinityOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityArgs) ToBuildSpecTasksImageAffinityNodeAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityOutput)
}

func (i BuildSpecTasksImageAffinityNodeAffinityArgs) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutput() BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityArgs) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityOutput).ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityNodeAffinityPtrInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityArgs, BuildSpecTasksImageAffinityNodeAffinityPtr and BuildSpecTasksImageAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPtrInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPtrOutput() BuildSpecTasksImageAffinityNodeAffinityPtrOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPtrOutput
}

type buildSpecTasksImageAffinityNodeAffinityPtrType BuildSpecTasksImageAffinityNodeAffinityArgs

func BuildSpecTasksImageAffinityNodeAffinityPtr(v *BuildSpecTasksImageAffinityNodeAffinityArgs) BuildSpecTasksImageAffinityNodeAffinityPtrInput {
	return (*buildSpecTasksImageAffinityNodeAffinityPtrType)(v)
}

func (*buildSpecTasksImageAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityNodeAffinity)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityNodeAffinityPtrType) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutput() BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityNodeAffinityPtrType) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type BuildSpecTasksImageAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityOutput) ToBuildSpecTasksImageAffinityNodeAffinityOutput() BuildSpecTasksImageAffinityNodeAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityOutput) ToBuildSpecTasksImageAffinityNodeAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityOutput) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutput() BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return o.ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityNodeAffinityOutput) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinity) *BuildSpecTasksImageAffinityNodeAffinity {
		return &v
	}).(BuildSpecTasksImageAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksImageAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinity) []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o BuildSpecTasksImageAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinity) *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityNodeAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPtrOutput) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutput() BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPtrOutput) ToBuildSpecTasksImageAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPtrOutput) Elem() BuildSpecTasksImageAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityNodeAffinity) BuildSpecTasksImageAffinityNodeAffinity { return *v }).(BuildSpecTasksImageAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksImageAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityNodeAffinity) []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o BuildSpecTasksImageAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityNodeAffinity) *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type buildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*buildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*buildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return *v
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToBuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksImageAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// BuildSpecTasksImageAffinityPodAffinityInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityArgs and BuildSpecTasksImageAffinityPodAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityArgs{...}
type BuildSpecTasksImageAffinityPodAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityOutput() BuildSpecTasksImageAffinityPodAffinityOutput
	ToBuildSpecTasksImageAffinityPodAffinityOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksImageAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (BuildSpecTasksImageAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinity)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityArgs) ToBuildSpecTasksImageAffinityPodAffinityOutput() BuildSpecTasksImageAffinityPodAffinityOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityArgs) ToBuildSpecTasksImageAffinityPodAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityOutput)
}

func (i BuildSpecTasksImageAffinityPodAffinityArgs) ToBuildSpecTasksImageAffinityPodAffinityPtrOutput() BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityArgs) ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityOutput).ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPodAffinityPtrInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityArgs, BuildSpecTasksImageAffinityPodAffinityPtr and BuildSpecTasksImageAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPtrInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPtrOutput() BuildSpecTasksImageAffinityPodAffinityPtrOutput
	ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPtrOutput
}

type buildSpecTasksImageAffinityPodAffinityPtrType BuildSpecTasksImageAffinityPodAffinityArgs

func BuildSpecTasksImageAffinityPodAffinityPtr(v *BuildSpecTasksImageAffinityPodAffinityArgs) BuildSpecTasksImageAffinityPodAffinityPtrInput {
	return (*buildSpecTasksImageAffinityPodAffinityPtrType)(v)
}

func (*buildSpecTasksImageAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAffinity)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPodAffinityPtrType) ToBuildSpecTasksImageAffinityPodAffinityPtrOutput() BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPodAffinityPtrType) ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksImageAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityOutput) ToBuildSpecTasksImageAffinityPodAffinityOutput() BuildSpecTasksImageAffinityPodAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityOutput) ToBuildSpecTasksImageAffinityPodAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityOutput) ToBuildSpecTasksImageAffinityPodAffinityPtrOutput() BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityPodAffinityOutput) ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinity) *BuildSpecTasksImageAffinityPodAffinity {
		return &v
	}).(BuildSpecTasksImageAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksImageAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinity) []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksImageAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinity) []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type BuildSpecTasksImageAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPtrOutput) ToBuildSpecTasksImageAffinityPodAffinityPtrOutput() BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPtrOutput) ToBuildSpecTasksImageAffinityPodAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPtrOutput) Elem() BuildSpecTasksImageAffinityPodAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinity) BuildSpecTasksImageAffinityPodAffinity { return *v }).(BuildSpecTasksImageAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksImageAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinity) []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksImageAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinity) []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type buildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*buildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*buildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type buildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*buildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*buildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksImageAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityArgs and BuildSpecTasksImageAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityOutput() BuildSpecTasksImageAffinityPodAntiAffinityOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksImageAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinity)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityOutput() BuildSpecTasksImageAffinityPodAntiAffinityOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityOutput)
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityOutput).ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPodAntiAffinityPtrInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityArgs, BuildSpecTasksImageAffinityPodAntiAffinityPtr and BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPtrInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput
}

type buildSpecTasksImageAffinityPodAntiAffinityPtrType BuildSpecTasksImageAffinityPodAntiAffinityArgs

func BuildSpecTasksImageAffinityPodAntiAffinityPtr(v *BuildSpecTasksImageAffinityPodAntiAffinityArgs) BuildSpecTasksImageAffinityPodAntiAffinityPtrInput {
	return (*buildSpecTasksImageAffinityPodAntiAffinityPtrType)(v)
}

func (*buildSpecTasksImageAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPodAntiAffinityPtrType) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPodAntiAffinityPtrType) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type BuildSpecTasksImageAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityOutput() BuildSpecTasksImageAffinityPodAntiAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinity) *BuildSpecTasksImageAffinityPodAntiAffinity {
		return &v
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksImageAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinity) []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksImageAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinity) []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAntiAffinity)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput) Elem() BuildSpecTasksImageAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinity) BuildSpecTasksImageAffinityPodAntiAffinity {
		return *v
	}).(BuildSpecTasksImageAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinity) []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinity) []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type buildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*buildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*buildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type buildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*buildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*buildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *buildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToBuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// EnvVar represents an environment variable present in a Container.
type BuildSpecTasksImageEnv struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name string `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value *string `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom *BuildSpecTasksImageEnvValueFrom `pulumi:"valueFrom"`
}

// BuildSpecTasksImageEnvInput is an input type that accepts BuildSpecTasksImageEnvArgs and BuildSpecTasksImageEnvOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvInput` via:
//
//          BuildSpecTasksImageEnvArgs{...}
type BuildSpecTasksImageEnvInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvOutput() BuildSpecTasksImageEnvOutput
	ToBuildSpecTasksImageEnvOutputWithContext(context.Context) BuildSpecTasksImageEnvOutput
}

// EnvVar represents an environment variable present in a Container.
type BuildSpecTasksImageEnvArgs struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name pulumi.StringInput `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom BuildSpecTasksImageEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (BuildSpecTasksImageEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnv)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvArgs) ToBuildSpecTasksImageEnvOutput() BuildSpecTasksImageEnvOutput {
	return i.ToBuildSpecTasksImageEnvOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvArgs) ToBuildSpecTasksImageEnvOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvOutput)
}

// BuildSpecTasksImageEnvArrayInput is an input type that accepts BuildSpecTasksImageEnvArray and BuildSpecTasksImageEnvArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvArrayInput` via:
//
//          BuildSpecTasksImageEnvArray{ BuildSpecTasksImageEnvArgs{...} }
type BuildSpecTasksImageEnvArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvArrayOutput() BuildSpecTasksImageEnvArrayOutput
	ToBuildSpecTasksImageEnvArrayOutputWithContext(context.Context) BuildSpecTasksImageEnvArrayOutput
}

type BuildSpecTasksImageEnvArray []BuildSpecTasksImageEnvInput

func (BuildSpecTasksImageEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageEnv)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvArray) ToBuildSpecTasksImageEnvArrayOutput() BuildSpecTasksImageEnvArrayOutput {
	return i.ToBuildSpecTasksImageEnvArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvArray) ToBuildSpecTasksImageEnvArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvArrayOutput)
}

// EnvVar represents an environment variable present in a Container.
type BuildSpecTasksImageEnvOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnv)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvOutput) ToBuildSpecTasksImageEnvOutput() BuildSpecTasksImageEnvOutput {
	return o
}

func (o BuildSpecTasksImageEnvOutput) ToBuildSpecTasksImageEnvOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvOutput {
	return o
}

// Name of the environment variable. Must be a C_IDENTIFIER.
func (o BuildSpecTasksImageEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
func (o BuildSpecTasksImageEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
func (o BuildSpecTasksImageEnvOutput) ValueFrom() BuildSpecTasksImageEnvValueFromPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnv) *BuildSpecTasksImageEnvValueFrom { return v.ValueFrom }).(BuildSpecTasksImageEnvValueFromPtrOutput)
}

type BuildSpecTasksImageEnvArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageEnv)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvArrayOutput) ToBuildSpecTasksImageEnvArrayOutput() BuildSpecTasksImageEnvArrayOutput {
	return o
}

func (o BuildSpecTasksImageEnvArrayOutput) ToBuildSpecTasksImageEnvArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvArrayOutput {
	return o
}

func (o BuildSpecTasksImageEnvArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageEnv {
		return vs[0].([]BuildSpecTasksImageEnv)[vs[1].(int)]
	}).(BuildSpecTasksImageEnvOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type BuildSpecTasksImageEnvValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *BuildSpecTasksImageEnvValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
	FieldRef *BuildSpecTasksImageEnvValueFromFieldRef `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef *BuildSpecTasksImageEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef *BuildSpecTasksImageEnvValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// BuildSpecTasksImageEnvValueFromInput is an input type that accepts BuildSpecTasksImageEnvValueFromArgs and BuildSpecTasksImageEnvValueFromOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromInput` via:
//
//          BuildSpecTasksImageEnvValueFromArgs{...}
type BuildSpecTasksImageEnvValueFromInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromOutput() BuildSpecTasksImageEnvValueFromOutput
	ToBuildSpecTasksImageEnvValueFromOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromOutput
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type BuildSpecTasksImageEnvValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
	FieldRef BuildSpecTasksImageEnvValueFromFieldRefPtrInput `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef BuildSpecTasksImageEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef BuildSpecTasksImageEnvValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (BuildSpecTasksImageEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFrom)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvValueFromArgs) ToBuildSpecTasksImageEnvValueFromOutput() BuildSpecTasksImageEnvValueFromOutput {
	return i.ToBuildSpecTasksImageEnvValueFromOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromArgs) ToBuildSpecTasksImageEnvValueFromOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromOutput)
}

func (i BuildSpecTasksImageEnvValueFromArgs) ToBuildSpecTasksImageEnvValueFromPtrOutput() BuildSpecTasksImageEnvValueFromPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromArgs) ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromOutput).ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageEnvValueFromPtrInput is an input type that accepts BuildSpecTasksImageEnvValueFromArgs, BuildSpecTasksImageEnvValueFromPtr and BuildSpecTasksImageEnvValueFromPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromPtrInput` via:
//
//          BuildSpecTasksImageEnvValueFromArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageEnvValueFromPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromPtrOutput() BuildSpecTasksImageEnvValueFromPtrOutput
	ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromPtrOutput
}

type buildSpecTasksImageEnvValueFromPtrType BuildSpecTasksImageEnvValueFromArgs

func BuildSpecTasksImageEnvValueFromPtr(v *BuildSpecTasksImageEnvValueFromArgs) BuildSpecTasksImageEnvValueFromPtrInput {
	return (*buildSpecTasksImageEnvValueFromPtrType)(v)
}

func (*buildSpecTasksImageEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFrom)(nil)).Elem()
}

func (i *buildSpecTasksImageEnvValueFromPtrType) ToBuildSpecTasksImageEnvValueFromPtrOutput() BuildSpecTasksImageEnvValueFromPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageEnvValueFromPtrType) ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type BuildSpecTasksImageEnvValueFromOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFrom)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromOutput) ToBuildSpecTasksImageEnvValueFromOutput() BuildSpecTasksImageEnvValueFromOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromOutput) ToBuildSpecTasksImageEnvValueFromOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromOutput) ToBuildSpecTasksImageEnvValueFromPtrOutput() BuildSpecTasksImageEnvValueFromPtrOutput {
	return o.ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageEnvValueFromOutput) ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFrom {
		return &v
	}).(BuildSpecTasksImageEnvValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o BuildSpecTasksImageEnvValueFromOutput) ConfigMapKeyRef() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
func (o BuildSpecTasksImageEnvValueFromOutput) FieldRef() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromFieldRef { return v.FieldRef }).(BuildSpecTasksImageEnvValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o BuildSpecTasksImageEnvValueFromOutput) ResourceFieldRef() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o BuildSpecTasksImageEnvValueFromOutput) SecretKeyRef() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput)
}

type BuildSpecTasksImageEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFrom)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromPtrOutput) ToBuildSpecTasksImageEnvValueFromPtrOutput() BuildSpecTasksImageEnvValueFromPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromPtrOutput) ToBuildSpecTasksImageEnvValueFromPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromPtrOutput) Elem() BuildSpecTasksImageEnvValueFromOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFrom) BuildSpecTasksImageEnvValueFrom { return *v }).(BuildSpecTasksImageEnvValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o BuildSpecTasksImageEnvValueFromPtrOutput) ConfigMapKeyRef() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
func (o BuildSpecTasksImageEnvValueFromPtrOutput) FieldRef() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(BuildSpecTasksImageEnvValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o BuildSpecTasksImageEnvValueFromPtrOutput) ResourceFieldRef() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o BuildSpecTasksImageEnvValueFromPtrOutput) SecretKeyRef() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFrom) *BuildSpecTasksImageEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BuildSpecTasksImageEnvValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksImageEnvValueFromConfigMapKeyRefInput is an input type that accepts BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs and BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromConfigMapKeyRefInput` via:
//
//          BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs{...}
type BuildSpecTasksImageEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput
	ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput {
	return i.ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput)
}

func (i BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput).ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs, BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtr and BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput
	ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput
}

type buildSpecTasksImageEnvValueFromConfigMapKeyRefPtrType BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs

func BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtr(v *BuildSpecTasksImageEnvValueFromConfigMapKeyRefArgs) BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrInput {
	return (*buildSpecTasksImageEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*buildSpecTasksImageEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *buildSpecTasksImageEnvValueFromConfigMapKeyRefPtrType) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageEnvValueFromConfigMapKeyRefPtrType) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromConfigMapKeyRef) *BuildSpecTasksImageEnvValueFromConfigMapKeyRef {
		return &v
	}).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) ToBuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) Elem() BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromConfigMapKeyRef) BuildSpecTasksImageEnvValueFromConfigMapKeyRef {
		return *v
	}).(BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
type BuildSpecTasksImageEnvValueFromFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// BuildSpecTasksImageEnvValueFromFieldRefInput is an input type that accepts BuildSpecTasksImageEnvValueFromFieldRefArgs and BuildSpecTasksImageEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromFieldRefInput` via:
//
//          BuildSpecTasksImageEnvValueFromFieldRefArgs{...}
type BuildSpecTasksImageEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromFieldRefOutput() BuildSpecTasksImageEnvValueFromFieldRefOutput
	ToBuildSpecTasksImageEnvValueFromFieldRefOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromFieldRefOutput
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
type BuildSpecTasksImageEnvValueFromFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (BuildSpecTasksImageEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvValueFromFieldRefArgs) ToBuildSpecTasksImageEnvValueFromFieldRefOutput() BuildSpecTasksImageEnvValueFromFieldRefOutput {
	return i.ToBuildSpecTasksImageEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromFieldRefArgs) ToBuildSpecTasksImageEnvValueFromFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromFieldRefOutput)
}

func (i BuildSpecTasksImageEnvValueFromFieldRefArgs) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromFieldRefArgs) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromFieldRefOutput).ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageEnvValueFromFieldRefPtrInput is an input type that accepts BuildSpecTasksImageEnvValueFromFieldRefArgs, BuildSpecTasksImageEnvValueFromFieldRefPtr and BuildSpecTasksImageEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromFieldRefPtrInput` via:
//
//          BuildSpecTasksImageEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput
	ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromFieldRefPtrOutput
}

type buildSpecTasksImageEnvValueFromFieldRefPtrType BuildSpecTasksImageEnvValueFromFieldRefArgs

func BuildSpecTasksImageEnvValueFromFieldRefPtr(v *BuildSpecTasksImageEnvValueFromFieldRefArgs) BuildSpecTasksImageEnvValueFromFieldRefPtrInput {
	return (*buildSpecTasksImageEnvValueFromFieldRefPtrType)(v)
}

func (*buildSpecTasksImageEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksImageEnvValueFromFieldRefPtrType) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageEnvValueFromFieldRefPtrType) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromFieldRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
type BuildSpecTasksImageEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromFieldRefOutput) ToBuildSpecTasksImageEnvValueFromFieldRefOutput() BuildSpecTasksImageEnvValueFromFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromFieldRefOutput) ToBuildSpecTasksImageEnvValueFromFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromFieldRefOutput) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return o.ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageEnvValueFromFieldRefOutput) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromFieldRef) *BuildSpecTasksImageEnvValueFromFieldRef {
		return &v
	}).(BuildSpecTasksImageEnvValueFromFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksImageEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksImageEnvValueFromFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type BuildSpecTasksImageEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromFieldRefPtrOutput) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromFieldRefPtrOutput) ToBuildSpecTasksImageEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromFieldRefPtrOutput) Elem() BuildSpecTasksImageEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromFieldRef) BuildSpecTasksImageEnvValueFromFieldRef { return *v }).(BuildSpecTasksImageEnvValueFromFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksImageEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksImageEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type BuildSpecTasksImageEnvValueFromResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// BuildSpecTasksImageEnvValueFromResourceFieldRefInput is an input type that accepts BuildSpecTasksImageEnvValueFromResourceFieldRefArgs and BuildSpecTasksImageEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromResourceFieldRefInput` via:
//
//          BuildSpecTasksImageEnvValueFromResourceFieldRefArgs{...}
type BuildSpecTasksImageEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefOutput
	ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type BuildSpecTasksImageEnvValueFromResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (BuildSpecTasksImageEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefOutput {
	return i.ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromResourceFieldRefOutput)
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromResourceFieldRefOutput).ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageEnvValueFromResourceFieldRefPtrInput is an input type that accepts BuildSpecTasksImageEnvValueFromResourceFieldRefArgs, BuildSpecTasksImageEnvValueFromResourceFieldRefPtr and BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromResourceFieldRefPtrInput` via:
//
//          BuildSpecTasksImageEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput
	ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput
}

type buildSpecTasksImageEnvValueFromResourceFieldRefPtrType BuildSpecTasksImageEnvValueFromResourceFieldRefArgs

func BuildSpecTasksImageEnvValueFromResourceFieldRefPtr(v *BuildSpecTasksImageEnvValueFromResourceFieldRefArgs) BuildSpecTasksImageEnvValueFromResourceFieldRefPtrInput {
	return (*buildSpecTasksImageEnvValueFromResourceFieldRefPtrType)(v)
}

func (*buildSpecTasksImageEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksImageEnvValueFromResourceFieldRefPtrType) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageEnvValueFromResourceFieldRefPtrType) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type BuildSpecTasksImageEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return o.ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromResourceFieldRef) *BuildSpecTasksImageEnvValueFromResourceFieldRef {
		return &v
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) Divisor() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromResourceFieldRef) *BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor {
		return v.Divisor
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksImageEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) Elem() BuildSpecTasksImageEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromResourceFieldRef) BuildSpecTasksImageEnvValueFromResourceFieldRef {
		return *v
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) Divisor() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromResourceFieldRef) *BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor struct {
}

// BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorInput is an input type that accepts BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs and BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorInput` via:
//
//          BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs{...}
type BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput
	ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput
}

type BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs struct {
}

func (BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput {
	return i.ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput)
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput).ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrInput is an input type that accepts BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs, BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtr and BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrInput` via:
//
//          BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput
	ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput
}

type buildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrType BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs

func BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtr(v *BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorArgs) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrInput {
	return (*buildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrType)(v)
}

func (*buildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor)(nil)).Elem()
}

func (i *buildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrType) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrType) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return o.ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor) *BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor {
		return &v
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput) Elem() BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor) BuildSpecTasksImageEnvValueFromResourceFieldRefDivisor {
		return *v
	}).(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput)
}

// Selects a key of a secret in the pod's namespace
type BuildSpecTasksImageEnvValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksImageEnvValueFromSecretKeyRefInput is an input type that accepts BuildSpecTasksImageEnvValueFromSecretKeyRefArgs and BuildSpecTasksImageEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromSecretKeyRefInput` via:
//
//          BuildSpecTasksImageEnvValueFromSecretKeyRefArgs{...}
type BuildSpecTasksImageEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefOutput
	ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the pod's namespace
type BuildSpecTasksImageEnvValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksImageEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i BuildSpecTasksImageEnvValueFromSecretKeyRefArgs) ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefOutput {
	return i.ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromSecretKeyRefArgs) ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromSecretKeyRefOutput)
}

func (i BuildSpecTasksImageEnvValueFromSecretKeyRefArgs) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageEnvValueFromSecretKeyRefArgs) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromSecretKeyRefOutput).ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageEnvValueFromSecretKeyRefPtrInput is an input type that accepts BuildSpecTasksImageEnvValueFromSecretKeyRefArgs, BuildSpecTasksImageEnvValueFromSecretKeyRefPtr and BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageEnvValueFromSecretKeyRefPtrInput` via:
//
//          BuildSpecTasksImageEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput
	ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput
}

type buildSpecTasksImageEnvValueFromSecretKeyRefPtrType BuildSpecTasksImageEnvValueFromSecretKeyRefArgs

func BuildSpecTasksImageEnvValueFromSecretKeyRefPtr(v *BuildSpecTasksImageEnvValueFromSecretKeyRefArgs) BuildSpecTasksImageEnvValueFromSecretKeyRefPtrInput {
	return (*buildSpecTasksImageEnvValueFromSecretKeyRefPtrType)(v)
}

func (*buildSpecTasksImageEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *buildSpecTasksImageEnvValueFromSecretKeyRefPtrType) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return i.ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageEnvValueFromSecretKeyRefPtrType) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type BuildSpecTasksImageEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) ToBuildSpecTasksImageEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return o.ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromSecretKeyRef) *BuildSpecTasksImageEnvValueFromSecretKeyRef {
		return &v
	}).(BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksImageEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput() BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) ToBuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) Elem() BuildSpecTasksImageEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromSecretKeyRef) BuildSpecTasksImageEnvValueFromSecretKeyRef {
		return *v
	}).(BuildSpecTasksImageEnvValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
type BuildSpecTasksImageSecurityContext struct {
	// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
	AllowPrivilegeEscalation *bool `pulumi:"allowPrivilegeEscalation"`
	// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
	Capabilities *BuildSpecTasksImageSecurityContextCapabilities `pulumi:"capabilities"`
	// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
	Privileged *bool `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
	ProcMount *string `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem. Default is false.
	ReadOnlyRootFilesystem *bool `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUser *int `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	SeLinuxOptions *BuildSpecTasksImageSecurityContextSeLinuxOptions `pulumi:"seLinuxOptions"`
	// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	WindowsOptions *BuildSpecTasksImageSecurityContextWindowsOptions `pulumi:"windowsOptions"`
}

// BuildSpecTasksImageSecurityContextInput is an input type that accepts BuildSpecTasksImageSecurityContextArgs and BuildSpecTasksImageSecurityContextOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextInput` via:
//
//          BuildSpecTasksImageSecurityContextArgs{...}
type BuildSpecTasksImageSecurityContextInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextOutput() BuildSpecTasksImageSecurityContextOutput
	ToBuildSpecTasksImageSecurityContextOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextOutput
}

// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
type BuildSpecTasksImageSecurityContextArgs struct {
	// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
	AllowPrivilegeEscalation pulumi.BoolPtrInput `pulumi:"allowPrivilegeEscalation"`
	// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
	Capabilities BuildSpecTasksImageSecurityContextCapabilitiesPtrInput `pulumi:"capabilities"`
	// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
	ProcMount pulumi.StringPtrInput `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem. Default is false.
	ReadOnlyRootFilesystem pulumi.BoolPtrInput `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUser pulumi.IntPtrInput `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	SeLinuxOptions BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrInput `pulumi:"seLinuxOptions"`
	// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	WindowsOptions BuildSpecTasksImageSecurityContextWindowsOptionsPtrInput `pulumi:"windowsOptions"`
}

func (BuildSpecTasksImageSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContext)(nil)).Elem()
}

func (i BuildSpecTasksImageSecurityContextArgs) ToBuildSpecTasksImageSecurityContextOutput() BuildSpecTasksImageSecurityContextOutput {
	return i.ToBuildSpecTasksImageSecurityContextOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextArgs) ToBuildSpecTasksImageSecurityContextOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextOutput)
}

func (i BuildSpecTasksImageSecurityContextArgs) ToBuildSpecTasksImageSecurityContextPtrOutput() BuildSpecTasksImageSecurityContextPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextArgs) ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextOutput).ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageSecurityContextPtrInput is an input type that accepts BuildSpecTasksImageSecurityContextArgs, BuildSpecTasksImageSecurityContextPtr and BuildSpecTasksImageSecurityContextPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextPtrInput` via:
//
//          BuildSpecTasksImageSecurityContextArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageSecurityContextPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextPtrOutput() BuildSpecTasksImageSecurityContextPtrOutput
	ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextPtrOutput
}

type buildSpecTasksImageSecurityContextPtrType BuildSpecTasksImageSecurityContextArgs

func BuildSpecTasksImageSecurityContextPtr(v *BuildSpecTasksImageSecurityContextArgs) BuildSpecTasksImageSecurityContextPtrInput {
	return (*buildSpecTasksImageSecurityContextPtrType)(v)
}

func (*buildSpecTasksImageSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContext)(nil)).Elem()
}

func (i *buildSpecTasksImageSecurityContextPtrType) ToBuildSpecTasksImageSecurityContextPtrOutput() BuildSpecTasksImageSecurityContextPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageSecurityContextPtrType) ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextPtrOutput)
}

// SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
type BuildSpecTasksImageSecurityContextOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContext)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextOutput) ToBuildSpecTasksImageSecurityContextOutput() BuildSpecTasksImageSecurityContextOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextOutput) ToBuildSpecTasksImageSecurityContextOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextOutput) ToBuildSpecTasksImageSecurityContextPtrOutput() BuildSpecTasksImageSecurityContextPtrOutput {
	return o.ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageSecurityContextOutput) ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContext {
		return &v
	}).(BuildSpecTasksImageSecurityContextPtrOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
func (o BuildSpecTasksImageSecurityContextOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *bool { return v.AllowPrivilegeEscalation }).(pulumi.BoolPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
func (o BuildSpecTasksImageSecurityContextOutput) Capabilities() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContextCapabilities {
		return v.Capabilities
	}).(BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
func (o BuildSpecTasksImageSecurityContextOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
func (o BuildSpecTasksImageSecurityContextOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *string { return v.ProcMount }).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem. Default is false.
func (o BuildSpecTasksImageSecurityContextOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *bool { return v.ReadOnlyRootFilesystem }).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextOutput) SeLinuxOptions() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextOutput) WindowsOptions() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput)
}

type BuildSpecTasksImageSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContext)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextPtrOutput) ToBuildSpecTasksImageSecurityContextPtrOutput() BuildSpecTasksImageSecurityContextPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextPtrOutput) ToBuildSpecTasksImageSecurityContextPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextPtrOutput) Elem() BuildSpecTasksImageSecurityContextOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) BuildSpecTasksImageSecurityContext { return *v }).(BuildSpecTasksImageSecurityContextOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
func (o BuildSpecTasksImageSecurityContextPtrOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
func (o BuildSpecTasksImageSecurityContextPtrOutput) Capabilities() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContextCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
func (o BuildSpecTasksImageSecurityContextPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
func (o BuildSpecTasksImageSecurityContextPtrOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.ProcMount
	}).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem. Default is false.
func (o BuildSpecTasksImageSecurityContextPtrOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextPtrOutput) SeLinuxOptions() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextPtrOutput) WindowsOptions() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContext) *BuildSpecTasksImageSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type BuildSpecTasksImageSecurityContextCapabilities struct {
	// Added capabilities
	Add []string `pulumi:"add"`
	// Removed capabilities
	Drop []string `pulumi:"drop"`
}

// BuildSpecTasksImageSecurityContextCapabilitiesInput is an input type that accepts BuildSpecTasksImageSecurityContextCapabilitiesArgs and BuildSpecTasksImageSecurityContextCapabilitiesOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextCapabilitiesInput` via:
//
//          BuildSpecTasksImageSecurityContextCapabilitiesArgs{...}
type BuildSpecTasksImageSecurityContextCapabilitiesInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextCapabilitiesOutput() BuildSpecTasksImageSecurityContextCapabilitiesOutput
	ToBuildSpecTasksImageSecurityContextCapabilitiesOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextCapabilitiesOutput
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type BuildSpecTasksImageSecurityContextCapabilitiesArgs struct {
	// Added capabilities
	Add pulumi.StringArrayInput `pulumi:"add"`
	// Removed capabilities
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (BuildSpecTasksImageSecurityContextCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContextCapabilities)(nil)).Elem()
}

func (i BuildSpecTasksImageSecurityContextCapabilitiesArgs) ToBuildSpecTasksImageSecurityContextCapabilitiesOutput() BuildSpecTasksImageSecurityContextCapabilitiesOutput {
	return i.ToBuildSpecTasksImageSecurityContextCapabilitiesOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextCapabilitiesArgs) ToBuildSpecTasksImageSecurityContextCapabilitiesOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextCapabilitiesOutput)
}

func (i BuildSpecTasksImageSecurityContextCapabilitiesArgs) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutput() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextCapabilitiesArgs) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextCapabilitiesOutput).ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageSecurityContextCapabilitiesPtrInput is an input type that accepts BuildSpecTasksImageSecurityContextCapabilitiesArgs, BuildSpecTasksImageSecurityContextCapabilitiesPtr and BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextCapabilitiesPtrInput` via:
//
//          BuildSpecTasksImageSecurityContextCapabilitiesArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageSecurityContextCapabilitiesPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutput() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput
	ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput
}

type buildSpecTasksImageSecurityContextCapabilitiesPtrType BuildSpecTasksImageSecurityContextCapabilitiesArgs

func BuildSpecTasksImageSecurityContextCapabilitiesPtr(v *BuildSpecTasksImageSecurityContextCapabilitiesArgs) BuildSpecTasksImageSecurityContextCapabilitiesPtrInput {
	return (*buildSpecTasksImageSecurityContextCapabilitiesPtrType)(v)
}

func (*buildSpecTasksImageSecurityContextCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContextCapabilities)(nil)).Elem()
}

func (i *buildSpecTasksImageSecurityContextCapabilitiesPtrType) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutput() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageSecurityContextCapabilitiesPtrType) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type BuildSpecTasksImageSecurityContextCapabilitiesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContextCapabilities)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesOutput) ToBuildSpecTasksImageSecurityContextCapabilitiesOutput() BuildSpecTasksImageSecurityContextCapabilitiesOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesOutput) ToBuildSpecTasksImageSecurityContextCapabilitiesOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextCapabilitiesOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesOutput) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutput() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return o.ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesOutput) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextCapabilities) *BuildSpecTasksImageSecurityContextCapabilities {
		return &v
	}).(BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput)
}

// Added capabilities
func (o BuildSpecTasksImageSecurityContextCapabilitiesOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextCapabilities) []string { return v.Add }).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o BuildSpecTasksImageSecurityContextCapabilitiesOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextCapabilities) []string { return v.Drop }).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContextCapabilities)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutput() BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput) ToBuildSpecTasksImageSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput) Elem() BuildSpecTasksImageSecurityContextCapabilitiesOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextCapabilities) BuildSpecTasksImageSecurityContextCapabilities {
		return *v
	}).(BuildSpecTasksImageSecurityContextCapabilitiesOutput)
}

// Added capabilities
func (o BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildSpecTasksImageSecurityContextSeLinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// BuildSpecTasksImageSecurityContextSeLinuxOptionsInput is an input type that accepts BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs and BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextSeLinuxOptionsInput` via:
//
//          BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs{...}
type BuildSpecTasksImageSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput
	ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput {
	return i.ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput)
}

func (i BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput).ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrInput is an input type that accepts BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs, BuildSpecTasksImageSecurityContextSeLinuxOptionsPtr and BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrInput` via:
//
//          BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput
	ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput
}

type buildSpecTasksImageSecurityContextSeLinuxOptionsPtrType BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs

func BuildSpecTasksImageSecurityContextSeLinuxOptionsPtr(v *BuildSpecTasksImageSecurityContextSeLinuxOptionsArgs) BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrInput {
	return (*buildSpecTasksImageSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*buildSpecTasksImageSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *buildSpecTasksImageSecurityContextSeLinuxOptionsPtrType) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageSecurityContextSeLinuxOptionsPtrType) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextSeLinuxOptions) *BuildSpecTasksImageSecurityContextSeLinuxOptions {
		return &v
	}).(BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextSeLinuxOptions) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextSeLinuxOptions) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextSeLinuxOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextSeLinuxOptions) *string { return v.User }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput() BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) ToBuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) Elem() BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextSeLinuxOptions) BuildSpecTasksImageSecurityContextSeLinuxOptions {
		return *v
	}).(BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput)
}

// Level is SELinux level label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildSpecTasksImageSecurityContextWindowsOptions struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
	GmsaCredentialSpec *string `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUserName *string `pulumi:"runAsUserName"`
}

// BuildSpecTasksImageSecurityContextWindowsOptionsInput is an input type that accepts BuildSpecTasksImageSecurityContextWindowsOptionsArgs and BuildSpecTasksImageSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextWindowsOptionsInput` via:
//
//          BuildSpecTasksImageSecurityContextWindowsOptionsArgs{...}
type BuildSpecTasksImageSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextWindowsOptionsOutput() BuildSpecTasksImageSecurityContextWindowsOptionsOutput
	ToBuildSpecTasksImageSecurityContextWindowsOptionsOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsOutput
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildSpecTasksImageSecurityContextWindowsOptionsArgs struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
	GmsaCredentialSpec pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUserName pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (BuildSpecTasksImageSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContextWindowsOptions)(nil)).Elem()
}

func (i BuildSpecTasksImageSecurityContextWindowsOptionsArgs) ToBuildSpecTasksImageSecurityContextWindowsOptionsOutput() BuildSpecTasksImageSecurityContextWindowsOptionsOutput {
	return i.ToBuildSpecTasksImageSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextWindowsOptionsArgs) ToBuildSpecTasksImageSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextWindowsOptionsOutput)
}

func (i BuildSpecTasksImageSecurityContextWindowsOptionsArgs) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageSecurityContextWindowsOptionsArgs) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextWindowsOptionsOutput).ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageSecurityContextWindowsOptionsPtrInput is an input type that accepts BuildSpecTasksImageSecurityContextWindowsOptionsArgs, BuildSpecTasksImageSecurityContextWindowsOptionsPtr and BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageSecurityContextWindowsOptionsPtrInput` via:
//
//          BuildSpecTasksImageSecurityContextWindowsOptionsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput
	ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput
}

type buildSpecTasksImageSecurityContextWindowsOptionsPtrType BuildSpecTasksImageSecurityContextWindowsOptionsArgs

func BuildSpecTasksImageSecurityContextWindowsOptionsPtr(v *BuildSpecTasksImageSecurityContextWindowsOptionsArgs) BuildSpecTasksImageSecurityContextWindowsOptionsPtrInput {
	return (*buildSpecTasksImageSecurityContextWindowsOptionsPtrType)(v)
}

func (*buildSpecTasksImageSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *buildSpecTasksImageSecurityContextWindowsOptionsPtrType) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return i.ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageSecurityContextWindowsOptionsPtrType) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildSpecTasksImageSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageSecurityContextWindowsOptions)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) ToBuildSpecTasksImageSecurityContextWindowsOptionsOutput() BuildSpecTasksImageSecurityContextWindowsOptionsOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) ToBuildSpecTasksImageSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return o.ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextWindowsOptions) *BuildSpecTasksImageSecurityContextWindowsOptions {
		return &v
	}).(BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextWindowsOptions) *string { return v.GmsaCredentialSpec }).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use.
func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextWindowsOptions) *string { return v.GmsaCredentialSpecName }).(pulumi.StringPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageSecurityContextWindowsOptions) *string { return v.RunAsUserName }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageSecurityContextWindowsOptions)(nil)).Elem()
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput() BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) ToBuildSpecTasksImageSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) Elem() BuildSpecTasksImageSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextWindowsOptions) BuildSpecTasksImageSecurityContextWindowsOptions {
		return *v
	}).(BuildSpecTasksImageSecurityContextWindowsOptionsOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
func (o BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use.
func (o BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildSpecTasksImageVolumeMounts struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// BuildSpecTasksImageVolumeMountsInput is an input type that accepts BuildSpecTasksImageVolumeMountsArgs and BuildSpecTasksImageVolumeMountsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumeMountsInput` via:
//
//          BuildSpecTasksImageVolumeMountsArgs{...}
type BuildSpecTasksImageVolumeMountsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumeMountsOutput() BuildSpecTasksImageVolumeMountsOutput
	ToBuildSpecTasksImageVolumeMountsOutputWithContext(context.Context) BuildSpecTasksImageVolumeMountsOutput
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildSpecTasksImageVolumeMountsArgs struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (BuildSpecTasksImageVolumeMountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumeMounts)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumeMountsArgs) ToBuildSpecTasksImageVolumeMountsOutput() BuildSpecTasksImageVolumeMountsOutput {
	return i.ToBuildSpecTasksImageVolumeMountsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumeMountsArgs) ToBuildSpecTasksImageVolumeMountsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumeMountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumeMountsOutput)
}

// BuildSpecTasksImageVolumeMountsArrayInput is an input type that accepts BuildSpecTasksImageVolumeMountsArray and BuildSpecTasksImageVolumeMountsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumeMountsArrayInput` via:
//
//          BuildSpecTasksImageVolumeMountsArray{ BuildSpecTasksImageVolumeMountsArgs{...} }
type BuildSpecTasksImageVolumeMountsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumeMountsArrayOutput() BuildSpecTasksImageVolumeMountsArrayOutput
	ToBuildSpecTasksImageVolumeMountsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumeMountsArrayOutput
}

type BuildSpecTasksImageVolumeMountsArray []BuildSpecTasksImageVolumeMountsInput

func (BuildSpecTasksImageVolumeMountsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumeMounts)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumeMountsArray) ToBuildSpecTasksImageVolumeMountsArrayOutput() BuildSpecTasksImageVolumeMountsArrayOutput {
	return i.ToBuildSpecTasksImageVolumeMountsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumeMountsArray) ToBuildSpecTasksImageVolumeMountsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumeMountsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumeMountsArrayOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildSpecTasksImageVolumeMountsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumeMountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumeMounts)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumeMountsOutput) ToBuildSpecTasksImageVolumeMountsOutput() BuildSpecTasksImageVolumeMountsOutput {
	return o
}

func (o BuildSpecTasksImageVolumeMountsOutput) ToBuildSpecTasksImageVolumeMountsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumeMountsOutput {
	return o
}

// Path within the container at which the volume should be mounted.  Must not contain ':'.
func (o BuildSpecTasksImageVolumeMountsOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumeMounts) string { return v.MountPath }).(pulumi.StringOutput)
}

// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
func (o BuildSpecTasksImageVolumeMountsOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumeMounts) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o BuildSpecTasksImageVolumeMountsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumeMounts) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
func (o BuildSpecTasksImageVolumeMountsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumeMounts) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
func (o BuildSpecTasksImageVolumeMountsOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumeMounts) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
func (o BuildSpecTasksImageVolumeMountsOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumeMounts) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumeMountsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumeMountsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumeMounts)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumeMountsArrayOutput) ToBuildSpecTasksImageVolumeMountsArrayOutput() BuildSpecTasksImageVolumeMountsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumeMountsArrayOutput) ToBuildSpecTasksImageVolumeMountsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumeMountsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumeMountsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumeMountsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumeMounts {
		return vs[0].([]BuildSpecTasksImageVolumeMounts)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumeMountsOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type BuildSpecTasksImageVolumes struct {
	// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	AwsElasticBlockStore *BuildSpecTasksImageVolumesAwsElasticBlockStore `pulumi:"awsElasticBlockStore"`
	// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
	AzureDisk *BuildSpecTasksImageVolumesAzureDisk `pulumi:"azureDisk"`
	// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
	AzureFile *BuildSpecTasksImageVolumesAzureFile `pulumi:"azureFile"`
	// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
	Cephfs *BuildSpecTasksImageVolumesCephfs `pulumi:"cephfs"`
	// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	Cinder *BuildSpecTasksImageVolumesCinder `pulumi:"cinder"`
	// ConfigMap represents a configMap that should populate this volume
	ConfigMap *BuildSpecTasksImageVolumesConfigMap `pulumi:"configMap"`
	// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
	Csi *BuildSpecTasksImageVolumesCsi `pulumi:"csi"`
	// DownwardAPI represents downward API about the pod that should populate this volume
	DownwardAPI *BuildSpecTasksImageVolumesDownwardAPI `pulumi:"downwardAPI"`
	// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	EmptyDir *BuildSpecTasksImageVolumesEmptyDir `pulumi:"emptyDir"`
	// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
	Fc *BuildSpecTasksImageVolumesFc `pulumi:"fc"`
	// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
	FlexVolume *BuildSpecTasksImageVolumesFlexVolume `pulumi:"flexVolume"`
	// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
	Flocker *BuildSpecTasksImageVolumesFlocker `pulumi:"flocker"`
	// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	GcePersistentDisk *BuildSpecTasksImageVolumesGcePersistentDisk `pulumi:"gcePersistentDisk"`
	// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
	GitRepo *BuildSpecTasksImageVolumesGitRepo `pulumi:"gitRepo"`
	// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
	Glusterfs *BuildSpecTasksImageVolumesGlusterfs `pulumi:"glusterfs"`
	// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
	HostPath *BuildSpecTasksImageVolumesHostPath `pulumi:"hostPath"`
	// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
	Iscsi *BuildSpecTasksImageVolumesIscsi `pulumi:"iscsi"`
	// Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
	// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Nfs *BuildSpecTasksImageVolumesNfs `pulumi:"nfs"`
	// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	PersistentVolumeClaim *BuildSpecTasksImageVolumesPersistentVolumeClaim `pulumi:"persistentVolumeClaim"`
	// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
	PhotonPersistentDisk *BuildSpecTasksImageVolumesPhotonPersistentDisk `pulumi:"photonPersistentDisk"`
	// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
	PortworxVolume *BuildSpecTasksImageVolumesPortworxVolume `pulumi:"portworxVolume"`
	// Items for all in one resources secrets, configmaps, and downward API
	Projected *BuildSpecTasksImageVolumesProjected `pulumi:"projected"`
	// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
	Quobyte *BuildSpecTasksImageVolumesQuobyte `pulumi:"quobyte"`
	// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
	Rbd *BuildSpecTasksImageVolumesRbd `pulumi:"rbd"`
	// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
	ScaleIO *BuildSpecTasksImageVolumesScaleIO `pulumi:"scaleIO"`
	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	Secret *BuildSpecTasksImageVolumesSecret `pulumi:"secret"`
	// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
	Storageos *BuildSpecTasksImageVolumesStorageos `pulumi:"storageos"`
	// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
	VsphereVolume *BuildSpecTasksImageVolumesVsphereVolume `pulumi:"vsphereVolume"`
}

// BuildSpecTasksImageVolumesInput is an input type that accepts BuildSpecTasksImageVolumesArgs and BuildSpecTasksImageVolumesOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesInput` via:
//
//          BuildSpecTasksImageVolumesArgs{...}
type BuildSpecTasksImageVolumesInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesOutput() BuildSpecTasksImageVolumesOutput
	ToBuildSpecTasksImageVolumesOutputWithContext(context.Context) BuildSpecTasksImageVolumesOutput
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type BuildSpecTasksImageVolumesArgs struct {
	// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	AwsElasticBlockStore BuildSpecTasksImageVolumesAwsElasticBlockStorePtrInput `pulumi:"awsElasticBlockStore"`
	// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
	AzureDisk BuildSpecTasksImageVolumesAzureDiskPtrInput `pulumi:"azureDisk"`
	// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
	AzureFile BuildSpecTasksImageVolumesAzureFilePtrInput `pulumi:"azureFile"`
	// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
	Cephfs BuildSpecTasksImageVolumesCephfsPtrInput `pulumi:"cephfs"`
	// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	Cinder BuildSpecTasksImageVolumesCinderPtrInput `pulumi:"cinder"`
	// ConfigMap represents a configMap that should populate this volume
	ConfigMap BuildSpecTasksImageVolumesConfigMapPtrInput `pulumi:"configMap"`
	// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
	Csi BuildSpecTasksImageVolumesCsiPtrInput `pulumi:"csi"`
	// DownwardAPI represents downward API about the pod that should populate this volume
	DownwardAPI BuildSpecTasksImageVolumesDownwardAPIPtrInput `pulumi:"downwardAPI"`
	// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	EmptyDir BuildSpecTasksImageVolumesEmptyDirPtrInput `pulumi:"emptyDir"`
	// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
	Fc BuildSpecTasksImageVolumesFcPtrInput `pulumi:"fc"`
	// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
	FlexVolume BuildSpecTasksImageVolumesFlexVolumePtrInput `pulumi:"flexVolume"`
	// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
	Flocker BuildSpecTasksImageVolumesFlockerPtrInput `pulumi:"flocker"`
	// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	GcePersistentDisk BuildSpecTasksImageVolumesGcePersistentDiskPtrInput `pulumi:"gcePersistentDisk"`
	// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
	GitRepo BuildSpecTasksImageVolumesGitRepoPtrInput `pulumi:"gitRepo"`
	// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
	Glusterfs BuildSpecTasksImageVolumesGlusterfsPtrInput `pulumi:"glusterfs"`
	// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
	HostPath BuildSpecTasksImageVolumesHostPathPtrInput `pulumi:"hostPath"`
	// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
	Iscsi BuildSpecTasksImageVolumesIscsiPtrInput `pulumi:"iscsi"`
	// Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
	// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Nfs BuildSpecTasksImageVolumesNfsPtrInput `pulumi:"nfs"`
	// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	PersistentVolumeClaim BuildSpecTasksImageVolumesPersistentVolumeClaimPtrInput `pulumi:"persistentVolumeClaim"`
	// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
	PhotonPersistentDisk BuildSpecTasksImageVolumesPhotonPersistentDiskPtrInput `pulumi:"photonPersistentDisk"`
	// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
	PortworxVolume BuildSpecTasksImageVolumesPortworxVolumePtrInput `pulumi:"portworxVolume"`
	// Items for all in one resources secrets, configmaps, and downward API
	Projected BuildSpecTasksImageVolumesProjectedPtrInput `pulumi:"projected"`
	// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
	Quobyte BuildSpecTasksImageVolumesQuobytePtrInput `pulumi:"quobyte"`
	// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
	Rbd BuildSpecTasksImageVolumesRbdPtrInput `pulumi:"rbd"`
	// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
	ScaleIO BuildSpecTasksImageVolumesScaleIOPtrInput `pulumi:"scaleIO"`
	// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	Secret BuildSpecTasksImageVolumesSecretPtrInput `pulumi:"secret"`
	// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
	Storageos BuildSpecTasksImageVolumesStorageosPtrInput `pulumi:"storageos"`
	// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
	VsphereVolume BuildSpecTasksImageVolumesVsphereVolumePtrInput `pulumi:"vsphereVolume"`
}

func (BuildSpecTasksImageVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumes)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesArgs) ToBuildSpecTasksImageVolumesOutput() BuildSpecTasksImageVolumesOutput {
	return i.ToBuildSpecTasksImageVolumesOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesArgs) ToBuildSpecTasksImageVolumesOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesOutput)
}

// BuildSpecTasksImageVolumesArrayInput is an input type that accepts BuildSpecTasksImageVolumesArray and BuildSpecTasksImageVolumesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesArrayInput` via:
//
//          BuildSpecTasksImageVolumesArray{ BuildSpecTasksImageVolumesArgs{...} }
type BuildSpecTasksImageVolumesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesArrayOutput() BuildSpecTasksImageVolumesArrayOutput
	ToBuildSpecTasksImageVolumesArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesArrayOutput
}

type BuildSpecTasksImageVolumesArray []BuildSpecTasksImageVolumesInput

func (BuildSpecTasksImageVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumes)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesArray) ToBuildSpecTasksImageVolumesArrayOutput() BuildSpecTasksImageVolumesArrayOutput {
	return i.ToBuildSpecTasksImageVolumesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesArray) ToBuildSpecTasksImageVolumesArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesArrayOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type BuildSpecTasksImageVolumesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumes)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesOutput) ToBuildSpecTasksImageVolumesOutput() BuildSpecTasksImageVolumesOutput {
	return o
}

func (o BuildSpecTasksImageVolumesOutput) ToBuildSpecTasksImageVolumesOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesOutput {
	return o
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksImageVolumesOutput) AwsElasticBlockStore() BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesAwsElasticBlockStore {
		return v.AwsElasticBlockStore
	}).(BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput)
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
func (o BuildSpecTasksImageVolumesOutput) AzureDisk() BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesAzureDisk { return v.AzureDisk }).(BuildSpecTasksImageVolumesAzureDiskPtrOutput)
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
func (o BuildSpecTasksImageVolumesOutput) AzureFile() BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesAzureFile { return v.AzureFile }).(BuildSpecTasksImageVolumesAzureFilePtrOutput)
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
func (o BuildSpecTasksImageVolumesOutput) Cephfs() BuildSpecTasksImageVolumesCephfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesCephfs { return v.Cephfs }).(BuildSpecTasksImageVolumesCephfsPtrOutput)
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesOutput) Cinder() BuildSpecTasksImageVolumesCinderPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesCinder { return v.Cinder }).(BuildSpecTasksImageVolumesCinderPtrOutput)
}

// ConfigMap represents a configMap that should populate this volume
func (o BuildSpecTasksImageVolumesOutput) ConfigMap() BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesConfigMap { return v.ConfigMap }).(BuildSpecTasksImageVolumesConfigMapPtrOutput)
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
func (o BuildSpecTasksImageVolumesOutput) Csi() BuildSpecTasksImageVolumesCsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesCsi { return v.Csi }).(BuildSpecTasksImageVolumesCsiPtrOutput)
}

// DownwardAPI represents downward API about the pod that should populate this volume
func (o BuildSpecTasksImageVolumesOutput) DownwardAPI() BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesDownwardAPI { return v.DownwardAPI }).(BuildSpecTasksImageVolumesDownwardAPIPtrOutput)
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o BuildSpecTasksImageVolumesOutput) EmptyDir() BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesEmptyDir { return v.EmptyDir }).(BuildSpecTasksImageVolumesEmptyDirPtrOutput)
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
func (o BuildSpecTasksImageVolumesOutput) Fc() BuildSpecTasksImageVolumesFcPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesFc { return v.Fc }).(BuildSpecTasksImageVolumesFcPtrOutput)
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
func (o BuildSpecTasksImageVolumesOutput) FlexVolume() BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesFlexVolume { return v.FlexVolume }).(BuildSpecTasksImageVolumesFlexVolumePtrOutput)
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
func (o BuildSpecTasksImageVolumesOutput) Flocker() BuildSpecTasksImageVolumesFlockerPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesFlocker { return v.Flocker }).(BuildSpecTasksImageVolumesFlockerPtrOutput)
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesOutput) GcePersistentDisk() BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesGcePersistentDisk {
		return v.GcePersistentDisk
	}).(BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput)
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
func (o BuildSpecTasksImageVolumesOutput) GitRepo() BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesGitRepo { return v.GitRepo }).(BuildSpecTasksImageVolumesGitRepoPtrOutput)
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
func (o BuildSpecTasksImageVolumesOutput) Glusterfs() BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesGlusterfs { return v.Glusterfs }).(BuildSpecTasksImageVolumesGlusterfsPtrOutput)
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
func (o BuildSpecTasksImageVolumesOutput) HostPath() BuildSpecTasksImageVolumesHostPathPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesHostPath { return v.HostPath }).(BuildSpecTasksImageVolumesHostPathPtrOutput)
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
func (o BuildSpecTasksImageVolumesOutput) Iscsi() BuildSpecTasksImageVolumesIscsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesIscsi { return v.Iscsi }).(BuildSpecTasksImageVolumesIscsiPtrOutput)
}

// Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o BuildSpecTasksImageVolumesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) string { return v.Name }).(pulumi.StringOutput)
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesOutput) Nfs() BuildSpecTasksImageVolumesNfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesNfs { return v.Nfs }).(BuildSpecTasksImageVolumesNfsPtrOutput)
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o BuildSpecTasksImageVolumesOutput) PersistentVolumeClaim() BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesPersistentVolumeClaim {
		return v.PersistentVolumeClaim
	}).(BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput)
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
func (o BuildSpecTasksImageVolumesOutput) PhotonPersistentDisk() BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesPhotonPersistentDisk {
		return v.PhotonPersistentDisk
	}).(BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput)
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
func (o BuildSpecTasksImageVolumesOutput) PortworxVolume() BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesPortworxVolume { return v.PortworxVolume }).(BuildSpecTasksImageVolumesPortworxVolumePtrOutput)
}

// Items for all in one resources secrets, configmaps, and downward API
func (o BuildSpecTasksImageVolumesOutput) Projected() BuildSpecTasksImageVolumesProjectedPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesProjected { return v.Projected }).(BuildSpecTasksImageVolumesProjectedPtrOutput)
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
func (o BuildSpecTasksImageVolumesOutput) Quobyte() BuildSpecTasksImageVolumesQuobytePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesQuobyte { return v.Quobyte }).(BuildSpecTasksImageVolumesQuobytePtrOutput)
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
func (o BuildSpecTasksImageVolumesOutput) Rbd() BuildSpecTasksImageVolumesRbdPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesRbd { return v.Rbd }).(BuildSpecTasksImageVolumesRbdPtrOutput)
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
func (o BuildSpecTasksImageVolumesOutput) ScaleIO() BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesScaleIO { return v.ScaleIO }).(BuildSpecTasksImageVolumesScaleIOPtrOutput)
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o BuildSpecTasksImageVolumesOutput) Secret() BuildSpecTasksImageVolumesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesSecret { return v.Secret }).(BuildSpecTasksImageVolumesSecretPtrOutput)
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
func (o BuildSpecTasksImageVolumesOutput) Storageos() BuildSpecTasksImageVolumesStorageosPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesStorageos { return v.Storageos }).(BuildSpecTasksImageVolumesStorageosPtrOutput)
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
func (o BuildSpecTasksImageVolumesOutput) VsphereVolume() BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumes) *BuildSpecTasksImageVolumesVsphereVolume { return v.VsphereVolume }).(BuildSpecTasksImageVolumesVsphereVolumePtrOutput)
}

type BuildSpecTasksImageVolumesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumes)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesArrayOutput) ToBuildSpecTasksImageVolumesArrayOutput() BuildSpecTasksImageVolumesArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesArrayOutput) ToBuildSpecTasksImageVolumesArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumes {
		return vs[0].([]BuildSpecTasksImageVolumes)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesOutput)
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type BuildSpecTasksImageVolumesAwsElasticBlockStore struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition *int `pulumi:"partition"`
	// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly *bool `pulumi:"readOnly"`
	// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID string `pulumi:"volumeID"`
}

// BuildSpecTasksImageVolumesAwsElasticBlockStoreInput is an input type that accepts BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs and BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesAwsElasticBlockStoreInput` via:
//
//          BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs{...}
type BuildSpecTasksImageVolumesAwsElasticBlockStoreInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutput() BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput
	ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutputWithContext(context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutput() BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput {
	return i.ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput)
}

func (i BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return i.ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput).ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesAwsElasticBlockStorePtrInput is an input type that accepts BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs, BuildSpecTasksImageVolumesAwsElasticBlockStorePtr and BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesAwsElasticBlockStorePtrInput` via:
//
//          BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesAwsElasticBlockStorePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput
	ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput
}

type buildSpecTasksImageVolumesAwsElasticBlockStorePtrType BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs

func BuildSpecTasksImageVolumesAwsElasticBlockStorePtr(v *BuildSpecTasksImageVolumesAwsElasticBlockStoreArgs) BuildSpecTasksImageVolumesAwsElasticBlockStorePtrInput {
	return (*buildSpecTasksImageVolumesAwsElasticBlockStorePtrType)(v)
}

func (*buildSpecTasksImageVolumesAwsElasticBlockStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesAwsElasticBlockStorePtrType) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return i.ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesAwsElasticBlockStorePtrType) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput)
}

// AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutput() BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksImageVolumesAwsElasticBlockStoreOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return o.ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAwsElasticBlockStore) *BuildSpecTasksImageVolumesAwsElasticBlockStore {
		return &v
	}).(BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAwsElasticBlockStore) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAwsElasticBlockStore) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAwsElasticBlockStore) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAwsElasticBlockStore) string { return v.VolumeID }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput() BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) ToBuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) Elem() BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAwsElasticBlockStore) BuildSpecTasksImageVolumesAwsElasticBlockStore {
		return *v
	}).(BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAwsElasticBlockStore) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAwsElasticBlockStore) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAwsElasticBlockStore) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAwsElasticBlockStore) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type BuildSpecTasksImageVolumesAzureDisk struct {
	// Host Caching mode: None, Read Only, Read Write.
	CachingMode *string `pulumi:"cachingMode"`
	// The Name of the data disk in the blob storage
	DiskName string `pulumi:"diskName"`
	// The URI the data disk in the blob storage
	DiskURI string `pulumi:"diskURI"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
	Kind *string `pulumi:"kind"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksImageVolumesAzureDiskInput is an input type that accepts BuildSpecTasksImageVolumesAzureDiskArgs and BuildSpecTasksImageVolumesAzureDiskOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesAzureDiskInput` via:
//
//          BuildSpecTasksImageVolumesAzureDiskArgs{...}
type BuildSpecTasksImageVolumesAzureDiskInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesAzureDiskOutput() BuildSpecTasksImageVolumesAzureDiskOutput
	ToBuildSpecTasksImageVolumesAzureDiskOutputWithContext(context.Context) BuildSpecTasksImageVolumesAzureDiskOutput
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type BuildSpecTasksImageVolumesAzureDiskArgs struct {
	// Host Caching mode: None, Read Only, Read Write.
	CachingMode pulumi.StringPtrInput `pulumi:"cachingMode"`
	// The Name of the data disk in the blob storage
	DiskName pulumi.StringInput `pulumi:"diskName"`
	// The URI the data disk in the blob storage
	DiskURI pulumi.StringInput `pulumi:"diskURI"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksImageVolumesAzureDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesAzureDisk)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesAzureDiskArgs) ToBuildSpecTasksImageVolumesAzureDiskOutput() BuildSpecTasksImageVolumesAzureDiskOutput {
	return i.ToBuildSpecTasksImageVolumesAzureDiskOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesAzureDiskArgs) ToBuildSpecTasksImageVolumesAzureDiskOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAzureDiskOutput)
}

func (i BuildSpecTasksImageVolumesAzureDiskArgs) ToBuildSpecTasksImageVolumesAzureDiskPtrOutput() BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return i.ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesAzureDiskArgs) ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAzureDiskOutput).ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesAzureDiskPtrInput is an input type that accepts BuildSpecTasksImageVolumesAzureDiskArgs, BuildSpecTasksImageVolumesAzureDiskPtr and BuildSpecTasksImageVolumesAzureDiskPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesAzureDiskPtrInput` via:
//
//          BuildSpecTasksImageVolumesAzureDiskArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesAzureDiskPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesAzureDiskPtrOutput() BuildSpecTasksImageVolumesAzureDiskPtrOutput
	ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesAzureDiskPtrOutput
}

type buildSpecTasksImageVolumesAzureDiskPtrType BuildSpecTasksImageVolumesAzureDiskArgs

func BuildSpecTasksImageVolumesAzureDiskPtr(v *BuildSpecTasksImageVolumesAzureDiskArgs) BuildSpecTasksImageVolumesAzureDiskPtrInput {
	return (*buildSpecTasksImageVolumesAzureDiskPtrType)(v)
}

func (*buildSpecTasksImageVolumesAzureDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesAzureDisk)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesAzureDiskPtrType) ToBuildSpecTasksImageVolumesAzureDiskPtrOutput() BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return i.ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesAzureDiskPtrType) ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAzureDiskPtrOutput)
}

// AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type BuildSpecTasksImageVolumesAzureDiskOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesAzureDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesAzureDisk)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesAzureDiskOutput) ToBuildSpecTasksImageVolumesAzureDiskOutput() BuildSpecTasksImageVolumesAzureDiskOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureDiskOutput) ToBuildSpecTasksImageVolumesAzureDiskOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureDiskOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureDiskOutput) ToBuildSpecTasksImageVolumesAzureDiskPtrOutput() BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return o.ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesAzureDiskOutput) ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) *BuildSpecTasksImageVolumesAzureDisk {
		return &v
	}).(BuildSpecTasksImageVolumesAzureDiskPtrOutput)
}

// Host Caching mode: None, Read Only, Read Write.
func (o BuildSpecTasksImageVolumesAzureDiskOutput) CachingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) *string { return v.CachingMode }).(pulumi.StringPtrOutput)
}

// The Name of the data disk in the blob storage
func (o BuildSpecTasksImageVolumesAzureDiskOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) string { return v.DiskName }).(pulumi.StringOutput)
}

// The URI the data disk in the blob storage
func (o BuildSpecTasksImageVolumesAzureDiskOutput) DiskURI() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) string { return v.DiskURI }).(pulumi.StringOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesAzureDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
func (o BuildSpecTasksImageVolumesAzureDiskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesAzureDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesAzureDiskPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesAzureDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesAzureDisk)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) ToBuildSpecTasksImageVolumesAzureDiskPtrOutput() BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) ToBuildSpecTasksImageVolumesAzureDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureDiskPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) Elem() BuildSpecTasksImageVolumesAzureDiskOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) BuildSpecTasksImageVolumesAzureDisk { return *v }).(BuildSpecTasksImageVolumesAzureDiskOutput)
}

// Host Caching mode: None, Read Only, Read Write.
func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) CachingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.CachingMode
	}).(pulumi.StringPtrOutput)
}

// The Name of the data disk in the blob storage
func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return &v.DiskName
	}).(pulumi.StringPtrOutput)
}

// The URI the data disk in the blob storage
func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) DiskURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return &v.DiskURI
	}).(pulumi.StringPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesAzureDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type BuildSpecTasksImageVolumesAzureFile struct {
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// the name of secret that contains Azure Storage Account Name and Key
	SecretName string `pulumi:"secretName"`
	// Share Name
	ShareName string `pulumi:"shareName"`
}

// BuildSpecTasksImageVolumesAzureFileInput is an input type that accepts BuildSpecTasksImageVolumesAzureFileArgs and BuildSpecTasksImageVolumesAzureFileOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesAzureFileInput` via:
//
//          BuildSpecTasksImageVolumesAzureFileArgs{...}
type BuildSpecTasksImageVolumesAzureFileInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesAzureFileOutput() BuildSpecTasksImageVolumesAzureFileOutput
	ToBuildSpecTasksImageVolumesAzureFileOutputWithContext(context.Context) BuildSpecTasksImageVolumesAzureFileOutput
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type BuildSpecTasksImageVolumesAzureFileArgs struct {
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// the name of secret that contains Azure Storage Account Name and Key
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Share Name
	ShareName pulumi.StringInput `pulumi:"shareName"`
}

func (BuildSpecTasksImageVolumesAzureFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesAzureFile)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesAzureFileArgs) ToBuildSpecTasksImageVolumesAzureFileOutput() BuildSpecTasksImageVolumesAzureFileOutput {
	return i.ToBuildSpecTasksImageVolumesAzureFileOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesAzureFileArgs) ToBuildSpecTasksImageVolumesAzureFileOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAzureFileOutput)
}

func (i BuildSpecTasksImageVolumesAzureFileArgs) ToBuildSpecTasksImageVolumesAzureFilePtrOutput() BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return i.ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesAzureFileArgs) ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAzureFileOutput).ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesAzureFilePtrInput is an input type that accepts BuildSpecTasksImageVolumesAzureFileArgs, BuildSpecTasksImageVolumesAzureFilePtr and BuildSpecTasksImageVolumesAzureFilePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesAzureFilePtrInput` via:
//
//          BuildSpecTasksImageVolumesAzureFileArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesAzureFilePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesAzureFilePtrOutput() BuildSpecTasksImageVolumesAzureFilePtrOutput
	ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesAzureFilePtrOutput
}

type buildSpecTasksImageVolumesAzureFilePtrType BuildSpecTasksImageVolumesAzureFileArgs

func BuildSpecTasksImageVolumesAzureFilePtr(v *BuildSpecTasksImageVolumesAzureFileArgs) BuildSpecTasksImageVolumesAzureFilePtrInput {
	return (*buildSpecTasksImageVolumesAzureFilePtrType)(v)
}

func (*buildSpecTasksImageVolumesAzureFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesAzureFile)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesAzureFilePtrType) ToBuildSpecTasksImageVolumesAzureFilePtrOutput() BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return i.ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesAzureFilePtrType) ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesAzureFilePtrOutput)
}

// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type BuildSpecTasksImageVolumesAzureFileOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesAzureFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesAzureFile)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesAzureFileOutput) ToBuildSpecTasksImageVolumesAzureFileOutput() BuildSpecTasksImageVolumesAzureFileOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureFileOutput) ToBuildSpecTasksImageVolumesAzureFileOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureFileOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureFileOutput) ToBuildSpecTasksImageVolumesAzureFilePtrOutput() BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return o.ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesAzureFileOutput) ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureFile) *BuildSpecTasksImageVolumesAzureFile {
		return &v
	}).(BuildSpecTasksImageVolumesAzureFilePtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesAzureFileOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureFile) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// the name of secret that contains Azure Storage Account Name and Key
func (o BuildSpecTasksImageVolumesAzureFileOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureFile) string { return v.SecretName }).(pulumi.StringOutput)
}

// Share Name
func (o BuildSpecTasksImageVolumesAzureFileOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesAzureFile) string { return v.ShareName }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesAzureFilePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesAzureFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesAzureFile)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesAzureFilePtrOutput) ToBuildSpecTasksImageVolumesAzureFilePtrOutput() BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureFilePtrOutput) ToBuildSpecTasksImageVolumesAzureFilePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesAzureFilePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesAzureFilePtrOutput) Elem() BuildSpecTasksImageVolumesAzureFileOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureFile) BuildSpecTasksImageVolumesAzureFile { return *v }).(BuildSpecTasksImageVolumesAzureFileOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesAzureFilePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureFile) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// the name of secret that contains Azure Storage Account Name and Key
func (o BuildSpecTasksImageVolumesAzureFilePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureFile) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Share Name
func (o BuildSpecTasksImageVolumesAzureFilePtrOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesAzureFile) *string {
		if v == nil {
			return nil
		}
		return &v.ShareName
	}).(pulumi.StringPtrOutput)
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type BuildSpecTasksImageVolumesCephfs struct {
	// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path *string `pulumi:"path"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile *string `pulumi:"secretFile"`
	// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef *BuildSpecTasksImageVolumesCephfsSecretRef `pulumi:"secretRef"`
	// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// BuildSpecTasksImageVolumesCephfsInput is an input type that accepts BuildSpecTasksImageVolumesCephfsArgs and BuildSpecTasksImageVolumesCephfsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCephfsInput` via:
//
//          BuildSpecTasksImageVolumesCephfsArgs{...}
type BuildSpecTasksImageVolumesCephfsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCephfsOutput() BuildSpecTasksImageVolumesCephfsOutput
	ToBuildSpecTasksImageVolumesCephfsOutputWithContext(context.Context) BuildSpecTasksImageVolumesCephfsOutput
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type BuildSpecTasksImageVolumesCephfsArgs struct {
	// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile pulumi.StringPtrInput `pulumi:"secretFile"`
	// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef BuildSpecTasksImageVolumesCephfsSecretRefPtrInput `pulumi:"secretRef"`
	// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (BuildSpecTasksImageVolumesCephfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCephfs)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCephfsArgs) ToBuildSpecTasksImageVolumesCephfsOutput() BuildSpecTasksImageVolumesCephfsOutput {
	return i.ToBuildSpecTasksImageVolumesCephfsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCephfsArgs) ToBuildSpecTasksImageVolumesCephfsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCephfsOutput)
}

func (i BuildSpecTasksImageVolumesCephfsArgs) ToBuildSpecTasksImageVolumesCephfsPtrOutput() BuildSpecTasksImageVolumesCephfsPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCephfsArgs) ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCephfsOutput).ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesCephfsPtrInput is an input type that accepts BuildSpecTasksImageVolumesCephfsArgs, BuildSpecTasksImageVolumesCephfsPtr and BuildSpecTasksImageVolumesCephfsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCephfsPtrInput` via:
//
//          BuildSpecTasksImageVolumesCephfsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesCephfsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCephfsPtrOutput() BuildSpecTasksImageVolumesCephfsPtrOutput
	ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesCephfsPtrOutput
}

type buildSpecTasksImageVolumesCephfsPtrType BuildSpecTasksImageVolumesCephfsArgs

func BuildSpecTasksImageVolumesCephfsPtr(v *BuildSpecTasksImageVolumesCephfsArgs) BuildSpecTasksImageVolumesCephfsPtrInput {
	return (*buildSpecTasksImageVolumesCephfsPtrType)(v)
}

func (*buildSpecTasksImageVolumesCephfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCephfs)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesCephfsPtrType) ToBuildSpecTasksImageVolumesCephfsPtrOutput() BuildSpecTasksImageVolumesCephfsPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesCephfsPtrType) ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCephfsPtrOutput)
}

// CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type BuildSpecTasksImageVolumesCephfsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCephfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCephfs)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCephfsOutput) ToBuildSpecTasksImageVolumesCephfsOutput() BuildSpecTasksImageVolumesCephfsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsOutput) ToBuildSpecTasksImageVolumesCephfsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsOutput) ToBuildSpecTasksImageVolumesCephfsPtrOutput() BuildSpecTasksImageVolumesCephfsPtrOutput {
	return o.ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesCephfsOutput) ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) *BuildSpecTasksImageVolumesCephfs {
		return &v
	}).(BuildSpecTasksImageVolumesCephfsPtrOutput)
}

// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
func (o BuildSpecTasksImageVolumesCephfsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsOutput) SecretFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) *string { return v.SecretFile }).(pulumi.StringPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsOutput) SecretRef() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) *BuildSpecTasksImageVolumesCephfsSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput)
}

// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfs) *string { return v.User }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesCephfsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCephfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCephfs)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCephfsPtrOutput) ToBuildSpecTasksImageVolumesCephfsPtrOutput() BuildSpecTasksImageVolumesCephfsPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsPtrOutput) ToBuildSpecTasksImageVolumesCephfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsPtrOutput) Elem() BuildSpecTasksImageVolumesCephfsOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) BuildSpecTasksImageVolumesCephfs { return *v }).(BuildSpecTasksImageVolumesCephfsOutput)
}

// Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// Optional: Used as the mounted root, rather than the full Ceph tree, default is /
func (o BuildSpecTasksImageVolumesCephfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsPtrOutput) SecretFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.SecretFile
	}).(pulumi.StringPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsPtrOutput) SecretRef() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) *BuildSpecTasksImageVolumesCephfsSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput)
}

// Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesCephfsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type BuildSpecTasksImageVolumesCephfsSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesCephfsSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesCephfsSecretRefArgs and BuildSpecTasksImageVolumesCephfsSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCephfsSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesCephfsSecretRefArgs{...}
type BuildSpecTasksImageVolumesCephfsSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCephfsSecretRefOutput() BuildSpecTasksImageVolumesCephfsSecretRefOutput
	ToBuildSpecTasksImageVolumesCephfsSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesCephfsSecretRefOutput
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type BuildSpecTasksImageVolumesCephfsSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesCephfsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCephfsSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCephfsSecretRefArgs) ToBuildSpecTasksImageVolumesCephfsSecretRefOutput() BuildSpecTasksImageVolumesCephfsSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesCephfsSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCephfsSecretRefArgs) ToBuildSpecTasksImageVolumesCephfsSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCephfsSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesCephfsSecretRefArgs) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutput() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCephfsSecretRefArgs) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCephfsSecretRefOutput).ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesCephfsSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesCephfsSecretRefArgs, BuildSpecTasksImageVolumesCephfsSecretRefPtr and BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCephfsSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesCephfsSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesCephfsSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutput() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput
}

type buildSpecTasksImageVolumesCephfsSecretRefPtrType BuildSpecTasksImageVolumesCephfsSecretRefArgs

func BuildSpecTasksImageVolumesCephfsSecretRefPtr(v *BuildSpecTasksImageVolumesCephfsSecretRefArgs) BuildSpecTasksImageVolumesCephfsSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesCephfsSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesCephfsSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCephfsSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesCephfsSecretRefPtrType) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutput() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesCephfsSecretRefPtrType) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput)
}

// Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type BuildSpecTasksImageVolumesCephfsSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCephfsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCephfsSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefOutput) ToBuildSpecTasksImageVolumesCephfsSecretRefOutput() BuildSpecTasksImageVolumesCephfsSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefOutput) ToBuildSpecTasksImageVolumesCephfsSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefOutput) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutput() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefOutput) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfsSecretRef) *BuildSpecTasksImageVolumesCephfsSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesCephfsSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCephfsSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCephfsSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutput() BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput) ToBuildSpecTasksImageVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesCephfsSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfsSecretRef) BuildSpecTasksImageVolumesCephfsSecretRef {
		return *v
	}).(BuildSpecTasksImageVolumesCephfsSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCephfsSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type BuildSpecTasksImageVolumesCinder struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	FsType *string `pulumi:"fsType"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: points to a secret object containing parameters used to connect to OpenStack.
	SecretRef *BuildSpecTasksImageVolumesCinderSecretRef `pulumi:"secretRef"`
	// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	VolumeID string `pulumi:"volumeID"`
}

// BuildSpecTasksImageVolumesCinderInput is an input type that accepts BuildSpecTasksImageVolumesCinderArgs and BuildSpecTasksImageVolumesCinderOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCinderInput` via:
//
//          BuildSpecTasksImageVolumesCinderArgs{...}
type BuildSpecTasksImageVolumesCinderInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCinderOutput() BuildSpecTasksImageVolumesCinderOutput
	ToBuildSpecTasksImageVolumesCinderOutputWithContext(context.Context) BuildSpecTasksImageVolumesCinderOutput
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type BuildSpecTasksImageVolumesCinderArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: points to a secret object containing parameters used to connect to OpenStack.
	SecretRef BuildSpecTasksImageVolumesCinderSecretRefPtrInput `pulumi:"secretRef"`
	// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (BuildSpecTasksImageVolumesCinderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCinder)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCinderArgs) ToBuildSpecTasksImageVolumesCinderOutput() BuildSpecTasksImageVolumesCinderOutput {
	return i.ToBuildSpecTasksImageVolumesCinderOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCinderArgs) ToBuildSpecTasksImageVolumesCinderOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCinderOutput)
}

func (i BuildSpecTasksImageVolumesCinderArgs) ToBuildSpecTasksImageVolumesCinderPtrOutput() BuildSpecTasksImageVolumesCinderPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCinderArgs) ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCinderOutput).ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesCinderPtrInput is an input type that accepts BuildSpecTasksImageVolumesCinderArgs, BuildSpecTasksImageVolumesCinderPtr and BuildSpecTasksImageVolumesCinderPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCinderPtrInput` via:
//
//          BuildSpecTasksImageVolumesCinderArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesCinderPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCinderPtrOutput() BuildSpecTasksImageVolumesCinderPtrOutput
	ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesCinderPtrOutput
}

type buildSpecTasksImageVolumesCinderPtrType BuildSpecTasksImageVolumesCinderArgs

func BuildSpecTasksImageVolumesCinderPtr(v *BuildSpecTasksImageVolumesCinderArgs) BuildSpecTasksImageVolumesCinderPtrInput {
	return (*buildSpecTasksImageVolumesCinderPtrType)(v)
}

func (*buildSpecTasksImageVolumesCinderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCinder)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesCinderPtrType) ToBuildSpecTasksImageVolumesCinderPtrOutput() BuildSpecTasksImageVolumesCinderPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesCinderPtrType) ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCinderPtrOutput)
}

// Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type BuildSpecTasksImageVolumesCinderOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCinderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCinder)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCinderOutput) ToBuildSpecTasksImageVolumesCinderOutput() BuildSpecTasksImageVolumesCinderOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderOutput) ToBuildSpecTasksImageVolumesCinderOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderOutput) ToBuildSpecTasksImageVolumesCinderPtrOutput() BuildSpecTasksImageVolumesCinderPtrOutput {
	return o.ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesCinderOutput) ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinder) *BuildSpecTasksImageVolumesCinder {
		return &v
	}).(BuildSpecTasksImageVolumesCinderPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesCinderOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinder) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesCinderOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinder) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
func (o BuildSpecTasksImageVolumesCinderOutput) SecretRef() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinder) *BuildSpecTasksImageVolumesCinderSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesCinderSecretRefPtrOutput)
}

// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesCinderOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinder) string { return v.VolumeID }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesCinderPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCinderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCinder)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCinderPtrOutput) ToBuildSpecTasksImageVolumesCinderPtrOutput() BuildSpecTasksImageVolumesCinderPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderPtrOutput) ToBuildSpecTasksImageVolumesCinderPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderPtrOutput) Elem() BuildSpecTasksImageVolumesCinderOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinder) BuildSpecTasksImageVolumesCinder { return *v }).(BuildSpecTasksImageVolumesCinderOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesCinderPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinder) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesCinderPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinder) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
func (o BuildSpecTasksImageVolumesCinderPtrOutput) SecretRef() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinder) *BuildSpecTasksImageVolumesCinderSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesCinderSecretRefPtrOutput)
}

// volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o BuildSpecTasksImageVolumesCinderPtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinder) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
type BuildSpecTasksImageVolumesCinderSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesCinderSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesCinderSecretRefArgs and BuildSpecTasksImageVolumesCinderSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCinderSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesCinderSecretRefArgs{...}
type BuildSpecTasksImageVolumesCinderSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCinderSecretRefOutput() BuildSpecTasksImageVolumesCinderSecretRefOutput
	ToBuildSpecTasksImageVolumesCinderSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesCinderSecretRefOutput
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
type BuildSpecTasksImageVolumesCinderSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesCinderSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCinderSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCinderSecretRefArgs) ToBuildSpecTasksImageVolumesCinderSecretRefOutput() BuildSpecTasksImageVolumesCinderSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesCinderSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCinderSecretRefArgs) ToBuildSpecTasksImageVolumesCinderSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCinderSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesCinderSecretRefArgs) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutput() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCinderSecretRefArgs) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCinderSecretRefOutput).ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesCinderSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesCinderSecretRefArgs, BuildSpecTasksImageVolumesCinderSecretRefPtr and BuildSpecTasksImageVolumesCinderSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCinderSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesCinderSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesCinderSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutput() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesCinderSecretRefPtrOutput
}

type buildSpecTasksImageVolumesCinderSecretRefPtrType BuildSpecTasksImageVolumesCinderSecretRefArgs

func BuildSpecTasksImageVolumesCinderSecretRefPtr(v *BuildSpecTasksImageVolumesCinderSecretRefArgs) BuildSpecTasksImageVolumesCinderSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesCinderSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesCinderSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCinderSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesCinderSecretRefPtrType) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutput() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesCinderSecretRefPtrType) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCinderSecretRefPtrOutput)
}

// Optional: points to a secret object containing parameters used to connect to OpenStack.
type BuildSpecTasksImageVolumesCinderSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCinderSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCinderSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCinderSecretRefOutput) ToBuildSpecTasksImageVolumesCinderSecretRefOutput() BuildSpecTasksImageVolumesCinderSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderSecretRefOutput) ToBuildSpecTasksImageVolumesCinderSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderSecretRefOutput) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutput() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesCinderSecretRefOutput) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinderSecretRef) *BuildSpecTasksImageVolumesCinderSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesCinderSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesCinderSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCinderSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesCinderSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCinderSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCinderSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCinderSecretRefPtrOutput) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutput() BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderSecretRefPtrOutput) ToBuildSpecTasksImageVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCinderSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCinderSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesCinderSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinderSecretRef) BuildSpecTasksImageVolumesCinderSecretRef {
		return *v
	}).(BuildSpecTasksImageVolumesCinderSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesCinderSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCinderSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ConfigMap represents a configMap that should populate this volume
type BuildSpecTasksImageVolumesConfigMap struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksImageVolumesConfigMapItems `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksImageVolumesConfigMapInput is an input type that accepts BuildSpecTasksImageVolumesConfigMap and BuildSpecTasksImageVolumesConfigMapOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesConfigMapInput` via:
//
//          BuildSpecTasksImageVolumesConfigMap{ "key": BuildSpecTasksImageVolumesConfigArgs{...} }
type BuildSpecTasksImageVolumesConfigMapInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesConfigMapOutput() BuildSpecTasksImageVolumesConfigMapOutput
	ToBuildSpecTasksImageVolumesConfigMapOutputWithContext(context.Context) BuildSpecTasksImageVolumesConfigMapOutput
}

// ConfigMap represents a configMap that should populate this volume
type BuildSpecTasksImageVolumesConfigMapArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksImageVolumesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksImageVolumesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesConfigMap)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesConfigMapArgs) ToBuildSpecTasksImageVolumesConfigMapOutput() BuildSpecTasksImageVolumesConfigMapOutput {
	return i.ToBuildSpecTasksImageVolumesConfigMapOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesConfigMapArgs) ToBuildSpecTasksImageVolumesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesConfigMapOutput)
}

func (i BuildSpecTasksImageVolumesConfigMapArgs) ToBuildSpecTasksImageVolumesConfigMapPtrOutput() BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return i.ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesConfigMapArgs) ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesConfigMapOutput).ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesConfigMapPtrInput is an input type that accepts BuildSpecTasksImageVolumesConfigMapArgs, BuildSpecTasksImageVolumesConfigMapPtr and BuildSpecTasksImageVolumesConfigMapPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesConfigMapPtrInput` via:
//
//          BuildSpecTasksImageVolumesConfigMapArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesConfigMapPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesConfigMapPtrOutput() BuildSpecTasksImageVolumesConfigMapPtrOutput
	ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesConfigMapPtrOutput
}

type buildSpecTasksImageVolumesConfigMapPtrType BuildSpecTasksImageVolumesConfigMapArgs

func BuildSpecTasksImageVolumesConfigMapPtr(v *BuildSpecTasksImageVolumesConfigMapArgs) BuildSpecTasksImageVolumesConfigMapPtrInput {
	return (*buildSpecTasksImageVolumesConfigMapPtrType)(v)
}

func (*buildSpecTasksImageVolumesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesConfigMap)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesConfigMapPtrType) ToBuildSpecTasksImageVolumesConfigMapPtrOutput() BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return i.ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesConfigMapPtrType) ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesConfigMapPtrOutput)
}

// ConfigMap represents a configMap that should populate this volume
type BuildSpecTasksImageVolumesConfigMapOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesConfigMapOutput) ToBuildSpecTasksImageVolumesConfigMapOutput() BuildSpecTasksImageVolumesConfigMapOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapOutput) ToBuildSpecTasksImageVolumesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapOutput) ToBuildSpecTasksImageVolumesConfigMapPtrOutput() BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return o.ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesConfigMapOutput) ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMap) *BuildSpecTasksImageVolumesConfigMap {
		return &v
	}).(BuildSpecTasksImageVolumesConfigMapPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesConfigMapOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMap) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesConfigMapOutput) Items() BuildSpecTasksImageVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMap) []BuildSpecTasksImageVolumesConfigMapItems { return v.Items }).(BuildSpecTasksImageVolumesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksImageVolumesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) ToBuildSpecTasksImageVolumesConfigMapPtrOutput() BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) ToBuildSpecTasksImageVolumesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) Elem() BuildSpecTasksImageVolumesConfigMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesConfigMap) BuildSpecTasksImageVolumesConfigMap { return *v }).(BuildSpecTasksImageVolumesConfigMapOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesConfigMap) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) Items() BuildSpecTasksImageVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesConfigMap) []BuildSpecTasksImageVolumesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksImageVolumesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksImageVolumesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesConfigMapItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksImageVolumesConfigMapItemsInput is an input type that accepts BuildSpecTasksImageVolumesConfigMapItemsArgs and BuildSpecTasksImageVolumesConfigMapItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesConfigMapItemsInput` via:
//
//          BuildSpecTasksImageVolumesConfigMapItemsArgs{...}
type BuildSpecTasksImageVolumesConfigMapItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesConfigMapItemsOutput() BuildSpecTasksImageVolumesConfigMapItemsOutput
	ToBuildSpecTasksImageVolumesConfigMapItemsOutputWithContext(context.Context) BuildSpecTasksImageVolumesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesConfigMapItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksImageVolumesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesConfigMapItemsArgs) ToBuildSpecTasksImageVolumesConfigMapItemsOutput() BuildSpecTasksImageVolumesConfigMapItemsOutput {
	return i.ToBuildSpecTasksImageVolumesConfigMapItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesConfigMapItemsArgs) ToBuildSpecTasksImageVolumesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesConfigMapItemsOutput)
}

// BuildSpecTasksImageVolumesConfigMapItemsArrayInput is an input type that accepts BuildSpecTasksImageVolumesConfigMapItemsArray and BuildSpecTasksImageVolumesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesConfigMapItemsArrayInput` via:
//
//          BuildSpecTasksImageVolumesConfigMapItemsArray{ BuildSpecTasksImageVolumesConfigMapItemsArgs{...} }
type BuildSpecTasksImageVolumesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutput() BuildSpecTasksImageVolumesConfigMapItemsArrayOutput
	ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesConfigMapItemsArrayOutput
}

type BuildSpecTasksImageVolumesConfigMapItemsArray []BuildSpecTasksImageVolumesConfigMapItemsInput

func (BuildSpecTasksImageVolumesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesConfigMapItemsArray) ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutput() BuildSpecTasksImageVolumesConfigMapItemsArrayOutput {
	return i.ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesConfigMapItemsArray) ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesConfigMapItemsOutput) ToBuildSpecTasksImageVolumesConfigMapItemsOutput() BuildSpecTasksImageVolumesConfigMapItemsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapItemsOutput) ToBuildSpecTasksImageVolumesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksImageVolumesConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksImageVolumesConfigMapItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesConfigMapItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesConfigMapItemsArrayOutput) ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutput() BuildSpecTasksImageVolumesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapItemsArrayOutput) ToBuildSpecTasksImageVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesConfigMapItems {
		return vs[0].([]BuildSpecTasksImageVolumesConfigMapItems)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesConfigMapItemsOutput)
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
type BuildSpecTasksImageVolumesCsi struct {
	// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
	Driver string `pulumi:"driver"`
	// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
	FsType *string `pulumi:"fsType"`
	// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
	NodePublishSecretRef *BuildSpecTasksImageVolumesCsiNodePublishSecretRef `pulumi:"nodePublishSecretRef"`
	// Specifies a read-only configuration for the volume. Defaults to false (read/write).
	ReadOnly *bool `pulumi:"readOnly"`
	// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
	VolumeAttributes map[string]string `pulumi:"volumeAttributes"`
}

// BuildSpecTasksImageVolumesCsiInput is an input type that accepts BuildSpecTasksImageVolumesCsiArgs and BuildSpecTasksImageVolumesCsiOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCsiInput` via:
//
//          BuildSpecTasksImageVolumesCsiArgs{...}
type BuildSpecTasksImageVolumesCsiInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCsiOutput() BuildSpecTasksImageVolumesCsiOutput
	ToBuildSpecTasksImageVolumesCsiOutputWithContext(context.Context) BuildSpecTasksImageVolumesCsiOutput
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
type BuildSpecTasksImageVolumesCsiArgs struct {
	// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
	Driver pulumi.StringInput `pulumi:"driver"`
	// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
	NodePublishSecretRef BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrInput `pulumi:"nodePublishSecretRef"`
	// Specifies a read-only configuration for the volume. Defaults to false (read/write).
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
	VolumeAttributes pulumi.StringMapInput `pulumi:"volumeAttributes"`
}

func (BuildSpecTasksImageVolumesCsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCsi)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCsiArgs) ToBuildSpecTasksImageVolumesCsiOutput() BuildSpecTasksImageVolumesCsiOutput {
	return i.ToBuildSpecTasksImageVolumesCsiOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCsiArgs) ToBuildSpecTasksImageVolumesCsiOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiOutput)
}

func (i BuildSpecTasksImageVolumesCsiArgs) ToBuildSpecTasksImageVolumesCsiPtrOutput() BuildSpecTasksImageVolumesCsiPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCsiArgs) ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiOutput).ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesCsiPtrInput is an input type that accepts BuildSpecTasksImageVolumesCsiArgs, BuildSpecTasksImageVolumesCsiPtr and BuildSpecTasksImageVolumesCsiPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCsiPtrInput` via:
//
//          BuildSpecTasksImageVolumesCsiArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesCsiPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCsiPtrOutput() BuildSpecTasksImageVolumesCsiPtrOutput
	ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesCsiPtrOutput
}

type buildSpecTasksImageVolumesCsiPtrType BuildSpecTasksImageVolumesCsiArgs

func BuildSpecTasksImageVolumesCsiPtr(v *BuildSpecTasksImageVolumesCsiArgs) BuildSpecTasksImageVolumesCsiPtrInput {
	return (*buildSpecTasksImageVolumesCsiPtrType)(v)
}

func (*buildSpecTasksImageVolumesCsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCsi)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesCsiPtrType) ToBuildSpecTasksImageVolumesCsiPtrOutput() BuildSpecTasksImageVolumesCsiPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesCsiPtrType) ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiPtrOutput)
}

// CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).
type BuildSpecTasksImageVolumesCsiOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCsi)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCsiOutput) ToBuildSpecTasksImageVolumesCsiOutput() BuildSpecTasksImageVolumesCsiOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiOutput) ToBuildSpecTasksImageVolumesCsiOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiOutput) ToBuildSpecTasksImageVolumesCsiPtrOutput() BuildSpecTasksImageVolumesCsiPtrOutput {
	return o.ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesCsiOutput) ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsi) *BuildSpecTasksImageVolumesCsi {
		return &v
	}).(BuildSpecTasksImageVolumesCsiPtrOutput)
}

// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
func (o BuildSpecTasksImageVolumesCsiOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsi) string { return v.Driver }).(pulumi.StringOutput)
}

// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
func (o BuildSpecTasksImageVolumesCsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
func (o BuildSpecTasksImageVolumesCsiOutput) NodePublishSecretRef() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsi) *BuildSpecTasksImageVolumesCsiNodePublishSecretRef {
		return v.NodePublishSecretRef
	}).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput)
}

// Specifies a read-only configuration for the volume. Defaults to false (read/write).
func (o BuildSpecTasksImageVolumesCsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
func (o BuildSpecTasksImageVolumesCsiOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsi) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type BuildSpecTasksImageVolumesCsiPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCsi)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCsiPtrOutput) ToBuildSpecTasksImageVolumesCsiPtrOutput() BuildSpecTasksImageVolumesCsiPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiPtrOutput) ToBuildSpecTasksImageVolumesCsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiPtrOutput) Elem() BuildSpecTasksImageVolumesCsiOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsi) BuildSpecTasksImageVolumesCsi { return *v }).(BuildSpecTasksImageVolumesCsiOutput)
}

// Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
func (o BuildSpecTasksImageVolumesCsiPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

// Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
func (o BuildSpecTasksImageVolumesCsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
func (o BuildSpecTasksImageVolumesCsiPtrOutput) NodePublishSecretRef() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsi) *BuildSpecTasksImageVolumesCsiNodePublishSecretRef {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput)
}

// Specifies a read-only configuration for the volume. Defaults to false (read/write).
func (o BuildSpecTasksImageVolumesCsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
func (o BuildSpecTasksImageVolumesCsiPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsi) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
type BuildSpecTasksImageVolumesCsiNodePublishSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesCsiNodePublishSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs and BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCsiNodePublishSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs{...}
type BuildSpecTasksImageVolumesCsiNodePublishSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput
	ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
type BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput).ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs, BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtr and BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput
}

type buildSpecTasksImageVolumesCsiNodePublishSecretRefPtrType BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs

func BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtr(v *BuildSpecTasksImageVolumesCsiNodePublishSecretRefArgs) BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesCsiNodePublishSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesCsiNodePublishSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesCsiNodePublishSecretRefPtrType) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesCsiNodePublishSecretRefPtrType) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput)
}

// NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
type BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsiNodePublishSecretRef) *BuildSpecTasksImageVolumesCsiNodePublishSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesCsiNodePublishSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput() BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput) ToBuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsiNodePublishSecretRef) BuildSpecTasksImageVolumesCsiNodePublishSecretRef {
		return *v
	}).(BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesCsiNodePublishSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
type BuildSpecTasksImageVolumesCsiVolumeAttributes struct {
}

// BuildSpecTasksImageVolumesCsiVolumeAttributesInput is an input type that accepts BuildSpecTasksImageVolumesCsiVolumeAttributesArgs and BuildSpecTasksImageVolumesCsiVolumeAttributesOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesCsiVolumeAttributesInput` via:
//
//          BuildSpecTasksImageVolumesCsiVolumeAttributesArgs{...}
type BuildSpecTasksImageVolumesCsiVolumeAttributesInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutput() BuildSpecTasksImageVolumesCsiVolumeAttributesOutput
	ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutputWithContext(context.Context) BuildSpecTasksImageVolumesCsiVolumeAttributesOutput
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
type BuildSpecTasksImageVolumesCsiVolumeAttributesArgs struct {
}

func (BuildSpecTasksImageVolumesCsiVolumeAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCsiVolumeAttributes)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesCsiVolumeAttributesArgs) ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutput() BuildSpecTasksImageVolumesCsiVolumeAttributesOutput {
	return i.ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesCsiVolumeAttributesArgs) ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiVolumeAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesCsiVolumeAttributesOutput)
}

// VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
type BuildSpecTasksImageVolumesCsiVolumeAttributesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesCsiVolumeAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesCsiVolumeAttributes)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesCsiVolumeAttributesOutput) ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutput() BuildSpecTasksImageVolumesCsiVolumeAttributesOutput {
	return o
}

func (o BuildSpecTasksImageVolumesCsiVolumeAttributesOutput) ToBuildSpecTasksImageVolumesCsiVolumeAttributesOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesCsiVolumeAttributesOutput {
	return o
}

// DownwardAPI represents downward API about the pod that should populate this volume
type BuildSpecTasksImageVolumesDownwardAPI struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items []BuildSpecTasksImageVolumesDownwardAPIItems `pulumi:"items"`
}

// BuildSpecTasksImageVolumesDownwardAPIInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIArgs and BuildSpecTasksImageVolumesDownwardAPIOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIArgs{...}
type BuildSpecTasksImageVolumesDownwardAPIInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIOutput() BuildSpecTasksImageVolumesDownwardAPIOutput
	ToBuildSpecTasksImageVolumesDownwardAPIOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIOutput
}

// DownwardAPI represents downward API about the pod that should populate this volume
type BuildSpecTasksImageVolumesDownwardAPIArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items BuildSpecTasksImageVolumesDownwardAPIItemsArrayInput `pulumi:"items"`
}

func (BuildSpecTasksImageVolumesDownwardAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPI)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesDownwardAPIArgs) ToBuildSpecTasksImageVolumesDownwardAPIOutput() BuildSpecTasksImageVolumesDownwardAPIOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIArgs) ToBuildSpecTasksImageVolumesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIOutput)
}

func (i BuildSpecTasksImageVolumesDownwardAPIArgs) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIArgs) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIOutput).ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesDownwardAPIPtrInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIArgs, BuildSpecTasksImageVolumesDownwardAPIPtr and BuildSpecTasksImageVolumesDownwardAPIPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIPtrInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesDownwardAPIPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesDownwardAPIPtrOutput
	ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIPtrOutput
}

type buildSpecTasksImageVolumesDownwardAPIPtrType BuildSpecTasksImageVolumesDownwardAPIArgs

func BuildSpecTasksImageVolumesDownwardAPIPtr(v *BuildSpecTasksImageVolumesDownwardAPIArgs) BuildSpecTasksImageVolumesDownwardAPIPtrInput {
	return (*buildSpecTasksImageVolumesDownwardAPIPtrType)(v)
}

func (*buildSpecTasksImageVolumesDownwardAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPI)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesDownwardAPIPtrType) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesDownwardAPIPtrType) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIPtrOutput)
}

// DownwardAPI represents downward API about the pod that should populate this volume
type BuildSpecTasksImageVolumesDownwardAPIOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIOutput) ToBuildSpecTasksImageVolumesDownwardAPIOutput() BuildSpecTasksImageVolumesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIOutput) ToBuildSpecTasksImageVolumesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIOutput) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return o.ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesDownwardAPIOutput) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPI) *BuildSpecTasksImageVolumesDownwardAPI {
		return &v
	}).(BuildSpecTasksImageVolumesDownwardAPIPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesDownwardAPIOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPI) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o BuildSpecTasksImageVolumesDownwardAPIOutput) Items() BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPI) []BuildSpecTasksImageVolumesDownwardAPIItems {
		return v.Items
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIPtrOutput) Elem() BuildSpecTasksImageVolumesDownwardAPIOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPI) BuildSpecTasksImageVolumesDownwardAPI { return *v }).(BuildSpecTasksImageVolumesDownwardAPIOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesDownwardAPIPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPI) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o BuildSpecTasksImageVolumesDownwardAPIPtrOutput) Items() BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPI) []BuildSpecTasksImageVolumesDownwardAPIItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksImageVolumesDownwardAPIItems struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path string `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// BuildSpecTasksImageVolumesDownwardAPIItemsInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsArgs and BuildSpecTasksImageVolumesDownwardAPIItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsArgs{...}
type BuildSpecTasksImageVolumesDownwardAPIItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsOutput() BuildSpecTasksImageVolumesDownwardAPIItemsOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksImageVolumesDownwardAPIItemsArgs struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path pulumi.StringInput `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (BuildSpecTasksImageVolumesDownwardAPIItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsOutput() BuildSpecTasksImageVolumesDownwardAPIItemsOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsOutput)
}

// BuildSpecTasksImageVolumesDownwardAPIItemsArrayInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsArray and BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsArrayInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsArray{ BuildSpecTasksImageVolumesDownwardAPIItemsArgs{...} }
type BuildSpecTasksImageVolumesDownwardAPIItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput() BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput
}

type BuildSpecTasksImageVolumesDownwardAPIItemsArray []BuildSpecTasksImageVolumesDownwardAPIItemsInput

func (BuildSpecTasksImageVolumesDownwardAPIItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsArray) ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput() BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsArray) ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksImageVolumesDownwardAPIItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsOutput() BuildSpecTasksImageVolumesDownwardAPIItemsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsOutput {
	return o
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
func (o BuildSpecTasksImageVolumesDownwardAPIItemsOutput) FieldRef() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItems) *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef {
		return v.FieldRef
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesDownwardAPIItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o BuildSpecTasksImageVolumesDownwardAPIItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItems) string { return v.Path }).(pulumi.StringOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
func (o BuildSpecTasksImageVolumesDownwardAPIItemsOutput) ResourceFieldRef() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItems) *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput() BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesDownwardAPIItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesDownwardAPIItems {
		return vs[0].([]BuildSpecTasksImageVolumesDownwardAPIItems)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs and BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs{...}
type BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput)
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput).ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs, BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtr and BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput
}

type buildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrType BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs

func BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtr(v *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefArgs) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrInput {
	return (*buildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef) *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef {
		return &v
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput) Elem() BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef) BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef {
		return *v
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs and BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs{...}
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput)
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput).ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs, BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtr and BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput
}

type buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrType BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs

func BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtr(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefArgs) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrInput {
	return (*buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef {
		return &v
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) Divisor() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor {
		return v.Divisor
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Elem() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef {
		return *v
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Divisor() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor struct {
}

// BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs and BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput
}

type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs struct {
}

func (BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput).ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput is an input type that accepts BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs, BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtr and BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput` via:
//
//          BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
	ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
}

type buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs

func BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtr(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorArgs) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrInput {
	return (*buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType)(v)
}

func (*buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor) *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor {
		return &v
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) Elem() BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor) BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisor {
		return *v
	}).(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type BuildSpecTasksImageVolumesEmptyDir struct {
	// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium *string `pulumi:"medium"`
	// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
	SizeLimit *BuildSpecTasksImageVolumesEmptyDirSizeLimit `pulumi:"sizeLimit"`
}

// BuildSpecTasksImageVolumesEmptyDirInput is an input type that accepts BuildSpecTasksImageVolumesEmptyDirArgs and BuildSpecTasksImageVolumesEmptyDirOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesEmptyDirInput` via:
//
//          BuildSpecTasksImageVolumesEmptyDirArgs{...}
type BuildSpecTasksImageVolumesEmptyDirInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesEmptyDirOutput() BuildSpecTasksImageVolumesEmptyDirOutput
	ToBuildSpecTasksImageVolumesEmptyDirOutputWithContext(context.Context) BuildSpecTasksImageVolumesEmptyDirOutput
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type BuildSpecTasksImageVolumesEmptyDirArgs struct {
	// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
	SizeLimit BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrInput `pulumi:"sizeLimit"`
}

func (BuildSpecTasksImageVolumesEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesEmptyDir)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesEmptyDirArgs) ToBuildSpecTasksImageVolumesEmptyDirOutput() BuildSpecTasksImageVolumesEmptyDirOutput {
	return i.ToBuildSpecTasksImageVolumesEmptyDirOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesEmptyDirArgs) ToBuildSpecTasksImageVolumesEmptyDirOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesEmptyDirOutput)
}

func (i BuildSpecTasksImageVolumesEmptyDirArgs) ToBuildSpecTasksImageVolumesEmptyDirPtrOutput() BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return i.ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesEmptyDirArgs) ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesEmptyDirOutput).ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesEmptyDirPtrInput is an input type that accepts BuildSpecTasksImageVolumesEmptyDirArgs, BuildSpecTasksImageVolumesEmptyDirPtr and BuildSpecTasksImageVolumesEmptyDirPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesEmptyDirPtrInput` via:
//
//          BuildSpecTasksImageVolumesEmptyDirArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesEmptyDirPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesEmptyDirPtrOutput() BuildSpecTasksImageVolumesEmptyDirPtrOutput
	ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesEmptyDirPtrOutput
}

type buildSpecTasksImageVolumesEmptyDirPtrType BuildSpecTasksImageVolumesEmptyDirArgs

func BuildSpecTasksImageVolumesEmptyDirPtr(v *BuildSpecTasksImageVolumesEmptyDirArgs) BuildSpecTasksImageVolumesEmptyDirPtrInput {
	return (*buildSpecTasksImageVolumesEmptyDirPtrType)(v)
}

func (*buildSpecTasksImageVolumesEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesEmptyDir)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesEmptyDirPtrType) ToBuildSpecTasksImageVolumesEmptyDirPtrOutput() BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return i.ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesEmptyDirPtrType) ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesEmptyDirPtrOutput)
}

// EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type BuildSpecTasksImageVolumesEmptyDirOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesEmptyDir)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesEmptyDirOutput) ToBuildSpecTasksImageVolumesEmptyDirOutput() BuildSpecTasksImageVolumesEmptyDirOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirOutput) ToBuildSpecTasksImageVolumesEmptyDirOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirOutput) ToBuildSpecTasksImageVolumesEmptyDirPtrOutput() BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return o.ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesEmptyDirOutput) ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesEmptyDir) *BuildSpecTasksImageVolumesEmptyDir {
		return &v
	}).(BuildSpecTasksImageVolumesEmptyDirPtrOutput)
}

// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o BuildSpecTasksImageVolumesEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
func (o BuildSpecTasksImageVolumesEmptyDirOutput) SizeLimit() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesEmptyDir) *BuildSpecTasksImageVolumesEmptyDirSizeLimit {
		return v.SizeLimit
	}).(BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksImageVolumesEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesEmptyDir)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesEmptyDirPtrOutput) ToBuildSpecTasksImageVolumesEmptyDirPtrOutput() BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirPtrOutput) ToBuildSpecTasksImageVolumesEmptyDirPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirPtrOutput) Elem() BuildSpecTasksImageVolumesEmptyDirOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesEmptyDir) BuildSpecTasksImageVolumesEmptyDir { return *v }).(BuildSpecTasksImageVolumesEmptyDirOutput)
}

// What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o BuildSpecTasksImageVolumesEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
func (o BuildSpecTasksImageVolumesEmptyDirPtrOutput) SizeLimit() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesEmptyDir) *BuildSpecTasksImageVolumesEmptyDirSizeLimit {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksImageVolumesEmptyDirSizeLimit struct {
}

// BuildSpecTasksImageVolumesEmptyDirSizeLimitInput is an input type that accepts BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs and BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesEmptyDirSizeLimitInput` via:
//
//          BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs{...}
type BuildSpecTasksImageVolumesEmptyDirSizeLimitInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput
	ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutputWithContext(context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput
}

type BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs struct {
}

func (BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput {
	return i.ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput)
}

func (i BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput).ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrInput is an input type that accepts BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs, BuildSpecTasksImageVolumesEmptyDirSizeLimitPtr and BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrInput` via:
//
//          BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput
	ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput
}

type buildSpecTasksImageVolumesEmptyDirSizeLimitPtrType BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs

func BuildSpecTasksImageVolumesEmptyDirSizeLimitPtr(v *BuildSpecTasksImageVolumesEmptyDirSizeLimitArgs) BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrInput {
	return (*buildSpecTasksImageVolumesEmptyDirSizeLimitPtrType)(v)
}

func (*buildSpecTasksImageVolumesEmptyDirSizeLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesEmptyDirSizeLimitPtrType) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return i.ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesEmptyDirSizeLimitPtrType) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return o.ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesEmptyDirSizeLimit) *BuildSpecTasksImageVolumesEmptyDirSizeLimit {
		return &v
	}).(BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput)
}

type BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesEmptyDirSizeLimit)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput() BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput) ToBuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput) Elem() BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesEmptyDirSizeLimit) BuildSpecTasksImageVolumesEmptyDirSizeLimit {
		return *v
	}).(BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput)
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type BuildSpecTasksImageVolumesFc struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// Optional: FC target lun number
	Lun *int `pulumi:"lun"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: FC target worldwide names (WWNs)
	TargetWWNs []string `pulumi:"targetWWNs"`
	// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids []string `pulumi:"wwids"`
}

// BuildSpecTasksImageVolumesFcInput is an input type that accepts BuildSpecTasksImageVolumesFcArgs and BuildSpecTasksImageVolumesFcOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFcInput` via:
//
//          BuildSpecTasksImageVolumesFcArgs{...}
type BuildSpecTasksImageVolumesFcInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFcOutput() BuildSpecTasksImageVolumesFcOutput
	ToBuildSpecTasksImageVolumesFcOutputWithContext(context.Context) BuildSpecTasksImageVolumesFcOutput
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type BuildSpecTasksImageVolumesFcArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Optional: FC target lun number
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: FC target worldwide names (WWNs)
	TargetWWNs pulumi.StringArrayInput `pulumi:"targetWWNs"`
	// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids pulumi.StringArrayInput `pulumi:"wwids"`
}

func (BuildSpecTasksImageVolumesFcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFc)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesFcArgs) ToBuildSpecTasksImageVolumesFcOutput() BuildSpecTasksImageVolumesFcOutput {
	return i.ToBuildSpecTasksImageVolumesFcOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFcArgs) ToBuildSpecTasksImageVolumesFcOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFcOutput)
}

func (i BuildSpecTasksImageVolumesFcArgs) ToBuildSpecTasksImageVolumesFcPtrOutput() BuildSpecTasksImageVolumesFcPtrOutput {
	return i.ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFcArgs) ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFcOutput).ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesFcPtrInput is an input type that accepts BuildSpecTasksImageVolumesFcArgs, BuildSpecTasksImageVolumesFcPtr and BuildSpecTasksImageVolumesFcPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFcPtrInput` via:
//
//          BuildSpecTasksImageVolumesFcArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesFcPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFcPtrOutput() BuildSpecTasksImageVolumesFcPtrOutput
	ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesFcPtrOutput
}

type buildSpecTasksImageVolumesFcPtrType BuildSpecTasksImageVolumesFcArgs

func BuildSpecTasksImageVolumesFcPtr(v *BuildSpecTasksImageVolumesFcArgs) BuildSpecTasksImageVolumesFcPtrInput {
	return (*buildSpecTasksImageVolumesFcPtrType)(v)
}

func (*buildSpecTasksImageVolumesFcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFc)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesFcPtrType) ToBuildSpecTasksImageVolumesFcPtrOutput() BuildSpecTasksImageVolumesFcPtrOutput {
	return i.ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesFcPtrType) ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFcPtrOutput)
}

// FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type BuildSpecTasksImageVolumesFcOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFc)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFcOutput) ToBuildSpecTasksImageVolumesFcOutput() BuildSpecTasksImageVolumesFcOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFcOutput) ToBuildSpecTasksImageVolumesFcOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFcOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFcOutput) ToBuildSpecTasksImageVolumesFcPtrOutput() BuildSpecTasksImageVolumesFcPtrOutput {
	return o.ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesFcOutput) ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFcPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFc) *BuildSpecTasksImageVolumesFc {
		return &v
	}).(BuildSpecTasksImageVolumesFcPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesFcOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFc) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Optional: FC target lun number
func (o BuildSpecTasksImageVolumesFcOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFc) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesFcOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFc) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: FC target worldwide names (WWNs)
func (o BuildSpecTasksImageVolumesFcOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFc) []string { return v.TargetWWNs }).(pulumi.StringArrayOutput)
}

// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o BuildSpecTasksImageVolumesFcOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFc) []string { return v.Wwids }).(pulumi.StringArrayOutput)
}

type BuildSpecTasksImageVolumesFcPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFc)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFcPtrOutput) ToBuildSpecTasksImageVolumesFcPtrOutput() BuildSpecTasksImageVolumesFcPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFcPtrOutput) ToBuildSpecTasksImageVolumesFcPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFcPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFcPtrOutput) Elem() BuildSpecTasksImageVolumesFcOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFc) BuildSpecTasksImageVolumesFc { return *v }).(BuildSpecTasksImageVolumesFcOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesFcPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFc) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Optional: FC target lun number
func (o BuildSpecTasksImageVolumesFcPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFc) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesFcPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFc) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: FC target worldwide names (WWNs)
func (o BuildSpecTasksImageVolumesFcPtrOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.TargetWWNs
	}).(pulumi.StringArrayOutput)
}

// Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o BuildSpecTasksImageVolumesFcPtrOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.Wwids
	}).(pulumi.StringArrayOutput)
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type BuildSpecTasksImageVolumesFlexVolume struct {
	// Driver is the name of the driver to use for this volume.
	Driver string `pulumi:"driver"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType *string `pulumi:"fsType"`
	// Optional: Extra command options if any.
	Options map[string]string `pulumi:"options"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
	SecretRef *BuildSpecTasksImageVolumesFlexVolumeSecretRef `pulumi:"secretRef"`
}

// BuildSpecTasksImageVolumesFlexVolumeInput is an input type that accepts BuildSpecTasksImageVolumesFlexVolumeArgs and BuildSpecTasksImageVolumesFlexVolumeOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlexVolumeInput` via:
//
//          BuildSpecTasksImageVolumesFlexVolumeArgs{...}
type BuildSpecTasksImageVolumesFlexVolumeInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlexVolumeOutput() BuildSpecTasksImageVolumesFlexVolumeOutput
	ToBuildSpecTasksImageVolumesFlexVolumeOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlexVolumeOutput
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type BuildSpecTasksImageVolumesFlexVolumeArgs struct {
	// Driver is the name of the driver to use for this volume.
	Driver pulumi.StringInput `pulumi:"driver"`
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Optional: Extra command options if any.
	Options pulumi.StringMapInput `pulumi:"options"`
	// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
	SecretRef BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrInput `pulumi:"secretRef"`
}

func (BuildSpecTasksImageVolumesFlexVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlexVolume)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesFlexVolumeArgs) ToBuildSpecTasksImageVolumesFlexVolumeOutput() BuildSpecTasksImageVolumesFlexVolumeOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumeOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlexVolumeArgs) ToBuildSpecTasksImageVolumesFlexVolumeOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumeOutput)
}

func (i BuildSpecTasksImageVolumesFlexVolumeArgs) ToBuildSpecTasksImageVolumesFlexVolumePtrOutput() BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlexVolumeArgs) ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumeOutput).ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesFlexVolumePtrInput is an input type that accepts BuildSpecTasksImageVolumesFlexVolumeArgs, BuildSpecTasksImageVolumesFlexVolumePtr and BuildSpecTasksImageVolumesFlexVolumePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlexVolumePtrInput` via:
//
//          BuildSpecTasksImageVolumesFlexVolumeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesFlexVolumePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlexVolumePtrOutput() BuildSpecTasksImageVolumesFlexVolumePtrOutput
	ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlexVolumePtrOutput
}

type buildSpecTasksImageVolumesFlexVolumePtrType BuildSpecTasksImageVolumesFlexVolumeArgs

func BuildSpecTasksImageVolumesFlexVolumePtr(v *BuildSpecTasksImageVolumesFlexVolumeArgs) BuildSpecTasksImageVolumesFlexVolumePtrInput {
	return (*buildSpecTasksImageVolumesFlexVolumePtrType)(v)
}

func (*buildSpecTasksImageVolumesFlexVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFlexVolume)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesFlexVolumePtrType) ToBuildSpecTasksImageVolumesFlexVolumePtrOutput() BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesFlexVolumePtrType) ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumePtrOutput)
}

// FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type BuildSpecTasksImageVolumesFlexVolumeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlexVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlexVolume)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlexVolumeOutput) ToBuildSpecTasksImageVolumesFlexVolumeOutput() BuildSpecTasksImageVolumesFlexVolumeOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeOutput) ToBuildSpecTasksImageVolumesFlexVolumeOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeOutput) ToBuildSpecTasksImageVolumesFlexVolumePtrOutput() BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return o.ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesFlexVolumeOutput) ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolume) *BuildSpecTasksImageVolumesFlexVolume {
		return &v
	}).(BuildSpecTasksImageVolumesFlexVolumePtrOutput)
}

// Driver is the name of the driver to use for this volume.
func (o BuildSpecTasksImageVolumesFlexVolumeOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolume) string { return v.Driver }).(pulumi.StringOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o BuildSpecTasksImageVolumesFlexVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Optional: Extra command options if any.
func (o BuildSpecTasksImageVolumesFlexVolumeOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolume) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesFlexVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
func (o BuildSpecTasksImageVolumesFlexVolumeOutput) SecretRef() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolume) *BuildSpecTasksImageVolumesFlexVolumeSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput)
}

type BuildSpecTasksImageVolumesFlexVolumePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlexVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFlexVolume)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) ToBuildSpecTasksImageVolumesFlexVolumePtrOutput() BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) ToBuildSpecTasksImageVolumesFlexVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) Elem() BuildSpecTasksImageVolumesFlexVolumeOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolume) BuildSpecTasksImageVolumesFlexVolume { return *v }).(BuildSpecTasksImageVolumesFlexVolumeOutput)
}

// Driver is the name of the driver to use for this volume.
func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Optional: Extra command options if any.
func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolume) map[string]string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringMapOutput)
}

// Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
func (o BuildSpecTasksImageVolumesFlexVolumePtrOutput) SecretRef() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolume) *BuildSpecTasksImageVolumesFlexVolumeSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput)
}

// Optional: Extra command options if any.
type BuildSpecTasksImageVolumesFlexVolumeOptions struct {
}

// BuildSpecTasksImageVolumesFlexVolumeOptionsInput is an input type that accepts BuildSpecTasksImageVolumesFlexVolumeOptionsArgs and BuildSpecTasksImageVolumesFlexVolumeOptionsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlexVolumeOptionsInput` via:
//
//          BuildSpecTasksImageVolumesFlexVolumeOptionsArgs{...}
type BuildSpecTasksImageVolumesFlexVolumeOptionsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutput() BuildSpecTasksImageVolumesFlexVolumeOptionsOutput
	ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlexVolumeOptionsOutput
}

// Optional: Extra command options if any.
type BuildSpecTasksImageVolumesFlexVolumeOptionsArgs struct {
}

func (BuildSpecTasksImageVolumesFlexVolumeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlexVolumeOptions)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesFlexVolumeOptionsArgs) ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutput() BuildSpecTasksImageVolumesFlexVolumeOptionsOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlexVolumeOptionsArgs) ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumeOptionsOutput)
}

// Optional: Extra command options if any.
type BuildSpecTasksImageVolumesFlexVolumeOptionsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlexVolumeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlexVolumeOptions)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlexVolumeOptionsOutput) ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutput() BuildSpecTasksImageVolumesFlexVolumeOptionsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeOptionsOutput) ToBuildSpecTasksImageVolumesFlexVolumeOptionsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeOptionsOutput {
	return o
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
type BuildSpecTasksImageVolumesFlexVolumeSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesFlexVolumeSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs and BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlexVolumeSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs{...}
type BuildSpecTasksImageVolumesFlexVolumeSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput
	ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
type BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput).ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs, BuildSpecTasksImageVolumesFlexVolumeSecretRefPtr and BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput
}

type buildSpecTasksImageVolumesFlexVolumeSecretRefPtrType BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs

func BuildSpecTasksImageVolumesFlexVolumeSecretRefPtr(v *BuildSpecTasksImageVolumesFlexVolumeSecretRefArgs) BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesFlexVolumeSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesFlexVolumeSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesFlexVolumeSecretRefPtrType) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesFlexVolumeSecretRefPtrType) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput)
}

// Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
type BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolumeSecretRef) *BuildSpecTasksImageVolumesFlexVolumeSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlexVolumeSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput() BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput) ToBuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolumeSecretRef) BuildSpecTasksImageVolumesFlexVolumeSecretRef {
		return *v
	}).(BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlexVolumeSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type BuildSpecTasksImageVolumesFlocker struct {
	// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
	DatasetName *string `pulumi:"datasetName"`
	// UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `pulumi:"datasetUUID"`
}

// BuildSpecTasksImageVolumesFlockerInput is an input type that accepts BuildSpecTasksImageVolumesFlockerArgs and BuildSpecTasksImageVolumesFlockerOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlockerInput` via:
//
//          BuildSpecTasksImageVolumesFlockerArgs{...}
type BuildSpecTasksImageVolumesFlockerInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlockerOutput() BuildSpecTasksImageVolumesFlockerOutput
	ToBuildSpecTasksImageVolumesFlockerOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlockerOutput
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type BuildSpecTasksImageVolumesFlockerArgs struct {
	// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
	DatasetName pulumi.StringPtrInput `pulumi:"datasetName"`
	// UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID pulumi.StringPtrInput `pulumi:"datasetUUID"`
}

func (BuildSpecTasksImageVolumesFlockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlocker)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesFlockerArgs) ToBuildSpecTasksImageVolumesFlockerOutput() BuildSpecTasksImageVolumesFlockerOutput {
	return i.ToBuildSpecTasksImageVolumesFlockerOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlockerArgs) ToBuildSpecTasksImageVolumesFlockerOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlockerOutput)
}

func (i BuildSpecTasksImageVolumesFlockerArgs) ToBuildSpecTasksImageVolumesFlockerPtrOutput() BuildSpecTasksImageVolumesFlockerPtrOutput {
	return i.ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesFlockerArgs) ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlockerOutput).ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesFlockerPtrInput is an input type that accepts BuildSpecTasksImageVolumesFlockerArgs, BuildSpecTasksImageVolumesFlockerPtr and BuildSpecTasksImageVolumesFlockerPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesFlockerPtrInput` via:
//
//          BuildSpecTasksImageVolumesFlockerArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesFlockerPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesFlockerPtrOutput() BuildSpecTasksImageVolumesFlockerPtrOutput
	ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesFlockerPtrOutput
}

type buildSpecTasksImageVolumesFlockerPtrType BuildSpecTasksImageVolumesFlockerArgs

func BuildSpecTasksImageVolumesFlockerPtr(v *BuildSpecTasksImageVolumesFlockerArgs) BuildSpecTasksImageVolumesFlockerPtrInput {
	return (*buildSpecTasksImageVolumesFlockerPtrType)(v)
}

func (*buildSpecTasksImageVolumesFlockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFlocker)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesFlockerPtrType) ToBuildSpecTasksImageVolumesFlockerPtrOutput() BuildSpecTasksImageVolumesFlockerPtrOutput {
	return i.ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesFlockerPtrType) ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesFlockerPtrOutput)
}

// Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type BuildSpecTasksImageVolumesFlockerOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesFlocker)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlockerOutput) ToBuildSpecTasksImageVolumesFlockerOutput() BuildSpecTasksImageVolumesFlockerOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlockerOutput) ToBuildSpecTasksImageVolumesFlockerOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlockerOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlockerOutput) ToBuildSpecTasksImageVolumesFlockerPtrOutput() BuildSpecTasksImageVolumesFlockerPtrOutput {
	return o.ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesFlockerOutput) ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlockerPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlocker) *BuildSpecTasksImageVolumesFlocker {
		return &v
	}).(BuildSpecTasksImageVolumesFlockerPtrOutput)
}

// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
func (o BuildSpecTasksImageVolumesFlockerOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlocker) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// UUID of the dataset. This is unique identifier of a Flocker dataset
func (o BuildSpecTasksImageVolumesFlockerOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesFlocker) *string { return v.DatasetUUID }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesFlockerPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesFlockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesFlocker)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesFlockerPtrOutput) ToBuildSpecTasksImageVolumesFlockerPtrOutput() BuildSpecTasksImageVolumesFlockerPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlockerPtrOutput) ToBuildSpecTasksImageVolumesFlockerPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesFlockerPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesFlockerPtrOutput) Elem() BuildSpecTasksImageVolumesFlockerOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlocker) BuildSpecTasksImageVolumesFlocker { return *v }).(BuildSpecTasksImageVolumesFlockerOutput)
}

// Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
func (o BuildSpecTasksImageVolumesFlockerPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetName
	}).(pulumi.StringPtrOutput)
}

// UUID of the dataset. This is unique identifier of a Flocker dataset
func (o BuildSpecTasksImageVolumesFlockerPtrOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetUUID
	}).(pulumi.StringPtrOutput)
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type BuildSpecTasksImageVolumesGcePersistentDisk struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition *int `pulumi:"partition"`
	// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName string `pulumi:"pdName"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksImageVolumesGcePersistentDiskInput is an input type that accepts BuildSpecTasksImageVolumesGcePersistentDiskArgs and BuildSpecTasksImageVolumesGcePersistentDiskOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesGcePersistentDiskInput` via:
//
//          BuildSpecTasksImageVolumesGcePersistentDiskArgs{...}
type BuildSpecTasksImageVolumesGcePersistentDiskInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesGcePersistentDiskOutput() BuildSpecTasksImageVolumesGcePersistentDiskOutput
	ToBuildSpecTasksImageVolumesGcePersistentDiskOutputWithContext(context.Context) BuildSpecTasksImageVolumesGcePersistentDiskOutput
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type BuildSpecTasksImageVolumesGcePersistentDiskArgs struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName pulumi.StringInput `pulumi:"pdName"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksImageVolumesGcePersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesGcePersistentDisk)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesGcePersistentDiskArgs) ToBuildSpecTasksImageVolumesGcePersistentDiskOutput() BuildSpecTasksImageVolumesGcePersistentDiskOutput {
	return i.ToBuildSpecTasksImageVolumesGcePersistentDiskOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesGcePersistentDiskArgs) ToBuildSpecTasksImageVolumesGcePersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGcePersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGcePersistentDiskOutput)
}

func (i BuildSpecTasksImageVolumesGcePersistentDiskArgs) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutput() BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return i.ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesGcePersistentDiskArgs) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGcePersistentDiskOutput).ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesGcePersistentDiskPtrInput is an input type that accepts BuildSpecTasksImageVolumesGcePersistentDiskArgs, BuildSpecTasksImageVolumesGcePersistentDiskPtr and BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesGcePersistentDiskPtrInput` via:
//
//          BuildSpecTasksImageVolumesGcePersistentDiskArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesGcePersistentDiskPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutput() BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput
	ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput
}

type buildSpecTasksImageVolumesGcePersistentDiskPtrType BuildSpecTasksImageVolumesGcePersistentDiskArgs

func BuildSpecTasksImageVolumesGcePersistentDiskPtr(v *BuildSpecTasksImageVolumesGcePersistentDiskArgs) BuildSpecTasksImageVolumesGcePersistentDiskPtrInput {
	return (*buildSpecTasksImageVolumesGcePersistentDiskPtrType)(v)
}

func (*buildSpecTasksImageVolumesGcePersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesGcePersistentDisk)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesGcePersistentDiskPtrType) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutput() BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return i.ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesGcePersistentDiskPtrType) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput)
}

// GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type BuildSpecTasksImageVolumesGcePersistentDiskOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesGcePersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesGcePersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) ToBuildSpecTasksImageVolumesGcePersistentDiskOutput() BuildSpecTasksImageVolumesGcePersistentDiskOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) ToBuildSpecTasksImageVolumesGcePersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGcePersistentDiskOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutput() BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return o.ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGcePersistentDisk) *BuildSpecTasksImageVolumesGcePersistentDisk {
		return &v
	}).(BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGcePersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGcePersistentDisk) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) PdName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGcePersistentDisk) string { return v.PdName }).(pulumi.StringOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesGcePersistentDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGcePersistentDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesGcePersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutput() BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) ToBuildSpecTasksImageVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) Elem() BuildSpecTasksImageVolumesGcePersistentDiskOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGcePersistentDisk) BuildSpecTasksImageVolumesGcePersistentDisk {
		return *v
	}).(BuildSpecTasksImageVolumesGcePersistentDiskOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGcePersistentDisk) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return &v.PdName
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGcePersistentDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type BuildSpecTasksImageVolumesGitRepo struct {
	// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
	Directory *string `pulumi:"directory"`
	// Repository URL
	Repository string `pulumi:"repository"`
	// Commit hash for the specified revision.
	Revision *string `pulumi:"revision"`
}

// BuildSpecTasksImageVolumesGitRepoInput is an input type that accepts BuildSpecTasksImageVolumesGitRepoArgs and BuildSpecTasksImageVolumesGitRepoOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesGitRepoInput` via:
//
//          BuildSpecTasksImageVolumesGitRepoArgs{...}
type BuildSpecTasksImageVolumesGitRepoInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesGitRepoOutput() BuildSpecTasksImageVolumesGitRepoOutput
	ToBuildSpecTasksImageVolumesGitRepoOutputWithContext(context.Context) BuildSpecTasksImageVolumesGitRepoOutput
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type BuildSpecTasksImageVolumesGitRepoArgs struct {
	// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// Repository URL
	Repository pulumi.StringInput `pulumi:"repository"`
	// Commit hash for the specified revision.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
}

func (BuildSpecTasksImageVolumesGitRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesGitRepo)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesGitRepoArgs) ToBuildSpecTasksImageVolumesGitRepoOutput() BuildSpecTasksImageVolumesGitRepoOutput {
	return i.ToBuildSpecTasksImageVolumesGitRepoOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesGitRepoArgs) ToBuildSpecTasksImageVolumesGitRepoOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGitRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGitRepoOutput)
}

func (i BuildSpecTasksImageVolumesGitRepoArgs) ToBuildSpecTasksImageVolumesGitRepoPtrOutput() BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return i.ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesGitRepoArgs) ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGitRepoOutput).ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesGitRepoPtrInput is an input type that accepts BuildSpecTasksImageVolumesGitRepoArgs, BuildSpecTasksImageVolumesGitRepoPtr and BuildSpecTasksImageVolumesGitRepoPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesGitRepoPtrInput` via:
//
//          BuildSpecTasksImageVolumesGitRepoArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesGitRepoPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesGitRepoPtrOutput() BuildSpecTasksImageVolumesGitRepoPtrOutput
	ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesGitRepoPtrOutput
}

type buildSpecTasksImageVolumesGitRepoPtrType BuildSpecTasksImageVolumesGitRepoArgs

func BuildSpecTasksImageVolumesGitRepoPtr(v *BuildSpecTasksImageVolumesGitRepoArgs) BuildSpecTasksImageVolumesGitRepoPtrInput {
	return (*buildSpecTasksImageVolumesGitRepoPtrType)(v)
}

func (*buildSpecTasksImageVolumesGitRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesGitRepo)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesGitRepoPtrType) ToBuildSpecTasksImageVolumesGitRepoPtrOutput() BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return i.ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesGitRepoPtrType) ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGitRepoPtrOutput)
}

// GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type BuildSpecTasksImageVolumesGitRepoOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesGitRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesGitRepo)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesGitRepoOutput) ToBuildSpecTasksImageVolumesGitRepoOutput() BuildSpecTasksImageVolumesGitRepoOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGitRepoOutput) ToBuildSpecTasksImageVolumesGitRepoOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGitRepoOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGitRepoOutput) ToBuildSpecTasksImageVolumesGitRepoPtrOutput() BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return o.ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesGitRepoOutput) ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGitRepo) *BuildSpecTasksImageVolumesGitRepo {
		return &v
	}).(BuildSpecTasksImageVolumesGitRepoPtrOutput)
}

// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
func (o BuildSpecTasksImageVolumesGitRepoOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGitRepo) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// Repository URL
func (o BuildSpecTasksImageVolumesGitRepoOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGitRepo) string { return v.Repository }).(pulumi.StringOutput)
}

// Commit hash for the specified revision.
func (o BuildSpecTasksImageVolumesGitRepoOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGitRepo) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesGitRepoPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesGitRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesGitRepo)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesGitRepoPtrOutput) ToBuildSpecTasksImageVolumesGitRepoPtrOutput() BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGitRepoPtrOutput) ToBuildSpecTasksImageVolumesGitRepoPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGitRepoPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGitRepoPtrOutput) Elem() BuildSpecTasksImageVolumesGitRepoOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGitRepo) BuildSpecTasksImageVolumesGitRepo { return *v }).(BuildSpecTasksImageVolumesGitRepoOutput)
}

// Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
func (o BuildSpecTasksImageVolumesGitRepoPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// Repository URL
func (o BuildSpecTasksImageVolumesGitRepoPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// Commit hash for the specified revision.
func (o BuildSpecTasksImageVolumesGitRepoPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
type BuildSpecTasksImageVolumesGlusterfs struct {
	// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints string `pulumi:"endpoints"`
	// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path string `pulumi:"path"`
	// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksImageVolumesGlusterfsInput is an input type that accepts BuildSpecTasksImageVolumesGlusterfsArgs and BuildSpecTasksImageVolumesGlusterfsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesGlusterfsInput` via:
//
//          BuildSpecTasksImageVolumesGlusterfsArgs{...}
type BuildSpecTasksImageVolumesGlusterfsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesGlusterfsOutput() BuildSpecTasksImageVolumesGlusterfsOutput
	ToBuildSpecTasksImageVolumesGlusterfsOutputWithContext(context.Context) BuildSpecTasksImageVolumesGlusterfsOutput
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
type BuildSpecTasksImageVolumesGlusterfsArgs struct {
	// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints pulumi.StringInput `pulumi:"endpoints"`
	// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path pulumi.StringInput `pulumi:"path"`
	// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksImageVolumesGlusterfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesGlusterfs)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesGlusterfsArgs) ToBuildSpecTasksImageVolumesGlusterfsOutput() BuildSpecTasksImageVolumesGlusterfsOutput {
	return i.ToBuildSpecTasksImageVolumesGlusterfsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesGlusterfsArgs) ToBuildSpecTasksImageVolumesGlusterfsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGlusterfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGlusterfsOutput)
}

func (i BuildSpecTasksImageVolumesGlusterfsArgs) ToBuildSpecTasksImageVolumesGlusterfsPtrOutput() BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return i.ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesGlusterfsArgs) ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGlusterfsOutput).ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesGlusterfsPtrInput is an input type that accepts BuildSpecTasksImageVolumesGlusterfsArgs, BuildSpecTasksImageVolumesGlusterfsPtr and BuildSpecTasksImageVolumesGlusterfsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesGlusterfsPtrInput` via:
//
//          BuildSpecTasksImageVolumesGlusterfsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesGlusterfsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesGlusterfsPtrOutput() BuildSpecTasksImageVolumesGlusterfsPtrOutput
	ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesGlusterfsPtrOutput
}

type buildSpecTasksImageVolumesGlusterfsPtrType BuildSpecTasksImageVolumesGlusterfsArgs

func BuildSpecTasksImageVolumesGlusterfsPtr(v *BuildSpecTasksImageVolumesGlusterfsArgs) BuildSpecTasksImageVolumesGlusterfsPtrInput {
	return (*buildSpecTasksImageVolumesGlusterfsPtrType)(v)
}

func (*buildSpecTasksImageVolumesGlusterfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesGlusterfs)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesGlusterfsPtrType) ToBuildSpecTasksImageVolumesGlusterfsPtrOutput() BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return i.ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesGlusterfsPtrType) ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesGlusterfsPtrOutput)
}

// Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
type BuildSpecTasksImageVolumesGlusterfsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesGlusterfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesGlusterfs)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesGlusterfsOutput) ToBuildSpecTasksImageVolumesGlusterfsOutput() BuildSpecTasksImageVolumesGlusterfsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGlusterfsOutput) ToBuildSpecTasksImageVolumesGlusterfsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGlusterfsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGlusterfsOutput) ToBuildSpecTasksImageVolumesGlusterfsPtrOutput() BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return o.ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesGlusterfsOutput) ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGlusterfs) *BuildSpecTasksImageVolumesGlusterfs {
		return &v
	}).(BuildSpecTasksImageVolumesGlusterfsPtrOutput)
}

// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksImageVolumesGlusterfsOutput) Endpoints() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGlusterfs) string { return v.Endpoints }).(pulumi.StringOutput)
}

// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksImageVolumesGlusterfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGlusterfs) string { return v.Path }).(pulumi.StringOutput)
}

// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksImageVolumesGlusterfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesGlusterfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesGlusterfsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesGlusterfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesGlusterfs)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesGlusterfsPtrOutput) ToBuildSpecTasksImageVolumesGlusterfsPtrOutput() BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGlusterfsPtrOutput) ToBuildSpecTasksImageVolumesGlusterfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesGlusterfsPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesGlusterfsPtrOutput) Elem() BuildSpecTasksImageVolumesGlusterfsOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGlusterfs) BuildSpecTasksImageVolumesGlusterfs { return *v }).(BuildSpecTasksImageVolumesGlusterfsOutput)
}

// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksImageVolumesGlusterfsPtrOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoints
	}).(pulumi.StringPtrOutput)
}

// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksImageVolumesGlusterfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o BuildSpecTasksImageVolumesGlusterfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesGlusterfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
type BuildSpecTasksImageVolumesHostPath struct {
	// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path string `pulumi:"path"`
	// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type *string `pulumi:"type"`
}

// BuildSpecTasksImageVolumesHostPathInput is an input type that accepts BuildSpecTasksImageVolumesHostPathArgs and BuildSpecTasksImageVolumesHostPathOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesHostPathInput` via:
//
//          BuildSpecTasksImageVolumesHostPathArgs{...}
type BuildSpecTasksImageVolumesHostPathInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesHostPathOutput() BuildSpecTasksImageVolumesHostPathOutput
	ToBuildSpecTasksImageVolumesHostPathOutputWithContext(context.Context) BuildSpecTasksImageVolumesHostPathOutput
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
type BuildSpecTasksImageVolumesHostPathArgs struct {
	// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path pulumi.StringInput `pulumi:"path"`
	// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BuildSpecTasksImageVolumesHostPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesHostPath)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesHostPathArgs) ToBuildSpecTasksImageVolumesHostPathOutput() BuildSpecTasksImageVolumesHostPathOutput {
	return i.ToBuildSpecTasksImageVolumesHostPathOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesHostPathArgs) ToBuildSpecTasksImageVolumesHostPathOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesHostPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesHostPathOutput)
}

func (i BuildSpecTasksImageVolumesHostPathArgs) ToBuildSpecTasksImageVolumesHostPathPtrOutput() BuildSpecTasksImageVolumesHostPathPtrOutput {
	return i.ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesHostPathArgs) ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesHostPathOutput).ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesHostPathPtrInput is an input type that accepts BuildSpecTasksImageVolumesHostPathArgs, BuildSpecTasksImageVolumesHostPathPtr and BuildSpecTasksImageVolumesHostPathPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesHostPathPtrInput` via:
//
//          BuildSpecTasksImageVolumesHostPathArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesHostPathPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesHostPathPtrOutput() BuildSpecTasksImageVolumesHostPathPtrOutput
	ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesHostPathPtrOutput
}

type buildSpecTasksImageVolumesHostPathPtrType BuildSpecTasksImageVolumesHostPathArgs

func BuildSpecTasksImageVolumesHostPathPtr(v *BuildSpecTasksImageVolumesHostPathArgs) BuildSpecTasksImageVolumesHostPathPtrInput {
	return (*buildSpecTasksImageVolumesHostPathPtrType)(v)
}

func (*buildSpecTasksImageVolumesHostPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesHostPath)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesHostPathPtrType) ToBuildSpecTasksImageVolumesHostPathPtrOutput() BuildSpecTasksImageVolumesHostPathPtrOutput {
	return i.ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesHostPathPtrType) ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesHostPathPtrOutput)
}

// HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
type BuildSpecTasksImageVolumesHostPathOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesHostPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesHostPath)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesHostPathOutput) ToBuildSpecTasksImageVolumesHostPathOutput() BuildSpecTasksImageVolumesHostPathOutput {
	return o
}

func (o BuildSpecTasksImageVolumesHostPathOutput) ToBuildSpecTasksImageVolumesHostPathOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesHostPathOutput {
	return o
}

func (o BuildSpecTasksImageVolumesHostPathOutput) ToBuildSpecTasksImageVolumesHostPathPtrOutput() BuildSpecTasksImageVolumesHostPathPtrOutput {
	return o.ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesHostPathOutput) ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesHostPathPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesHostPath) *BuildSpecTasksImageVolumesHostPath {
		return &v
	}).(BuildSpecTasksImageVolumesHostPathPtrOutput)
}

// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksImageVolumesHostPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesHostPath) string { return v.Path }).(pulumi.StringOutput)
}

// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksImageVolumesHostPathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesHostPath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesHostPathPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesHostPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesHostPath)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesHostPathPtrOutput) ToBuildSpecTasksImageVolumesHostPathPtrOutput() BuildSpecTasksImageVolumesHostPathPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesHostPathPtrOutput) ToBuildSpecTasksImageVolumesHostPathPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesHostPathPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesHostPathPtrOutput) Elem() BuildSpecTasksImageVolumesHostPathOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesHostPath) BuildSpecTasksImageVolumesHostPath { return *v }).(BuildSpecTasksImageVolumesHostPathOutput)
}

// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksImageVolumesHostPathPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o BuildSpecTasksImageVolumesHostPathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
type BuildSpecTasksImageVolumesIscsi struct {
	// whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery *bool `pulumi:"chapAuthDiscovery"`
	// whether support iSCSI Session CHAP authentication
	ChapAuthSession *bool `pulumi:"chapAuthSession"`
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
	InitiatorName *string `pulumi:"initiatorName"`
	// Target iSCSI Qualified Name.
	Iqn string `pulumi:"iqn"`
	// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
	IscsiInterface *string `pulumi:"iscsiInterface"`
	// iSCSI Target Lun number.
	Lun int `pulumi:"lun"`
	// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	Portals []string `pulumi:"portals"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// CHAP Secret for iSCSI target and initiator authentication
	SecretRef *BuildSpecTasksImageVolumesIscsiSecretRef `pulumi:"secretRef"`
	// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	TargetPortal string `pulumi:"targetPortal"`
}

// BuildSpecTasksImageVolumesIscsiInput is an input type that accepts BuildSpecTasksImageVolumesIscsiArgs and BuildSpecTasksImageVolumesIscsiOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesIscsiInput` via:
//
//          BuildSpecTasksImageVolumesIscsiArgs{...}
type BuildSpecTasksImageVolumesIscsiInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesIscsiOutput() BuildSpecTasksImageVolumesIscsiOutput
	ToBuildSpecTasksImageVolumesIscsiOutputWithContext(context.Context) BuildSpecTasksImageVolumesIscsiOutput
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
type BuildSpecTasksImageVolumesIscsiArgs struct {
	// whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery pulumi.BoolPtrInput `pulumi:"chapAuthDiscovery"`
	// whether support iSCSI Session CHAP authentication
	ChapAuthSession pulumi.BoolPtrInput `pulumi:"chapAuthSession"`
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
	InitiatorName pulumi.StringPtrInput `pulumi:"initiatorName"`
	// Target iSCSI Qualified Name.
	Iqn pulumi.StringInput `pulumi:"iqn"`
	// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
	IscsiInterface pulumi.StringPtrInput `pulumi:"iscsiInterface"`
	// iSCSI Target Lun number.
	Lun pulumi.IntInput `pulumi:"lun"`
	// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	Portals pulumi.StringArrayInput `pulumi:"portals"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// CHAP Secret for iSCSI target and initiator authentication
	SecretRef BuildSpecTasksImageVolumesIscsiSecretRefPtrInput `pulumi:"secretRef"`
	// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
	TargetPortal pulumi.StringInput `pulumi:"targetPortal"`
}

func (BuildSpecTasksImageVolumesIscsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesIscsi)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesIscsiArgs) ToBuildSpecTasksImageVolumesIscsiOutput() BuildSpecTasksImageVolumesIscsiOutput {
	return i.ToBuildSpecTasksImageVolumesIscsiOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesIscsiArgs) ToBuildSpecTasksImageVolumesIscsiOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesIscsiOutput)
}

func (i BuildSpecTasksImageVolumesIscsiArgs) ToBuildSpecTasksImageVolumesIscsiPtrOutput() BuildSpecTasksImageVolumesIscsiPtrOutput {
	return i.ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesIscsiArgs) ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesIscsiOutput).ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesIscsiPtrInput is an input type that accepts BuildSpecTasksImageVolumesIscsiArgs, BuildSpecTasksImageVolumesIscsiPtr and BuildSpecTasksImageVolumesIscsiPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesIscsiPtrInput` via:
//
//          BuildSpecTasksImageVolumesIscsiArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesIscsiPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesIscsiPtrOutput() BuildSpecTasksImageVolumesIscsiPtrOutput
	ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesIscsiPtrOutput
}

type buildSpecTasksImageVolumesIscsiPtrType BuildSpecTasksImageVolumesIscsiArgs

func BuildSpecTasksImageVolumesIscsiPtr(v *BuildSpecTasksImageVolumesIscsiArgs) BuildSpecTasksImageVolumesIscsiPtrInput {
	return (*buildSpecTasksImageVolumesIscsiPtrType)(v)
}

func (*buildSpecTasksImageVolumesIscsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesIscsi)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesIscsiPtrType) ToBuildSpecTasksImageVolumesIscsiPtrOutput() BuildSpecTasksImageVolumesIscsiPtrOutput {
	return i.ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesIscsiPtrType) ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesIscsiPtrOutput)
}

// ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
type BuildSpecTasksImageVolumesIscsiOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesIscsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesIscsi)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesIscsiOutput) ToBuildSpecTasksImageVolumesIscsiOutput() BuildSpecTasksImageVolumesIscsiOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiOutput) ToBuildSpecTasksImageVolumesIscsiOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiOutput) ToBuildSpecTasksImageVolumesIscsiPtrOutput() BuildSpecTasksImageVolumesIscsiPtrOutput {
	return o.ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesIscsiOutput) ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *BuildSpecTasksImageVolumesIscsi {
		return &v
	}).(BuildSpecTasksImageVolumesIscsiPtrOutput)
}

// whether support iSCSI Discovery CHAP authentication
func (o BuildSpecTasksImageVolumesIscsiOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *bool { return v.ChapAuthDiscovery }).(pulumi.BoolPtrOutput)
}

// whether support iSCSI Session CHAP authentication
func (o BuildSpecTasksImageVolumesIscsiOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *bool { return v.ChapAuthSession }).(pulumi.BoolPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesIscsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
func (o BuildSpecTasksImageVolumesIscsiOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *string { return v.InitiatorName }).(pulumi.StringPtrOutput)
}

// Target iSCSI Qualified Name.
func (o BuildSpecTasksImageVolumesIscsiOutput) Iqn() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) string { return v.Iqn }).(pulumi.StringOutput)
}

// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
func (o BuildSpecTasksImageVolumesIscsiOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *string { return v.IscsiInterface }).(pulumi.StringPtrOutput)
}

// iSCSI Target Lun number.
func (o BuildSpecTasksImageVolumesIscsiOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) int { return v.Lun }).(pulumi.IntOutput)
}

// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksImageVolumesIscsiOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) []string { return v.Portals }).(pulumi.StringArrayOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
func (o BuildSpecTasksImageVolumesIscsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
func (o BuildSpecTasksImageVolumesIscsiOutput) SecretRef() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) *BuildSpecTasksImageVolumesIscsiSecretRef { return v.SecretRef }).(BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput)
}

// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksImageVolumesIscsiOutput) TargetPortal() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsi) string { return v.TargetPortal }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesIscsiPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesIscsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesIscsi)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesIscsiPtrOutput) ToBuildSpecTasksImageVolumesIscsiPtrOutput() BuildSpecTasksImageVolumesIscsiPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiPtrOutput) ToBuildSpecTasksImageVolumesIscsiPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiPtrOutput) Elem() BuildSpecTasksImageVolumesIscsiOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) BuildSpecTasksImageVolumesIscsi { return *v }).(BuildSpecTasksImageVolumesIscsiOutput)
}

// whether support iSCSI Discovery CHAP authentication
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthDiscovery
	}).(pulumi.BoolPtrOutput)
}

// whether support iSCSI Session CHAP authentication
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthSession
	}).(pulumi.BoolPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// Target iSCSI Qualified Name.
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return &v.Iqn
	}).(pulumi.StringPtrOutput)
}

// iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.IscsiInterface
	}).(pulumi.StringPtrOutput)
}

// iSCSI Target Lun number.
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *int {
		if v == nil {
			return nil
		}
		return &v.Lun
	}).(pulumi.IntPtrOutput)
}

// iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) []string {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(pulumi.StringArrayOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) SecretRef() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *BuildSpecTasksImageVolumesIscsiSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput)
}

// iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
func (o BuildSpecTasksImageVolumesIscsiPtrOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return &v.TargetPortal
	}).(pulumi.StringPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
type BuildSpecTasksImageVolumesIscsiSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesIscsiSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesIscsiSecretRefArgs and BuildSpecTasksImageVolumesIscsiSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesIscsiSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesIscsiSecretRefArgs{...}
type BuildSpecTasksImageVolumesIscsiSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesIscsiSecretRefOutput() BuildSpecTasksImageVolumesIscsiSecretRefOutput
	ToBuildSpecTasksImageVolumesIscsiSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesIscsiSecretRefOutput
}

// CHAP Secret for iSCSI target and initiator authentication
type BuildSpecTasksImageVolumesIscsiSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesIscsiSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesIscsiSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesIscsiSecretRefArgs) ToBuildSpecTasksImageVolumesIscsiSecretRefOutput() BuildSpecTasksImageVolumesIscsiSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesIscsiSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesIscsiSecretRefArgs) ToBuildSpecTasksImageVolumesIscsiSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesIscsiSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesIscsiSecretRefArgs) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutput() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesIscsiSecretRefArgs) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesIscsiSecretRefOutput).ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesIscsiSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesIscsiSecretRefArgs, BuildSpecTasksImageVolumesIscsiSecretRefPtr and BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesIscsiSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesIscsiSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesIscsiSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutput() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput
}

type buildSpecTasksImageVolumesIscsiSecretRefPtrType BuildSpecTasksImageVolumesIscsiSecretRefArgs

func BuildSpecTasksImageVolumesIscsiSecretRefPtr(v *BuildSpecTasksImageVolumesIscsiSecretRefArgs) BuildSpecTasksImageVolumesIscsiSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesIscsiSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesIscsiSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesIscsiSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesIscsiSecretRefPtrType) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutput() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesIscsiSecretRefPtrType) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput)
}

// CHAP Secret for iSCSI target and initiator authentication
type BuildSpecTasksImageVolumesIscsiSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesIscsiSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesIscsiSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefOutput) ToBuildSpecTasksImageVolumesIscsiSecretRefOutput() BuildSpecTasksImageVolumesIscsiSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefOutput) ToBuildSpecTasksImageVolumesIscsiSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefOutput) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutput() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefOutput) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsiSecretRef) *BuildSpecTasksImageVolumesIscsiSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesIscsiSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesIscsiSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesIscsiSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutput() BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput) ToBuildSpecTasksImageVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesIscsiSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsiSecretRef) BuildSpecTasksImageVolumesIscsiSecretRef { return *v }).(BuildSpecTasksImageVolumesIscsiSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesIscsiSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type BuildSpecTasksImageVolumesNfs struct {
	// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path string `pulumi:"path"`
	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `pulumi:"readOnly"`
	// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server string `pulumi:"server"`
}

// BuildSpecTasksImageVolumesNfsInput is an input type that accepts BuildSpecTasksImageVolumesNfsArgs and BuildSpecTasksImageVolumesNfsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesNfsInput` via:
//
//          BuildSpecTasksImageVolumesNfsArgs{...}
type BuildSpecTasksImageVolumesNfsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesNfsOutput() BuildSpecTasksImageVolumesNfsOutput
	ToBuildSpecTasksImageVolumesNfsOutputWithContext(context.Context) BuildSpecTasksImageVolumesNfsOutput
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type BuildSpecTasksImageVolumesNfsArgs struct {
	// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path pulumi.StringInput `pulumi:"path"`
	// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server pulumi.StringInput `pulumi:"server"`
}

func (BuildSpecTasksImageVolumesNfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesNfs)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesNfsArgs) ToBuildSpecTasksImageVolumesNfsOutput() BuildSpecTasksImageVolumesNfsOutput {
	return i.ToBuildSpecTasksImageVolumesNfsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesNfsArgs) ToBuildSpecTasksImageVolumesNfsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesNfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesNfsOutput)
}

func (i BuildSpecTasksImageVolumesNfsArgs) ToBuildSpecTasksImageVolumesNfsPtrOutput() BuildSpecTasksImageVolumesNfsPtrOutput {
	return i.ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesNfsArgs) ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesNfsOutput).ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesNfsPtrInput is an input type that accepts BuildSpecTasksImageVolumesNfsArgs, BuildSpecTasksImageVolumesNfsPtr and BuildSpecTasksImageVolumesNfsPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesNfsPtrInput` via:
//
//          BuildSpecTasksImageVolumesNfsArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesNfsPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesNfsPtrOutput() BuildSpecTasksImageVolumesNfsPtrOutput
	ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesNfsPtrOutput
}

type buildSpecTasksImageVolumesNfsPtrType BuildSpecTasksImageVolumesNfsArgs

func BuildSpecTasksImageVolumesNfsPtr(v *BuildSpecTasksImageVolumesNfsArgs) BuildSpecTasksImageVolumesNfsPtrInput {
	return (*buildSpecTasksImageVolumesNfsPtrType)(v)
}

func (*buildSpecTasksImageVolumesNfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesNfs)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesNfsPtrType) ToBuildSpecTasksImageVolumesNfsPtrOutput() BuildSpecTasksImageVolumesNfsPtrOutput {
	return i.ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesNfsPtrType) ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesNfsPtrOutput)
}

// NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type BuildSpecTasksImageVolumesNfsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesNfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesNfs)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesNfsOutput) ToBuildSpecTasksImageVolumesNfsOutput() BuildSpecTasksImageVolumesNfsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesNfsOutput) ToBuildSpecTasksImageVolumesNfsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesNfsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesNfsOutput) ToBuildSpecTasksImageVolumesNfsPtrOutput() BuildSpecTasksImageVolumesNfsPtrOutput {
	return o.ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesNfsOutput) ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesNfsPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesNfs) *BuildSpecTasksImageVolumesNfs {
		return &v
	}).(BuildSpecTasksImageVolumesNfsPtrOutput)
}

// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesNfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesNfs) string { return v.Path }).(pulumi.StringOutput)
}

// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesNfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesNfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesNfsOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesNfs) string { return v.Server }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesNfsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesNfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesNfs)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesNfsPtrOutput) ToBuildSpecTasksImageVolumesNfsPtrOutput() BuildSpecTasksImageVolumesNfsPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesNfsPtrOutput) ToBuildSpecTasksImageVolumesNfsPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesNfsPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesNfsPtrOutput) Elem() BuildSpecTasksImageVolumesNfsOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesNfs) BuildSpecTasksImageVolumesNfs { return *v }).(BuildSpecTasksImageVolumesNfsOutput)
}

// Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesNfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesNfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesNfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o BuildSpecTasksImageVolumesNfsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type BuildSpecTasksImageVolumesPersistentVolumeClaim struct {
	// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName string `pulumi:"claimName"`
	// Will force the ReadOnly setting in VolumeMounts. Default false.
	ReadOnly *bool `pulumi:"readOnly"`
}

// BuildSpecTasksImageVolumesPersistentVolumeClaimInput is an input type that accepts BuildSpecTasksImageVolumesPersistentVolumeClaimArgs and BuildSpecTasksImageVolumesPersistentVolumeClaimOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesPersistentVolumeClaimInput` via:
//
//          BuildSpecTasksImageVolumesPersistentVolumeClaimArgs{...}
type BuildSpecTasksImageVolumesPersistentVolumeClaimInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimOutput
	ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutputWithContext(context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimOutput
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type BuildSpecTasksImageVolumesPersistentVolumeClaimArgs struct {
	// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName pulumi.StringInput `pulumi:"claimName"`
	// Will force the ReadOnly setting in VolumeMounts. Default false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (BuildSpecTasksImageVolumesPersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimOutput {
	return i.ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPersistentVolumeClaimOutput)
}

func (i BuildSpecTasksImageVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return i.ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesPersistentVolumeClaimArgs) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPersistentVolumeClaimOutput).ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesPersistentVolumeClaimPtrInput is an input type that accepts BuildSpecTasksImageVolumesPersistentVolumeClaimArgs, BuildSpecTasksImageVolumesPersistentVolumeClaimPtr and BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesPersistentVolumeClaimPtrInput` via:
//
//          BuildSpecTasksImageVolumesPersistentVolumeClaimArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesPersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput
	ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput
}

type buildSpecTasksImageVolumesPersistentVolumeClaimPtrType BuildSpecTasksImageVolumesPersistentVolumeClaimArgs

func BuildSpecTasksImageVolumesPersistentVolumeClaimPtr(v *BuildSpecTasksImageVolumesPersistentVolumeClaimArgs) BuildSpecTasksImageVolumesPersistentVolumeClaimPtrInput {
	return (*buildSpecTasksImageVolumesPersistentVolumeClaimPtrType)(v)
}

func (*buildSpecTasksImageVolumesPersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesPersistentVolumeClaimPtrType) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return i.ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesPersistentVolumeClaimPtrType) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput)
}

// PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type BuildSpecTasksImageVolumesPersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksImageVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return o.ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPersistentVolumeClaim) *BuildSpecTasksImageVolumesPersistentVolumeClaim {
		return &v
	}).(BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput)
}

// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ClaimName() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPersistentVolumeClaim) string { return v.ClaimName }).(pulumi.StringOutput)
}

// Will force the ReadOnly setting in VolumeMounts. Default false.
func (o BuildSpecTasksImageVolumesPersistentVolumeClaimOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPersistentVolumeClaim) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput() BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput) ToBuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput) Elem() BuildSpecTasksImageVolumesPersistentVolumeClaimOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPersistentVolumeClaim) BuildSpecTasksImageVolumesPersistentVolumeClaim {
		return *v
	}).(BuildSpecTasksImageVolumesPersistentVolumeClaimOutput)
}

// ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPersistentVolumeClaim) *string {
		if v == nil {
			return nil
		}
		return &v.ClaimName
	}).(pulumi.StringPtrOutput)
}

// Will force the ReadOnly setting in VolumeMounts. Default false.
func (o BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPersistentVolumeClaim) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesPhotonPersistentDisk struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// ID that identifies Photon Controller persistent disk
	PdID string `pulumi:"pdID"`
}

// BuildSpecTasksImageVolumesPhotonPersistentDiskInput is an input type that accepts BuildSpecTasksImageVolumesPhotonPersistentDiskArgs and BuildSpecTasksImageVolumesPhotonPersistentDiskOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesPhotonPersistentDiskInput` via:
//
//          BuildSpecTasksImageVolumesPhotonPersistentDiskArgs{...}
type BuildSpecTasksImageVolumesPhotonPersistentDiskInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskOutput
	ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutputWithContext(context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskOutput
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesPhotonPersistentDiskArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// ID that identifies Photon Controller persistent disk
	PdID pulumi.StringInput `pulumi:"pdID"`
}

func (BuildSpecTasksImageVolumesPhotonPersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskOutput {
	return i.ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPhotonPersistentDiskOutput)
}

func (i BuildSpecTasksImageVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return i.ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesPhotonPersistentDiskArgs) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPhotonPersistentDiskOutput).ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesPhotonPersistentDiskPtrInput is an input type that accepts BuildSpecTasksImageVolumesPhotonPersistentDiskArgs, BuildSpecTasksImageVolumesPhotonPersistentDiskPtr and BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesPhotonPersistentDiskPtrInput` via:
//
//          BuildSpecTasksImageVolumesPhotonPersistentDiskArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesPhotonPersistentDiskPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput
	ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput
}

type buildSpecTasksImageVolumesPhotonPersistentDiskPtrType BuildSpecTasksImageVolumesPhotonPersistentDiskArgs

func BuildSpecTasksImageVolumesPhotonPersistentDiskPtr(v *BuildSpecTasksImageVolumesPhotonPersistentDiskArgs) BuildSpecTasksImageVolumesPhotonPersistentDiskPtrInput {
	return (*buildSpecTasksImageVolumesPhotonPersistentDiskPtrType)(v)
}

func (*buildSpecTasksImageVolumesPhotonPersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesPhotonPersistentDiskPtrType) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return i.ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesPhotonPersistentDiskPtrType) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput)
}

// PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesPhotonPersistentDiskOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksImageVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return o.ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPhotonPersistentDisk) *BuildSpecTasksImageVolumesPhotonPersistentDisk {
		return &v
	}).(BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPhotonPersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// ID that identifies Photon Controller persistent disk
func (o BuildSpecTasksImageVolumesPhotonPersistentDiskOutput) PdID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPhotonPersistentDisk) string { return v.PdID }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput() BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput) ToBuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput) Elem() BuildSpecTasksImageVolumesPhotonPersistentDiskOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPhotonPersistentDisk) BuildSpecTasksImageVolumesPhotonPersistentDisk {
		return *v
	}).(BuildSpecTasksImageVolumesPhotonPersistentDiskOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// ID that identifies Photon Controller persistent disk
func (o BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return &v.PdID
	}).(pulumi.StringPtrOutput)
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesPortworxVolume struct {
	// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// VolumeID uniquely identifies a Portworx volume
	VolumeID string `pulumi:"volumeID"`
}

// BuildSpecTasksImageVolumesPortworxVolumeInput is an input type that accepts BuildSpecTasksImageVolumesPortworxVolumeArgs and BuildSpecTasksImageVolumesPortworxVolumeOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesPortworxVolumeInput` via:
//
//          BuildSpecTasksImageVolumesPortworxVolumeArgs{...}
type BuildSpecTasksImageVolumesPortworxVolumeInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesPortworxVolumeOutput() BuildSpecTasksImageVolumesPortworxVolumeOutput
	ToBuildSpecTasksImageVolumesPortworxVolumeOutputWithContext(context.Context) BuildSpecTasksImageVolumesPortworxVolumeOutput
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesPortworxVolumeArgs struct {
	// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// VolumeID uniquely identifies a Portworx volume
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (BuildSpecTasksImageVolumesPortworxVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesPortworxVolume)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesPortworxVolumeArgs) ToBuildSpecTasksImageVolumesPortworxVolumeOutput() BuildSpecTasksImageVolumesPortworxVolumeOutput {
	return i.ToBuildSpecTasksImageVolumesPortworxVolumeOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesPortworxVolumeArgs) ToBuildSpecTasksImageVolumesPortworxVolumeOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPortworxVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPortworxVolumeOutput)
}

func (i BuildSpecTasksImageVolumesPortworxVolumeArgs) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutput() BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return i.ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesPortworxVolumeArgs) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPortworxVolumeOutput).ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesPortworxVolumePtrInput is an input type that accepts BuildSpecTasksImageVolumesPortworxVolumeArgs, BuildSpecTasksImageVolumesPortworxVolumePtr and BuildSpecTasksImageVolumesPortworxVolumePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesPortworxVolumePtrInput` via:
//
//          BuildSpecTasksImageVolumesPortworxVolumeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesPortworxVolumePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesPortworxVolumePtrOutput() BuildSpecTasksImageVolumesPortworxVolumePtrOutput
	ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesPortworxVolumePtrOutput
}

type buildSpecTasksImageVolumesPortworxVolumePtrType BuildSpecTasksImageVolumesPortworxVolumeArgs

func BuildSpecTasksImageVolumesPortworxVolumePtr(v *BuildSpecTasksImageVolumesPortworxVolumeArgs) BuildSpecTasksImageVolumesPortworxVolumePtrInput {
	return (*buildSpecTasksImageVolumesPortworxVolumePtrType)(v)
}

func (*buildSpecTasksImageVolumesPortworxVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesPortworxVolume)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesPortworxVolumePtrType) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutput() BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return i.ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesPortworxVolumePtrType) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesPortworxVolumePtrOutput)
}

// PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesPortworxVolumeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesPortworxVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesPortworxVolume)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) ToBuildSpecTasksImageVolumesPortworxVolumeOutput() BuildSpecTasksImageVolumesPortworxVolumeOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) ToBuildSpecTasksImageVolumesPortworxVolumeOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPortworxVolumeOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutput() BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return o.ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPortworxVolume) *BuildSpecTasksImageVolumesPortworxVolume {
		return &v
	}).(BuildSpecTasksImageVolumesPortworxVolumePtrOutput)
}

// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPortworxVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPortworxVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// VolumeID uniquely identifies a Portworx volume
func (o BuildSpecTasksImageVolumesPortworxVolumeOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesPortworxVolume) string { return v.VolumeID }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesPortworxVolumePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesPortworxVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesPortworxVolume)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesPortworxVolumePtrOutput) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutput() BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPortworxVolumePtrOutput) ToBuildSpecTasksImageVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesPortworxVolumePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesPortworxVolumePtrOutput) Elem() BuildSpecTasksImageVolumesPortworxVolumeOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPortworxVolume) BuildSpecTasksImageVolumesPortworxVolume { return *v }).(BuildSpecTasksImageVolumesPortworxVolumeOutput)
}

// FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesPortworxVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesPortworxVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPortworxVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// VolumeID uniquely identifies a Portworx volume
func (o BuildSpecTasksImageVolumesPortworxVolumePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// Items for all in one resources secrets, configmaps, and downward API
type BuildSpecTasksImageVolumesProjected struct {
	// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// list of volume projections
	Sources []BuildSpecTasksImageVolumesProjectedSources `pulumi:"sources"`
}

// BuildSpecTasksImageVolumesProjectedInput is an input type that accepts BuildSpecTasksImageVolumesProjectedArgs and BuildSpecTasksImageVolumesProjectedOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedInput` via:
//
//          BuildSpecTasksImageVolumesProjectedArgs{...}
type BuildSpecTasksImageVolumesProjectedInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedOutput() BuildSpecTasksImageVolumesProjectedOutput
	ToBuildSpecTasksImageVolumesProjectedOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedOutput
}

// Items for all in one resources secrets, configmaps, and downward API
type BuildSpecTasksImageVolumesProjectedArgs struct {
	// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// list of volume projections
	Sources BuildSpecTasksImageVolumesProjectedSourcesArrayInput `pulumi:"sources"`
}

func (BuildSpecTasksImageVolumesProjectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjected)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedArgs) ToBuildSpecTasksImageVolumesProjectedOutput() BuildSpecTasksImageVolumesProjectedOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedArgs) ToBuildSpecTasksImageVolumesProjectedOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedOutput)
}

func (i BuildSpecTasksImageVolumesProjectedArgs) ToBuildSpecTasksImageVolumesProjectedPtrOutput() BuildSpecTasksImageVolumesProjectedPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedArgs) ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedOutput).ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedArgs, BuildSpecTasksImageVolumesProjectedPtr and BuildSpecTasksImageVolumesProjectedPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedPtrOutput() BuildSpecTasksImageVolumesProjectedPtrOutput
	ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedPtrOutput
}

type buildSpecTasksImageVolumesProjectedPtrType BuildSpecTasksImageVolumesProjectedArgs

func BuildSpecTasksImageVolumesProjectedPtr(v *BuildSpecTasksImageVolumesProjectedArgs) BuildSpecTasksImageVolumesProjectedPtrInput {
	return (*buildSpecTasksImageVolumesProjectedPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjected)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedPtrType) ToBuildSpecTasksImageVolumesProjectedPtrOutput() BuildSpecTasksImageVolumesProjectedPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedPtrType) ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedPtrOutput)
}

// Items for all in one resources secrets, configmaps, and downward API
type BuildSpecTasksImageVolumesProjectedOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjected)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedOutput) ToBuildSpecTasksImageVolumesProjectedOutput() BuildSpecTasksImageVolumesProjectedOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedOutput) ToBuildSpecTasksImageVolumesProjectedOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedOutput) ToBuildSpecTasksImageVolumesProjectedPtrOutput() BuildSpecTasksImageVolumesProjectedPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedOutput) ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjected) *BuildSpecTasksImageVolumesProjected {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedPtrOutput)
}

// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesProjectedOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjected) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// list of volume projections
func (o BuildSpecTasksImageVolumesProjectedOutput) Sources() BuildSpecTasksImageVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjected) []BuildSpecTasksImageVolumesProjectedSources {
		return v.Sources
	}).(BuildSpecTasksImageVolumesProjectedSourcesArrayOutput)
}

type BuildSpecTasksImageVolumesProjectedPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjected)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedPtrOutput) ToBuildSpecTasksImageVolumesProjectedPtrOutput() BuildSpecTasksImageVolumesProjectedPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedPtrOutput) ToBuildSpecTasksImageVolumesProjectedPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjected) BuildSpecTasksImageVolumesProjected { return *v }).(BuildSpecTasksImageVolumesProjectedOutput)
}

// Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesProjectedPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjected) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// list of volume projections
func (o BuildSpecTasksImageVolumesProjectedPtrOutput) Sources() BuildSpecTasksImageVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjected) []BuildSpecTasksImageVolumesProjectedSources {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(BuildSpecTasksImageVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types
type BuildSpecTasksImageVolumesProjectedSources struct {
	// information about the configMap data to project
	ConfigMap *BuildSpecTasksImageVolumesProjectedSourcesConfigMap `pulumi:"configMap"`
	// information about the downwardAPI data to project
	DownwardAPI *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI `pulumi:"downwardAPI"`
	// information about the secret data to project
	Secret *BuildSpecTasksImageVolumesProjectedSourcesSecret `pulumi:"secret"`
	// information about the serviceAccountToken data to project
	ServiceAccountToken *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken `pulumi:"serviceAccountToken"`
}

// BuildSpecTasksImageVolumesProjectedSourcesInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesArgs and BuildSpecTasksImageVolumesProjectedSourcesOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesOutput() BuildSpecTasksImageVolumesProjectedSourcesOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesOutput
}

// Projection that may be projected along with other supported volume types
type BuildSpecTasksImageVolumesProjectedSourcesArgs struct {
	// information about the configMap data to project
	ConfigMap BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrInput `pulumi:"configMap"`
	// information about the downwardAPI data to project
	DownwardAPI BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrInput `pulumi:"downwardAPI"`
	// information about the secret data to project
	Secret BuildSpecTasksImageVolumesProjectedSourcesSecretPtrInput `pulumi:"secret"`
	// information about the serviceAccountToken data to project
	ServiceAccountToken BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrInput `pulumi:"serviceAccountToken"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSources)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesArgs) ToBuildSpecTasksImageVolumesProjectedSourcesOutput() BuildSpecTasksImageVolumesProjectedSourcesOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesArgs) ToBuildSpecTasksImageVolumesProjectedSourcesOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesOutput)
}

// BuildSpecTasksImageVolumesProjectedSourcesArrayInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesArray and BuildSpecTasksImageVolumesProjectedSourcesArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesArrayInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesArray{ BuildSpecTasksImageVolumesProjectedSourcesArgs{...} }
type BuildSpecTasksImageVolumesProjectedSourcesArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesArrayOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesArrayOutput
}

type BuildSpecTasksImageVolumesProjectedSourcesArray []BuildSpecTasksImageVolumesProjectedSourcesInput

func (BuildSpecTasksImageVolumesProjectedSourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSources)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesArray) ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesArrayOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesArray) ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types
type BuildSpecTasksImageVolumesProjectedSourcesOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSources)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesOutput) ToBuildSpecTasksImageVolumesProjectedSourcesOutput() BuildSpecTasksImageVolumesProjectedSourcesOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesOutput) ToBuildSpecTasksImageVolumesProjectedSourcesOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesOutput {
	return o
}

// information about the configMap data to project
func (o BuildSpecTasksImageVolumesProjectedSourcesOutput) ConfigMap() BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSources) *BuildSpecTasksImageVolumesProjectedSourcesConfigMap {
		return v.ConfigMap
	}).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput)
}

// information about the downwardAPI data to project
func (o BuildSpecTasksImageVolumesProjectedSourcesOutput) DownwardAPI() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSources) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI {
		return v.DownwardAPI
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// information about the secret data to project
func (o BuildSpecTasksImageVolumesProjectedSourcesOutput) Secret() BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSources) *BuildSpecTasksImageVolumesProjectedSourcesSecret {
		return v.Secret
	}).(BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput)
}

// information about the serviceAccountToken data to project
func (o BuildSpecTasksImageVolumesProjectedSourcesOutput) ServiceAccountToken() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSources) *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken {
		return v.ServiceAccountToken
	}).(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSources)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesProjectedSourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesProjectedSources {
		return vs[0].([]BuildSpecTasksImageVolumesProjectedSources)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesProjectedSourcesOutput)
}

// information about the configMap data to project
type BuildSpecTasksImageVolumesProjectedSourcesConfigMap struct {
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksImageVolumesProjectedSourcesConfigMapInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesConfigMap and BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesConfigMapInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesConfigMap{ "key": BuildSpecTasksImageVolumesProjectedSourcesConfigArgs{...} }
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput
}

// information about the configMap data to project
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs struct {
	// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput).ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs, BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtr and BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesConfigMapPtrType BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs

func BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtr(v *BuildSpecTasksImageVolumesProjectedSourcesConfigMapArgs) BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesConfigMapPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesConfigMapPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesConfigMapPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput)
}

// information about the configMap data to project
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMap) *BuildSpecTasksImageVolumesProjectedSourcesConfigMap {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) Items() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMap) []BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems {
		return v.Items
	}).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesConfigMap) BuildSpecTasksImageVolumesProjectedSourcesConfigMap {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) Items() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesConfigMap) []BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its keys must be defined
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs and BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput)
}

// BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArray and BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArray{ BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArgs{...} }
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput
}

type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArray []BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsInput

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArray) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArray) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems {
		return vs[0].([]BuildSpecTasksImageVolumesProjectedSourcesConfigMapItems)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput)
}

// information about the downwardAPI data to project
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI struct {
	// Items is a list of DownwardAPIVolume file
	Items []BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems `pulumi:"items"`
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput
}

// information about the downwardAPI data to project
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs struct {
	// Items is a list of DownwardAPIVolume file
	Items BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayInput `pulumi:"items"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput).ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs, BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtr and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrType BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs

func BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtr(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIArgs) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// information about the downwardAPI data to project
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput)
}

// Items is a list of DownwardAPIVolume file
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput) Items() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI) []BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems {
		return v.Items
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput)
}

// Items is a list of DownwardAPIVolume file
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput) Items() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPI) []BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path string `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs struct {
	// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
	FieldRef BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path pulumi.StringInput `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput)
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArray and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArray{ BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArgs{...} }
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArray []BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsInput

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArray) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArray) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput {
	return o
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) FieldRef() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return v.FieldRef
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems) string { return v.Path }).(pulumi.StringOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput) ResourceFieldRef() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems {
		return vs[0].([]BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItems)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput).ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs, BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtr and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs

func BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtr(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefArgs) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput).ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs, BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtr and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs

func BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtr(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefArgs) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) Divisor() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		return v.Divisor
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) string {
		return v.Resource
	}).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Divisor() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

// Required: resource to select
func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor struct {
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs struct {
}

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput).ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs, BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtr and BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs

func BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtr(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorArgs) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor) *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor) BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisor {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput)
}

// information about the secret data to project
type BuildSpecTasksImageVolumesProjectedSourcesSecret struct {
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksImageVolumesProjectedSourcesSecretItems `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildSpecTasksImageVolumesProjectedSourcesSecretInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesSecretArgs and BuildSpecTasksImageVolumesProjectedSourcesSecretOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesSecretInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesSecretArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesSecretInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretOutput
}

// information about the secret data to project
type BuildSpecTasksImageVolumesProjectedSourcesSecretArgs struct {
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayInput `pulumi:"items"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesSecretOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretArgs) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesSecretOutput).ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesSecretPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesSecretArgs, BuildSpecTasksImageVolumesProjectedSourcesSecretPtr and BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesSecretPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesSecretArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesSecretPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesSecretPtrType BuildSpecTasksImageVolumesProjectedSourcesSecretArgs

func BuildSpecTasksImageVolumesProjectedSourcesSecretPtr(v *BuildSpecTasksImageVolumesProjectedSourcesSecretArgs) BuildSpecTasksImageVolumesProjectedSourcesSecretPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesSecretPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesSecretPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesSecretPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput)
}

// information about the secret data to project
type BuildSpecTasksImageVolumesProjectedSourcesSecretOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecret) *BuildSpecTasksImageVolumesProjectedSourcesSecret {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) Items() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecret) []BuildSpecTasksImageVolumesProjectedSourcesSecretItems {
		return v.Items
	}).(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesSecretOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesSecret) BuildSpecTasksImageVolumesProjectedSourcesSecret {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesSecretOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) Items() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesSecret) []BuildSpecTasksImageVolumesProjectedSourcesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesProjectedSourcesSecretItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksImageVolumesProjectedSourcesSecretItemsInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs and BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesSecretItemsInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesSecretItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput)
}

// BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArray and BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArray{ BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArgs{...} }
type BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput
}

type BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArray []BuildSpecTasksImageVolumesProjectedSourcesSecretItemsInput

func (BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArray) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArray) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesSecretItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput() BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput) ToBuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesProjectedSourcesSecretItems {
		return vs[0].([]BuildSpecTasksImageVolumesProjectedSourcesSecretItems)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput)
}

// information about the serviceAccountToken data to project
type BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken struct {
	// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
	Audience *string `pulumi:"audience"`
	// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// Path is the path relative to the mount point of the file to project the token into.
	Path string `pulumi:"path"`
}

// BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs and BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs{...}
type BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput
}

// information about the serviceAccountToken data to project
type BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs struct {
	// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// Path is the path relative to the mount point of the file to project the token into.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput)
}

func (i BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput).ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrInput is an input type that accepts BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs, BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtr and BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrInput` via:
//
//          BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput
	ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput
}

type buildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrType BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs

func BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtr(v *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenArgs) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrInput {
	return (*buildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrType)(v)
}

func (*buildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrType) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// information about the serviceAccountToken data to project
type BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken {
		return &v
	}).(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) *int { return v.ExpirationSeconds }).(pulumi.IntPtrOutput)
}

// Path is the path relative to the mount point of the file to project the token into.
func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToBuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) Elem() BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken {
		return *v
	}).(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput)
}

// Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Path is the path relative to the mount point of the file to project the token into.
func (o BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type BuildSpecTasksImageVolumesQuobyte struct {
	// Group to map volume access to Default is no group
	Group *string `pulumi:"group"`
	// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
	Registry string `pulumi:"registry"`
	// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant *string `pulumi:"tenant"`
	// User to map volume access to Defaults to serivceaccount user
	User *string `pulumi:"user"`
	// Volume is a string that references an already created Quobyte volume by name.
	Volume string `pulumi:"volume"`
}

// BuildSpecTasksImageVolumesQuobyteInput is an input type that accepts BuildSpecTasksImageVolumesQuobyteArgs and BuildSpecTasksImageVolumesQuobyteOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesQuobyteInput` via:
//
//          BuildSpecTasksImageVolumesQuobyteArgs{...}
type BuildSpecTasksImageVolumesQuobyteInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesQuobyteOutput() BuildSpecTasksImageVolumesQuobyteOutput
	ToBuildSpecTasksImageVolumesQuobyteOutputWithContext(context.Context) BuildSpecTasksImageVolumesQuobyteOutput
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type BuildSpecTasksImageVolumesQuobyteArgs struct {
	// Group to map volume access to Default is no group
	Group pulumi.StringPtrInput `pulumi:"group"`
	// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
	Registry pulumi.StringInput `pulumi:"registry"`
	// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// User to map volume access to Defaults to serivceaccount user
	User pulumi.StringPtrInput `pulumi:"user"`
	// Volume is a string that references an already created Quobyte volume by name.
	Volume pulumi.StringInput `pulumi:"volume"`
}

func (BuildSpecTasksImageVolumesQuobyteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesQuobyte)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesQuobyteArgs) ToBuildSpecTasksImageVolumesQuobyteOutput() BuildSpecTasksImageVolumesQuobyteOutput {
	return i.ToBuildSpecTasksImageVolumesQuobyteOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesQuobyteArgs) ToBuildSpecTasksImageVolumesQuobyteOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesQuobyteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesQuobyteOutput)
}

func (i BuildSpecTasksImageVolumesQuobyteArgs) ToBuildSpecTasksImageVolumesQuobytePtrOutput() BuildSpecTasksImageVolumesQuobytePtrOutput {
	return i.ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesQuobyteArgs) ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesQuobyteOutput).ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesQuobytePtrInput is an input type that accepts BuildSpecTasksImageVolumesQuobyteArgs, BuildSpecTasksImageVolumesQuobytePtr and BuildSpecTasksImageVolumesQuobytePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesQuobytePtrInput` via:
//
//          BuildSpecTasksImageVolumesQuobyteArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesQuobytePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesQuobytePtrOutput() BuildSpecTasksImageVolumesQuobytePtrOutput
	ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesQuobytePtrOutput
}

type buildSpecTasksImageVolumesQuobytePtrType BuildSpecTasksImageVolumesQuobyteArgs

func BuildSpecTasksImageVolumesQuobytePtr(v *BuildSpecTasksImageVolumesQuobyteArgs) BuildSpecTasksImageVolumesQuobytePtrInput {
	return (*buildSpecTasksImageVolumesQuobytePtrType)(v)
}

func (*buildSpecTasksImageVolumesQuobytePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesQuobyte)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesQuobytePtrType) ToBuildSpecTasksImageVolumesQuobytePtrOutput() BuildSpecTasksImageVolumesQuobytePtrOutput {
	return i.ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesQuobytePtrType) ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesQuobytePtrOutput)
}

// Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type BuildSpecTasksImageVolumesQuobyteOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesQuobyteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesQuobyte)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesQuobyteOutput) ToBuildSpecTasksImageVolumesQuobyteOutput() BuildSpecTasksImageVolumesQuobyteOutput {
	return o
}

func (o BuildSpecTasksImageVolumesQuobyteOutput) ToBuildSpecTasksImageVolumesQuobyteOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesQuobyteOutput {
	return o
}

func (o BuildSpecTasksImageVolumesQuobyteOutput) ToBuildSpecTasksImageVolumesQuobytePtrOutput() BuildSpecTasksImageVolumesQuobytePtrOutput {
	return o.ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesQuobyteOutput) ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesQuobytePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) *BuildSpecTasksImageVolumesQuobyte {
		return &v
	}).(BuildSpecTasksImageVolumesQuobytePtrOutput)
}

// Group to map volume access to Default is no group
func (o BuildSpecTasksImageVolumesQuobyteOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
func (o BuildSpecTasksImageVolumesQuobyteOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
func (o BuildSpecTasksImageVolumesQuobyteOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) string { return v.Registry }).(pulumi.StringOutput)
}

// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o BuildSpecTasksImageVolumesQuobyteOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// User to map volume access to Defaults to serivceaccount user
func (o BuildSpecTasksImageVolumesQuobyteOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Volume is a string that references an already created Quobyte volume by name.
func (o BuildSpecTasksImageVolumesQuobyteOutput) Volume() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesQuobyte) string { return v.Volume }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesQuobytePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesQuobytePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesQuobyte)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesQuobytePtrOutput) ToBuildSpecTasksImageVolumesQuobytePtrOutput() BuildSpecTasksImageVolumesQuobytePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesQuobytePtrOutput) ToBuildSpecTasksImageVolumesQuobytePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesQuobytePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesQuobytePtrOutput) Elem() BuildSpecTasksImageVolumesQuobyteOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) BuildSpecTasksImageVolumesQuobyte { return *v }).(BuildSpecTasksImageVolumesQuobyteOutput)
}

// Group to map volume access to Default is no group
func (o BuildSpecTasksImageVolumesQuobytePtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
func (o BuildSpecTasksImageVolumesQuobytePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
func (o BuildSpecTasksImageVolumesQuobytePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o BuildSpecTasksImageVolumesQuobytePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// User to map volume access to Defaults to serivceaccount user
func (o BuildSpecTasksImageVolumesQuobytePtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Volume is a string that references an already created Quobyte volume by name.
func (o BuildSpecTasksImageVolumesQuobytePtrOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return &v.Volume
	}).(pulumi.StringPtrOutput)
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
type BuildSpecTasksImageVolumesRbd struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image string `pulumi:"image"`
	// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring *string `pulumi:"keyring"`
	// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool *string `pulumi:"pool"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly *bool `pulumi:"readOnly"`
	// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	SecretRef *BuildSpecTasksImageVolumesRbdSecretRef `pulumi:"secretRef"`
	// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// BuildSpecTasksImageVolumesRbdInput is an input type that accepts BuildSpecTasksImageVolumesRbdArgs and BuildSpecTasksImageVolumesRbdOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesRbdInput` via:
//
//          BuildSpecTasksImageVolumesRbdArgs{...}
type BuildSpecTasksImageVolumesRbdInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesRbdOutput() BuildSpecTasksImageVolumesRbdOutput
	ToBuildSpecTasksImageVolumesRbdOutputWithContext(context.Context) BuildSpecTasksImageVolumesRbdOutput
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
type BuildSpecTasksImageVolumesRbdArgs struct {
	// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image pulumi.StringInput `pulumi:"image"`
	// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring pulumi.StringPtrInput `pulumi:"keyring"`
	// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool pulumi.StringPtrInput `pulumi:"pool"`
	// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	SecretRef BuildSpecTasksImageVolumesRbdSecretRefPtrInput `pulumi:"secretRef"`
	// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (BuildSpecTasksImageVolumesRbdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesRbd)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesRbdArgs) ToBuildSpecTasksImageVolumesRbdOutput() BuildSpecTasksImageVolumesRbdOutput {
	return i.ToBuildSpecTasksImageVolumesRbdOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesRbdArgs) ToBuildSpecTasksImageVolumesRbdOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesRbdOutput)
}

func (i BuildSpecTasksImageVolumesRbdArgs) ToBuildSpecTasksImageVolumesRbdPtrOutput() BuildSpecTasksImageVolumesRbdPtrOutput {
	return i.ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesRbdArgs) ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesRbdOutput).ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesRbdPtrInput is an input type that accepts BuildSpecTasksImageVolumesRbdArgs, BuildSpecTasksImageVolumesRbdPtr and BuildSpecTasksImageVolumesRbdPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesRbdPtrInput` via:
//
//          BuildSpecTasksImageVolumesRbdArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesRbdPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesRbdPtrOutput() BuildSpecTasksImageVolumesRbdPtrOutput
	ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesRbdPtrOutput
}

type buildSpecTasksImageVolumesRbdPtrType BuildSpecTasksImageVolumesRbdArgs

func BuildSpecTasksImageVolumesRbdPtr(v *BuildSpecTasksImageVolumesRbdArgs) BuildSpecTasksImageVolumesRbdPtrInput {
	return (*buildSpecTasksImageVolumesRbdPtrType)(v)
}

func (*buildSpecTasksImageVolumesRbdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesRbd)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesRbdPtrType) ToBuildSpecTasksImageVolumesRbdPtrOutput() BuildSpecTasksImageVolumesRbdPtrOutput {
	return i.ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesRbdPtrType) ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesRbdPtrOutput)
}

// RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
type BuildSpecTasksImageVolumesRbdOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesRbdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesRbd)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesRbdOutput) ToBuildSpecTasksImageVolumesRbdOutput() BuildSpecTasksImageVolumesRbdOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdOutput) ToBuildSpecTasksImageVolumesRbdOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdOutput) ToBuildSpecTasksImageVolumesRbdPtrOutput() BuildSpecTasksImageVolumesRbdPtrOutput {
	return o.ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesRbdOutput) ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *BuildSpecTasksImageVolumesRbd {
		return &v
	}).(BuildSpecTasksImageVolumesRbdPtrOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesRbdOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) string { return v.Image }).(pulumi.StringOutput)
}

// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *string { return v.Keyring }).(pulumi.StringPtrOutput)
}

// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) SecretRef() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *BuildSpecTasksImageVolumesRbdSecretRef { return v.SecretRef }).(BuildSpecTasksImageVolumesRbdSecretRefPtrOutput)
}

// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbd) *string { return v.User }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesRbdPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesRbdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesRbd)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesRbdPtrOutput) ToBuildSpecTasksImageVolumesRbdPtrOutput() BuildSpecTasksImageVolumesRbdPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdPtrOutput) ToBuildSpecTasksImageVolumesRbdPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdPtrOutput) Elem() BuildSpecTasksImageVolumesRbdOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) BuildSpecTasksImageVolumesRbd { return *v }).(BuildSpecTasksImageVolumesRbdOutput)
}

// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
func (o BuildSpecTasksImageVolumesRbdPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Keyring
	}).(pulumi.StringPtrOutput)
}

// A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Pool
	}).(pulumi.StringPtrOutput)
}

// ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) SecretRef() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *BuildSpecTasksImageVolumesRbdSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesRbdSecretRefPtrOutput)
}

// The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o BuildSpecTasksImageVolumesRbdPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type BuildSpecTasksImageVolumesRbdSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesRbdSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesRbdSecretRefArgs and BuildSpecTasksImageVolumesRbdSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesRbdSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesRbdSecretRefArgs{...}
type BuildSpecTasksImageVolumesRbdSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesRbdSecretRefOutput() BuildSpecTasksImageVolumesRbdSecretRefOutput
	ToBuildSpecTasksImageVolumesRbdSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesRbdSecretRefOutput
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type BuildSpecTasksImageVolumesRbdSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesRbdSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesRbdSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesRbdSecretRefArgs) ToBuildSpecTasksImageVolumesRbdSecretRefOutput() BuildSpecTasksImageVolumesRbdSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesRbdSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesRbdSecretRefArgs) ToBuildSpecTasksImageVolumesRbdSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesRbdSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesRbdSecretRefArgs) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutput() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesRbdSecretRefArgs) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesRbdSecretRefOutput).ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesRbdSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesRbdSecretRefArgs, BuildSpecTasksImageVolumesRbdSecretRefPtr and BuildSpecTasksImageVolumesRbdSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesRbdSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesRbdSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesRbdSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutput() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesRbdSecretRefPtrOutput
}

type buildSpecTasksImageVolumesRbdSecretRefPtrType BuildSpecTasksImageVolumesRbdSecretRefArgs

func BuildSpecTasksImageVolumesRbdSecretRefPtr(v *BuildSpecTasksImageVolumesRbdSecretRefArgs) BuildSpecTasksImageVolumesRbdSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesRbdSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesRbdSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesRbdSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesRbdSecretRefPtrType) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutput() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesRbdSecretRefPtrType) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesRbdSecretRefPtrOutput)
}

// SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type BuildSpecTasksImageVolumesRbdSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesRbdSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesRbdSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesRbdSecretRefOutput) ToBuildSpecTasksImageVolumesRbdSecretRefOutput() BuildSpecTasksImageVolumesRbdSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdSecretRefOutput) ToBuildSpecTasksImageVolumesRbdSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdSecretRefOutput) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutput() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesRbdSecretRefOutput) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbdSecretRef) *BuildSpecTasksImageVolumesRbdSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesRbdSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesRbdSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesRbdSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesRbdSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesRbdSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesRbdSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesRbdSecretRefPtrOutput) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutput() BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdSecretRefPtrOutput) ToBuildSpecTasksImageVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesRbdSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesRbdSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesRbdSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbdSecretRef) BuildSpecTasksImageVolumesRbdSecretRef { return *v }).(BuildSpecTasksImageVolumesRbdSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesRbdSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesRbdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksImageVolumesScaleIO struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
	FsType *string `pulumi:"fsType"`
	// The host address of the ScaleIO API Gateway.
	Gateway string `pulumi:"gateway"`
	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `pulumi:"protectionDomain"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
	SecretRef BuildSpecTasksImageVolumesScaleIOSecretRef `pulumi:"secretRef"`
	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
	StorageMode *string `pulumi:"storageMode"`
	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `pulumi:"storagePool"`
	// The name of the storage system as configured in ScaleIO.
	System string `pulumi:"system"`
	// The name of a volume already created in the ScaleIO system that is associated with this volume source.
	VolumeName *string `pulumi:"volumeName"`
}

// BuildSpecTasksImageVolumesScaleIOInput is an input type that accepts BuildSpecTasksImageVolumesScaleIOArgs and BuildSpecTasksImageVolumesScaleIOOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesScaleIOInput` via:
//
//          BuildSpecTasksImageVolumesScaleIOArgs{...}
type BuildSpecTasksImageVolumesScaleIOInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesScaleIOOutput() BuildSpecTasksImageVolumesScaleIOOutput
	ToBuildSpecTasksImageVolumesScaleIOOutputWithContext(context.Context) BuildSpecTasksImageVolumesScaleIOOutput
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksImageVolumesScaleIOArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// The host address of the ScaleIO API Gateway.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain pulumi.StringPtrInput `pulumi:"protectionDomain"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
	SecretRef BuildSpecTasksImageVolumesScaleIOSecretRefInput `pulumi:"secretRef"`
	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
	StorageMode pulumi.StringPtrInput `pulumi:"storageMode"`
	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool pulumi.StringPtrInput `pulumi:"storagePool"`
	// The name of the storage system as configured in ScaleIO.
	System pulumi.StringInput `pulumi:"system"`
	// The name of a volume already created in the ScaleIO system that is associated with this volume source.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (BuildSpecTasksImageVolumesScaleIOArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesScaleIO)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesScaleIOArgs) ToBuildSpecTasksImageVolumesScaleIOOutput() BuildSpecTasksImageVolumesScaleIOOutput {
	return i.ToBuildSpecTasksImageVolumesScaleIOOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesScaleIOArgs) ToBuildSpecTasksImageVolumesScaleIOOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesScaleIOOutput)
}

func (i BuildSpecTasksImageVolumesScaleIOArgs) ToBuildSpecTasksImageVolumesScaleIOPtrOutput() BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return i.ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesScaleIOArgs) ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesScaleIOOutput).ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesScaleIOPtrInput is an input type that accepts BuildSpecTasksImageVolumesScaleIOArgs, BuildSpecTasksImageVolumesScaleIOPtr and BuildSpecTasksImageVolumesScaleIOPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesScaleIOPtrInput` via:
//
//          BuildSpecTasksImageVolumesScaleIOArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesScaleIOPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesScaleIOPtrOutput() BuildSpecTasksImageVolumesScaleIOPtrOutput
	ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesScaleIOPtrOutput
}

type buildSpecTasksImageVolumesScaleIOPtrType BuildSpecTasksImageVolumesScaleIOArgs

func BuildSpecTasksImageVolumesScaleIOPtr(v *BuildSpecTasksImageVolumesScaleIOArgs) BuildSpecTasksImageVolumesScaleIOPtrInput {
	return (*buildSpecTasksImageVolumesScaleIOPtrType)(v)
}

func (*buildSpecTasksImageVolumesScaleIOPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesScaleIO)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesScaleIOPtrType) ToBuildSpecTasksImageVolumesScaleIOPtrOutput() BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return i.ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesScaleIOPtrType) ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesScaleIOPtrOutput)
}

// ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksImageVolumesScaleIOOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesScaleIOOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesScaleIO)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesScaleIOOutput) ToBuildSpecTasksImageVolumesScaleIOOutput() BuildSpecTasksImageVolumesScaleIOOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOOutput) ToBuildSpecTasksImageVolumesScaleIOOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOOutput) ToBuildSpecTasksImageVolumesScaleIOPtrOutput() BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return o.ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesScaleIOOutput) ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *BuildSpecTasksImageVolumesScaleIO {
		return &v
	}).(BuildSpecTasksImageVolumesScaleIOPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
func (o BuildSpecTasksImageVolumesScaleIOOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// The host address of the ScaleIO API Gateway.
func (o BuildSpecTasksImageVolumesScaleIOOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) string { return v.Gateway }).(pulumi.StringOutput)
}

// The name of the ScaleIO Protection Domain for the configured storage.
func (o BuildSpecTasksImageVolumesScaleIOOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *string { return v.ProtectionDomain }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesScaleIOOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
func (o BuildSpecTasksImageVolumesScaleIOOutput) SecretRef() BuildSpecTasksImageVolumesScaleIOSecretRefOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) BuildSpecTasksImageVolumesScaleIOSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesScaleIOSecretRefOutput)
}

// Flag to enable/disable SSL communication with Gateway, default false
func (o BuildSpecTasksImageVolumesScaleIOOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
func (o BuildSpecTasksImageVolumesScaleIOOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *string { return v.StorageMode }).(pulumi.StringPtrOutput)
}

// The ScaleIO Storage Pool associated with the protection domain.
func (o BuildSpecTasksImageVolumesScaleIOOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *string { return v.StoragePool }).(pulumi.StringPtrOutput)
}

// The name of the storage system as configured in ScaleIO.
func (o BuildSpecTasksImageVolumesScaleIOOutput) System() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) string { return v.System }).(pulumi.StringOutput)
}

// The name of a volume already created in the ScaleIO system that is associated with this volume source.
func (o BuildSpecTasksImageVolumesScaleIOOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIO) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesScaleIOPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesScaleIOPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesScaleIO)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) ToBuildSpecTasksImageVolumesScaleIOPtrOutput() BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) ToBuildSpecTasksImageVolumesScaleIOPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) Elem() BuildSpecTasksImageVolumesScaleIOOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) BuildSpecTasksImageVolumesScaleIO { return *v }).(BuildSpecTasksImageVolumesScaleIOOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// The host address of the ScaleIO API Gateway.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return &v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The name of the ScaleIO Protection Domain for the configured storage.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionDomain
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) SecretRef() BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *BuildSpecTasksImageVolumesScaleIOSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput)
}

// Flag to enable/disable SSL communication with Gateway, default false
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.StorageMode
	}).(pulumi.StringPtrOutput)
}

// The ScaleIO Storage Pool associated with the protection domain.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.StoragePool
	}).(pulumi.StringPtrOutput)
}

// The name of the storage system as configured in ScaleIO.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return &v.System
	}).(pulumi.StringPtrOutput)
}

// The name of a volume already created in the ScaleIO system that is associated with this volume source.
func (o BuildSpecTasksImageVolumesScaleIOPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIO) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
type BuildSpecTasksImageVolumesScaleIOSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesScaleIOSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesScaleIOSecretRefArgs and BuildSpecTasksImageVolumesScaleIOSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesScaleIOSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesScaleIOSecretRefArgs{...}
type BuildSpecTasksImageVolumesScaleIOSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesScaleIOSecretRefOutput() BuildSpecTasksImageVolumesScaleIOSecretRefOutput
	ToBuildSpecTasksImageVolumesScaleIOSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefOutput
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
type BuildSpecTasksImageVolumesScaleIOSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesScaleIOSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesScaleIOSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesScaleIOSecretRefArgs) ToBuildSpecTasksImageVolumesScaleIOSecretRefOutput() BuildSpecTasksImageVolumesScaleIOSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesScaleIOSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesScaleIOSecretRefArgs) ToBuildSpecTasksImageVolumesScaleIOSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesScaleIOSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesScaleIOSecretRefArgs) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesScaleIOSecretRefArgs) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesScaleIOSecretRefOutput).ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesScaleIOSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesScaleIOSecretRefArgs, BuildSpecTasksImageVolumesScaleIOSecretRefPtr and BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesScaleIOSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesScaleIOSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesScaleIOSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput
}

type buildSpecTasksImageVolumesScaleIOSecretRefPtrType BuildSpecTasksImageVolumesScaleIOSecretRefArgs

func BuildSpecTasksImageVolumesScaleIOSecretRefPtr(v *BuildSpecTasksImageVolumesScaleIOSecretRefArgs) BuildSpecTasksImageVolumesScaleIOSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesScaleIOSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesScaleIOSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesScaleIOSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesScaleIOSecretRefPtrType) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesScaleIOSecretRefPtrType) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput)
}

// SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
type BuildSpecTasksImageVolumesScaleIOSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesScaleIOSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesScaleIOSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefOutput) ToBuildSpecTasksImageVolumesScaleIOSecretRefOutput() BuildSpecTasksImageVolumesScaleIOSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefOutput) ToBuildSpecTasksImageVolumesScaleIOSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefOutput) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefOutput) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIOSecretRef) *BuildSpecTasksImageVolumesScaleIOSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesScaleIOSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesScaleIOSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesScaleIOSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput() BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput) ToBuildSpecTasksImageVolumesScaleIOSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesScaleIOSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIOSecretRef) BuildSpecTasksImageVolumesScaleIOSecretRef {
		return *v
	}).(BuildSpecTasksImageVolumesScaleIOSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesScaleIOSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type BuildSpecTasksImageVolumesSecret struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items []BuildSpecTasksImageVolumesSecretItems `pulumi:"items"`
	// Specify whether the Secret or its keys must be defined
	Optional *bool `pulumi:"optional"`
	// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName *string `pulumi:"secretName"`
}

// BuildSpecTasksImageVolumesSecretInput is an input type that accepts BuildSpecTasksImageVolumesSecretArgs and BuildSpecTasksImageVolumesSecretOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesSecretInput` via:
//
//          BuildSpecTasksImageVolumesSecretArgs{...}
type BuildSpecTasksImageVolumesSecretInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesSecretOutput() BuildSpecTasksImageVolumesSecretOutput
	ToBuildSpecTasksImageVolumesSecretOutputWithContext(context.Context) BuildSpecTasksImageVolumesSecretOutput
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type BuildSpecTasksImageVolumesSecretArgs struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
	Items BuildSpecTasksImageVolumesSecretItemsArrayInput `pulumi:"items"`
	// Specify whether the Secret or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (BuildSpecTasksImageVolumesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesSecret)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesSecretArgs) ToBuildSpecTasksImageVolumesSecretOutput() BuildSpecTasksImageVolumesSecretOutput {
	return i.ToBuildSpecTasksImageVolumesSecretOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesSecretArgs) ToBuildSpecTasksImageVolumesSecretOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesSecretOutput)
}

func (i BuildSpecTasksImageVolumesSecretArgs) ToBuildSpecTasksImageVolumesSecretPtrOutput() BuildSpecTasksImageVolumesSecretPtrOutput {
	return i.ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesSecretArgs) ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesSecretOutput).ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesSecretPtrInput is an input type that accepts BuildSpecTasksImageVolumesSecretArgs, BuildSpecTasksImageVolumesSecretPtr and BuildSpecTasksImageVolumesSecretPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesSecretPtrInput` via:
//
//          BuildSpecTasksImageVolumesSecretArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesSecretPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesSecretPtrOutput() BuildSpecTasksImageVolumesSecretPtrOutput
	ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesSecretPtrOutput
}

type buildSpecTasksImageVolumesSecretPtrType BuildSpecTasksImageVolumesSecretArgs

func BuildSpecTasksImageVolumesSecretPtr(v *BuildSpecTasksImageVolumesSecretArgs) BuildSpecTasksImageVolumesSecretPtrInput {
	return (*buildSpecTasksImageVolumesSecretPtrType)(v)
}

func (*buildSpecTasksImageVolumesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesSecret)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesSecretPtrType) ToBuildSpecTasksImageVolumesSecretPtrOutput() BuildSpecTasksImageVolumesSecretPtrOutput {
	return i.ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesSecretPtrType) ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesSecretPtrOutput)
}

// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type BuildSpecTasksImageVolumesSecretOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesSecret)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesSecretOutput) ToBuildSpecTasksImageVolumesSecretOutput() BuildSpecTasksImageVolumesSecretOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretOutput) ToBuildSpecTasksImageVolumesSecretOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretOutput) ToBuildSpecTasksImageVolumesSecretPtrOutput() BuildSpecTasksImageVolumesSecretPtrOutput {
	return o.ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesSecretOutput) ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecret) *BuildSpecTasksImageVolumesSecret {
		return &v
	}).(BuildSpecTasksImageVolumesSecretPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesSecretOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecret) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesSecretOutput) Items() BuildSpecTasksImageVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecret) []BuildSpecTasksImageVolumesSecretItems { return v.Items }).(BuildSpecTasksImageVolumesSecretItemsArrayOutput)
}

// Specify whether the Secret or its keys must be defined
func (o BuildSpecTasksImageVolumesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o BuildSpecTasksImageVolumesSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesSecretPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesSecret)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesSecretPtrOutput) ToBuildSpecTasksImageVolumesSecretPtrOutput() BuildSpecTasksImageVolumesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretPtrOutput) ToBuildSpecTasksImageVolumesSecretPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretPtrOutput) Elem() BuildSpecTasksImageVolumesSecretOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesSecret) BuildSpecTasksImageVolumesSecret { return *v }).(BuildSpecTasksImageVolumesSecretOutput)
}

// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesSecretPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesSecret) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
func (o BuildSpecTasksImageVolumesSecretPtrOutput) Items() BuildSpecTasksImageVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesSecret) []BuildSpecTasksImageVolumesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(BuildSpecTasksImageVolumesSecretItemsArrayOutput)
}

// Specify whether the Secret or its keys must be defined
func (o BuildSpecTasksImageVolumesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o BuildSpecTasksImageVolumesSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesSecretItems struct {
	// The key to project.
	Key string `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path string `pulumi:"path"`
}

// BuildSpecTasksImageVolumesSecretItemsInput is an input type that accepts BuildSpecTasksImageVolumesSecretItemsArgs and BuildSpecTasksImageVolumesSecretItemsOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesSecretItemsInput` via:
//
//          BuildSpecTasksImageVolumesSecretItemsArgs{...}
type BuildSpecTasksImageVolumesSecretItemsInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesSecretItemsOutput() BuildSpecTasksImageVolumesSecretItemsOutput
	ToBuildSpecTasksImageVolumesSecretItemsOutputWithContext(context.Context) BuildSpecTasksImageVolumesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesSecretItemsArgs struct {
	// The key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (BuildSpecTasksImageVolumesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesSecretItemsArgs) ToBuildSpecTasksImageVolumesSecretItemsOutput() BuildSpecTasksImageVolumesSecretItemsOutput {
	return i.ToBuildSpecTasksImageVolumesSecretItemsOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesSecretItemsArgs) ToBuildSpecTasksImageVolumesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesSecretItemsOutput)
}

// BuildSpecTasksImageVolumesSecretItemsArrayInput is an input type that accepts BuildSpecTasksImageVolumesSecretItemsArray and BuildSpecTasksImageVolumesSecretItemsArrayOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesSecretItemsArrayInput` via:
//
//          BuildSpecTasksImageVolumesSecretItemsArray{ BuildSpecTasksImageVolumesSecretItemsArgs{...} }
type BuildSpecTasksImageVolumesSecretItemsArrayInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesSecretItemsArrayOutput() BuildSpecTasksImageVolumesSecretItemsArrayOutput
	ToBuildSpecTasksImageVolumesSecretItemsArrayOutputWithContext(context.Context) BuildSpecTasksImageVolumesSecretItemsArrayOutput
}

type BuildSpecTasksImageVolumesSecretItemsArray []BuildSpecTasksImageVolumesSecretItemsInput

func (BuildSpecTasksImageVolumesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesSecretItems)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesSecretItemsArray) ToBuildSpecTasksImageVolumesSecretItemsArrayOutput() BuildSpecTasksImageVolumesSecretItemsArrayOutput {
	return i.ToBuildSpecTasksImageVolumesSecretItemsArrayOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesSecretItemsArray) ToBuildSpecTasksImageVolumesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type BuildSpecTasksImageVolumesSecretItemsOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesSecretItemsOutput) ToBuildSpecTasksImageVolumesSecretItemsOutput() BuildSpecTasksImageVolumesSecretItemsOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretItemsOutput) ToBuildSpecTasksImageVolumesSecretItemsOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretItemsOutput {
	return o
}

// The key to project.
func (o BuildSpecTasksImageVolumesSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

// Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
func (o BuildSpecTasksImageVolumesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
func (o BuildSpecTasksImageVolumesSecretItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesSecretItems) string { return v.Path }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecTasksImageVolumesSecretItems)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesSecretItemsArrayOutput) ToBuildSpecTasksImageVolumesSecretItemsArrayOutput() BuildSpecTasksImageVolumesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretItemsArrayOutput) ToBuildSpecTasksImageVolumesSecretItemsArrayOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesSecretItemsArrayOutput {
	return o
}

func (o BuildSpecTasksImageVolumesSecretItemsArrayOutput) Index(i pulumi.IntInput) BuildSpecTasksImageVolumesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecTasksImageVolumesSecretItems {
		return vs[0].([]BuildSpecTasksImageVolumesSecretItems)[vs[1].(int)]
	}).(BuildSpecTasksImageVolumesSecretItemsOutput)
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksImageVolumesStorageos struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
	SecretRef *BuildSpecTasksImageVolumesStorageosSecretRef `pulumi:"secretRef"`
	// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
	VolumeName *string `pulumi:"volumeName"`
	// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace *string `pulumi:"volumeNamespace"`
}

// BuildSpecTasksImageVolumesStorageosInput is an input type that accepts BuildSpecTasksImageVolumesStorageosArgs and BuildSpecTasksImageVolumesStorageosOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesStorageosInput` via:
//
//          BuildSpecTasksImageVolumesStorageosArgs{...}
type BuildSpecTasksImageVolumesStorageosInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesStorageosOutput() BuildSpecTasksImageVolumesStorageosOutput
	ToBuildSpecTasksImageVolumesStorageosOutputWithContext(context.Context) BuildSpecTasksImageVolumesStorageosOutput
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksImageVolumesStorageosArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
	SecretRef BuildSpecTasksImageVolumesStorageosSecretRefPtrInput `pulumi:"secretRef"`
	// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
	// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace pulumi.StringPtrInput `pulumi:"volumeNamespace"`
}

func (BuildSpecTasksImageVolumesStorageosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesStorageos)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesStorageosArgs) ToBuildSpecTasksImageVolumesStorageosOutput() BuildSpecTasksImageVolumesStorageosOutput {
	return i.ToBuildSpecTasksImageVolumesStorageosOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesStorageosArgs) ToBuildSpecTasksImageVolumesStorageosOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesStorageosOutput)
}

func (i BuildSpecTasksImageVolumesStorageosArgs) ToBuildSpecTasksImageVolumesStorageosPtrOutput() BuildSpecTasksImageVolumesStorageosPtrOutput {
	return i.ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesStorageosArgs) ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesStorageosOutput).ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesStorageosPtrInput is an input type that accepts BuildSpecTasksImageVolumesStorageosArgs, BuildSpecTasksImageVolumesStorageosPtr and BuildSpecTasksImageVolumesStorageosPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesStorageosPtrInput` via:
//
//          BuildSpecTasksImageVolumesStorageosArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesStorageosPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesStorageosPtrOutput() BuildSpecTasksImageVolumesStorageosPtrOutput
	ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesStorageosPtrOutput
}

type buildSpecTasksImageVolumesStorageosPtrType BuildSpecTasksImageVolumesStorageosArgs

func BuildSpecTasksImageVolumesStorageosPtr(v *BuildSpecTasksImageVolumesStorageosArgs) BuildSpecTasksImageVolumesStorageosPtrInput {
	return (*buildSpecTasksImageVolumesStorageosPtrType)(v)
}

func (*buildSpecTasksImageVolumesStorageosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesStorageos)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesStorageosPtrType) ToBuildSpecTasksImageVolumesStorageosPtrOutput() BuildSpecTasksImageVolumesStorageosPtrOutput {
	return i.ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesStorageosPtrType) ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesStorageosPtrOutput)
}

// StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type BuildSpecTasksImageVolumesStorageosOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesStorageosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesStorageos)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesStorageosOutput) ToBuildSpecTasksImageVolumesStorageosOutput() BuildSpecTasksImageVolumesStorageosOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosOutput) ToBuildSpecTasksImageVolumesStorageosOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosOutput) ToBuildSpecTasksImageVolumesStorageosPtrOutput() BuildSpecTasksImageVolumesStorageosPtrOutput {
	return o.ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesStorageosOutput) ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageos) *BuildSpecTasksImageVolumesStorageos {
		return &v
	}).(BuildSpecTasksImageVolumesStorageosPtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesStorageosOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageos) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesStorageosOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageos) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
func (o BuildSpecTasksImageVolumesStorageosOutput) SecretRef() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageos) *BuildSpecTasksImageVolumesStorageosSecretRef {
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput)
}

// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
func (o BuildSpecTasksImageVolumesStorageosOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageos) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
func (o BuildSpecTasksImageVolumesStorageosOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageos) *string { return v.VolumeNamespace }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesStorageosPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesStorageosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesStorageos)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesStorageosPtrOutput) ToBuildSpecTasksImageVolumesStorageosPtrOutput() BuildSpecTasksImageVolumesStorageosPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosPtrOutput) ToBuildSpecTasksImageVolumesStorageosPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosPtrOutput) Elem() BuildSpecTasksImageVolumesStorageosOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageos) BuildSpecTasksImageVolumesStorageos { return *v }).(BuildSpecTasksImageVolumesStorageosOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesStorageosPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
func (o BuildSpecTasksImageVolumesStorageosPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageos) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
func (o BuildSpecTasksImageVolumesStorageosPtrOutput) SecretRef() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageos) *BuildSpecTasksImageVolumesStorageosSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput)
}

// VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
func (o BuildSpecTasksImageVolumesStorageosPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
func (o BuildSpecTasksImageVolumesStorageosPtrOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeNamespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
type BuildSpecTasksImageVolumesStorageosSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecTasksImageVolumesStorageosSecretRefInput is an input type that accepts BuildSpecTasksImageVolumesStorageosSecretRefArgs and BuildSpecTasksImageVolumesStorageosSecretRefOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesStorageosSecretRefInput` via:
//
//          BuildSpecTasksImageVolumesStorageosSecretRefArgs{...}
type BuildSpecTasksImageVolumesStorageosSecretRefInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesStorageosSecretRefOutput() BuildSpecTasksImageVolumesStorageosSecretRefOutput
	ToBuildSpecTasksImageVolumesStorageosSecretRefOutputWithContext(context.Context) BuildSpecTasksImageVolumesStorageosSecretRefOutput
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
type BuildSpecTasksImageVolumesStorageosSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecTasksImageVolumesStorageosSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesStorageosSecretRef)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesStorageosSecretRefArgs) ToBuildSpecTasksImageVolumesStorageosSecretRefOutput() BuildSpecTasksImageVolumesStorageosSecretRefOutput {
	return i.ToBuildSpecTasksImageVolumesStorageosSecretRefOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesStorageosSecretRefArgs) ToBuildSpecTasksImageVolumesStorageosSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesStorageosSecretRefOutput)
}

func (i BuildSpecTasksImageVolumesStorageosSecretRefArgs) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutput() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesStorageosSecretRefArgs) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesStorageosSecretRefOutput).ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesStorageosSecretRefPtrInput is an input type that accepts BuildSpecTasksImageVolumesStorageosSecretRefArgs, BuildSpecTasksImageVolumesStorageosSecretRefPtr and BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesStorageosSecretRefPtrInput` via:
//
//          BuildSpecTasksImageVolumesStorageosSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesStorageosSecretRefPtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutput() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput
	ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput
}

type buildSpecTasksImageVolumesStorageosSecretRefPtrType BuildSpecTasksImageVolumesStorageosSecretRefArgs

func BuildSpecTasksImageVolumesStorageosSecretRefPtr(v *BuildSpecTasksImageVolumesStorageosSecretRefArgs) BuildSpecTasksImageVolumesStorageosSecretRefPtrInput {
	return (*buildSpecTasksImageVolumesStorageosSecretRefPtrType)(v)
}

func (*buildSpecTasksImageVolumesStorageosSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesStorageosSecretRef)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesStorageosSecretRefPtrType) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutput() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return i.ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesStorageosSecretRefPtrType) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput)
}

// SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
type BuildSpecTasksImageVolumesStorageosSecretRefOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesStorageosSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesStorageosSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefOutput) ToBuildSpecTasksImageVolumesStorageosSecretRefOutput() BuildSpecTasksImageVolumesStorageosSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefOutput) ToBuildSpecTasksImageVolumesStorageosSecretRefOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosSecretRefOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefOutput) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutput() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return o.ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefOutput) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageosSecretRef) *BuildSpecTasksImageVolumesStorageosSecretRef {
		return &v
	}).(BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesStorageosSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesStorageosSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesStorageosSecretRef)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutput() BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput) ToBuildSpecTasksImageVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput) Elem() BuildSpecTasksImageVolumesStorageosSecretRefOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageosSecretRef) BuildSpecTasksImageVolumesStorageosSecretRef {
		return *v
	}).(BuildSpecTasksImageVolumesStorageosSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesStorageosSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesVsphereVolume struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `pulumi:"storagePolicyID"`
	// Storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `pulumi:"storagePolicyName"`
	// Path that identifies vSphere volume vmdk
	VolumePath string `pulumi:"volumePath"`
}

// BuildSpecTasksImageVolumesVsphereVolumeInput is an input type that accepts BuildSpecTasksImageVolumesVsphereVolumeArgs and BuildSpecTasksImageVolumesVsphereVolumeOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesVsphereVolumeInput` via:
//
//          BuildSpecTasksImageVolumesVsphereVolumeArgs{...}
type BuildSpecTasksImageVolumesVsphereVolumeInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesVsphereVolumeOutput() BuildSpecTasksImageVolumesVsphereVolumeOutput
	ToBuildSpecTasksImageVolumesVsphereVolumeOutputWithContext(context.Context) BuildSpecTasksImageVolumesVsphereVolumeOutput
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesVsphereVolumeArgs struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID pulumi.StringPtrInput `pulumi:"storagePolicyID"`
	// Storage Policy Based Management (SPBM) profile name.
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
	// Path that identifies vSphere volume vmdk
	VolumePath pulumi.StringInput `pulumi:"volumePath"`
}

func (BuildSpecTasksImageVolumesVsphereVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesVsphereVolume)(nil)).Elem()
}

func (i BuildSpecTasksImageVolumesVsphereVolumeArgs) ToBuildSpecTasksImageVolumesVsphereVolumeOutput() BuildSpecTasksImageVolumesVsphereVolumeOutput {
	return i.ToBuildSpecTasksImageVolumesVsphereVolumeOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesVsphereVolumeArgs) ToBuildSpecTasksImageVolumesVsphereVolumeOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesVsphereVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesVsphereVolumeOutput)
}

func (i BuildSpecTasksImageVolumesVsphereVolumeArgs) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutput() BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return i.ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i BuildSpecTasksImageVolumesVsphereVolumeArgs) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesVsphereVolumeOutput).ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(ctx)
}

// BuildSpecTasksImageVolumesVsphereVolumePtrInput is an input type that accepts BuildSpecTasksImageVolumesVsphereVolumeArgs, BuildSpecTasksImageVolumesVsphereVolumePtr and BuildSpecTasksImageVolumesVsphereVolumePtrOutput values.
// You can construct a concrete instance of `BuildSpecTasksImageVolumesVsphereVolumePtrInput` via:
//
//          BuildSpecTasksImageVolumesVsphereVolumeArgs{...}
//
//  or:
//
//          nil
type BuildSpecTasksImageVolumesVsphereVolumePtrInput interface {
	pulumi.Input

	ToBuildSpecTasksImageVolumesVsphereVolumePtrOutput() BuildSpecTasksImageVolumesVsphereVolumePtrOutput
	ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(context.Context) BuildSpecTasksImageVolumesVsphereVolumePtrOutput
}

type buildSpecTasksImageVolumesVsphereVolumePtrType BuildSpecTasksImageVolumesVsphereVolumeArgs

func BuildSpecTasksImageVolumesVsphereVolumePtr(v *BuildSpecTasksImageVolumesVsphereVolumeArgs) BuildSpecTasksImageVolumesVsphereVolumePtrInput {
	return (*buildSpecTasksImageVolumesVsphereVolumePtrType)(v)
}

func (*buildSpecTasksImageVolumesVsphereVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesVsphereVolume)(nil)).Elem()
}

func (i *buildSpecTasksImageVolumesVsphereVolumePtrType) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutput() BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return i.ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i *buildSpecTasksImageVolumesVsphereVolumePtrType) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecTasksImageVolumesVsphereVolumePtrOutput)
}

// VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type BuildSpecTasksImageVolumesVsphereVolumeOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesVsphereVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecTasksImageVolumesVsphereVolume)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) ToBuildSpecTasksImageVolumesVsphereVolumeOutput() BuildSpecTasksImageVolumesVsphereVolumeOutput {
	return o
}

func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) ToBuildSpecTasksImageVolumesVsphereVolumeOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesVsphereVolumeOutput {
	return o
}

func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutput() BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return o.ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesVsphereVolume) *BuildSpecTasksImageVolumesVsphereVolume {
		return &v
	}).(BuildSpecTasksImageVolumesVsphereVolumePtrOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesVsphereVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesVsphereVolume) *string { return v.StoragePolicyID }).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile name.
func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesVsphereVolume) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

// Path that identifies vSphere volume vmdk
func (o BuildSpecTasksImageVolumesVsphereVolumeOutput) VolumePath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecTasksImageVolumesVsphereVolume) string { return v.VolumePath }).(pulumi.StringOutput)
}

type BuildSpecTasksImageVolumesVsphereVolumePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecTasksImageVolumesVsphereVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecTasksImageVolumesVsphereVolume)(nil)).Elem()
}

func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutput() BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) ToBuildSpecTasksImageVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) BuildSpecTasksImageVolumesVsphereVolumePtrOutput {
	return o
}

func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) Elem() BuildSpecTasksImageVolumesVsphereVolumeOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesVsphereVolume) BuildSpecTasksImageVolumesVsphereVolume { return *v }).(BuildSpecTasksImageVolumesVsphereVolumeOutput)
}

// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyID
	}).(pulumi.StringPtrOutput)
}

// Storage Policy Based Management (SPBM) profile name.
func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyName
	}).(pulumi.StringPtrOutput)
}

// Path that identifies vSphere volume vmdk
func (o BuildSpecTasksImageVolumesVsphereVolumePtrOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecTasksImageVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumePath
	}).(pulumi.StringPtrOutput)
}

// BuildStatus defines the observed state of Build
type BuildStatus struct {
	Artifacts  []BuildStatusArtifacts  `pulumi:"artifacts"`
	BaseImage  *string                 `pulumi:"baseImage"`
	Conditions []BuildStatusConditions `pulumi:"conditions"`
	Digest     *string                 `pulumi:"digest"`
	// Change to Duration / ISO 8601 when CRD uses OpenAPI spec v3 https://github.com/OAI/OpenAPI-Specification/issues/845
	Duration *string `pulumi:"duration"`
	Error    *string `pulumi:"error"`
	// Failure --
	Failure *BuildStatusFailure `pulumi:"failure"`
	Image   *string             `pulumi:"image"`
	// BuildPhase --
	Phase     *string `pulumi:"phase"`
	Platform  *string `pulumi:"platform"`
	StartedAt *string `pulumi:"startedAt"`
}

// BuildStatusInput is an input type that accepts BuildStatusArgs and BuildStatusOutput values.
// You can construct a concrete instance of `BuildStatusInput` via:
//
//          BuildStatusArgs{...}
type BuildStatusInput interface {
	pulumi.Input

	ToBuildStatusOutput() BuildStatusOutput
	ToBuildStatusOutputWithContext(context.Context) BuildStatusOutput
}

// BuildStatus defines the observed state of Build
type BuildStatusArgs struct {
	Artifacts  BuildStatusArtifactsArrayInput  `pulumi:"artifacts"`
	BaseImage  pulumi.StringPtrInput           `pulumi:"baseImage"`
	Conditions BuildStatusConditionsArrayInput `pulumi:"conditions"`
	Digest     pulumi.StringPtrInput           `pulumi:"digest"`
	// Change to Duration / ISO 8601 when CRD uses OpenAPI spec v3 https://github.com/OAI/OpenAPI-Specification/issues/845
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	Error    pulumi.StringPtrInput `pulumi:"error"`
	// Failure --
	Failure BuildStatusFailurePtrInput `pulumi:"failure"`
	Image   pulumi.StringPtrInput      `pulumi:"image"`
	// BuildPhase --
	Phase     pulumi.StringPtrInput `pulumi:"phase"`
	Platform  pulumi.StringPtrInput `pulumi:"platform"`
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (BuildStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatus)(nil)).Elem()
}

func (i BuildStatusArgs) ToBuildStatusOutput() BuildStatusOutput {
	return i.ToBuildStatusOutputWithContext(context.Background())
}

func (i BuildStatusArgs) ToBuildStatusOutputWithContext(ctx context.Context) BuildStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusOutput)
}

func (i BuildStatusArgs) ToBuildStatusPtrOutput() BuildStatusPtrOutput {
	return i.ToBuildStatusPtrOutputWithContext(context.Background())
}

func (i BuildStatusArgs) ToBuildStatusPtrOutputWithContext(ctx context.Context) BuildStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusOutput).ToBuildStatusPtrOutputWithContext(ctx)
}

// BuildStatusPtrInput is an input type that accepts BuildStatusArgs, BuildStatusPtr and BuildStatusPtrOutput values.
// You can construct a concrete instance of `BuildStatusPtrInput` via:
//
//          BuildStatusArgs{...}
//
//  or:
//
//          nil
type BuildStatusPtrInput interface {
	pulumi.Input

	ToBuildStatusPtrOutput() BuildStatusPtrOutput
	ToBuildStatusPtrOutputWithContext(context.Context) BuildStatusPtrOutput
}

type buildStatusPtrType BuildStatusArgs

func BuildStatusPtr(v *BuildStatusArgs) BuildStatusPtrInput {
	return (*buildStatusPtrType)(v)
}

func (*buildStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStatus)(nil)).Elem()
}

func (i *buildStatusPtrType) ToBuildStatusPtrOutput() BuildStatusPtrOutput {
	return i.ToBuildStatusPtrOutputWithContext(context.Background())
}

func (i *buildStatusPtrType) ToBuildStatusPtrOutputWithContext(ctx context.Context) BuildStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusPtrOutput)
}

// BuildStatus defines the observed state of Build
type BuildStatusOutput struct{ *pulumi.OutputState }

func (BuildStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatus)(nil)).Elem()
}

func (o BuildStatusOutput) ToBuildStatusOutput() BuildStatusOutput {
	return o
}

func (o BuildStatusOutput) ToBuildStatusOutputWithContext(ctx context.Context) BuildStatusOutput {
	return o
}

func (o BuildStatusOutput) ToBuildStatusPtrOutput() BuildStatusPtrOutput {
	return o.ToBuildStatusPtrOutputWithContext(context.Background())
}

func (o BuildStatusOutput) ToBuildStatusPtrOutputWithContext(ctx context.Context) BuildStatusPtrOutput {
	return o.ApplyT(func(v BuildStatus) *BuildStatus {
		return &v
	}).(BuildStatusPtrOutput)
}
func (o BuildStatusOutput) Artifacts() BuildStatusArtifactsArrayOutput {
	return o.ApplyT(func(v BuildStatus) []BuildStatusArtifacts { return v.Artifacts }).(BuildStatusArtifactsArrayOutput)
}

func (o BuildStatusOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.BaseImage }).(pulumi.StringPtrOutput)
}

func (o BuildStatusOutput) Conditions() BuildStatusConditionsArrayOutput {
	return o.ApplyT(func(v BuildStatus) []BuildStatusConditions { return v.Conditions }).(BuildStatusConditionsArrayOutput)
}

func (o BuildStatusOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// Change to Duration / ISO 8601 when CRD uses OpenAPI spec v3 https://github.com/OAI/OpenAPI-Specification/issues/845
func (o BuildStatusOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o BuildStatusOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.Error }).(pulumi.StringPtrOutput)
}

// Failure --
func (o BuildStatusOutput) Failure() BuildStatusFailurePtrOutput {
	return o.ApplyT(func(v BuildStatus) *BuildStatusFailure { return v.Failure }).(BuildStatusFailurePtrOutput)
}

func (o BuildStatusOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// BuildPhase --
func (o BuildStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

func (o BuildStatusOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

func (o BuildStatusOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatus) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

type BuildStatusPtrOutput struct{ *pulumi.OutputState }

func (BuildStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStatus)(nil)).Elem()
}

func (o BuildStatusPtrOutput) ToBuildStatusPtrOutput() BuildStatusPtrOutput {
	return o
}

func (o BuildStatusPtrOutput) ToBuildStatusPtrOutputWithContext(ctx context.Context) BuildStatusPtrOutput {
	return o
}

func (o BuildStatusPtrOutput) Elem() BuildStatusOutput {
	return o.ApplyT(func(v *BuildStatus) BuildStatus { return *v }).(BuildStatusOutput)
}

func (o BuildStatusPtrOutput) Artifacts() BuildStatusArtifactsArrayOutput {
	return o.ApplyT(func(v *BuildStatus) []BuildStatusArtifacts {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(BuildStatusArtifactsArrayOutput)
}

func (o BuildStatusPtrOutput) BaseImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.BaseImage
	}).(pulumi.StringPtrOutput)
}

func (o BuildStatusPtrOutput) Conditions() BuildStatusConditionsArrayOutput {
	return o.ApplyT(func(v *BuildStatus) []BuildStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(BuildStatusConditionsArrayOutput)
}

func (o BuildStatusPtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

// Change to Duration / ISO 8601 when CRD uses OpenAPI spec v3 https://github.com/OAI/OpenAPI-Specification/issues/845
func (o BuildStatusPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

func (o BuildStatusPtrOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.Error
	}).(pulumi.StringPtrOutput)
}

// Failure --
func (o BuildStatusPtrOutput) Failure() BuildStatusFailurePtrOutput {
	return o.ApplyT(func(v *BuildStatus) *BuildStatusFailure {
		if v == nil {
			return nil
		}
		return v.Failure
	}).(BuildStatusFailurePtrOutput)
}

func (o BuildStatusPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// BuildPhase --
func (o BuildStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

func (o BuildStatusPtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

func (o BuildStatusPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatus) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Artifact --
type BuildStatusArtifacts struct {
	Checksum *string `pulumi:"checksum"`
	Id       string  `pulumi:"id"`
	Location *string `pulumi:"location"`
	Target   *string `pulumi:"target"`
}

// BuildStatusArtifactsInput is an input type that accepts BuildStatusArtifactsArgs and BuildStatusArtifactsOutput values.
// You can construct a concrete instance of `BuildStatusArtifactsInput` via:
//
//          BuildStatusArtifactsArgs{...}
type BuildStatusArtifactsInput interface {
	pulumi.Input

	ToBuildStatusArtifactsOutput() BuildStatusArtifactsOutput
	ToBuildStatusArtifactsOutputWithContext(context.Context) BuildStatusArtifactsOutput
}

// Artifact --
type BuildStatusArtifactsArgs struct {
	Checksum pulumi.StringPtrInput `pulumi:"checksum"`
	Id       pulumi.StringInput    `pulumi:"id"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	Target   pulumi.StringPtrInput `pulumi:"target"`
}

func (BuildStatusArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusArtifacts)(nil)).Elem()
}

func (i BuildStatusArtifactsArgs) ToBuildStatusArtifactsOutput() BuildStatusArtifactsOutput {
	return i.ToBuildStatusArtifactsOutputWithContext(context.Background())
}

func (i BuildStatusArtifactsArgs) ToBuildStatusArtifactsOutputWithContext(ctx context.Context) BuildStatusArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusArtifactsOutput)
}

// BuildStatusArtifactsArrayInput is an input type that accepts BuildStatusArtifactsArray and BuildStatusArtifactsArrayOutput values.
// You can construct a concrete instance of `BuildStatusArtifactsArrayInput` via:
//
//          BuildStatusArtifactsArray{ BuildStatusArtifactsArgs{...} }
type BuildStatusArtifactsArrayInput interface {
	pulumi.Input

	ToBuildStatusArtifactsArrayOutput() BuildStatusArtifactsArrayOutput
	ToBuildStatusArtifactsArrayOutputWithContext(context.Context) BuildStatusArtifactsArrayOutput
}

type BuildStatusArtifactsArray []BuildStatusArtifactsInput

func (BuildStatusArtifactsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStatusArtifacts)(nil)).Elem()
}

func (i BuildStatusArtifactsArray) ToBuildStatusArtifactsArrayOutput() BuildStatusArtifactsArrayOutput {
	return i.ToBuildStatusArtifactsArrayOutputWithContext(context.Background())
}

func (i BuildStatusArtifactsArray) ToBuildStatusArtifactsArrayOutputWithContext(ctx context.Context) BuildStatusArtifactsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusArtifactsArrayOutput)
}

// Artifact --
type BuildStatusArtifactsOutput struct{ *pulumi.OutputState }

func (BuildStatusArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusArtifacts)(nil)).Elem()
}

func (o BuildStatusArtifactsOutput) ToBuildStatusArtifactsOutput() BuildStatusArtifactsOutput {
	return o
}

func (o BuildStatusArtifactsOutput) ToBuildStatusArtifactsOutputWithContext(ctx context.Context) BuildStatusArtifactsOutput {
	return o
}

func (o BuildStatusArtifactsOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusArtifacts) *string { return v.Checksum }).(pulumi.StringPtrOutput)
}

func (o BuildStatusArtifactsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStatusArtifacts) string { return v.Id }).(pulumi.StringOutput)
}

func (o BuildStatusArtifactsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusArtifacts) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o BuildStatusArtifactsOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusArtifacts) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type BuildStatusArtifactsArrayOutput struct{ *pulumi.OutputState }

func (BuildStatusArtifactsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStatusArtifacts)(nil)).Elem()
}

func (o BuildStatusArtifactsArrayOutput) ToBuildStatusArtifactsArrayOutput() BuildStatusArtifactsArrayOutput {
	return o
}

func (o BuildStatusArtifactsArrayOutput) ToBuildStatusArtifactsArrayOutputWithContext(ctx context.Context) BuildStatusArtifactsArrayOutput {
	return o
}

func (o BuildStatusArtifactsArrayOutput) Index(i pulumi.IntInput) BuildStatusArtifactsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStatusArtifacts {
		return vs[0].([]BuildStatusArtifacts)[vs[1].(int)]
	}).(BuildStatusArtifactsOutput)
}

// BuildCondition describes the state of a resource at a certain point.
type BuildStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// The last time this condition was updated.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of integration condition.
	Type string `pulumi:"type"`
}

// BuildStatusConditionsInput is an input type that accepts BuildStatusConditionsArgs and BuildStatusConditionsOutput values.
// You can construct a concrete instance of `BuildStatusConditionsInput` via:
//
//          BuildStatusConditionsArgs{...}
type BuildStatusConditionsInput interface {
	pulumi.Input

	ToBuildStatusConditionsOutput() BuildStatusConditionsOutput
	ToBuildStatusConditionsOutputWithContext(context.Context) BuildStatusConditionsOutput
}

// BuildCondition describes the state of a resource at a certain point.
type BuildStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// The last time this condition was updated.
	LastUpdateTime pulumi.StringPtrInput `pulumi:"lastUpdateTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of integration condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BuildStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusConditions)(nil)).Elem()
}

func (i BuildStatusConditionsArgs) ToBuildStatusConditionsOutput() BuildStatusConditionsOutput {
	return i.ToBuildStatusConditionsOutputWithContext(context.Background())
}

func (i BuildStatusConditionsArgs) ToBuildStatusConditionsOutputWithContext(ctx context.Context) BuildStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusConditionsOutput)
}

// BuildStatusConditionsArrayInput is an input type that accepts BuildStatusConditionsArray and BuildStatusConditionsArrayOutput values.
// You can construct a concrete instance of `BuildStatusConditionsArrayInput` via:
//
//          BuildStatusConditionsArray{ BuildStatusConditionsArgs{...} }
type BuildStatusConditionsArrayInput interface {
	pulumi.Input

	ToBuildStatusConditionsArrayOutput() BuildStatusConditionsArrayOutput
	ToBuildStatusConditionsArrayOutputWithContext(context.Context) BuildStatusConditionsArrayOutput
}

type BuildStatusConditionsArray []BuildStatusConditionsInput

func (BuildStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStatusConditions)(nil)).Elem()
}

func (i BuildStatusConditionsArray) ToBuildStatusConditionsArrayOutput() BuildStatusConditionsArrayOutput {
	return i.ToBuildStatusConditionsArrayOutputWithContext(context.Background())
}

func (i BuildStatusConditionsArray) ToBuildStatusConditionsArrayOutputWithContext(ctx context.Context) BuildStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusConditionsArrayOutput)
}

// BuildCondition describes the state of a resource at a certain point.
type BuildStatusConditionsOutput struct{ *pulumi.OutputState }

func (BuildStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusConditions)(nil)).Elem()
}

func (o BuildStatusConditionsOutput) ToBuildStatusConditionsOutput() BuildStatusConditionsOutput {
	return o
}

func (o BuildStatusConditionsOutput) ToBuildStatusConditionsOutputWithContext(ctx context.Context) BuildStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o BuildStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// The last time this condition was updated.
func (o BuildStatusConditionsOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusConditions) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o BuildStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o BuildStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o BuildStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of integration condition.
func (o BuildStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type BuildStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (BuildStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStatusConditions)(nil)).Elem()
}

func (o BuildStatusConditionsArrayOutput) ToBuildStatusConditionsArrayOutput() BuildStatusConditionsArrayOutput {
	return o
}

func (o BuildStatusConditionsArrayOutput) ToBuildStatusConditionsArrayOutputWithContext(ctx context.Context) BuildStatusConditionsArrayOutput {
	return o
}

func (o BuildStatusConditionsArrayOutput) Index(i pulumi.IntInput) BuildStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStatusConditions {
		return vs[0].([]BuildStatusConditions)[vs[1].(int)]
	}).(BuildStatusConditionsOutput)
}

// Failure --
type BuildStatusFailure struct {
	Reason string `pulumi:"reason"`
	// FailureRecovery --
	Recovery BuildStatusFailureRecovery `pulumi:"recovery"`
	Time     string                     `pulumi:"time"`
}

// BuildStatusFailureInput is an input type that accepts BuildStatusFailureArgs and BuildStatusFailureOutput values.
// You can construct a concrete instance of `BuildStatusFailureInput` via:
//
//          BuildStatusFailureArgs{...}
type BuildStatusFailureInput interface {
	pulumi.Input

	ToBuildStatusFailureOutput() BuildStatusFailureOutput
	ToBuildStatusFailureOutputWithContext(context.Context) BuildStatusFailureOutput
}

// Failure --
type BuildStatusFailureArgs struct {
	Reason pulumi.StringInput `pulumi:"reason"`
	// FailureRecovery --
	Recovery BuildStatusFailureRecoveryInput `pulumi:"recovery"`
	Time     pulumi.StringInput              `pulumi:"time"`
}

func (BuildStatusFailureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusFailure)(nil)).Elem()
}

func (i BuildStatusFailureArgs) ToBuildStatusFailureOutput() BuildStatusFailureOutput {
	return i.ToBuildStatusFailureOutputWithContext(context.Background())
}

func (i BuildStatusFailureArgs) ToBuildStatusFailureOutputWithContext(ctx context.Context) BuildStatusFailureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusFailureOutput)
}

func (i BuildStatusFailureArgs) ToBuildStatusFailurePtrOutput() BuildStatusFailurePtrOutput {
	return i.ToBuildStatusFailurePtrOutputWithContext(context.Background())
}

func (i BuildStatusFailureArgs) ToBuildStatusFailurePtrOutputWithContext(ctx context.Context) BuildStatusFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusFailureOutput).ToBuildStatusFailurePtrOutputWithContext(ctx)
}

// BuildStatusFailurePtrInput is an input type that accepts BuildStatusFailureArgs, BuildStatusFailurePtr and BuildStatusFailurePtrOutput values.
// You can construct a concrete instance of `BuildStatusFailurePtrInput` via:
//
//          BuildStatusFailureArgs{...}
//
//  or:
//
//          nil
type BuildStatusFailurePtrInput interface {
	pulumi.Input

	ToBuildStatusFailurePtrOutput() BuildStatusFailurePtrOutput
	ToBuildStatusFailurePtrOutputWithContext(context.Context) BuildStatusFailurePtrOutput
}

type buildStatusFailurePtrType BuildStatusFailureArgs

func BuildStatusFailurePtr(v *BuildStatusFailureArgs) BuildStatusFailurePtrInput {
	return (*buildStatusFailurePtrType)(v)
}

func (*buildStatusFailurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStatusFailure)(nil)).Elem()
}

func (i *buildStatusFailurePtrType) ToBuildStatusFailurePtrOutput() BuildStatusFailurePtrOutput {
	return i.ToBuildStatusFailurePtrOutputWithContext(context.Background())
}

func (i *buildStatusFailurePtrType) ToBuildStatusFailurePtrOutputWithContext(ctx context.Context) BuildStatusFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusFailurePtrOutput)
}

// Failure --
type BuildStatusFailureOutput struct{ *pulumi.OutputState }

func (BuildStatusFailureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusFailure)(nil)).Elem()
}

func (o BuildStatusFailureOutput) ToBuildStatusFailureOutput() BuildStatusFailureOutput {
	return o
}

func (o BuildStatusFailureOutput) ToBuildStatusFailureOutputWithContext(ctx context.Context) BuildStatusFailureOutput {
	return o
}

func (o BuildStatusFailureOutput) ToBuildStatusFailurePtrOutput() BuildStatusFailurePtrOutput {
	return o.ToBuildStatusFailurePtrOutputWithContext(context.Background())
}

func (o BuildStatusFailureOutput) ToBuildStatusFailurePtrOutputWithContext(ctx context.Context) BuildStatusFailurePtrOutput {
	return o.ApplyT(func(v BuildStatusFailure) *BuildStatusFailure {
		return &v
	}).(BuildStatusFailurePtrOutput)
}
func (o BuildStatusFailureOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStatusFailure) string { return v.Reason }).(pulumi.StringOutput)
}

// FailureRecovery --
func (o BuildStatusFailureOutput) Recovery() BuildStatusFailureRecoveryOutput {
	return o.ApplyT(func(v BuildStatusFailure) BuildStatusFailureRecovery { return v.Recovery }).(BuildStatusFailureRecoveryOutput)
}

func (o BuildStatusFailureOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStatusFailure) string { return v.Time }).(pulumi.StringOutput)
}

type BuildStatusFailurePtrOutput struct{ *pulumi.OutputState }

func (BuildStatusFailurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStatusFailure)(nil)).Elem()
}

func (o BuildStatusFailurePtrOutput) ToBuildStatusFailurePtrOutput() BuildStatusFailurePtrOutput {
	return o
}

func (o BuildStatusFailurePtrOutput) ToBuildStatusFailurePtrOutputWithContext(ctx context.Context) BuildStatusFailurePtrOutput {
	return o
}

func (o BuildStatusFailurePtrOutput) Elem() BuildStatusFailureOutput {
	return o.ApplyT(func(v *BuildStatusFailure) BuildStatusFailure { return *v }).(BuildStatusFailureOutput)
}

func (o BuildStatusFailurePtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatusFailure) *string {
		if v == nil {
			return nil
		}
		return &v.Reason
	}).(pulumi.StringPtrOutput)
}

// FailureRecovery --
func (o BuildStatusFailurePtrOutput) Recovery() BuildStatusFailureRecoveryPtrOutput {
	return o.ApplyT(func(v *BuildStatusFailure) *BuildStatusFailureRecovery {
		if v == nil {
			return nil
		}
		return &v.Recovery
	}).(BuildStatusFailureRecoveryPtrOutput)
}

func (o BuildStatusFailurePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatusFailure) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

// FailureRecovery --
type BuildStatusFailureRecovery struct {
	Attempt     int     `pulumi:"attempt"`
	AttemptMax  int     `pulumi:"attemptMax"`
	AttemptTime *string `pulumi:"attemptTime"`
}

// BuildStatusFailureRecoveryInput is an input type that accepts BuildStatusFailureRecoveryArgs and BuildStatusFailureRecoveryOutput values.
// You can construct a concrete instance of `BuildStatusFailureRecoveryInput` via:
//
//          BuildStatusFailureRecoveryArgs{...}
type BuildStatusFailureRecoveryInput interface {
	pulumi.Input

	ToBuildStatusFailureRecoveryOutput() BuildStatusFailureRecoveryOutput
	ToBuildStatusFailureRecoveryOutputWithContext(context.Context) BuildStatusFailureRecoveryOutput
}

// FailureRecovery --
type BuildStatusFailureRecoveryArgs struct {
	Attempt     pulumi.IntInput       `pulumi:"attempt"`
	AttemptMax  pulumi.IntInput       `pulumi:"attemptMax"`
	AttemptTime pulumi.StringPtrInput `pulumi:"attemptTime"`
}

func (BuildStatusFailureRecoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusFailureRecovery)(nil)).Elem()
}

func (i BuildStatusFailureRecoveryArgs) ToBuildStatusFailureRecoveryOutput() BuildStatusFailureRecoveryOutput {
	return i.ToBuildStatusFailureRecoveryOutputWithContext(context.Background())
}

func (i BuildStatusFailureRecoveryArgs) ToBuildStatusFailureRecoveryOutputWithContext(ctx context.Context) BuildStatusFailureRecoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusFailureRecoveryOutput)
}

func (i BuildStatusFailureRecoveryArgs) ToBuildStatusFailureRecoveryPtrOutput() BuildStatusFailureRecoveryPtrOutput {
	return i.ToBuildStatusFailureRecoveryPtrOutputWithContext(context.Background())
}

func (i BuildStatusFailureRecoveryArgs) ToBuildStatusFailureRecoveryPtrOutputWithContext(ctx context.Context) BuildStatusFailureRecoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusFailureRecoveryOutput).ToBuildStatusFailureRecoveryPtrOutputWithContext(ctx)
}

// BuildStatusFailureRecoveryPtrInput is an input type that accepts BuildStatusFailureRecoveryArgs, BuildStatusFailureRecoveryPtr and BuildStatusFailureRecoveryPtrOutput values.
// You can construct a concrete instance of `BuildStatusFailureRecoveryPtrInput` via:
//
//          BuildStatusFailureRecoveryArgs{...}
//
//  or:
//
//          nil
type BuildStatusFailureRecoveryPtrInput interface {
	pulumi.Input

	ToBuildStatusFailureRecoveryPtrOutput() BuildStatusFailureRecoveryPtrOutput
	ToBuildStatusFailureRecoveryPtrOutputWithContext(context.Context) BuildStatusFailureRecoveryPtrOutput
}

type buildStatusFailureRecoveryPtrType BuildStatusFailureRecoveryArgs

func BuildStatusFailureRecoveryPtr(v *BuildStatusFailureRecoveryArgs) BuildStatusFailureRecoveryPtrInput {
	return (*buildStatusFailureRecoveryPtrType)(v)
}

func (*buildStatusFailureRecoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStatusFailureRecovery)(nil)).Elem()
}

func (i *buildStatusFailureRecoveryPtrType) ToBuildStatusFailureRecoveryPtrOutput() BuildStatusFailureRecoveryPtrOutput {
	return i.ToBuildStatusFailureRecoveryPtrOutputWithContext(context.Background())
}

func (i *buildStatusFailureRecoveryPtrType) ToBuildStatusFailureRecoveryPtrOutputWithContext(ctx context.Context) BuildStatusFailureRecoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusFailureRecoveryPtrOutput)
}

// FailureRecovery --
type BuildStatusFailureRecoveryOutput struct{ *pulumi.OutputState }

func (BuildStatusFailureRecoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatusFailureRecovery)(nil)).Elem()
}

func (o BuildStatusFailureRecoveryOutput) ToBuildStatusFailureRecoveryOutput() BuildStatusFailureRecoveryOutput {
	return o
}

func (o BuildStatusFailureRecoveryOutput) ToBuildStatusFailureRecoveryOutputWithContext(ctx context.Context) BuildStatusFailureRecoveryOutput {
	return o
}

func (o BuildStatusFailureRecoveryOutput) ToBuildStatusFailureRecoveryPtrOutput() BuildStatusFailureRecoveryPtrOutput {
	return o.ToBuildStatusFailureRecoveryPtrOutputWithContext(context.Background())
}

func (o BuildStatusFailureRecoveryOutput) ToBuildStatusFailureRecoveryPtrOutputWithContext(ctx context.Context) BuildStatusFailureRecoveryPtrOutput {
	return o.ApplyT(func(v BuildStatusFailureRecovery) *BuildStatusFailureRecovery {
		return &v
	}).(BuildStatusFailureRecoveryPtrOutput)
}
func (o BuildStatusFailureRecoveryOutput) Attempt() pulumi.IntOutput {
	return o.ApplyT(func(v BuildStatusFailureRecovery) int { return v.Attempt }).(pulumi.IntOutput)
}

func (o BuildStatusFailureRecoveryOutput) AttemptMax() pulumi.IntOutput {
	return o.ApplyT(func(v BuildStatusFailureRecovery) int { return v.AttemptMax }).(pulumi.IntOutput)
}

func (o BuildStatusFailureRecoveryOutput) AttemptTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStatusFailureRecovery) *string { return v.AttemptTime }).(pulumi.StringPtrOutput)
}

type BuildStatusFailureRecoveryPtrOutput struct{ *pulumi.OutputState }

func (BuildStatusFailureRecoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStatusFailureRecovery)(nil)).Elem()
}

func (o BuildStatusFailureRecoveryPtrOutput) ToBuildStatusFailureRecoveryPtrOutput() BuildStatusFailureRecoveryPtrOutput {
	return o
}

func (o BuildStatusFailureRecoveryPtrOutput) ToBuildStatusFailureRecoveryPtrOutputWithContext(ctx context.Context) BuildStatusFailureRecoveryPtrOutput {
	return o
}

func (o BuildStatusFailureRecoveryPtrOutput) Elem() BuildStatusFailureRecoveryOutput {
	return o.ApplyT(func(v *BuildStatusFailureRecovery) BuildStatusFailureRecovery { return *v }).(BuildStatusFailureRecoveryOutput)
}

func (o BuildStatusFailureRecoveryPtrOutput) Attempt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStatusFailureRecovery) *int {
		if v == nil {
			return nil
		}
		return &v.Attempt
	}).(pulumi.IntPtrOutput)
}

func (o BuildStatusFailureRecoveryPtrOutput) AttemptMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStatusFailureRecovery) *int {
		if v == nil {
			return nil
		}
		return &v.AttemptMax
	}).(pulumi.IntPtrOutput)
}

func (o BuildStatusFailureRecoveryPtrOutput) AttemptTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStatusFailureRecovery) *string {
		if v == nil {
			return nil
		}
		return v.AttemptTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BuildTypeOutput{})
	pulumi.RegisterOutputType(BuildMetadataOutput{})
	pulumi.RegisterOutputType(BuildSpecOutput{})
	pulumi.RegisterOutputType(BuildSpecPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenSettingsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenSettingsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenSettingsConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenSettingsSecretKeyRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderMavenSettingsSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderPropertiesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderResourcesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderResourcesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeCapabilitiesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeCapabilitiesMapOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeCapabilitiesDependenciesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeCapabilitiesMetadataOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeDependenciesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeDependenciesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderRuntimeMetadataOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderSourcesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderSourcesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumeMountsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumeMountsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesAwsElasticBlockStoreOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesAwsElasticBlockStorePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesAzureDiskOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesAzureDiskPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesAzureFileOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesAzureFilePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCephfsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCephfsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCephfsSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCephfsSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCinderOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCinderPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCinderSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCinderSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesConfigMapOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCsiOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCsiPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCsiNodePublishSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesCsiVolumeAttributesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesEmptyDirOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesEmptyDirSizeLimitPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFcOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFcPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlexVolumeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlexVolumePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlexVolumeOptionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlexVolumeSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlockerOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesFlockerPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesGcePersistentDiskOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesGcePersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesGitRepoOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesGitRepoPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesGlusterfsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesGlusterfsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesHostPathOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesHostPathPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesIscsiOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesIscsiPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesIscsiSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesIscsiSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesNfsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesNfsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesPersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesPersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesPhotonPersistentDiskOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesPhotonPersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesPortworxVolumeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesPortworxVolumePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesSecretOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesSecretPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesProjectedSourcesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesQuobyteOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesQuobytePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesRbdOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesRbdPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesRbdSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesRbdSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesScaleIOOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesScaleIOPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesScaleIOSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesScaleIOSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesSecretOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesSecretPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesSecretItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesStorageosOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesStorageosPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesStorageosSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesStorageosSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesVsphereVolumeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksBuilderVolumesVsphereVolumePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImagePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromResourceFieldRefDivisorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextCapabilitiesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumeMountsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumeMountsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesAwsElasticBlockStoreOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesAwsElasticBlockStorePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesAzureDiskOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesAzureDiskPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesAzureFileOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesAzureFilePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCephfsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCephfsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCephfsSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCephfsSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCinderOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCinderPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCinderSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCinderSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesConfigMapOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCsiOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCsiPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCsiNodePublishSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCsiNodePublishSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesCsiVolumeAttributesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesDownwardAPIItemsResourceFieldRefDivisorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesEmptyDirOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesEmptyDirSizeLimitOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesEmptyDirSizeLimitPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFcOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFcPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlexVolumeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlexVolumePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlexVolumeOptionsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlexVolumeSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlexVolumeSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlockerOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesFlockerPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesGcePersistentDiskOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesGcePersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesGitRepoOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesGitRepoPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesGlusterfsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesGlusterfsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesHostPathOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesHostPathPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesIscsiOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesIscsiPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesIscsiSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesIscsiSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesNfsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesNfsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesPersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesPersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesPhotonPersistentDiskOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesPhotonPersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesPortworxVolumeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesPortworxVolumePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesConfigMapOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesDownwardAPIItemsResourceFieldRefDivisorPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesSecretOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesSecretPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesProjectedSourcesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesQuobyteOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesQuobytePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesRbdOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesRbdPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesRbdSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesRbdSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesScaleIOOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesScaleIOPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesScaleIOSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesScaleIOSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesSecretOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesSecretPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesSecretItemsOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesStorageosOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesStorageosPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesStorageosSecretRefOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesStorageosSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesVsphereVolumeOutput{})
	pulumi.RegisterOutputType(BuildSpecTasksImageVolumesVsphereVolumePtrOutput{})
	pulumi.RegisterOutputType(BuildStatusOutput{})
	pulumi.RegisterOutputType(BuildStatusPtrOutput{})
	pulumi.RegisterOutputType(BuildStatusArtifactsOutput{})
	pulumi.RegisterOutputType(BuildStatusArtifactsArrayOutput{})
	pulumi.RegisterOutputType(BuildStatusConditionsOutput{})
	pulumi.RegisterOutputType(BuildStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(BuildStatusFailureOutput{})
	pulumi.RegisterOutputType(BuildStatusFailurePtrOutput{})
	pulumi.RegisterOutputType(BuildStatusFailureRecoveryOutput{})
	pulumi.RegisterOutputType(BuildStatusFailureRecoveryPtrOutput{})
}
