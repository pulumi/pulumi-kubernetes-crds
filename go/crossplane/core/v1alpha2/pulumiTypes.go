// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An ApplicationConfiguration represents an OAM application.
type ApplicationConfigurationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
	Spec *ApplicationConfigurationSpec `pulumi:"spec"`
	// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
	Status *ApplicationConfigurationStatus `pulumi:"status"`
}

// ApplicationConfigurationTypeInput is an input type that accepts ApplicationConfigurationTypeArgs and ApplicationConfigurationTypeOutput values.
// You can construct a concrete instance of `ApplicationConfigurationTypeInput` via:
//
//          ApplicationConfigurationTypeArgs{...}
type ApplicationConfigurationTypeInput interface {
	pulumi.Input

	ToApplicationConfigurationTypeOutput() ApplicationConfigurationTypeOutput
	ToApplicationConfigurationTypeOutputWithContext(context.Context) ApplicationConfigurationTypeOutput
}

// An ApplicationConfiguration represents an OAM application.
type ApplicationConfigurationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
	Spec ApplicationConfigurationSpecPtrInput `pulumi:"spec"`
	// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
	Status ApplicationConfigurationStatusPtrInput `pulumi:"status"`
}

func (ApplicationConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationType)(nil)).Elem()
}

func (i ApplicationConfigurationTypeArgs) ToApplicationConfigurationTypeOutput() ApplicationConfigurationTypeOutput {
	return i.ToApplicationConfigurationTypeOutputWithContext(context.Background())
}

func (i ApplicationConfigurationTypeArgs) ToApplicationConfigurationTypeOutputWithContext(ctx context.Context) ApplicationConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationTypeOutput)
}

// An ApplicationConfiguration represents an OAM application.
type ApplicationConfigurationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationType)(nil)).Elem()
}

func (o ApplicationConfigurationTypeOutput) ToApplicationConfigurationTypeOutput() ApplicationConfigurationTypeOutput {
	return o
}

func (o ApplicationConfigurationTypeOutput) ToApplicationConfigurationTypeOutputWithContext(ctx context.Context) ApplicationConfigurationTypeOutput {
	return o
}

func (o ApplicationConfigurationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ApplicationConfigurationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ApplicationConfigurationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
func (o ApplicationConfigurationTypeOutput) Spec() ApplicationConfigurationSpecPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *ApplicationConfigurationSpec { return v.Spec }).(ApplicationConfigurationSpecPtrOutput)
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
func (o ApplicationConfigurationTypeOutput) Status() ApplicationConfigurationStatusPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *ApplicationConfigurationStatus { return v.Status }).(ApplicationConfigurationStatusPtrOutput)
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
type ApplicationConfigurationSpec struct {
	// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
	Components []ApplicationConfigurationSpecComponents `pulumi:"components"`
}

// ApplicationConfigurationSpecInput is an input type that accepts ApplicationConfigurationSpecArgs and ApplicationConfigurationSpecOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecInput` via:
//
//          ApplicationConfigurationSpecArgs{...}
type ApplicationConfigurationSpecInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecOutput() ApplicationConfigurationSpecOutput
	ToApplicationConfigurationSpecOutputWithContext(context.Context) ApplicationConfigurationSpecOutput
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
type ApplicationConfigurationSpecArgs struct {
	// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
	Components ApplicationConfigurationSpecComponentsArrayInput `pulumi:"components"`
}

func (ApplicationConfigurationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpec)(nil)).Elem()
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecOutput() ApplicationConfigurationSpecOutput {
	return i.ToApplicationConfigurationSpecOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecOutputWithContext(ctx context.Context) ApplicationConfigurationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecOutput)
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return i.ToApplicationConfigurationSpecPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecOutput).ToApplicationConfigurationSpecPtrOutputWithContext(ctx)
}

// ApplicationConfigurationSpecPtrInput is an input type that accepts ApplicationConfigurationSpecArgs, ApplicationConfigurationSpecPtr and ApplicationConfigurationSpecPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecPtrInput` via:
//
//          ApplicationConfigurationSpecArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationSpecPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput
	ToApplicationConfigurationSpecPtrOutputWithContext(context.Context) ApplicationConfigurationSpecPtrOutput
}

type applicationConfigurationSpecPtrType ApplicationConfigurationSpecArgs

func ApplicationConfigurationSpecPtr(v *ApplicationConfigurationSpecArgs) ApplicationConfigurationSpecPtrInput {
	return (*applicationConfigurationSpecPtrType)(v)
}

func (*applicationConfigurationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationSpec)(nil)).Elem()
}

func (i *applicationConfigurationSpecPtrType) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return i.ToApplicationConfigurationSpecPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationSpecPtrType) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecPtrOutput)
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
type ApplicationConfigurationSpecOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpec)(nil)).Elem()
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecOutput() ApplicationConfigurationSpecOutput {
	return o
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecOutputWithContext(ctx context.Context) ApplicationConfigurationSpecOutput {
	return o
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return o.ToApplicationConfigurationSpecPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpec) *ApplicationConfigurationSpec {
		return &v
	}).(ApplicationConfigurationSpecPtrOutput)
}

// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
func (o ApplicationConfigurationSpecOutput) Components() ApplicationConfigurationSpecComponentsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpec) []ApplicationConfigurationSpecComponents { return v.Components }).(ApplicationConfigurationSpecComponentsArrayOutput)
}

type ApplicationConfigurationSpecPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationSpec)(nil)).Elem()
}

func (o ApplicationConfigurationSpecPtrOutput) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return o
}

func (o ApplicationConfigurationSpecPtrOutput) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return o
}

func (o ApplicationConfigurationSpecPtrOutput) Elem() ApplicationConfigurationSpecOutput {
	return o.ApplyT(func(v *ApplicationConfigurationSpec) ApplicationConfigurationSpec { return *v }).(ApplicationConfigurationSpecOutput)
}

// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
func (o ApplicationConfigurationSpecPtrOutput) Components() ApplicationConfigurationSpecComponentsArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationSpec) []ApplicationConfigurationSpecComponents {
		if v == nil {
			return nil
		}
		return v.Components
	}).(ApplicationConfigurationSpecComponentsArrayOutput)
}

// An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
type ApplicationConfigurationSpecComponents struct {
	// ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
	ComponentName string `pulumi:"componentName"`
	// ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
	ParameterValues []ApplicationConfigurationSpecComponentsParameterValues `pulumi:"parameterValues"`
	// Scopes in which the specified component should exist.
	Scopes []ApplicationConfigurationSpecComponentsScopes `pulumi:"scopes"`
	// Traits of the specified component.
	Traits []ApplicationConfigurationSpecComponentsTraits `pulumi:"traits"`
}

// ApplicationConfigurationSpecComponentsInput is an input type that accepts ApplicationConfigurationSpecComponentsArgs and ApplicationConfigurationSpecComponentsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsInput` via:
//
//          ApplicationConfigurationSpecComponentsArgs{...}
type ApplicationConfigurationSpecComponentsInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsOutput() ApplicationConfigurationSpecComponentsOutput
	ToApplicationConfigurationSpecComponentsOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsOutput
}

// An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
type ApplicationConfigurationSpecComponentsArgs struct {
	// ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
	ComponentName pulumi.StringInput `pulumi:"componentName"`
	// ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
	ParameterValues ApplicationConfigurationSpecComponentsParameterValuesArrayInput `pulumi:"parameterValues"`
	// Scopes in which the specified component should exist.
	Scopes ApplicationConfigurationSpecComponentsScopesArrayInput `pulumi:"scopes"`
	// Traits of the specified component.
	Traits ApplicationConfigurationSpecComponentsTraitsArrayInput `pulumi:"traits"`
}

func (ApplicationConfigurationSpecComponentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsArgs) ToApplicationConfigurationSpecComponentsOutput() ApplicationConfigurationSpecComponentsOutput {
	return i.ToApplicationConfigurationSpecComponentsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsArgs) ToApplicationConfigurationSpecComponentsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsOutput)
}

// ApplicationConfigurationSpecComponentsArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsArray and ApplicationConfigurationSpecComponentsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsArray{ ApplicationConfigurationSpecComponentsArgs{...} }
type ApplicationConfigurationSpecComponentsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsArrayOutput() ApplicationConfigurationSpecComponentsArrayOutput
	ToApplicationConfigurationSpecComponentsArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsArrayOutput
}

type ApplicationConfigurationSpecComponentsArray []ApplicationConfigurationSpecComponentsInput

func (ApplicationConfigurationSpecComponentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsArray) ToApplicationConfigurationSpecComponentsArrayOutput() ApplicationConfigurationSpecComponentsArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsArray) ToApplicationConfigurationSpecComponentsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsArrayOutput)
}

// An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
type ApplicationConfigurationSpecComponentsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsOutput) ToApplicationConfigurationSpecComponentsOutput() ApplicationConfigurationSpecComponentsOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsOutput) ToApplicationConfigurationSpecComponentsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsOutput {
	return o
}

// ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
func (o ApplicationConfigurationSpecComponentsOutput) ComponentName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) string { return v.ComponentName }).(pulumi.StringOutput)
}

// ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
func (o ApplicationConfigurationSpecComponentsOutput) ParameterValues() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) []ApplicationConfigurationSpecComponentsParameterValues {
		return v.ParameterValues
	}).(ApplicationConfigurationSpecComponentsParameterValuesArrayOutput)
}

// Scopes in which the specified component should exist.
func (o ApplicationConfigurationSpecComponentsOutput) Scopes() ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) []ApplicationConfigurationSpecComponentsScopes {
		return v.Scopes
	}).(ApplicationConfigurationSpecComponentsScopesArrayOutput)
}

// Traits of the specified component.
func (o ApplicationConfigurationSpecComponentsOutput) Traits() ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) []ApplicationConfigurationSpecComponentsTraits {
		return v.Traits
	}).(ApplicationConfigurationSpecComponentsTraitsArrayOutput)
}

type ApplicationConfigurationSpecComponentsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsArrayOutput) ToApplicationConfigurationSpecComponentsArrayOutput() ApplicationConfigurationSpecComponentsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsArrayOutput) ToApplicationConfigurationSpecComponentsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponents {
		return vs[0].([]ApplicationConfigurationSpecComponents)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsOutput)
}

// A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
type ApplicationConfigurationSpecComponentsParameterValues struct {
	// Name of the component parameter to set.
	Name string `pulumi:"name"`
	// Value to set.
	Value ApplicationConfigurationSpecComponentsParameterValuesValue `pulumi:"value"`
}

// ApplicationConfigurationSpecComponentsParameterValuesInput is an input type that accepts ApplicationConfigurationSpecComponentsParameterValuesArgs and ApplicationConfigurationSpecComponentsParameterValuesOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsParameterValuesInput` via:
//
//          ApplicationConfigurationSpecComponentsParameterValuesArgs{...}
type ApplicationConfigurationSpecComponentsParameterValuesInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsParameterValuesOutput() ApplicationConfigurationSpecComponentsParameterValuesOutput
	ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsParameterValuesOutput
}

// A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
type ApplicationConfigurationSpecComponentsParameterValuesArgs struct {
	// Name of the component parameter to set.
	Name pulumi.StringInput `pulumi:"name"`
	// Value to set.
	Value ApplicationConfigurationSpecComponentsParameterValuesValueInput `pulumi:"value"`
}

func (ApplicationConfigurationSpecComponentsParameterValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArgs) ToApplicationConfigurationSpecComponentsParameterValuesOutput() ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return i.ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArgs) ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsParameterValuesOutput)
}

// ApplicationConfigurationSpecComponentsParameterValuesArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsParameterValuesArray and ApplicationConfigurationSpecComponentsParameterValuesArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsParameterValuesArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsParameterValuesArray{ ApplicationConfigurationSpecComponentsParameterValuesArgs{...} }
type ApplicationConfigurationSpecComponentsParameterValuesArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsParameterValuesArrayOutput() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput
	ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsParameterValuesArrayOutput
}

type ApplicationConfigurationSpecComponentsParameterValuesArray []ApplicationConfigurationSpecComponentsParameterValuesInput

func (ApplicationConfigurationSpecComponentsParameterValuesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArray) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutput() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArray) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsParameterValuesArrayOutput)
}

// A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
type ApplicationConfigurationSpecComponentsParameterValuesOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsParameterValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) ToApplicationConfigurationSpecComponentsParameterValuesOutput() ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return o
}

// Name of the component parameter to set.
func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsParameterValues) string { return v.Name }).(pulumi.StringOutput)
}

// Value to set.
func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) Value() ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsParameterValues) ApplicationConfigurationSpecComponentsParameterValuesValue {
		return v.Value
	}).(ApplicationConfigurationSpecComponentsParameterValuesValueOutput)
}

type ApplicationConfigurationSpecComponentsParameterValuesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutput() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponentsParameterValues {
		return vs[0].([]ApplicationConfigurationSpecComponentsParameterValues)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsParameterValuesOutput)
}

type ApplicationConfigurationSpecComponentsParameterValuesValue struct {
}

// ApplicationConfigurationSpecComponentsParameterValuesValueInput is an input type that accepts ApplicationConfigurationSpecComponentsParameterValuesValueArgs and ApplicationConfigurationSpecComponentsParameterValuesValueOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsParameterValuesValueInput` via:
//
//          ApplicationConfigurationSpecComponentsParameterValuesValueArgs{...}
type ApplicationConfigurationSpecComponentsParameterValuesValueInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsParameterValuesValueOutput() ApplicationConfigurationSpecComponentsParameterValuesValueOutput
	ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsParameterValuesValueOutput
}

type ApplicationConfigurationSpecComponentsParameterValuesValueArgs struct {
}

func (ApplicationConfigurationSpecComponentsParameterValuesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValuesValue)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsParameterValuesValueArgs) ToApplicationConfigurationSpecComponentsParameterValuesValueOutput() ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return i.ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsParameterValuesValueArgs) ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsParameterValuesValueOutput)
}

type ApplicationConfigurationSpecComponentsParameterValuesValueOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsParameterValuesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValuesValue)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsParameterValuesValueOutput) ToApplicationConfigurationSpecComponentsParameterValuesValueOutput() ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesValueOutput) ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return o
}

// A ComponentScope specifies a scope in which a component should exist.
type ApplicationConfigurationSpecComponentsScopes struct {
	// A ScopeReference must refer to an OAM scope resource.
	ScopeRef ApplicationConfigurationSpecComponentsScopesScopeRef `pulumi:"scopeRef"`
}

// ApplicationConfigurationSpecComponentsScopesInput is an input type that accepts ApplicationConfigurationSpecComponentsScopesArgs and ApplicationConfigurationSpecComponentsScopesOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsScopesInput` via:
//
//          ApplicationConfigurationSpecComponentsScopesArgs{...}
type ApplicationConfigurationSpecComponentsScopesInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsScopesOutput() ApplicationConfigurationSpecComponentsScopesOutput
	ToApplicationConfigurationSpecComponentsScopesOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsScopesOutput
}

// A ComponentScope specifies a scope in which a component should exist.
type ApplicationConfigurationSpecComponentsScopesArgs struct {
	// A ScopeReference must refer to an OAM scope resource.
	ScopeRef ApplicationConfigurationSpecComponentsScopesScopeRefInput `pulumi:"scopeRef"`
}

func (ApplicationConfigurationSpecComponentsScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsScopesArgs) ToApplicationConfigurationSpecComponentsScopesOutput() ApplicationConfigurationSpecComponentsScopesOutput {
	return i.ToApplicationConfigurationSpecComponentsScopesOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsScopesArgs) ToApplicationConfigurationSpecComponentsScopesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsScopesOutput)
}

// ApplicationConfigurationSpecComponentsScopesArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsScopesArray and ApplicationConfigurationSpecComponentsScopesArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsScopesArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsScopesArray{ ApplicationConfigurationSpecComponentsScopesArgs{...} }
type ApplicationConfigurationSpecComponentsScopesArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsScopesArrayOutput() ApplicationConfigurationSpecComponentsScopesArrayOutput
	ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsScopesArrayOutput
}

type ApplicationConfigurationSpecComponentsScopesArray []ApplicationConfigurationSpecComponentsScopesInput

func (ApplicationConfigurationSpecComponentsScopesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsScopesArray) ToApplicationConfigurationSpecComponentsScopesArrayOutput() ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsScopesArray) ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsScopesArrayOutput)
}

// A ComponentScope specifies a scope in which a component should exist.
type ApplicationConfigurationSpecComponentsScopesOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsScopesOutput) ToApplicationConfigurationSpecComponentsScopesOutput() ApplicationConfigurationSpecComponentsScopesOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesOutput) ToApplicationConfigurationSpecComponentsScopesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesOutput {
	return o
}

// A ScopeReference must refer to an OAM scope resource.
func (o ApplicationConfigurationSpecComponentsScopesOutput) ScopeRef() ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopes) ApplicationConfigurationSpecComponentsScopesScopeRef {
		return v.ScopeRef
	}).(ApplicationConfigurationSpecComponentsScopesScopeRefOutput)
}

type ApplicationConfigurationSpecComponentsScopesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsScopesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsScopesArrayOutput) ToApplicationConfigurationSpecComponentsScopesArrayOutput() ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesArrayOutput) ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsScopesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponentsScopes {
		return vs[0].([]ApplicationConfigurationSpecComponentsScopes)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsScopesOutput)
}

// A ScopeReference must refer to an OAM scope resource.
type ApplicationConfigurationSpecComponentsScopesScopeRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ApplicationConfigurationSpecComponentsScopesScopeRefInput is an input type that accepts ApplicationConfigurationSpecComponentsScopesScopeRefArgs and ApplicationConfigurationSpecComponentsScopesScopeRefOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsScopesScopeRefInput` via:
//
//          ApplicationConfigurationSpecComponentsScopesScopeRefArgs{...}
type ApplicationConfigurationSpecComponentsScopesScopeRefInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsScopesScopeRefOutput() ApplicationConfigurationSpecComponentsScopesScopeRefOutput
	ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsScopesScopeRefOutput
}

// A ScopeReference must refer to an OAM scope resource.
type ApplicationConfigurationSpecComponentsScopesScopeRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationConfigurationSpecComponentsScopesScopeRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopesScopeRef)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsScopesScopeRefArgs) ToApplicationConfigurationSpecComponentsScopesScopeRefOutput() ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return i.ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsScopesScopeRefArgs) ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsScopesScopeRefOutput)
}

// A ScopeReference must refer to an OAM scope resource.
type ApplicationConfigurationSpecComponentsScopesScopeRefOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopesScopeRef)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ToApplicationConfigurationSpecComponentsScopesScopeRefOutput() ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return o
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

// A ComponentTrait specifies a trait that should be applied to a component.
type ApplicationConfigurationSpecComponentsTraits struct {
	// A Trait that will be created for the component
	Trait map[string]interface{} `pulumi:"trait"`
}

// ApplicationConfigurationSpecComponentsTraitsInput is an input type that accepts ApplicationConfigurationSpecComponentsTraitsArgs and ApplicationConfigurationSpecComponentsTraitsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsTraitsInput` via:
//
//          ApplicationConfigurationSpecComponentsTraitsArgs{...}
type ApplicationConfigurationSpecComponentsTraitsInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsTraitsOutput() ApplicationConfigurationSpecComponentsTraitsOutput
	ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsTraitsOutput
}

// A ComponentTrait specifies a trait that should be applied to a component.
type ApplicationConfigurationSpecComponentsTraitsArgs struct {
	// A Trait that will be created for the component
	Trait pulumi.MapInput `pulumi:"trait"`
}

func (ApplicationConfigurationSpecComponentsTraitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsTraitsArgs) ToApplicationConfigurationSpecComponentsTraitsOutput() ApplicationConfigurationSpecComponentsTraitsOutput {
	return i.ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsTraitsArgs) ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsTraitsOutput)
}

// ApplicationConfigurationSpecComponentsTraitsArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsTraitsArray and ApplicationConfigurationSpecComponentsTraitsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsTraitsArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsTraitsArray{ ApplicationConfigurationSpecComponentsTraitsArgs{...} }
type ApplicationConfigurationSpecComponentsTraitsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsTraitsArrayOutput() ApplicationConfigurationSpecComponentsTraitsArrayOutput
	ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsTraitsArrayOutput
}

type ApplicationConfigurationSpecComponentsTraitsArray []ApplicationConfigurationSpecComponentsTraitsInput

func (ApplicationConfigurationSpecComponentsTraitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsTraitsArray) ToApplicationConfigurationSpecComponentsTraitsArrayOutput() ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsTraitsArray) ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsTraitsArrayOutput)
}

// A ComponentTrait specifies a trait that should be applied to a component.
type ApplicationConfigurationSpecComponentsTraitsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsTraitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsTraitsOutput) ToApplicationConfigurationSpecComponentsTraitsOutput() ApplicationConfigurationSpecComponentsTraitsOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsTraitsOutput) ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsOutput {
	return o
}

// A Trait that will be created for the component
func (o ApplicationConfigurationSpecComponentsTraitsOutput) Trait() pulumi.MapOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsTraits) map[string]interface{} { return v.Trait }).(pulumi.MapOutput)
}

type ApplicationConfigurationSpecComponentsTraitsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsTraitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsTraitsArrayOutput) ToApplicationConfigurationSpecComponentsTraitsArrayOutput() ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsTraitsArrayOutput) ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsTraitsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsTraitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponentsTraits {
		return vs[0].([]ApplicationConfigurationSpecComponentsTraits)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsTraitsOutput)
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
type ApplicationConfigurationStatus struct {
	// Conditions of the resource.
	Conditions []ApplicationConfigurationStatusConditions `pulumi:"conditions"`
	// Workloads created by this ApplicationConfiguration.
	Workloads []ApplicationConfigurationStatusWorkloads `pulumi:"workloads"`
}

// ApplicationConfigurationStatusInput is an input type that accepts ApplicationConfigurationStatusArgs and ApplicationConfigurationStatusOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusInput` via:
//
//          ApplicationConfigurationStatusArgs{...}
type ApplicationConfigurationStatusInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusOutput() ApplicationConfigurationStatusOutput
	ToApplicationConfigurationStatusOutputWithContext(context.Context) ApplicationConfigurationStatusOutput
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
type ApplicationConfigurationStatusArgs struct {
	// Conditions of the resource.
	Conditions ApplicationConfigurationStatusConditionsArrayInput `pulumi:"conditions"`
	// Workloads created by this ApplicationConfiguration.
	Workloads ApplicationConfigurationStatusWorkloadsArrayInput `pulumi:"workloads"`
}

func (ApplicationConfigurationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatus)(nil)).Elem()
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusOutput() ApplicationConfigurationStatusOutput {
	return i.ToApplicationConfigurationStatusOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusOutputWithContext(ctx context.Context) ApplicationConfigurationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusOutput)
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return i.ToApplicationConfigurationStatusPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusOutput).ToApplicationConfigurationStatusPtrOutputWithContext(ctx)
}

// ApplicationConfigurationStatusPtrInput is an input type that accepts ApplicationConfigurationStatusArgs, ApplicationConfigurationStatusPtr and ApplicationConfigurationStatusPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusPtrInput` via:
//
//          ApplicationConfigurationStatusArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationStatusPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput
	ToApplicationConfigurationStatusPtrOutputWithContext(context.Context) ApplicationConfigurationStatusPtrOutput
}

type applicationConfigurationStatusPtrType ApplicationConfigurationStatusArgs

func ApplicationConfigurationStatusPtr(v *ApplicationConfigurationStatusArgs) ApplicationConfigurationStatusPtrInput {
	return (*applicationConfigurationStatusPtrType)(v)
}

func (*applicationConfigurationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatus)(nil)).Elem()
}

func (i *applicationConfigurationStatusPtrType) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return i.ToApplicationConfigurationStatusPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationStatusPtrType) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusPtrOutput)
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
type ApplicationConfigurationStatusOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatus)(nil)).Elem()
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusOutput() ApplicationConfigurationStatusOutput {
	return o
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusOutputWithContext(ctx context.Context) ApplicationConfigurationStatusOutput {
	return o
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return o.ToApplicationConfigurationStatusPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatus) *ApplicationConfigurationStatus {
		return &v
	}).(ApplicationConfigurationStatusPtrOutput)
}

// Conditions of the resource.
func (o ApplicationConfigurationStatusOutput) Conditions() ApplicationConfigurationStatusConditionsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatus) []ApplicationConfigurationStatusConditions { return v.Conditions }).(ApplicationConfigurationStatusConditionsArrayOutput)
}

// Workloads created by this ApplicationConfiguration.
func (o ApplicationConfigurationStatusOutput) Workloads() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatus) []ApplicationConfigurationStatusWorkloads { return v.Workloads }).(ApplicationConfigurationStatusWorkloadsArrayOutput)
}

type ApplicationConfigurationStatusPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatus)(nil)).Elem()
}

func (o ApplicationConfigurationStatusPtrOutput) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusPtrOutput) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusPtrOutput) Elem() ApplicationConfigurationStatusOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatus) ApplicationConfigurationStatus { return *v }).(ApplicationConfigurationStatusOutput)
}

// Conditions of the resource.
func (o ApplicationConfigurationStatusPtrOutput) Conditions() ApplicationConfigurationStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatus) []ApplicationConfigurationStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ApplicationConfigurationStatusConditionsArrayOutput)
}

// Workloads created by this ApplicationConfiguration.
func (o ApplicationConfigurationStatusPtrOutput) Workloads() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatus) []ApplicationConfigurationStatusWorkloads {
		if v == nil {
			return nil
		}
		return v.Workloads
	}).(ApplicationConfigurationStatusWorkloadsArrayOutput)
}

// A Condition that may apply to a resource.
type ApplicationConfigurationStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// ApplicationConfigurationStatusConditionsInput is an input type that accepts ApplicationConfigurationStatusConditionsArgs and ApplicationConfigurationStatusConditionsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusConditionsInput` via:
//
//          ApplicationConfigurationStatusConditionsArgs{...}
type ApplicationConfigurationStatusConditionsInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusConditionsOutput() ApplicationConfigurationStatusConditionsOutput
	ToApplicationConfigurationStatusConditionsOutputWithContext(context.Context) ApplicationConfigurationStatusConditionsOutput
}

// A Condition that may apply to a resource.
type ApplicationConfigurationStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationConfigurationStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (i ApplicationConfigurationStatusConditionsArgs) ToApplicationConfigurationStatusConditionsOutput() ApplicationConfigurationStatusConditionsOutput {
	return i.ToApplicationConfigurationStatusConditionsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusConditionsArgs) ToApplicationConfigurationStatusConditionsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusConditionsOutput)
}

// ApplicationConfigurationStatusConditionsArrayInput is an input type that accepts ApplicationConfigurationStatusConditionsArray and ApplicationConfigurationStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusConditionsArrayInput` via:
//
//          ApplicationConfigurationStatusConditionsArray{ ApplicationConfigurationStatusConditionsArgs{...} }
type ApplicationConfigurationStatusConditionsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusConditionsArrayOutput() ApplicationConfigurationStatusConditionsArrayOutput
	ToApplicationConfigurationStatusConditionsArrayOutputWithContext(context.Context) ApplicationConfigurationStatusConditionsArrayOutput
}

type ApplicationConfigurationStatusConditionsArray []ApplicationConfigurationStatusConditionsInput

func (ApplicationConfigurationStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (i ApplicationConfigurationStatusConditionsArray) ToApplicationConfigurationStatusConditionsArrayOutput() ApplicationConfigurationStatusConditionsArrayOutput {
	return i.ToApplicationConfigurationStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusConditionsArray) ToApplicationConfigurationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ApplicationConfigurationStatusConditionsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (o ApplicationConfigurationStatusConditionsOutput) ToApplicationConfigurationStatusConditionsOutput() ApplicationConfigurationStatusConditionsOutput {
	return o
}

func (o ApplicationConfigurationStatusConditionsOutput) ToApplicationConfigurationStatusConditionsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o ApplicationConfigurationStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o ApplicationConfigurationStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o ApplicationConfigurationStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o ApplicationConfigurationStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o ApplicationConfigurationStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationConfigurationStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (o ApplicationConfigurationStatusConditionsArrayOutput) ToApplicationConfigurationStatusConditionsArrayOutput() ApplicationConfigurationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusConditionsArrayOutput) ToApplicationConfigurationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusConditionsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationStatusConditions {
		return vs[0].([]ApplicationConfigurationStatusConditions)[vs[1].(int)]
	}).(ApplicationConfigurationStatusConditionsOutput)
}

// A WorkloadStatus represents the status of a workload.
type ApplicationConfigurationStatusWorkloads struct {
	// ComponentName that produced this workload.
	ComponentName *string `pulumi:"componentName"`
	// Traits associated with this workload.
	Traits []ApplicationConfigurationStatusWorkloadsTraits `pulumi:"traits"`
	// Reference to a workload created by an ApplicationConfiguration.
	WorkloadRef *ApplicationConfigurationStatusWorkloadsWorkloadRef `pulumi:"workloadRef"`
}

// ApplicationConfigurationStatusWorkloadsInput is an input type that accepts ApplicationConfigurationStatusWorkloadsArgs and ApplicationConfigurationStatusWorkloadsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsInput` via:
//
//          ApplicationConfigurationStatusWorkloadsArgs{...}
type ApplicationConfigurationStatusWorkloadsInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsOutput() ApplicationConfigurationStatusWorkloadsOutput
	ToApplicationConfigurationStatusWorkloadsOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsOutput
}

// A WorkloadStatus represents the status of a workload.
type ApplicationConfigurationStatusWorkloadsArgs struct {
	// ComponentName that produced this workload.
	ComponentName pulumi.StringPtrInput `pulumi:"componentName"`
	// Traits associated with this workload.
	Traits ApplicationConfigurationStatusWorkloadsTraitsArrayInput `pulumi:"traits"`
	// Reference to a workload created by an ApplicationConfiguration.
	WorkloadRef ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput `pulumi:"workloadRef"`
}

func (ApplicationConfigurationStatusWorkloadsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsArgs) ToApplicationConfigurationStatusWorkloadsOutput() ApplicationConfigurationStatusWorkloadsOutput {
	return i.ToApplicationConfigurationStatusWorkloadsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsArgs) ToApplicationConfigurationStatusWorkloadsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsOutput)
}

// ApplicationConfigurationStatusWorkloadsArrayInput is an input type that accepts ApplicationConfigurationStatusWorkloadsArray and ApplicationConfigurationStatusWorkloadsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsArrayInput` via:
//
//          ApplicationConfigurationStatusWorkloadsArray{ ApplicationConfigurationStatusWorkloadsArgs{...} }
type ApplicationConfigurationStatusWorkloadsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsArrayOutput() ApplicationConfigurationStatusWorkloadsArrayOutput
	ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsArrayOutput
}

type ApplicationConfigurationStatusWorkloadsArray []ApplicationConfigurationStatusWorkloadsInput

func (ApplicationConfigurationStatusWorkloadsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsArray) ToApplicationConfigurationStatusWorkloadsArrayOutput() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return i.ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsArray) ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsArrayOutput)
}

// A WorkloadStatus represents the status of a workload.
type ApplicationConfigurationStatusWorkloadsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsOutput) ToApplicationConfigurationStatusWorkloadsOutput() ApplicationConfigurationStatusWorkloadsOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsOutput) ToApplicationConfigurationStatusWorkloadsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsOutput {
	return o
}

// ComponentName that produced this workload.
func (o ApplicationConfigurationStatusWorkloadsOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloads) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// Traits associated with this workload.
func (o ApplicationConfigurationStatusWorkloadsOutput) Traits() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloads) []ApplicationConfigurationStatusWorkloadsTraits {
		return v.Traits
	}).(ApplicationConfigurationStatusWorkloadsTraitsArrayOutput)
}

// Reference to a workload created by an ApplicationConfiguration.
func (o ApplicationConfigurationStatusWorkloadsOutput) WorkloadRef() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloads) *ApplicationConfigurationStatusWorkloadsWorkloadRef {
		return v.WorkloadRef
	}).(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput)
}

type ApplicationConfigurationStatusWorkloadsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsArrayOutput) ToApplicationConfigurationStatusWorkloadsArrayOutput() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsArrayOutput) ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationStatusWorkloadsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationStatusWorkloads {
		return vs[0].([]ApplicationConfigurationStatusWorkloads)[vs[1].(int)]
	}).(ApplicationConfigurationStatusWorkloadsOutput)
}

// A WorkloadTrait represents a trait associated with a workload.
type ApplicationConfigurationStatusWorkloadsTraits struct {
	// Reference to a trait created by an ApplicationConfiguration.
	TraitRef ApplicationConfigurationStatusWorkloadsTraitsTraitRef `pulumi:"traitRef"`
}

// ApplicationConfigurationStatusWorkloadsTraitsInput is an input type that accepts ApplicationConfigurationStatusWorkloadsTraitsArgs and ApplicationConfigurationStatusWorkloadsTraitsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsTraitsInput` via:
//
//          ApplicationConfigurationStatusWorkloadsTraitsArgs{...}
type ApplicationConfigurationStatusWorkloadsTraitsInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsTraitsOutput() ApplicationConfigurationStatusWorkloadsTraitsOutput
	ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsTraitsOutput
}

// A WorkloadTrait represents a trait associated with a workload.
type ApplicationConfigurationStatusWorkloadsTraitsArgs struct {
	// Reference to a trait created by an ApplicationConfiguration.
	TraitRef ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput `pulumi:"traitRef"`
}

func (ApplicationConfigurationStatusWorkloadsTraitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArgs) ToApplicationConfigurationStatusWorkloadsTraitsOutput() ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return i.ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArgs) ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsTraitsOutput)
}

// ApplicationConfigurationStatusWorkloadsTraitsArrayInput is an input type that accepts ApplicationConfigurationStatusWorkloadsTraitsArray and ApplicationConfigurationStatusWorkloadsTraitsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsTraitsArrayInput` via:
//
//          ApplicationConfigurationStatusWorkloadsTraitsArray{ ApplicationConfigurationStatusWorkloadsTraitsArgs{...} }
type ApplicationConfigurationStatusWorkloadsTraitsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsTraitsArrayOutput() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput
	ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsTraitsArrayOutput
}

type ApplicationConfigurationStatusWorkloadsTraitsArray []ApplicationConfigurationStatusWorkloadsTraitsInput

func (ApplicationConfigurationStatusWorkloadsTraitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArray) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutput() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return i.ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArray) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsTraitsArrayOutput)
}

// A WorkloadTrait represents a trait associated with a workload.
type ApplicationConfigurationStatusWorkloadsTraitsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsTraitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsTraitsOutput) ToApplicationConfigurationStatusWorkloadsTraitsOutput() ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsOutput) ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return o
}

// Reference to a trait created by an ApplicationConfiguration.
func (o ApplicationConfigurationStatusWorkloadsTraitsOutput) TraitRef() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraits) ApplicationConfigurationStatusWorkloadsTraitsTraitRef {
		return v.TraitRef
	}).(ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput)
}

type ApplicationConfigurationStatusWorkloadsTraitsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutput() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationStatusWorkloadsTraits {
		return vs[0].([]ApplicationConfigurationStatusWorkloadsTraits)[vs[1].(int)]
	}).(ApplicationConfigurationStatusWorkloadsTraitsOutput)
}

// Reference to a trait created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsTraitsTraitRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput is an input type that accepts ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs and ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput` via:
//
//          ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs{...}
type ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput
	ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput
}

// Reference to a trait created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraitsTraitRef)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return i.ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput)
}

// Reference to a trait created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraitsTraitRef)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return o
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

// Reference to a workload created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsWorkloadRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ApplicationConfigurationStatusWorkloadsWorkloadRefInput is an input type that accepts ApplicationConfigurationStatusWorkloadsWorkloadRefArgs and ApplicationConfigurationStatusWorkloadsWorkloadRefOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsWorkloadRefInput` via:
//
//          ApplicationConfigurationStatusWorkloadsWorkloadRefArgs{...}
type ApplicationConfigurationStatusWorkloadsWorkloadRefInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsWorkloadRefOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput
	ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefOutput
}

// Reference to a workload created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsWorkloadRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return i.ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput)
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return i.ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput).ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx)
}

// ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput is an input type that accepts ApplicationConfigurationStatusWorkloadsWorkloadRefArgs, ApplicationConfigurationStatusWorkloadsWorkloadRefPtr and ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput` via:
//
//          ApplicationConfigurationStatusWorkloadsWorkloadRefArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput
	ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput
}

type applicationConfigurationStatusWorkloadsWorkloadRefPtrType ApplicationConfigurationStatusWorkloadsWorkloadRefArgs

func ApplicationConfigurationStatusWorkloadsWorkloadRefPtr(v *ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput {
	return (*applicationConfigurationStatusWorkloadsWorkloadRefPtrType)(v)
}

func (*applicationConfigurationStatusWorkloadsWorkloadRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (i *applicationConfigurationStatusWorkloadsWorkloadRefPtrType) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return i.ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationStatusWorkloadsWorkloadRefPtrType) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput)
}

// Reference to a workload created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsWorkloadRefOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o.ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) *ApplicationConfigurationStatusWorkloadsWorkloadRef {
		return &v
	}).(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput)
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Elem() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) ApplicationConfigurationStatusWorkloadsWorkloadRef {
		return *v
	}).(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput)
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationConfigurationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecPtrOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsParameterValuesOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsParameterValuesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsParameterValuesValueOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsScopesOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsScopesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsScopesScopeRefOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsTraitsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsTraitsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusPtrOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusConditionsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsTraitsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsTraitsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput{})
}
