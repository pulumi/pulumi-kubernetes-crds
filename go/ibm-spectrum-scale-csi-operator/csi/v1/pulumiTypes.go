// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CSIScaleOperatorType struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets []string                `pulumi:"imagePullSecrets"`
	Kind             *string                 `pulumi:"kind"`
	Metadata         *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec             *CSIScaleOperatorSpec   `pulumi:"spec"`
	Status           *CSIScaleOperatorStatus `pulumi:"status"`
}

// CSIScaleOperatorTypeInput is an input type that accepts CSIScaleOperatorTypeArgs and CSIScaleOperatorTypeOutput values.
// You can construct a concrete instance of `CSIScaleOperatorTypeInput` via:
//
//          CSIScaleOperatorTypeArgs{...}
type CSIScaleOperatorTypeInput interface {
	pulumi.Input

	ToCSIScaleOperatorTypeOutput() CSIScaleOperatorTypeOutput
	ToCSIScaleOperatorTypeOutputWithContext(context.Context) CSIScaleOperatorTypeOutput
}

type CSIScaleOperatorTypeArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets pulumi.StringArrayInput        `pulumi:"imagePullSecrets"`
	Kind             pulumi.StringPtrInput          `pulumi:"kind"`
	Metadata         metav1.ObjectMetaPtrInput      `pulumi:"metadata"`
	Spec             CSIScaleOperatorSpecPtrInput   `pulumi:"spec"`
	Status           CSIScaleOperatorStatusPtrInput `pulumi:"status"`
}

func (CSIScaleOperatorTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorType)(nil)).Elem()
}

func (i CSIScaleOperatorTypeArgs) ToCSIScaleOperatorTypeOutput() CSIScaleOperatorTypeOutput {
	return i.ToCSIScaleOperatorTypeOutputWithContext(context.Background())
}

func (i CSIScaleOperatorTypeArgs) ToCSIScaleOperatorTypeOutputWithContext(ctx context.Context) CSIScaleOperatorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorTypeOutput)
}

type CSIScaleOperatorTypeOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorType)(nil)).Elem()
}

func (o CSIScaleOperatorTypeOutput) ToCSIScaleOperatorTypeOutput() CSIScaleOperatorTypeOutput {
	return o
}

func (o CSIScaleOperatorTypeOutput) ToCSIScaleOperatorTypeOutputWithContext(ctx context.Context) CSIScaleOperatorTypeOutput {
	return o
}

func (o CSIScaleOperatorTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
func (o CSIScaleOperatorTypeOutput) ImagePullSecrets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorType) []string { return v.ImagePullSecrets }).(pulumi.StringArrayOutput)
}

func (o CSIScaleOperatorTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CSIScaleOperatorTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o CSIScaleOperatorTypeOutput) Spec() CSIScaleOperatorSpecPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorType) *CSIScaleOperatorSpec { return v.Spec }).(CSIScaleOperatorSpecPtrOutput)
}

func (o CSIScaleOperatorTypeOutput) Status() CSIScaleOperatorStatusPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorType) *CSIScaleOperatorStatus { return v.Status }).(CSIScaleOperatorStatusPtrOutput)
}

type CSIScaleOperatorMetadata struct {
}

// CSIScaleOperatorMetadataInput is an input type that accepts CSIScaleOperatorMetadataArgs and CSIScaleOperatorMetadataOutput values.
// You can construct a concrete instance of `CSIScaleOperatorMetadataInput` via:
//
//          CSIScaleOperatorMetadataArgs{...}
type CSIScaleOperatorMetadataInput interface {
	pulumi.Input

	ToCSIScaleOperatorMetadataOutput() CSIScaleOperatorMetadataOutput
	ToCSIScaleOperatorMetadataOutputWithContext(context.Context) CSIScaleOperatorMetadataOutput
}

type CSIScaleOperatorMetadataArgs struct {
}

func (CSIScaleOperatorMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorMetadata)(nil)).Elem()
}

func (i CSIScaleOperatorMetadataArgs) ToCSIScaleOperatorMetadataOutput() CSIScaleOperatorMetadataOutput {
	return i.ToCSIScaleOperatorMetadataOutputWithContext(context.Background())
}

func (i CSIScaleOperatorMetadataArgs) ToCSIScaleOperatorMetadataOutputWithContext(ctx context.Context) CSIScaleOperatorMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorMetadataOutput)
}

type CSIScaleOperatorMetadataOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorMetadata)(nil)).Elem()
}

func (o CSIScaleOperatorMetadataOutput) ToCSIScaleOperatorMetadataOutput() CSIScaleOperatorMetadataOutput {
	return o
}

func (o CSIScaleOperatorMetadataOutput) ToCSIScaleOperatorMetadataOutputWithContext(ctx context.Context) CSIScaleOperatorMetadataOutput {
	return o
}

type CSIScaleOperatorSpec struct {
	// Attacher image for csi (actually attaches to the storage).
	Attacher *string `pulumi:"attacher"`
	// Node selector for attacher sidecar.
	AttacherNodeSelector []CSIScaleOperatorSpecAttacherNodeSelector `pulumi:"attacherNodeSelector"`
	// A collection of gpfs cluster properties for the csi driver to mount.
	Clusters []CSIScaleOperatorSpecClusters `pulumi:"clusters"`
	// Sidecar container image for the csi spectrum scale plugin pods.
	DriverRegistrar *string `pulumi:"driverRegistrar"`
	// Mapping of K8s node with SpectrumScale node.
	NodeMapping []CSIScaleOperatorSpecNodeMapping `pulumi:"nodeMapping"`
	// Node selector for SpectrumScale CSI Plugin.
	PluginNodeSelector []CSIScaleOperatorSpecPluginNodeSelector `pulumi:"pluginNodeSelector"`
	// Provisioner image for csi (actually issues provision requests).
	Provisioner *string `pulumi:"provisioner"`
	// Node selector for provisioner sidecar.
	ProvisionerNodeSelector []CSIScaleOperatorSpecProvisionerNodeSelector `pulumi:"provisionerNodeSelector"`
	// The path to the gpfs file system mounted on the host machine.
	ScaleHostpath string `pulumi:"scaleHostpath"`
	// An internal counter used by the operator to trigger reloads on secret change.
	SecretCounter *int `pulumi:"secretCounter"`
	// Image name for the csi spectrum scale plugin container.
	SpectrumScale *string `pulumi:"spectrumScale"`
	// A generic trigger to be used in kickin off the ansible operator.
	Trigger *string `pulumi:"trigger"`
}

// CSIScaleOperatorSpecInput is an input type that accepts CSIScaleOperatorSpecArgs and CSIScaleOperatorSpecOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecInput` via:
//
//          CSIScaleOperatorSpecArgs{...}
type CSIScaleOperatorSpecInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecOutput() CSIScaleOperatorSpecOutput
	ToCSIScaleOperatorSpecOutputWithContext(context.Context) CSIScaleOperatorSpecOutput
}

type CSIScaleOperatorSpecArgs struct {
	// Attacher image for csi (actually attaches to the storage).
	Attacher pulumi.StringPtrInput `pulumi:"attacher"`
	// Node selector for attacher sidecar.
	AttacherNodeSelector CSIScaleOperatorSpecAttacherNodeSelectorArrayInput `pulumi:"attacherNodeSelector"`
	// A collection of gpfs cluster properties for the csi driver to mount.
	Clusters CSIScaleOperatorSpecClustersArrayInput `pulumi:"clusters"`
	// Sidecar container image for the csi spectrum scale plugin pods.
	DriverRegistrar pulumi.StringPtrInput `pulumi:"driverRegistrar"`
	// Mapping of K8s node with SpectrumScale node.
	NodeMapping CSIScaleOperatorSpecNodeMappingArrayInput `pulumi:"nodeMapping"`
	// Node selector for SpectrumScale CSI Plugin.
	PluginNodeSelector CSIScaleOperatorSpecPluginNodeSelectorArrayInput `pulumi:"pluginNodeSelector"`
	// Provisioner image for csi (actually issues provision requests).
	Provisioner pulumi.StringPtrInput `pulumi:"provisioner"`
	// Node selector for provisioner sidecar.
	ProvisionerNodeSelector CSIScaleOperatorSpecProvisionerNodeSelectorArrayInput `pulumi:"provisionerNodeSelector"`
	// The path to the gpfs file system mounted on the host machine.
	ScaleHostpath pulumi.StringInput `pulumi:"scaleHostpath"`
	// An internal counter used by the operator to trigger reloads on secret change.
	SecretCounter pulumi.IntPtrInput `pulumi:"secretCounter"`
	// Image name for the csi spectrum scale plugin container.
	SpectrumScale pulumi.StringPtrInput `pulumi:"spectrumScale"`
	// A generic trigger to be used in kickin off the ansible operator.
	Trigger pulumi.StringPtrInput `pulumi:"trigger"`
}

func (CSIScaleOperatorSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpec)(nil)).Elem()
}

func (i CSIScaleOperatorSpecArgs) ToCSIScaleOperatorSpecOutput() CSIScaleOperatorSpecOutput {
	return i.ToCSIScaleOperatorSpecOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecArgs) ToCSIScaleOperatorSpecOutputWithContext(ctx context.Context) CSIScaleOperatorSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecOutput)
}

func (i CSIScaleOperatorSpecArgs) ToCSIScaleOperatorSpecPtrOutput() CSIScaleOperatorSpecPtrOutput {
	return i.ToCSIScaleOperatorSpecPtrOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecArgs) ToCSIScaleOperatorSpecPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecOutput).ToCSIScaleOperatorSpecPtrOutputWithContext(ctx)
}

// CSIScaleOperatorSpecPtrInput is an input type that accepts CSIScaleOperatorSpecArgs, CSIScaleOperatorSpecPtr and CSIScaleOperatorSpecPtrOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecPtrInput` via:
//
//          CSIScaleOperatorSpecArgs{...}
//
//  or:
//
//          nil
type CSIScaleOperatorSpecPtrInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecPtrOutput() CSIScaleOperatorSpecPtrOutput
	ToCSIScaleOperatorSpecPtrOutputWithContext(context.Context) CSIScaleOperatorSpecPtrOutput
}

type csiscaleOperatorSpecPtrType CSIScaleOperatorSpecArgs

func CSIScaleOperatorSpecPtr(v *CSIScaleOperatorSpecArgs) CSIScaleOperatorSpecPtrInput {
	return (*csiscaleOperatorSpecPtrType)(v)
}

func (*csiscaleOperatorSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CSIScaleOperatorSpec)(nil)).Elem()
}

func (i *csiscaleOperatorSpecPtrType) ToCSIScaleOperatorSpecPtrOutput() CSIScaleOperatorSpecPtrOutput {
	return i.ToCSIScaleOperatorSpecPtrOutputWithContext(context.Background())
}

func (i *csiscaleOperatorSpecPtrType) ToCSIScaleOperatorSpecPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecPtrOutput)
}

type CSIScaleOperatorSpecOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpec)(nil)).Elem()
}

func (o CSIScaleOperatorSpecOutput) ToCSIScaleOperatorSpecOutput() CSIScaleOperatorSpecOutput {
	return o
}

func (o CSIScaleOperatorSpecOutput) ToCSIScaleOperatorSpecOutputWithContext(ctx context.Context) CSIScaleOperatorSpecOutput {
	return o
}

func (o CSIScaleOperatorSpecOutput) ToCSIScaleOperatorSpecPtrOutput() CSIScaleOperatorSpecPtrOutput {
	return o.ToCSIScaleOperatorSpecPtrOutputWithContext(context.Background())
}

func (o CSIScaleOperatorSpecOutput) ToCSIScaleOperatorSpecPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *CSIScaleOperatorSpec {
		return &v
	}).(CSIScaleOperatorSpecPtrOutput)
}

// Attacher image for csi (actually attaches to the storage).
func (o CSIScaleOperatorSpecOutput) Attacher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *string { return v.Attacher }).(pulumi.StringPtrOutput)
}

// Node selector for attacher sidecar.
func (o CSIScaleOperatorSpecOutput) AttacherNodeSelector() CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) []CSIScaleOperatorSpecAttacherNodeSelector { return v.AttacherNodeSelector }).(CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput)
}

// A collection of gpfs cluster properties for the csi driver to mount.
func (o CSIScaleOperatorSpecOutput) Clusters() CSIScaleOperatorSpecClustersArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) []CSIScaleOperatorSpecClusters { return v.Clusters }).(CSIScaleOperatorSpecClustersArrayOutput)
}

// Sidecar container image for the csi spectrum scale plugin pods.
func (o CSIScaleOperatorSpecOutput) DriverRegistrar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *string { return v.DriverRegistrar }).(pulumi.StringPtrOutput)
}

// Mapping of K8s node with SpectrumScale node.
func (o CSIScaleOperatorSpecOutput) NodeMapping() CSIScaleOperatorSpecNodeMappingArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) []CSIScaleOperatorSpecNodeMapping { return v.NodeMapping }).(CSIScaleOperatorSpecNodeMappingArrayOutput)
}

// Node selector for SpectrumScale CSI Plugin.
func (o CSIScaleOperatorSpecOutput) PluginNodeSelector() CSIScaleOperatorSpecPluginNodeSelectorArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) []CSIScaleOperatorSpecPluginNodeSelector { return v.PluginNodeSelector }).(CSIScaleOperatorSpecPluginNodeSelectorArrayOutput)
}

// Provisioner image for csi (actually issues provision requests).
func (o CSIScaleOperatorSpecOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *string { return v.Provisioner }).(pulumi.StringPtrOutput)
}

// Node selector for provisioner sidecar.
func (o CSIScaleOperatorSpecOutput) ProvisionerNodeSelector() CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) []CSIScaleOperatorSpecProvisionerNodeSelector {
		return v.ProvisionerNodeSelector
	}).(CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput)
}

// The path to the gpfs file system mounted on the host machine.
func (o CSIScaleOperatorSpecOutput) ScaleHostpath() pulumi.StringOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) string { return v.ScaleHostpath }).(pulumi.StringOutput)
}

// An internal counter used by the operator to trigger reloads on secret change.
func (o CSIScaleOperatorSpecOutput) SecretCounter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *int { return v.SecretCounter }).(pulumi.IntPtrOutput)
}

// Image name for the csi spectrum scale plugin container.
func (o CSIScaleOperatorSpecOutput) SpectrumScale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *string { return v.SpectrumScale }).(pulumi.StringPtrOutput)
}

// A generic trigger to be used in kickin off the ansible operator.
func (o CSIScaleOperatorSpecOutput) Trigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpec) *string { return v.Trigger }).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecPtrOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CSIScaleOperatorSpec)(nil)).Elem()
}

func (o CSIScaleOperatorSpecPtrOutput) ToCSIScaleOperatorSpecPtrOutput() CSIScaleOperatorSpecPtrOutput {
	return o
}

func (o CSIScaleOperatorSpecPtrOutput) ToCSIScaleOperatorSpecPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPtrOutput {
	return o
}

func (o CSIScaleOperatorSpecPtrOutput) Elem() CSIScaleOperatorSpecOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) CSIScaleOperatorSpec { return *v }).(CSIScaleOperatorSpecOutput)
}

// Attacher image for csi (actually attaches to the storage).
func (o CSIScaleOperatorSpecPtrOutput) Attacher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *string {
		if v == nil {
			return nil
		}
		return v.Attacher
	}).(pulumi.StringPtrOutput)
}

// Node selector for attacher sidecar.
func (o CSIScaleOperatorSpecPtrOutput) AttacherNodeSelector() CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) []CSIScaleOperatorSpecAttacherNodeSelector {
		if v == nil {
			return nil
		}
		return v.AttacherNodeSelector
	}).(CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput)
}

// A collection of gpfs cluster properties for the csi driver to mount.
func (o CSIScaleOperatorSpecPtrOutput) Clusters() CSIScaleOperatorSpecClustersArrayOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) []CSIScaleOperatorSpecClusters {
		if v == nil {
			return nil
		}
		return v.Clusters
	}).(CSIScaleOperatorSpecClustersArrayOutput)
}

// Sidecar container image for the csi spectrum scale plugin pods.
func (o CSIScaleOperatorSpecPtrOutput) DriverRegistrar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *string {
		if v == nil {
			return nil
		}
		return v.DriverRegistrar
	}).(pulumi.StringPtrOutput)
}

// Mapping of K8s node with SpectrumScale node.
func (o CSIScaleOperatorSpecPtrOutput) NodeMapping() CSIScaleOperatorSpecNodeMappingArrayOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) []CSIScaleOperatorSpecNodeMapping {
		if v == nil {
			return nil
		}
		return v.NodeMapping
	}).(CSIScaleOperatorSpecNodeMappingArrayOutput)
}

// Node selector for SpectrumScale CSI Plugin.
func (o CSIScaleOperatorSpecPtrOutput) PluginNodeSelector() CSIScaleOperatorSpecPluginNodeSelectorArrayOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) []CSIScaleOperatorSpecPluginNodeSelector {
		if v == nil {
			return nil
		}
		return v.PluginNodeSelector
	}).(CSIScaleOperatorSpecPluginNodeSelectorArrayOutput)
}

// Provisioner image for csi (actually issues provision requests).
func (o CSIScaleOperatorSpecPtrOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *string {
		if v == nil {
			return nil
		}
		return v.Provisioner
	}).(pulumi.StringPtrOutput)
}

// Node selector for provisioner sidecar.
func (o CSIScaleOperatorSpecPtrOutput) ProvisionerNodeSelector() CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) []CSIScaleOperatorSpecProvisionerNodeSelector {
		if v == nil {
			return nil
		}
		return v.ProvisionerNodeSelector
	}).(CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput)
}

// The path to the gpfs file system mounted on the host machine.
func (o CSIScaleOperatorSpecPtrOutput) ScaleHostpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleHostpath
	}).(pulumi.StringPtrOutput)
}

// An internal counter used by the operator to trigger reloads on secret change.
func (o CSIScaleOperatorSpecPtrOutput) SecretCounter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *int {
		if v == nil {
			return nil
		}
		return v.SecretCounter
	}).(pulumi.IntPtrOutput)
}

// Image name for the csi spectrum scale plugin container.
func (o CSIScaleOperatorSpecPtrOutput) SpectrumScale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *string {
		if v == nil {
			return nil
		}
		return v.SpectrumScale
	}).(pulumi.StringPtrOutput)
}

// A generic trigger to be used in kickin off the ansible operator.
func (o CSIScaleOperatorSpecPtrOutput) Trigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpec) *string {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecAttacherNodeSelector struct {
	// Key for node selector.
	Key *string `pulumi:"key"`
	// Value for key.
	Value *string `pulumi:"value"`
}

// CSIScaleOperatorSpecAttacherNodeSelectorInput is an input type that accepts CSIScaleOperatorSpecAttacherNodeSelectorArgs and CSIScaleOperatorSpecAttacherNodeSelectorOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecAttacherNodeSelectorInput` via:
//
//          CSIScaleOperatorSpecAttacherNodeSelectorArgs{...}
type CSIScaleOperatorSpecAttacherNodeSelectorInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecAttacherNodeSelectorOutput() CSIScaleOperatorSpecAttacherNodeSelectorOutput
	ToCSIScaleOperatorSpecAttacherNodeSelectorOutputWithContext(context.Context) CSIScaleOperatorSpecAttacherNodeSelectorOutput
}

type CSIScaleOperatorSpecAttacherNodeSelectorArgs struct {
	// Key for node selector.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value for key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CSIScaleOperatorSpecAttacherNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecAttacherNodeSelector)(nil)).Elem()
}

func (i CSIScaleOperatorSpecAttacherNodeSelectorArgs) ToCSIScaleOperatorSpecAttacherNodeSelectorOutput() CSIScaleOperatorSpecAttacherNodeSelectorOutput {
	return i.ToCSIScaleOperatorSpecAttacherNodeSelectorOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecAttacherNodeSelectorArgs) ToCSIScaleOperatorSpecAttacherNodeSelectorOutputWithContext(ctx context.Context) CSIScaleOperatorSpecAttacherNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecAttacherNodeSelectorOutput)
}

// CSIScaleOperatorSpecAttacherNodeSelectorArrayInput is an input type that accepts CSIScaleOperatorSpecAttacherNodeSelectorArray and CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecAttacherNodeSelectorArrayInput` via:
//
//          CSIScaleOperatorSpecAttacherNodeSelectorArray{ CSIScaleOperatorSpecAttacherNodeSelectorArgs{...} }
type CSIScaleOperatorSpecAttacherNodeSelectorArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutput() CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput
	ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutputWithContext(context.Context) CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput
}

type CSIScaleOperatorSpecAttacherNodeSelectorArray []CSIScaleOperatorSpecAttacherNodeSelectorInput

func (CSIScaleOperatorSpecAttacherNodeSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecAttacherNodeSelector)(nil)).Elem()
}

func (i CSIScaleOperatorSpecAttacherNodeSelectorArray) ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutput() CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput {
	return i.ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecAttacherNodeSelectorArray) ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput)
}

type CSIScaleOperatorSpecAttacherNodeSelectorOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecAttacherNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecAttacherNodeSelector)(nil)).Elem()
}

func (o CSIScaleOperatorSpecAttacherNodeSelectorOutput) ToCSIScaleOperatorSpecAttacherNodeSelectorOutput() CSIScaleOperatorSpecAttacherNodeSelectorOutput {
	return o
}

func (o CSIScaleOperatorSpecAttacherNodeSelectorOutput) ToCSIScaleOperatorSpecAttacherNodeSelectorOutputWithContext(ctx context.Context) CSIScaleOperatorSpecAttacherNodeSelectorOutput {
	return o
}

// Key for node selector.
func (o CSIScaleOperatorSpecAttacherNodeSelectorOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecAttacherNodeSelector) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value for key.
func (o CSIScaleOperatorSpecAttacherNodeSelectorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecAttacherNodeSelector) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecAttacherNodeSelector)(nil)).Elem()
}

func (o CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput) ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutput() CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput) ToCSIScaleOperatorSpecAttacherNodeSelectorArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorSpecAttacherNodeSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorSpecAttacherNodeSelector {
		return vs[0].([]CSIScaleOperatorSpecAttacherNodeSelector)[vs[1].(int)]
	}).(CSIScaleOperatorSpecAttacherNodeSelectorOutput)
}

type CSIScaleOperatorSpecClusters struct {
	// A string specifying a cacert resource name.
	Cacert *string `pulumi:"cacert"`
	// The cluster id of the gpfs cluster specified (mandatory).
	Id *string `pulumi:"id"`
	// The primary file system for the GPFS cluster.
	Primary *CSIScaleOperatorSpecClustersPrimary `pulumi:"primary"`
	// A collection of targets for REST calls.
	RestApi []CSIScaleOperatorSpecClustersRestApi `pulumi:"restApi"`
	// A string specifying a secret resource name.
	Secrets *string `pulumi:"secrets"`
	// Require a secure SSL connection to connect to GPFS.
	SecureSslMode *bool `pulumi:"secureSslMode"`
}

// CSIScaleOperatorSpecClustersInput is an input type that accepts CSIScaleOperatorSpecClustersArgs and CSIScaleOperatorSpecClustersOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecClustersInput` via:
//
//          CSIScaleOperatorSpecClustersArgs{...}
type CSIScaleOperatorSpecClustersInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecClustersOutput() CSIScaleOperatorSpecClustersOutput
	ToCSIScaleOperatorSpecClustersOutputWithContext(context.Context) CSIScaleOperatorSpecClustersOutput
}

type CSIScaleOperatorSpecClustersArgs struct {
	// A string specifying a cacert resource name.
	Cacert pulumi.StringPtrInput `pulumi:"cacert"`
	// The cluster id of the gpfs cluster specified (mandatory).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The primary file system for the GPFS cluster.
	Primary CSIScaleOperatorSpecClustersPrimaryPtrInput `pulumi:"primary"`
	// A collection of targets for REST calls.
	RestApi CSIScaleOperatorSpecClustersRestApiArrayInput `pulumi:"restApi"`
	// A string specifying a secret resource name.
	Secrets pulumi.StringPtrInput `pulumi:"secrets"`
	// Require a secure SSL connection to connect to GPFS.
	SecureSslMode pulumi.BoolPtrInput `pulumi:"secureSslMode"`
}

func (CSIScaleOperatorSpecClustersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecClusters)(nil)).Elem()
}

func (i CSIScaleOperatorSpecClustersArgs) ToCSIScaleOperatorSpecClustersOutput() CSIScaleOperatorSpecClustersOutput {
	return i.ToCSIScaleOperatorSpecClustersOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecClustersArgs) ToCSIScaleOperatorSpecClustersOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersOutput)
}

// CSIScaleOperatorSpecClustersArrayInput is an input type that accepts CSIScaleOperatorSpecClustersArray and CSIScaleOperatorSpecClustersArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecClustersArrayInput` via:
//
//          CSIScaleOperatorSpecClustersArray{ CSIScaleOperatorSpecClustersArgs{...} }
type CSIScaleOperatorSpecClustersArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecClustersArrayOutput() CSIScaleOperatorSpecClustersArrayOutput
	ToCSIScaleOperatorSpecClustersArrayOutputWithContext(context.Context) CSIScaleOperatorSpecClustersArrayOutput
}

type CSIScaleOperatorSpecClustersArray []CSIScaleOperatorSpecClustersInput

func (CSIScaleOperatorSpecClustersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecClusters)(nil)).Elem()
}

func (i CSIScaleOperatorSpecClustersArray) ToCSIScaleOperatorSpecClustersArrayOutput() CSIScaleOperatorSpecClustersArrayOutput {
	return i.ToCSIScaleOperatorSpecClustersArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecClustersArray) ToCSIScaleOperatorSpecClustersArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersArrayOutput)
}

type CSIScaleOperatorSpecClustersOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecClustersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecClusters)(nil)).Elem()
}

func (o CSIScaleOperatorSpecClustersOutput) ToCSIScaleOperatorSpecClustersOutput() CSIScaleOperatorSpecClustersOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersOutput) ToCSIScaleOperatorSpecClustersOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersOutput {
	return o
}

// A string specifying a cacert resource name.
func (o CSIScaleOperatorSpecClustersOutput) Cacert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClusters) *string { return v.Cacert }).(pulumi.StringPtrOutput)
}

// The cluster id of the gpfs cluster specified (mandatory).
func (o CSIScaleOperatorSpecClustersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClusters) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The primary file system for the GPFS cluster.
func (o CSIScaleOperatorSpecClustersOutput) Primary() CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClusters) *CSIScaleOperatorSpecClustersPrimary { return v.Primary }).(CSIScaleOperatorSpecClustersPrimaryPtrOutput)
}

// A collection of targets for REST calls.
func (o CSIScaleOperatorSpecClustersOutput) RestApi() CSIScaleOperatorSpecClustersRestApiArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClusters) []CSIScaleOperatorSpecClustersRestApi { return v.RestApi }).(CSIScaleOperatorSpecClustersRestApiArrayOutput)
}

// A string specifying a secret resource name.
func (o CSIScaleOperatorSpecClustersOutput) Secrets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClusters) *string { return v.Secrets }).(pulumi.StringPtrOutput)
}

// Require a secure SSL connection to connect to GPFS.
func (o CSIScaleOperatorSpecClustersOutput) SecureSslMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClusters) *bool { return v.SecureSslMode }).(pulumi.BoolPtrOutput)
}

type CSIScaleOperatorSpecClustersArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecClustersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecClusters)(nil)).Elem()
}

func (o CSIScaleOperatorSpecClustersArrayOutput) ToCSIScaleOperatorSpecClustersArrayOutput() CSIScaleOperatorSpecClustersArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersArrayOutput) ToCSIScaleOperatorSpecClustersArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorSpecClustersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorSpecClusters {
		return vs[0].([]CSIScaleOperatorSpecClusters)[vs[1].(int)]
	}).(CSIScaleOperatorSpecClustersOutput)
}

// The primary file system for the GPFS cluster.
type CSIScaleOperatorSpecClustersPrimary struct {
	// Inode limit for Primary Fileset.
	InodeLimit *string `pulumi:"inodeLimit"`
	// The name of the primary filesystem.
	PrimaryFs *string `pulumi:"primaryFs"`
	// The name of the primary fileset, created in primaryFs.
	PrimaryFset *string `pulumi:"primaryFset"`
	// Remote cluster ID.
	RemoteCluster *string `pulumi:"remoteCluster"`
}

// CSIScaleOperatorSpecClustersPrimaryInput is an input type that accepts CSIScaleOperatorSpecClustersPrimaryArgs and CSIScaleOperatorSpecClustersPrimaryOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecClustersPrimaryInput` via:
//
//          CSIScaleOperatorSpecClustersPrimaryArgs{...}
type CSIScaleOperatorSpecClustersPrimaryInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecClustersPrimaryOutput() CSIScaleOperatorSpecClustersPrimaryOutput
	ToCSIScaleOperatorSpecClustersPrimaryOutputWithContext(context.Context) CSIScaleOperatorSpecClustersPrimaryOutput
}

// The primary file system for the GPFS cluster.
type CSIScaleOperatorSpecClustersPrimaryArgs struct {
	// Inode limit for Primary Fileset.
	InodeLimit pulumi.StringPtrInput `pulumi:"inodeLimit"`
	// The name of the primary filesystem.
	PrimaryFs pulumi.StringPtrInput `pulumi:"primaryFs"`
	// The name of the primary fileset, created in primaryFs.
	PrimaryFset pulumi.StringPtrInput `pulumi:"primaryFset"`
	// Remote cluster ID.
	RemoteCluster pulumi.StringPtrInput `pulumi:"remoteCluster"`
}

func (CSIScaleOperatorSpecClustersPrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecClustersPrimary)(nil)).Elem()
}

func (i CSIScaleOperatorSpecClustersPrimaryArgs) ToCSIScaleOperatorSpecClustersPrimaryOutput() CSIScaleOperatorSpecClustersPrimaryOutput {
	return i.ToCSIScaleOperatorSpecClustersPrimaryOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecClustersPrimaryArgs) ToCSIScaleOperatorSpecClustersPrimaryOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersPrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersPrimaryOutput)
}

func (i CSIScaleOperatorSpecClustersPrimaryArgs) ToCSIScaleOperatorSpecClustersPrimaryPtrOutput() CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return i.ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecClustersPrimaryArgs) ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersPrimaryOutput).ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(ctx)
}

// CSIScaleOperatorSpecClustersPrimaryPtrInput is an input type that accepts CSIScaleOperatorSpecClustersPrimaryArgs, CSIScaleOperatorSpecClustersPrimaryPtr and CSIScaleOperatorSpecClustersPrimaryPtrOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecClustersPrimaryPtrInput` via:
//
//          CSIScaleOperatorSpecClustersPrimaryArgs{...}
//
//  or:
//
//          nil
type CSIScaleOperatorSpecClustersPrimaryPtrInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecClustersPrimaryPtrOutput() CSIScaleOperatorSpecClustersPrimaryPtrOutput
	ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(context.Context) CSIScaleOperatorSpecClustersPrimaryPtrOutput
}

type csiscaleOperatorSpecClustersPrimaryPtrType CSIScaleOperatorSpecClustersPrimaryArgs

func CSIScaleOperatorSpecClustersPrimaryPtr(v *CSIScaleOperatorSpecClustersPrimaryArgs) CSIScaleOperatorSpecClustersPrimaryPtrInput {
	return (*csiscaleOperatorSpecClustersPrimaryPtrType)(v)
}

func (*csiscaleOperatorSpecClustersPrimaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CSIScaleOperatorSpecClustersPrimary)(nil)).Elem()
}

func (i *csiscaleOperatorSpecClustersPrimaryPtrType) ToCSIScaleOperatorSpecClustersPrimaryPtrOutput() CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return i.ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(context.Background())
}

func (i *csiscaleOperatorSpecClustersPrimaryPtrType) ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersPrimaryPtrOutput)
}

// The primary file system for the GPFS cluster.
type CSIScaleOperatorSpecClustersPrimaryOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecClustersPrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecClustersPrimary)(nil)).Elem()
}

func (o CSIScaleOperatorSpecClustersPrimaryOutput) ToCSIScaleOperatorSpecClustersPrimaryOutput() CSIScaleOperatorSpecClustersPrimaryOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersPrimaryOutput) ToCSIScaleOperatorSpecClustersPrimaryOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersPrimaryOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersPrimaryOutput) ToCSIScaleOperatorSpecClustersPrimaryPtrOutput() CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return o.ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(context.Background())
}

func (o CSIScaleOperatorSpecClustersPrimaryOutput) ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersPrimary) *CSIScaleOperatorSpecClustersPrimary {
		return &v
	}).(CSIScaleOperatorSpecClustersPrimaryPtrOutput)
}

// Inode limit for Primary Fileset.
func (o CSIScaleOperatorSpecClustersPrimaryOutput) InodeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersPrimary) *string { return v.InodeLimit }).(pulumi.StringPtrOutput)
}

// The name of the primary filesystem.
func (o CSIScaleOperatorSpecClustersPrimaryOutput) PrimaryFs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersPrimary) *string { return v.PrimaryFs }).(pulumi.StringPtrOutput)
}

// The name of the primary fileset, created in primaryFs.
func (o CSIScaleOperatorSpecClustersPrimaryOutput) PrimaryFset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersPrimary) *string { return v.PrimaryFset }).(pulumi.StringPtrOutput)
}

// Remote cluster ID.
func (o CSIScaleOperatorSpecClustersPrimaryOutput) RemoteCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersPrimary) *string { return v.RemoteCluster }).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecClustersPrimaryPtrOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecClustersPrimaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CSIScaleOperatorSpecClustersPrimary)(nil)).Elem()
}

func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) ToCSIScaleOperatorSpecClustersPrimaryPtrOutput() CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) ToCSIScaleOperatorSpecClustersPrimaryPtrOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersPrimaryPtrOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) Elem() CSIScaleOperatorSpecClustersPrimaryOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpecClustersPrimary) CSIScaleOperatorSpecClustersPrimary { return *v }).(CSIScaleOperatorSpecClustersPrimaryOutput)
}

// Inode limit for Primary Fileset.
func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) InodeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpecClustersPrimary) *string {
		if v == nil {
			return nil
		}
		return v.InodeLimit
	}).(pulumi.StringPtrOutput)
}

// The name of the primary filesystem.
func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) PrimaryFs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpecClustersPrimary) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFs
	}).(pulumi.StringPtrOutput)
}

// The name of the primary fileset, created in primaryFs.
func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) PrimaryFset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpecClustersPrimary) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFset
	}).(pulumi.StringPtrOutput)
}

// Remote cluster ID.
func (o CSIScaleOperatorSpecClustersPrimaryPtrOutput) RemoteCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CSIScaleOperatorSpecClustersPrimary) *string {
		if v == nil {
			return nil
		}
		return v.RemoteCluster
	}).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecClustersRestApi struct {
	// The hostname of the REST server.
	GuiHost *string `pulumi:"guiHost"`
	// The port number running the REST server.
	GuiPort *int `pulumi:"guiPort"`
}

// CSIScaleOperatorSpecClustersRestApiInput is an input type that accepts CSIScaleOperatorSpecClustersRestApiArgs and CSIScaleOperatorSpecClustersRestApiOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecClustersRestApiInput` via:
//
//          CSIScaleOperatorSpecClustersRestApiArgs{...}
type CSIScaleOperatorSpecClustersRestApiInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecClustersRestApiOutput() CSIScaleOperatorSpecClustersRestApiOutput
	ToCSIScaleOperatorSpecClustersRestApiOutputWithContext(context.Context) CSIScaleOperatorSpecClustersRestApiOutput
}

type CSIScaleOperatorSpecClustersRestApiArgs struct {
	// The hostname of the REST server.
	GuiHost pulumi.StringPtrInput `pulumi:"guiHost"`
	// The port number running the REST server.
	GuiPort pulumi.IntPtrInput `pulumi:"guiPort"`
}

func (CSIScaleOperatorSpecClustersRestApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecClustersRestApi)(nil)).Elem()
}

func (i CSIScaleOperatorSpecClustersRestApiArgs) ToCSIScaleOperatorSpecClustersRestApiOutput() CSIScaleOperatorSpecClustersRestApiOutput {
	return i.ToCSIScaleOperatorSpecClustersRestApiOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecClustersRestApiArgs) ToCSIScaleOperatorSpecClustersRestApiOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersRestApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersRestApiOutput)
}

// CSIScaleOperatorSpecClustersRestApiArrayInput is an input type that accepts CSIScaleOperatorSpecClustersRestApiArray and CSIScaleOperatorSpecClustersRestApiArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecClustersRestApiArrayInput` via:
//
//          CSIScaleOperatorSpecClustersRestApiArray{ CSIScaleOperatorSpecClustersRestApiArgs{...} }
type CSIScaleOperatorSpecClustersRestApiArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecClustersRestApiArrayOutput() CSIScaleOperatorSpecClustersRestApiArrayOutput
	ToCSIScaleOperatorSpecClustersRestApiArrayOutputWithContext(context.Context) CSIScaleOperatorSpecClustersRestApiArrayOutput
}

type CSIScaleOperatorSpecClustersRestApiArray []CSIScaleOperatorSpecClustersRestApiInput

func (CSIScaleOperatorSpecClustersRestApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecClustersRestApi)(nil)).Elem()
}

func (i CSIScaleOperatorSpecClustersRestApiArray) ToCSIScaleOperatorSpecClustersRestApiArrayOutput() CSIScaleOperatorSpecClustersRestApiArrayOutput {
	return i.ToCSIScaleOperatorSpecClustersRestApiArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecClustersRestApiArray) ToCSIScaleOperatorSpecClustersRestApiArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersRestApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecClustersRestApiArrayOutput)
}

type CSIScaleOperatorSpecClustersRestApiOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecClustersRestApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecClustersRestApi)(nil)).Elem()
}

func (o CSIScaleOperatorSpecClustersRestApiOutput) ToCSIScaleOperatorSpecClustersRestApiOutput() CSIScaleOperatorSpecClustersRestApiOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersRestApiOutput) ToCSIScaleOperatorSpecClustersRestApiOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersRestApiOutput {
	return o
}

// The hostname of the REST server.
func (o CSIScaleOperatorSpecClustersRestApiOutput) GuiHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersRestApi) *string { return v.GuiHost }).(pulumi.StringPtrOutput)
}

// The port number running the REST server.
func (o CSIScaleOperatorSpecClustersRestApiOutput) GuiPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecClustersRestApi) *int { return v.GuiPort }).(pulumi.IntPtrOutput)
}

type CSIScaleOperatorSpecClustersRestApiArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecClustersRestApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecClustersRestApi)(nil)).Elem()
}

func (o CSIScaleOperatorSpecClustersRestApiArrayOutput) ToCSIScaleOperatorSpecClustersRestApiArrayOutput() CSIScaleOperatorSpecClustersRestApiArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersRestApiArrayOutput) ToCSIScaleOperatorSpecClustersRestApiArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecClustersRestApiArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecClustersRestApiArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorSpecClustersRestApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorSpecClustersRestApi {
		return vs[0].([]CSIScaleOperatorSpecClustersRestApi)[vs[1].(int)]
	}).(CSIScaleOperatorSpecClustersRestApiOutput)
}

type CSIScaleOperatorSpecNodeMapping struct {
	// K8s node name.
	K8sNode *string `pulumi:"k8sNode"`
	// SpectrumScale node name.
	SpectrumscaleNode *string `pulumi:"spectrumscaleNode"`
}

// CSIScaleOperatorSpecNodeMappingInput is an input type that accepts CSIScaleOperatorSpecNodeMappingArgs and CSIScaleOperatorSpecNodeMappingOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecNodeMappingInput` via:
//
//          CSIScaleOperatorSpecNodeMappingArgs{...}
type CSIScaleOperatorSpecNodeMappingInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecNodeMappingOutput() CSIScaleOperatorSpecNodeMappingOutput
	ToCSIScaleOperatorSpecNodeMappingOutputWithContext(context.Context) CSIScaleOperatorSpecNodeMappingOutput
}

type CSIScaleOperatorSpecNodeMappingArgs struct {
	// K8s node name.
	K8sNode pulumi.StringPtrInput `pulumi:"k8sNode"`
	// SpectrumScale node name.
	SpectrumscaleNode pulumi.StringPtrInput `pulumi:"spectrumscaleNode"`
}

func (CSIScaleOperatorSpecNodeMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecNodeMapping)(nil)).Elem()
}

func (i CSIScaleOperatorSpecNodeMappingArgs) ToCSIScaleOperatorSpecNodeMappingOutput() CSIScaleOperatorSpecNodeMappingOutput {
	return i.ToCSIScaleOperatorSpecNodeMappingOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecNodeMappingArgs) ToCSIScaleOperatorSpecNodeMappingOutputWithContext(ctx context.Context) CSIScaleOperatorSpecNodeMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecNodeMappingOutput)
}

// CSIScaleOperatorSpecNodeMappingArrayInput is an input type that accepts CSIScaleOperatorSpecNodeMappingArray and CSIScaleOperatorSpecNodeMappingArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecNodeMappingArrayInput` via:
//
//          CSIScaleOperatorSpecNodeMappingArray{ CSIScaleOperatorSpecNodeMappingArgs{...} }
type CSIScaleOperatorSpecNodeMappingArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecNodeMappingArrayOutput() CSIScaleOperatorSpecNodeMappingArrayOutput
	ToCSIScaleOperatorSpecNodeMappingArrayOutputWithContext(context.Context) CSIScaleOperatorSpecNodeMappingArrayOutput
}

type CSIScaleOperatorSpecNodeMappingArray []CSIScaleOperatorSpecNodeMappingInput

func (CSIScaleOperatorSpecNodeMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecNodeMapping)(nil)).Elem()
}

func (i CSIScaleOperatorSpecNodeMappingArray) ToCSIScaleOperatorSpecNodeMappingArrayOutput() CSIScaleOperatorSpecNodeMappingArrayOutput {
	return i.ToCSIScaleOperatorSpecNodeMappingArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecNodeMappingArray) ToCSIScaleOperatorSpecNodeMappingArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecNodeMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecNodeMappingArrayOutput)
}

type CSIScaleOperatorSpecNodeMappingOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecNodeMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecNodeMapping)(nil)).Elem()
}

func (o CSIScaleOperatorSpecNodeMappingOutput) ToCSIScaleOperatorSpecNodeMappingOutput() CSIScaleOperatorSpecNodeMappingOutput {
	return o
}

func (o CSIScaleOperatorSpecNodeMappingOutput) ToCSIScaleOperatorSpecNodeMappingOutputWithContext(ctx context.Context) CSIScaleOperatorSpecNodeMappingOutput {
	return o
}

// K8s node name.
func (o CSIScaleOperatorSpecNodeMappingOutput) K8sNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecNodeMapping) *string { return v.K8sNode }).(pulumi.StringPtrOutput)
}

// SpectrumScale node name.
func (o CSIScaleOperatorSpecNodeMappingOutput) SpectrumscaleNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecNodeMapping) *string { return v.SpectrumscaleNode }).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecNodeMappingArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecNodeMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecNodeMapping)(nil)).Elem()
}

func (o CSIScaleOperatorSpecNodeMappingArrayOutput) ToCSIScaleOperatorSpecNodeMappingArrayOutput() CSIScaleOperatorSpecNodeMappingArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecNodeMappingArrayOutput) ToCSIScaleOperatorSpecNodeMappingArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecNodeMappingArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecNodeMappingArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorSpecNodeMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorSpecNodeMapping {
		return vs[0].([]CSIScaleOperatorSpecNodeMapping)[vs[1].(int)]
	}).(CSIScaleOperatorSpecNodeMappingOutput)
}

type CSIScaleOperatorSpecPluginNodeSelector struct {
	// Key for node selector.
	Key *string `pulumi:"key"`
	// Value for key.
	Value *string `pulumi:"value"`
}

// CSIScaleOperatorSpecPluginNodeSelectorInput is an input type that accepts CSIScaleOperatorSpecPluginNodeSelectorArgs and CSIScaleOperatorSpecPluginNodeSelectorOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecPluginNodeSelectorInput` via:
//
//          CSIScaleOperatorSpecPluginNodeSelectorArgs{...}
type CSIScaleOperatorSpecPluginNodeSelectorInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecPluginNodeSelectorOutput() CSIScaleOperatorSpecPluginNodeSelectorOutput
	ToCSIScaleOperatorSpecPluginNodeSelectorOutputWithContext(context.Context) CSIScaleOperatorSpecPluginNodeSelectorOutput
}

type CSIScaleOperatorSpecPluginNodeSelectorArgs struct {
	// Key for node selector.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value for key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CSIScaleOperatorSpecPluginNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecPluginNodeSelector)(nil)).Elem()
}

func (i CSIScaleOperatorSpecPluginNodeSelectorArgs) ToCSIScaleOperatorSpecPluginNodeSelectorOutput() CSIScaleOperatorSpecPluginNodeSelectorOutput {
	return i.ToCSIScaleOperatorSpecPluginNodeSelectorOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecPluginNodeSelectorArgs) ToCSIScaleOperatorSpecPluginNodeSelectorOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPluginNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecPluginNodeSelectorOutput)
}

// CSIScaleOperatorSpecPluginNodeSelectorArrayInput is an input type that accepts CSIScaleOperatorSpecPluginNodeSelectorArray and CSIScaleOperatorSpecPluginNodeSelectorArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecPluginNodeSelectorArrayInput` via:
//
//          CSIScaleOperatorSpecPluginNodeSelectorArray{ CSIScaleOperatorSpecPluginNodeSelectorArgs{...} }
type CSIScaleOperatorSpecPluginNodeSelectorArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutput() CSIScaleOperatorSpecPluginNodeSelectorArrayOutput
	ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutputWithContext(context.Context) CSIScaleOperatorSpecPluginNodeSelectorArrayOutput
}

type CSIScaleOperatorSpecPluginNodeSelectorArray []CSIScaleOperatorSpecPluginNodeSelectorInput

func (CSIScaleOperatorSpecPluginNodeSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecPluginNodeSelector)(nil)).Elem()
}

func (i CSIScaleOperatorSpecPluginNodeSelectorArray) ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutput() CSIScaleOperatorSpecPluginNodeSelectorArrayOutput {
	return i.ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecPluginNodeSelectorArray) ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPluginNodeSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecPluginNodeSelectorArrayOutput)
}

type CSIScaleOperatorSpecPluginNodeSelectorOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecPluginNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecPluginNodeSelector)(nil)).Elem()
}

func (o CSIScaleOperatorSpecPluginNodeSelectorOutput) ToCSIScaleOperatorSpecPluginNodeSelectorOutput() CSIScaleOperatorSpecPluginNodeSelectorOutput {
	return o
}

func (o CSIScaleOperatorSpecPluginNodeSelectorOutput) ToCSIScaleOperatorSpecPluginNodeSelectorOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPluginNodeSelectorOutput {
	return o
}

// Key for node selector.
func (o CSIScaleOperatorSpecPluginNodeSelectorOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecPluginNodeSelector) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value for key.
func (o CSIScaleOperatorSpecPluginNodeSelectorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecPluginNodeSelector) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecPluginNodeSelectorArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecPluginNodeSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecPluginNodeSelector)(nil)).Elem()
}

func (o CSIScaleOperatorSpecPluginNodeSelectorArrayOutput) ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutput() CSIScaleOperatorSpecPluginNodeSelectorArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecPluginNodeSelectorArrayOutput) ToCSIScaleOperatorSpecPluginNodeSelectorArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecPluginNodeSelectorArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecPluginNodeSelectorArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorSpecPluginNodeSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorSpecPluginNodeSelector {
		return vs[0].([]CSIScaleOperatorSpecPluginNodeSelector)[vs[1].(int)]
	}).(CSIScaleOperatorSpecPluginNodeSelectorOutput)
}

type CSIScaleOperatorSpecProvisionerNodeSelector struct {
	// Key for node selector.
	Key *string `pulumi:"key"`
	// Value for key.
	Value *string `pulumi:"value"`
}

// CSIScaleOperatorSpecProvisionerNodeSelectorInput is an input type that accepts CSIScaleOperatorSpecProvisionerNodeSelectorArgs and CSIScaleOperatorSpecProvisionerNodeSelectorOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecProvisionerNodeSelectorInput` via:
//
//          CSIScaleOperatorSpecProvisionerNodeSelectorArgs{...}
type CSIScaleOperatorSpecProvisionerNodeSelectorInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecProvisionerNodeSelectorOutput() CSIScaleOperatorSpecProvisionerNodeSelectorOutput
	ToCSIScaleOperatorSpecProvisionerNodeSelectorOutputWithContext(context.Context) CSIScaleOperatorSpecProvisionerNodeSelectorOutput
}

type CSIScaleOperatorSpecProvisionerNodeSelectorArgs struct {
	// Key for node selector.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value for key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CSIScaleOperatorSpecProvisionerNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecProvisionerNodeSelector)(nil)).Elem()
}

func (i CSIScaleOperatorSpecProvisionerNodeSelectorArgs) ToCSIScaleOperatorSpecProvisionerNodeSelectorOutput() CSIScaleOperatorSpecProvisionerNodeSelectorOutput {
	return i.ToCSIScaleOperatorSpecProvisionerNodeSelectorOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecProvisionerNodeSelectorArgs) ToCSIScaleOperatorSpecProvisionerNodeSelectorOutputWithContext(ctx context.Context) CSIScaleOperatorSpecProvisionerNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecProvisionerNodeSelectorOutput)
}

// CSIScaleOperatorSpecProvisionerNodeSelectorArrayInput is an input type that accepts CSIScaleOperatorSpecProvisionerNodeSelectorArray and CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorSpecProvisionerNodeSelectorArrayInput` via:
//
//          CSIScaleOperatorSpecProvisionerNodeSelectorArray{ CSIScaleOperatorSpecProvisionerNodeSelectorArgs{...} }
type CSIScaleOperatorSpecProvisionerNodeSelectorArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput() CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput
	ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutputWithContext(context.Context) CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput
}

type CSIScaleOperatorSpecProvisionerNodeSelectorArray []CSIScaleOperatorSpecProvisionerNodeSelectorInput

func (CSIScaleOperatorSpecProvisionerNodeSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecProvisionerNodeSelector)(nil)).Elem()
}

func (i CSIScaleOperatorSpecProvisionerNodeSelectorArray) ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput() CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput {
	return i.ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorSpecProvisionerNodeSelectorArray) ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput)
}

type CSIScaleOperatorSpecProvisionerNodeSelectorOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecProvisionerNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorSpecProvisionerNodeSelector)(nil)).Elem()
}

func (o CSIScaleOperatorSpecProvisionerNodeSelectorOutput) ToCSIScaleOperatorSpecProvisionerNodeSelectorOutput() CSIScaleOperatorSpecProvisionerNodeSelectorOutput {
	return o
}

func (o CSIScaleOperatorSpecProvisionerNodeSelectorOutput) ToCSIScaleOperatorSpecProvisionerNodeSelectorOutputWithContext(ctx context.Context) CSIScaleOperatorSpecProvisionerNodeSelectorOutput {
	return o
}

// Key for node selector.
func (o CSIScaleOperatorSpecProvisionerNodeSelectorOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecProvisionerNodeSelector) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value for key.
func (o CSIScaleOperatorSpecProvisionerNodeSelectorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorSpecProvisionerNodeSelector) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorSpecProvisionerNodeSelector)(nil)).Elem()
}

func (o CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput) ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput() CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput) ToCSIScaleOperatorSpecProvisionerNodeSelectorArrayOutputWithContext(ctx context.Context) CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput {
	return o
}

func (o CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorSpecProvisionerNodeSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorSpecProvisionerNodeSelector {
		return vs[0].([]CSIScaleOperatorSpecProvisionerNodeSelector)[vs[1].(int)]
	}).(CSIScaleOperatorSpecProvisionerNodeSelectorOutput)
}

type CSIScaleOperatorStatus struct {
	// The active status of the operator
	Conditions []CSIScaleOperatorStatusConditions `pulumi:"conditions"`
}

// CSIScaleOperatorStatusInput is an input type that accepts CSIScaleOperatorStatusArgs and CSIScaleOperatorStatusOutput values.
// You can construct a concrete instance of `CSIScaleOperatorStatusInput` via:
//
//          CSIScaleOperatorStatusArgs{...}
type CSIScaleOperatorStatusInput interface {
	pulumi.Input

	ToCSIScaleOperatorStatusOutput() CSIScaleOperatorStatusOutput
	ToCSIScaleOperatorStatusOutputWithContext(context.Context) CSIScaleOperatorStatusOutput
}

type CSIScaleOperatorStatusArgs struct {
	// The active status of the operator
	Conditions CSIScaleOperatorStatusConditionsArrayInput `pulumi:"conditions"`
}

func (CSIScaleOperatorStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorStatus)(nil)).Elem()
}

func (i CSIScaleOperatorStatusArgs) ToCSIScaleOperatorStatusOutput() CSIScaleOperatorStatusOutput {
	return i.ToCSIScaleOperatorStatusOutputWithContext(context.Background())
}

func (i CSIScaleOperatorStatusArgs) ToCSIScaleOperatorStatusOutputWithContext(ctx context.Context) CSIScaleOperatorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorStatusOutput)
}

func (i CSIScaleOperatorStatusArgs) ToCSIScaleOperatorStatusPtrOutput() CSIScaleOperatorStatusPtrOutput {
	return i.ToCSIScaleOperatorStatusPtrOutputWithContext(context.Background())
}

func (i CSIScaleOperatorStatusArgs) ToCSIScaleOperatorStatusPtrOutputWithContext(ctx context.Context) CSIScaleOperatorStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorStatusOutput).ToCSIScaleOperatorStatusPtrOutputWithContext(ctx)
}

// CSIScaleOperatorStatusPtrInput is an input type that accepts CSIScaleOperatorStatusArgs, CSIScaleOperatorStatusPtr and CSIScaleOperatorStatusPtrOutput values.
// You can construct a concrete instance of `CSIScaleOperatorStatusPtrInput` via:
//
//          CSIScaleOperatorStatusArgs{...}
//
//  or:
//
//          nil
type CSIScaleOperatorStatusPtrInput interface {
	pulumi.Input

	ToCSIScaleOperatorStatusPtrOutput() CSIScaleOperatorStatusPtrOutput
	ToCSIScaleOperatorStatusPtrOutputWithContext(context.Context) CSIScaleOperatorStatusPtrOutput
}

type csiscaleOperatorStatusPtrType CSIScaleOperatorStatusArgs

func CSIScaleOperatorStatusPtr(v *CSIScaleOperatorStatusArgs) CSIScaleOperatorStatusPtrInput {
	return (*csiscaleOperatorStatusPtrType)(v)
}

func (*csiscaleOperatorStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CSIScaleOperatorStatus)(nil)).Elem()
}

func (i *csiscaleOperatorStatusPtrType) ToCSIScaleOperatorStatusPtrOutput() CSIScaleOperatorStatusPtrOutput {
	return i.ToCSIScaleOperatorStatusPtrOutputWithContext(context.Background())
}

func (i *csiscaleOperatorStatusPtrType) ToCSIScaleOperatorStatusPtrOutputWithContext(ctx context.Context) CSIScaleOperatorStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorStatusPtrOutput)
}

type CSIScaleOperatorStatusOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorStatus)(nil)).Elem()
}

func (o CSIScaleOperatorStatusOutput) ToCSIScaleOperatorStatusOutput() CSIScaleOperatorStatusOutput {
	return o
}

func (o CSIScaleOperatorStatusOutput) ToCSIScaleOperatorStatusOutputWithContext(ctx context.Context) CSIScaleOperatorStatusOutput {
	return o
}

func (o CSIScaleOperatorStatusOutput) ToCSIScaleOperatorStatusPtrOutput() CSIScaleOperatorStatusPtrOutput {
	return o.ToCSIScaleOperatorStatusPtrOutputWithContext(context.Background())
}

func (o CSIScaleOperatorStatusOutput) ToCSIScaleOperatorStatusPtrOutputWithContext(ctx context.Context) CSIScaleOperatorStatusPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorStatus) *CSIScaleOperatorStatus {
		return &v
	}).(CSIScaleOperatorStatusPtrOutput)
}

// The active status of the operator
func (o CSIScaleOperatorStatusOutput) Conditions() CSIScaleOperatorStatusConditionsArrayOutput {
	return o.ApplyT(func(v CSIScaleOperatorStatus) []CSIScaleOperatorStatusConditions { return v.Conditions }).(CSIScaleOperatorStatusConditionsArrayOutput)
}

type CSIScaleOperatorStatusPtrOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CSIScaleOperatorStatus)(nil)).Elem()
}

func (o CSIScaleOperatorStatusPtrOutput) ToCSIScaleOperatorStatusPtrOutput() CSIScaleOperatorStatusPtrOutput {
	return o
}

func (o CSIScaleOperatorStatusPtrOutput) ToCSIScaleOperatorStatusPtrOutputWithContext(ctx context.Context) CSIScaleOperatorStatusPtrOutput {
	return o
}

func (o CSIScaleOperatorStatusPtrOutput) Elem() CSIScaleOperatorStatusOutput {
	return o.ApplyT(func(v *CSIScaleOperatorStatus) CSIScaleOperatorStatus { return *v }).(CSIScaleOperatorStatusOutput)
}

// The active status of the operator
func (o CSIScaleOperatorStatusPtrOutput) Conditions() CSIScaleOperatorStatusConditionsArrayOutput {
	return o.ApplyT(func(v *CSIScaleOperatorStatus) []CSIScaleOperatorStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(CSIScaleOperatorStatusConditionsArrayOutput)
}

type CSIScaleOperatorStatusConditions struct {
	// Indicates that the plugin is running.
	Ready *bool `pulumi:"Ready"`
}

// CSIScaleOperatorStatusConditionsInput is an input type that accepts CSIScaleOperatorStatusConditionsArgs and CSIScaleOperatorStatusConditionsOutput values.
// You can construct a concrete instance of `CSIScaleOperatorStatusConditionsInput` via:
//
//          CSIScaleOperatorStatusConditionsArgs{...}
type CSIScaleOperatorStatusConditionsInput interface {
	pulumi.Input

	ToCSIScaleOperatorStatusConditionsOutput() CSIScaleOperatorStatusConditionsOutput
	ToCSIScaleOperatorStatusConditionsOutputWithContext(context.Context) CSIScaleOperatorStatusConditionsOutput
}

type CSIScaleOperatorStatusConditionsArgs struct {
	// Indicates that the plugin is running.
	Ready pulumi.BoolPtrInput `pulumi:"Ready"`
}

func (CSIScaleOperatorStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorStatusConditions)(nil)).Elem()
}

func (i CSIScaleOperatorStatusConditionsArgs) ToCSIScaleOperatorStatusConditionsOutput() CSIScaleOperatorStatusConditionsOutput {
	return i.ToCSIScaleOperatorStatusConditionsOutputWithContext(context.Background())
}

func (i CSIScaleOperatorStatusConditionsArgs) ToCSIScaleOperatorStatusConditionsOutputWithContext(ctx context.Context) CSIScaleOperatorStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorStatusConditionsOutput)
}

// CSIScaleOperatorStatusConditionsArrayInput is an input type that accepts CSIScaleOperatorStatusConditionsArray and CSIScaleOperatorStatusConditionsArrayOutput values.
// You can construct a concrete instance of `CSIScaleOperatorStatusConditionsArrayInput` via:
//
//          CSIScaleOperatorStatusConditionsArray{ CSIScaleOperatorStatusConditionsArgs{...} }
type CSIScaleOperatorStatusConditionsArrayInput interface {
	pulumi.Input

	ToCSIScaleOperatorStatusConditionsArrayOutput() CSIScaleOperatorStatusConditionsArrayOutput
	ToCSIScaleOperatorStatusConditionsArrayOutputWithContext(context.Context) CSIScaleOperatorStatusConditionsArrayOutput
}

type CSIScaleOperatorStatusConditionsArray []CSIScaleOperatorStatusConditionsInput

func (CSIScaleOperatorStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorStatusConditions)(nil)).Elem()
}

func (i CSIScaleOperatorStatusConditionsArray) ToCSIScaleOperatorStatusConditionsArrayOutput() CSIScaleOperatorStatusConditionsArrayOutput {
	return i.ToCSIScaleOperatorStatusConditionsArrayOutputWithContext(context.Background())
}

func (i CSIScaleOperatorStatusConditionsArray) ToCSIScaleOperatorStatusConditionsArrayOutputWithContext(ctx context.Context) CSIScaleOperatorStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSIScaleOperatorStatusConditionsArrayOutput)
}

type CSIScaleOperatorStatusConditionsOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSIScaleOperatorStatusConditions)(nil)).Elem()
}

func (o CSIScaleOperatorStatusConditionsOutput) ToCSIScaleOperatorStatusConditionsOutput() CSIScaleOperatorStatusConditionsOutput {
	return o
}

func (o CSIScaleOperatorStatusConditionsOutput) ToCSIScaleOperatorStatusConditionsOutputWithContext(ctx context.Context) CSIScaleOperatorStatusConditionsOutput {
	return o
}

// Indicates that the plugin is running.
func (o CSIScaleOperatorStatusConditionsOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CSIScaleOperatorStatusConditions) *bool { return v.Ready }).(pulumi.BoolPtrOutput)
}

type CSIScaleOperatorStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (CSIScaleOperatorStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CSIScaleOperatorStatusConditions)(nil)).Elem()
}

func (o CSIScaleOperatorStatusConditionsArrayOutput) ToCSIScaleOperatorStatusConditionsArrayOutput() CSIScaleOperatorStatusConditionsArrayOutput {
	return o
}

func (o CSIScaleOperatorStatusConditionsArrayOutput) ToCSIScaleOperatorStatusConditionsArrayOutputWithContext(ctx context.Context) CSIScaleOperatorStatusConditionsArrayOutput {
	return o
}

func (o CSIScaleOperatorStatusConditionsArrayOutput) Index(i pulumi.IntInput) CSIScaleOperatorStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CSIScaleOperatorStatusConditions {
		return vs[0].([]CSIScaleOperatorStatusConditions)[vs[1].(int)]
	}).(CSIScaleOperatorStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(CSIScaleOperatorTypeOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorMetadataOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecPtrOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecAttacherNodeSelectorOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecAttacherNodeSelectorArrayOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecClustersOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecClustersArrayOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecClustersPrimaryOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecClustersPrimaryPtrOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecClustersRestApiOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecClustersRestApiArrayOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecNodeMappingOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecNodeMappingArrayOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecPluginNodeSelectorOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecPluginNodeSelectorArrayOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecProvisionerNodeSelectorOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorSpecProvisionerNodeSelectorArrayOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorStatusOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorStatusPtrOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorStatusConditionsOutput{})
	pulumi.RegisterOutputType(CSIScaleOperatorStatusConditionsArrayOutput{})
}
