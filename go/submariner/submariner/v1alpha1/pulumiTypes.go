// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ServiceDiscovery is the Schema for the servicediscoveries API
type ServiceDiscoveryType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
	Spec *ServiceDiscoverySpec `pulumi:"spec"`
	// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
	Status map[string]interface{} `pulumi:"status"`
}

// ServiceDiscoveryTypeInput is an input type that accepts ServiceDiscoveryTypeArgs and ServiceDiscoveryTypeOutput values.
// You can construct a concrete instance of `ServiceDiscoveryTypeInput` via:
//
//          ServiceDiscoveryTypeArgs{...}
type ServiceDiscoveryTypeInput interface {
	pulumi.Input

	ToServiceDiscoveryTypeOutput() ServiceDiscoveryTypeOutput
	ToServiceDiscoveryTypeOutputWithContext(context.Context) ServiceDiscoveryTypeOutput
}

// ServiceDiscovery is the Schema for the servicediscoveries API
type ServiceDiscoveryTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
	Spec ServiceDiscoverySpecPtrInput `pulumi:"spec"`
	// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
	Status pulumi.MapInput `pulumi:"status"`
}

func (ServiceDiscoveryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryType)(nil)).Elem()
}

func (i ServiceDiscoveryTypeArgs) ToServiceDiscoveryTypeOutput() ServiceDiscoveryTypeOutput {
	return i.ToServiceDiscoveryTypeOutputWithContext(context.Background())
}

func (i ServiceDiscoveryTypeArgs) ToServiceDiscoveryTypeOutputWithContext(ctx context.Context) ServiceDiscoveryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryTypeOutput)
}

// ServiceDiscovery is the Schema for the servicediscoveries API
type ServiceDiscoveryTypeOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryType)(nil)).Elem()
}

func (o ServiceDiscoveryTypeOutput) ToServiceDiscoveryTypeOutput() ServiceDiscoveryTypeOutput {
	return o
}

func (o ServiceDiscoveryTypeOutput) ToServiceDiscoveryTypeOutputWithContext(ctx context.Context) ServiceDiscoveryTypeOutput {
	return o
}

func (o ServiceDiscoveryTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoveryTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoveryTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
func (o ServiceDiscoveryTypeOutput) Spec() ServiceDiscoverySpecPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *ServiceDiscoverySpec { return v.Spec }).(ServiceDiscoverySpecPtrOutput)
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
func (o ServiceDiscoveryTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type ServiceDiscoveryMetadata struct {
}

// ServiceDiscoveryMetadataInput is an input type that accepts ServiceDiscoveryMetadataArgs and ServiceDiscoveryMetadataOutput values.
// You can construct a concrete instance of `ServiceDiscoveryMetadataInput` via:
//
//          ServiceDiscoveryMetadataArgs{...}
type ServiceDiscoveryMetadataInput interface {
	pulumi.Input

	ToServiceDiscoveryMetadataOutput() ServiceDiscoveryMetadataOutput
	ToServiceDiscoveryMetadataOutputWithContext(context.Context) ServiceDiscoveryMetadataOutput
}

type ServiceDiscoveryMetadataArgs struct {
}

func (ServiceDiscoveryMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryMetadata)(nil)).Elem()
}

func (i ServiceDiscoveryMetadataArgs) ToServiceDiscoveryMetadataOutput() ServiceDiscoveryMetadataOutput {
	return i.ToServiceDiscoveryMetadataOutputWithContext(context.Background())
}

func (i ServiceDiscoveryMetadataArgs) ToServiceDiscoveryMetadataOutputWithContext(ctx context.Context) ServiceDiscoveryMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryMetadataOutput)
}

type ServiceDiscoveryMetadataOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryMetadata)(nil)).Elem()
}

func (o ServiceDiscoveryMetadataOutput) ToServiceDiscoveryMetadataOutput() ServiceDiscoveryMetadataOutput {
	return o
}

func (o ServiceDiscoveryMetadataOutput) ToServiceDiscoveryMetadataOutputWithContext(ctx context.Context) ServiceDiscoveryMetadataOutput {
	return o
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
type ServiceDiscoverySpec struct {
	BrokerK8sApiServer       string  `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  string  `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              string  `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace string  `pulumi:"brokerK8sRemoteNamespace"`
	ClusterID                string  `pulumi:"clusterID"`
	Debug                    bool    `pulumi:"debug"`
	GlobalnetEnabled         *bool   `pulumi:"globalnetEnabled"`
	Namespace                string  `pulumi:"namespace"`
	Repository               *string `pulumi:"repository"`
	Version                  *string `pulumi:"version"`
}

// ServiceDiscoverySpecInput is an input type that accepts ServiceDiscoverySpecArgs and ServiceDiscoverySpecOutput values.
// You can construct a concrete instance of `ServiceDiscoverySpecInput` via:
//
//          ServiceDiscoverySpecArgs{...}
type ServiceDiscoverySpecInput interface {
	pulumi.Input

	ToServiceDiscoverySpecOutput() ServiceDiscoverySpecOutput
	ToServiceDiscoverySpecOutputWithContext(context.Context) ServiceDiscoverySpecOutput
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
type ServiceDiscoverySpecArgs struct {
	BrokerK8sApiServer       pulumi.StringInput    `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  pulumi.StringInput    `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              pulumi.StringInput    `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace pulumi.StringInput    `pulumi:"brokerK8sRemoteNamespace"`
	ClusterID                pulumi.StringInput    `pulumi:"clusterID"`
	Debug                    pulumi.BoolInput      `pulumi:"debug"`
	GlobalnetEnabled         pulumi.BoolPtrInput   `pulumi:"globalnetEnabled"`
	Namespace                pulumi.StringInput    `pulumi:"namespace"`
	Repository               pulumi.StringPtrInput `pulumi:"repository"`
	Version                  pulumi.StringPtrInput `pulumi:"version"`
}

func (ServiceDiscoverySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoverySpec)(nil)).Elem()
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecOutput() ServiceDiscoverySpecOutput {
	return i.ToServiceDiscoverySpecOutputWithContext(context.Background())
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecOutputWithContext(ctx context.Context) ServiceDiscoverySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoverySpecOutput)
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return i.ToServiceDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoverySpecOutput).ToServiceDiscoverySpecPtrOutputWithContext(ctx)
}

// ServiceDiscoverySpecPtrInput is an input type that accepts ServiceDiscoverySpecArgs, ServiceDiscoverySpecPtr and ServiceDiscoverySpecPtrOutput values.
// You can construct a concrete instance of `ServiceDiscoverySpecPtrInput` via:
//
//          ServiceDiscoverySpecArgs{...}
//
//  or:
//
//          nil
type ServiceDiscoverySpecPtrInput interface {
	pulumi.Input

	ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput
	ToServiceDiscoverySpecPtrOutputWithContext(context.Context) ServiceDiscoverySpecPtrOutput
}

type serviceDiscoverySpecPtrType ServiceDiscoverySpecArgs

func ServiceDiscoverySpecPtr(v *ServiceDiscoverySpecArgs) ServiceDiscoverySpecPtrInput {
	return (*serviceDiscoverySpecPtrType)(v)
}

func (*serviceDiscoverySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDiscoverySpec)(nil)).Elem()
}

func (i *serviceDiscoverySpecPtrType) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return i.ToServiceDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i *serviceDiscoverySpecPtrType) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoverySpecPtrOutput)
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
type ServiceDiscoverySpecOutput struct{ *pulumi.OutputState }

func (ServiceDiscoverySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoverySpec)(nil)).Elem()
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecOutput() ServiceDiscoverySpecOutput {
	return o
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecOutputWithContext(ctx context.Context) ServiceDiscoverySpecOutput {
	return o
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return o.ToServiceDiscoverySpecPtrOutputWithContext(context.Background())
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *ServiceDiscoverySpec {
		return &v
	}).(ServiceDiscoverySpecPtrOutput)
}
func (o ServiceDiscoverySpecOutput) BrokerK8sApiServer() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sApiServer }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) BrokerK8sApiServerToken() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sApiServerToken }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) BrokerK8sCA() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sCA }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) BrokerK8sRemoteNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sRemoteNamespace }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) ClusterID() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.ClusterID }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) Debug() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) bool { return v.Debug }).(pulumi.BoolOutput)
}

func (o ServiceDiscoverySpecOutput) GlobalnetEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *bool { return v.GlobalnetEnabled }).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoverySpecOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ServiceDiscoverySpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceDiscoverySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDiscoverySpec)(nil)).Elem()
}

func (o ServiceDiscoverySpecPtrOutput) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return o
}

func (o ServiceDiscoverySpecPtrOutput) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return o
}

func (o ServiceDiscoverySpecPtrOutput) Elem() ServiceDiscoverySpecOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) ServiceDiscoverySpec { return *v }).(ServiceDiscoverySpecOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sApiServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServer
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sApiServerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServerToken
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sCA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sCA
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sRemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sRemoteNamespace
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) ClusterID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterID
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Debug
	}).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) GlobalnetEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *bool {
		if v == nil {
			return nil
		}
		return v.GlobalnetEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
type ServiceDiscoveryStatus struct {
}

// ServiceDiscoveryStatusInput is an input type that accepts ServiceDiscoveryStatusArgs and ServiceDiscoveryStatusOutput values.
// You can construct a concrete instance of `ServiceDiscoveryStatusInput` via:
//
//          ServiceDiscoveryStatusArgs{...}
type ServiceDiscoveryStatusInput interface {
	pulumi.Input

	ToServiceDiscoveryStatusOutput() ServiceDiscoveryStatusOutput
	ToServiceDiscoveryStatusOutputWithContext(context.Context) ServiceDiscoveryStatusOutput
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
type ServiceDiscoveryStatusArgs struct {
}

func (ServiceDiscoveryStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryStatus)(nil)).Elem()
}

func (i ServiceDiscoveryStatusArgs) ToServiceDiscoveryStatusOutput() ServiceDiscoveryStatusOutput {
	return i.ToServiceDiscoveryStatusOutputWithContext(context.Background())
}

func (i ServiceDiscoveryStatusArgs) ToServiceDiscoveryStatusOutputWithContext(ctx context.Context) ServiceDiscoveryStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryStatusOutput)
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
type ServiceDiscoveryStatusOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryStatus)(nil)).Elem()
}

func (o ServiceDiscoveryStatusOutput) ToServiceDiscoveryStatusOutput() ServiceDiscoveryStatusOutput {
	return o
}

func (o ServiceDiscoveryStatusOutput) ToServiceDiscoveryStatusOutputWithContext(ctx context.Context) ServiceDiscoveryStatusOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceDiscoveryTypeOutput{})
	pulumi.RegisterOutputType(ServiceDiscoveryMetadataOutput{})
	pulumi.RegisterOutputType(ServiceDiscoverySpecOutput{})
	pulumi.RegisterOutputType(ServiceDiscoverySpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceDiscoveryStatusOutput{})
}
