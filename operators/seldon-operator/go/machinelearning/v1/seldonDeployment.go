// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SeldonDeployment is the Schema for the seldondeployments API
type SeldonDeployment struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// SeldonDeploymentSpec defines the desired state of SeldonDeployment
	Spec SeldonDeploymentSpecPtrOutput `pulumi:"spec"`
	// SeldonDeploymentStatus defines the observed state of SeldonDeployment
	Status SeldonDeploymentStatusPtrOutput `pulumi:"status"`
}

// NewSeldonDeployment registers a new resource with the given unique name, arguments, and options.
func NewSeldonDeployment(ctx *pulumi.Context,
	name string, args *SeldonDeploymentArgs, opts ...pulumi.ResourceOption) (*SeldonDeployment, error) {
	if args == nil {
		args = &SeldonDeploymentArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("machinelearning.seldon.io/v1")
	args.Kind = pulumi.StringPtr("SeldonDeployment")
	var resource SeldonDeployment
	err := ctx.RegisterResource("kubernetes:machinelearning.seldon.io/v1:SeldonDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSeldonDeployment gets an existing SeldonDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSeldonDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SeldonDeploymentState, opts ...pulumi.ResourceOption) (*SeldonDeployment, error) {
	var resource SeldonDeployment
	err := ctx.ReadResource("kubernetes:machinelearning.seldon.io/v1:SeldonDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SeldonDeployment resources.
type seldonDeploymentState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SeldonDeploymentSpec defines the desired state of SeldonDeployment
	Spec *SeldonDeploymentSpec `pulumi:"spec"`
	// SeldonDeploymentStatus defines the observed state of SeldonDeployment
	Status *SeldonDeploymentStatus `pulumi:"status"`
}

type SeldonDeploymentState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SeldonDeploymentSpec defines the desired state of SeldonDeployment
	Spec SeldonDeploymentSpecPtrInput
	// SeldonDeploymentStatus defines the observed state of SeldonDeployment
	Status SeldonDeploymentStatusPtrInput
}

func (SeldonDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*seldonDeploymentState)(nil)).Elem()
}

type seldonDeploymentArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SeldonDeploymentSpec defines the desired state of SeldonDeployment
	Spec *SeldonDeploymentSpec `pulumi:"spec"`
	// SeldonDeploymentStatus defines the observed state of SeldonDeployment
	Status *SeldonDeploymentStatus `pulumi:"status"`
}

// The set of arguments for constructing a SeldonDeployment resource.
type SeldonDeploymentArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SeldonDeploymentSpec defines the desired state of SeldonDeployment
	Spec SeldonDeploymentSpecPtrInput
	// SeldonDeploymentStatus defines the observed state of SeldonDeployment
	Status SeldonDeploymentStatusPtrInput
}

func (SeldonDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*seldonDeploymentArgs)(nil)).Elem()
}
