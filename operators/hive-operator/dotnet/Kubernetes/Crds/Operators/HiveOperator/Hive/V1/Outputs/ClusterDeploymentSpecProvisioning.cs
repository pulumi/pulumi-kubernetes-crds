// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Hive.V1
{

    [OutputType]
    public sealed class ClusterDeploymentSpecProvisioning
    {
        /// <summary>
        /// ImageSetRef is a reference to a ClusterImageSet. If a value is specified for ReleaseImage, that will take precedence over the one from the ClusterImageSet.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningImageSetRef ImageSetRef;
        /// <summary>
        /// InstallConfigSecretRef is the reference to a secret that contains an openshift-install InstallConfig. This file will be passed through directly to the installer. Any version of InstallConfig can be used, provided it can be parsed by the openshift-install version for the release you are provisioning.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningInstallConfigSecretRef InstallConfigSecretRef;
        /// <summary>
        /// InstallerEnv are extra environment variables to pass through to the installer. This may be used to enable additional features of the installer.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningInstallerEnv> InstallerEnv;
        /// <summary>
        /// ManifestsConfigMapRef is a reference to user-provided manifests to add to or replace manifests that are generated by the installer.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningManifestsConfigMapRef ManifestsConfigMapRef;
        /// <summary>
        /// ReleaseImage is the image containing metadata for all components that run in the cluster, and is the primary and best way to specify what specific version of OpenShift you wish to install.
        /// </summary>
        public readonly string ReleaseImage;
        /// <summary>
        /// SSHKnownHosts are known hosts to be configured in the hive install manager pod to avoid ssh prompts. Use of ssh in the install pod is somewhat limited today (failure log gathering from cluster, some bare metal provisioning scenarios), so this setting is often not needed.
        /// </summary>
        public readonly ImmutableArray<string> SshKnownHosts;
        /// <summary>
        /// SSHPrivateKeySecretRef is the reference to the secret that contains the private SSH key to use for access to compute instances. This private key should correspond to the public key included in the InstallConfig. The private key is used by Hive to gather logs on the target cluster if there are install failures. The SSH private key is expected to be in the secret data under the "ssh-privatekey" key.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningSshPrivateKeySecretRef SshPrivateKeySecretRef;

        [OutputConstructor]
        private ClusterDeploymentSpecProvisioning(
            Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningImageSetRef imageSetRef,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningInstallConfigSecretRef installConfigSecretRef,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningInstallerEnv> installerEnv,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningManifestsConfigMapRef manifestsConfigMapRef,

            string releaseImage,

            ImmutableArray<string> sshKnownHosts,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.ClusterDeploymentSpecProvisioningSshPrivateKeySecretRef sshPrivateKeySecretRef)
        {
            ImageSetRef = imageSetRef;
            InstallConfigSecretRef = installConfigSecretRef;
            InstallerEnv = installerEnv;
            ManifestsConfigMapRef = manifestsConfigMapRef;
            ReleaseImage = releaseImage;
            SshKnownHosts = sshKnownHosts;
            SshPrivateKeySecretRef = sshPrivateKeySecretRef;
        }
    }
}
