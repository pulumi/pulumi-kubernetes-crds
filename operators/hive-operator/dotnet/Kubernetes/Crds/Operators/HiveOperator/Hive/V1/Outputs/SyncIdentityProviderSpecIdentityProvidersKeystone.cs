// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Hive.V1
{

    [OutputType]
    public sealed class SyncIdentityProviderSpecIdentityProvidersKeystone
    {
        /// <summary>
        /// ca is an optional reference to a config map by name containing the PEM-encoded CA bundle. It is used as a trust anchor to validate the TLS certificate presented by the remote server. The key "ca.crt" is used to locate the data. If specified and the config map or expected key is not found, the identity provider is not honored. If the specified ca data is not valid, the identity provider is not honored. If empty, the default system roots are used. The namespace for this config map is openshift-config.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.SyncIdentityProviderSpecIdentityProvidersKeystoneCa Ca;
        /// <summary>
        /// domainName is required for keystone v3
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// tlsClientCert is an optional reference to a secret by name that contains the PEM-encoded TLS client certificate to present when connecting to the server. The key "tls.crt" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.SyncIdentityProviderSpecIdentityProvidersKeystoneTlsClientCert TlsClientCert;
        /// <summary>
        /// tlsClientKey is an optional reference to a secret by name that contains the PEM-encoded TLS private key for the client certificate referenced in tlsClientCert. The key "tls.key" is used to locate the data. If specified and the secret or expected key is not found, the identity provider is not honored. If the specified certificate data is not valid, the identity provider is not honored. The namespace for this secret is openshift-config.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.SyncIdentityProviderSpecIdentityProvidersKeystoneTlsClientKey TlsClientKey;
        /// <summary>
        /// url is the remote URL to connect to
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private SyncIdentityProviderSpecIdentityProvidersKeystone(
            Pulumi.Kubernetes.Types.Outputs.Hive.V1.SyncIdentityProviderSpecIdentityProvidersKeystoneCa ca,

            string domainName,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.SyncIdentityProviderSpecIdentityProvidersKeystoneTlsClientCert tlsClientCert,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.SyncIdentityProviderSpecIdentityProvidersKeystoneTlsClientKey tlsClientKey,

            string url)
        {
            Ca = ca;
            DomainName = domainName;
            TlsClientCert = tlsClientCert;
            TlsClientKey = tlsClientKey;
            Url = url;
        }
    }
}
