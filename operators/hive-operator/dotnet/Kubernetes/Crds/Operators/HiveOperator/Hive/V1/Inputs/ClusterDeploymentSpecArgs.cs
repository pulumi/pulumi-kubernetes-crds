// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Hive.V1
{

    /// <summary>
    /// ClusterDeploymentSpec defines the desired state of ClusterDeployment
    /// </summary>
    public class ClusterDeploymentSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// BaseDomain is the base domain to which the cluster should belong.
        /// </summary>
        [Input("baseDomain", required: true)]
        public Input<string> BaseDomain { get; set; } = null!;

        [Input("certificateBundles")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecCertificateBundlesArgs>? _certificateBundles;

        /// <summary>
        /// CertificateBundles is a list of certificate bundles associated with this cluster
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecCertificateBundlesArgs> CertificateBundles
        {
            get => _certificateBundles ?? (_certificateBundles = new InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecCertificateBundlesArgs>());
            set => _certificateBundles = value;
        }

        /// <summary>
        /// ClusterMetadata contains metadata information about the installed cluster.
        /// </summary>
        [Input("clusterMetadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecClusterMetadataArgs>? ClusterMetadata { get; set; }

        /// <summary>
        /// ClusterName is the friendly name of the cluster. It is used for subdomains, some resource tagging, and other instances where a friendly name for the cluster is useful.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// ClusterPoolRef is a reference to the ClusterPool that this ClusterDeployment originated from.
        /// </summary>
        [Input("clusterPoolRef")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecClusterPoolRefArgs>? ClusterPoolRef { get; set; }

        /// <summary>
        /// ControlPlaneConfig contains additional configuration for the target cluster's control plane
        /// </summary>
        [Input("controlPlaneConfig")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecControlPlaneConfigArgs>? ControlPlaneConfig { get; set; }

        /// <summary>
        /// HibernateAfter will transition a cluster to hibernating power state after it has been running for the given duration. The time that a cluster has been running is the time since the cluster was installed or the time since the cluster last came out of hibernation.
        /// </summary>
        [Input("hibernateAfter")]
        public Input<string>? HibernateAfter { get; set; }

        [Input("ingress")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecIngressArgs>? _ingress;

        /// <summary>
        /// Ingress allows defining desired clusteringress/shards to be configured on the cluster.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecIngressArgs> Ingress
        {
            get => _ingress ?? (_ingress = new InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecIngressArgs>());
            set => _ingress = value;
        }

        /// <summary>
        /// InstallAttemptsLimit is the maximum number of times Hive will attempt to install the cluster.
        /// </summary>
        [Input("installAttemptsLimit")]
        public Input<int>? InstallAttemptsLimit { get; set; }

        /// <summary>
        /// Installed is true if the cluster has been installed
        /// </summary>
        [Input("installed")]
        public Input<bool>? Installed { get; set; }

        /// <summary>
        /// ManageDNS specifies whether a DNSZone should be created and managed automatically for this ClusterDeployment
        /// </summary>
        [Input("manageDNS")]
        public Input<bool>? ManageDNS { get; set; }

        /// <summary>
        /// Platform is the configuration for the specific platform upon which to perform the installation.
        /// </summary>
        [Input("platform", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecPlatformArgs> Platform { get; set; } = null!;

        /// <summary>
        /// PowerState indicates whether a cluster should be running or hibernating. When omitted, PowerState defaults to the Running state.
        /// </summary>
        [Input("powerState")]
        public Input<string>? PowerState { get; set; }

        /// <summary>
        /// PreserveOnDelete allows the user to disconnect a cluster from Hive without deprovisioning it
        /// </summary>
        [Input("preserveOnDelete")]
        public Input<bool>? PreserveOnDelete { get; set; }

        /// <summary>
        /// Provisioning contains settings used only for initial cluster provisioning. May be unset in the case of adopted clusters.
        /// </summary>
        [Input("provisioning")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecProvisioningArgs>? Provisioning { get; set; }

        /// <summary>
        /// PullSecretRef is the reference to the secret to use when pulling images.
        /// </summary>
        [Input("pullSecretRef")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterDeploymentSpecPullSecretRefArgs>? PullSecretRef { get; set; }

        public ClusterDeploymentSpecArgs()
        {
        }
    }
}
