// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Hive.V1
{

    /// <summary>
    /// ClusterPoolStatus defines the observed state of ClusterPool
    /// </summary>
    public class ClusterPoolStatusArgs : Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterPoolStatusConditionsArgs>? _conditions;

        /// <summary>
        /// Conditions includes more detailed status for the cluster pool
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterPoolStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.ClusterPoolStatusConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Ready is the number of unclaimed clusters that have been installed and are ready to be claimed.
        /// </summary>
        [Input("ready", required: true)]
        public Input<int> Ready { get; set; } = null!;

        /// <summary>
        /// Size is the number of unclaimed clusters that have been created for the pool.
        /// </summary>
        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        public ClusterPoolStatusArgs()
        {
        }
    }
}
