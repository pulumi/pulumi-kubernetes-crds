// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Hive.V1
{

    [OutputType]
    public sealed class MachinePoolSpecPlatformVsphere
    {
        /// <summary>
        /// NumCoresPerSocket is the number of cores per socket in a vm. The number of vCPUs on the vm will be NumCPUs/NumCoresPerSocket.
        /// </summary>
        public readonly int CoresPerSocket;
        /// <summary>
        /// NumCPUs is the total number of virtual processor cores to assign a vm.
        /// </summary>
        public readonly int Cpus;
        /// <summary>
        /// Memory is the size of a VM's memory in MB.
        /// </summary>
        public readonly int MemoryMB;
        /// <summary>
        /// OSDisk defines the storage for instance.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.MachinePoolSpecPlatformVsphereOsDisk OsDisk;

        [OutputConstructor]
        private MachinePoolSpecPlatformVsphere(
            int coresPerSocket,

            int cpus,

            int memoryMB,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.MachinePoolSpecPlatformVsphereOsDisk osDisk)
        {
            CoresPerSocket = coresPerSocket;
            Cpus = cpus;
            MemoryMB = memoryMB;
            OsDisk = osDisk;
        }
    }
}
