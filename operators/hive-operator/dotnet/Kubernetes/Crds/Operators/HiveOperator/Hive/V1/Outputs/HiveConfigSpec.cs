// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Hive.V1
{

    [OutputType]
    public sealed class HiveConfigSpec
    {
        /// <summary>
        /// AdditionalCertificateAuthoritiesSecretRef is a list of references to secrets in the TargetNamespace that contain an additional Certificate Authority to use when communicating with target clusters. These certificate authorities will be used in addition to any self-signed CA generated by each cluster on installation.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecAdditionalCertificateAuthoritiesSecretRef> AdditionalCertificateAuthoritiesSecretRef;
        /// <summary>
        /// Backup specifies configuration for backup integration. If absent, backup integration will be disabled.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecBackup Backup;
        /// <summary>
        /// DeleteProtection can be set to "enabled" to turn on automatic delete protection for ClusterDeployments. When enabled, Hive will add the "hive.openshift.io/protected-delete" annotation to new ClusterDeployments. Once a ClusterDeployment has been installed, a user must remove the annotation from a ClusterDeployment prior to deleting it.
        /// </summary>
        public readonly string DeleteProtection;
        /// <summary>
        /// DeprovisionsDisabled can be set to true to block deprovision jobs from running.
        /// </summary>
        public readonly bool DeprovisionsDisabled;
        /// <summary>
        /// DisabledControllers allows selectively disabling Hive controllers by name. The name of an individual controller matches the name of the controller as seen in the Hive logging output.
        /// </summary>
        public readonly ImmutableArray<string> DisabledControllers;
        /// <summary>
        /// FailedProvisionConfig is used to configure settings related to handling provision failures.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecFailedProvisionConfig FailedProvisionConfig;
        /// <summary>
        /// GlobalPullSecretRef is used to specify a pull secret that will be used globally by all of the cluster deployments. For each cluster deployment, the contents of GlobalPullSecret will be merged with the specific pull secret for a cluster deployment(if specified), with precedence given to the contents of the pull secret for the cluster deployment. The global pull secret is assumed to be in the TargetNamespace.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecGlobalPullSecretRef GlobalPullSecretRef;
        /// <summary>
        /// HiveAPIEnabled is a boolean controlling whether or not the Hive operator will start up the v1alpha1 aggregated API server.
        /// </summary>
        public readonly bool HiveAPIEnabled;
        /// <summary>
        /// LogLevel is the level of logging to use for the Hive controllers. Acceptable levels, from coarsest to finest, are panic, fatal, error, warn, info, debug, and trace. The default level is info.
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// MaintenanceMode can be set to true to disable the hive controllers in situations where we need to ensure nothing is running that will add or act upon finalizers on Hive types. This should rarely be needed. Sets replicas to 0 for the hive-controllers deployment to accomplish this.
        /// </summary>
        public readonly bool MaintenanceMode;
        /// <summary>
        /// ManagedDomains is the list of DNS domains that are managed by the Hive cluster When specifying 'manageDNS: true' in a ClusterDeployment, the ClusterDeployment's baseDomain should be a direct child of one of these domains, otherwise the ClusterDeployment creation will result in a validation error.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecManagedDomains> ManagedDomains;
        /// <summary>
        /// SyncSetReapplyInterval is a string duration indicating how much time must pass before SyncSet resources will be reapplied. The default reapply interval is two hours.
        /// </summary>
        public readonly string SyncSetReapplyInterval;
        /// <summary>
        /// TargetNamespace is the namespace where the core Hive components should be run. Defaults to "hive". Will be created if it does not already exist. All resource references in HiveConfig can be assumed to be in the TargetNamespace.
        /// </summary>
        public readonly string TargetNamespace;

        [OutputConstructor]
        private HiveConfigSpec(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecAdditionalCertificateAuthoritiesSecretRef> additionalCertificateAuthoritiesSecretRef,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecBackup backup,

            string deleteProtection,

            bool deprovisionsDisabled,

            ImmutableArray<string> disabledControllers,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecFailedProvisionConfig failedProvisionConfig,

            Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecGlobalPullSecretRef globalPullSecretRef,

            bool hiveAPIEnabled,

            string logLevel,

            bool maintenanceMode,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Hive.V1.HiveConfigSpecManagedDomains> managedDomains,

            string syncSetReapplyInterval,

            string targetNamespace)
        {
            AdditionalCertificateAuthoritiesSecretRef = additionalCertificateAuthoritiesSecretRef;
            Backup = backup;
            DeleteProtection = deleteProtection;
            DeprovisionsDisabled = deprovisionsDisabled;
            DisabledControllers = disabledControllers;
            FailedProvisionConfig = failedProvisionConfig;
            GlobalPullSecretRef = globalPullSecretRef;
            HiveAPIEnabled = hiveAPIEnabled;
            LogLevel = logLevel;
            MaintenanceMode = maintenanceMode;
            ManagedDomains = managedDomains;
            SyncSetReapplyInterval = syncSetReapplyInterval;
            TargetNamespace = targetNamespace;
        }
    }
}
