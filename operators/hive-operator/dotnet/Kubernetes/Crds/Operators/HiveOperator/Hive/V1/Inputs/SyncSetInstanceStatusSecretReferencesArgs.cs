// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Hive.V1
{

    /// <summary>
    /// SyncStatus describes objects that have been created or patches that have been applied using the unique md5 sum of the object or patch.
    /// </summary>
    public class SyncSetInstanceStatusSecretReferencesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// APIVersion is the Group and Version of the object that was synced or patched.
        /// </summary>
        [Input("apiVersion", required: true)]
        public Input<string> ApiVersion { get; set; } = null!;

        [Input("conditions", required: true)]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.SyncSetInstanceStatusSecretReferencesConditionsArgs>? _conditions;

        /// <summary>
        /// Conditions is the list of conditions indicating success or failure of object create, update and delete as well as patch application.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.SyncSetInstanceStatusSecretReferencesConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Hive.V1.SyncSetInstanceStatusSecretReferencesConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Hash is the unique md5 hash of the resource or patch.
        /// </summary>
        [Input("hash", required: true)]
        public Input<string> Hash { get; set; } = null!;

        /// <summary>
        /// Kind is the Kind of the object that was synced or patched.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// Name is the name of the object that was synced or patched.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Namespace is the Namespace of the object that was synced or patched.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Resource is the resource name for the object that was synced. This will be populated for resources, but not patches
        /// </summary>
        [Input("resource")]
        public Input<string>? Resource { get; set; }

        public SyncSetInstanceStatusSecretReferencesArgs()
        {
        }
    }
}
