// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ClusterSync is the status of all of the SelectorSyncSets and SyncSets that apply to a ClusterDeployment.
type ClusterSyncType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterSyncSpec defines the desired state of ClusterSync
	Spec map[string]interface{} `pulumi:"spec"`
	// ClusterSyncStatus defines the observed state of ClusterSync
	Status *ClusterSyncStatus `pulumi:"status"`
}

// ClusterSyncTypeInput is an input type that accepts ClusterSyncTypeArgs and ClusterSyncTypeOutput values.
// You can construct a concrete instance of `ClusterSyncTypeInput` via:
//
//          ClusterSyncTypeArgs{...}
type ClusterSyncTypeInput interface {
	pulumi.Input

	ToClusterSyncTypeOutput() ClusterSyncTypeOutput
	ToClusterSyncTypeOutputWithContext(context.Context) ClusterSyncTypeOutput
}

// ClusterSync is the status of all of the SelectorSyncSets and SyncSets that apply to a ClusterDeployment.
type ClusterSyncTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ClusterSyncSpec defines the desired state of ClusterSync
	Spec pulumi.MapInput `pulumi:"spec"`
	// ClusterSyncStatus defines the observed state of ClusterSync
	Status ClusterSyncStatusPtrInput `pulumi:"status"`
}

func (ClusterSyncTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncType)(nil)).Elem()
}

func (i ClusterSyncTypeArgs) ToClusterSyncTypeOutput() ClusterSyncTypeOutput {
	return i.ToClusterSyncTypeOutputWithContext(context.Background())
}

func (i ClusterSyncTypeArgs) ToClusterSyncTypeOutputWithContext(ctx context.Context) ClusterSyncTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncTypeOutput)
}

// ClusterSync is the status of all of the SelectorSyncSets and SyncSets that apply to a ClusterDeployment.
type ClusterSyncTypeOutput struct{ *pulumi.OutputState }

func (ClusterSyncTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncType)(nil)).Elem()
}

func (o ClusterSyncTypeOutput) ToClusterSyncTypeOutput() ClusterSyncTypeOutput {
	return o
}

func (o ClusterSyncTypeOutput) ToClusterSyncTypeOutputWithContext(ctx context.Context) ClusterSyncTypeOutput {
	return o
}

func (o ClusterSyncTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterSyncTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterSyncTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ClusterSyncType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ClusterSyncSpec defines the desired state of ClusterSync
func (o ClusterSyncTypeOutput) Spec() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterSyncType) map[string]interface{} { return v.Spec }).(pulumi.MapOutput)
}

// ClusterSyncStatus defines the observed state of ClusterSync
func (o ClusterSyncTypeOutput) Status() ClusterSyncStatusPtrOutput {
	return o.ApplyT(func(v ClusterSyncType) *ClusterSyncStatus { return v.Status }).(ClusterSyncStatusPtrOutput)
}

// ClusterSyncLease is a record of the last time that SyncSets and SelectorSyncSets were applied to a cluster.
type ClusterSyncLeaseType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterSyncLeaseSpec is the specification of a ClusterSyncLease.
	Spec *ClusterSyncLeaseSpec `pulumi:"spec"`
}

// ClusterSyncLeaseTypeInput is an input type that accepts ClusterSyncLeaseTypeArgs and ClusterSyncLeaseTypeOutput values.
// You can construct a concrete instance of `ClusterSyncLeaseTypeInput` via:
//
//          ClusterSyncLeaseTypeArgs{...}
type ClusterSyncLeaseTypeInput interface {
	pulumi.Input

	ToClusterSyncLeaseTypeOutput() ClusterSyncLeaseTypeOutput
	ToClusterSyncLeaseTypeOutputWithContext(context.Context) ClusterSyncLeaseTypeOutput
}

// ClusterSyncLease is a record of the last time that SyncSets and SelectorSyncSets were applied to a cluster.
type ClusterSyncLeaseTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ClusterSyncLeaseSpec is the specification of a ClusterSyncLease.
	Spec ClusterSyncLeaseSpecPtrInput `pulumi:"spec"`
}

func (ClusterSyncLeaseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncLeaseType)(nil)).Elem()
}

func (i ClusterSyncLeaseTypeArgs) ToClusterSyncLeaseTypeOutput() ClusterSyncLeaseTypeOutput {
	return i.ToClusterSyncLeaseTypeOutputWithContext(context.Background())
}

func (i ClusterSyncLeaseTypeArgs) ToClusterSyncLeaseTypeOutputWithContext(ctx context.Context) ClusterSyncLeaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncLeaseTypeOutput)
}

// ClusterSyncLease is a record of the last time that SyncSets and SelectorSyncSets were applied to a cluster.
type ClusterSyncLeaseTypeOutput struct{ *pulumi.OutputState }

func (ClusterSyncLeaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncLeaseType)(nil)).Elem()
}

func (o ClusterSyncLeaseTypeOutput) ToClusterSyncLeaseTypeOutput() ClusterSyncLeaseTypeOutput {
	return o
}

func (o ClusterSyncLeaseTypeOutput) ToClusterSyncLeaseTypeOutputWithContext(ctx context.Context) ClusterSyncLeaseTypeOutput {
	return o
}

func (o ClusterSyncLeaseTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncLeaseType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterSyncLeaseTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncLeaseType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterSyncLeaseTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ClusterSyncLeaseType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ClusterSyncLeaseSpec is the specification of a ClusterSyncLease.
func (o ClusterSyncLeaseTypeOutput) Spec() ClusterSyncLeaseSpecPtrOutput {
	return o.ApplyT(func(v ClusterSyncLeaseType) *ClusterSyncLeaseSpec { return v.Spec }).(ClusterSyncLeaseSpecPtrOutput)
}

type ClusterSyncLeaseMetadata struct {
}

// ClusterSyncLeaseMetadataInput is an input type that accepts ClusterSyncLeaseMetadataArgs and ClusterSyncLeaseMetadataOutput values.
// You can construct a concrete instance of `ClusterSyncLeaseMetadataInput` via:
//
//          ClusterSyncLeaseMetadataArgs{...}
type ClusterSyncLeaseMetadataInput interface {
	pulumi.Input

	ToClusterSyncLeaseMetadataOutput() ClusterSyncLeaseMetadataOutput
	ToClusterSyncLeaseMetadataOutputWithContext(context.Context) ClusterSyncLeaseMetadataOutput
}

type ClusterSyncLeaseMetadataArgs struct {
}

func (ClusterSyncLeaseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncLeaseMetadata)(nil)).Elem()
}

func (i ClusterSyncLeaseMetadataArgs) ToClusterSyncLeaseMetadataOutput() ClusterSyncLeaseMetadataOutput {
	return i.ToClusterSyncLeaseMetadataOutputWithContext(context.Background())
}

func (i ClusterSyncLeaseMetadataArgs) ToClusterSyncLeaseMetadataOutputWithContext(ctx context.Context) ClusterSyncLeaseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncLeaseMetadataOutput)
}

type ClusterSyncLeaseMetadataOutput struct{ *pulumi.OutputState }

func (ClusterSyncLeaseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncLeaseMetadata)(nil)).Elem()
}

func (o ClusterSyncLeaseMetadataOutput) ToClusterSyncLeaseMetadataOutput() ClusterSyncLeaseMetadataOutput {
	return o
}

func (o ClusterSyncLeaseMetadataOutput) ToClusterSyncLeaseMetadataOutputWithContext(ctx context.Context) ClusterSyncLeaseMetadataOutput {
	return o
}

// ClusterSyncLeaseSpec is the specification of a ClusterSyncLease.
type ClusterSyncLeaseSpec struct {
	// RenewTime is the time when SyncSets and SelectorSyncSets were last applied to the cluster.
	RenewTime string `pulumi:"renewTime"`
}

// ClusterSyncLeaseSpecInput is an input type that accepts ClusterSyncLeaseSpecArgs and ClusterSyncLeaseSpecOutput values.
// You can construct a concrete instance of `ClusterSyncLeaseSpecInput` via:
//
//          ClusterSyncLeaseSpecArgs{...}
type ClusterSyncLeaseSpecInput interface {
	pulumi.Input

	ToClusterSyncLeaseSpecOutput() ClusterSyncLeaseSpecOutput
	ToClusterSyncLeaseSpecOutputWithContext(context.Context) ClusterSyncLeaseSpecOutput
}

// ClusterSyncLeaseSpec is the specification of a ClusterSyncLease.
type ClusterSyncLeaseSpecArgs struct {
	// RenewTime is the time when SyncSets and SelectorSyncSets were last applied to the cluster.
	RenewTime pulumi.StringInput `pulumi:"renewTime"`
}

func (ClusterSyncLeaseSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncLeaseSpec)(nil)).Elem()
}

func (i ClusterSyncLeaseSpecArgs) ToClusterSyncLeaseSpecOutput() ClusterSyncLeaseSpecOutput {
	return i.ToClusterSyncLeaseSpecOutputWithContext(context.Background())
}

func (i ClusterSyncLeaseSpecArgs) ToClusterSyncLeaseSpecOutputWithContext(ctx context.Context) ClusterSyncLeaseSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncLeaseSpecOutput)
}

func (i ClusterSyncLeaseSpecArgs) ToClusterSyncLeaseSpecPtrOutput() ClusterSyncLeaseSpecPtrOutput {
	return i.ToClusterSyncLeaseSpecPtrOutputWithContext(context.Background())
}

func (i ClusterSyncLeaseSpecArgs) ToClusterSyncLeaseSpecPtrOutputWithContext(ctx context.Context) ClusterSyncLeaseSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncLeaseSpecOutput).ToClusterSyncLeaseSpecPtrOutputWithContext(ctx)
}

// ClusterSyncLeaseSpecPtrInput is an input type that accepts ClusterSyncLeaseSpecArgs, ClusterSyncLeaseSpecPtr and ClusterSyncLeaseSpecPtrOutput values.
// You can construct a concrete instance of `ClusterSyncLeaseSpecPtrInput` via:
//
//          ClusterSyncLeaseSpecArgs{...}
//
//  or:
//
//          nil
type ClusterSyncLeaseSpecPtrInput interface {
	pulumi.Input

	ToClusterSyncLeaseSpecPtrOutput() ClusterSyncLeaseSpecPtrOutput
	ToClusterSyncLeaseSpecPtrOutputWithContext(context.Context) ClusterSyncLeaseSpecPtrOutput
}

type clusterSyncLeaseSpecPtrType ClusterSyncLeaseSpecArgs

func ClusterSyncLeaseSpecPtr(v *ClusterSyncLeaseSpecArgs) ClusterSyncLeaseSpecPtrInput {
	return (*clusterSyncLeaseSpecPtrType)(v)
}

func (*clusterSyncLeaseSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSyncLeaseSpec)(nil)).Elem()
}

func (i *clusterSyncLeaseSpecPtrType) ToClusterSyncLeaseSpecPtrOutput() ClusterSyncLeaseSpecPtrOutput {
	return i.ToClusterSyncLeaseSpecPtrOutputWithContext(context.Background())
}

func (i *clusterSyncLeaseSpecPtrType) ToClusterSyncLeaseSpecPtrOutputWithContext(ctx context.Context) ClusterSyncLeaseSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncLeaseSpecPtrOutput)
}

// ClusterSyncLeaseSpec is the specification of a ClusterSyncLease.
type ClusterSyncLeaseSpecOutput struct{ *pulumi.OutputState }

func (ClusterSyncLeaseSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncLeaseSpec)(nil)).Elem()
}

func (o ClusterSyncLeaseSpecOutput) ToClusterSyncLeaseSpecOutput() ClusterSyncLeaseSpecOutput {
	return o
}

func (o ClusterSyncLeaseSpecOutput) ToClusterSyncLeaseSpecOutputWithContext(ctx context.Context) ClusterSyncLeaseSpecOutput {
	return o
}

func (o ClusterSyncLeaseSpecOutput) ToClusterSyncLeaseSpecPtrOutput() ClusterSyncLeaseSpecPtrOutput {
	return o.ToClusterSyncLeaseSpecPtrOutputWithContext(context.Background())
}

func (o ClusterSyncLeaseSpecOutput) ToClusterSyncLeaseSpecPtrOutputWithContext(ctx context.Context) ClusterSyncLeaseSpecPtrOutput {
	return o.ApplyT(func(v ClusterSyncLeaseSpec) *ClusterSyncLeaseSpec {
		return &v
	}).(ClusterSyncLeaseSpecPtrOutput)
}

// RenewTime is the time when SyncSets and SelectorSyncSets were last applied to the cluster.
func (o ClusterSyncLeaseSpecOutput) RenewTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncLeaseSpec) string { return v.RenewTime }).(pulumi.StringOutput)
}

type ClusterSyncLeaseSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterSyncLeaseSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSyncLeaseSpec)(nil)).Elem()
}

func (o ClusterSyncLeaseSpecPtrOutput) ToClusterSyncLeaseSpecPtrOutput() ClusterSyncLeaseSpecPtrOutput {
	return o
}

func (o ClusterSyncLeaseSpecPtrOutput) ToClusterSyncLeaseSpecPtrOutputWithContext(ctx context.Context) ClusterSyncLeaseSpecPtrOutput {
	return o
}

func (o ClusterSyncLeaseSpecPtrOutput) Elem() ClusterSyncLeaseSpecOutput {
	return o.ApplyT(func(v *ClusterSyncLeaseSpec) ClusterSyncLeaseSpec { return *v }).(ClusterSyncLeaseSpecOutput)
}

// RenewTime is the time when SyncSets and SelectorSyncSets were last applied to the cluster.
func (o ClusterSyncLeaseSpecPtrOutput) RenewTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSyncLeaseSpec) *string {
		if v == nil {
			return nil
		}
		return &v.RenewTime
	}).(pulumi.StringPtrOutput)
}

type ClusterSyncMetadata struct {
}

// ClusterSyncMetadataInput is an input type that accepts ClusterSyncMetadataArgs and ClusterSyncMetadataOutput values.
// You can construct a concrete instance of `ClusterSyncMetadataInput` via:
//
//          ClusterSyncMetadataArgs{...}
type ClusterSyncMetadataInput interface {
	pulumi.Input

	ToClusterSyncMetadataOutput() ClusterSyncMetadataOutput
	ToClusterSyncMetadataOutputWithContext(context.Context) ClusterSyncMetadataOutput
}

type ClusterSyncMetadataArgs struct {
}

func (ClusterSyncMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncMetadata)(nil)).Elem()
}

func (i ClusterSyncMetadataArgs) ToClusterSyncMetadataOutput() ClusterSyncMetadataOutput {
	return i.ToClusterSyncMetadataOutputWithContext(context.Background())
}

func (i ClusterSyncMetadataArgs) ToClusterSyncMetadataOutputWithContext(ctx context.Context) ClusterSyncMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncMetadataOutput)
}

type ClusterSyncMetadataOutput struct{ *pulumi.OutputState }

func (ClusterSyncMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncMetadata)(nil)).Elem()
}

func (o ClusterSyncMetadataOutput) ToClusterSyncMetadataOutput() ClusterSyncMetadataOutput {
	return o
}

func (o ClusterSyncMetadataOutput) ToClusterSyncMetadataOutputWithContext(ctx context.Context) ClusterSyncMetadataOutput {
	return o
}

// ClusterSyncSpec defines the desired state of ClusterSync
type ClusterSyncSpec struct {
}

// ClusterSyncSpecInput is an input type that accepts ClusterSyncSpecArgs and ClusterSyncSpecOutput values.
// You can construct a concrete instance of `ClusterSyncSpecInput` via:
//
//          ClusterSyncSpecArgs{...}
type ClusterSyncSpecInput interface {
	pulumi.Input

	ToClusterSyncSpecOutput() ClusterSyncSpecOutput
	ToClusterSyncSpecOutputWithContext(context.Context) ClusterSyncSpecOutput
}

// ClusterSyncSpec defines the desired state of ClusterSync
type ClusterSyncSpecArgs struct {
}

func (ClusterSyncSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncSpec)(nil)).Elem()
}

func (i ClusterSyncSpecArgs) ToClusterSyncSpecOutput() ClusterSyncSpecOutput {
	return i.ToClusterSyncSpecOutputWithContext(context.Background())
}

func (i ClusterSyncSpecArgs) ToClusterSyncSpecOutputWithContext(ctx context.Context) ClusterSyncSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncSpecOutput)
}

// ClusterSyncSpec defines the desired state of ClusterSync
type ClusterSyncSpecOutput struct{ *pulumi.OutputState }

func (ClusterSyncSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncSpec)(nil)).Elem()
}

func (o ClusterSyncSpecOutput) ToClusterSyncSpecOutput() ClusterSyncSpecOutput {
	return o
}

func (o ClusterSyncSpecOutput) ToClusterSyncSpecOutputWithContext(ctx context.Context) ClusterSyncSpecOutput {
	return o
}

// ClusterSyncStatus defines the observed state of ClusterSync
type ClusterSyncStatus struct {
	// Conditions is a list of conditions associated with syncing to the cluster.
	Conditions []ClusterSyncStatusConditions `pulumi:"conditions"`
	// FirstSuccessTime is the time we first successfully applied all (selector)syncsets to a cluster.
	FirstSuccessTime *string `pulumi:"firstSuccessTime"`
	// SelectorSyncSets is the sync status of all of the SelectorSyncSets for the cluster.
	SelectorSyncSets []ClusterSyncStatusSelectorSyncSets `pulumi:"selectorSyncSets"`
	// SyncSets is the sync status of all of the SyncSets for the cluster.
	SyncSets []ClusterSyncStatusSyncSets `pulumi:"syncSets"`
}

// ClusterSyncStatusInput is an input type that accepts ClusterSyncStatusArgs and ClusterSyncStatusOutput values.
// You can construct a concrete instance of `ClusterSyncStatusInput` via:
//
//          ClusterSyncStatusArgs{...}
type ClusterSyncStatusInput interface {
	pulumi.Input

	ToClusterSyncStatusOutput() ClusterSyncStatusOutput
	ToClusterSyncStatusOutputWithContext(context.Context) ClusterSyncStatusOutput
}

// ClusterSyncStatus defines the observed state of ClusterSync
type ClusterSyncStatusArgs struct {
	// Conditions is a list of conditions associated with syncing to the cluster.
	Conditions ClusterSyncStatusConditionsArrayInput `pulumi:"conditions"`
	// FirstSuccessTime is the time we first successfully applied all (selector)syncsets to a cluster.
	FirstSuccessTime pulumi.StringPtrInput `pulumi:"firstSuccessTime"`
	// SelectorSyncSets is the sync status of all of the SelectorSyncSets for the cluster.
	SelectorSyncSets ClusterSyncStatusSelectorSyncSetsArrayInput `pulumi:"selectorSyncSets"`
	// SyncSets is the sync status of all of the SyncSets for the cluster.
	SyncSets ClusterSyncStatusSyncSetsArrayInput `pulumi:"syncSets"`
}

func (ClusterSyncStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatus)(nil)).Elem()
}

func (i ClusterSyncStatusArgs) ToClusterSyncStatusOutput() ClusterSyncStatusOutput {
	return i.ToClusterSyncStatusOutputWithContext(context.Background())
}

func (i ClusterSyncStatusArgs) ToClusterSyncStatusOutputWithContext(ctx context.Context) ClusterSyncStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusOutput)
}

func (i ClusterSyncStatusArgs) ToClusterSyncStatusPtrOutput() ClusterSyncStatusPtrOutput {
	return i.ToClusterSyncStatusPtrOutputWithContext(context.Background())
}

func (i ClusterSyncStatusArgs) ToClusterSyncStatusPtrOutputWithContext(ctx context.Context) ClusterSyncStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusOutput).ToClusterSyncStatusPtrOutputWithContext(ctx)
}

// ClusterSyncStatusPtrInput is an input type that accepts ClusterSyncStatusArgs, ClusterSyncStatusPtr and ClusterSyncStatusPtrOutput values.
// You can construct a concrete instance of `ClusterSyncStatusPtrInput` via:
//
//          ClusterSyncStatusArgs{...}
//
//  or:
//
//          nil
type ClusterSyncStatusPtrInput interface {
	pulumi.Input

	ToClusterSyncStatusPtrOutput() ClusterSyncStatusPtrOutput
	ToClusterSyncStatusPtrOutputWithContext(context.Context) ClusterSyncStatusPtrOutput
}

type clusterSyncStatusPtrType ClusterSyncStatusArgs

func ClusterSyncStatusPtr(v *ClusterSyncStatusArgs) ClusterSyncStatusPtrInput {
	return (*clusterSyncStatusPtrType)(v)
}

func (*clusterSyncStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSyncStatus)(nil)).Elem()
}

func (i *clusterSyncStatusPtrType) ToClusterSyncStatusPtrOutput() ClusterSyncStatusPtrOutput {
	return i.ToClusterSyncStatusPtrOutputWithContext(context.Background())
}

func (i *clusterSyncStatusPtrType) ToClusterSyncStatusPtrOutputWithContext(ctx context.Context) ClusterSyncStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusPtrOutput)
}

// ClusterSyncStatus defines the observed state of ClusterSync
type ClusterSyncStatusOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatus)(nil)).Elem()
}

func (o ClusterSyncStatusOutput) ToClusterSyncStatusOutput() ClusterSyncStatusOutput {
	return o
}

func (o ClusterSyncStatusOutput) ToClusterSyncStatusOutputWithContext(ctx context.Context) ClusterSyncStatusOutput {
	return o
}

func (o ClusterSyncStatusOutput) ToClusterSyncStatusPtrOutput() ClusterSyncStatusPtrOutput {
	return o.ToClusterSyncStatusPtrOutputWithContext(context.Background())
}

func (o ClusterSyncStatusOutput) ToClusterSyncStatusPtrOutputWithContext(ctx context.Context) ClusterSyncStatusPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatus) *ClusterSyncStatus {
		return &v
	}).(ClusterSyncStatusPtrOutput)
}

// Conditions is a list of conditions associated with syncing to the cluster.
func (o ClusterSyncStatusOutput) Conditions() ClusterSyncStatusConditionsArrayOutput {
	return o.ApplyT(func(v ClusterSyncStatus) []ClusterSyncStatusConditions { return v.Conditions }).(ClusterSyncStatusConditionsArrayOutput)
}

// FirstSuccessTime is the time we first successfully applied all (selector)syncsets to a cluster.
func (o ClusterSyncStatusOutput) FirstSuccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatus) *string { return v.FirstSuccessTime }).(pulumi.StringPtrOutput)
}

// SelectorSyncSets is the sync status of all of the SelectorSyncSets for the cluster.
func (o ClusterSyncStatusOutput) SelectorSyncSets() ClusterSyncStatusSelectorSyncSetsArrayOutput {
	return o.ApplyT(func(v ClusterSyncStatus) []ClusterSyncStatusSelectorSyncSets { return v.SelectorSyncSets }).(ClusterSyncStatusSelectorSyncSetsArrayOutput)
}

// SyncSets is the sync status of all of the SyncSets for the cluster.
func (o ClusterSyncStatusOutput) SyncSets() ClusterSyncStatusSyncSetsArrayOutput {
	return o.ApplyT(func(v ClusterSyncStatus) []ClusterSyncStatusSyncSets { return v.SyncSets }).(ClusterSyncStatusSyncSetsArrayOutput)
}

type ClusterSyncStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSyncStatus)(nil)).Elem()
}

func (o ClusterSyncStatusPtrOutput) ToClusterSyncStatusPtrOutput() ClusterSyncStatusPtrOutput {
	return o
}

func (o ClusterSyncStatusPtrOutput) ToClusterSyncStatusPtrOutputWithContext(ctx context.Context) ClusterSyncStatusPtrOutput {
	return o
}

func (o ClusterSyncStatusPtrOutput) Elem() ClusterSyncStatusOutput {
	return o.ApplyT(func(v *ClusterSyncStatus) ClusterSyncStatus { return *v }).(ClusterSyncStatusOutput)
}

// Conditions is a list of conditions associated with syncing to the cluster.
func (o ClusterSyncStatusPtrOutput) Conditions() ClusterSyncStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterSyncStatus) []ClusterSyncStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ClusterSyncStatusConditionsArrayOutput)
}

// FirstSuccessTime is the time we first successfully applied all (selector)syncsets to a cluster.
func (o ClusterSyncStatusPtrOutput) FirstSuccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSyncStatus) *string {
		if v == nil {
			return nil
		}
		return v.FirstSuccessTime
	}).(pulumi.StringPtrOutput)
}

// SelectorSyncSets is the sync status of all of the SelectorSyncSets for the cluster.
func (o ClusterSyncStatusPtrOutput) SelectorSyncSets() ClusterSyncStatusSelectorSyncSetsArrayOutput {
	return o.ApplyT(func(v *ClusterSyncStatus) []ClusterSyncStatusSelectorSyncSets {
		if v == nil {
			return nil
		}
		return v.SelectorSyncSets
	}).(ClusterSyncStatusSelectorSyncSetsArrayOutput)
}

// SyncSets is the sync status of all of the SyncSets for the cluster.
func (o ClusterSyncStatusPtrOutput) SyncSets() ClusterSyncStatusSyncSetsArrayOutput {
	return o.ApplyT(func(v *ClusterSyncStatus) []ClusterSyncStatusSyncSets {
		if v == nil {
			return nil
		}
		return v.SyncSets
	}).(ClusterSyncStatusSyncSetsArrayOutput)
}

// ClusterSyncCondition contains details for the current condition of a ClusterSync
type ClusterSyncStatusConditions struct {
	// LastProbeTime is the last time we probed the condition.
	LastProbeTime *string `pulumi:"lastProbeTime"`
	// LastTransitionTime is the last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human-readable message indicating details about the last transition.
	Message *string `pulumi:"message"`
	// Reason is a unique, one-word, CamelCase reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status is the status of the condition.
	Status string `pulumi:"status"`
	// Type is the type of the condition.
	Type string `pulumi:"type"`
}

// ClusterSyncStatusConditionsInput is an input type that accepts ClusterSyncStatusConditionsArgs and ClusterSyncStatusConditionsOutput values.
// You can construct a concrete instance of `ClusterSyncStatusConditionsInput` via:
//
//          ClusterSyncStatusConditionsArgs{...}
type ClusterSyncStatusConditionsInput interface {
	pulumi.Input

	ToClusterSyncStatusConditionsOutput() ClusterSyncStatusConditionsOutput
	ToClusterSyncStatusConditionsOutputWithContext(context.Context) ClusterSyncStatusConditionsOutput
}

// ClusterSyncCondition contains details for the current condition of a ClusterSync
type ClusterSyncStatusConditionsArgs struct {
	// LastProbeTime is the last time we probed the condition.
	LastProbeTime pulumi.StringPtrInput `pulumi:"lastProbeTime"`
	// LastTransitionTime is the last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human-readable message indicating details about the last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a unique, one-word, CamelCase reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status is the status of the condition.
	Status pulumi.StringInput `pulumi:"status"`
	// Type is the type of the condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterSyncStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusConditions)(nil)).Elem()
}

func (i ClusterSyncStatusConditionsArgs) ToClusterSyncStatusConditionsOutput() ClusterSyncStatusConditionsOutput {
	return i.ToClusterSyncStatusConditionsOutputWithContext(context.Background())
}

func (i ClusterSyncStatusConditionsArgs) ToClusterSyncStatusConditionsOutputWithContext(ctx context.Context) ClusterSyncStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusConditionsOutput)
}

// ClusterSyncStatusConditionsArrayInput is an input type that accepts ClusterSyncStatusConditionsArray and ClusterSyncStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterSyncStatusConditionsArrayInput` via:
//
//          ClusterSyncStatusConditionsArray{ ClusterSyncStatusConditionsArgs{...} }
type ClusterSyncStatusConditionsArrayInput interface {
	pulumi.Input

	ToClusterSyncStatusConditionsArrayOutput() ClusterSyncStatusConditionsArrayOutput
	ToClusterSyncStatusConditionsArrayOutputWithContext(context.Context) ClusterSyncStatusConditionsArrayOutput
}

type ClusterSyncStatusConditionsArray []ClusterSyncStatusConditionsInput

func (ClusterSyncStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusConditions)(nil)).Elem()
}

func (i ClusterSyncStatusConditionsArray) ToClusterSyncStatusConditionsArrayOutput() ClusterSyncStatusConditionsArrayOutput {
	return i.ToClusterSyncStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterSyncStatusConditionsArray) ToClusterSyncStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterSyncStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusConditionsArrayOutput)
}

// ClusterSyncCondition contains details for the current condition of a ClusterSync
type ClusterSyncStatusConditionsOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusConditions)(nil)).Elem()
}

func (o ClusterSyncStatusConditionsOutput) ToClusterSyncStatusConditionsOutput() ClusterSyncStatusConditionsOutput {
	return o
}

func (o ClusterSyncStatusConditionsOutput) ToClusterSyncStatusConditionsOutputWithContext(ctx context.Context) ClusterSyncStatusConditionsOutput {
	return o
}

// LastProbeTime is the last time we probed the condition.
func (o ClusterSyncStatusConditionsOutput) LastProbeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusConditions) *string { return v.LastProbeTime }).(pulumi.StringPtrOutput)
}

// LastTransitionTime is the last time the condition transitioned from one status to another.
func (o ClusterSyncStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human-readable message indicating details about the last transition.
func (o ClusterSyncStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a unique, one-word, CamelCase reason for the condition's last transition.
func (o ClusterSyncStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status is the status of the condition.
func (o ClusterSyncStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type is the type of the condition.
func (o ClusterSyncStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSyncStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusConditions)(nil)).Elem()
}

func (o ClusterSyncStatusConditionsArrayOutput) ToClusterSyncStatusConditionsArrayOutput() ClusterSyncStatusConditionsArrayOutput {
	return o
}

func (o ClusterSyncStatusConditionsArrayOutput) ToClusterSyncStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterSyncStatusConditionsArrayOutput {
	return o
}

func (o ClusterSyncStatusConditionsArrayOutput) Index(i pulumi.IntInput) ClusterSyncStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSyncStatusConditions {
		return vs[0].([]ClusterSyncStatusConditions)[vs[1].(int)]
	}).(ClusterSyncStatusConditionsOutput)
}

// SyncStatus is the status of applying a specific SyncSet or SelectorSyncSet to the cluster.
type ClusterSyncStatusSelectorSyncSets struct {
	// FailureMessage is a message describing why the SyncSet or SelectorSyncSet could not be applied. This is only set when Result is Failure.
	FailureMessage *string `pulumi:"failureMessage"`
	// FirstSuccessTime is the time when the SyncSet or SelectorSyncSet was first successfully applied to the cluster.
	FirstSuccessTime *string `pulumi:"firstSuccessTime"`
	// LastTransitionTime is the time when this status last changed.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// Name is the name of the SyncSet or SelectorSyncSet.
	Name string `pulumi:"name"`
	// ObservedGeneration is the generation of the SyncSet or SelectorSyncSet that was last observed.
	ObservedGeneration int `pulumi:"observedGeneration"`
	// ResourcesToDelete is the list of resources in the cluster that should be deleted when the SyncSet or SelectorSyncSet is deleted or is no longer matched to the cluster.
	ResourcesToDelete []ClusterSyncStatusSelectorSyncSetsResourcesToDelete `pulumi:"resourcesToDelete"`
	// Result is the result of the last attempt to apply the SyncSet or SelectorSyncSet to the cluster.
	Result string `pulumi:"result"`
}

// ClusterSyncStatusSelectorSyncSetsInput is an input type that accepts ClusterSyncStatusSelectorSyncSetsArgs and ClusterSyncStatusSelectorSyncSetsOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSelectorSyncSetsInput` via:
//
//          ClusterSyncStatusSelectorSyncSetsArgs{...}
type ClusterSyncStatusSelectorSyncSetsInput interface {
	pulumi.Input

	ToClusterSyncStatusSelectorSyncSetsOutput() ClusterSyncStatusSelectorSyncSetsOutput
	ToClusterSyncStatusSelectorSyncSetsOutputWithContext(context.Context) ClusterSyncStatusSelectorSyncSetsOutput
}

// SyncStatus is the status of applying a specific SyncSet or SelectorSyncSet to the cluster.
type ClusterSyncStatusSelectorSyncSetsArgs struct {
	// FailureMessage is a message describing why the SyncSet or SelectorSyncSet could not be applied. This is only set when Result is Failure.
	FailureMessage pulumi.StringPtrInput `pulumi:"failureMessage"`
	// FirstSuccessTime is the time when the SyncSet or SelectorSyncSet was first successfully applied to the cluster.
	FirstSuccessTime pulumi.StringPtrInput `pulumi:"firstSuccessTime"`
	// LastTransitionTime is the time when this status last changed.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// Name is the name of the SyncSet or SelectorSyncSet.
	Name pulumi.StringInput `pulumi:"name"`
	// ObservedGeneration is the generation of the SyncSet or SelectorSyncSet that was last observed.
	ObservedGeneration pulumi.IntInput `pulumi:"observedGeneration"`
	// ResourcesToDelete is the list of resources in the cluster that should be deleted when the SyncSet or SelectorSyncSet is deleted or is no longer matched to the cluster.
	ResourcesToDelete ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayInput `pulumi:"resourcesToDelete"`
	// Result is the result of the last attempt to apply the SyncSet or SelectorSyncSet to the cluster.
	Result pulumi.StringInput `pulumi:"result"`
}

func (ClusterSyncStatusSelectorSyncSetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSelectorSyncSets)(nil)).Elem()
}

func (i ClusterSyncStatusSelectorSyncSetsArgs) ToClusterSyncStatusSelectorSyncSetsOutput() ClusterSyncStatusSelectorSyncSetsOutput {
	return i.ToClusterSyncStatusSelectorSyncSetsOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSelectorSyncSetsArgs) ToClusterSyncStatusSelectorSyncSetsOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSelectorSyncSetsOutput)
}

// ClusterSyncStatusSelectorSyncSetsArrayInput is an input type that accepts ClusterSyncStatusSelectorSyncSetsArray and ClusterSyncStatusSelectorSyncSetsArrayOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSelectorSyncSetsArrayInput` via:
//
//          ClusterSyncStatusSelectorSyncSetsArray{ ClusterSyncStatusSelectorSyncSetsArgs{...} }
type ClusterSyncStatusSelectorSyncSetsArrayInput interface {
	pulumi.Input

	ToClusterSyncStatusSelectorSyncSetsArrayOutput() ClusterSyncStatusSelectorSyncSetsArrayOutput
	ToClusterSyncStatusSelectorSyncSetsArrayOutputWithContext(context.Context) ClusterSyncStatusSelectorSyncSetsArrayOutput
}

type ClusterSyncStatusSelectorSyncSetsArray []ClusterSyncStatusSelectorSyncSetsInput

func (ClusterSyncStatusSelectorSyncSetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSelectorSyncSets)(nil)).Elem()
}

func (i ClusterSyncStatusSelectorSyncSetsArray) ToClusterSyncStatusSelectorSyncSetsArrayOutput() ClusterSyncStatusSelectorSyncSetsArrayOutput {
	return i.ToClusterSyncStatusSelectorSyncSetsArrayOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSelectorSyncSetsArray) ToClusterSyncStatusSelectorSyncSetsArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSelectorSyncSetsArrayOutput)
}

// SyncStatus is the status of applying a specific SyncSet or SelectorSyncSet to the cluster.
type ClusterSyncStatusSelectorSyncSetsOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSelectorSyncSetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSelectorSyncSets)(nil)).Elem()
}

func (o ClusterSyncStatusSelectorSyncSetsOutput) ToClusterSyncStatusSelectorSyncSetsOutput() ClusterSyncStatusSelectorSyncSetsOutput {
	return o
}

func (o ClusterSyncStatusSelectorSyncSetsOutput) ToClusterSyncStatusSelectorSyncSetsOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsOutput {
	return o
}

// FailureMessage is a message describing why the SyncSet or SelectorSyncSet could not be applied. This is only set when Result is Failure.
func (o ClusterSyncStatusSelectorSyncSetsOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// FirstSuccessTime is the time when the SyncSet or SelectorSyncSet was first successfully applied to the cluster.
func (o ClusterSyncStatusSelectorSyncSetsOutput) FirstSuccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) *string { return v.FirstSuccessTime }).(pulumi.StringPtrOutput)
}

// LastTransitionTime is the time when this status last changed.
func (o ClusterSyncStatusSelectorSyncSetsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// Name is the name of the SyncSet or SelectorSyncSet.
func (o ClusterSyncStatusSelectorSyncSetsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) string { return v.Name }).(pulumi.StringOutput)
}

// ObservedGeneration is the generation of the SyncSet or SelectorSyncSet that was last observed.
func (o ClusterSyncStatusSelectorSyncSetsOutput) ObservedGeneration() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) int { return v.ObservedGeneration }).(pulumi.IntOutput)
}

// ResourcesToDelete is the list of resources in the cluster that should be deleted when the SyncSet or SelectorSyncSet is deleted or is no longer matched to the cluster.
func (o ClusterSyncStatusSelectorSyncSetsOutput) ResourcesToDelete() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) []ClusterSyncStatusSelectorSyncSetsResourcesToDelete {
		return v.ResourcesToDelete
	}).(ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput)
}

// Result is the result of the last attempt to apply the SyncSet or SelectorSyncSet to the cluster.
func (o ClusterSyncStatusSelectorSyncSetsOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSets) string { return v.Result }).(pulumi.StringOutput)
}

type ClusterSyncStatusSelectorSyncSetsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSelectorSyncSetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSelectorSyncSets)(nil)).Elem()
}

func (o ClusterSyncStatusSelectorSyncSetsArrayOutput) ToClusterSyncStatusSelectorSyncSetsArrayOutput() ClusterSyncStatusSelectorSyncSetsArrayOutput {
	return o
}

func (o ClusterSyncStatusSelectorSyncSetsArrayOutput) ToClusterSyncStatusSelectorSyncSetsArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsArrayOutput {
	return o
}

func (o ClusterSyncStatusSelectorSyncSetsArrayOutput) Index(i pulumi.IntInput) ClusterSyncStatusSelectorSyncSetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSyncStatusSelectorSyncSets {
		return vs[0].([]ClusterSyncStatusSelectorSyncSets)[vs[1].(int)]
	}).(ClusterSyncStatusSelectorSyncSetsOutput)
}

// SyncResourceReference is a reference to a resource that is synced to a cluster via a SyncSet or SelectorSyncSet.
type ClusterSyncStatusSelectorSyncSetsResourcesToDelete struct {
	// APIVersion is the Group and Version of the resource.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind is the Kind of the resource.
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource.
	Name string `pulumi:"name"`
	// Namespace is the namespace of the resource.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSyncStatusSelectorSyncSetsResourcesToDeleteInput is an input type that accepts ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs and ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSelectorSyncSetsResourcesToDeleteInput` via:
//
//          ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs{...}
type ClusterSyncStatusSelectorSyncSetsResourcesToDeleteInput interface {
	pulumi.Input

	ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput
	ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutputWithContext(context.Context) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput
}

// SyncResourceReference is a reference to a resource that is synced to a cluster via a SyncSet or SelectorSyncSet.
type ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs struct {
	// APIVersion is the Group and Version of the resource.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind is the Kind of the resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace is the namespace of the resource.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSelectorSyncSetsResourcesToDelete)(nil)).Elem()
}

func (i ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput {
	return i.ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput)
}

// ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayInput is an input type that accepts ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArray and ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayInput` via:
//
//          ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArray{ ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArgs{...} }
type ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayInput interface {
	pulumi.Input

	ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput
	ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutputWithContext(context.Context) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput
}

type ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArray []ClusterSyncStatusSelectorSyncSetsResourcesToDeleteInput

func (ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSelectorSyncSetsResourcesToDelete)(nil)).Elem()
}

func (i ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArray) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput {
	return i.ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArray) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput)
}

// SyncResourceReference is a reference to a resource that is synced to a cluster via a SyncSet or SelectorSyncSet.
type ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSelectorSyncSetsResourcesToDelete)(nil)).Elem()
}

func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput {
	return o
}

func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput {
	return o
}

// APIVersion is the Group and Version of the resource.
func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSetsResourcesToDelete) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is the Kind of the resource.
func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSetsResourcesToDelete) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource.
func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSetsResourcesToDelete) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace is the namespace of the resource.
func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSelectorSyncSetsResourcesToDelete) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSelectorSyncSetsResourcesToDelete)(nil)).Elem()
}

func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput() ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput {
	return o
}

func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput) ToClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput {
	return o
}

func (o ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput) Index(i pulumi.IntInput) ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSyncStatusSelectorSyncSetsResourcesToDelete {
		return vs[0].([]ClusterSyncStatusSelectorSyncSetsResourcesToDelete)[vs[1].(int)]
	}).(ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput)
}

// SyncStatus is the status of applying a specific SyncSet or SelectorSyncSet to the cluster.
type ClusterSyncStatusSyncSets struct {
	// FailureMessage is a message describing why the SyncSet or SelectorSyncSet could not be applied. This is only set when Result is Failure.
	FailureMessage *string `pulumi:"failureMessage"`
	// FirstSuccessTime is the time when the SyncSet or SelectorSyncSet was first successfully applied to the cluster.
	FirstSuccessTime *string `pulumi:"firstSuccessTime"`
	// LastTransitionTime is the time when this status last changed.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// Name is the name of the SyncSet or SelectorSyncSet.
	Name string `pulumi:"name"`
	// ObservedGeneration is the generation of the SyncSet or SelectorSyncSet that was last observed.
	ObservedGeneration int `pulumi:"observedGeneration"`
	// ResourcesToDelete is the list of resources in the cluster that should be deleted when the SyncSet or SelectorSyncSet is deleted or is no longer matched to the cluster.
	ResourcesToDelete []ClusterSyncStatusSyncSetsResourcesToDelete `pulumi:"resourcesToDelete"`
	// Result is the result of the last attempt to apply the SyncSet or SelectorSyncSet to the cluster.
	Result string `pulumi:"result"`
}

// ClusterSyncStatusSyncSetsInput is an input type that accepts ClusterSyncStatusSyncSetsArgs and ClusterSyncStatusSyncSetsOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSyncSetsInput` via:
//
//          ClusterSyncStatusSyncSetsArgs{...}
type ClusterSyncStatusSyncSetsInput interface {
	pulumi.Input

	ToClusterSyncStatusSyncSetsOutput() ClusterSyncStatusSyncSetsOutput
	ToClusterSyncStatusSyncSetsOutputWithContext(context.Context) ClusterSyncStatusSyncSetsOutput
}

// SyncStatus is the status of applying a specific SyncSet or SelectorSyncSet to the cluster.
type ClusterSyncStatusSyncSetsArgs struct {
	// FailureMessage is a message describing why the SyncSet or SelectorSyncSet could not be applied. This is only set when Result is Failure.
	FailureMessage pulumi.StringPtrInput `pulumi:"failureMessage"`
	// FirstSuccessTime is the time when the SyncSet or SelectorSyncSet was first successfully applied to the cluster.
	FirstSuccessTime pulumi.StringPtrInput `pulumi:"firstSuccessTime"`
	// LastTransitionTime is the time when this status last changed.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// Name is the name of the SyncSet or SelectorSyncSet.
	Name pulumi.StringInput `pulumi:"name"`
	// ObservedGeneration is the generation of the SyncSet or SelectorSyncSet that was last observed.
	ObservedGeneration pulumi.IntInput `pulumi:"observedGeneration"`
	// ResourcesToDelete is the list of resources in the cluster that should be deleted when the SyncSet or SelectorSyncSet is deleted or is no longer matched to the cluster.
	ResourcesToDelete ClusterSyncStatusSyncSetsResourcesToDeleteArrayInput `pulumi:"resourcesToDelete"`
	// Result is the result of the last attempt to apply the SyncSet or SelectorSyncSet to the cluster.
	Result pulumi.StringInput `pulumi:"result"`
}

func (ClusterSyncStatusSyncSetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSyncSets)(nil)).Elem()
}

func (i ClusterSyncStatusSyncSetsArgs) ToClusterSyncStatusSyncSetsOutput() ClusterSyncStatusSyncSetsOutput {
	return i.ToClusterSyncStatusSyncSetsOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSyncSetsArgs) ToClusterSyncStatusSyncSetsOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSyncSetsOutput)
}

// ClusterSyncStatusSyncSetsArrayInput is an input type that accepts ClusterSyncStatusSyncSetsArray and ClusterSyncStatusSyncSetsArrayOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSyncSetsArrayInput` via:
//
//          ClusterSyncStatusSyncSetsArray{ ClusterSyncStatusSyncSetsArgs{...} }
type ClusterSyncStatusSyncSetsArrayInput interface {
	pulumi.Input

	ToClusterSyncStatusSyncSetsArrayOutput() ClusterSyncStatusSyncSetsArrayOutput
	ToClusterSyncStatusSyncSetsArrayOutputWithContext(context.Context) ClusterSyncStatusSyncSetsArrayOutput
}

type ClusterSyncStatusSyncSetsArray []ClusterSyncStatusSyncSetsInput

func (ClusterSyncStatusSyncSetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSyncSets)(nil)).Elem()
}

func (i ClusterSyncStatusSyncSetsArray) ToClusterSyncStatusSyncSetsArrayOutput() ClusterSyncStatusSyncSetsArrayOutput {
	return i.ToClusterSyncStatusSyncSetsArrayOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSyncSetsArray) ToClusterSyncStatusSyncSetsArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSyncSetsArrayOutput)
}

// SyncStatus is the status of applying a specific SyncSet or SelectorSyncSet to the cluster.
type ClusterSyncStatusSyncSetsOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSyncSetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSyncSets)(nil)).Elem()
}

func (o ClusterSyncStatusSyncSetsOutput) ToClusterSyncStatusSyncSetsOutput() ClusterSyncStatusSyncSetsOutput {
	return o
}

func (o ClusterSyncStatusSyncSetsOutput) ToClusterSyncStatusSyncSetsOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsOutput {
	return o
}

// FailureMessage is a message describing why the SyncSet or SelectorSyncSet could not be applied. This is only set when Result is Failure.
func (o ClusterSyncStatusSyncSetsOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// FirstSuccessTime is the time when the SyncSet or SelectorSyncSet was first successfully applied to the cluster.
func (o ClusterSyncStatusSyncSetsOutput) FirstSuccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) *string { return v.FirstSuccessTime }).(pulumi.StringPtrOutput)
}

// LastTransitionTime is the time when this status last changed.
func (o ClusterSyncStatusSyncSetsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// Name is the name of the SyncSet or SelectorSyncSet.
func (o ClusterSyncStatusSyncSetsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) string { return v.Name }).(pulumi.StringOutput)
}

// ObservedGeneration is the generation of the SyncSet or SelectorSyncSet that was last observed.
func (o ClusterSyncStatusSyncSetsOutput) ObservedGeneration() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) int { return v.ObservedGeneration }).(pulumi.IntOutput)
}

// ResourcesToDelete is the list of resources in the cluster that should be deleted when the SyncSet or SelectorSyncSet is deleted or is no longer matched to the cluster.
func (o ClusterSyncStatusSyncSetsOutput) ResourcesToDelete() ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) []ClusterSyncStatusSyncSetsResourcesToDelete {
		return v.ResourcesToDelete
	}).(ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput)
}

// Result is the result of the last attempt to apply the SyncSet or SelectorSyncSet to the cluster.
func (o ClusterSyncStatusSyncSetsOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSets) string { return v.Result }).(pulumi.StringOutput)
}

type ClusterSyncStatusSyncSetsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSyncSetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSyncSets)(nil)).Elem()
}

func (o ClusterSyncStatusSyncSetsArrayOutput) ToClusterSyncStatusSyncSetsArrayOutput() ClusterSyncStatusSyncSetsArrayOutput {
	return o
}

func (o ClusterSyncStatusSyncSetsArrayOutput) ToClusterSyncStatusSyncSetsArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsArrayOutput {
	return o
}

func (o ClusterSyncStatusSyncSetsArrayOutput) Index(i pulumi.IntInput) ClusterSyncStatusSyncSetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSyncStatusSyncSets {
		return vs[0].([]ClusterSyncStatusSyncSets)[vs[1].(int)]
	}).(ClusterSyncStatusSyncSetsOutput)
}

// SyncResourceReference is a reference to a resource that is synced to a cluster via a SyncSet or SelectorSyncSet.
type ClusterSyncStatusSyncSetsResourcesToDelete struct {
	// APIVersion is the Group and Version of the resource.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind is the Kind of the resource.
	Kind *string `pulumi:"kind"`
	// Name is the name of the resource.
	Name string `pulumi:"name"`
	// Namespace is the namespace of the resource.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSyncStatusSyncSetsResourcesToDeleteInput is an input type that accepts ClusterSyncStatusSyncSetsResourcesToDeleteArgs and ClusterSyncStatusSyncSetsResourcesToDeleteOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSyncSetsResourcesToDeleteInput` via:
//
//          ClusterSyncStatusSyncSetsResourcesToDeleteArgs{...}
type ClusterSyncStatusSyncSetsResourcesToDeleteInput interface {
	pulumi.Input

	ToClusterSyncStatusSyncSetsResourcesToDeleteOutput() ClusterSyncStatusSyncSetsResourcesToDeleteOutput
	ToClusterSyncStatusSyncSetsResourcesToDeleteOutputWithContext(context.Context) ClusterSyncStatusSyncSetsResourcesToDeleteOutput
}

// SyncResourceReference is a reference to a resource that is synced to a cluster via a SyncSet or SelectorSyncSet.
type ClusterSyncStatusSyncSetsResourcesToDeleteArgs struct {
	// APIVersion is the Group and Version of the resource.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind is the Kind of the resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name is the name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace is the namespace of the resource.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSyncStatusSyncSetsResourcesToDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSyncSetsResourcesToDelete)(nil)).Elem()
}

func (i ClusterSyncStatusSyncSetsResourcesToDeleteArgs) ToClusterSyncStatusSyncSetsResourcesToDeleteOutput() ClusterSyncStatusSyncSetsResourcesToDeleteOutput {
	return i.ToClusterSyncStatusSyncSetsResourcesToDeleteOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSyncSetsResourcesToDeleteArgs) ToClusterSyncStatusSyncSetsResourcesToDeleteOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsResourcesToDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSyncSetsResourcesToDeleteOutput)
}

// ClusterSyncStatusSyncSetsResourcesToDeleteArrayInput is an input type that accepts ClusterSyncStatusSyncSetsResourcesToDeleteArray and ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput values.
// You can construct a concrete instance of `ClusterSyncStatusSyncSetsResourcesToDeleteArrayInput` via:
//
//          ClusterSyncStatusSyncSetsResourcesToDeleteArray{ ClusterSyncStatusSyncSetsResourcesToDeleteArgs{...} }
type ClusterSyncStatusSyncSetsResourcesToDeleteArrayInput interface {
	pulumi.Input

	ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput() ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput
	ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutputWithContext(context.Context) ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput
}

type ClusterSyncStatusSyncSetsResourcesToDeleteArray []ClusterSyncStatusSyncSetsResourcesToDeleteInput

func (ClusterSyncStatusSyncSetsResourcesToDeleteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSyncSetsResourcesToDelete)(nil)).Elem()
}

func (i ClusterSyncStatusSyncSetsResourcesToDeleteArray) ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput() ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput {
	return i.ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutputWithContext(context.Background())
}

func (i ClusterSyncStatusSyncSetsResourcesToDeleteArray) ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput)
}

// SyncResourceReference is a reference to a resource that is synced to a cluster via a SyncSet or SelectorSyncSet.
type ClusterSyncStatusSyncSetsResourcesToDeleteOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSyncSetsResourcesToDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSyncStatusSyncSetsResourcesToDelete)(nil)).Elem()
}

func (o ClusterSyncStatusSyncSetsResourcesToDeleteOutput) ToClusterSyncStatusSyncSetsResourcesToDeleteOutput() ClusterSyncStatusSyncSetsResourcesToDeleteOutput {
	return o
}

func (o ClusterSyncStatusSyncSetsResourcesToDeleteOutput) ToClusterSyncStatusSyncSetsResourcesToDeleteOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsResourcesToDeleteOutput {
	return o
}

// APIVersion is the Group and Version of the resource.
func (o ClusterSyncStatusSyncSetsResourcesToDeleteOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSetsResourcesToDelete) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is the Kind of the resource.
func (o ClusterSyncStatusSyncSetsResourcesToDeleteOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSetsResourcesToDelete) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name is the name of the resource.
func (o ClusterSyncStatusSyncSetsResourcesToDeleteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSetsResourcesToDelete) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace is the namespace of the resource.
func (o ClusterSyncStatusSyncSetsResourcesToDeleteOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSyncStatusSyncSetsResourcesToDelete) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput struct{ *pulumi.OutputState }

func (ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSyncStatusSyncSetsResourcesToDelete)(nil)).Elem()
}

func (o ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput) ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput() ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput {
	return o
}

func (o ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput) ToClusterSyncStatusSyncSetsResourcesToDeleteArrayOutputWithContext(ctx context.Context) ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput {
	return o
}

func (o ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput) Index(i pulumi.IntInput) ClusterSyncStatusSyncSetsResourcesToDeleteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSyncStatusSyncSetsResourcesToDelete {
		return vs[0].([]ClusterSyncStatusSyncSetsResourcesToDelete)[vs[1].(int)]
	}).(ClusterSyncStatusSyncSetsResourcesToDeleteOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterSyncTypeOutput{})
	pulumi.RegisterOutputType(ClusterSyncLeaseTypeOutput{})
	pulumi.RegisterOutputType(ClusterSyncLeaseMetadataOutput{})
	pulumi.RegisterOutputType(ClusterSyncLeaseSpecOutput{})
	pulumi.RegisterOutputType(ClusterSyncLeaseSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterSyncMetadataOutput{})
	pulumi.RegisterOutputType(ClusterSyncSpecOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusConditionsOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSelectorSyncSetsOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSelectorSyncSetsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSelectorSyncSetsResourcesToDeleteOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSelectorSyncSetsResourcesToDeleteArrayOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSyncSetsOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSyncSetsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSyncSetsResourcesToDeleteOutput{})
	pulumi.RegisterOutputType(ClusterSyncStatusSyncSetsResourcesToDeleteArrayOutput{})
}
