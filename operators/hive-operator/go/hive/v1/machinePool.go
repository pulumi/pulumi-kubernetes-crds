// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// MachinePool is the Schema for the machinepools API
type MachinePool struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// MachinePoolSpec defines the desired state of MachinePool
	Spec MachinePoolSpecPtrOutput `pulumi:"spec"`
	// MachinePoolStatus defines the observed state of MachinePool
	Status MachinePoolStatusPtrOutput `pulumi:"status"`
}

// NewMachinePool registers a new resource with the given unique name, arguments, and options.
func NewMachinePool(ctx *pulumi.Context,
	name string, args *MachinePoolArgs, opts ...pulumi.ResourceOption) (*MachinePool, error) {
	if args == nil {
		args = &MachinePoolArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("hive.openshift.io/v1")
	args.Kind = pulumi.StringPtr("MachinePool")
	var resource MachinePool
	err := ctx.RegisterResource("kubernetes:hive.openshift.io/v1:MachinePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachinePool gets an existing MachinePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachinePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachinePoolState, opts ...pulumi.ResourceOption) (*MachinePool, error) {
	var resource MachinePool
	err := ctx.ReadResource("kubernetes:hive.openshift.io/v1:MachinePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachinePool resources.
type machinePoolState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachinePoolSpec defines the desired state of MachinePool
	Spec *MachinePoolSpec `pulumi:"spec"`
	// MachinePoolStatus defines the observed state of MachinePool
	Status *MachinePoolStatus `pulumi:"status"`
}

type MachinePoolState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// MachinePoolSpec defines the desired state of MachinePool
	Spec MachinePoolSpecPtrInput
	// MachinePoolStatus defines the observed state of MachinePool
	Status MachinePoolStatusPtrInput
}

func (MachinePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*machinePoolState)(nil)).Elem()
}

type machinePoolArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachinePoolSpec defines the desired state of MachinePool
	Spec *MachinePoolSpec `pulumi:"spec"`
	// MachinePoolStatus defines the observed state of MachinePool
	Status *MachinePoolStatus `pulumi:"status"`
}

// The set of arguments for constructing a MachinePool resource.
type MachinePoolArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// MachinePoolSpec defines the desired state of MachinePool
	Spec MachinePoolSpecPtrInput
	// MachinePoolStatus defines the observed state of MachinePool
	Status MachinePoolStatusPtrInput
}

func (MachinePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machinePoolArgs)(nil)).Elem()
}
