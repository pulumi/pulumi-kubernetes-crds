// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ClusterDeployment is the Schema for the clusterdeployments API
type ClusterDeployment struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// ClusterDeploymentSpec defines the desired state of ClusterDeployment
	Spec ClusterDeploymentSpecPtrOutput `pulumi:"spec"`
	// ClusterDeploymentStatus defines the observed state of ClusterDeployment
	Status ClusterDeploymentStatusPtrOutput `pulumi:"status"`
}

// NewClusterDeployment registers a new resource with the given unique name, arguments, and options.
func NewClusterDeployment(ctx *pulumi.Context,
	name string, args *ClusterDeploymentArgs, opts ...pulumi.ResourceOption) (*ClusterDeployment, error) {
	if args == nil {
		args = &ClusterDeploymentArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("hive.openshift.io/v1")
	args.Kind = pulumi.StringPtr("ClusterDeployment")
	var resource ClusterDeployment
	err := ctx.RegisterResource("kubernetes:hive.openshift.io/v1:ClusterDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterDeployment gets an existing ClusterDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterDeploymentState, opts ...pulumi.ResourceOption) (*ClusterDeployment, error) {
	var resource ClusterDeployment
	err := ctx.ReadResource("kubernetes:hive.openshift.io/v1:ClusterDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterDeployment resources.
type clusterDeploymentState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterDeploymentSpec defines the desired state of ClusterDeployment
	Spec *ClusterDeploymentSpec `pulumi:"spec"`
	// ClusterDeploymentStatus defines the observed state of ClusterDeployment
	Status *ClusterDeploymentStatus `pulumi:"status"`
}

type ClusterDeploymentState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ClusterDeploymentSpec defines the desired state of ClusterDeployment
	Spec ClusterDeploymentSpecPtrInput
	// ClusterDeploymentStatus defines the observed state of ClusterDeployment
	Status ClusterDeploymentStatusPtrInput
}

func (ClusterDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterDeploymentState)(nil)).Elem()
}

type clusterDeploymentArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterDeploymentSpec defines the desired state of ClusterDeployment
	Spec *ClusterDeploymentSpec `pulumi:"spec"`
	// ClusterDeploymentStatus defines the observed state of ClusterDeployment
	Status *ClusterDeploymentStatus `pulumi:"status"`
}

// The set of arguments for constructing a ClusterDeployment resource.
type ClusterDeploymentArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ClusterDeploymentSpec defines the desired state of ClusterDeployment
	Spec ClusterDeploymentSpecPtrInput
	// ClusterDeploymentStatus defines the observed state of ClusterDeployment
	Status ClusterDeploymentStatusPtrInput
}

func (ClusterDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterDeploymentArgs)(nil)).Elem()
}
