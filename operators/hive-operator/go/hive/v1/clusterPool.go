// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ClusterPool represents a pool of clusters that should be kept ready to be given out to users. Clusters are removed from the pool once claimed and then automatically replaced with a new one.
type ClusterPool struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// ClusterPoolSpec defines the desired state of the ClusterPool.
	Spec ClusterPoolSpecOutput `pulumi:"spec"`
	// ClusterPoolStatus defines the observed state of ClusterPool
	Status ClusterPoolStatusPtrOutput `pulumi:"status"`
}

// NewClusterPool registers a new resource with the given unique name, arguments, and options.
func NewClusterPool(ctx *pulumi.Context,
	name string, args *ClusterPoolArgs, opts ...pulumi.ResourceOption) (*ClusterPool, error) {
	if args == nil {
		args = &ClusterPoolArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("hive.openshift.io/v1")
	args.Kind = pulumi.StringPtr("ClusterPool")
	var resource ClusterPool
	err := ctx.RegisterResource("kubernetes:hive.openshift.io/v1:ClusterPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterPool gets an existing ClusterPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterPoolState, opts ...pulumi.ResourceOption) (*ClusterPool, error) {
	var resource ClusterPool
	err := ctx.ReadResource("kubernetes:hive.openshift.io/v1:ClusterPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterPool resources.
type clusterPoolState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterPoolSpec defines the desired state of the ClusterPool.
	Spec *ClusterPoolSpec `pulumi:"spec"`
	// ClusterPoolStatus defines the observed state of ClusterPool
	Status *ClusterPoolStatus `pulumi:"status"`
}

type ClusterPoolState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ClusterPoolSpec defines the desired state of the ClusterPool.
	Spec ClusterPoolSpecPtrInput
	// ClusterPoolStatus defines the observed state of ClusterPool
	Status ClusterPoolStatusPtrInput
}

func (ClusterPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPoolState)(nil)).Elem()
}

type clusterPoolArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterPoolSpec defines the desired state of the ClusterPool.
	Spec *ClusterPoolSpec `pulumi:"spec"`
	// ClusterPoolStatus defines the observed state of ClusterPool
	Status *ClusterPoolStatus `pulumi:"status"`
}

// The set of arguments for constructing a ClusterPool resource.
type ClusterPoolArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ClusterPoolSpec defines the desired state of the ClusterPool.
	Spec ClusterPoolSpecPtrInput
	// ClusterPoolStatus defines the observed state of ClusterPool
	Status ClusterPoolStatusPtrInput
}

func (ClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPoolArgs)(nil)).Elem()
}
