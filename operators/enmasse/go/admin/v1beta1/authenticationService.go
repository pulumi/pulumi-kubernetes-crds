// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AuthenticationService describes a service that can be used for authenticating messaging clients for one or more address spaces. This resource is created by the service administrator.
type AuthenticationService struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput               `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput               `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput           `pulumi:"metadata"`
	Spec       AuthenticationServiceSpecPtrOutput   `pulumi:"spec"`
	Status     AuthenticationServiceStatusPtrOutput `pulumi:"status"`
}

// NewAuthenticationService registers a new resource with the given unique name, arguments, and options.
func NewAuthenticationService(ctx *pulumi.Context,
	name string, args *AuthenticationServiceArgs, opts ...pulumi.ResourceOption) (*AuthenticationService, error) {
	if args == nil {
		args = &AuthenticationServiceArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("admin.enmasse.io/v1beta1")
	args.Kind = pulumi.StringPtr("AuthenticationService")
	var resource AuthenticationService
	err := ctx.RegisterResource("kubernetes:admin.enmasse.io/v1beta1:AuthenticationService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthenticationService gets an existing AuthenticationService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthenticationService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthenticationServiceState, opts ...pulumi.ResourceOption) (*AuthenticationService, error) {
	var resource AuthenticationService
	err := ctx.ReadResource("kubernetes:admin.enmasse.io/v1beta1:AuthenticationService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthenticationService resources.
type authenticationServiceState struct {
	ApiVersion *string                      `pulumi:"apiVersion"`
	Kind       *string                      `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta           `pulumi:"metadata"`
	Spec       *AuthenticationServiceSpec   `pulumi:"spec"`
	Status     *AuthenticationServiceStatus `pulumi:"status"`
}

type AuthenticationServiceState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       AuthenticationServiceSpecPtrInput
	Status     AuthenticationServiceStatusPtrInput
}

func (AuthenticationServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationServiceState)(nil)).Elem()
}

type authenticationServiceArgs struct {
	ApiVersion *string                      `pulumi:"apiVersion"`
	Kind       *string                      `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta           `pulumi:"metadata"`
	Spec       *AuthenticationServiceSpec   `pulumi:"spec"`
	Status     *AuthenticationServiceStatus `pulumi:"status"`
}

// The set of arguments for constructing a AuthenticationService resource.
type AuthenticationServiceArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       AuthenticationServiceSpecPtrInput
	Status     AuthenticationServiceStatusPtrInput
}

func (AuthenticationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationServiceArgs)(nil)).Elem()
}
