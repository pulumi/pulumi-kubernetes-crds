// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AddressPlan describes the resource usage and common properties of an address. This resource is created by the service administrator.
type AddressPlan struct {
	pulumi.CustomResourceState

	AddressType       pulumi.StringPtrOutput                  `pulumi:"addressType"`
	ApiVersion        pulumi.StringPtrOutput                  `pulumi:"apiVersion"`
	DisplayName       pulumi.StringPtrOutput                  `pulumi:"displayName"`
	DisplayOrder      pulumi.IntPtrOutput                     `pulumi:"displayOrder"`
	Kind              pulumi.StringPtrOutput                  `pulumi:"kind"`
	LongDescription   pulumi.StringPtrOutput                  `pulumi:"longDescription"`
	Metadata          metav1.ObjectMetaPtrOutput              `pulumi:"metadata"`
	RequiredResources AddressPlanRequiredResourcesArrayOutput `pulumi:"requiredResources"`
	ShortDescription  pulumi.StringPtrOutput                  `pulumi:"shortDescription"`
	Spec              AddressPlanSpecPtrOutput                `pulumi:"spec"`
	Status            pulumi.AnyOutput                        `pulumi:"status"`
	Uuid              pulumi.StringPtrOutput                  `pulumi:"uuid"`
}

// NewAddressPlan registers a new resource with the given unique name, arguments, and options.
func NewAddressPlan(ctx *pulumi.Context,
	name string, args *AddressPlanArgs, opts ...pulumi.ResourceOption) (*AddressPlan, error) {
	if args == nil {
		args = &AddressPlanArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("admin.enmasse.io/v1beta2")
	args.Kind = pulumi.StringPtr("AddressPlan")
	var resource AddressPlan
	err := ctx.RegisterResource("kubernetes:admin.enmasse.io/v1beta2:AddressPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddressPlan gets an existing AddressPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddressPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddressPlanState, opts ...pulumi.ResourceOption) (*AddressPlan, error) {
	var resource AddressPlan
	err := ctx.ReadResource("kubernetes:admin.enmasse.io/v1beta2:AddressPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddressPlan resources.
type addressPlanState struct {
	AddressType       *string                        `pulumi:"addressType"`
	ApiVersion        *string                        `pulumi:"apiVersion"`
	DisplayName       *string                        `pulumi:"displayName"`
	DisplayOrder      *int                           `pulumi:"displayOrder"`
	Kind              *string                        `pulumi:"kind"`
	LongDescription   *string                        `pulumi:"longDescription"`
	Metadata          *metav1.ObjectMeta             `pulumi:"metadata"`
	RequiredResources []AddressPlanRequiredResources `pulumi:"requiredResources"`
	ShortDescription  *string                        `pulumi:"shortDescription"`
	Spec              *AddressPlanSpec               `pulumi:"spec"`
	Status            interface{}                    `pulumi:"status"`
	Uuid              *string                        `pulumi:"uuid"`
}

type AddressPlanState struct {
	AddressType       pulumi.StringPtrInput
	ApiVersion        pulumi.StringPtrInput
	DisplayName       pulumi.StringPtrInput
	DisplayOrder      pulumi.IntPtrInput
	Kind              pulumi.StringPtrInput
	LongDescription   pulumi.StringPtrInput
	Metadata          metav1.ObjectMetaPtrInput
	RequiredResources AddressPlanRequiredResourcesArrayInput
	ShortDescription  pulumi.StringPtrInput
	Spec              AddressPlanSpecPtrInput
	Status            pulumi.Input
	Uuid              pulumi.StringPtrInput
}

func (AddressPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*addressPlanState)(nil)).Elem()
}

type addressPlanArgs struct {
	AddressType       *string                        `pulumi:"addressType"`
	ApiVersion        *string                        `pulumi:"apiVersion"`
	DisplayName       *string                        `pulumi:"displayName"`
	DisplayOrder      *int                           `pulumi:"displayOrder"`
	Kind              *string                        `pulumi:"kind"`
	LongDescription   *string                        `pulumi:"longDescription"`
	Metadata          *metav1.ObjectMeta             `pulumi:"metadata"`
	RequiredResources []AddressPlanRequiredResources `pulumi:"requiredResources"`
	ShortDescription  *string                        `pulumi:"shortDescription"`
	Spec              *AddressPlanSpec               `pulumi:"spec"`
	Status            interface{}                    `pulumi:"status"`
	Uuid              *string                        `pulumi:"uuid"`
}

// The set of arguments for constructing a AddressPlan resource.
type AddressPlanArgs struct {
	AddressType       pulumi.StringPtrInput
	ApiVersion        pulumi.StringPtrInput
	DisplayName       pulumi.StringPtrInput
	DisplayOrder      pulumi.IntPtrInput
	Kind              pulumi.StringPtrInput
	LongDescription   pulumi.StringPtrInput
	Metadata          metav1.ObjectMetaPtrInput
	RequiredResources AddressPlanRequiredResourcesArrayInput
	ShortDescription  pulumi.StringPtrInput
	Spec              AddressPlanSpecPtrInput
	Status            pulumi.Input
	Uuid              pulumi.StringPtrInput
}

func (AddressPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addressPlanArgs)(nil)).Elem()
}
