// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Address describes a destination for sending and receiving messages. An Address has a type, which defines the semantics of sending messages to and receiving messages from that address. This resource is created by messaging tenants.
type AddressType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *AddressSpec       `pulumi:"spec"`
	Status     *AddressStatus     `pulumi:"status"`
}

// AddressTypeInput is an input type that accepts AddressTypeArgs and AddressTypeOutput values.
// You can construct a concrete instance of `AddressTypeInput` via:
//
//          AddressTypeArgs{...}
type AddressTypeInput interface {
	pulumi.Input

	ToAddressTypeOutput() AddressTypeOutput
	ToAddressTypeOutputWithContext(context.Context) AddressTypeOutput
}

// Address describes a destination for sending and receiving messages. An Address has a type, which defines the semantics of sending messages to and receiving messages from that address. This resource is created by messaging tenants.
type AddressTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       AddressSpecPtrInput       `pulumi:"spec"`
	Status     AddressStatusPtrInput     `pulumi:"status"`
}

func (AddressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressType)(nil)).Elem()
}

func (i AddressTypeArgs) ToAddressTypeOutput() AddressTypeOutput {
	return i.ToAddressTypeOutputWithContext(context.Background())
}

func (i AddressTypeArgs) ToAddressTypeOutputWithContext(ctx context.Context) AddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressTypeOutput)
}

// Address describes a destination for sending and receiving messages. An Address has a type, which defines the semantics of sending messages to and receiving messages from that address. This resource is created by messaging tenants.
type AddressTypeOutput struct{ *pulumi.OutputState }

func (AddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressType)(nil)).Elem()
}

func (o AddressTypeOutput) ToAddressTypeOutput() AddressTypeOutput {
	return o
}

func (o AddressTypeOutput) ToAddressTypeOutputWithContext(ctx context.Context) AddressTypeOutput {
	return o
}

func (o AddressTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AddressTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AddressTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AddressType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o AddressTypeOutput) Spec() AddressSpecPtrOutput {
	return o.ApplyT(func(v AddressType) *AddressSpec { return v.Spec }).(AddressSpecPtrOutput)
}

func (o AddressTypeOutput) Status() AddressStatusPtrOutput {
	return o.ApplyT(func(v AddressType) *AddressStatus { return v.Status }).(AddressStatusPtrOutput)
}

// AddressSpace is a group of addresses that can be accessed through a single connection (per protocol). An AddressSpace can support multiple protocols, as defined by the type. This resource is created by messaging tenants.
type AddressSpaceType struct {
	ApiVersion *string             `pulumi:"apiVersion"`
	Kind       *string             `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta  `pulumi:"metadata"`
	Spec       *AddressSpaceSpec   `pulumi:"spec"`
	Status     *AddressSpaceStatus `pulumi:"status"`
}

// AddressSpaceTypeInput is an input type that accepts AddressSpaceTypeArgs and AddressSpaceTypeOutput values.
// You can construct a concrete instance of `AddressSpaceTypeInput` via:
//
//          AddressSpaceTypeArgs{...}
type AddressSpaceTypeInput interface {
	pulumi.Input

	ToAddressSpaceTypeOutput() AddressSpaceTypeOutput
	ToAddressSpaceTypeOutputWithContext(context.Context) AddressSpaceTypeOutput
}

// AddressSpace is a group of addresses that can be accessed through a single connection (per protocol). An AddressSpace can support multiple protocols, as defined by the type. This resource is created by messaging tenants.
type AddressSpaceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput      `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput      `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput  `pulumi:"metadata"`
	Spec       AddressSpaceSpecPtrInput   `pulumi:"spec"`
	Status     AddressSpaceStatusPtrInput `pulumi:"status"`
}

func (AddressSpaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceType)(nil)).Elem()
}

func (i AddressSpaceTypeArgs) ToAddressSpaceTypeOutput() AddressSpaceTypeOutput {
	return i.ToAddressSpaceTypeOutputWithContext(context.Background())
}

func (i AddressSpaceTypeArgs) ToAddressSpaceTypeOutputWithContext(ctx context.Context) AddressSpaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceTypeOutput)
}

// AddressSpace is a group of addresses that can be accessed through a single connection (per protocol). An AddressSpace can support multiple protocols, as defined by the type. This resource is created by messaging tenants.
type AddressSpaceTypeOutput struct{ *pulumi.OutputState }

func (AddressSpaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceType)(nil)).Elem()
}

func (o AddressSpaceTypeOutput) ToAddressSpaceTypeOutput() AddressSpaceTypeOutput {
	return o
}

func (o AddressSpaceTypeOutput) ToAddressSpaceTypeOutputWithContext(ctx context.Context) AddressSpaceTypeOutput {
	return o
}

func (o AddressSpaceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AddressSpaceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o AddressSpaceTypeOutput) Spec() AddressSpaceSpecPtrOutput {
	return o.ApplyT(func(v AddressSpaceType) *AddressSpaceSpec { return v.Spec }).(AddressSpaceSpecPtrOutput)
}

func (o AddressSpaceTypeOutput) Status() AddressSpaceStatusPtrOutput {
	return o.ApplyT(func(v AddressSpaceType) *AddressSpaceStatus { return v.Status }).(AddressSpaceStatusPtrOutput)
}

type AddressSpaceSpec struct {
	// The authentication service to use for authenticating messaging clients.
	AuthenticationService *AddressSpaceSpecAuthenticationService `pulumi:"authenticationService"`
	// External AMQP connections.
	Connectors []AddressSpaceSpecConnectors `pulumi:"connectors"`
	// Endpoints configured for this address space.
	Endpoints []AddressSpaceSpecEndpoints `pulumi:"endpoints"`
	// Define NetworkPolicy for this address space.
	NetworkPolicy *AddressSpaceSpecNetworkPolicy `pulumi:"networkPolicy"`
	// The name of the address space plan to apply.
	Plan string `pulumi:"plan"`
	// The type of address space.
	Type string `pulumi:"type"`
}

// AddressSpaceSpecInput is an input type that accepts AddressSpaceSpecArgs and AddressSpaceSpecOutput values.
// You can construct a concrete instance of `AddressSpaceSpecInput` via:
//
//          AddressSpaceSpecArgs{...}
type AddressSpaceSpecInput interface {
	pulumi.Input

	ToAddressSpaceSpecOutput() AddressSpaceSpecOutput
	ToAddressSpaceSpecOutputWithContext(context.Context) AddressSpaceSpecOutput
}

type AddressSpaceSpecArgs struct {
	// The authentication service to use for authenticating messaging clients.
	AuthenticationService AddressSpaceSpecAuthenticationServicePtrInput `pulumi:"authenticationService"`
	// External AMQP connections.
	Connectors AddressSpaceSpecConnectorsArrayInput `pulumi:"connectors"`
	// Endpoints configured for this address space.
	Endpoints AddressSpaceSpecEndpointsArrayInput `pulumi:"endpoints"`
	// Define NetworkPolicy for this address space.
	NetworkPolicy AddressSpaceSpecNetworkPolicyPtrInput `pulumi:"networkPolicy"`
	// The name of the address space plan to apply.
	Plan pulumi.StringInput `pulumi:"plan"`
	// The type of address space.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AddressSpaceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpec)(nil)).Elem()
}

func (i AddressSpaceSpecArgs) ToAddressSpaceSpecOutput() AddressSpaceSpecOutput {
	return i.ToAddressSpaceSpecOutputWithContext(context.Background())
}

func (i AddressSpaceSpecArgs) ToAddressSpaceSpecOutputWithContext(ctx context.Context) AddressSpaceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecOutput)
}

func (i AddressSpaceSpecArgs) ToAddressSpaceSpecPtrOutput() AddressSpaceSpecPtrOutput {
	return i.ToAddressSpaceSpecPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecArgs) ToAddressSpaceSpecPtrOutputWithContext(ctx context.Context) AddressSpaceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecOutput).ToAddressSpaceSpecPtrOutputWithContext(ctx)
}

// AddressSpaceSpecPtrInput is an input type that accepts AddressSpaceSpecArgs, AddressSpaceSpecPtr and AddressSpaceSpecPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecPtrInput` via:
//
//          AddressSpaceSpecArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecPtrOutput() AddressSpaceSpecPtrOutput
	ToAddressSpaceSpecPtrOutputWithContext(context.Context) AddressSpaceSpecPtrOutput
}

type addressSpaceSpecPtrType AddressSpaceSpecArgs

func AddressSpaceSpecPtr(v *AddressSpaceSpecArgs) AddressSpaceSpecPtrInput {
	return (*addressSpaceSpecPtrType)(v)
}

func (*addressSpaceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpec)(nil)).Elem()
}

func (i *addressSpaceSpecPtrType) ToAddressSpaceSpecPtrOutput() AddressSpaceSpecPtrOutput {
	return i.ToAddressSpaceSpecPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecPtrType) ToAddressSpaceSpecPtrOutputWithContext(ctx context.Context) AddressSpaceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecPtrOutput)
}

type AddressSpaceSpecOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpec)(nil)).Elem()
}

func (o AddressSpaceSpecOutput) ToAddressSpaceSpecOutput() AddressSpaceSpecOutput {
	return o
}

func (o AddressSpaceSpecOutput) ToAddressSpaceSpecOutputWithContext(ctx context.Context) AddressSpaceSpecOutput {
	return o
}

func (o AddressSpaceSpecOutput) ToAddressSpaceSpecPtrOutput() AddressSpaceSpecPtrOutput {
	return o.ToAddressSpaceSpecPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecOutput) ToAddressSpaceSpecPtrOutputWithContext(ctx context.Context) AddressSpaceSpecPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpec) *AddressSpaceSpec {
		return &v
	}).(AddressSpaceSpecPtrOutput)
}

// The authentication service to use for authenticating messaging clients.
func (o AddressSpaceSpecOutput) AuthenticationService() AddressSpaceSpecAuthenticationServicePtrOutput {
	return o.ApplyT(func(v AddressSpaceSpec) *AddressSpaceSpecAuthenticationService { return v.AuthenticationService }).(AddressSpaceSpecAuthenticationServicePtrOutput)
}

// External AMQP connections.
func (o AddressSpaceSpecOutput) Connectors() AddressSpaceSpecConnectorsArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpec) []AddressSpaceSpecConnectors { return v.Connectors }).(AddressSpaceSpecConnectorsArrayOutput)
}

// Endpoints configured for this address space.
func (o AddressSpaceSpecOutput) Endpoints() AddressSpaceSpecEndpointsArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpec) []AddressSpaceSpecEndpoints { return v.Endpoints }).(AddressSpaceSpecEndpointsArrayOutput)
}

// Define NetworkPolicy for this address space.
func (o AddressSpaceSpecOutput) NetworkPolicy() AddressSpaceSpecNetworkPolicyPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpec) *AddressSpaceSpecNetworkPolicy { return v.NetworkPolicy }).(AddressSpaceSpecNetworkPolicyPtrOutput)
}

// The name of the address space plan to apply.
func (o AddressSpaceSpecOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceSpec) string { return v.Plan }).(pulumi.StringOutput)
}

// The type of address space.
func (o AddressSpaceSpecOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceSpec) string { return v.Type }).(pulumi.StringOutput)
}

type AddressSpaceSpecPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpec)(nil)).Elem()
}

func (o AddressSpaceSpecPtrOutput) ToAddressSpaceSpecPtrOutput() AddressSpaceSpecPtrOutput {
	return o
}

func (o AddressSpaceSpecPtrOutput) ToAddressSpaceSpecPtrOutputWithContext(ctx context.Context) AddressSpaceSpecPtrOutput {
	return o
}

func (o AddressSpaceSpecPtrOutput) Elem() AddressSpaceSpecOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) AddressSpaceSpec { return *v }).(AddressSpaceSpecOutput)
}

// The authentication service to use for authenticating messaging clients.
func (o AddressSpaceSpecPtrOutput) AuthenticationService() AddressSpaceSpecAuthenticationServicePtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) *AddressSpaceSpecAuthenticationService {
		if v == nil {
			return nil
		}
		return v.AuthenticationService
	}).(AddressSpaceSpecAuthenticationServicePtrOutput)
}

// External AMQP connections.
func (o AddressSpaceSpecPtrOutput) Connectors() AddressSpaceSpecConnectorsArrayOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) []AddressSpaceSpecConnectors {
		if v == nil {
			return nil
		}
		return v.Connectors
	}).(AddressSpaceSpecConnectorsArrayOutput)
}

// Endpoints configured for this address space.
func (o AddressSpaceSpecPtrOutput) Endpoints() AddressSpaceSpecEndpointsArrayOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) []AddressSpaceSpecEndpoints {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(AddressSpaceSpecEndpointsArrayOutput)
}

// Define NetworkPolicy for this address space.
func (o AddressSpaceSpecPtrOutput) NetworkPolicy() AddressSpaceSpecNetworkPolicyPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) *AddressSpaceSpecNetworkPolicy {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(AddressSpaceSpecNetworkPolicyPtrOutput)
}

// The name of the address space plan to apply.
func (o AddressSpaceSpecPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

// The type of address space.
func (o AddressSpaceSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The authentication service to use for authenticating messaging clients.
type AddressSpaceSpecAuthenticationService struct {
	// The name of the authentication service.
	Name      *string                                         `pulumi:"name"`
	Overrides *AddressSpaceSpecAuthenticationServiceOverrides `pulumi:"overrides"`
	Type      *string                                         `pulumi:"type"`
}

// AddressSpaceSpecAuthenticationServiceInput is an input type that accepts AddressSpaceSpecAuthenticationServiceArgs and AddressSpaceSpecAuthenticationServiceOutput values.
// You can construct a concrete instance of `AddressSpaceSpecAuthenticationServiceInput` via:
//
//          AddressSpaceSpecAuthenticationServiceArgs{...}
type AddressSpaceSpecAuthenticationServiceInput interface {
	pulumi.Input

	ToAddressSpaceSpecAuthenticationServiceOutput() AddressSpaceSpecAuthenticationServiceOutput
	ToAddressSpaceSpecAuthenticationServiceOutputWithContext(context.Context) AddressSpaceSpecAuthenticationServiceOutput
}

// The authentication service to use for authenticating messaging clients.
type AddressSpaceSpecAuthenticationServiceArgs struct {
	// The name of the authentication service.
	Name      pulumi.StringPtrInput                                  `pulumi:"name"`
	Overrides AddressSpaceSpecAuthenticationServiceOverridesPtrInput `pulumi:"overrides"`
	Type      pulumi.StringPtrInput                                  `pulumi:"type"`
}

func (AddressSpaceSpecAuthenticationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecAuthenticationService)(nil)).Elem()
}

func (i AddressSpaceSpecAuthenticationServiceArgs) ToAddressSpaceSpecAuthenticationServiceOutput() AddressSpaceSpecAuthenticationServiceOutput {
	return i.ToAddressSpaceSpecAuthenticationServiceOutputWithContext(context.Background())
}

func (i AddressSpaceSpecAuthenticationServiceArgs) ToAddressSpaceSpecAuthenticationServiceOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecAuthenticationServiceOutput)
}

func (i AddressSpaceSpecAuthenticationServiceArgs) ToAddressSpaceSpecAuthenticationServicePtrOutput() AddressSpaceSpecAuthenticationServicePtrOutput {
	return i.ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecAuthenticationServiceArgs) ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecAuthenticationServiceOutput).ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(ctx)
}

// AddressSpaceSpecAuthenticationServicePtrInput is an input type that accepts AddressSpaceSpecAuthenticationServiceArgs, AddressSpaceSpecAuthenticationServicePtr and AddressSpaceSpecAuthenticationServicePtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecAuthenticationServicePtrInput` via:
//
//          AddressSpaceSpecAuthenticationServiceArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecAuthenticationServicePtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecAuthenticationServicePtrOutput() AddressSpaceSpecAuthenticationServicePtrOutput
	ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(context.Context) AddressSpaceSpecAuthenticationServicePtrOutput
}

type addressSpaceSpecAuthenticationServicePtrType AddressSpaceSpecAuthenticationServiceArgs

func AddressSpaceSpecAuthenticationServicePtr(v *AddressSpaceSpecAuthenticationServiceArgs) AddressSpaceSpecAuthenticationServicePtrInput {
	return (*addressSpaceSpecAuthenticationServicePtrType)(v)
}

func (*addressSpaceSpecAuthenticationServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecAuthenticationService)(nil)).Elem()
}

func (i *addressSpaceSpecAuthenticationServicePtrType) ToAddressSpaceSpecAuthenticationServicePtrOutput() AddressSpaceSpecAuthenticationServicePtrOutput {
	return i.ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecAuthenticationServicePtrType) ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecAuthenticationServicePtrOutput)
}

// The authentication service to use for authenticating messaging clients.
type AddressSpaceSpecAuthenticationServiceOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecAuthenticationServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecAuthenticationService)(nil)).Elem()
}

func (o AddressSpaceSpecAuthenticationServiceOutput) ToAddressSpaceSpecAuthenticationServiceOutput() AddressSpaceSpecAuthenticationServiceOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServiceOutput) ToAddressSpaceSpecAuthenticationServiceOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServiceOutput) ToAddressSpaceSpecAuthenticationServicePtrOutput() AddressSpaceSpecAuthenticationServicePtrOutput {
	return o.ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecAuthenticationServiceOutput) ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServicePtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationService) *AddressSpaceSpecAuthenticationService {
		return &v
	}).(AddressSpaceSpecAuthenticationServicePtrOutput)
}

// The name of the authentication service.
func (o AddressSpaceSpecAuthenticationServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOutput) Overrides() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationService) *AddressSpaceSpecAuthenticationServiceOverrides {
		return v.Overrides
	}).(AddressSpaceSpecAuthenticationServiceOverridesPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecAuthenticationServicePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecAuthenticationServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecAuthenticationService)(nil)).Elem()
}

func (o AddressSpaceSpecAuthenticationServicePtrOutput) ToAddressSpaceSpecAuthenticationServicePtrOutput() AddressSpaceSpecAuthenticationServicePtrOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServicePtrOutput) ToAddressSpaceSpecAuthenticationServicePtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServicePtrOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServicePtrOutput) Elem() AddressSpaceSpecAuthenticationServiceOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationService) AddressSpaceSpecAuthenticationService { return *v }).(AddressSpaceSpecAuthenticationServiceOutput)
}

// The name of the authentication service.
func (o AddressSpaceSpecAuthenticationServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationService) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServicePtrOutput) Overrides() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationService) *AddressSpaceSpecAuthenticationServiceOverrides {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(AddressSpaceSpecAuthenticationServiceOverridesPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServicePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationService) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecAuthenticationServiceOverrides struct {
	Host  *string `pulumi:"host"`
	Port  *int    `pulumi:"port"`
	Realm *string `pulumi:"realm"`
}

// AddressSpaceSpecAuthenticationServiceOverridesInput is an input type that accepts AddressSpaceSpecAuthenticationServiceOverridesArgs and AddressSpaceSpecAuthenticationServiceOverridesOutput values.
// You can construct a concrete instance of `AddressSpaceSpecAuthenticationServiceOverridesInput` via:
//
//          AddressSpaceSpecAuthenticationServiceOverridesArgs{...}
type AddressSpaceSpecAuthenticationServiceOverridesInput interface {
	pulumi.Input

	ToAddressSpaceSpecAuthenticationServiceOverridesOutput() AddressSpaceSpecAuthenticationServiceOverridesOutput
	ToAddressSpaceSpecAuthenticationServiceOverridesOutputWithContext(context.Context) AddressSpaceSpecAuthenticationServiceOverridesOutput
}

type AddressSpaceSpecAuthenticationServiceOverridesArgs struct {
	Host  pulumi.StringPtrInput `pulumi:"host"`
	Port  pulumi.IntPtrInput    `pulumi:"port"`
	Realm pulumi.StringPtrInput `pulumi:"realm"`
}

func (AddressSpaceSpecAuthenticationServiceOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecAuthenticationServiceOverrides)(nil)).Elem()
}

func (i AddressSpaceSpecAuthenticationServiceOverridesArgs) ToAddressSpaceSpecAuthenticationServiceOverridesOutput() AddressSpaceSpecAuthenticationServiceOverridesOutput {
	return i.ToAddressSpaceSpecAuthenticationServiceOverridesOutputWithContext(context.Background())
}

func (i AddressSpaceSpecAuthenticationServiceOverridesArgs) ToAddressSpaceSpecAuthenticationServiceOverridesOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecAuthenticationServiceOverridesOutput)
}

func (i AddressSpaceSpecAuthenticationServiceOverridesArgs) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutput() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return i.ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecAuthenticationServiceOverridesArgs) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecAuthenticationServiceOverridesOutput).ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(ctx)
}

// AddressSpaceSpecAuthenticationServiceOverridesPtrInput is an input type that accepts AddressSpaceSpecAuthenticationServiceOverridesArgs, AddressSpaceSpecAuthenticationServiceOverridesPtr and AddressSpaceSpecAuthenticationServiceOverridesPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecAuthenticationServiceOverridesPtrInput` via:
//
//          AddressSpaceSpecAuthenticationServiceOverridesArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecAuthenticationServiceOverridesPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutput() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput
	ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(context.Context) AddressSpaceSpecAuthenticationServiceOverridesPtrOutput
}

type addressSpaceSpecAuthenticationServiceOverridesPtrType AddressSpaceSpecAuthenticationServiceOverridesArgs

func AddressSpaceSpecAuthenticationServiceOverridesPtr(v *AddressSpaceSpecAuthenticationServiceOverridesArgs) AddressSpaceSpecAuthenticationServiceOverridesPtrInput {
	return (*addressSpaceSpecAuthenticationServiceOverridesPtrType)(v)
}

func (*addressSpaceSpecAuthenticationServiceOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecAuthenticationServiceOverrides)(nil)).Elem()
}

func (i *addressSpaceSpecAuthenticationServiceOverridesPtrType) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutput() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return i.ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecAuthenticationServiceOverridesPtrType) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecAuthenticationServiceOverridesPtrOutput)
}

type AddressSpaceSpecAuthenticationServiceOverridesOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecAuthenticationServiceOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecAuthenticationServiceOverrides)(nil)).Elem()
}

func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) ToAddressSpaceSpecAuthenticationServiceOverridesOutput() AddressSpaceSpecAuthenticationServiceOverridesOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) ToAddressSpaceSpecAuthenticationServiceOverridesOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOverridesOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutput() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return o.ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationServiceOverrides) *AddressSpaceSpecAuthenticationServiceOverrides {
		return &v
	}).(AddressSpaceSpecAuthenticationServiceOverridesPtrOutput)
}
func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationServiceOverrides) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationServiceOverrides) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOverridesOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecAuthenticationServiceOverrides) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecAuthenticationServiceOverridesPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecAuthenticationServiceOverrides)(nil)).Elem()
}

func (o AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutput() AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) ToAddressSpaceSpecAuthenticationServiceOverridesPtrOutputWithContext(ctx context.Context) AddressSpaceSpecAuthenticationServiceOverridesPtrOutput {
	return o
}

func (o AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) Elem() AddressSpaceSpecAuthenticationServiceOverridesOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationServiceOverrides) AddressSpaceSpecAuthenticationServiceOverrides {
		return *v
	}).(AddressSpaceSpecAuthenticationServiceOverridesOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationServiceOverrides) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationServiceOverrides) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o AddressSpaceSpecAuthenticationServiceOverridesPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecAuthenticationServiceOverrides) *string {
		if v == nil {
			return nil
		}
		return v.Realm
	}).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecConnectors struct {
	// Addresses to make be accessible via this address space.
	Addresses []AddressSpaceSpecConnectorsAddresses `pulumi:"addresses"`
	// Credentials used when connecting to endpoints.
	Credentials *AddressSpaceSpecConnectorsCredentials `pulumi:"credentials"`
	// Endpoints to connect to. First entry is used as primary, additional entries are considered failovers.
	EndpointHosts []AddressSpaceSpecConnectorsEndpointHosts `pulumi:"endpointHosts"`
	// Idle timeout of AMQP connection (seconds). 0 disables the idle timeout.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// Max frame size of AMQP connection.
	MaxFrameSize *int `pulumi:"maxFrameSize"`
	// Connector name. Used to uniquely identify a connector.
	Name string `pulumi:"name"`
	// Role of connector. Defaults to 'route-container'.
	Role *string `pulumi:"role"`
	// TLS configuration for the connector. If not specified, TLS will not be used.
	Tls *AddressSpaceSpecConnectorsTls `pulumi:"tls"`
}

// AddressSpaceSpecConnectorsInput is an input type that accepts AddressSpaceSpecConnectorsArgs and AddressSpaceSpecConnectorsOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsInput` via:
//
//          AddressSpaceSpecConnectorsArgs{...}
type AddressSpaceSpecConnectorsInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsOutput() AddressSpaceSpecConnectorsOutput
	ToAddressSpaceSpecConnectorsOutputWithContext(context.Context) AddressSpaceSpecConnectorsOutput
}

type AddressSpaceSpecConnectorsArgs struct {
	// Addresses to make be accessible via this address space.
	Addresses AddressSpaceSpecConnectorsAddressesArrayInput `pulumi:"addresses"`
	// Credentials used when connecting to endpoints.
	Credentials AddressSpaceSpecConnectorsCredentialsPtrInput `pulumi:"credentials"`
	// Endpoints to connect to. First entry is used as primary, additional entries are considered failovers.
	EndpointHosts AddressSpaceSpecConnectorsEndpointHostsArrayInput `pulumi:"endpointHosts"`
	// Idle timeout of AMQP connection (seconds). 0 disables the idle timeout.
	IdleTimeout pulumi.IntPtrInput `pulumi:"idleTimeout"`
	// Max frame size of AMQP connection.
	MaxFrameSize pulumi.IntPtrInput `pulumi:"maxFrameSize"`
	// Connector name. Used to uniquely identify a connector.
	Name pulumi.StringInput `pulumi:"name"`
	// Role of connector. Defaults to 'route-container'.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// TLS configuration for the connector. If not specified, TLS will not be used.
	Tls AddressSpaceSpecConnectorsTlsPtrInput `pulumi:"tls"`
}

func (AddressSpaceSpecConnectorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectors)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsArgs) ToAddressSpaceSpecConnectorsOutput() AddressSpaceSpecConnectorsOutput {
	return i.ToAddressSpaceSpecConnectorsOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsArgs) ToAddressSpaceSpecConnectorsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsOutput)
}

// AddressSpaceSpecConnectorsArrayInput is an input type that accepts AddressSpaceSpecConnectorsArray and AddressSpaceSpecConnectorsArrayOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsArrayInput` via:
//
//          AddressSpaceSpecConnectorsArray{ AddressSpaceSpecConnectorsArgs{...} }
type AddressSpaceSpecConnectorsArrayInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsArrayOutput() AddressSpaceSpecConnectorsArrayOutput
	ToAddressSpaceSpecConnectorsArrayOutputWithContext(context.Context) AddressSpaceSpecConnectorsArrayOutput
}

type AddressSpaceSpecConnectorsArray []AddressSpaceSpecConnectorsInput

func (AddressSpaceSpecConnectorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecConnectors)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsArray) ToAddressSpaceSpecConnectorsArrayOutput() AddressSpaceSpecConnectorsArrayOutput {
	return i.ToAddressSpaceSpecConnectorsArrayOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsArray) ToAddressSpaceSpecConnectorsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsArrayOutput)
}

type AddressSpaceSpecConnectorsOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectors)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsOutput) ToAddressSpaceSpecConnectorsOutput() AddressSpaceSpecConnectorsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsOutput) ToAddressSpaceSpecConnectorsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsOutput {
	return o
}

// Addresses to make be accessible via this address space.
func (o AddressSpaceSpecConnectorsOutput) Addresses() AddressSpaceSpecConnectorsAddressesArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) []AddressSpaceSpecConnectorsAddresses { return v.Addresses }).(AddressSpaceSpecConnectorsAddressesArrayOutput)
}

// Credentials used when connecting to endpoints.
func (o AddressSpaceSpecConnectorsOutput) Credentials() AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) *AddressSpaceSpecConnectorsCredentials { return v.Credentials }).(AddressSpaceSpecConnectorsCredentialsPtrOutput)
}

// Endpoints to connect to. First entry is used as primary, additional entries are considered failovers.
func (o AddressSpaceSpecConnectorsOutput) EndpointHosts() AddressSpaceSpecConnectorsEndpointHostsArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) []AddressSpaceSpecConnectorsEndpointHosts { return v.EndpointHosts }).(AddressSpaceSpecConnectorsEndpointHostsArrayOutput)
}

// Idle timeout of AMQP connection (seconds). 0 disables the idle timeout.
func (o AddressSpaceSpecConnectorsOutput) IdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) *int { return v.IdleTimeout }).(pulumi.IntPtrOutput)
}

// Max frame size of AMQP connection.
func (o AddressSpaceSpecConnectorsOutput) MaxFrameSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) *int { return v.MaxFrameSize }).(pulumi.IntPtrOutput)
}

// Connector name. Used to uniquely identify a connector.
func (o AddressSpaceSpecConnectorsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) string { return v.Name }).(pulumi.StringOutput)
}

// Role of connector. Defaults to 'route-container'.
func (o AddressSpaceSpecConnectorsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// TLS configuration for the connector. If not specified, TLS will not be used.
func (o AddressSpaceSpecConnectorsOutput) Tls() AddressSpaceSpecConnectorsTlsPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectors) *AddressSpaceSpecConnectorsTls { return v.Tls }).(AddressSpaceSpecConnectorsTlsPtrOutput)
}

type AddressSpaceSpecConnectorsArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecConnectors)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsArrayOutput) ToAddressSpaceSpecConnectorsArrayOutput() AddressSpaceSpecConnectorsArrayOutput {
	return o
}

func (o AddressSpaceSpecConnectorsArrayOutput) ToAddressSpaceSpecConnectorsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsArrayOutput {
	return o
}

func (o AddressSpaceSpecConnectorsArrayOutput) Index(i pulumi.IntInput) AddressSpaceSpecConnectorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceSpecConnectors {
		return vs[0].([]AddressSpaceSpecConnectors)[vs[1].(int)]
	}).(AddressSpaceSpecConnectorsOutput)
}

type AddressSpaceSpecConnectorsAddresses struct {
	// Identifier of address pattern. Used to uniquely identify a pattern.
	Name string `pulumi:"name"`
	// Pattern used to match addresses. The pattern will be prefixed by the connector name and a forward slash ('myconnector/'). A pattern consists of one or more tokens separated by a forward slash /. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #. The * token matches any single token. The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence.
	Pattern string `pulumi:"pattern"`
}

// AddressSpaceSpecConnectorsAddressesInput is an input type that accepts AddressSpaceSpecConnectorsAddressesArgs and AddressSpaceSpecConnectorsAddressesOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsAddressesInput` via:
//
//          AddressSpaceSpecConnectorsAddressesArgs{...}
type AddressSpaceSpecConnectorsAddressesInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsAddressesOutput() AddressSpaceSpecConnectorsAddressesOutput
	ToAddressSpaceSpecConnectorsAddressesOutputWithContext(context.Context) AddressSpaceSpecConnectorsAddressesOutput
}

type AddressSpaceSpecConnectorsAddressesArgs struct {
	// Identifier of address pattern. Used to uniquely identify a pattern.
	Name pulumi.StringInput `pulumi:"name"`
	// Pattern used to match addresses. The pattern will be prefixed by the connector name and a forward slash ('myconnector/'). A pattern consists of one or more tokens separated by a forward slash /. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #. The * token matches any single token. The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence.
	Pattern pulumi.StringInput `pulumi:"pattern"`
}

func (AddressSpaceSpecConnectorsAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsAddresses)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsAddressesArgs) ToAddressSpaceSpecConnectorsAddressesOutput() AddressSpaceSpecConnectorsAddressesOutput {
	return i.ToAddressSpaceSpecConnectorsAddressesOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsAddressesArgs) ToAddressSpaceSpecConnectorsAddressesOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsAddressesOutput)
}

// AddressSpaceSpecConnectorsAddressesArrayInput is an input type that accepts AddressSpaceSpecConnectorsAddressesArray and AddressSpaceSpecConnectorsAddressesArrayOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsAddressesArrayInput` via:
//
//          AddressSpaceSpecConnectorsAddressesArray{ AddressSpaceSpecConnectorsAddressesArgs{...} }
type AddressSpaceSpecConnectorsAddressesArrayInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsAddressesArrayOutput() AddressSpaceSpecConnectorsAddressesArrayOutput
	ToAddressSpaceSpecConnectorsAddressesArrayOutputWithContext(context.Context) AddressSpaceSpecConnectorsAddressesArrayOutput
}

type AddressSpaceSpecConnectorsAddressesArray []AddressSpaceSpecConnectorsAddressesInput

func (AddressSpaceSpecConnectorsAddressesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecConnectorsAddresses)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsAddressesArray) ToAddressSpaceSpecConnectorsAddressesArrayOutput() AddressSpaceSpecConnectorsAddressesArrayOutput {
	return i.ToAddressSpaceSpecConnectorsAddressesArrayOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsAddressesArray) ToAddressSpaceSpecConnectorsAddressesArrayOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsAddressesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsAddressesArrayOutput)
}

type AddressSpaceSpecConnectorsAddressesOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsAddresses)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsAddressesOutput) ToAddressSpaceSpecConnectorsAddressesOutput() AddressSpaceSpecConnectorsAddressesOutput {
	return o
}

func (o AddressSpaceSpecConnectorsAddressesOutput) ToAddressSpaceSpecConnectorsAddressesOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsAddressesOutput {
	return o
}

// Identifier of address pattern. Used to uniquely identify a pattern.
func (o AddressSpaceSpecConnectorsAddressesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsAddresses) string { return v.Name }).(pulumi.StringOutput)
}

// Pattern used to match addresses. The pattern will be prefixed by the connector name and a forward slash ('myconnector/'). A pattern consists of one or more tokens separated by a forward slash /. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #. The * token matches any single token. The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence.
func (o AddressSpaceSpecConnectorsAddressesOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsAddresses) string { return v.Pattern }).(pulumi.StringOutput)
}

type AddressSpaceSpecConnectorsAddressesArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsAddressesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecConnectorsAddresses)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsAddressesArrayOutput) ToAddressSpaceSpecConnectorsAddressesArrayOutput() AddressSpaceSpecConnectorsAddressesArrayOutput {
	return o
}

func (o AddressSpaceSpecConnectorsAddressesArrayOutput) ToAddressSpaceSpecConnectorsAddressesArrayOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsAddressesArrayOutput {
	return o
}

func (o AddressSpaceSpecConnectorsAddressesArrayOutput) Index(i pulumi.IntInput) AddressSpaceSpecConnectorsAddressesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceSpecConnectorsAddresses {
		return vs[0].([]AddressSpaceSpecConnectorsAddresses)[vs[1].(int)]
	}).(AddressSpaceSpecConnectorsAddressesOutput)
}

// Credentials used when connecting to endpoints.
type AddressSpaceSpecConnectorsCredentials struct {
	// Password to use for connector.
	Password AddressSpaceSpecConnectorsCredentialsPassword `pulumi:"password"`
	// Username to use for connector.
	Username AddressSpaceSpecConnectorsCredentialsUsername `pulumi:"username"`
}

// AddressSpaceSpecConnectorsCredentialsInput is an input type that accepts AddressSpaceSpecConnectorsCredentialsArgs and AddressSpaceSpecConnectorsCredentialsOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsCredentialsInput` via:
//
//          AddressSpaceSpecConnectorsCredentialsArgs{...}
type AddressSpaceSpecConnectorsCredentialsInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsCredentialsOutput() AddressSpaceSpecConnectorsCredentialsOutput
	ToAddressSpaceSpecConnectorsCredentialsOutputWithContext(context.Context) AddressSpaceSpecConnectorsCredentialsOutput
}

// Credentials used when connecting to endpoints.
type AddressSpaceSpecConnectorsCredentialsArgs struct {
	// Password to use for connector.
	Password AddressSpaceSpecConnectorsCredentialsPasswordInput `pulumi:"password"`
	// Username to use for connector.
	Username AddressSpaceSpecConnectorsCredentialsUsernameInput `pulumi:"username"`
}

func (AddressSpaceSpecConnectorsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsCredentials)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsCredentialsArgs) ToAddressSpaceSpecConnectorsCredentialsOutput() AddressSpaceSpecConnectorsCredentialsOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsCredentialsArgs) ToAddressSpaceSpecConnectorsCredentialsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsOutput)
}

func (i AddressSpaceSpecConnectorsCredentialsArgs) ToAddressSpaceSpecConnectorsCredentialsPtrOutput() AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsCredentialsArgs) ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsOutput).ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsCredentialsPtrInput is an input type that accepts AddressSpaceSpecConnectorsCredentialsArgs, AddressSpaceSpecConnectorsCredentialsPtr and AddressSpaceSpecConnectorsCredentialsPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsCredentialsPtrInput` via:
//
//          AddressSpaceSpecConnectorsCredentialsArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsCredentialsPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsCredentialsPtrOutput() AddressSpaceSpecConnectorsCredentialsPtrOutput
	ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsCredentialsPtrOutput
}

type addressSpaceSpecConnectorsCredentialsPtrType AddressSpaceSpecConnectorsCredentialsArgs

func AddressSpaceSpecConnectorsCredentialsPtr(v *AddressSpaceSpecConnectorsCredentialsArgs) AddressSpaceSpecConnectorsCredentialsPtrInput {
	return (*addressSpaceSpecConnectorsCredentialsPtrType)(v)
}

func (*addressSpaceSpecConnectorsCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsCredentials)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsCredentialsPtrType) ToAddressSpaceSpecConnectorsCredentialsPtrOutput() AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsCredentialsPtrType) ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsPtrOutput)
}

// Credentials used when connecting to endpoints.
type AddressSpaceSpecConnectorsCredentialsOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsCredentials)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsCredentialsOutput) ToAddressSpaceSpecConnectorsCredentialsOutput() AddressSpaceSpecConnectorsCredentialsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsOutput) ToAddressSpaceSpecConnectorsCredentialsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsOutput) ToAddressSpaceSpecConnectorsCredentialsPtrOutput() AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return o.ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsCredentialsOutput) ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsCredentials) *AddressSpaceSpecConnectorsCredentials {
		return &v
	}).(AddressSpaceSpecConnectorsCredentialsPtrOutput)
}

// Password to use for connector.
func (o AddressSpaceSpecConnectorsCredentialsOutput) Password() AddressSpaceSpecConnectorsCredentialsPasswordOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsCredentials) AddressSpaceSpecConnectorsCredentialsPassword {
		return v.Password
	}).(AddressSpaceSpecConnectorsCredentialsPasswordOutput)
}

// Username to use for connector.
func (o AddressSpaceSpecConnectorsCredentialsOutput) Username() AddressSpaceSpecConnectorsCredentialsUsernameOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsCredentials) AddressSpaceSpecConnectorsCredentialsUsername {
		return v.Username
	}).(AddressSpaceSpecConnectorsCredentialsUsernameOutput)
}

type AddressSpaceSpecConnectorsCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsCredentials)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsCredentialsPtrOutput) ToAddressSpaceSpecConnectorsCredentialsPtrOutput() AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsPtrOutput) ToAddressSpaceSpecConnectorsCredentialsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsPtrOutput) Elem() AddressSpaceSpecConnectorsCredentialsOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsCredentials) AddressSpaceSpecConnectorsCredentials { return *v }).(AddressSpaceSpecConnectorsCredentialsOutput)
}

// Password to use for connector.
func (o AddressSpaceSpecConnectorsCredentialsPtrOutput) Password() AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsCredentials) *AddressSpaceSpecConnectorsCredentialsPassword {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput)
}

// Username to use for connector.
func (o AddressSpaceSpecConnectorsCredentialsPtrOutput) Username() AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsCredentials) *AddressSpaceSpecConnectorsCredentialsUsername {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput)
}

type AddressSpaceSpecConnectorsCredentialsPassword struct {
}

// AddressSpaceSpecConnectorsCredentialsPasswordInput is an input type that accepts AddressSpaceSpecConnectorsCredentialsPasswordArgs and AddressSpaceSpecConnectorsCredentialsPasswordOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsCredentialsPasswordInput` via:
//
//          AddressSpaceSpecConnectorsCredentialsPasswordArgs{...}
type AddressSpaceSpecConnectorsCredentialsPasswordInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsCredentialsPasswordOutput() AddressSpaceSpecConnectorsCredentialsPasswordOutput
	ToAddressSpaceSpecConnectorsCredentialsPasswordOutputWithContext(context.Context) AddressSpaceSpecConnectorsCredentialsPasswordOutput
}

type AddressSpaceSpecConnectorsCredentialsPasswordArgs struct {
}

func (AddressSpaceSpecConnectorsCredentialsPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsCredentialsPassword)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsCredentialsPasswordArgs) ToAddressSpaceSpecConnectorsCredentialsPasswordOutput() AddressSpaceSpecConnectorsCredentialsPasswordOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsPasswordOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsCredentialsPasswordArgs) ToAddressSpaceSpecConnectorsCredentialsPasswordOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsPasswordOutput)
}

func (i AddressSpaceSpecConnectorsCredentialsPasswordArgs) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutput() AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsCredentialsPasswordArgs) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsPasswordOutput).ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsCredentialsPasswordPtrInput is an input type that accepts AddressSpaceSpecConnectorsCredentialsPasswordArgs, AddressSpaceSpecConnectorsCredentialsPasswordPtr and AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsCredentialsPasswordPtrInput` via:
//
//          AddressSpaceSpecConnectorsCredentialsPasswordArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsCredentialsPasswordPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutput() AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput
	ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput
}

type addressSpaceSpecConnectorsCredentialsPasswordPtrType AddressSpaceSpecConnectorsCredentialsPasswordArgs

func AddressSpaceSpecConnectorsCredentialsPasswordPtr(v *AddressSpaceSpecConnectorsCredentialsPasswordArgs) AddressSpaceSpecConnectorsCredentialsPasswordPtrInput {
	return (*addressSpaceSpecConnectorsCredentialsPasswordPtrType)(v)
}

func (*addressSpaceSpecConnectorsCredentialsPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsCredentialsPassword)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsCredentialsPasswordPtrType) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutput() AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsCredentialsPasswordPtrType) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput)
}

type AddressSpaceSpecConnectorsCredentialsPasswordOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsCredentialsPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsCredentialsPassword)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordOutput) ToAddressSpaceSpecConnectorsCredentialsPasswordOutput() AddressSpaceSpecConnectorsCredentialsPasswordOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordOutput) ToAddressSpaceSpecConnectorsCredentialsPasswordOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPasswordOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordOutput) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutput() AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return o.ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordOutput) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsCredentialsPassword) *AddressSpaceSpecConnectorsCredentialsPassword {
		return &v
	}).(AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput)
}

type AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsCredentialsPassword)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutput() AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput) ToAddressSpaceSpecConnectorsCredentialsPasswordPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput) Elem() AddressSpaceSpecConnectorsCredentialsPasswordOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsCredentialsPassword) AddressSpaceSpecConnectorsCredentialsPassword {
		return *v
	}).(AddressSpaceSpecConnectorsCredentialsPasswordOutput)
}

type AddressSpaceSpecConnectorsCredentialsUsername struct {
}

// AddressSpaceSpecConnectorsCredentialsUsernameInput is an input type that accepts AddressSpaceSpecConnectorsCredentialsUsernameArgs and AddressSpaceSpecConnectorsCredentialsUsernameOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsCredentialsUsernameInput` via:
//
//          AddressSpaceSpecConnectorsCredentialsUsernameArgs{...}
type AddressSpaceSpecConnectorsCredentialsUsernameInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsCredentialsUsernameOutput() AddressSpaceSpecConnectorsCredentialsUsernameOutput
	ToAddressSpaceSpecConnectorsCredentialsUsernameOutputWithContext(context.Context) AddressSpaceSpecConnectorsCredentialsUsernameOutput
}

type AddressSpaceSpecConnectorsCredentialsUsernameArgs struct {
}

func (AddressSpaceSpecConnectorsCredentialsUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsCredentialsUsername)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsCredentialsUsernameArgs) ToAddressSpaceSpecConnectorsCredentialsUsernameOutput() AddressSpaceSpecConnectorsCredentialsUsernameOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsUsernameOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsCredentialsUsernameArgs) ToAddressSpaceSpecConnectorsCredentialsUsernameOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsUsernameOutput)
}

func (i AddressSpaceSpecConnectorsCredentialsUsernameArgs) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutput() AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsCredentialsUsernameArgs) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsUsernameOutput).ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsCredentialsUsernamePtrInput is an input type that accepts AddressSpaceSpecConnectorsCredentialsUsernameArgs, AddressSpaceSpecConnectorsCredentialsUsernamePtr and AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsCredentialsUsernamePtrInput` via:
//
//          AddressSpaceSpecConnectorsCredentialsUsernameArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsCredentialsUsernamePtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutput() AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput
	ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput
}

type addressSpaceSpecConnectorsCredentialsUsernamePtrType AddressSpaceSpecConnectorsCredentialsUsernameArgs

func AddressSpaceSpecConnectorsCredentialsUsernamePtr(v *AddressSpaceSpecConnectorsCredentialsUsernameArgs) AddressSpaceSpecConnectorsCredentialsUsernamePtrInput {
	return (*addressSpaceSpecConnectorsCredentialsUsernamePtrType)(v)
}

func (*addressSpaceSpecConnectorsCredentialsUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsCredentialsUsername)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsCredentialsUsernamePtrType) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutput() AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return i.ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsCredentialsUsernamePtrType) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput)
}

type AddressSpaceSpecConnectorsCredentialsUsernameOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsCredentialsUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsCredentialsUsername)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsCredentialsUsernameOutput) ToAddressSpaceSpecConnectorsCredentialsUsernameOutput() AddressSpaceSpecConnectorsCredentialsUsernameOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsUsernameOutput) ToAddressSpaceSpecConnectorsCredentialsUsernameOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsUsernameOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsUsernameOutput) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutput() AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return o.ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsCredentialsUsernameOutput) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsCredentialsUsername) *AddressSpaceSpecConnectorsCredentialsUsername {
		return &v
	}).(AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput)
}

type AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsCredentialsUsername)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutput() AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput) ToAddressSpaceSpecConnectorsCredentialsUsernamePtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput) Elem() AddressSpaceSpecConnectorsCredentialsUsernameOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsCredentialsUsername) AddressSpaceSpecConnectorsCredentialsUsername {
		return *v
	}).(AddressSpaceSpecConnectorsCredentialsUsernameOutput)
}

type AddressSpaceSpecConnectorsEndpointHosts struct {
	Host string `pulumi:"host"`
	Port *int   `pulumi:"port"`
}

// AddressSpaceSpecConnectorsEndpointHostsInput is an input type that accepts AddressSpaceSpecConnectorsEndpointHostsArgs and AddressSpaceSpecConnectorsEndpointHostsOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsEndpointHostsInput` via:
//
//          AddressSpaceSpecConnectorsEndpointHostsArgs{...}
type AddressSpaceSpecConnectorsEndpointHostsInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsEndpointHostsOutput() AddressSpaceSpecConnectorsEndpointHostsOutput
	ToAddressSpaceSpecConnectorsEndpointHostsOutputWithContext(context.Context) AddressSpaceSpecConnectorsEndpointHostsOutput
}

type AddressSpaceSpecConnectorsEndpointHostsArgs struct {
	Host pulumi.StringInput `pulumi:"host"`
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (AddressSpaceSpecConnectorsEndpointHostsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsEndpointHosts)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsEndpointHostsArgs) ToAddressSpaceSpecConnectorsEndpointHostsOutput() AddressSpaceSpecConnectorsEndpointHostsOutput {
	return i.ToAddressSpaceSpecConnectorsEndpointHostsOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsEndpointHostsArgs) ToAddressSpaceSpecConnectorsEndpointHostsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsEndpointHostsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsEndpointHostsOutput)
}

// AddressSpaceSpecConnectorsEndpointHostsArrayInput is an input type that accepts AddressSpaceSpecConnectorsEndpointHostsArray and AddressSpaceSpecConnectorsEndpointHostsArrayOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsEndpointHostsArrayInput` via:
//
//          AddressSpaceSpecConnectorsEndpointHostsArray{ AddressSpaceSpecConnectorsEndpointHostsArgs{...} }
type AddressSpaceSpecConnectorsEndpointHostsArrayInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsEndpointHostsArrayOutput() AddressSpaceSpecConnectorsEndpointHostsArrayOutput
	ToAddressSpaceSpecConnectorsEndpointHostsArrayOutputWithContext(context.Context) AddressSpaceSpecConnectorsEndpointHostsArrayOutput
}

type AddressSpaceSpecConnectorsEndpointHostsArray []AddressSpaceSpecConnectorsEndpointHostsInput

func (AddressSpaceSpecConnectorsEndpointHostsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecConnectorsEndpointHosts)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsEndpointHostsArray) ToAddressSpaceSpecConnectorsEndpointHostsArrayOutput() AddressSpaceSpecConnectorsEndpointHostsArrayOutput {
	return i.ToAddressSpaceSpecConnectorsEndpointHostsArrayOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsEndpointHostsArray) ToAddressSpaceSpecConnectorsEndpointHostsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsEndpointHostsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsEndpointHostsArrayOutput)
}

type AddressSpaceSpecConnectorsEndpointHostsOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsEndpointHostsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsEndpointHosts)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsEndpointHostsOutput) ToAddressSpaceSpecConnectorsEndpointHostsOutput() AddressSpaceSpecConnectorsEndpointHostsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsEndpointHostsOutput) ToAddressSpaceSpecConnectorsEndpointHostsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsEndpointHostsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsEndpointHostsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsEndpointHosts) string { return v.Host }).(pulumi.StringOutput)
}

func (o AddressSpaceSpecConnectorsEndpointHostsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsEndpointHosts) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type AddressSpaceSpecConnectorsEndpointHostsArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsEndpointHostsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecConnectorsEndpointHosts)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsEndpointHostsArrayOutput) ToAddressSpaceSpecConnectorsEndpointHostsArrayOutput() AddressSpaceSpecConnectorsEndpointHostsArrayOutput {
	return o
}

func (o AddressSpaceSpecConnectorsEndpointHostsArrayOutput) ToAddressSpaceSpecConnectorsEndpointHostsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsEndpointHostsArrayOutput {
	return o
}

func (o AddressSpaceSpecConnectorsEndpointHostsArrayOutput) Index(i pulumi.IntInput) AddressSpaceSpecConnectorsEndpointHostsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceSpecConnectorsEndpointHosts {
		return vs[0].([]AddressSpaceSpecConnectorsEndpointHosts)[vs[1].(int)]
	}).(AddressSpaceSpecConnectorsEndpointHostsOutput)
}

// TLS configuration for the connector. If not specified, TLS will not be used.
type AddressSpaceSpecConnectorsTls struct {
	// CA certificate to be used by the connector.
	CaCert *AddressSpaceSpecConnectorsTlsCaCert `pulumi:"caCert"`
	// Client certificate to be used by the connector.
	ClientCert *AddressSpaceSpecConnectorsTlsClientCert `pulumi:"clientCert"`
	// Client key to be used by the connector.
	ClientKey *AddressSpaceSpecConnectorsTlsClientKey `pulumi:"clientKey"`
}

// AddressSpaceSpecConnectorsTlsInput is an input type that accepts AddressSpaceSpecConnectorsTlsArgs and AddressSpaceSpecConnectorsTlsOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsInput` via:
//
//          AddressSpaceSpecConnectorsTlsArgs{...}
type AddressSpaceSpecConnectorsTlsInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsOutput() AddressSpaceSpecConnectorsTlsOutput
	ToAddressSpaceSpecConnectorsTlsOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsOutput
}

// TLS configuration for the connector. If not specified, TLS will not be used.
type AddressSpaceSpecConnectorsTlsArgs struct {
	// CA certificate to be used by the connector.
	CaCert AddressSpaceSpecConnectorsTlsCaCertPtrInput `pulumi:"caCert"`
	// Client certificate to be used by the connector.
	ClientCert AddressSpaceSpecConnectorsTlsClientCertPtrInput `pulumi:"clientCert"`
	// Client key to be used by the connector.
	ClientKey AddressSpaceSpecConnectorsTlsClientKeyPtrInput `pulumi:"clientKey"`
}

func (AddressSpaceSpecConnectorsTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTls)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsTlsArgs) ToAddressSpaceSpecConnectorsTlsOutput() AddressSpaceSpecConnectorsTlsOutput {
	return i.ToAddressSpaceSpecConnectorsTlsOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsArgs) ToAddressSpaceSpecConnectorsTlsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsOutput)
}

func (i AddressSpaceSpecConnectorsTlsArgs) ToAddressSpaceSpecConnectorsTlsPtrOutput() AddressSpaceSpecConnectorsTlsPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsArgs) ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsOutput).ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsTlsPtrInput is an input type that accepts AddressSpaceSpecConnectorsTlsArgs, AddressSpaceSpecConnectorsTlsPtr and AddressSpaceSpecConnectorsTlsPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsPtrInput` via:
//
//          AddressSpaceSpecConnectorsTlsArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsTlsPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsPtrOutput() AddressSpaceSpecConnectorsTlsPtrOutput
	ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsPtrOutput
}

type addressSpaceSpecConnectorsTlsPtrType AddressSpaceSpecConnectorsTlsArgs

func AddressSpaceSpecConnectorsTlsPtr(v *AddressSpaceSpecConnectorsTlsArgs) AddressSpaceSpecConnectorsTlsPtrInput {
	return (*addressSpaceSpecConnectorsTlsPtrType)(v)
}

func (*addressSpaceSpecConnectorsTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTls)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsTlsPtrType) ToAddressSpaceSpecConnectorsTlsPtrOutput() AddressSpaceSpecConnectorsTlsPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsTlsPtrType) ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsPtrOutput)
}

// TLS configuration for the connector. If not specified, TLS will not be used.
type AddressSpaceSpecConnectorsTlsOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTls)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsOutput) ToAddressSpaceSpecConnectorsTlsOutput() AddressSpaceSpecConnectorsTlsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsOutput) ToAddressSpaceSpecConnectorsTlsOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsOutput) ToAddressSpaceSpecConnectorsTlsPtrOutput() AddressSpaceSpecConnectorsTlsPtrOutput {
	return o.ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsTlsOutput) ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTls {
		return &v
	}).(AddressSpaceSpecConnectorsTlsPtrOutput)
}

// CA certificate to be used by the connector.
func (o AddressSpaceSpecConnectorsTlsOutput) CaCert() AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTlsCaCert { return v.CaCert }).(AddressSpaceSpecConnectorsTlsCaCertPtrOutput)
}

// Client certificate to be used by the connector.
func (o AddressSpaceSpecConnectorsTlsOutput) ClientCert() AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTlsClientCert { return v.ClientCert }).(AddressSpaceSpecConnectorsTlsClientCertPtrOutput)
}

// Client key to be used by the connector.
func (o AddressSpaceSpecConnectorsTlsOutput) ClientKey() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTlsClientKey { return v.ClientKey }).(AddressSpaceSpecConnectorsTlsClientKeyPtrOutput)
}

type AddressSpaceSpecConnectorsTlsPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTls)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsPtrOutput) ToAddressSpaceSpecConnectorsTlsPtrOutput() AddressSpaceSpecConnectorsTlsPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsPtrOutput) ToAddressSpaceSpecConnectorsTlsPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsPtrOutput) Elem() AddressSpaceSpecConnectorsTlsOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTls) AddressSpaceSpecConnectorsTls { return *v }).(AddressSpaceSpecConnectorsTlsOutput)
}

// CA certificate to be used by the connector.
func (o AddressSpaceSpecConnectorsTlsPtrOutput) CaCert() AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTlsCaCert {
		if v == nil {
			return nil
		}
		return v.CaCert
	}).(AddressSpaceSpecConnectorsTlsCaCertPtrOutput)
}

// Client certificate to be used by the connector.
func (o AddressSpaceSpecConnectorsTlsPtrOutput) ClientCert() AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTlsClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(AddressSpaceSpecConnectorsTlsClientCertPtrOutput)
}

// Client key to be used by the connector.
func (o AddressSpaceSpecConnectorsTlsPtrOutput) ClientKey() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTls) *AddressSpaceSpecConnectorsTlsClientKey {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(AddressSpaceSpecConnectorsTlsClientKeyPtrOutput)
}

type AddressSpaceSpecConnectorsTlsCaCert struct {
}

// AddressSpaceSpecConnectorsTlsCaCertInput is an input type that accepts AddressSpaceSpecConnectorsTlsCaCertArgs and AddressSpaceSpecConnectorsTlsCaCertOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsCaCertInput` via:
//
//          AddressSpaceSpecConnectorsTlsCaCertArgs{...}
type AddressSpaceSpecConnectorsTlsCaCertInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsCaCertOutput() AddressSpaceSpecConnectorsTlsCaCertOutput
	ToAddressSpaceSpecConnectorsTlsCaCertOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsCaCertOutput
}

type AddressSpaceSpecConnectorsTlsCaCertArgs struct {
}

func (AddressSpaceSpecConnectorsTlsCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTlsCaCert)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsTlsCaCertArgs) ToAddressSpaceSpecConnectorsTlsCaCertOutput() AddressSpaceSpecConnectorsTlsCaCertOutput {
	return i.ToAddressSpaceSpecConnectorsTlsCaCertOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsCaCertArgs) ToAddressSpaceSpecConnectorsTlsCaCertOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsCaCertOutput)
}

func (i AddressSpaceSpecConnectorsTlsCaCertArgs) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutput() AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsCaCertArgs) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsCaCertOutput).ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsTlsCaCertPtrInput is an input type that accepts AddressSpaceSpecConnectorsTlsCaCertArgs, AddressSpaceSpecConnectorsTlsCaCertPtr and AddressSpaceSpecConnectorsTlsCaCertPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsCaCertPtrInput` via:
//
//          AddressSpaceSpecConnectorsTlsCaCertArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsTlsCaCertPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsCaCertPtrOutput() AddressSpaceSpecConnectorsTlsCaCertPtrOutput
	ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsCaCertPtrOutput
}

type addressSpaceSpecConnectorsTlsCaCertPtrType AddressSpaceSpecConnectorsTlsCaCertArgs

func AddressSpaceSpecConnectorsTlsCaCertPtr(v *AddressSpaceSpecConnectorsTlsCaCertArgs) AddressSpaceSpecConnectorsTlsCaCertPtrInput {
	return (*addressSpaceSpecConnectorsTlsCaCertPtrType)(v)
}

func (*addressSpaceSpecConnectorsTlsCaCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTlsCaCert)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsTlsCaCertPtrType) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutput() AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsTlsCaCertPtrType) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsCaCertPtrOutput)
}

type AddressSpaceSpecConnectorsTlsCaCertOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTlsCaCert)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsCaCertOutput) ToAddressSpaceSpecConnectorsTlsCaCertOutput() AddressSpaceSpecConnectorsTlsCaCertOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsCaCertOutput) ToAddressSpaceSpecConnectorsTlsCaCertOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsCaCertOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsCaCertOutput) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutput() AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return o.ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsTlsCaCertOutput) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTlsCaCert) *AddressSpaceSpecConnectorsTlsCaCert {
		return &v
	}).(AddressSpaceSpecConnectorsTlsCaCertPtrOutput)
}

type AddressSpaceSpecConnectorsTlsCaCertPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsCaCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTlsCaCert)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsCaCertPtrOutput) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutput() AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsCaCertPtrOutput) ToAddressSpaceSpecConnectorsTlsCaCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsCaCertPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsCaCertPtrOutput) Elem() AddressSpaceSpecConnectorsTlsCaCertOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTlsCaCert) AddressSpaceSpecConnectorsTlsCaCert { return *v }).(AddressSpaceSpecConnectorsTlsCaCertOutput)
}

type AddressSpaceSpecConnectorsTlsClientCert struct {
}

// AddressSpaceSpecConnectorsTlsClientCertInput is an input type that accepts AddressSpaceSpecConnectorsTlsClientCertArgs and AddressSpaceSpecConnectorsTlsClientCertOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsClientCertInput` via:
//
//          AddressSpaceSpecConnectorsTlsClientCertArgs{...}
type AddressSpaceSpecConnectorsTlsClientCertInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsClientCertOutput() AddressSpaceSpecConnectorsTlsClientCertOutput
	ToAddressSpaceSpecConnectorsTlsClientCertOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsClientCertOutput
}

type AddressSpaceSpecConnectorsTlsClientCertArgs struct {
}

func (AddressSpaceSpecConnectorsTlsClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTlsClientCert)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsTlsClientCertArgs) ToAddressSpaceSpecConnectorsTlsClientCertOutput() AddressSpaceSpecConnectorsTlsClientCertOutput {
	return i.ToAddressSpaceSpecConnectorsTlsClientCertOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsClientCertArgs) ToAddressSpaceSpecConnectorsTlsClientCertOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsClientCertOutput)
}

func (i AddressSpaceSpecConnectorsTlsClientCertArgs) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutput() AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsClientCertArgs) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsClientCertOutput).ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsTlsClientCertPtrInput is an input type that accepts AddressSpaceSpecConnectorsTlsClientCertArgs, AddressSpaceSpecConnectorsTlsClientCertPtr and AddressSpaceSpecConnectorsTlsClientCertPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsClientCertPtrInput` via:
//
//          AddressSpaceSpecConnectorsTlsClientCertArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsTlsClientCertPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsClientCertPtrOutput() AddressSpaceSpecConnectorsTlsClientCertPtrOutput
	ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsClientCertPtrOutput
}

type addressSpaceSpecConnectorsTlsClientCertPtrType AddressSpaceSpecConnectorsTlsClientCertArgs

func AddressSpaceSpecConnectorsTlsClientCertPtr(v *AddressSpaceSpecConnectorsTlsClientCertArgs) AddressSpaceSpecConnectorsTlsClientCertPtrInput {
	return (*addressSpaceSpecConnectorsTlsClientCertPtrType)(v)
}

func (*addressSpaceSpecConnectorsTlsClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTlsClientCert)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsTlsClientCertPtrType) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutput() AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsTlsClientCertPtrType) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsClientCertPtrOutput)
}

type AddressSpaceSpecConnectorsTlsClientCertOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTlsClientCert)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsClientCertOutput) ToAddressSpaceSpecConnectorsTlsClientCertOutput() AddressSpaceSpecConnectorsTlsClientCertOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientCertOutput) ToAddressSpaceSpecConnectorsTlsClientCertOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientCertOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientCertOutput) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutput() AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return o.ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsTlsClientCertOutput) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTlsClientCert) *AddressSpaceSpecConnectorsTlsClientCert {
		return &v
	}).(AddressSpaceSpecConnectorsTlsClientCertPtrOutput)
}

type AddressSpaceSpecConnectorsTlsClientCertPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTlsClientCert)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsClientCertPtrOutput) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutput() AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientCertPtrOutput) ToAddressSpaceSpecConnectorsTlsClientCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientCertPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientCertPtrOutput) Elem() AddressSpaceSpecConnectorsTlsClientCertOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTlsClientCert) AddressSpaceSpecConnectorsTlsClientCert { return *v }).(AddressSpaceSpecConnectorsTlsClientCertOutput)
}

type AddressSpaceSpecConnectorsTlsClientKey struct {
}

// AddressSpaceSpecConnectorsTlsClientKeyInput is an input type that accepts AddressSpaceSpecConnectorsTlsClientKeyArgs and AddressSpaceSpecConnectorsTlsClientKeyOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsClientKeyInput` via:
//
//          AddressSpaceSpecConnectorsTlsClientKeyArgs{...}
type AddressSpaceSpecConnectorsTlsClientKeyInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsClientKeyOutput() AddressSpaceSpecConnectorsTlsClientKeyOutput
	ToAddressSpaceSpecConnectorsTlsClientKeyOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsClientKeyOutput
}

type AddressSpaceSpecConnectorsTlsClientKeyArgs struct {
}

func (AddressSpaceSpecConnectorsTlsClientKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTlsClientKey)(nil)).Elem()
}

func (i AddressSpaceSpecConnectorsTlsClientKeyArgs) ToAddressSpaceSpecConnectorsTlsClientKeyOutput() AddressSpaceSpecConnectorsTlsClientKeyOutput {
	return i.ToAddressSpaceSpecConnectorsTlsClientKeyOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsClientKeyArgs) ToAddressSpaceSpecConnectorsTlsClientKeyOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsClientKeyOutput)
}

func (i AddressSpaceSpecConnectorsTlsClientKeyArgs) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutput() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecConnectorsTlsClientKeyArgs) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsClientKeyOutput).ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(ctx)
}

// AddressSpaceSpecConnectorsTlsClientKeyPtrInput is an input type that accepts AddressSpaceSpecConnectorsTlsClientKeyArgs, AddressSpaceSpecConnectorsTlsClientKeyPtr and AddressSpaceSpecConnectorsTlsClientKeyPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecConnectorsTlsClientKeyPtrInput` via:
//
//          AddressSpaceSpecConnectorsTlsClientKeyArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecConnectorsTlsClientKeyPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutput() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput
	ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(context.Context) AddressSpaceSpecConnectorsTlsClientKeyPtrOutput
}

type addressSpaceSpecConnectorsTlsClientKeyPtrType AddressSpaceSpecConnectorsTlsClientKeyArgs

func AddressSpaceSpecConnectorsTlsClientKeyPtr(v *AddressSpaceSpecConnectorsTlsClientKeyArgs) AddressSpaceSpecConnectorsTlsClientKeyPtrInput {
	return (*addressSpaceSpecConnectorsTlsClientKeyPtrType)(v)
}

func (*addressSpaceSpecConnectorsTlsClientKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTlsClientKey)(nil)).Elem()
}

func (i *addressSpaceSpecConnectorsTlsClientKeyPtrType) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutput() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return i.ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecConnectorsTlsClientKeyPtrType) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecConnectorsTlsClientKeyPtrOutput)
}

type AddressSpaceSpecConnectorsTlsClientKeyOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsClientKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecConnectorsTlsClientKey)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsClientKeyOutput) ToAddressSpaceSpecConnectorsTlsClientKeyOutput() AddressSpaceSpecConnectorsTlsClientKeyOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientKeyOutput) ToAddressSpaceSpecConnectorsTlsClientKeyOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientKeyOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientKeyOutput) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutput() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return o.ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecConnectorsTlsClientKeyOutput) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecConnectorsTlsClientKey) *AddressSpaceSpecConnectorsTlsClientKey {
		return &v
	}).(AddressSpaceSpecConnectorsTlsClientKeyPtrOutput)
}

type AddressSpaceSpecConnectorsTlsClientKeyPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecConnectorsTlsClientKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecConnectorsTlsClientKey)(nil)).Elem()
}

func (o AddressSpaceSpecConnectorsTlsClientKeyPtrOutput) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutput() AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientKeyPtrOutput) ToAddressSpaceSpecConnectorsTlsClientKeyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecConnectorsTlsClientKeyPtrOutput {
	return o
}

func (o AddressSpaceSpecConnectorsTlsClientKeyPtrOutput) Elem() AddressSpaceSpecConnectorsTlsClientKeyOutput {
	return o.ApplyT(func(v *AddressSpaceSpecConnectorsTlsClientKey) AddressSpaceSpecConnectorsTlsClientKey { return *v }).(AddressSpaceSpecConnectorsTlsClientKeyOutput)
}

type AddressSpaceSpecEndpoints struct {
	// Configure certificates to be used for this endpoint.
	Cert *AddressSpaceSpecEndpointsCert `pulumi:"cert"`
	// Export address space information.
	Exports []AddressSpaceSpecEndpointsExports `pulumi:"exports"`
	// Expose configuration of this endpoint.
	Expose *AddressSpaceSpecEndpointsExpose `pulumi:"expose"`
	// Endpoint name. Use to uniquely identify an endpoint.
	Name *string `pulumi:"name"`
	// Service referenced by this endpoint. 'console' is no longer supported.
	Service *string `pulumi:"service"`
}

// AddressSpaceSpecEndpointsInput is an input type that accepts AddressSpaceSpecEndpointsArgs and AddressSpaceSpecEndpointsOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsInput` via:
//
//          AddressSpaceSpecEndpointsArgs{...}
type AddressSpaceSpecEndpointsInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsOutput() AddressSpaceSpecEndpointsOutput
	ToAddressSpaceSpecEndpointsOutputWithContext(context.Context) AddressSpaceSpecEndpointsOutput
}

type AddressSpaceSpecEndpointsArgs struct {
	// Configure certificates to be used for this endpoint.
	Cert AddressSpaceSpecEndpointsCertPtrInput `pulumi:"cert"`
	// Export address space information.
	Exports AddressSpaceSpecEndpointsExportsArrayInput `pulumi:"exports"`
	// Expose configuration of this endpoint.
	Expose AddressSpaceSpecEndpointsExposePtrInput `pulumi:"expose"`
	// Endpoint name. Use to uniquely identify an endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service referenced by this endpoint. 'console' is no longer supported.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AddressSpaceSpecEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpoints)(nil)).Elem()
}

func (i AddressSpaceSpecEndpointsArgs) ToAddressSpaceSpecEndpointsOutput() AddressSpaceSpecEndpointsOutput {
	return i.ToAddressSpaceSpecEndpointsOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsArgs) ToAddressSpaceSpecEndpointsOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsOutput)
}

// AddressSpaceSpecEndpointsArrayInput is an input type that accepts AddressSpaceSpecEndpointsArray and AddressSpaceSpecEndpointsArrayOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsArrayInput` via:
//
//          AddressSpaceSpecEndpointsArray{ AddressSpaceSpecEndpointsArgs{...} }
type AddressSpaceSpecEndpointsArrayInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsArrayOutput() AddressSpaceSpecEndpointsArrayOutput
	ToAddressSpaceSpecEndpointsArrayOutputWithContext(context.Context) AddressSpaceSpecEndpointsArrayOutput
}

type AddressSpaceSpecEndpointsArray []AddressSpaceSpecEndpointsInput

func (AddressSpaceSpecEndpointsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecEndpoints)(nil)).Elem()
}

func (i AddressSpaceSpecEndpointsArray) ToAddressSpaceSpecEndpointsArrayOutput() AddressSpaceSpecEndpointsArrayOutput {
	return i.ToAddressSpaceSpecEndpointsArrayOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsArray) ToAddressSpaceSpecEndpointsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsArrayOutput)
}

type AddressSpaceSpecEndpointsOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpoints)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsOutput) ToAddressSpaceSpecEndpointsOutput() AddressSpaceSpecEndpointsOutput {
	return o
}

func (o AddressSpaceSpecEndpointsOutput) ToAddressSpaceSpecEndpointsOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsOutput {
	return o
}

// Configure certificates to be used for this endpoint.
func (o AddressSpaceSpecEndpointsOutput) Cert() AddressSpaceSpecEndpointsCertPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpoints) *AddressSpaceSpecEndpointsCert { return v.Cert }).(AddressSpaceSpecEndpointsCertPtrOutput)
}

// Export address space information.
func (o AddressSpaceSpecEndpointsOutput) Exports() AddressSpaceSpecEndpointsExportsArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpoints) []AddressSpaceSpecEndpointsExports { return v.Exports }).(AddressSpaceSpecEndpointsExportsArrayOutput)
}

// Expose configuration of this endpoint.
func (o AddressSpaceSpecEndpointsOutput) Expose() AddressSpaceSpecEndpointsExposePtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpoints) *AddressSpaceSpecEndpointsExpose { return v.Expose }).(AddressSpaceSpecEndpointsExposePtrOutput)
}

// Endpoint name. Use to uniquely identify an endpoint.
func (o AddressSpaceSpecEndpointsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpoints) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service referenced by this endpoint. 'console' is no longer supported.
func (o AddressSpaceSpecEndpointsOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpoints) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecEndpointsArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecEndpoints)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsArrayOutput) ToAddressSpaceSpecEndpointsArrayOutput() AddressSpaceSpecEndpointsArrayOutput {
	return o
}

func (o AddressSpaceSpecEndpointsArrayOutput) ToAddressSpaceSpecEndpointsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsArrayOutput {
	return o
}

func (o AddressSpaceSpecEndpointsArrayOutput) Index(i pulumi.IntInput) AddressSpaceSpecEndpointsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceSpecEndpoints {
		return vs[0].([]AddressSpaceSpecEndpoints)[vs[1].(int)]
	}).(AddressSpaceSpecEndpointsOutput)
}

// Configure certificates to be used for this endpoint.
type AddressSpaceSpecEndpointsCert struct {
	// Certificate provider to use for this endpoint.
	Provider   *string `pulumi:"provider"`
	SecretName *string `pulumi:"secretName"`
	// TLS certificate to use for 'certBundle' provider.
	TlsCert *string `pulumi:"tlsCert"`
	// TLS key to use for 'certBundle' provider.
	TlsKey *string `pulumi:"tlsKey"`
}

// AddressSpaceSpecEndpointsCertInput is an input type that accepts AddressSpaceSpecEndpointsCertArgs and AddressSpaceSpecEndpointsCertOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsCertInput` via:
//
//          AddressSpaceSpecEndpointsCertArgs{...}
type AddressSpaceSpecEndpointsCertInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsCertOutput() AddressSpaceSpecEndpointsCertOutput
	ToAddressSpaceSpecEndpointsCertOutputWithContext(context.Context) AddressSpaceSpecEndpointsCertOutput
}

// Configure certificates to be used for this endpoint.
type AddressSpaceSpecEndpointsCertArgs struct {
	// Certificate provider to use for this endpoint.
	Provider   pulumi.StringPtrInput `pulumi:"provider"`
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// TLS certificate to use for 'certBundle' provider.
	TlsCert pulumi.StringPtrInput `pulumi:"tlsCert"`
	// TLS key to use for 'certBundle' provider.
	TlsKey pulumi.StringPtrInput `pulumi:"tlsKey"`
}

func (AddressSpaceSpecEndpointsCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpointsCert)(nil)).Elem()
}

func (i AddressSpaceSpecEndpointsCertArgs) ToAddressSpaceSpecEndpointsCertOutput() AddressSpaceSpecEndpointsCertOutput {
	return i.ToAddressSpaceSpecEndpointsCertOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsCertArgs) ToAddressSpaceSpecEndpointsCertOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsCertOutput)
}

func (i AddressSpaceSpecEndpointsCertArgs) ToAddressSpaceSpecEndpointsCertPtrOutput() AddressSpaceSpecEndpointsCertPtrOutput {
	return i.ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsCertArgs) ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsCertOutput).ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(ctx)
}

// AddressSpaceSpecEndpointsCertPtrInput is an input type that accepts AddressSpaceSpecEndpointsCertArgs, AddressSpaceSpecEndpointsCertPtr and AddressSpaceSpecEndpointsCertPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsCertPtrInput` via:
//
//          AddressSpaceSpecEndpointsCertArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecEndpointsCertPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsCertPtrOutput() AddressSpaceSpecEndpointsCertPtrOutput
	ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(context.Context) AddressSpaceSpecEndpointsCertPtrOutput
}

type addressSpaceSpecEndpointsCertPtrType AddressSpaceSpecEndpointsCertArgs

func AddressSpaceSpecEndpointsCertPtr(v *AddressSpaceSpecEndpointsCertArgs) AddressSpaceSpecEndpointsCertPtrInput {
	return (*addressSpaceSpecEndpointsCertPtrType)(v)
}

func (*addressSpaceSpecEndpointsCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecEndpointsCert)(nil)).Elem()
}

func (i *addressSpaceSpecEndpointsCertPtrType) ToAddressSpaceSpecEndpointsCertPtrOutput() AddressSpaceSpecEndpointsCertPtrOutput {
	return i.ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecEndpointsCertPtrType) ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsCertPtrOutput)
}

// Configure certificates to be used for this endpoint.
type AddressSpaceSpecEndpointsCertOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpointsCert)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsCertOutput) ToAddressSpaceSpecEndpointsCertOutput() AddressSpaceSpecEndpointsCertOutput {
	return o
}

func (o AddressSpaceSpecEndpointsCertOutput) ToAddressSpaceSpecEndpointsCertOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsCertOutput {
	return o
}

func (o AddressSpaceSpecEndpointsCertOutput) ToAddressSpaceSpecEndpointsCertPtrOutput() AddressSpaceSpecEndpointsCertPtrOutput {
	return o.ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecEndpointsCertOutput) ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsCertPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsCert) *AddressSpaceSpecEndpointsCert {
		return &v
	}).(AddressSpaceSpecEndpointsCertPtrOutput)
}

// Certificate provider to use for this endpoint.
func (o AddressSpaceSpecEndpointsCertOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsCert) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceSpecEndpointsCertOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsCert) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// TLS certificate to use for 'certBundle' provider.
func (o AddressSpaceSpecEndpointsCertOutput) TlsCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsCert) *string { return v.TlsCert }).(pulumi.StringPtrOutput)
}

// TLS key to use for 'certBundle' provider.
func (o AddressSpaceSpecEndpointsCertOutput) TlsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsCert) *string { return v.TlsKey }).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecEndpointsCertPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecEndpointsCert)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsCertPtrOutput) ToAddressSpaceSpecEndpointsCertPtrOutput() AddressSpaceSpecEndpointsCertPtrOutput {
	return o
}

func (o AddressSpaceSpecEndpointsCertPtrOutput) ToAddressSpaceSpecEndpointsCertPtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsCertPtrOutput {
	return o
}

func (o AddressSpaceSpecEndpointsCertPtrOutput) Elem() AddressSpaceSpecEndpointsCertOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsCert) AddressSpaceSpecEndpointsCert { return *v }).(AddressSpaceSpecEndpointsCertOutput)
}

// Certificate provider to use for this endpoint.
func (o AddressSpaceSpecEndpointsCertPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsCert) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

func (o AddressSpaceSpecEndpointsCertPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsCert) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// TLS certificate to use for 'certBundle' provider.
func (o AddressSpaceSpecEndpointsCertPtrOutput) TlsCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsCert) *string {
		if v == nil {
			return nil
		}
		return v.TlsCert
	}).(pulumi.StringPtrOutput)
}

// TLS key to use for 'certBundle' provider.
func (o AddressSpaceSpecEndpointsCertPtrOutput) TlsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsCert) *string {
		if v == nil {
			return nil
		}
		return v.TlsKey
	}).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecEndpointsExports struct {
	// Type of resource to export address space information into.
	Kind *string `pulumi:"kind"`
	// Name of resource to export address space information into.
	Name *string `pulumi:"name"`
}

// AddressSpaceSpecEndpointsExportsInput is an input type that accepts AddressSpaceSpecEndpointsExportsArgs and AddressSpaceSpecEndpointsExportsOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsExportsInput` via:
//
//          AddressSpaceSpecEndpointsExportsArgs{...}
type AddressSpaceSpecEndpointsExportsInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsExportsOutput() AddressSpaceSpecEndpointsExportsOutput
	ToAddressSpaceSpecEndpointsExportsOutputWithContext(context.Context) AddressSpaceSpecEndpointsExportsOutput
}

type AddressSpaceSpecEndpointsExportsArgs struct {
	// Type of resource to export address space information into.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of resource to export address space information into.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AddressSpaceSpecEndpointsExportsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpointsExports)(nil)).Elem()
}

func (i AddressSpaceSpecEndpointsExportsArgs) ToAddressSpaceSpecEndpointsExportsOutput() AddressSpaceSpecEndpointsExportsOutput {
	return i.ToAddressSpaceSpecEndpointsExportsOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsExportsArgs) ToAddressSpaceSpecEndpointsExportsOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExportsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsExportsOutput)
}

// AddressSpaceSpecEndpointsExportsArrayInput is an input type that accepts AddressSpaceSpecEndpointsExportsArray and AddressSpaceSpecEndpointsExportsArrayOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsExportsArrayInput` via:
//
//          AddressSpaceSpecEndpointsExportsArray{ AddressSpaceSpecEndpointsExportsArgs{...} }
type AddressSpaceSpecEndpointsExportsArrayInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsExportsArrayOutput() AddressSpaceSpecEndpointsExportsArrayOutput
	ToAddressSpaceSpecEndpointsExportsArrayOutputWithContext(context.Context) AddressSpaceSpecEndpointsExportsArrayOutput
}

type AddressSpaceSpecEndpointsExportsArray []AddressSpaceSpecEndpointsExportsInput

func (AddressSpaceSpecEndpointsExportsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecEndpointsExports)(nil)).Elem()
}

func (i AddressSpaceSpecEndpointsExportsArray) ToAddressSpaceSpecEndpointsExportsArrayOutput() AddressSpaceSpecEndpointsExportsArrayOutput {
	return i.ToAddressSpaceSpecEndpointsExportsArrayOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsExportsArray) ToAddressSpaceSpecEndpointsExportsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExportsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsExportsArrayOutput)
}

type AddressSpaceSpecEndpointsExportsOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsExportsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpointsExports)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsExportsOutput) ToAddressSpaceSpecEndpointsExportsOutput() AddressSpaceSpecEndpointsExportsOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExportsOutput) ToAddressSpaceSpecEndpointsExportsOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExportsOutput {
	return o
}

// Type of resource to export address space information into.
func (o AddressSpaceSpecEndpointsExportsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsExports) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of resource to export address space information into.
func (o AddressSpaceSpecEndpointsExportsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsExports) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddressSpaceSpecEndpointsExportsArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsExportsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceSpecEndpointsExports)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsExportsArrayOutput) ToAddressSpaceSpecEndpointsExportsArrayOutput() AddressSpaceSpecEndpointsExportsArrayOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExportsArrayOutput) ToAddressSpaceSpecEndpointsExportsArrayOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExportsArrayOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExportsArrayOutput) Index(i pulumi.IntInput) AddressSpaceSpecEndpointsExportsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceSpecEndpointsExports {
		return vs[0].([]AddressSpaceSpecEndpointsExports)[vs[1].(int)]
	}).(AddressSpaceSpecEndpointsExportsOutput)
}

type AddressSpaceSpecEndpointsExpose struct {
	Type interface{} `pulumi:"type"`
}

// AddressSpaceSpecEndpointsExposeInput is an input type that accepts AddressSpaceSpecEndpointsExposeArgs and AddressSpaceSpecEndpointsExposeOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsExposeInput` via:
//
//          AddressSpaceSpecEndpointsExposeArgs{...}
type AddressSpaceSpecEndpointsExposeInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsExposeOutput() AddressSpaceSpecEndpointsExposeOutput
	ToAddressSpaceSpecEndpointsExposeOutputWithContext(context.Context) AddressSpaceSpecEndpointsExposeOutput
}

type AddressSpaceSpecEndpointsExposeArgs struct {
	Type pulumi.Input `pulumi:"type"`
}

func (AddressSpaceSpecEndpointsExposeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpointsExpose)(nil)).Elem()
}

func (i AddressSpaceSpecEndpointsExposeArgs) ToAddressSpaceSpecEndpointsExposeOutput() AddressSpaceSpecEndpointsExposeOutput {
	return i.ToAddressSpaceSpecEndpointsExposeOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsExposeArgs) ToAddressSpaceSpecEndpointsExposeOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExposeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsExposeOutput)
}

func (i AddressSpaceSpecEndpointsExposeArgs) ToAddressSpaceSpecEndpointsExposePtrOutput() AddressSpaceSpecEndpointsExposePtrOutput {
	return i.ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecEndpointsExposeArgs) ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsExposeOutput).ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(ctx)
}

// AddressSpaceSpecEndpointsExposePtrInput is an input type that accepts AddressSpaceSpecEndpointsExposeArgs, AddressSpaceSpecEndpointsExposePtr and AddressSpaceSpecEndpointsExposePtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecEndpointsExposePtrInput` via:
//
//          AddressSpaceSpecEndpointsExposeArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecEndpointsExposePtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecEndpointsExposePtrOutput() AddressSpaceSpecEndpointsExposePtrOutput
	ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(context.Context) AddressSpaceSpecEndpointsExposePtrOutput
}

type addressSpaceSpecEndpointsExposePtrType AddressSpaceSpecEndpointsExposeArgs

func AddressSpaceSpecEndpointsExposePtr(v *AddressSpaceSpecEndpointsExposeArgs) AddressSpaceSpecEndpointsExposePtrInput {
	return (*addressSpaceSpecEndpointsExposePtrType)(v)
}

func (*addressSpaceSpecEndpointsExposePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecEndpointsExpose)(nil)).Elem()
}

func (i *addressSpaceSpecEndpointsExposePtrType) ToAddressSpaceSpecEndpointsExposePtrOutput() AddressSpaceSpecEndpointsExposePtrOutput {
	return i.ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecEndpointsExposePtrType) ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecEndpointsExposePtrOutput)
}

type AddressSpaceSpecEndpointsExposeOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsExposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecEndpointsExpose)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsExposeOutput) ToAddressSpaceSpecEndpointsExposeOutput() AddressSpaceSpecEndpointsExposeOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExposeOutput) ToAddressSpaceSpecEndpointsExposeOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExposeOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExposeOutput) ToAddressSpaceSpecEndpointsExposePtrOutput() AddressSpaceSpecEndpointsExposePtrOutput {
	return o.ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecEndpointsExposeOutput) ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExposePtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsExpose) *AddressSpaceSpecEndpointsExpose {
		return &v
	}).(AddressSpaceSpecEndpointsExposePtrOutput)
}
func (o AddressSpaceSpecEndpointsExposeOutput) Type() pulumi.AnyOutput {
	return o.ApplyT(func(v AddressSpaceSpecEndpointsExpose) interface{} { return v.Type }).(pulumi.AnyOutput)
}

type AddressSpaceSpecEndpointsExposePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecEndpointsExposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecEndpointsExpose)(nil)).Elem()
}

func (o AddressSpaceSpecEndpointsExposePtrOutput) ToAddressSpaceSpecEndpointsExposePtrOutput() AddressSpaceSpecEndpointsExposePtrOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExposePtrOutput) ToAddressSpaceSpecEndpointsExposePtrOutputWithContext(ctx context.Context) AddressSpaceSpecEndpointsExposePtrOutput {
	return o
}

func (o AddressSpaceSpecEndpointsExposePtrOutput) Elem() AddressSpaceSpecEndpointsExposeOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsExpose) AddressSpaceSpecEndpointsExpose { return *v }).(AddressSpaceSpecEndpointsExposeOutput)
}

func (o AddressSpaceSpecEndpointsExposePtrOutput) Type() pulumi.AnyOutput {
	return o.ApplyT(func(v *AddressSpaceSpecEndpointsExpose) interface{} {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.AnyOutput)
}

// Define NetworkPolicy for this address space.
type AddressSpaceSpecNetworkPolicy struct {
	Egress  []map[string]interface{} `pulumi:"egress"`
	Ingress []map[string]interface{} `pulumi:"ingress"`
}

// AddressSpaceSpecNetworkPolicyInput is an input type that accepts AddressSpaceSpecNetworkPolicyArgs and AddressSpaceSpecNetworkPolicyOutput values.
// You can construct a concrete instance of `AddressSpaceSpecNetworkPolicyInput` via:
//
//          AddressSpaceSpecNetworkPolicyArgs{...}
type AddressSpaceSpecNetworkPolicyInput interface {
	pulumi.Input

	ToAddressSpaceSpecNetworkPolicyOutput() AddressSpaceSpecNetworkPolicyOutput
	ToAddressSpaceSpecNetworkPolicyOutputWithContext(context.Context) AddressSpaceSpecNetworkPolicyOutput
}

// Define NetworkPolicy for this address space.
type AddressSpaceSpecNetworkPolicyArgs struct {
	Egress  pulumi.MapArrayInput `pulumi:"egress"`
	Ingress pulumi.MapArrayInput `pulumi:"ingress"`
}

func (AddressSpaceSpecNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecNetworkPolicy)(nil)).Elem()
}

func (i AddressSpaceSpecNetworkPolicyArgs) ToAddressSpaceSpecNetworkPolicyOutput() AddressSpaceSpecNetworkPolicyOutput {
	return i.ToAddressSpaceSpecNetworkPolicyOutputWithContext(context.Background())
}

func (i AddressSpaceSpecNetworkPolicyArgs) ToAddressSpaceSpecNetworkPolicyOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecNetworkPolicyOutput)
}

func (i AddressSpaceSpecNetworkPolicyArgs) ToAddressSpaceSpecNetworkPolicyPtrOutput() AddressSpaceSpecNetworkPolicyPtrOutput {
	return i.ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i AddressSpaceSpecNetworkPolicyArgs) ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecNetworkPolicyOutput).ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(ctx)
}

// AddressSpaceSpecNetworkPolicyPtrInput is an input type that accepts AddressSpaceSpecNetworkPolicyArgs, AddressSpaceSpecNetworkPolicyPtr and AddressSpaceSpecNetworkPolicyPtrOutput values.
// You can construct a concrete instance of `AddressSpaceSpecNetworkPolicyPtrInput` via:
//
//          AddressSpaceSpecNetworkPolicyArgs{...}
//
//  or:
//
//          nil
type AddressSpaceSpecNetworkPolicyPtrInput interface {
	pulumi.Input

	ToAddressSpaceSpecNetworkPolicyPtrOutput() AddressSpaceSpecNetworkPolicyPtrOutput
	ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(context.Context) AddressSpaceSpecNetworkPolicyPtrOutput
}

type addressSpaceSpecNetworkPolicyPtrType AddressSpaceSpecNetworkPolicyArgs

func AddressSpaceSpecNetworkPolicyPtr(v *AddressSpaceSpecNetworkPolicyArgs) AddressSpaceSpecNetworkPolicyPtrInput {
	return (*addressSpaceSpecNetworkPolicyPtrType)(v)
}

func (*addressSpaceSpecNetworkPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecNetworkPolicy)(nil)).Elem()
}

func (i *addressSpaceSpecNetworkPolicyPtrType) ToAddressSpaceSpecNetworkPolicyPtrOutput() AddressSpaceSpecNetworkPolicyPtrOutput {
	return i.ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i *addressSpaceSpecNetworkPolicyPtrType) ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecNetworkPolicyPtrOutput)
}

// Define NetworkPolicy for this address space.
type AddressSpaceSpecNetworkPolicyOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecNetworkPolicy)(nil)).Elem()
}

func (o AddressSpaceSpecNetworkPolicyOutput) ToAddressSpaceSpecNetworkPolicyOutput() AddressSpaceSpecNetworkPolicyOutput {
	return o
}

func (o AddressSpaceSpecNetworkPolicyOutput) ToAddressSpaceSpecNetworkPolicyOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyOutput {
	return o
}

func (o AddressSpaceSpecNetworkPolicyOutput) ToAddressSpaceSpecNetworkPolicyPtrOutput() AddressSpaceSpecNetworkPolicyPtrOutput {
	return o.ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(context.Background())
}

func (o AddressSpaceSpecNetworkPolicyOutput) ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyPtrOutput {
	return o.ApplyT(func(v AddressSpaceSpecNetworkPolicy) *AddressSpaceSpecNetworkPolicy {
		return &v
	}).(AddressSpaceSpecNetworkPolicyPtrOutput)
}
func (o AddressSpaceSpecNetworkPolicyOutput) Egress() pulumi.MapArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpecNetworkPolicy) []map[string]interface{} { return v.Egress }).(pulumi.MapArrayOutput)
}

func (o AddressSpaceSpecNetworkPolicyOutput) Ingress() pulumi.MapArrayOutput {
	return o.ApplyT(func(v AddressSpaceSpecNetworkPolicy) []map[string]interface{} { return v.Ingress }).(pulumi.MapArrayOutput)
}

type AddressSpaceSpecNetworkPolicyPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecNetworkPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceSpecNetworkPolicy)(nil)).Elem()
}

func (o AddressSpaceSpecNetworkPolicyPtrOutput) ToAddressSpaceSpecNetworkPolicyPtrOutput() AddressSpaceSpecNetworkPolicyPtrOutput {
	return o
}

func (o AddressSpaceSpecNetworkPolicyPtrOutput) ToAddressSpaceSpecNetworkPolicyPtrOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyPtrOutput {
	return o
}

func (o AddressSpaceSpecNetworkPolicyPtrOutput) Elem() AddressSpaceSpecNetworkPolicyOutput {
	return o.ApplyT(func(v *AddressSpaceSpecNetworkPolicy) AddressSpaceSpecNetworkPolicy { return *v }).(AddressSpaceSpecNetworkPolicyOutput)
}

func (o AddressSpaceSpecNetworkPolicyPtrOutput) Egress() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *AddressSpaceSpecNetworkPolicy) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egress
	}).(pulumi.MapArrayOutput)
}

func (o AddressSpaceSpecNetworkPolicyPtrOutput) Ingress() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *AddressSpaceSpecNetworkPolicy) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(pulumi.MapArrayOutput)
}

type AddressSpaceSpecNetworkPolicyEgress struct {
}

// AddressSpaceSpecNetworkPolicyEgressInput is an input type that accepts AddressSpaceSpecNetworkPolicyEgressArgs and AddressSpaceSpecNetworkPolicyEgressOutput values.
// You can construct a concrete instance of `AddressSpaceSpecNetworkPolicyEgressInput` via:
//
//          AddressSpaceSpecNetworkPolicyEgressArgs{...}
type AddressSpaceSpecNetworkPolicyEgressInput interface {
	pulumi.Input

	ToAddressSpaceSpecNetworkPolicyEgressOutput() AddressSpaceSpecNetworkPolicyEgressOutput
	ToAddressSpaceSpecNetworkPolicyEgressOutputWithContext(context.Context) AddressSpaceSpecNetworkPolicyEgressOutput
}

type AddressSpaceSpecNetworkPolicyEgressArgs struct {
}

func (AddressSpaceSpecNetworkPolicyEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecNetworkPolicyEgress)(nil)).Elem()
}

func (i AddressSpaceSpecNetworkPolicyEgressArgs) ToAddressSpaceSpecNetworkPolicyEgressOutput() AddressSpaceSpecNetworkPolicyEgressOutput {
	return i.ToAddressSpaceSpecNetworkPolicyEgressOutputWithContext(context.Background())
}

func (i AddressSpaceSpecNetworkPolicyEgressArgs) ToAddressSpaceSpecNetworkPolicyEgressOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecNetworkPolicyEgressOutput)
}

type AddressSpaceSpecNetworkPolicyEgressOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecNetworkPolicyEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecNetworkPolicyEgress)(nil)).Elem()
}

func (o AddressSpaceSpecNetworkPolicyEgressOutput) ToAddressSpaceSpecNetworkPolicyEgressOutput() AddressSpaceSpecNetworkPolicyEgressOutput {
	return o
}

func (o AddressSpaceSpecNetworkPolicyEgressOutput) ToAddressSpaceSpecNetworkPolicyEgressOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyEgressOutput {
	return o
}

type AddressSpaceSpecNetworkPolicyIngress struct {
}

// AddressSpaceSpecNetworkPolicyIngressInput is an input type that accepts AddressSpaceSpecNetworkPolicyIngressArgs and AddressSpaceSpecNetworkPolicyIngressOutput values.
// You can construct a concrete instance of `AddressSpaceSpecNetworkPolicyIngressInput` via:
//
//          AddressSpaceSpecNetworkPolicyIngressArgs{...}
type AddressSpaceSpecNetworkPolicyIngressInput interface {
	pulumi.Input

	ToAddressSpaceSpecNetworkPolicyIngressOutput() AddressSpaceSpecNetworkPolicyIngressOutput
	ToAddressSpaceSpecNetworkPolicyIngressOutputWithContext(context.Context) AddressSpaceSpecNetworkPolicyIngressOutput
}

type AddressSpaceSpecNetworkPolicyIngressArgs struct {
}

func (AddressSpaceSpecNetworkPolicyIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecNetworkPolicyIngress)(nil)).Elem()
}

func (i AddressSpaceSpecNetworkPolicyIngressArgs) ToAddressSpaceSpecNetworkPolicyIngressOutput() AddressSpaceSpecNetworkPolicyIngressOutput {
	return i.ToAddressSpaceSpecNetworkPolicyIngressOutputWithContext(context.Background())
}

func (i AddressSpaceSpecNetworkPolicyIngressArgs) ToAddressSpaceSpecNetworkPolicyIngressOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceSpecNetworkPolicyIngressOutput)
}

type AddressSpaceSpecNetworkPolicyIngressOutput struct{ *pulumi.OutputState }

func (AddressSpaceSpecNetworkPolicyIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceSpecNetworkPolicyIngress)(nil)).Elem()
}

func (o AddressSpaceSpecNetworkPolicyIngressOutput) ToAddressSpaceSpecNetworkPolicyIngressOutput() AddressSpaceSpecNetworkPolicyIngressOutput {
	return o
}

func (o AddressSpaceSpecNetworkPolicyIngressOutput) ToAddressSpaceSpecNetworkPolicyIngressOutputWithContext(ctx context.Context) AddressSpaceSpecNetworkPolicyIngressOutput {
	return o
}

type AddressSpaceStatus struct {
	// CA certificate for endpoints.
	CaCert *string `pulumi:"caCert"`
	// Connector status for this address space.
	Connectors []AddressSpaceStatusConnectors `pulumi:"connectors"`
	// Endpoint status for this address space.
	EndpointStatuses []AddressSpaceStatusEndpointStatuses `pulumi:"endpointStatuses"`
	// Whether address space is ready to use or not.
	IsReady *bool `pulumi:"isReady"`
	// Status and error messages for address space.
	Messages []string `pulumi:"messages"`
	// Phase of address space.
	Phase *string `pulumi:"phase"`
	// Router status for this address space.
	Routers []AddressSpaceStatusRouters `pulumi:"routers"`
}

// AddressSpaceStatusInput is an input type that accepts AddressSpaceStatusArgs and AddressSpaceStatusOutput values.
// You can construct a concrete instance of `AddressSpaceStatusInput` via:
//
//          AddressSpaceStatusArgs{...}
type AddressSpaceStatusInput interface {
	pulumi.Input

	ToAddressSpaceStatusOutput() AddressSpaceStatusOutput
	ToAddressSpaceStatusOutputWithContext(context.Context) AddressSpaceStatusOutput
}

type AddressSpaceStatusArgs struct {
	// CA certificate for endpoints.
	CaCert pulumi.StringPtrInput `pulumi:"caCert"`
	// Connector status for this address space.
	Connectors AddressSpaceStatusConnectorsArrayInput `pulumi:"connectors"`
	// Endpoint status for this address space.
	EndpointStatuses AddressSpaceStatusEndpointStatusesArrayInput `pulumi:"endpointStatuses"`
	// Whether address space is ready to use or not.
	IsReady pulumi.BoolPtrInput `pulumi:"isReady"`
	// Status and error messages for address space.
	Messages pulumi.StringArrayInput `pulumi:"messages"`
	// Phase of address space.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// Router status for this address space.
	Routers AddressSpaceStatusRoutersArrayInput `pulumi:"routers"`
}

func (AddressSpaceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatus)(nil)).Elem()
}

func (i AddressSpaceStatusArgs) ToAddressSpaceStatusOutput() AddressSpaceStatusOutput {
	return i.ToAddressSpaceStatusOutputWithContext(context.Background())
}

func (i AddressSpaceStatusArgs) ToAddressSpaceStatusOutputWithContext(ctx context.Context) AddressSpaceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusOutput)
}

func (i AddressSpaceStatusArgs) ToAddressSpaceStatusPtrOutput() AddressSpaceStatusPtrOutput {
	return i.ToAddressSpaceStatusPtrOutputWithContext(context.Background())
}

func (i AddressSpaceStatusArgs) ToAddressSpaceStatusPtrOutputWithContext(ctx context.Context) AddressSpaceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusOutput).ToAddressSpaceStatusPtrOutputWithContext(ctx)
}

// AddressSpaceStatusPtrInput is an input type that accepts AddressSpaceStatusArgs, AddressSpaceStatusPtr and AddressSpaceStatusPtrOutput values.
// You can construct a concrete instance of `AddressSpaceStatusPtrInput` via:
//
//          AddressSpaceStatusArgs{...}
//
//  or:
//
//          nil
type AddressSpaceStatusPtrInput interface {
	pulumi.Input

	ToAddressSpaceStatusPtrOutput() AddressSpaceStatusPtrOutput
	ToAddressSpaceStatusPtrOutputWithContext(context.Context) AddressSpaceStatusPtrOutput
}

type addressSpaceStatusPtrType AddressSpaceStatusArgs

func AddressSpaceStatusPtr(v *AddressSpaceStatusArgs) AddressSpaceStatusPtrInput {
	return (*addressSpaceStatusPtrType)(v)
}

func (*addressSpaceStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceStatus)(nil)).Elem()
}

func (i *addressSpaceStatusPtrType) ToAddressSpaceStatusPtrOutput() AddressSpaceStatusPtrOutput {
	return i.ToAddressSpaceStatusPtrOutputWithContext(context.Background())
}

func (i *addressSpaceStatusPtrType) ToAddressSpaceStatusPtrOutputWithContext(ctx context.Context) AddressSpaceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusPtrOutput)
}

type AddressSpaceStatusOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatus)(nil)).Elem()
}

func (o AddressSpaceStatusOutput) ToAddressSpaceStatusOutput() AddressSpaceStatusOutput {
	return o
}

func (o AddressSpaceStatusOutput) ToAddressSpaceStatusOutputWithContext(ctx context.Context) AddressSpaceStatusOutput {
	return o
}

func (o AddressSpaceStatusOutput) ToAddressSpaceStatusPtrOutput() AddressSpaceStatusPtrOutput {
	return o.ToAddressSpaceStatusPtrOutputWithContext(context.Background())
}

func (o AddressSpaceStatusOutput) ToAddressSpaceStatusPtrOutputWithContext(ctx context.Context) AddressSpaceStatusPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatus) *AddressSpaceStatus {
		return &v
	}).(AddressSpaceStatusPtrOutput)
}

// CA certificate for endpoints.
func (o AddressSpaceStatusOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatus) *string { return v.CaCert }).(pulumi.StringPtrOutput)
}

// Connector status for this address space.
func (o AddressSpaceStatusOutput) Connectors() AddressSpaceStatusConnectorsArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatus) []AddressSpaceStatusConnectors { return v.Connectors }).(AddressSpaceStatusConnectorsArrayOutput)
}

// Endpoint status for this address space.
func (o AddressSpaceStatusOutput) EndpointStatuses() AddressSpaceStatusEndpointStatusesArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatus) []AddressSpaceStatusEndpointStatuses { return v.EndpointStatuses }).(AddressSpaceStatusEndpointStatusesArrayOutput)
}

// Whether address space is ready to use or not.
func (o AddressSpaceStatusOutput) IsReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatus) *bool { return v.IsReady }).(pulumi.BoolPtrOutput)
}

// Status and error messages for address space.
func (o AddressSpaceStatusOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatus) []string { return v.Messages }).(pulumi.StringArrayOutput)
}

// Phase of address space.
func (o AddressSpaceStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// Router status for this address space.
func (o AddressSpaceStatusOutput) Routers() AddressSpaceStatusRoutersArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatus) []AddressSpaceStatusRouters { return v.Routers }).(AddressSpaceStatusRoutersArrayOutput)
}

type AddressSpaceStatusPtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceStatus)(nil)).Elem()
}

func (o AddressSpaceStatusPtrOutput) ToAddressSpaceStatusPtrOutput() AddressSpaceStatusPtrOutput {
	return o
}

func (o AddressSpaceStatusPtrOutput) ToAddressSpaceStatusPtrOutputWithContext(ctx context.Context) AddressSpaceStatusPtrOutput {
	return o
}

func (o AddressSpaceStatusPtrOutput) Elem() AddressSpaceStatusOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) AddressSpaceStatus { return *v }).(AddressSpaceStatusOutput)
}

// CA certificate for endpoints.
func (o AddressSpaceStatusPtrOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) *string {
		if v == nil {
			return nil
		}
		return v.CaCert
	}).(pulumi.StringPtrOutput)
}

// Connector status for this address space.
func (o AddressSpaceStatusPtrOutput) Connectors() AddressSpaceStatusConnectorsArrayOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) []AddressSpaceStatusConnectors {
		if v == nil {
			return nil
		}
		return v.Connectors
	}).(AddressSpaceStatusConnectorsArrayOutput)
}

// Endpoint status for this address space.
func (o AddressSpaceStatusPtrOutput) EndpointStatuses() AddressSpaceStatusEndpointStatusesArrayOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) []AddressSpaceStatusEndpointStatuses {
		if v == nil {
			return nil
		}
		return v.EndpointStatuses
	}).(AddressSpaceStatusEndpointStatusesArrayOutput)
}

// Whether address space is ready to use or not.
func (o AddressSpaceStatusPtrOutput) IsReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) *bool {
		if v == nil {
			return nil
		}
		return v.IsReady
	}).(pulumi.BoolPtrOutput)
}

// Status and error messages for address space.
func (o AddressSpaceStatusPtrOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) []string {
		if v == nil {
			return nil
		}
		return v.Messages
	}).(pulumi.StringArrayOutput)
}

// Phase of address space.
func (o AddressSpaceStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// Router status for this address space.
func (o AddressSpaceStatusPtrOutput) Routers() AddressSpaceStatusRoutersArrayOutput {
	return o.ApplyT(func(v *AddressSpaceStatus) []AddressSpaceStatusRouters {
		if v == nil {
			return nil
		}
		return v.Routers
	}).(AddressSpaceStatusRoutersArrayOutput)
}

type AddressSpaceStatusConnectors struct {
	IsReady  *bool    `pulumi:"isReady"`
	Messages []string `pulumi:"messages"`
	Name     *string  `pulumi:"name"`
}

// AddressSpaceStatusConnectorsInput is an input type that accepts AddressSpaceStatusConnectorsArgs and AddressSpaceStatusConnectorsOutput values.
// You can construct a concrete instance of `AddressSpaceStatusConnectorsInput` via:
//
//          AddressSpaceStatusConnectorsArgs{...}
type AddressSpaceStatusConnectorsInput interface {
	pulumi.Input

	ToAddressSpaceStatusConnectorsOutput() AddressSpaceStatusConnectorsOutput
	ToAddressSpaceStatusConnectorsOutputWithContext(context.Context) AddressSpaceStatusConnectorsOutput
}

type AddressSpaceStatusConnectorsArgs struct {
	IsReady  pulumi.BoolPtrInput     `pulumi:"isReady"`
	Messages pulumi.StringArrayInput `pulumi:"messages"`
	Name     pulumi.StringPtrInput   `pulumi:"name"`
}

func (AddressSpaceStatusConnectorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusConnectors)(nil)).Elem()
}

func (i AddressSpaceStatusConnectorsArgs) ToAddressSpaceStatusConnectorsOutput() AddressSpaceStatusConnectorsOutput {
	return i.ToAddressSpaceStatusConnectorsOutputWithContext(context.Background())
}

func (i AddressSpaceStatusConnectorsArgs) ToAddressSpaceStatusConnectorsOutputWithContext(ctx context.Context) AddressSpaceStatusConnectorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusConnectorsOutput)
}

// AddressSpaceStatusConnectorsArrayInput is an input type that accepts AddressSpaceStatusConnectorsArray and AddressSpaceStatusConnectorsArrayOutput values.
// You can construct a concrete instance of `AddressSpaceStatusConnectorsArrayInput` via:
//
//          AddressSpaceStatusConnectorsArray{ AddressSpaceStatusConnectorsArgs{...} }
type AddressSpaceStatusConnectorsArrayInput interface {
	pulumi.Input

	ToAddressSpaceStatusConnectorsArrayOutput() AddressSpaceStatusConnectorsArrayOutput
	ToAddressSpaceStatusConnectorsArrayOutputWithContext(context.Context) AddressSpaceStatusConnectorsArrayOutput
}

type AddressSpaceStatusConnectorsArray []AddressSpaceStatusConnectorsInput

func (AddressSpaceStatusConnectorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceStatusConnectors)(nil)).Elem()
}

func (i AddressSpaceStatusConnectorsArray) ToAddressSpaceStatusConnectorsArrayOutput() AddressSpaceStatusConnectorsArrayOutput {
	return i.ToAddressSpaceStatusConnectorsArrayOutputWithContext(context.Background())
}

func (i AddressSpaceStatusConnectorsArray) ToAddressSpaceStatusConnectorsArrayOutputWithContext(ctx context.Context) AddressSpaceStatusConnectorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusConnectorsArrayOutput)
}

type AddressSpaceStatusConnectorsOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusConnectorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusConnectors)(nil)).Elem()
}

func (o AddressSpaceStatusConnectorsOutput) ToAddressSpaceStatusConnectorsOutput() AddressSpaceStatusConnectorsOutput {
	return o
}

func (o AddressSpaceStatusConnectorsOutput) ToAddressSpaceStatusConnectorsOutputWithContext(ctx context.Context) AddressSpaceStatusConnectorsOutput {
	return o
}

func (o AddressSpaceStatusConnectorsOutput) IsReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatusConnectors) *bool { return v.IsReady }).(pulumi.BoolPtrOutput)
}

func (o AddressSpaceStatusConnectorsOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatusConnectors) []string { return v.Messages }).(pulumi.StringArrayOutput)
}

func (o AddressSpaceStatusConnectorsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatusConnectors) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddressSpaceStatusConnectorsArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusConnectorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceStatusConnectors)(nil)).Elem()
}

func (o AddressSpaceStatusConnectorsArrayOutput) ToAddressSpaceStatusConnectorsArrayOutput() AddressSpaceStatusConnectorsArrayOutput {
	return o
}

func (o AddressSpaceStatusConnectorsArrayOutput) ToAddressSpaceStatusConnectorsArrayOutputWithContext(ctx context.Context) AddressSpaceStatusConnectorsArrayOutput {
	return o
}

func (o AddressSpaceStatusConnectorsArrayOutput) Index(i pulumi.IntInput) AddressSpaceStatusConnectorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceStatusConnectors {
		return vs[0].([]AddressSpaceStatusConnectors)[vs[1].(int)]
	}).(AddressSpaceStatusConnectorsOutput)
}

type AddressSpaceStatusEndpointStatuses struct {
	ExternalHost  *string                  `pulumi:"externalHost"`
	ExternalPorts []map[string]interface{} `pulumi:"externalPorts"`
	Messages      []string                 `pulumi:"messages"`
	Name          *string                  `pulumi:"name"`
	ServiceHost   *string                  `pulumi:"serviceHost"`
	ServicePorts  []map[string]interface{} `pulumi:"servicePorts"`
}

// AddressSpaceStatusEndpointStatusesInput is an input type that accepts AddressSpaceStatusEndpointStatusesArgs and AddressSpaceStatusEndpointStatusesOutput values.
// You can construct a concrete instance of `AddressSpaceStatusEndpointStatusesInput` via:
//
//          AddressSpaceStatusEndpointStatusesArgs{...}
type AddressSpaceStatusEndpointStatusesInput interface {
	pulumi.Input

	ToAddressSpaceStatusEndpointStatusesOutput() AddressSpaceStatusEndpointStatusesOutput
	ToAddressSpaceStatusEndpointStatusesOutputWithContext(context.Context) AddressSpaceStatusEndpointStatusesOutput
}

type AddressSpaceStatusEndpointStatusesArgs struct {
	ExternalHost  pulumi.StringPtrInput   `pulumi:"externalHost"`
	ExternalPorts pulumi.MapArrayInput    `pulumi:"externalPorts"`
	Messages      pulumi.StringArrayInput `pulumi:"messages"`
	Name          pulumi.StringPtrInput   `pulumi:"name"`
	ServiceHost   pulumi.StringPtrInput   `pulumi:"serviceHost"`
	ServicePorts  pulumi.MapArrayInput    `pulumi:"servicePorts"`
}

func (AddressSpaceStatusEndpointStatusesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusEndpointStatuses)(nil)).Elem()
}

func (i AddressSpaceStatusEndpointStatusesArgs) ToAddressSpaceStatusEndpointStatusesOutput() AddressSpaceStatusEndpointStatusesOutput {
	return i.ToAddressSpaceStatusEndpointStatusesOutputWithContext(context.Background())
}

func (i AddressSpaceStatusEndpointStatusesArgs) ToAddressSpaceStatusEndpointStatusesOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusEndpointStatusesOutput)
}

// AddressSpaceStatusEndpointStatusesArrayInput is an input type that accepts AddressSpaceStatusEndpointStatusesArray and AddressSpaceStatusEndpointStatusesArrayOutput values.
// You can construct a concrete instance of `AddressSpaceStatusEndpointStatusesArrayInput` via:
//
//          AddressSpaceStatusEndpointStatusesArray{ AddressSpaceStatusEndpointStatusesArgs{...} }
type AddressSpaceStatusEndpointStatusesArrayInput interface {
	pulumi.Input

	ToAddressSpaceStatusEndpointStatusesArrayOutput() AddressSpaceStatusEndpointStatusesArrayOutput
	ToAddressSpaceStatusEndpointStatusesArrayOutputWithContext(context.Context) AddressSpaceStatusEndpointStatusesArrayOutput
}

type AddressSpaceStatusEndpointStatusesArray []AddressSpaceStatusEndpointStatusesInput

func (AddressSpaceStatusEndpointStatusesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceStatusEndpointStatuses)(nil)).Elem()
}

func (i AddressSpaceStatusEndpointStatusesArray) ToAddressSpaceStatusEndpointStatusesArrayOutput() AddressSpaceStatusEndpointStatusesArrayOutput {
	return i.ToAddressSpaceStatusEndpointStatusesArrayOutputWithContext(context.Background())
}

func (i AddressSpaceStatusEndpointStatusesArray) ToAddressSpaceStatusEndpointStatusesArrayOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusEndpointStatusesArrayOutput)
}

type AddressSpaceStatusEndpointStatusesOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusEndpointStatusesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusEndpointStatuses)(nil)).Elem()
}

func (o AddressSpaceStatusEndpointStatusesOutput) ToAddressSpaceStatusEndpointStatusesOutput() AddressSpaceStatusEndpointStatusesOutput {
	return o
}

func (o AddressSpaceStatusEndpointStatusesOutput) ToAddressSpaceStatusEndpointStatusesOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesOutput {
	return o
}

func (o AddressSpaceStatusEndpointStatusesOutput) ExternalHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatusEndpointStatuses) *string { return v.ExternalHost }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceStatusEndpointStatusesOutput) ExternalPorts() pulumi.MapArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatusEndpointStatuses) []map[string]interface{} { return v.ExternalPorts }).(pulumi.MapArrayOutput)
}

func (o AddressSpaceStatusEndpointStatusesOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatusEndpointStatuses) []string { return v.Messages }).(pulumi.StringArrayOutput)
}

func (o AddressSpaceStatusEndpointStatusesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatusEndpointStatuses) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceStatusEndpointStatusesOutput) ServiceHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatusEndpointStatuses) *string { return v.ServiceHost }).(pulumi.StringPtrOutput)
}

func (o AddressSpaceStatusEndpointStatusesOutput) ServicePorts() pulumi.MapArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatusEndpointStatuses) []map[string]interface{} { return v.ServicePorts }).(pulumi.MapArrayOutput)
}

type AddressSpaceStatusEndpointStatusesArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusEndpointStatusesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceStatusEndpointStatuses)(nil)).Elem()
}

func (o AddressSpaceStatusEndpointStatusesArrayOutput) ToAddressSpaceStatusEndpointStatusesArrayOutput() AddressSpaceStatusEndpointStatusesArrayOutput {
	return o
}

func (o AddressSpaceStatusEndpointStatusesArrayOutput) ToAddressSpaceStatusEndpointStatusesArrayOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesArrayOutput {
	return o
}

func (o AddressSpaceStatusEndpointStatusesArrayOutput) Index(i pulumi.IntInput) AddressSpaceStatusEndpointStatusesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceStatusEndpointStatuses {
		return vs[0].([]AddressSpaceStatusEndpointStatuses)[vs[1].(int)]
	}).(AddressSpaceStatusEndpointStatusesOutput)
}

type AddressSpaceStatusEndpointStatusesExternalPorts struct {
}

// AddressSpaceStatusEndpointStatusesExternalPortsInput is an input type that accepts AddressSpaceStatusEndpointStatusesExternalPortsArgs and AddressSpaceStatusEndpointStatusesExternalPortsOutput values.
// You can construct a concrete instance of `AddressSpaceStatusEndpointStatusesExternalPortsInput` via:
//
//          AddressSpaceStatusEndpointStatusesExternalPortsArgs{...}
type AddressSpaceStatusEndpointStatusesExternalPortsInput interface {
	pulumi.Input

	ToAddressSpaceStatusEndpointStatusesExternalPortsOutput() AddressSpaceStatusEndpointStatusesExternalPortsOutput
	ToAddressSpaceStatusEndpointStatusesExternalPortsOutputWithContext(context.Context) AddressSpaceStatusEndpointStatusesExternalPortsOutput
}

type AddressSpaceStatusEndpointStatusesExternalPortsArgs struct {
}

func (AddressSpaceStatusEndpointStatusesExternalPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusEndpointStatusesExternalPorts)(nil)).Elem()
}

func (i AddressSpaceStatusEndpointStatusesExternalPortsArgs) ToAddressSpaceStatusEndpointStatusesExternalPortsOutput() AddressSpaceStatusEndpointStatusesExternalPortsOutput {
	return i.ToAddressSpaceStatusEndpointStatusesExternalPortsOutputWithContext(context.Background())
}

func (i AddressSpaceStatusEndpointStatusesExternalPortsArgs) ToAddressSpaceStatusEndpointStatusesExternalPortsOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesExternalPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusEndpointStatusesExternalPortsOutput)
}

type AddressSpaceStatusEndpointStatusesExternalPortsOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusEndpointStatusesExternalPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusEndpointStatusesExternalPorts)(nil)).Elem()
}

func (o AddressSpaceStatusEndpointStatusesExternalPortsOutput) ToAddressSpaceStatusEndpointStatusesExternalPortsOutput() AddressSpaceStatusEndpointStatusesExternalPortsOutput {
	return o
}

func (o AddressSpaceStatusEndpointStatusesExternalPortsOutput) ToAddressSpaceStatusEndpointStatusesExternalPortsOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesExternalPortsOutput {
	return o
}

type AddressSpaceStatusEndpointStatusesServicePorts struct {
}

// AddressSpaceStatusEndpointStatusesServicePortsInput is an input type that accepts AddressSpaceStatusEndpointStatusesServicePortsArgs and AddressSpaceStatusEndpointStatusesServicePortsOutput values.
// You can construct a concrete instance of `AddressSpaceStatusEndpointStatusesServicePortsInput` via:
//
//          AddressSpaceStatusEndpointStatusesServicePortsArgs{...}
type AddressSpaceStatusEndpointStatusesServicePortsInput interface {
	pulumi.Input

	ToAddressSpaceStatusEndpointStatusesServicePortsOutput() AddressSpaceStatusEndpointStatusesServicePortsOutput
	ToAddressSpaceStatusEndpointStatusesServicePortsOutputWithContext(context.Context) AddressSpaceStatusEndpointStatusesServicePortsOutput
}

type AddressSpaceStatusEndpointStatusesServicePortsArgs struct {
}

func (AddressSpaceStatusEndpointStatusesServicePortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusEndpointStatusesServicePorts)(nil)).Elem()
}

func (i AddressSpaceStatusEndpointStatusesServicePortsArgs) ToAddressSpaceStatusEndpointStatusesServicePortsOutput() AddressSpaceStatusEndpointStatusesServicePortsOutput {
	return i.ToAddressSpaceStatusEndpointStatusesServicePortsOutputWithContext(context.Background())
}

func (i AddressSpaceStatusEndpointStatusesServicePortsArgs) ToAddressSpaceStatusEndpointStatusesServicePortsOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesServicePortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusEndpointStatusesServicePortsOutput)
}

type AddressSpaceStatusEndpointStatusesServicePortsOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusEndpointStatusesServicePortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusEndpointStatusesServicePorts)(nil)).Elem()
}

func (o AddressSpaceStatusEndpointStatusesServicePortsOutput) ToAddressSpaceStatusEndpointStatusesServicePortsOutput() AddressSpaceStatusEndpointStatusesServicePortsOutput {
	return o
}

func (o AddressSpaceStatusEndpointStatusesServicePortsOutput) ToAddressSpaceStatusEndpointStatusesServicePortsOutputWithContext(ctx context.Context) AddressSpaceStatusEndpointStatusesServicePortsOutput {
	return o
}

type AddressSpaceStatusRouters struct {
	Id          string   `pulumi:"id"`
	Neighbors   []string `pulumi:"neighbors"`
	Undelivered *int     `pulumi:"undelivered"`
}

// AddressSpaceStatusRoutersInput is an input type that accepts AddressSpaceStatusRoutersArgs and AddressSpaceStatusRoutersOutput values.
// You can construct a concrete instance of `AddressSpaceStatusRoutersInput` via:
//
//          AddressSpaceStatusRoutersArgs{...}
type AddressSpaceStatusRoutersInput interface {
	pulumi.Input

	ToAddressSpaceStatusRoutersOutput() AddressSpaceStatusRoutersOutput
	ToAddressSpaceStatusRoutersOutputWithContext(context.Context) AddressSpaceStatusRoutersOutput
}

type AddressSpaceStatusRoutersArgs struct {
	Id          pulumi.StringInput      `pulumi:"id"`
	Neighbors   pulumi.StringArrayInput `pulumi:"neighbors"`
	Undelivered pulumi.IntPtrInput      `pulumi:"undelivered"`
}

func (AddressSpaceStatusRoutersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusRouters)(nil)).Elem()
}

func (i AddressSpaceStatusRoutersArgs) ToAddressSpaceStatusRoutersOutput() AddressSpaceStatusRoutersOutput {
	return i.ToAddressSpaceStatusRoutersOutputWithContext(context.Background())
}

func (i AddressSpaceStatusRoutersArgs) ToAddressSpaceStatusRoutersOutputWithContext(ctx context.Context) AddressSpaceStatusRoutersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusRoutersOutput)
}

// AddressSpaceStatusRoutersArrayInput is an input type that accepts AddressSpaceStatusRoutersArray and AddressSpaceStatusRoutersArrayOutput values.
// You can construct a concrete instance of `AddressSpaceStatusRoutersArrayInput` via:
//
//          AddressSpaceStatusRoutersArray{ AddressSpaceStatusRoutersArgs{...} }
type AddressSpaceStatusRoutersArrayInput interface {
	pulumi.Input

	ToAddressSpaceStatusRoutersArrayOutput() AddressSpaceStatusRoutersArrayOutput
	ToAddressSpaceStatusRoutersArrayOutputWithContext(context.Context) AddressSpaceStatusRoutersArrayOutput
}

type AddressSpaceStatusRoutersArray []AddressSpaceStatusRoutersInput

func (AddressSpaceStatusRoutersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceStatusRouters)(nil)).Elem()
}

func (i AddressSpaceStatusRoutersArray) ToAddressSpaceStatusRoutersArrayOutput() AddressSpaceStatusRoutersArrayOutput {
	return i.ToAddressSpaceStatusRoutersArrayOutputWithContext(context.Background())
}

func (i AddressSpaceStatusRoutersArray) ToAddressSpaceStatusRoutersArrayOutputWithContext(ctx context.Context) AddressSpaceStatusRoutersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceStatusRoutersArrayOutput)
}

type AddressSpaceStatusRoutersOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusRoutersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceStatusRouters)(nil)).Elem()
}

func (o AddressSpaceStatusRoutersOutput) ToAddressSpaceStatusRoutersOutput() AddressSpaceStatusRoutersOutput {
	return o
}

func (o AddressSpaceStatusRoutersOutput) ToAddressSpaceStatusRoutersOutputWithContext(ctx context.Context) AddressSpaceStatusRoutersOutput {
	return o
}

func (o AddressSpaceStatusRoutersOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpaceStatusRouters) string { return v.Id }).(pulumi.StringOutput)
}

func (o AddressSpaceStatusRoutersOutput) Neighbors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceStatusRouters) []string { return v.Neighbors }).(pulumi.StringArrayOutput)
}

func (o AddressSpaceStatusRoutersOutput) Undelivered() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpaceStatusRouters) *int { return v.Undelivered }).(pulumi.IntPtrOutput)
}

type AddressSpaceStatusRoutersArrayOutput struct{ *pulumi.OutputState }

func (AddressSpaceStatusRoutersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpaceStatusRouters)(nil)).Elem()
}

func (o AddressSpaceStatusRoutersArrayOutput) ToAddressSpaceStatusRoutersArrayOutput() AddressSpaceStatusRoutersArrayOutput {
	return o
}

func (o AddressSpaceStatusRoutersArrayOutput) ToAddressSpaceStatusRoutersArrayOutputWithContext(ctx context.Context) AddressSpaceStatusRoutersArrayOutput {
	return o
}

func (o AddressSpaceStatusRoutersArrayOutput) Index(i pulumi.IntInput) AddressSpaceStatusRoutersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpaceStatusRouters {
		return vs[0].([]AddressSpaceStatusRouters)[vs[1].(int)]
	}).(AddressSpaceStatusRoutersOutput)
}

type AddressSpec struct {
	// Messaging address.
	Address string `pulumi:"address"`
	// Address forwarders for this address.
	Forwarders []AddressSpecForwarders `pulumi:"forwarders"`
	// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
	MessageTtl *AddressSpecMessageTtl `pulumi:"messageTtl"`
	// Plan referenced by this address.
	Plan string `pulumi:"plan"`
	// Properties that can be set for subscription type addresses.
	Subscription *AddressSpecSubscription `pulumi:"subscription"`
	// Address of topic that this subscription refers to (only applicable to subscription types).
	Topic *string `pulumi:"topic"`
	// Address type for this address.
	Type string `pulumi:"type"`
}

// AddressSpecInput is an input type that accepts AddressSpecArgs and AddressSpecOutput values.
// You can construct a concrete instance of `AddressSpecInput` via:
//
//          AddressSpecArgs{...}
type AddressSpecInput interface {
	pulumi.Input

	ToAddressSpecOutput() AddressSpecOutput
	ToAddressSpecOutputWithContext(context.Context) AddressSpecOutput
}

type AddressSpecArgs struct {
	// Messaging address.
	Address pulumi.StringInput `pulumi:"address"`
	// Address forwarders for this address.
	Forwarders AddressSpecForwardersArrayInput `pulumi:"forwarders"`
	// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
	MessageTtl AddressSpecMessageTtlPtrInput `pulumi:"messageTtl"`
	// Plan referenced by this address.
	Plan pulumi.StringInput `pulumi:"plan"`
	// Properties that can be set for subscription type addresses.
	Subscription AddressSpecSubscriptionPtrInput `pulumi:"subscription"`
	// Address of topic that this subscription refers to (only applicable to subscription types).
	Topic pulumi.StringPtrInput `pulumi:"topic"`
	// Address type for this address.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AddressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpec)(nil)).Elem()
}

func (i AddressSpecArgs) ToAddressSpecOutput() AddressSpecOutput {
	return i.ToAddressSpecOutputWithContext(context.Background())
}

func (i AddressSpecArgs) ToAddressSpecOutputWithContext(ctx context.Context) AddressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecOutput)
}

func (i AddressSpecArgs) ToAddressSpecPtrOutput() AddressSpecPtrOutput {
	return i.ToAddressSpecPtrOutputWithContext(context.Background())
}

func (i AddressSpecArgs) ToAddressSpecPtrOutputWithContext(ctx context.Context) AddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecOutput).ToAddressSpecPtrOutputWithContext(ctx)
}

// AddressSpecPtrInput is an input type that accepts AddressSpecArgs, AddressSpecPtr and AddressSpecPtrOutput values.
// You can construct a concrete instance of `AddressSpecPtrInput` via:
//
//          AddressSpecArgs{...}
//
//  or:
//
//          nil
type AddressSpecPtrInput interface {
	pulumi.Input

	ToAddressSpecPtrOutput() AddressSpecPtrOutput
	ToAddressSpecPtrOutputWithContext(context.Context) AddressSpecPtrOutput
}

type addressSpecPtrType AddressSpecArgs

func AddressSpecPtr(v *AddressSpecArgs) AddressSpecPtrInput {
	return (*addressSpecPtrType)(v)
}

func (*addressSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpec)(nil)).Elem()
}

func (i *addressSpecPtrType) ToAddressSpecPtrOutput() AddressSpecPtrOutput {
	return i.ToAddressSpecPtrOutputWithContext(context.Background())
}

func (i *addressSpecPtrType) ToAddressSpecPtrOutputWithContext(ctx context.Context) AddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecPtrOutput)
}

type AddressSpecOutput struct{ *pulumi.OutputState }

func (AddressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpec)(nil)).Elem()
}

func (o AddressSpecOutput) ToAddressSpecOutput() AddressSpecOutput {
	return o
}

func (o AddressSpecOutput) ToAddressSpecOutputWithContext(ctx context.Context) AddressSpecOutput {
	return o
}

func (o AddressSpecOutput) ToAddressSpecPtrOutput() AddressSpecPtrOutput {
	return o.ToAddressSpecPtrOutputWithContext(context.Background())
}

func (o AddressSpecOutput) ToAddressSpecPtrOutputWithContext(ctx context.Context) AddressSpecPtrOutput {
	return o.ApplyT(func(v AddressSpec) *AddressSpec {
		return &v
	}).(AddressSpecPtrOutput)
}

// Messaging address.
func (o AddressSpecOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpec) string { return v.Address }).(pulumi.StringOutput)
}

// Address forwarders for this address.
func (o AddressSpecOutput) Forwarders() AddressSpecForwardersArrayOutput {
	return o.ApplyT(func(v AddressSpec) []AddressSpecForwarders { return v.Forwarders }).(AddressSpecForwardersArrayOutput)
}

// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
func (o AddressSpecOutput) MessageTtl() AddressSpecMessageTtlPtrOutput {
	return o.ApplyT(func(v AddressSpec) *AddressSpecMessageTtl { return v.MessageTtl }).(AddressSpecMessageTtlPtrOutput)
}

// Plan referenced by this address.
func (o AddressSpecOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpec) string { return v.Plan }).(pulumi.StringOutput)
}

// Properties that can be set for subscription type addresses.
func (o AddressSpecOutput) Subscription() AddressSpecSubscriptionPtrOutput {
	return o.ApplyT(func(v AddressSpec) *AddressSpecSubscription { return v.Subscription }).(AddressSpecSubscriptionPtrOutput)
}

// Address of topic that this subscription refers to (only applicable to subscription types).
func (o AddressSpecOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressSpec) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Address type for this address.
func (o AddressSpecOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpec) string { return v.Type }).(pulumi.StringOutput)
}

type AddressSpecPtrOutput struct{ *pulumi.OutputState }

func (AddressSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpec)(nil)).Elem()
}

func (o AddressSpecPtrOutput) ToAddressSpecPtrOutput() AddressSpecPtrOutput {
	return o
}

func (o AddressSpecPtrOutput) ToAddressSpecPtrOutputWithContext(ctx context.Context) AddressSpecPtrOutput {
	return o
}

func (o AddressSpecPtrOutput) Elem() AddressSpecOutput {
	return o.ApplyT(func(v *AddressSpec) AddressSpec { return *v }).(AddressSpecOutput)
}

// Messaging address.
func (o AddressSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// Address forwarders for this address.
func (o AddressSpecPtrOutput) Forwarders() AddressSpecForwardersArrayOutput {
	return o.ApplyT(func(v *AddressSpec) []AddressSpecForwarders {
		if v == nil {
			return nil
		}
		return v.Forwarders
	}).(AddressSpecForwardersArrayOutput)
}

// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
func (o AddressSpecPtrOutput) MessageTtl() AddressSpecMessageTtlPtrOutput {
	return o.ApplyT(func(v *AddressSpec) *AddressSpecMessageTtl {
		if v == nil {
			return nil
		}
		return v.MessageTtl
	}).(AddressSpecMessageTtlPtrOutput)
}

// Plan referenced by this address.
func (o AddressSpecPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

// Properties that can be set for subscription type addresses.
func (o AddressSpecPtrOutput) Subscription() AddressSpecSubscriptionPtrOutput {
	return o.ApplyT(func(v *AddressSpec) *AddressSpecSubscription {
		if v == nil {
			return nil
		}
		return v.Subscription
	}).(AddressSpecSubscriptionPtrOutput)
}

// Address of topic that this subscription refers to (only applicable to subscription types).
func (o AddressSpecPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpec) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Address type for this address.
func (o AddressSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AddressSpecForwarders struct {
	Direction string `pulumi:"direction"`
	// Forwarder name.
	Name string `pulumi:"name"`
	// Remote address to forward to. Must be prefixed with connector name.
	RemoteAddress string `pulumi:"remoteAddress"`
}

// AddressSpecForwardersInput is an input type that accepts AddressSpecForwardersArgs and AddressSpecForwardersOutput values.
// You can construct a concrete instance of `AddressSpecForwardersInput` via:
//
//          AddressSpecForwardersArgs{...}
type AddressSpecForwardersInput interface {
	pulumi.Input

	ToAddressSpecForwardersOutput() AddressSpecForwardersOutput
	ToAddressSpecForwardersOutputWithContext(context.Context) AddressSpecForwardersOutput
}

type AddressSpecForwardersArgs struct {
	Direction pulumi.StringInput `pulumi:"direction"`
	// Forwarder name.
	Name pulumi.StringInput `pulumi:"name"`
	// Remote address to forward to. Must be prefixed with connector name.
	RemoteAddress pulumi.StringInput `pulumi:"remoteAddress"`
}

func (AddressSpecForwardersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpecForwarders)(nil)).Elem()
}

func (i AddressSpecForwardersArgs) ToAddressSpecForwardersOutput() AddressSpecForwardersOutput {
	return i.ToAddressSpecForwardersOutputWithContext(context.Background())
}

func (i AddressSpecForwardersArgs) ToAddressSpecForwardersOutputWithContext(ctx context.Context) AddressSpecForwardersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecForwardersOutput)
}

// AddressSpecForwardersArrayInput is an input type that accepts AddressSpecForwardersArray and AddressSpecForwardersArrayOutput values.
// You can construct a concrete instance of `AddressSpecForwardersArrayInput` via:
//
//          AddressSpecForwardersArray{ AddressSpecForwardersArgs{...} }
type AddressSpecForwardersArrayInput interface {
	pulumi.Input

	ToAddressSpecForwardersArrayOutput() AddressSpecForwardersArrayOutput
	ToAddressSpecForwardersArrayOutputWithContext(context.Context) AddressSpecForwardersArrayOutput
}

type AddressSpecForwardersArray []AddressSpecForwardersInput

func (AddressSpecForwardersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpecForwarders)(nil)).Elem()
}

func (i AddressSpecForwardersArray) ToAddressSpecForwardersArrayOutput() AddressSpecForwardersArrayOutput {
	return i.ToAddressSpecForwardersArrayOutputWithContext(context.Background())
}

func (i AddressSpecForwardersArray) ToAddressSpecForwardersArrayOutputWithContext(ctx context.Context) AddressSpecForwardersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecForwardersArrayOutput)
}

type AddressSpecForwardersOutput struct{ *pulumi.OutputState }

func (AddressSpecForwardersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpecForwarders)(nil)).Elem()
}

func (o AddressSpecForwardersOutput) ToAddressSpecForwardersOutput() AddressSpecForwardersOutput {
	return o
}

func (o AddressSpecForwardersOutput) ToAddressSpecForwardersOutputWithContext(ctx context.Context) AddressSpecForwardersOutput {
	return o
}

func (o AddressSpecForwardersOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpecForwarders) string { return v.Direction }).(pulumi.StringOutput)
}

// Forwarder name.
func (o AddressSpecForwardersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpecForwarders) string { return v.Name }).(pulumi.StringOutput)
}

// Remote address to forward to. Must be prefixed with connector name.
func (o AddressSpecForwardersOutput) RemoteAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AddressSpecForwarders) string { return v.RemoteAddress }).(pulumi.StringOutput)
}

type AddressSpecForwardersArrayOutput struct{ *pulumi.OutputState }

func (AddressSpecForwardersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressSpecForwarders)(nil)).Elem()
}

func (o AddressSpecForwardersArrayOutput) ToAddressSpecForwardersArrayOutput() AddressSpecForwardersArrayOutput {
	return o
}

func (o AddressSpecForwardersArrayOutput) ToAddressSpecForwardersArrayOutputWithContext(ctx context.Context) AddressSpecForwardersArrayOutput {
	return o
}

func (o AddressSpecForwardersArrayOutput) Index(i pulumi.IntInput) AddressSpecForwardersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressSpecForwarders {
		return vs[0].([]AddressSpecForwarders)[vs[1].(int)]
	}).(AddressSpecForwardersOutput)
}

// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
type AddressSpecMessageTtl struct {
	// Imposes a maximum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values greater than this value (or no TTL value) will have their expiration adjusted.
	Maximum *int `pulumi:"maximum"`
	// Imposes a minimum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values less than this value will have their expiration adjusted.
	Minimum *int `pulumi:"minimum"`
}

// AddressSpecMessageTtlInput is an input type that accepts AddressSpecMessageTtlArgs and AddressSpecMessageTtlOutput values.
// You can construct a concrete instance of `AddressSpecMessageTtlInput` via:
//
//          AddressSpecMessageTtlArgs{...}
type AddressSpecMessageTtlInput interface {
	pulumi.Input

	ToAddressSpecMessageTtlOutput() AddressSpecMessageTtlOutput
	ToAddressSpecMessageTtlOutputWithContext(context.Context) AddressSpecMessageTtlOutput
}

// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
type AddressSpecMessageTtlArgs struct {
	// Imposes a maximum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values greater than this value (or no TTL value) will have their expiration adjusted.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Imposes a minimum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values less than this value will have their expiration adjusted.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
}

func (AddressSpecMessageTtlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpecMessageTtl)(nil)).Elem()
}

func (i AddressSpecMessageTtlArgs) ToAddressSpecMessageTtlOutput() AddressSpecMessageTtlOutput {
	return i.ToAddressSpecMessageTtlOutputWithContext(context.Background())
}

func (i AddressSpecMessageTtlArgs) ToAddressSpecMessageTtlOutputWithContext(ctx context.Context) AddressSpecMessageTtlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecMessageTtlOutput)
}

func (i AddressSpecMessageTtlArgs) ToAddressSpecMessageTtlPtrOutput() AddressSpecMessageTtlPtrOutput {
	return i.ToAddressSpecMessageTtlPtrOutputWithContext(context.Background())
}

func (i AddressSpecMessageTtlArgs) ToAddressSpecMessageTtlPtrOutputWithContext(ctx context.Context) AddressSpecMessageTtlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecMessageTtlOutput).ToAddressSpecMessageTtlPtrOutputWithContext(ctx)
}

// AddressSpecMessageTtlPtrInput is an input type that accepts AddressSpecMessageTtlArgs, AddressSpecMessageTtlPtr and AddressSpecMessageTtlPtrOutput values.
// You can construct a concrete instance of `AddressSpecMessageTtlPtrInput` via:
//
//          AddressSpecMessageTtlArgs{...}
//
//  or:
//
//          nil
type AddressSpecMessageTtlPtrInput interface {
	pulumi.Input

	ToAddressSpecMessageTtlPtrOutput() AddressSpecMessageTtlPtrOutput
	ToAddressSpecMessageTtlPtrOutputWithContext(context.Context) AddressSpecMessageTtlPtrOutput
}

type addressSpecMessageTtlPtrType AddressSpecMessageTtlArgs

func AddressSpecMessageTtlPtr(v *AddressSpecMessageTtlArgs) AddressSpecMessageTtlPtrInput {
	return (*addressSpecMessageTtlPtrType)(v)
}

func (*addressSpecMessageTtlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpecMessageTtl)(nil)).Elem()
}

func (i *addressSpecMessageTtlPtrType) ToAddressSpecMessageTtlPtrOutput() AddressSpecMessageTtlPtrOutput {
	return i.ToAddressSpecMessageTtlPtrOutputWithContext(context.Background())
}

func (i *addressSpecMessageTtlPtrType) ToAddressSpecMessageTtlPtrOutputWithContext(ctx context.Context) AddressSpecMessageTtlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecMessageTtlPtrOutput)
}

// Further restricts message time-to-live (TTL). Applies to address types queue and topic only. The maximum and minimum values must fall with the minimum/maximum range described by the plan's TTL settings.
type AddressSpecMessageTtlOutput struct{ *pulumi.OutputState }

func (AddressSpecMessageTtlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpecMessageTtl)(nil)).Elem()
}

func (o AddressSpecMessageTtlOutput) ToAddressSpecMessageTtlOutput() AddressSpecMessageTtlOutput {
	return o
}

func (o AddressSpecMessageTtlOutput) ToAddressSpecMessageTtlOutputWithContext(ctx context.Context) AddressSpecMessageTtlOutput {
	return o
}

func (o AddressSpecMessageTtlOutput) ToAddressSpecMessageTtlPtrOutput() AddressSpecMessageTtlPtrOutput {
	return o.ToAddressSpecMessageTtlPtrOutputWithContext(context.Background())
}

func (o AddressSpecMessageTtlOutput) ToAddressSpecMessageTtlPtrOutputWithContext(ctx context.Context) AddressSpecMessageTtlPtrOutput {
	return o.ApplyT(func(v AddressSpecMessageTtl) *AddressSpecMessageTtl {
		return &v
	}).(AddressSpecMessageTtlPtrOutput)
}

// Imposes a maximum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values greater than this value (or no TTL value) will have their expiration adjusted.
func (o AddressSpecMessageTtlOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpecMessageTtl) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Imposes a minimum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values less than this value will have their expiration adjusted.
func (o AddressSpecMessageTtlOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpecMessageTtl) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

type AddressSpecMessageTtlPtrOutput struct{ *pulumi.OutputState }

func (AddressSpecMessageTtlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpecMessageTtl)(nil)).Elem()
}

func (o AddressSpecMessageTtlPtrOutput) ToAddressSpecMessageTtlPtrOutput() AddressSpecMessageTtlPtrOutput {
	return o
}

func (o AddressSpecMessageTtlPtrOutput) ToAddressSpecMessageTtlPtrOutputWithContext(ctx context.Context) AddressSpecMessageTtlPtrOutput {
	return o
}

func (o AddressSpecMessageTtlPtrOutput) Elem() AddressSpecMessageTtlOutput {
	return o.ApplyT(func(v *AddressSpecMessageTtl) AddressSpecMessageTtl { return *v }).(AddressSpecMessageTtlOutput)
}

// Imposes a maximum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values greater than this value (or no TTL value) will have their expiration adjusted.
func (o AddressSpecMessageTtlPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressSpecMessageTtl) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Imposes a minimum TTL value (in milliseconds) for messages arriving at the address.  Messages arriving with TTL values less than this value will have their expiration adjusted.
func (o AddressSpecMessageTtlPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressSpecMessageTtl) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Properties that can be set for subscription type addresses.
type AddressSpecSubscription struct {
	// Maximum number of concurrent consumers that can be attached to this subscription. If unspecified, 1 consumer is allowed per subscription
	MaxConsumers *int `pulumi:"maxConsumers"`
}

// AddressSpecSubscriptionInput is an input type that accepts AddressSpecSubscriptionArgs and AddressSpecSubscriptionOutput values.
// You can construct a concrete instance of `AddressSpecSubscriptionInput` via:
//
//          AddressSpecSubscriptionArgs{...}
type AddressSpecSubscriptionInput interface {
	pulumi.Input

	ToAddressSpecSubscriptionOutput() AddressSpecSubscriptionOutput
	ToAddressSpecSubscriptionOutputWithContext(context.Context) AddressSpecSubscriptionOutput
}

// Properties that can be set for subscription type addresses.
type AddressSpecSubscriptionArgs struct {
	// Maximum number of concurrent consumers that can be attached to this subscription. If unspecified, 1 consumer is allowed per subscription
	MaxConsumers pulumi.IntPtrInput `pulumi:"maxConsumers"`
}

func (AddressSpecSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpecSubscription)(nil)).Elem()
}

func (i AddressSpecSubscriptionArgs) ToAddressSpecSubscriptionOutput() AddressSpecSubscriptionOutput {
	return i.ToAddressSpecSubscriptionOutputWithContext(context.Background())
}

func (i AddressSpecSubscriptionArgs) ToAddressSpecSubscriptionOutputWithContext(ctx context.Context) AddressSpecSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecSubscriptionOutput)
}

func (i AddressSpecSubscriptionArgs) ToAddressSpecSubscriptionPtrOutput() AddressSpecSubscriptionPtrOutput {
	return i.ToAddressSpecSubscriptionPtrOutputWithContext(context.Background())
}

func (i AddressSpecSubscriptionArgs) ToAddressSpecSubscriptionPtrOutputWithContext(ctx context.Context) AddressSpecSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecSubscriptionOutput).ToAddressSpecSubscriptionPtrOutputWithContext(ctx)
}

// AddressSpecSubscriptionPtrInput is an input type that accepts AddressSpecSubscriptionArgs, AddressSpecSubscriptionPtr and AddressSpecSubscriptionPtrOutput values.
// You can construct a concrete instance of `AddressSpecSubscriptionPtrInput` via:
//
//          AddressSpecSubscriptionArgs{...}
//
//  or:
//
//          nil
type AddressSpecSubscriptionPtrInput interface {
	pulumi.Input

	ToAddressSpecSubscriptionPtrOutput() AddressSpecSubscriptionPtrOutput
	ToAddressSpecSubscriptionPtrOutputWithContext(context.Context) AddressSpecSubscriptionPtrOutput
}

type addressSpecSubscriptionPtrType AddressSpecSubscriptionArgs

func AddressSpecSubscriptionPtr(v *AddressSpecSubscriptionArgs) AddressSpecSubscriptionPtrInput {
	return (*addressSpecSubscriptionPtrType)(v)
}

func (*addressSpecSubscriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpecSubscription)(nil)).Elem()
}

func (i *addressSpecSubscriptionPtrType) ToAddressSpecSubscriptionPtrOutput() AddressSpecSubscriptionPtrOutput {
	return i.ToAddressSpecSubscriptionPtrOutputWithContext(context.Background())
}

func (i *addressSpecSubscriptionPtrType) ToAddressSpecSubscriptionPtrOutputWithContext(ctx context.Context) AddressSpecSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpecSubscriptionPtrOutput)
}

// Properties that can be set for subscription type addresses.
type AddressSpecSubscriptionOutput struct{ *pulumi.OutputState }

func (AddressSpecSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpecSubscription)(nil)).Elem()
}

func (o AddressSpecSubscriptionOutput) ToAddressSpecSubscriptionOutput() AddressSpecSubscriptionOutput {
	return o
}

func (o AddressSpecSubscriptionOutput) ToAddressSpecSubscriptionOutputWithContext(ctx context.Context) AddressSpecSubscriptionOutput {
	return o
}

func (o AddressSpecSubscriptionOutput) ToAddressSpecSubscriptionPtrOutput() AddressSpecSubscriptionPtrOutput {
	return o.ToAddressSpecSubscriptionPtrOutputWithContext(context.Background())
}

func (o AddressSpecSubscriptionOutput) ToAddressSpecSubscriptionPtrOutputWithContext(ctx context.Context) AddressSpecSubscriptionPtrOutput {
	return o.ApplyT(func(v AddressSpecSubscription) *AddressSpecSubscription {
		return &v
	}).(AddressSpecSubscriptionPtrOutput)
}

// Maximum number of concurrent consumers that can be attached to this subscription. If unspecified, 1 consumer is allowed per subscription
func (o AddressSpecSubscriptionOutput) MaxConsumers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressSpecSubscription) *int { return v.MaxConsumers }).(pulumi.IntPtrOutput)
}

type AddressSpecSubscriptionPtrOutput struct{ *pulumi.OutputState }

func (AddressSpecSubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpecSubscription)(nil)).Elem()
}

func (o AddressSpecSubscriptionPtrOutput) ToAddressSpecSubscriptionPtrOutput() AddressSpecSubscriptionPtrOutput {
	return o
}

func (o AddressSpecSubscriptionPtrOutput) ToAddressSpecSubscriptionPtrOutputWithContext(ctx context.Context) AddressSpecSubscriptionPtrOutput {
	return o
}

func (o AddressSpecSubscriptionPtrOutput) Elem() AddressSpecSubscriptionOutput {
	return o.ApplyT(func(v *AddressSpecSubscription) AddressSpecSubscription { return *v }).(AddressSpecSubscriptionOutput)
}

// Maximum number of concurrent consumers that can be attached to this subscription. If unspecified, 1 consumer is allowed per subscription
func (o AddressSpecSubscriptionPtrOutput) MaxConsumers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressSpecSubscription) *int {
		if v == nil {
			return nil
		}
		return v.MaxConsumers
	}).(pulumi.IntPtrOutput)
}

type AddressStatus struct {
	// The status of this address in brokers.
	BrokerStatuses []AddressStatusBrokerStatuses `pulumi:"brokerStatuses"`
	// Forwarder status for this address.
	Forwarders []AddressStatusForwarders `pulumi:"forwarders"`
	// Whether address is ready to use or not.
	IsReady *bool `pulumi:"isReady"`
	// Applied message TTL properties.
	MessageTtl *AddressStatusMessageTtl `pulumi:"messageTtl"`
	// Status and error messages for address.
	Messages []string `pulumi:"messages"`
	// Phase of address.
	Phase      *string                  `pulumi:"phase"`
	PlanStatus *AddressStatusPlanStatus `pulumi:"planStatus"`
	// Applied properties for subscription type addresses.
	Subscription *AddressStatusSubscription `pulumi:"subscription"`
}

// AddressStatusInput is an input type that accepts AddressStatusArgs and AddressStatusOutput values.
// You can construct a concrete instance of `AddressStatusInput` via:
//
//          AddressStatusArgs{...}
type AddressStatusInput interface {
	pulumi.Input

	ToAddressStatusOutput() AddressStatusOutput
	ToAddressStatusOutputWithContext(context.Context) AddressStatusOutput
}

type AddressStatusArgs struct {
	// The status of this address in brokers.
	BrokerStatuses AddressStatusBrokerStatusesArrayInput `pulumi:"brokerStatuses"`
	// Forwarder status for this address.
	Forwarders AddressStatusForwardersArrayInput `pulumi:"forwarders"`
	// Whether address is ready to use or not.
	IsReady pulumi.BoolPtrInput `pulumi:"isReady"`
	// Applied message TTL properties.
	MessageTtl AddressStatusMessageTtlPtrInput `pulumi:"messageTtl"`
	// Status and error messages for address.
	Messages pulumi.StringArrayInput `pulumi:"messages"`
	// Phase of address.
	Phase      pulumi.StringPtrInput           `pulumi:"phase"`
	PlanStatus AddressStatusPlanStatusPtrInput `pulumi:"planStatus"`
	// Applied properties for subscription type addresses.
	Subscription AddressStatusSubscriptionPtrInput `pulumi:"subscription"`
}

func (AddressStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatus)(nil)).Elem()
}

func (i AddressStatusArgs) ToAddressStatusOutput() AddressStatusOutput {
	return i.ToAddressStatusOutputWithContext(context.Background())
}

func (i AddressStatusArgs) ToAddressStatusOutputWithContext(ctx context.Context) AddressStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusOutput)
}

func (i AddressStatusArgs) ToAddressStatusPtrOutput() AddressStatusPtrOutput {
	return i.ToAddressStatusPtrOutputWithContext(context.Background())
}

func (i AddressStatusArgs) ToAddressStatusPtrOutputWithContext(ctx context.Context) AddressStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusOutput).ToAddressStatusPtrOutputWithContext(ctx)
}

// AddressStatusPtrInput is an input type that accepts AddressStatusArgs, AddressStatusPtr and AddressStatusPtrOutput values.
// You can construct a concrete instance of `AddressStatusPtrInput` via:
//
//          AddressStatusArgs{...}
//
//  or:
//
//          nil
type AddressStatusPtrInput interface {
	pulumi.Input

	ToAddressStatusPtrOutput() AddressStatusPtrOutput
	ToAddressStatusPtrOutputWithContext(context.Context) AddressStatusPtrOutput
}

type addressStatusPtrType AddressStatusArgs

func AddressStatusPtr(v *AddressStatusArgs) AddressStatusPtrInput {
	return (*addressStatusPtrType)(v)
}

func (*addressStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatus)(nil)).Elem()
}

func (i *addressStatusPtrType) ToAddressStatusPtrOutput() AddressStatusPtrOutput {
	return i.ToAddressStatusPtrOutputWithContext(context.Background())
}

func (i *addressStatusPtrType) ToAddressStatusPtrOutputWithContext(ctx context.Context) AddressStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusPtrOutput)
}

type AddressStatusOutput struct{ *pulumi.OutputState }

func (AddressStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatus)(nil)).Elem()
}

func (o AddressStatusOutput) ToAddressStatusOutput() AddressStatusOutput {
	return o
}

func (o AddressStatusOutput) ToAddressStatusOutputWithContext(ctx context.Context) AddressStatusOutput {
	return o
}

func (o AddressStatusOutput) ToAddressStatusPtrOutput() AddressStatusPtrOutput {
	return o.ToAddressStatusPtrOutputWithContext(context.Background())
}

func (o AddressStatusOutput) ToAddressStatusPtrOutputWithContext(ctx context.Context) AddressStatusPtrOutput {
	return o.ApplyT(func(v AddressStatus) *AddressStatus {
		return &v
	}).(AddressStatusPtrOutput)
}

// The status of this address in brokers.
func (o AddressStatusOutput) BrokerStatuses() AddressStatusBrokerStatusesArrayOutput {
	return o.ApplyT(func(v AddressStatus) []AddressStatusBrokerStatuses { return v.BrokerStatuses }).(AddressStatusBrokerStatusesArrayOutput)
}

// Forwarder status for this address.
func (o AddressStatusOutput) Forwarders() AddressStatusForwardersArrayOutput {
	return o.ApplyT(func(v AddressStatus) []AddressStatusForwarders { return v.Forwarders }).(AddressStatusForwardersArrayOutput)
}

// Whether address is ready to use or not.
func (o AddressStatusOutput) IsReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AddressStatus) *bool { return v.IsReady }).(pulumi.BoolPtrOutput)
}

// Applied message TTL properties.
func (o AddressStatusOutput) MessageTtl() AddressStatusMessageTtlPtrOutput {
	return o.ApplyT(func(v AddressStatus) *AddressStatusMessageTtl { return v.MessageTtl }).(AddressStatusMessageTtlPtrOutput)
}

// Status and error messages for address.
func (o AddressStatusOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressStatus) []string { return v.Messages }).(pulumi.StringArrayOutput)
}

// Phase of address.
func (o AddressStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

func (o AddressStatusOutput) PlanStatus() AddressStatusPlanStatusPtrOutput {
	return o.ApplyT(func(v AddressStatus) *AddressStatusPlanStatus { return v.PlanStatus }).(AddressStatusPlanStatusPtrOutput)
}

// Applied properties for subscription type addresses.
func (o AddressStatusOutput) Subscription() AddressStatusSubscriptionPtrOutput {
	return o.ApplyT(func(v AddressStatus) *AddressStatusSubscription { return v.Subscription }).(AddressStatusSubscriptionPtrOutput)
}

type AddressStatusPtrOutput struct{ *pulumi.OutputState }

func (AddressStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatus)(nil)).Elem()
}

func (o AddressStatusPtrOutput) ToAddressStatusPtrOutput() AddressStatusPtrOutput {
	return o
}

func (o AddressStatusPtrOutput) ToAddressStatusPtrOutputWithContext(ctx context.Context) AddressStatusPtrOutput {
	return o
}

func (o AddressStatusPtrOutput) Elem() AddressStatusOutput {
	return o.ApplyT(func(v *AddressStatus) AddressStatus { return *v }).(AddressStatusOutput)
}

// The status of this address in brokers.
func (o AddressStatusPtrOutput) BrokerStatuses() AddressStatusBrokerStatusesArrayOutput {
	return o.ApplyT(func(v *AddressStatus) []AddressStatusBrokerStatuses {
		if v == nil {
			return nil
		}
		return v.BrokerStatuses
	}).(AddressStatusBrokerStatusesArrayOutput)
}

// Forwarder status for this address.
func (o AddressStatusPtrOutput) Forwarders() AddressStatusForwardersArrayOutput {
	return o.ApplyT(func(v *AddressStatus) []AddressStatusForwarders {
		if v == nil {
			return nil
		}
		return v.Forwarders
	}).(AddressStatusForwardersArrayOutput)
}

// Whether address is ready to use or not.
func (o AddressStatusPtrOutput) IsReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AddressStatus) *bool {
		if v == nil {
			return nil
		}
		return v.IsReady
	}).(pulumi.BoolPtrOutput)
}

// Applied message TTL properties.
func (o AddressStatusPtrOutput) MessageTtl() AddressStatusMessageTtlPtrOutput {
	return o.ApplyT(func(v *AddressStatus) *AddressStatusMessageTtl {
		if v == nil {
			return nil
		}
		return v.MessageTtl
	}).(AddressStatusMessageTtlPtrOutput)
}

// Status and error messages for address.
func (o AddressStatusPtrOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressStatus) []string {
		if v == nil {
			return nil
		}
		return v.Messages
	}).(pulumi.StringArrayOutput)
}

// Phase of address.
func (o AddressStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

func (o AddressStatusPtrOutput) PlanStatus() AddressStatusPlanStatusPtrOutput {
	return o.ApplyT(func(v *AddressStatus) *AddressStatusPlanStatus {
		if v == nil {
			return nil
		}
		return v.PlanStatus
	}).(AddressStatusPlanStatusPtrOutput)
}

// Applied properties for subscription type addresses.
func (o AddressStatusPtrOutput) Subscription() AddressStatusSubscriptionPtrOutput {
	return o.ApplyT(func(v *AddressStatus) *AddressStatusSubscription {
		if v == nil {
			return nil
		}
		return v.Subscription
	}).(AddressStatusSubscriptionPtrOutput)
}

type AddressStatusBrokerStatuses struct {
	BrokerId  *string `pulumi:"brokerId"`
	ClusterId *string `pulumi:"clusterId"`
	State     *string `pulumi:"state"`
}

// AddressStatusBrokerStatusesInput is an input type that accepts AddressStatusBrokerStatusesArgs and AddressStatusBrokerStatusesOutput values.
// You can construct a concrete instance of `AddressStatusBrokerStatusesInput` via:
//
//          AddressStatusBrokerStatusesArgs{...}
type AddressStatusBrokerStatusesInput interface {
	pulumi.Input

	ToAddressStatusBrokerStatusesOutput() AddressStatusBrokerStatusesOutput
	ToAddressStatusBrokerStatusesOutputWithContext(context.Context) AddressStatusBrokerStatusesOutput
}

type AddressStatusBrokerStatusesArgs struct {
	BrokerId  pulumi.StringPtrInput `pulumi:"brokerId"`
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	State     pulumi.StringPtrInput `pulumi:"state"`
}

func (AddressStatusBrokerStatusesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusBrokerStatuses)(nil)).Elem()
}

func (i AddressStatusBrokerStatusesArgs) ToAddressStatusBrokerStatusesOutput() AddressStatusBrokerStatusesOutput {
	return i.ToAddressStatusBrokerStatusesOutputWithContext(context.Background())
}

func (i AddressStatusBrokerStatusesArgs) ToAddressStatusBrokerStatusesOutputWithContext(ctx context.Context) AddressStatusBrokerStatusesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusBrokerStatusesOutput)
}

// AddressStatusBrokerStatusesArrayInput is an input type that accepts AddressStatusBrokerStatusesArray and AddressStatusBrokerStatusesArrayOutput values.
// You can construct a concrete instance of `AddressStatusBrokerStatusesArrayInput` via:
//
//          AddressStatusBrokerStatusesArray{ AddressStatusBrokerStatusesArgs{...} }
type AddressStatusBrokerStatusesArrayInput interface {
	pulumi.Input

	ToAddressStatusBrokerStatusesArrayOutput() AddressStatusBrokerStatusesArrayOutput
	ToAddressStatusBrokerStatusesArrayOutputWithContext(context.Context) AddressStatusBrokerStatusesArrayOutput
}

type AddressStatusBrokerStatusesArray []AddressStatusBrokerStatusesInput

func (AddressStatusBrokerStatusesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressStatusBrokerStatuses)(nil)).Elem()
}

func (i AddressStatusBrokerStatusesArray) ToAddressStatusBrokerStatusesArrayOutput() AddressStatusBrokerStatusesArrayOutput {
	return i.ToAddressStatusBrokerStatusesArrayOutputWithContext(context.Background())
}

func (i AddressStatusBrokerStatusesArray) ToAddressStatusBrokerStatusesArrayOutputWithContext(ctx context.Context) AddressStatusBrokerStatusesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusBrokerStatusesArrayOutput)
}

type AddressStatusBrokerStatusesOutput struct{ *pulumi.OutputState }

func (AddressStatusBrokerStatusesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusBrokerStatuses)(nil)).Elem()
}

func (o AddressStatusBrokerStatusesOutput) ToAddressStatusBrokerStatusesOutput() AddressStatusBrokerStatusesOutput {
	return o
}

func (o AddressStatusBrokerStatusesOutput) ToAddressStatusBrokerStatusesOutputWithContext(ctx context.Context) AddressStatusBrokerStatusesOutput {
	return o
}

func (o AddressStatusBrokerStatusesOutput) BrokerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressStatusBrokerStatuses) *string { return v.BrokerId }).(pulumi.StringPtrOutput)
}

func (o AddressStatusBrokerStatusesOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressStatusBrokerStatuses) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o AddressStatusBrokerStatusesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressStatusBrokerStatuses) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AddressStatusBrokerStatusesArrayOutput struct{ *pulumi.OutputState }

func (AddressStatusBrokerStatusesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressStatusBrokerStatuses)(nil)).Elem()
}

func (o AddressStatusBrokerStatusesArrayOutput) ToAddressStatusBrokerStatusesArrayOutput() AddressStatusBrokerStatusesArrayOutput {
	return o
}

func (o AddressStatusBrokerStatusesArrayOutput) ToAddressStatusBrokerStatusesArrayOutputWithContext(ctx context.Context) AddressStatusBrokerStatusesArrayOutput {
	return o
}

func (o AddressStatusBrokerStatusesArrayOutput) Index(i pulumi.IntInput) AddressStatusBrokerStatusesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressStatusBrokerStatuses {
		return vs[0].([]AddressStatusBrokerStatuses)[vs[1].(int)]
	}).(AddressStatusBrokerStatusesOutput)
}

type AddressStatusForwarders struct {
	IsReady  *bool    `pulumi:"isReady"`
	Messages []string `pulumi:"messages"`
	Name     *string  `pulumi:"name"`
}

// AddressStatusForwardersInput is an input type that accepts AddressStatusForwardersArgs and AddressStatusForwardersOutput values.
// You can construct a concrete instance of `AddressStatusForwardersInput` via:
//
//          AddressStatusForwardersArgs{...}
type AddressStatusForwardersInput interface {
	pulumi.Input

	ToAddressStatusForwardersOutput() AddressStatusForwardersOutput
	ToAddressStatusForwardersOutputWithContext(context.Context) AddressStatusForwardersOutput
}

type AddressStatusForwardersArgs struct {
	IsReady  pulumi.BoolPtrInput     `pulumi:"isReady"`
	Messages pulumi.StringArrayInput `pulumi:"messages"`
	Name     pulumi.StringPtrInput   `pulumi:"name"`
}

func (AddressStatusForwardersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusForwarders)(nil)).Elem()
}

func (i AddressStatusForwardersArgs) ToAddressStatusForwardersOutput() AddressStatusForwardersOutput {
	return i.ToAddressStatusForwardersOutputWithContext(context.Background())
}

func (i AddressStatusForwardersArgs) ToAddressStatusForwardersOutputWithContext(ctx context.Context) AddressStatusForwardersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusForwardersOutput)
}

// AddressStatusForwardersArrayInput is an input type that accepts AddressStatusForwardersArray and AddressStatusForwardersArrayOutput values.
// You can construct a concrete instance of `AddressStatusForwardersArrayInput` via:
//
//          AddressStatusForwardersArray{ AddressStatusForwardersArgs{...} }
type AddressStatusForwardersArrayInput interface {
	pulumi.Input

	ToAddressStatusForwardersArrayOutput() AddressStatusForwardersArrayOutput
	ToAddressStatusForwardersArrayOutputWithContext(context.Context) AddressStatusForwardersArrayOutput
}

type AddressStatusForwardersArray []AddressStatusForwardersInput

func (AddressStatusForwardersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressStatusForwarders)(nil)).Elem()
}

func (i AddressStatusForwardersArray) ToAddressStatusForwardersArrayOutput() AddressStatusForwardersArrayOutput {
	return i.ToAddressStatusForwardersArrayOutputWithContext(context.Background())
}

func (i AddressStatusForwardersArray) ToAddressStatusForwardersArrayOutputWithContext(ctx context.Context) AddressStatusForwardersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusForwardersArrayOutput)
}

type AddressStatusForwardersOutput struct{ *pulumi.OutputState }

func (AddressStatusForwardersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusForwarders)(nil)).Elem()
}

func (o AddressStatusForwardersOutput) ToAddressStatusForwardersOutput() AddressStatusForwardersOutput {
	return o
}

func (o AddressStatusForwardersOutput) ToAddressStatusForwardersOutputWithContext(ctx context.Context) AddressStatusForwardersOutput {
	return o
}

func (o AddressStatusForwardersOutput) IsReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AddressStatusForwarders) *bool { return v.IsReady }).(pulumi.BoolPtrOutput)
}

func (o AddressStatusForwardersOutput) Messages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressStatusForwarders) []string { return v.Messages }).(pulumi.StringArrayOutput)
}

func (o AddressStatusForwardersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressStatusForwarders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AddressStatusForwardersArrayOutput struct{ *pulumi.OutputState }

func (AddressStatusForwardersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressStatusForwarders)(nil)).Elem()
}

func (o AddressStatusForwardersArrayOutput) ToAddressStatusForwardersArrayOutput() AddressStatusForwardersArrayOutput {
	return o
}

func (o AddressStatusForwardersArrayOutput) ToAddressStatusForwardersArrayOutputWithContext(ctx context.Context) AddressStatusForwardersArrayOutput {
	return o
}

func (o AddressStatusForwardersArrayOutput) Index(i pulumi.IntInput) AddressStatusForwardersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressStatusForwarders {
		return vs[0].([]AddressStatusForwarders)[vs[1].(int)]
	}).(AddressStatusForwardersOutput)
}

// Applied message TTL properties.
type AddressStatusMessageTtl struct {
	// Maximum TTL value
	Maximum *int `pulumi:"maximum"`
	// Minimum TTL value
	Minimum *int `pulumi:"minimum"`
}

// AddressStatusMessageTtlInput is an input type that accepts AddressStatusMessageTtlArgs and AddressStatusMessageTtlOutput values.
// You can construct a concrete instance of `AddressStatusMessageTtlInput` via:
//
//          AddressStatusMessageTtlArgs{...}
type AddressStatusMessageTtlInput interface {
	pulumi.Input

	ToAddressStatusMessageTtlOutput() AddressStatusMessageTtlOutput
	ToAddressStatusMessageTtlOutputWithContext(context.Context) AddressStatusMessageTtlOutput
}

// Applied message TTL properties.
type AddressStatusMessageTtlArgs struct {
	// Maximum TTL value
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum TTL value
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
}

func (AddressStatusMessageTtlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusMessageTtl)(nil)).Elem()
}

func (i AddressStatusMessageTtlArgs) ToAddressStatusMessageTtlOutput() AddressStatusMessageTtlOutput {
	return i.ToAddressStatusMessageTtlOutputWithContext(context.Background())
}

func (i AddressStatusMessageTtlArgs) ToAddressStatusMessageTtlOutputWithContext(ctx context.Context) AddressStatusMessageTtlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusMessageTtlOutput)
}

func (i AddressStatusMessageTtlArgs) ToAddressStatusMessageTtlPtrOutput() AddressStatusMessageTtlPtrOutput {
	return i.ToAddressStatusMessageTtlPtrOutputWithContext(context.Background())
}

func (i AddressStatusMessageTtlArgs) ToAddressStatusMessageTtlPtrOutputWithContext(ctx context.Context) AddressStatusMessageTtlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusMessageTtlOutput).ToAddressStatusMessageTtlPtrOutputWithContext(ctx)
}

// AddressStatusMessageTtlPtrInput is an input type that accepts AddressStatusMessageTtlArgs, AddressStatusMessageTtlPtr and AddressStatusMessageTtlPtrOutput values.
// You can construct a concrete instance of `AddressStatusMessageTtlPtrInput` via:
//
//          AddressStatusMessageTtlArgs{...}
//
//  or:
//
//          nil
type AddressStatusMessageTtlPtrInput interface {
	pulumi.Input

	ToAddressStatusMessageTtlPtrOutput() AddressStatusMessageTtlPtrOutput
	ToAddressStatusMessageTtlPtrOutputWithContext(context.Context) AddressStatusMessageTtlPtrOutput
}

type addressStatusMessageTtlPtrType AddressStatusMessageTtlArgs

func AddressStatusMessageTtlPtr(v *AddressStatusMessageTtlArgs) AddressStatusMessageTtlPtrInput {
	return (*addressStatusMessageTtlPtrType)(v)
}

func (*addressStatusMessageTtlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatusMessageTtl)(nil)).Elem()
}

func (i *addressStatusMessageTtlPtrType) ToAddressStatusMessageTtlPtrOutput() AddressStatusMessageTtlPtrOutput {
	return i.ToAddressStatusMessageTtlPtrOutputWithContext(context.Background())
}

func (i *addressStatusMessageTtlPtrType) ToAddressStatusMessageTtlPtrOutputWithContext(ctx context.Context) AddressStatusMessageTtlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusMessageTtlPtrOutput)
}

// Applied message TTL properties.
type AddressStatusMessageTtlOutput struct{ *pulumi.OutputState }

func (AddressStatusMessageTtlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusMessageTtl)(nil)).Elem()
}

func (o AddressStatusMessageTtlOutput) ToAddressStatusMessageTtlOutput() AddressStatusMessageTtlOutput {
	return o
}

func (o AddressStatusMessageTtlOutput) ToAddressStatusMessageTtlOutputWithContext(ctx context.Context) AddressStatusMessageTtlOutput {
	return o
}

func (o AddressStatusMessageTtlOutput) ToAddressStatusMessageTtlPtrOutput() AddressStatusMessageTtlPtrOutput {
	return o.ToAddressStatusMessageTtlPtrOutputWithContext(context.Background())
}

func (o AddressStatusMessageTtlOutput) ToAddressStatusMessageTtlPtrOutputWithContext(ctx context.Context) AddressStatusMessageTtlPtrOutput {
	return o.ApplyT(func(v AddressStatusMessageTtl) *AddressStatusMessageTtl {
		return &v
	}).(AddressStatusMessageTtlPtrOutput)
}

// Maximum TTL value
func (o AddressStatusMessageTtlOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressStatusMessageTtl) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum TTL value
func (o AddressStatusMessageTtlOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressStatusMessageTtl) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

type AddressStatusMessageTtlPtrOutput struct{ *pulumi.OutputState }

func (AddressStatusMessageTtlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatusMessageTtl)(nil)).Elem()
}

func (o AddressStatusMessageTtlPtrOutput) ToAddressStatusMessageTtlPtrOutput() AddressStatusMessageTtlPtrOutput {
	return o
}

func (o AddressStatusMessageTtlPtrOutput) ToAddressStatusMessageTtlPtrOutputWithContext(ctx context.Context) AddressStatusMessageTtlPtrOutput {
	return o
}

func (o AddressStatusMessageTtlPtrOutput) Elem() AddressStatusMessageTtlOutput {
	return o.ApplyT(func(v *AddressStatusMessageTtl) AddressStatusMessageTtl { return *v }).(AddressStatusMessageTtlOutput)
}

// Maximum TTL value
func (o AddressStatusMessageTtlPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressStatusMessageTtl) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum TTL value
func (o AddressStatusMessageTtlPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressStatusMessageTtl) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

type AddressStatusPlanStatus struct {
	Name       string                 `pulumi:"name"`
	Partitions int                    `pulumi:"partitions"`
	Resources  map[string]interface{} `pulumi:"resources"`
}

// AddressStatusPlanStatusInput is an input type that accepts AddressStatusPlanStatusArgs and AddressStatusPlanStatusOutput values.
// You can construct a concrete instance of `AddressStatusPlanStatusInput` via:
//
//          AddressStatusPlanStatusArgs{...}
type AddressStatusPlanStatusInput interface {
	pulumi.Input

	ToAddressStatusPlanStatusOutput() AddressStatusPlanStatusOutput
	ToAddressStatusPlanStatusOutputWithContext(context.Context) AddressStatusPlanStatusOutput
}

type AddressStatusPlanStatusArgs struct {
	Name       pulumi.StringInput `pulumi:"name"`
	Partitions pulumi.IntInput    `pulumi:"partitions"`
	Resources  pulumi.MapInput    `pulumi:"resources"`
}

func (AddressStatusPlanStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusPlanStatus)(nil)).Elem()
}

func (i AddressStatusPlanStatusArgs) ToAddressStatusPlanStatusOutput() AddressStatusPlanStatusOutput {
	return i.ToAddressStatusPlanStatusOutputWithContext(context.Background())
}

func (i AddressStatusPlanStatusArgs) ToAddressStatusPlanStatusOutputWithContext(ctx context.Context) AddressStatusPlanStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusPlanStatusOutput)
}

func (i AddressStatusPlanStatusArgs) ToAddressStatusPlanStatusPtrOutput() AddressStatusPlanStatusPtrOutput {
	return i.ToAddressStatusPlanStatusPtrOutputWithContext(context.Background())
}

func (i AddressStatusPlanStatusArgs) ToAddressStatusPlanStatusPtrOutputWithContext(ctx context.Context) AddressStatusPlanStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusPlanStatusOutput).ToAddressStatusPlanStatusPtrOutputWithContext(ctx)
}

// AddressStatusPlanStatusPtrInput is an input type that accepts AddressStatusPlanStatusArgs, AddressStatusPlanStatusPtr and AddressStatusPlanStatusPtrOutput values.
// You can construct a concrete instance of `AddressStatusPlanStatusPtrInput` via:
//
//          AddressStatusPlanStatusArgs{...}
//
//  or:
//
//          nil
type AddressStatusPlanStatusPtrInput interface {
	pulumi.Input

	ToAddressStatusPlanStatusPtrOutput() AddressStatusPlanStatusPtrOutput
	ToAddressStatusPlanStatusPtrOutputWithContext(context.Context) AddressStatusPlanStatusPtrOutput
}

type addressStatusPlanStatusPtrType AddressStatusPlanStatusArgs

func AddressStatusPlanStatusPtr(v *AddressStatusPlanStatusArgs) AddressStatusPlanStatusPtrInput {
	return (*addressStatusPlanStatusPtrType)(v)
}

func (*addressStatusPlanStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatusPlanStatus)(nil)).Elem()
}

func (i *addressStatusPlanStatusPtrType) ToAddressStatusPlanStatusPtrOutput() AddressStatusPlanStatusPtrOutput {
	return i.ToAddressStatusPlanStatusPtrOutputWithContext(context.Background())
}

func (i *addressStatusPlanStatusPtrType) ToAddressStatusPlanStatusPtrOutputWithContext(ctx context.Context) AddressStatusPlanStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusPlanStatusPtrOutput)
}

type AddressStatusPlanStatusOutput struct{ *pulumi.OutputState }

func (AddressStatusPlanStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusPlanStatus)(nil)).Elem()
}

func (o AddressStatusPlanStatusOutput) ToAddressStatusPlanStatusOutput() AddressStatusPlanStatusOutput {
	return o
}

func (o AddressStatusPlanStatusOutput) ToAddressStatusPlanStatusOutputWithContext(ctx context.Context) AddressStatusPlanStatusOutput {
	return o
}

func (o AddressStatusPlanStatusOutput) ToAddressStatusPlanStatusPtrOutput() AddressStatusPlanStatusPtrOutput {
	return o.ToAddressStatusPlanStatusPtrOutputWithContext(context.Background())
}

func (o AddressStatusPlanStatusOutput) ToAddressStatusPlanStatusPtrOutputWithContext(ctx context.Context) AddressStatusPlanStatusPtrOutput {
	return o.ApplyT(func(v AddressStatusPlanStatus) *AddressStatusPlanStatus {
		return &v
	}).(AddressStatusPlanStatusPtrOutput)
}
func (o AddressStatusPlanStatusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AddressStatusPlanStatus) string { return v.Name }).(pulumi.StringOutput)
}

func (o AddressStatusPlanStatusOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v AddressStatusPlanStatus) int { return v.Partitions }).(pulumi.IntOutput)
}

func (o AddressStatusPlanStatusOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v AddressStatusPlanStatus) map[string]interface{} { return v.Resources }).(pulumi.MapOutput)
}

type AddressStatusPlanStatusPtrOutput struct{ *pulumi.OutputState }

func (AddressStatusPlanStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatusPlanStatus)(nil)).Elem()
}

func (o AddressStatusPlanStatusPtrOutput) ToAddressStatusPlanStatusPtrOutput() AddressStatusPlanStatusPtrOutput {
	return o
}

func (o AddressStatusPlanStatusPtrOutput) ToAddressStatusPlanStatusPtrOutputWithContext(ctx context.Context) AddressStatusPlanStatusPtrOutput {
	return o
}

func (o AddressStatusPlanStatusPtrOutput) Elem() AddressStatusPlanStatusOutput {
	return o.ApplyT(func(v *AddressStatusPlanStatus) AddressStatusPlanStatus { return *v }).(AddressStatusPlanStatusOutput)
}

func (o AddressStatusPlanStatusPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressStatusPlanStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AddressStatusPlanStatusPtrOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressStatusPlanStatus) *int {
		if v == nil {
			return nil
		}
		return &v.Partitions
	}).(pulumi.IntPtrOutput)
}

func (o AddressStatusPlanStatusPtrOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v *AddressStatusPlanStatus) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.MapOutput)
}

type AddressStatusPlanStatusResources struct {
}

// AddressStatusPlanStatusResourcesInput is an input type that accepts AddressStatusPlanStatusResourcesArgs and AddressStatusPlanStatusResourcesOutput values.
// You can construct a concrete instance of `AddressStatusPlanStatusResourcesInput` via:
//
//          AddressStatusPlanStatusResourcesArgs{...}
type AddressStatusPlanStatusResourcesInput interface {
	pulumi.Input

	ToAddressStatusPlanStatusResourcesOutput() AddressStatusPlanStatusResourcesOutput
	ToAddressStatusPlanStatusResourcesOutputWithContext(context.Context) AddressStatusPlanStatusResourcesOutput
}

type AddressStatusPlanStatusResourcesArgs struct {
}

func (AddressStatusPlanStatusResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusPlanStatusResources)(nil)).Elem()
}

func (i AddressStatusPlanStatusResourcesArgs) ToAddressStatusPlanStatusResourcesOutput() AddressStatusPlanStatusResourcesOutput {
	return i.ToAddressStatusPlanStatusResourcesOutputWithContext(context.Background())
}

func (i AddressStatusPlanStatusResourcesArgs) ToAddressStatusPlanStatusResourcesOutputWithContext(ctx context.Context) AddressStatusPlanStatusResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusPlanStatusResourcesOutput)
}

type AddressStatusPlanStatusResourcesOutput struct{ *pulumi.OutputState }

func (AddressStatusPlanStatusResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusPlanStatusResources)(nil)).Elem()
}

func (o AddressStatusPlanStatusResourcesOutput) ToAddressStatusPlanStatusResourcesOutput() AddressStatusPlanStatusResourcesOutput {
	return o
}

func (o AddressStatusPlanStatusResourcesOutput) ToAddressStatusPlanStatusResourcesOutputWithContext(ctx context.Context) AddressStatusPlanStatusResourcesOutput {
	return o
}

// Applied properties for subscription type addresses.
type AddressStatusSubscription struct {
	// Maximum number of concurrent consumers that can be attached to this subscription.
	MaxConsumers *int `pulumi:"maxConsumers"`
}

// AddressStatusSubscriptionInput is an input type that accepts AddressStatusSubscriptionArgs and AddressStatusSubscriptionOutput values.
// You can construct a concrete instance of `AddressStatusSubscriptionInput` via:
//
//          AddressStatusSubscriptionArgs{...}
type AddressStatusSubscriptionInput interface {
	pulumi.Input

	ToAddressStatusSubscriptionOutput() AddressStatusSubscriptionOutput
	ToAddressStatusSubscriptionOutputWithContext(context.Context) AddressStatusSubscriptionOutput
}

// Applied properties for subscription type addresses.
type AddressStatusSubscriptionArgs struct {
	// Maximum number of concurrent consumers that can be attached to this subscription.
	MaxConsumers pulumi.IntPtrInput `pulumi:"maxConsumers"`
}

func (AddressStatusSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusSubscription)(nil)).Elem()
}

func (i AddressStatusSubscriptionArgs) ToAddressStatusSubscriptionOutput() AddressStatusSubscriptionOutput {
	return i.ToAddressStatusSubscriptionOutputWithContext(context.Background())
}

func (i AddressStatusSubscriptionArgs) ToAddressStatusSubscriptionOutputWithContext(ctx context.Context) AddressStatusSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusSubscriptionOutput)
}

func (i AddressStatusSubscriptionArgs) ToAddressStatusSubscriptionPtrOutput() AddressStatusSubscriptionPtrOutput {
	return i.ToAddressStatusSubscriptionPtrOutputWithContext(context.Background())
}

func (i AddressStatusSubscriptionArgs) ToAddressStatusSubscriptionPtrOutputWithContext(ctx context.Context) AddressStatusSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusSubscriptionOutput).ToAddressStatusSubscriptionPtrOutputWithContext(ctx)
}

// AddressStatusSubscriptionPtrInput is an input type that accepts AddressStatusSubscriptionArgs, AddressStatusSubscriptionPtr and AddressStatusSubscriptionPtrOutput values.
// You can construct a concrete instance of `AddressStatusSubscriptionPtrInput` via:
//
//          AddressStatusSubscriptionArgs{...}
//
//  or:
//
//          nil
type AddressStatusSubscriptionPtrInput interface {
	pulumi.Input

	ToAddressStatusSubscriptionPtrOutput() AddressStatusSubscriptionPtrOutput
	ToAddressStatusSubscriptionPtrOutputWithContext(context.Context) AddressStatusSubscriptionPtrOutput
}

type addressStatusSubscriptionPtrType AddressStatusSubscriptionArgs

func AddressStatusSubscriptionPtr(v *AddressStatusSubscriptionArgs) AddressStatusSubscriptionPtrInput {
	return (*addressStatusSubscriptionPtrType)(v)
}

func (*addressStatusSubscriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatusSubscription)(nil)).Elem()
}

func (i *addressStatusSubscriptionPtrType) ToAddressStatusSubscriptionPtrOutput() AddressStatusSubscriptionPtrOutput {
	return i.ToAddressStatusSubscriptionPtrOutputWithContext(context.Background())
}

func (i *addressStatusSubscriptionPtrType) ToAddressStatusSubscriptionPtrOutputWithContext(ctx context.Context) AddressStatusSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressStatusSubscriptionPtrOutput)
}

// Applied properties for subscription type addresses.
type AddressStatusSubscriptionOutput struct{ *pulumi.OutputState }

func (AddressStatusSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressStatusSubscription)(nil)).Elem()
}

func (o AddressStatusSubscriptionOutput) ToAddressStatusSubscriptionOutput() AddressStatusSubscriptionOutput {
	return o
}

func (o AddressStatusSubscriptionOutput) ToAddressStatusSubscriptionOutputWithContext(ctx context.Context) AddressStatusSubscriptionOutput {
	return o
}

func (o AddressStatusSubscriptionOutput) ToAddressStatusSubscriptionPtrOutput() AddressStatusSubscriptionPtrOutput {
	return o.ToAddressStatusSubscriptionPtrOutputWithContext(context.Background())
}

func (o AddressStatusSubscriptionOutput) ToAddressStatusSubscriptionPtrOutputWithContext(ctx context.Context) AddressStatusSubscriptionPtrOutput {
	return o.ApplyT(func(v AddressStatusSubscription) *AddressStatusSubscription {
		return &v
	}).(AddressStatusSubscriptionPtrOutput)
}

// Maximum number of concurrent consumers that can be attached to this subscription.
func (o AddressStatusSubscriptionOutput) MaxConsumers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AddressStatusSubscription) *int { return v.MaxConsumers }).(pulumi.IntPtrOutput)
}

type AddressStatusSubscriptionPtrOutput struct{ *pulumi.OutputState }

func (AddressStatusSubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressStatusSubscription)(nil)).Elem()
}

func (o AddressStatusSubscriptionPtrOutput) ToAddressStatusSubscriptionPtrOutput() AddressStatusSubscriptionPtrOutput {
	return o
}

func (o AddressStatusSubscriptionPtrOutput) ToAddressStatusSubscriptionPtrOutputWithContext(ctx context.Context) AddressStatusSubscriptionPtrOutput {
	return o
}

func (o AddressStatusSubscriptionPtrOutput) Elem() AddressStatusSubscriptionOutput {
	return o.ApplyT(func(v *AddressStatusSubscription) AddressStatusSubscription { return *v }).(AddressStatusSubscriptionOutput)
}

// Maximum number of concurrent consumers that can be attached to this subscription.
func (o AddressStatusSubscriptionPtrOutput) MaxConsumers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressStatusSubscription) *int {
		if v == nil {
			return nil
		}
		return v.MaxConsumers
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressTypeOutput{})
	pulumi.RegisterOutputType(AddressSpaceTypeOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecAuthenticationServiceOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecAuthenticationServicePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecAuthenticationServiceOverridesOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecAuthenticationServiceOverridesPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsAddressesOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsAddressesArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsCredentialsOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsCredentialsPasswordOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsCredentialsPasswordPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsCredentialsUsernameOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsCredentialsUsernamePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsEndpointHostsOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsEndpointHostsArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsCaCertOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsCaCertPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsClientCertOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsClientCertPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsClientKeyOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecConnectorsTlsClientKeyPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsCertOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsCertPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsExportsOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsExportsArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsExposeOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecEndpointsExposePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecNetworkPolicyOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecNetworkPolicyPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecNetworkPolicyEgressOutput{})
	pulumi.RegisterOutputType(AddressSpaceSpecNetworkPolicyIngressOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusPtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusConnectorsOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusConnectorsArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusEndpointStatusesOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusEndpointStatusesArrayOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusEndpointStatusesExternalPortsOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusEndpointStatusesServicePortsOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusRoutersOutput{})
	pulumi.RegisterOutputType(AddressSpaceStatusRoutersArrayOutput{})
	pulumi.RegisterOutputType(AddressSpecOutput{})
	pulumi.RegisterOutputType(AddressSpecPtrOutput{})
	pulumi.RegisterOutputType(AddressSpecForwardersOutput{})
	pulumi.RegisterOutputType(AddressSpecForwardersArrayOutput{})
	pulumi.RegisterOutputType(AddressSpecMessageTtlOutput{})
	pulumi.RegisterOutputType(AddressSpecMessageTtlPtrOutput{})
	pulumi.RegisterOutputType(AddressSpecSubscriptionOutput{})
	pulumi.RegisterOutputType(AddressSpecSubscriptionPtrOutput{})
	pulumi.RegisterOutputType(AddressStatusOutput{})
	pulumi.RegisterOutputType(AddressStatusPtrOutput{})
	pulumi.RegisterOutputType(AddressStatusBrokerStatusesOutput{})
	pulumi.RegisterOutputType(AddressStatusBrokerStatusesArrayOutput{})
	pulumi.RegisterOutputType(AddressStatusForwardersOutput{})
	pulumi.RegisterOutputType(AddressStatusForwardersArrayOutput{})
	pulumi.RegisterOutputType(AddressStatusMessageTtlOutput{})
	pulumi.RegisterOutputType(AddressStatusMessageTtlPtrOutput{})
	pulumi.RegisterOutputType(AddressStatusPlanStatusOutput{})
	pulumi.RegisterOutputType(AddressStatusPlanStatusPtrOutput{})
	pulumi.RegisterOutputType(AddressStatusPlanStatusResourcesOutput{})
	pulumi.RegisterOutputType(AddressStatusSubscriptionOutput{})
	pulumi.RegisterOutputType(AddressStatusSubscriptionPtrOutput{})
}
