// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// GlobalDNSRecord is the Schema for the globaldnsrecords API
type GlobalDNSRecord struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// GlobalDNSRecordSpec defines the desired state of GlobalDNSRecord
	Spec GlobalDNSRecordSpecPtrOutput `pulumi:"spec"`
	// GlobalDNSRecordStatus defines the observed state of GlobalDNSRecord
	Status GlobalDNSRecordStatusPtrOutput `pulumi:"status"`
}

// NewGlobalDNSRecord registers a new resource with the given unique name, arguments, and options.
func NewGlobalDNSRecord(ctx *pulumi.Context,
	name string, args *GlobalDNSRecordArgs, opts ...pulumi.ResourceOption) (*GlobalDNSRecord, error) {
	if args == nil {
		args = &GlobalDNSRecordArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("redhatcop.redhat.io/v1alpha1")
	args.Kind = pulumi.StringPtr("GlobalDNSRecord")
	var resource GlobalDNSRecord
	err := ctx.RegisterResource("kubernetes:redhatcop.redhat.io/v1alpha1:GlobalDNSRecord", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalDNSRecord gets an existing GlobalDNSRecord resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalDNSRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalDNSRecordState, opts ...pulumi.ResourceOption) (*GlobalDNSRecord, error) {
	var resource GlobalDNSRecord
	err := ctx.ReadResource("kubernetes:redhatcop.redhat.io/v1alpha1:GlobalDNSRecord", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalDNSRecord resources.
type globalDNSRecordState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// GlobalDNSRecordSpec defines the desired state of GlobalDNSRecord
	Spec *GlobalDNSRecordSpec `pulumi:"spec"`
	// GlobalDNSRecordStatus defines the observed state of GlobalDNSRecord
	Status *GlobalDNSRecordStatus `pulumi:"status"`
}

type GlobalDNSRecordState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// GlobalDNSRecordSpec defines the desired state of GlobalDNSRecord
	Spec GlobalDNSRecordSpecPtrInput
	// GlobalDNSRecordStatus defines the observed state of GlobalDNSRecord
	Status GlobalDNSRecordStatusPtrInput
}

func (GlobalDNSRecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalDNSRecordState)(nil)).Elem()
}

type globalDNSRecordArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// GlobalDNSRecordSpec defines the desired state of GlobalDNSRecord
	Spec *GlobalDNSRecordSpec `pulumi:"spec"`
	// GlobalDNSRecordStatus defines the observed state of GlobalDNSRecord
	Status *GlobalDNSRecordStatus `pulumi:"status"`
}

// The set of arguments for constructing a GlobalDNSRecord resource.
type GlobalDNSRecordArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// GlobalDNSRecordSpec defines the desired state of GlobalDNSRecord
	Spec GlobalDNSRecordSpecPtrInput
	// GlobalDNSRecordStatus defines the observed state of GlobalDNSRecord
	Status GlobalDNSRecordStatusPtrInput
}

func (GlobalDNSRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalDNSRecordArgs)(nil)).Elem()
}
