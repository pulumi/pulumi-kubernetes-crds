// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Core.V1
{

    [OutputType]
    public sealed class StorageClusterStatus
    {
        /// <summary>
        /// Name of the storage cluster.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// Unique ID of the storage cluster.
        /// </summary>
        public readonly string ClusterUid;
        /// <summary>
        /// Count of hash collisions for the StorageCluster. The StorageCluster controller uses this field as a collision avoidance mechanism when it needs to create the name of the newest ControllerRevision.
        /// </summary>
        public readonly int CollisionCount;
        /// <summary>
        /// Contains details for the current condition of this cluster.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Core.V1.StorageClusterStatusConditions> Conditions;
        /// <summary>
        /// Phase of the StorageCluster is a simple, high-level summary of where the StorageCluster is in its lifecycle. The condition array contains more detailed information about the state of the cluster.
        /// </summary>
        public readonly string Phase;
        /// <summary>
        /// Contains details of storage in the cluster.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.StorageClusterStatusStorage Storage;

        [OutputConstructor]
        private StorageClusterStatus(
            string clusterName,

            string clusterUid,

            int collisionCount,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Core.V1.StorageClusterStatusConditions> conditions,

            string phase,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.StorageClusterStatusStorage storage)
        {
            ClusterName = clusterName;
            ClusterUid = clusterUid;
            CollisionCount = collisionCount;
            Conditions = conditions;
            Phase = phase;
            Storage = storage;
        }
    }
}
