// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1
{

    /// <summary>
    /// The desired behavior of the storage cluster.
    /// </summary>
    public class StorageClusterSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A strategy to determine how component versions are to be updated automatically.
        /// </summary>
        [Input("autoUpdateComponents")]
        public Input<string>? AutoUpdateComponents { get; set; }

        /// <summary>
        /// Contains spec of autopilot component for storage driver.
        /// </summary>
        [Input("autopilot")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecAutopilotArgs>? Autopilot { get; set; }

        /// <summary>
        /// Details of storage used in cloud environment.
        /// </summary>
        [Input("cloudStorage")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecCloudStorageArgs>? CloudStorage { get; set; }

        /// <summary>
        /// Custom container image registry server that will be used instead of index.docker.io to download Docker images. This may include the repository as well. (Example: myregistry.net:5443 or myregistry.com/myrepository)
        /// </summary>
        [Input("customImageRegistry")]
        public Input<string>? CustomImageRegistry { get; set; }

        /// <summary>
        /// Delete strategy to uninstall and wipe the storage cluster.
        /// </summary>
        [Input("deleteStrategy")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecDeleteStrategyArgs>? DeleteStrategy { get; set; }

        [Input("env")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecEnvArgs>? _env;

        /// <summary>
        /// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecEnvArgs>());
            set => _env = value;
        }

        [Input("featureGates")]
        private InputMap<object>? _featureGates;

        /// <summary>
        /// This is a map of feature names to string values.
        /// </summary>
        public InputMap<object> FeatureGates
        {
            get => _featureGates ?? (_featureGates = new InputMap<object>());
            set => _featureGates = value;
        }

        /// <summary>
        /// Docker image of the storage driver.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
        /// </summary>
        [Input("imagePullPolicy")]
        public Input<string>? ImagePullPolicy { get; set; }

        /// <summary>
        /// Image pull secret is a reference to secret in the same namespace as the StorageCluster. It is used for pulling all images used by the StorageCluster.
        /// </summary>
        [Input("imagePullSecret")]
        public Input<string>? ImagePullSecret { get; set; }

        /// <summary>
        /// Details of KVDB that the storage driver will use.
        /// </summary>
        [Input("kvdb")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecKvdbArgs>? Kvdb { get; set; }

        /// <summary>
        /// Contains monitoring configuration for the storage cluster.
        /// </summary>
        [Input("monitoring")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecMonitoringArgs>? Monitoring { get; set; }

        /// <summary>
        /// Contains network information that is needed by the storage driver.
        /// </summary>
        [Input("network")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecNetworkArgs>? Network { get; set; }

        [Input("nodes")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecNodesArgs>? _nodes;

        /// <summary>
        /// Node level configurations that will override the configuration at cluster level. These configurations can be for individual nodes or can be grouped to override configuration of multiple nodes based on label selectors.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecNodesArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecNodesArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// Describes placement configuration for the storage cluster pods.
        /// </summary>
        [Input("placement")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecPlacementArgs>? Placement { get; set; }

        /// <summary>
        /// The number of old history to retain to allow rollback. This is a pointer to distinguish between an explicit zero and not specified. Defaults to 10.
        /// </summary>
        [Input("revisionHistoryLimit")]
        public Input<int>? RevisionHistoryLimit { get; set; }

        [Input("runtimeOptions")]
        private InputMap<object>? _runtimeOptions;

        /// <summary>
        /// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
        /// </summary>
        public InputMap<object> RuntimeOptions
        {
            get => _runtimeOptions ?? (_runtimeOptions = new InputMap<object>());
            set => _runtimeOptions = value;
        }

        /// <summary>
        /// Secrets provider is the name of secret provider that driver will connect to.
        /// </summary>
        [Input("secretsProvider")]
        public Input<string>? SecretsProvider { get; set; }

        /// <summary>
        /// Contains security configuration for the storage cluster.
        /// </summary>
        [Input("security")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecSecurityArgs>? Security { get; set; }

        /// <summary>
        /// Start port is the starting port in the range of ports used by the cluster.
        /// </summary>
        [Input("startPort")]
        public Input<int>? StartPort { get; set; }

        /// <summary>
        /// Details of the storage used by the storage driver.
        /// </summary>
        [Input("storage")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecStorageArgs>? Storage { get; set; }

        /// <summary>
        /// Contains STORK related spec.
        /// </summary>
        [Input("stork")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecStorkArgs>? Stork { get; set; }

        /// <summary>
        /// An update strategy to replace existing StorageCluster pods with new pods.
        /// </summary>
        [Input("updateStrategy")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecUpdateStrategyArgs>? UpdateStrategy { get; set; }

        /// <summary>
        /// Contains spec of a user interface for the storage driver.
        /// </summary>
        [Input("userInterface")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.StorageClusterSpecUserInterfaceArgs>? UserInterface { get; set; }

        /// <summary>
        /// Version of the storage driver. This field is read-only.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public StorageClusterSpecArgs()
        {
        }
    }
}
