// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type StorageClusterType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// The desired behavior of the storage cluster.
	Spec *StorageClusterSpec `pulumi:"spec"`
	// Most recently observed status of the storage cluster. This data may not be up to date.
	Status *StorageClusterStatus `pulumi:"status"`
}

// StorageClusterTypeInput is an input type that accepts StorageClusterTypeArgs and StorageClusterTypeOutput values.
// You can construct a concrete instance of `StorageClusterTypeInput` via:
//
//          StorageClusterTypeArgs{...}
type StorageClusterTypeInput interface {
	pulumi.Input

	ToStorageClusterTypeOutput() StorageClusterTypeOutput
	ToStorageClusterTypeOutputWithContext(context.Context) StorageClusterTypeOutput
}

type StorageClusterTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// The desired behavior of the storage cluster.
	Spec StorageClusterSpecPtrInput `pulumi:"spec"`
	// Most recently observed status of the storage cluster. This data may not be up to date.
	Status StorageClusterStatusPtrInput `pulumi:"status"`
}

func (StorageClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterType)(nil)).Elem()
}

func (i StorageClusterTypeArgs) ToStorageClusterTypeOutput() StorageClusterTypeOutput {
	return i.ToStorageClusterTypeOutputWithContext(context.Background())
}

func (i StorageClusterTypeArgs) ToStorageClusterTypeOutputWithContext(ctx context.Context) StorageClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterTypeOutput)
}

type StorageClusterTypeOutput struct{ *pulumi.OutputState }

func (StorageClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterType)(nil)).Elem()
}

func (o StorageClusterTypeOutput) ToStorageClusterTypeOutput() StorageClusterTypeOutput {
	return o
}

func (o StorageClusterTypeOutput) ToStorageClusterTypeOutputWithContext(ctx context.Context) StorageClusterTypeOutput {
	return o
}

func (o StorageClusterTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageClusterTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o StorageClusterTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v StorageClusterType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// The desired behavior of the storage cluster.
func (o StorageClusterTypeOutput) Spec() StorageClusterSpecPtrOutput {
	return o.ApplyT(func(v StorageClusterType) *StorageClusterSpec { return v.Spec }).(StorageClusterSpecPtrOutput)
}

// Most recently observed status of the storage cluster. This data may not be up to date.
func (o StorageClusterTypeOutput) Status() StorageClusterStatusPtrOutput {
	return o.ApplyT(func(v StorageClusterType) *StorageClusterStatus { return v.Status }).(StorageClusterStatusPtrOutput)
}

// The desired behavior of the storage cluster.
type StorageClusterSpec struct {
	// A strategy to determine how component versions are to be updated automatically.
	AutoUpdateComponents *string `pulumi:"autoUpdateComponents"`
	// Contains spec of autopilot component for storage driver.
	Autopilot *StorageClusterSpecAutopilot `pulumi:"autopilot"`
	// Details of storage used in cloud environment.
	CloudStorage *StorageClusterSpecCloudStorage `pulumi:"cloudStorage"`
	// Custom container image registry server that will be used instead of index.docker.io to download Docker images. This may include the repository as well. (Example: myregistry.net:5443 or myregistry.com/myrepository)
	CustomImageRegistry *string `pulumi:"customImageRegistry"`
	// Delete strategy to uninstall and wipe the storage cluster.
	DeleteStrategy *StorageClusterSpecDeleteStrategy `pulumi:"deleteStrategy"`
	// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env []StorageClusterSpecEnv `pulumi:"env"`
	// This is a map of feature names to string values.
	FeatureGates map[string]interface{} `pulumi:"featureGates"`
	// Docker image of the storage driver.
	Image *string `pulumi:"image"`
	// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
	ImagePullPolicy *string `pulumi:"imagePullPolicy"`
	// Image pull secret is a reference to secret in the same namespace as the StorageCluster. It is used for pulling all images used by the StorageCluster.
	ImagePullSecret *string `pulumi:"imagePullSecret"`
	// Details of KVDB that the storage driver will use.
	Kvdb *StorageClusterSpecKvdb `pulumi:"kvdb"`
	// Contains monitoring configuration for the storage cluster.
	Monitoring *StorageClusterSpecMonitoring `pulumi:"monitoring"`
	// Contains network information that is needed by the storage driver.
	Network *StorageClusterSpecNetwork `pulumi:"network"`
	// Node level configurations that will override the configuration at cluster level. These configurations can be for individual nodes or can be grouped to override configuration of multiple nodes based on label selectors.
	Nodes []StorageClusterSpecNodes `pulumi:"nodes"`
	// Describes placement configuration for the storage cluster pods.
	Placement *StorageClusterSpecPlacement `pulumi:"placement"`
	// The number of old history to retain to allow rollback. This is a pointer to distinguish between an explicit zero and not specified. Defaults to 10.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
	RuntimeOptions map[string]interface{} `pulumi:"runtimeOptions"`
	// Secrets provider is the name of secret provider that driver will connect to.
	SecretsProvider *string `pulumi:"secretsProvider"`
	// Contains security configuration for the storage cluster.
	Security *StorageClusterSpecSecurity `pulumi:"security"`
	// Start port is the starting port in the range of ports used by the cluster.
	StartPort *int `pulumi:"startPort"`
	// Details of the storage used by the storage driver.
	Storage *StorageClusterSpecStorage `pulumi:"storage"`
	// Contains STORK related spec.
	Stork *StorageClusterSpecStork `pulumi:"stork"`
	// An update strategy to replace existing StorageCluster pods with new pods.
	UpdateStrategy *StorageClusterSpecUpdateStrategy `pulumi:"updateStrategy"`
	// Contains spec of a user interface for the storage driver.
	UserInterface *StorageClusterSpecUserInterface `pulumi:"userInterface"`
	// Version of the storage driver. This field is read-only.
	Version *string `pulumi:"version"`
}

// StorageClusterSpecInput is an input type that accepts StorageClusterSpecArgs and StorageClusterSpecOutput values.
// You can construct a concrete instance of `StorageClusterSpecInput` via:
//
//          StorageClusterSpecArgs{...}
type StorageClusterSpecInput interface {
	pulumi.Input

	ToStorageClusterSpecOutput() StorageClusterSpecOutput
	ToStorageClusterSpecOutputWithContext(context.Context) StorageClusterSpecOutput
}

// The desired behavior of the storage cluster.
type StorageClusterSpecArgs struct {
	// A strategy to determine how component versions are to be updated automatically.
	AutoUpdateComponents pulumi.StringPtrInput `pulumi:"autoUpdateComponents"`
	// Contains spec of autopilot component for storage driver.
	Autopilot StorageClusterSpecAutopilotPtrInput `pulumi:"autopilot"`
	// Details of storage used in cloud environment.
	CloudStorage StorageClusterSpecCloudStoragePtrInput `pulumi:"cloudStorage"`
	// Custom container image registry server that will be used instead of index.docker.io to download Docker images. This may include the repository as well. (Example: myregistry.net:5443 or myregistry.com/myrepository)
	CustomImageRegistry pulumi.StringPtrInput `pulumi:"customImageRegistry"`
	// Delete strategy to uninstall and wipe the storage cluster.
	DeleteStrategy StorageClusterSpecDeleteStrategyPtrInput `pulumi:"deleteStrategy"`
	// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env StorageClusterSpecEnvArrayInput `pulumi:"env"`
	// This is a map of feature names to string values.
	FeatureGates pulumi.MapInput `pulumi:"featureGates"`
	// Docker image of the storage driver.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
	ImagePullPolicy pulumi.StringPtrInput `pulumi:"imagePullPolicy"`
	// Image pull secret is a reference to secret in the same namespace as the StorageCluster. It is used for pulling all images used by the StorageCluster.
	ImagePullSecret pulumi.StringPtrInput `pulumi:"imagePullSecret"`
	// Details of KVDB that the storage driver will use.
	Kvdb StorageClusterSpecKvdbPtrInput `pulumi:"kvdb"`
	// Contains monitoring configuration for the storage cluster.
	Monitoring StorageClusterSpecMonitoringPtrInput `pulumi:"monitoring"`
	// Contains network information that is needed by the storage driver.
	Network StorageClusterSpecNetworkPtrInput `pulumi:"network"`
	// Node level configurations that will override the configuration at cluster level. These configurations can be for individual nodes or can be grouped to override configuration of multiple nodes based on label selectors.
	Nodes StorageClusterSpecNodesArrayInput `pulumi:"nodes"`
	// Describes placement configuration for the storage cluster pods.
	Placement StorageClusterSpecPlacementPtrInput `pulumi:"placement"`
	// The number of old history to retain to allow rollback. This is a pointer to distinguish between an explicit zero and not specified. Defaults to 10.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
	RuntimeOptions pulumi.MapInput `pulumi:"runtimeOptions"`
	// Secrets provider is the name of secret provider that driver will connect to.
	SecretsProvider pulumi.StringPtrInput `pulumi:"secretsProvider"`
	// Contains security configuration for the storage cluster.
	Security StorageClusterSpecSecurityPtrInput `pulumi:"security"`
	// Start port is the starting port in the range of ports used by the cluster.
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
	// Details of the storage used by the storage driver.
	Storage StorageClusterSpecStoragePtrInput `pulumi:"storage"`
	// Contains STORK related spec.
	Stork StorageClusterSpecStorkPtrInput `pulumi:"stork"`
	// An update strategy to replace existing StorageCluster pods with new pods.
	UpdateStrategy StorageClusterSpecUpdateStrategyPtrInput `pulumi:"updateStrategy"`
	// Contains spec of a user interface for the storage driver.
	UserInterface StorageClusterSpecUserInterfacePtrInput `pulumi:"userInterface"`
	// Version of the storage driver. This field is read-only.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StorageClusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpec)(nil)).Elem()
}

func (i StorageClusterSpecArgs) ToStorageClusterSpecOutput() StorageClusterSpecOutput {
	return i.ToStorageClusterSpecOutputWithContext(context.Background())
}

func (i StorageClusterSpecArgs) ToStorageClusterSpecOutputWithContext(ctx context.Context) StorageClusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecOutput)
}

func (i StorageClusterSpecArgs) ToStorageClusterSpecPtrOutput() StorageClusterSpecPtrOutput {
	return i.ToStorageClusterSpecPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecArgs) ToStorageClusterSpecPtrOutputWithContext(ctx context.Context) StorageClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecOutput).ToStorageClusterSpecPtrOutputWithContext(ctx)
}

// StorageClusterSpecPtrInput is an input type that accepts StorageClusterSpecArgs, StorageClusterSpecPtr and StorageClusterSpecPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecPtrInput` via:
//
//          StorageClusterSpecArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecPtrOutput() StorageClusterSpecPtrOutput
	ToStorageClusterSpecPtrOutputWithContext(context.Context) StorageClusterSpecPtrOutput
}

type storageClusterSpecPtrType StorageClusterSpecArgs

func StorageClusterSpecPtr(v *StorageClusterSpecArgs) StorageClusterSpecPtrInput {
	return (*storageClusterSpecPtrType)(v)
}

func (*storageClusterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpec)(nil)).Elem()
}

func (i *storageClusterSpecPtrType) ToStorageClusterSpecPtrOutput() StorageClusterSpecPtrOutput {
	return i.ToStorageClusterSpecPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecPtrType) ToStorageClusterSpecPtrOutputWithContext(ctx context.Context) StorageClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPtrOutput)
}

// The desired behavior of the storage cluster.
type StorageClusterSpecOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpec)(nil)).Elem()
}

func (o StorageClusterSpecOutput) ToStorageClusterSpecOutput() StorageClusterSpecOutput {
	return o
}

func (o StorageClusterSpecOutput) ToStorageClusterSpecOutputWithContext(ctx context.Context) StorageClusterSpecOutput {
	return o
}

func (o StorageClusterSpecOutput) ToStorageClusterSpecPtrOutput() StorageClusterSpecPtrOutput {
	return o.ToStorageClusterSpecPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecOutput) ToStorageClusterSpecPtrOutputWithContext(ctx context.Context) StorageClusterSpecPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpec {
		return &v
	}).(StorageClusterSpecPtrOutput)
}

// A strategy to determine how component versions are to be updated automatically.
func (o StorageClusterSpecOutput) AutoUpdateComponents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.AutoUpdateComponents }).(pulumi.StringPtrOutput)
}

// Contains spec of autopilot component for storage driver.
func (o StorageClusterSpecOutput) Autopilot() StorageClusterSpecAutopilotPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecAutopilot { return v.Autopilot }).(StorageClusterSpecAutopilotPtrOutput)
}

// Details of storage used in cloud environment.
func (o StorageClusterSpecOutput) CloudStorage() StorageClusterSpecCloudStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecCloudStorage { return v.CloudStorage }).(StorageClusterSpecCloudStoragePtrOutput)
}

// Custom container image registry server that will be used instead of index.docker.io to download Docker images. This may include the repository as well. (Example: myregistry.net:5443 or myregistry.com/myrepository)
func (o StorageClusterSpecOutput) CustomImageRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.CustomImageRegistry }).(pulumi.StringPtrOutput)
}

// Delete strategy to uninstall and wipe the storage cluster.
func (o StorageClusterSpecOutput) DeleteStrategy() StorageClusterSpecDeleteStrategyPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecDeleteStrategy { return v.DeleteStrategy }).(StorageClusterSpecDeleteStrategyPtrOutput)
}

// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecOutput) Env() StorageClusterSpecEnvArrayOutput {
	return o.ApplyT(func(v StorageClusterSpec) []StorageClusterSpecEnv { return v.Env }).(StorageClusterSpecEnvArrayOutput)
}

// This is a map of feature names to string values.
func (o StorageClusterSpecOutput) FeatureGates() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpec) map[string]interface{} { return v.FeatureGates }).(pulumi.MapOutput)
}

// Docker image of the storage driver.
func (o StorageClusterSpecOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
func (o StorageClusterSpecOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.ImagePullPolicy }).(pulumi.StringPtrOutput)
}

// Image pull secret is a reference to secret in the same namespace as the StorageCluster. It is used for pulling all images used by the StorageCluster.
func (o StorageClusterSpecOutput) ImagePullSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.ImagePullSecret }).(pulumi.StringPtrOutput)
}

// Details of KVDB that the storage driver will use.
func (o StorageClusterSpecOutput) Kvdb() StorageClusterSpecKvdbPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecKvdb { return v.Kvdb }).(StorageClusterSpecKvdbPtrOutput)
}

// Contains monitoring configuration for the storage cluster.
func (o StorageClusterSpecOutput) Monitoring() StorageClusterSpecMonitoringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecMonitoring { return v.Monitoring }).(StorageClusterSpecMonitoringPtrOutput)
}

// Contains network information that is needed by the storage driver.
func (o StorageClusterSpecOutput) Network() StorageClusterSpecNetworkPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecNetwork { return v.Network }).(StorageClusterSpecNetworkPtrOutput)
}

// Node level configurations that will override the configuration at cluster level. These configurations can be for individual nodes or can be grouped to override configuration of multiple nodes based on label selectors.
func (o StorageClusterSpecOutput) Nodes() StorageClusterSpecNodesArrayOutput {
	return o.ApplyT(func(v StorageClusterSpec) []StorageClusterSpecNodes { return v.Nodes }).(StorageClusterSpecNodesArrayOutput)
}

// Describes placement configuration for the storage cluster pods.
func (o StorageClusterSpecOutput) Placement() StorageClusterSpecPlacementPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecPlacement { return v.Placement }).(StorageClusterSpecPlacementPtrOutput)
}

// The number of old history to retain to allow rollback. This is a pointer to distinguish between an explicit zero and not specified. Defaults to 10.
func (o StorageClusterSpecOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
func (o StorageClusterSpecOutput) RuntimeOptions() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpec) map[string]interface{} { return v.RuntimeOptions }).(pulumi.MapOutput)
}

// Secrets provider is the name of secret provider that driver will connect to.
func (o StorageClusterSpecOutput) SecretsProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.SecretsProvider }).(pulumi.StringPtrOutput)
}

// Contains security configuration for the storage cluster.
func (o StorageClusterSpecOutput) Security() StorageClusterSpecSecurityPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecSecurity { return v.Security }).(StorageClusterSpecSecurityPtrOutput)
}

// Start port is the starting port in the range of ports used by the cluster.
func (o StorageClusterSpecOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

// Details of the storage used by the storage driver.
func (o StorageClusterSpecOutput) Storage() StorageClusterSpecStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecStorage { return v.Storage }).(StorageClusterSpecStoragePtrOutput)
}

// Contains STORK related spec.
func (o StorageClusterSpecOutput) Stork() StorageClusterSpecStorkPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecStork { return v.Stork }).(StorageClusterSpecStorkPtrOutput)
}

// An update strategy to replace existing StorageCluster pods with new pods.
func (o StorageClusterSpecOutput) UpdateStrategy() StorageClusterSpecUpdateStrategyPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecUpdateStrategy { return v.UpdateStrategy }).(StorageClusterSpecUpdateStrategyPtrOutput)
}

// Contains spec of a user interface for the storage driver.
func (o StorageClusterSpecOutput) UserInterface() StorageClusterSpecUserInterfacePtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *StorageClusterSpecUserInterface { return v.UserInterface }).(StorageClusterSpecUserInterfacePtrOutput)
}

// Version of the storage driver. This field is read-only.
func (o StorageClusterSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpec)(nil)).Elem()
}

func (o StorageClusterSpecPtrOutput) ToStorageClusterSpecPtrOutput() StorageClusterSpecPtrOutput {
	return o
}

func (o StorageClusterSpecPtrOutput) ToStorageClusterSpecPtrOutputWithContext(ctx context.Context) StorageClusterSpecPtrOutput {
	return o
}

func (o StorageClusterSpecPtrOutput) Elem() StorageClusterSpecOutput {
	return o.ApplyT(func(v *StorageClusterSpec) StorageClusterSpec { return *v }).(StorageClusterSpecOutput)
}

// A strategy to determine how component versions are to be updated automatically.
func (o StorageClusterSpecPtrOutput) AutoUpdateComponents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.AutoUpdateComponents
	}).(pulumi.StringPtrOutput)
}

// Contains spec of autopilot component for storage driver.
func (o StorageClusterSpecPtrOutput) Autopilot() StorageClusterSpecAutopilotPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecAutopilot {
		if v == nil {
			return nil
		}
		return v.Autopilot
	}).(StorageClusterSpecAutopilotPtrOutput)
}

// Details of storage used in cloud environment.
func (o StorageClusterSpecPtrOutput) CloudStorage() StorageClusterSpecCloudStoragePtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecCloudStorage {
		if v == nil {
			return nil
		}
		return v.CloudStorage
	}).(StorageClusterSpecCloudStoragePtrOutput)
}

// Custom container image registry server that will be used instead of index.docker.io to download Docker images. This may include the repository as well. (Example: myregistry.net:5443 or myregistry.com/myrepository)
func (o StorageClusterSpecPtrOutput) CustomImageRegistry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.CustomImageRegistry
	}).(pulumi.StringPtrOutput)
}

// Delete strategy to uninstall and wipe the storage cluster.
func (o StorageClusterSpecPtrOutput) DeleteStrategy() StorageClusterSpecDeleteStrategyPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecDeleteStrategy {
		if v == nil {
			return nil
		}
		return v.DeleteStrategy
	}).(StorageClusterSpecDeleteStrategyPtrOutput)
}

// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecPtrOutput) Env() StorageClusterSpecEnvArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpec) []StorageClusterSpecEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(StorageClusterSpecEnvArrayOutput)
}

// This is a map of feature names to string values.
func (o StorageClusterSpecPtrOutput) FeatureGates() pulumi.MapOutput {
	return o.ApplyT(func(v *StorageClusterSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.FeatureGates
	}).(pulumi.MapOutput)
}

// Docker image of the storage driver.
func (o StorageClusterSpecPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always.
func (o StorageClusterSpecPtrOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.ImagePullPolicy
	}).(pulumi.StringPtrOutput)
}

// Image pull secret is a reference to secret in the same namespace as the StorageCluster. It is used for pulling all images used by the StorageCluster.
func (o StorageClusterSpecPtrOutput) ImagePullSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.ImagePullSecret
	}).(pulumi.StringPtrOutput)
}

// Details of KVDB that the storage driver will use.
func (o StorageClusterSpecPtrOutput) Kvdb() StorageClusterSpecKvdbPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecKvdb {
		if v == nil {
			return nil
		}
		return v.Kvdb
	}).(StorageClusterSpecKvdbPtrOutput)
}

// Contains monitoring configuration for the storage cluster.
func (o StorageClusterSpecPtrOutput) Monitoring() StorageClusterSpecMonitoringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecMonitoring {
		if v == nil {
			return nil
		}
		return v.Monitoring
	}).(StorageClusterSpecMonitoringPtrOutput)
}

// Contains network information that is needed by the storage driver.
func (o StorageClusterSpecPtrOutput) Network() StorageClusterSpecNetworkPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecNetwork {
		if v == nil {
			return nil
		}
		return v.Network
	}).(StorageClusterSpecNetworkPtrOutput)
}

// Node level configurations that will override the configuration at cluster level. These configurations can be for individual nodes or can be grouped to override configuration of multiple nodes based on label selectors.
func (o StorageClusterSpecPtrOutput) Nodes() StorageClusterSpecNodesArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpec) []StorageClusterSpecNodes {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(StorageClusterSpecNodesArrayOutput)
}

// Describes placement configuration for the storage cluster pods.
func (o StorageClusterSpecPtrOutput) Placement() StorageClusterSpecPlacementPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(StorageClusterSpecPlacementPtrOutput)
}

// The number of old history to retain to allow rollback. This is a pointer to distinguish between an explicit zero and not specified. Defaults to 10.
func (o StorageClusterSpecPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
func (o StorageClusterSpecPtrOutput) RuntimeOptions() pulumi.MapOutput {
	return o.ApplyT(func(v *StorageClusterSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.RuntimeOptions
	}).(pulumi.MapOutput)
}

// Secrets provider is the name of secret provider that driver will connect to.
func (o StorageClusterSpecPtrOutput) SecretsProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.SecretsProvider
	}).(pulumi.StringPtrOutput)
}

// Contains security configuration for the storage cluster.
func (o StorageClusterSpecPtrOutput) Security() StorageClusterSpecSecurityPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecSecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(StorageClusterSpecSecurityPtrOutput)
}

// Start port is the starting port in the range of ports used by the cluster.
func (o StorageClusterSpecPtrOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *int {
		if v == nil {
			return nil
		}
		return v.StartPort
	}).(pulumi.IntPtrOutput)
}

// Details of the storage used by the storage driver.
func (o StorageClusterSpecPtrOutput) Storage() StorageClusterSpecStoragePtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecStorage {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(StorageClusterSpecStoragePtrOutput)
}

// Contains STORK related spec.
func (o StorageClusterSpecPtrOutput) Stork() StorageClusterSpecStorkPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecStork {
		if v == nil {
			return nil
		}
		return v.Stork
	}).(StorageClusterSpecStorkPtrOutput)
}

// An update strategy to replace existing StorageCluster pods with new pods.
func (o StorageClusterSpecPtrOutput) UpdateStrategy() StorageClusterSpecUpdateStrategyPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecUpdateStrategy {
		if v == nil {
			return nil
		}
		return v.UpdateStrategy
	}).(StorageClusterSpecUpdateStrategyPtrOutput)
}

// Contains spec of a user interface for the storage driver.
func (o StorageClusterSpecPtrOutput) UserInterface() StorageClusterSpecUserInterfacePtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *StorageClusterSpecUserInterface {
		if v == nil {
			return nil
		}
		return v.UserInterface
	}).(StorageClusterSpecUserInterfacePtrOutput)
}

// Version of the storage driver. This field is read-only.
func (o StorageClusterSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Contains spec of autopilot component for storage driver.
type StorageClusterSpecAutopilot struct {
	// It is a map of arguments provided to autopilot. Example: log-level: debug
	Args map[string]interface{} `pulumi:"args"`
	// Flag indicating whether autopilot needs to be enabled.
	Enabled *bool `pulumi:"enabled"`
	// List of environment variables used by autopilot. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env []StorageClusterSpecAutopilotEnv `pulumi:"env"`
	// Docker image of the autopilot container.
	Image *string `pulumi:"image"`
	// Flag indicating if the autopilot image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
	LockImage *bool `pulumi:"lockImage"`
	// List of input data providers to autopilot.
	Providers []StorageClusterSpecAutopilotProviders `pulumi:"providers"`
}

// StorageClusterSpecAutopilotInput is an input type that accepts StorageClusterSpecAutopilotArgs and StorageClusterSpecAutopilotOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotInput` via:
//
//          StorageClusterSpecAutopilotArgs{...}
type StorageClusterSpecAutopilotInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotOutput() StorageClusterSpecAutopilotOutput
	ToStorageClusterSpecAutopilotOutputWithContext(context.Context) StorageClusterSpecAutopilotOutput
}

// Contains spec of autopilot component for storage driver.
type StorageClusterSpecAutopilotArgs struct {
	// It is a map of arguments provided to autopilot. Example: log-level: debug
	Args pulumi.MapInput `pulumi:"args"`
	// Flag indicating whether autopilot needs to be enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of environment variables used by autopilot. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env StorageClusterSpecAutopilotEnvArrayInput `pulumi:"env"`
	// Docker image of the autopilot container.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Flag indicating if the autopilot image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
	LockImage pulumi.BoolPtrInput `pulumi:"lockImage"`
	// List of input data providers to autopilot.
	Providers StorageClusterSpecAutopilotProvidersArrayInput `pulumi:"providers"`
}

func (StorageClusterSpecAutopilotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilot)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotArgs) ToStorageClusterSpecAutopilotOutput() StorageClusterSpecAutopilotOutput {
	return i.ToStorageClusterSpecAutopilotOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotArgs) ToStorageClusterSpecAutopilotOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotOutput)
}

func (i StorageClusterSpecAutopilotArgs) ToStorageClusterSpecAutopilotPtrOutput() StorageClusterSpecAutopilotPtrOutput {
	return i.ToStorageClusterSpecAutopilotPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotArgs) ToStorageClusterSpecAutopilotPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotOutput).ToStorageClusterSpecAutopilotPtrOutputWithContext(ctx)
}

// StorageClusterSpecAutopilotPtrInput is an input type that accepts StorageClusterSpecAutopilotArgs, StorageClusterSpecAutopilotPtr and StorageClusterSpecAutopilotPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotPtrInput` via:
//
//          StorageClusterSpecAutopilotArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecAutopilotPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotPtrOutput() StorageClusterSpecAutopilotPtrOutput
	ToStorageClusterSpecAutopilotPtrOutputWithContext(context.Context) StorageClusterSpecAutopilotPtrOutput
}

type storageClusterSpecAutopilotPtrType StorageClusterSpecAutopilotArgs

func StorageClusterSpecAutopilotPtr(v *StorageClusterSpecAutopilotArgs) StorageClusterSpecAutopilotPtrInput {
	return (*storageClusterSpecAutopilotPtrType)(v)
}

func (*storageClusterSpecAutopilotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilot)(nil)).Elem()
}

func (i *storageClusterSpecAutopilotPtrType) ToStorageClusterSpecAutopilotPtrOutput() StorageClusterSpecAutopilotPtrOutput {
	return i.ToStorageClusterSpecAutopilotPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecAutopilotPtrType) ToStorageClusterSpecAutopilotPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotPtrOutput)
}

// Contains spec of autopilot component for storage driver.
type StorageClusterSpecAutopilotOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilot)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotOutput) ToStorageClusterSpecAutopilotOutput() StorageClusterSpecAutopilotOutput {
	return o
}

func (o StorageClusterSpecAutopilotOutput) ToStorageClusterSpecAutopilotOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotOutput {
	return o
}

func (o StorageClusterSpecAutopilotOutput) ToStorageClusterSpecAutopilotPtrOutput() StorageClusterSpecAutopilotPtrOutput {
	return o.ToStorageClusterSpecAutopilotPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecAutopilotOutput) ToStorageClusterSpecAutopilotPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) *StorageClusterSpecAutopilot {
		return &v
	}).(StorageClusterSpecAutopilotPtrOutput)
}

// It is a map of arguments provided to autopilot. Example: log-level: debug
func (o StorageClusterSpecAutopilotOutput) Args() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) map[string]interface{} { return v.Args }).(pulumi.MapOutput)
}

// Flag indicating whether autopilot needs to be enabled.
func (o StorageClusterSpecAutopilotOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of environment variables used by autopilot. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecAutopilotOutput) Env() StorageClusterSpecAutopilotEnvArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) []StorageClusterSpecAutopilotEnv { return v.Env }).(StorageClusterSpecAutopilotEnvArrayOutput)
}

// Docker image of the autopilot container.
func (o StorageClusterSpecAutopilotOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Flag indicating if the autopilot image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
func (o StorageClusterSpecAutopilotOutput) LockImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) *bool { return v.LockImage }).(pulumi.BoolPtrOutput)
}

// List of input data providers to autopilot.
func (o StorageClusterSpecAutopilotOutput) Providers() StorageClusterSpecAutopilotProvidersArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilot) []StorageClusterSpecAutopilotProviders { return v.Providers }).(StorageClusterSpecAutopilotProvidersArrayOutput)
}

type StorageClusterSpecAutopilotPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilot)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotPtrOutput) ToStorageClusterSpecAutopilotPtrOutput() StorageClusterSpecAutopilotPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotPtrOutput) ToStorageClusterSpecAutopilotPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotPtrOutput) Elem() StorageClusterSpecAutopilotOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) StorageClusterSpecAutopilot { return *v }).(StorageClusterSpecAutopilotOutput)
}

// It is a map of arguments provided to autopilot. Example: log-level: debug
func (o StorageClusterSpecAutopilotPtrOutput) Args() pulumi.MapOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.MapOutput)
}

// Flag indicating whether autopilot needs to be enabled.
func (o StorageClusterSpecAutopilotPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List of environment variables used by autopilot. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecAutopilotPtrOutput) Env() StorageClusterSpecAutopilotEnvArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) []StorageClusterSpecAutopilotEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(StorageClusterSpecAutopilotEnvArrayOutput)
}

// Docker image of the autopilot container.
func (o StorageClusterSpecAutopilotPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Flag indicating if the autopilot image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
func (o StorageClusterSpecAutopilotPtrOutput) LockImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) *bool {
		if v == nil {
			return nil
		}
		return v.LockImage
	}).(pulumi.BoolPtrOutput)
}

// List of input data providers to autopilot.
func (o StorageClusterSpecAutopilotPtrOutput) Providers() StorageClusterSpecAutopilotProvidersArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilot) []StorageClusterSpecAutopilotProviders {
		if v == nil {
			return nil
		}
		return v.Providers
	}).(StorageClusterSpecAutopilotProvidersArrayOutput)
}

// It is a map of arguments provided to autopilot. Example: log-level: debug
type StorageClusterSpecAutopilotArgs struct {
}

// StorageClusterSpecAutopilotArgsInput is an input type that accepts StorageClusterSpecAutopilotArgsArgs and StorageClusterSpecAutopilotArgsOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotArgsInput` via:
//
//          StorageClusterSpecAutopilotArgsArgs{...}
type StorageClusterSpecAutopilotArgsInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotArgsOutput() StorageClusterSpecAutopilotArgsOutput
	ToStorageClusterSpecAutopilotArgsOutputWithContext(context.Context) StorageClusterSpecAutopilotArgsOutput
}

// It is a map of arguments provided to autopilot. Example: log-level: debug
type StorageClusterSpecAutopilotArgsArgs struct {
}

func (StorageClusterSpecAutopilotArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotArgs)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotArgsArgs) ToStorageClusterSpecAutopilotArgsOutput() StorageClusterSpecAutopilotArgsOutput {
	return i.ToStorageClusterSpecAutopilotArgsOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotArgsArgs) ToStorageClusterSpecAutopilotArgsOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotArgsOutput)
}

// It is a map of arguments provided to autopilot. Example: log-level: debug
type StorageClusterSpecAutopilotArgsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotArgs)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotArgsOutput) ToStorageClusterSpecAutopilotArgsOutput() StorageClusterSpecAutopilotArgsOutput {
	return o
}

func (o StorageClusterSpecAutopilotArgsOutput) ToStorageClusterSpecAutopilotArgsOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotArgsOutput {
	return o
}

type StorageClusterSpecAutopilotEnv struct {
	Name      *string                                  `pulumi:"name"`
	Value     *string                                  `pulumi:"value"`
	ValueFrom *StorageClusterSpecAutopilotEnvValueFrom `pulumi:"valueFrom"`
}

// StorageClusterSpecAutopilotEnvInput is an input type that accepts StorageClusterSpecAutopilotEnvArgs and StorageClusterSpecAutopilotEnvOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvInput` via:
//
//          StorageClusterSpecAutopilotEnvArgs{...}
type StorageClusterSpecAutopilotEnvInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvOutput() StorageClusterSpecAutopilotEnvOutput
	ToStorageClusterSpecAutopilotEnvOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvOutput
}

type StorageClusterSpecAutopilotEnvArgs struct {
	Name      pulumi.StringPtrInput                           `pulumi:"name"`
	Value     pulumi.StringPtrInput                           `pulumi:"value"`
	ValueFrom StorageClusterSpecAutopilotEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (StorageClusterSpecAutopilotEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnv)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvArgs) ToStorageClusterSpecAutopilotEnvOutput() StorageClusterSpecAutopilotEnvOutput {
	return i.ToStorageClusterSpecAutopilotEnvOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvArgs) ToStorageClusterSpecAutopilotEnvOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvOutput)
}

// StorageClusterSpecAutopilotEnvArrayInput is an input type that accepts StorageClusterSpecAutopilotEnvArray and StorageClusterSpecAutopilotEnvArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvArrayInput` via:
//
//          StorageClusterSpecAutopilotEnvArray{ StorageClusterSpecAutopilotEnvArgs{...} }
type StorageClusterSpecAutopilotEnvArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvArrayOutput() StorageClusterSpecAutopilotEnvArrayOutput
	ToStorageClusterSpecAutopilotEnvArrayOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvArrayOutput
}

type StorageClusterSpecAutopilotEnvArray []StorageClusterSpecAutopilotEnvInput

func (StorageClusterSpecAutopilotEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecAutopilotEnv)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvArray) ToStorageClusterSpecAutopilotEnvArrayOutput() StorageClusterSpecAutopilotEnvArrayOutput {
	return i.ToStorageClusterSpecAutopilotEnvArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvArray) ToStorageClusterSpecAutopilotEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvArrayOutput)
}

type StorageClusterSpecAutopilotEnvOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnv)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvOutput) ToStorageClusterSpecAutopilotEnvOutput() StorageClusterSpecAutopilotEnvOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvOutput) ToStorageClusterSpecAutopilotEnvOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvOutput) ValueFrom() StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnv) *StorageClusterSpecAutopilotEnvValueFrom { return v.ValueFrom }).(StorageClusterSpecAutopilotEnvValueFromPtrOutput)
}

type StorageClusterSpecAutopilotEnvArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecAutopilotEnv)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvArrayOutput) ToStorageClusterSpecAutopilotEnvArrayOutput() StorageClusterSpecAutopilotEnvArrayOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvArrayOutput) ToStorageClusterSpecAutopilotEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvArrayOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecAutopilotEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecAutopilotEnv {
		return vs[0].([]StorageClusterSpecAutopilotEnv)[vs[1].(int)]
	}).(StorageClusterSpecAutopilotEnvOutput)
}

type StorageClusterSpecAutopilotEnvValueFrom struct {
	ConfigMapKeyRef  *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef  `pulumi:"configMapKeyRef"`
	FieldRef         *StorageClusterSpecAutopilotEnvValueFromFieldRef         `pulumi:"fieldRef"`
	ResourceFieldRef *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	SecretKeyRef     *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef     `pulumi:"secretKeyRef"`
}

// StorageClusterSpecAutopilotEnvValueFromInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromArgs and StorageClusterSpecAutopilotEnvValueFromOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromArgs{...}
type StorageClusterSpecAutopilotEnvValueFromInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromOutput() StorageClusterSpecAutopilotEnvValueFromOutput
	ToStorageClusterSpecAutopilotEnvValueFromOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromOutput
}

type StorageClusterSpecAutopilotEnvValueFromArgs struct {
	ConfigMapKeyRef  StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrInput  `pulumi:"configMapKeyRef"`
	FieldRef         StorageClusterSpecAutopilotEnvValueFromFieldRefPtrInput         `pulumi:"fieldRef"`
	ResourceFieldRef StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	SecretKeyRef     StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrInput     `pulumi:"secretKeyRef"`
}

func (StorageClusterSpecAutopilotEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFrom)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvValueFromArgs) ToStorageClusterSpecAutopilotEnvValueFromOutput() StorageClusterSpecAutopilotEnvValueFromOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromArgs) ToStorageClusterSpecAutopilotEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromOutput)
}

func (i StorageClusterSpecAutopilotEnvValueFromArgs) ToStorageClusterSpecAutopilotEnvValueFromPtrOutput() StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromArgs) ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromOutput).ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(ctx)
}

// StorageClusterSpecAutopilotEnvValueFromPtrInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromArgs, StorageClusterSpecAutopilotEnvValueFromPtr and StorageClusterSpecAutopilotEnvValueFromPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromPtrInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecAutopilotEnvValueFromPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromPtrOutput() StorageClusterSpecAutopilotEnvValueFromPtrOutput
	ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromPtrOutput
}

type storageClusterSpecAutopilotEnvValueFromPtrType StorageClusterSpecAutopilotEnvValueFromArgs

func StorageClusterSpecAutopilotEnvValueFromPtr(v *StorageClusterSpecAutopilotEnvValueFromArgs) StorageClusterSpecAutopilotEnvValueFromPtrInput {
	return (*storageClusterSpecAutopilotEnvValueFromPtrType)(v)
}

func (*storageClusterSpecAutopilotEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFrom)(nil)).Elem()
}

func (i *storageClusterSpecAutopilotEnvValueFromPtrType) ToStorageClusterSpecAutopilotEnvValueFromPtrOutput() StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecAutopilotEnvValueFromPtrType) ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) ToStorageClusterSpecAutopilotEnvValueFromOutput() StorageClusterSpecAutopilotEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) ToStorageClusterSpecAutopilotEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) ToStorageClusterSpecAutopilotEnvValueFromPtrOutput() StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return o.ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFrom {
		return &v
	}).(StorageClusterSpecAutopilotEnvValueFromPtrOutput)
}
func (o StorageClusterSpecAutopilotEnvValueFromOutput) ConfigMapKeyRef() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) FieldRef() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromFieldRef {
		return v.FieldRef
	}).(StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) ResourceFieldRef() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromOutput) SecretKeyRef() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromPtrOutput() StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) Elem() StorageClusterSpecAutopilotEnvValueFromOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFrom) StorageClusterSpecAutopilotEnvValueFrom { return *v }).(StorageClusterSpecAutopilotEnvValueFromOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) ConfigMapKeyRef() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) FieldRef() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) ResourceFieldRef() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromPtrOutput) SecretKeyRef() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFrom) *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs and StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs{...}
type StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput
	ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput
}

type StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput)
}

func (i StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput).ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs, StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtr and StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput
	ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput
}

type storageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrType StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs

func StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtr(v *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefArgs) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrInput {
	return (*storageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*storageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef {
		return &v
	}).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput)
}
func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) Elem() StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef {
		return *v
	}).(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromFieldRef struct {
	ApiVersion *string `pulumi:"apiVersion"`
	FieldPath  *string `pulumi:"fieldPath"`
}

// StorageClusterSpecAutopilotEnvValueFromFieldRefInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromFieldRefArgs and StorageClusterSpecAutopilotEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromFieldRefInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromFieldRefArgs{...}
type StorageClusterSpecAutopilotEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefOutput
	ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefOutput
}

type StorageClusterSpecAutopilotEnvValueFromFieldRefArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	FieldPath  pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (StorageClusterSpecAutopilotEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvValueFromFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromFieldRefOutput)
}

func (i StorageClusterSpecAutopilotEnvValueFromFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromFieldRefOutput).ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecAutopilotEnvValueFromFieldRefPtrInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromFieldRefArgs, StorageClusterSpecAutopilotEnvValueFromFieldRefPtr and StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromFieldRefPtrInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecAutopilotEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput
	ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput
}

type storageClusterSpecAutopilotEnvValueFromFieldRefPtrType StorageClusterSpecAutopilotEnvValueFromFieldRefArgs

func StorageClusterSpecAutopilotEnvValueFromFieldRefPtr(v *StorageClusterSpecAutopilotEnvValueFromFieldRefArgs) StorageClusterSpecAutopilotEnvValueFromFieldRefPtrInput {
	return (*storageClusterSpecAutopilotEnvValueFromFieldRefPtrType)(v)
}

func (*storageClusterSpecAutopilotEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecAutopilotEnvValueFromFieldRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecAutopilotEnvValueFromFieldRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return o.ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromFieldRef) *StorageClusterSpecAutopilotEnvValueFromFieldRef {
		return &v
	}).(StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput)
}
func (o StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromFieldRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput) Elem() StorageClusterSpecAutopilotEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromFieldRef) StorageClusterSpecAutopilotEnvValueFromFieldRef {
		return *v
	}).(StorageClusterSpecAutopilotEnvValueFromFieldRefOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromResourceFieldRef struct {
	ContainerName *string `pulumi:"containerName"`
	Divisor       *string `pulumi:"divisor"`
	Resource      *string `pulumi:"resource"`
}

// StorageClusterSpecAutopilotEnvValueFromResourceFieldRefInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs and StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromResourceFieldRefInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs{...}
type StorageClusterSpecAutopilotEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput
	ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput
}

type StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	Divisor       pulumi.StringPtrInput `pulumi:"divisor"`
	Resource      pulumi.StringPtrInput `pulumi:"resource"`
}

func (StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput)
}

func (i StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput).ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs, StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtr and StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput
	ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput
}

type storageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrType StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs

func StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtr(v *StorageClusterSpecAutopilotEnvValueFromResourceFieldRefArgs) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrInput {
	return (*storageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrType)(v)
}

func (*storageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return o.ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef {
		return &v
	}).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput)
}
func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) Elem() StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) StorageClusterSpecAutopilotEnvValueFromResourceFieldRef {
		return *v
	}).(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecAutopilotEnvValueFromSecretKeyRefInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs and StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromSecretKeyRefInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs{...}
type StorageClusterSpecAutopilotEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput
	ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput
}

type StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput)
}

func (i StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput).ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrInput is an input type that accepts StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs, StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtr and StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrInput` via:
//
//          StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput
	ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput
}

type storageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrType StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs

func StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtr(v *StorageClusterSpecAutopilotEnvValueFromSecretKeyRefArgs) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrInput {
	return (*storageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrType)(v)
}

func (*storageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return o.ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef {
		return &v
	}).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput)
}
func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecAutopilotEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) Elem() StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) StorageClusterSpecAutopilotEnvValueFromSecretKeyRef {
		return *v
	}).(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecAutopilotEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecAutopilotProviders struct {
	// Unique name of the data provider.
	Name *string `pulumi:"name"`
	// Map of key-value params for the provider.
	Params map[string]interface{} `pulumi:"params"`
	// Type of the data provider. For instance - prometheus
	Type *string `pulumi:"type"`
}

// StorageClusterSpecAutopilotProvidersInput is an input type that accepts StorageClusterSpecAutopilotProvidersArgs and StorageClusterSpecAutopilotProvidersOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotProvidersInput` via:
//
//          StorageClusterSpecAutopilotProvidersArgs{...}
type StorageClusterSpecAutopilotProvidersInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotProvidersOutput() StorageClusterSpecAutopilotProvidersOutput
	ToStorageClusterSpecAutopilotProvidersOutputWithContext(context.Context) StorageClusterSpecAutopilotProvidersOutput
}

type StorageClusterSpecAutopilotProvidersArgs struct {
	// Unique name of the data provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Map of key-value params for the provider.
	Params pulumi.MapInput `pulumi:"params"`
	// Type of the data provider. For instance - prometheus
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageClusterSpecAutopilotProvidersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotProviders)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotProvidersArgs) ToStorageClusterSpecAutopilotProvidersOutput() StorageClusterSpecAutopilotProvidersOutput {
	return i.ToStorageClusterSpecAutopilotProvidersOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotProvidersArgs) ToStorageClusterSpecAutopilotProvidersOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotProvidersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotProvidersOutput)
}

// StorageClusterSpecAutopilotProvidersArrayInput is an input type that accepts StorageClusterSpecAutopilotProvidersArray and StorageClusterSpecAutopilotProvidersArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotProvidersArrayInput` via:
//
//          StorageClusterSpecAutopilotProvidersArray{ StorageClusterSpecAutopilotProvidersArgs{...} }
type StorageClusterSpecAutopilotProvidersArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotProvidersArrayOutput() StorageClusterSpecAutopilotProvidersArrayOutput
	ToStorageClusterSpecAutopilotProvidersArrayOutputWithContext(context.Context) StorageClusterSpecAutopilotProvidersArrayOutput
}

type StorageClusterSpecAutopilotProvidersArray []StorageClusterSpecAutopilotProvidersInput

func (StorageClusterSpecAutopilotProvidersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecAutopilotProviders)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotProvidersArray) ToStorageClusterSpecAutopilotProvidersArrayOutput() StorageClusterSpecAutopilotProvidersArrayOutput {
	return i.ToStorageClusterSpecAutopilotProvidersArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotProvidersArray) ToStorageClusterSpecAutopilotProvidersArrayOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotProvidersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotProvidersArrayOutput)
}

type StorageClusterSpecAutopilotProvidersOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotProvidersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotProviders)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotProvidersOutput) ToStorageClusterSpecAutopilotProvidersOutput() StorageClusterSpecAutopilotProvidersOutput {
	return o
}

func (o StorageClusterSpecAutopilotProvidersOutput) ToStorageClusterSpecAutopilotProvidersOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotProvidersOutput {
	return o
}

// Unique name of the data provider.
func (o StorageClusterSpecAutopilotProvidersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotProviders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Map of key-value params for the provider.
func (o StorageClusterSpecAutopilotProvidersOutput) Params() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotProviders) map[string]interface{} { return v.Params }).(pulumi.MapOutput)
}

// Type of the data provider. For instance - prometheus
func (o StorageClusterSpecAutopilotProvidersOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecAutopilotProviders) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecAutopilotProvidersArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotProvidersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecAutopilotProviders)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotProvidersArrayOutput) ToStorageClusterSpecAutopilotProvidersArrayOutput() StorageClusterSpecAutopilotProvidersArrayOutput {
	return o
}

func (o StorageClusterSpecAutopilotProvidersArrayOutput) ToStorageClusterSpecAutopilotProvidersArrayOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotProvidersArrayOutput {
	return o
}

func (o StorageClusterSpecAutopilotProvidersArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecAutopilotProvidersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecAutopilotProviders {
		return vs[0].([]StorageClusterSpecAutopilotProviders)[vs[1].(int)]
	}).(StorageClusterSpecAutopilotProvidersOutput)
}

// Map of key-value params for the provider.
type StorageClusterSpecAutopilotProvidersParams struct {
}

// StorageClusterSpecAutopilotProvidersParamsInput is an input type that accepts StorageClusterSpecAutopilotProvidersParamsArgs and StorageClusterSpecAutopilotProvidersParamsOutput values.
// You can construct a concrete instance of `StorageClusterSpecAutopilotProvidersParamsInput` via:
//
//          StorageClusterSpecAutopilotProvidersParamsArgs{...}
type StorageClusterSpecAutopilotProvidersParamsInput interface {
	pulumi.Input

	ToStorageClusterSpecAutopilotProvidersParamsOutput() StorageClusterSpecAutopilotProvidersParamsOutput
	ToStorageClusterSpecAutopilotProvidersParamsOutputWithContext(context.Context) StorageClusterSpecAutopilotProvidersParamsOutput
}

// Map of key-value params for the provider.
type StorageClusterSpecAutopilotProvidersParamsArgs struct {
}

func (StorageClusterSpecAutopilotProvidersParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotProvidersParams)(nil)).Elem()
}

func (i StorageClusterSpecAutopilotProvidersParamsArgs) ToStorageClusterSpecAutopilotProvidersParamsOutput() StorageClusterSpecAutopilotProvidersParamsOutput {
	return i.ToStorageClusterSpecAutopilotProvidersParamsOutputWithContext(context.Background())
}

func (i StorageClusterSpecAutopilotProvidersParamsArgs) ToStorageClusterSpecAutopilotProvidersParamsOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotProvidersParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecAutopilotProvidersParamsOutput)
}

// Map of key-value params for the provider.
type StorageClusterSpecAutopilotProvidersParamsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecAutopilotProvidersParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecAutopilotProvidersParams)(nil)).Elem()
}

func (o StorageClusterSpecAutopilotProvidersParamsOutput) ToStorageClusterSpecAutopilotProvidersParamsOutput() StorageClusterSpecAutopilotProvidersParamsOutput {
	return o
}

func (o StorageClusterSpecAutopilotProvidersParamsOutput) ToStorageClusterSpecAutopilotProvidersParamsOutputWithContext(ctx context.Context) StorageClusterSpecAutopilotProvidersParamsOutput {
	return o
}

// Details of storage used in cloud environment.
type StorageClusterSpecCloudStorage struct {
	// List of cluster wide storage types and their capacities. A single capacity spec identifies a storage pool with a set of minimum requested IOPS and size. Based on the cloud provider, the total storage capacity will get divided amongst the nodes. The nodes bearing storage themselves will get uniformly distributed across all the zones.
	CapacitySpecs []StorageClusterSpecCloudStorageCapacitySpecs `pulumi:"capacitySpecs"`
	// List of storage device specs. A cloud storage device will be created for every spec in the list. The specs will be applied to all nodes in the cluster up to spec.cloudStorage.maxStorageNodes or spec.cloudStorage.maxStorageNodesPerZone. This will be ignored if spec.cloudStorage.capacitySpecs is present.
	DeviceSpecs []string `pulumi:"deviceSpecs"`
	// Device spec for the journal device.
	JournalDeviceSpec *string `pulumi:"journalDeviceSpec"`
	// Device spec for internal KVDB device.
	KvdbDeviceSpec *string `pulumi:"kvdbDeviceSpec"`
	// Maximum nodes that will have storage in the cluster.
	MaxStorageNodes *int `pulumi:"maxStorageNodes"`
	// Maximum nodes in every zone that will have storage in the cluster.
	MaxStorageNodesPerZone *int `pulumi:"maxStorageNodesPerZone"`
	// Device spec for the metadata device. This device will be used to store system metadata by the driver.
	SystemMetadataDeviceSpec *string `pulumi:"systemMetadataDeviceSpec"`
}

// StorageClusterSpecCloudStorageInput is an input type that accepts StorageClusterSpecCloudStorageArgs and StorageClusterSpecCloudStorageOutput values.
// You can construct a concrete instance of `StorageClusterSpecCloudStorageInput` via:
//
//          StorageClusterSpecCloudStorageArgs{...}
type StorageClusterSpecCloudStorageInput interface {
	pulumi.Input

	ToStorageClusterSpecCloudStorageOutput() StorageClusterSpecCloudStorageOutput
	ToStorageClusterSpecCloudStorageOutputWithContext(context.Context) StorageClusterSpecCloudStorageOutput
}

// Details of storage used in cloud environment.
type StorageClusterSpecCloudStorageArgs struct {
	// List of cluster wide storage types and their capacities. A single capacity spec identifies a storage pool with a set of minimum requested IOPS and size. Based on the cloud provider, the total storage capacity will get divided amongst the nodes. The nodes bearing storage themselves will get uniformly distributed across all the zones.
	CapacitySpecs StorageClusterSpecCloudStorageCapacitySpecsArrayInput `pulumi:"capacitySpecs"`
	// List of storage device specs. A cloud storage device will be created for every spec in the list. The specs will be applied to all nodes in the cluster up to spec.cloudStorage.maxStorageNodes or spec.cloudStorage.maxStorageNodesPerZone. This will be ignored if spec.cloudStorage.capacitySpecs is present.
	DeviceSpecs pulumi.StringArrayInput `pulumi:"deviceSpecs"`
	// Device spec for the journal device.
	JournalDeviceSpec pulumi.StringPtrInput `pulumi:"journalDeviceSpec"`
	// Device spec for internal KVDB device.
	KvdbDeviceSpec pulumi.StringPtrInput `pulumi:"kvdbDeviceSpec"`
	// Maximum nodes that will have storage in the cluster.
	MaxStorageNodes pulumi.IntPtrInput `pulumi:"maxStorageNodes"`
	// Maximum nodes in every zone that will have storage in the cluster.
	MaxStorageNodesPerZone pulumi.IntPtrInput `pulumi:"maxStorageNodesPerZone"`
	// Device spec for the metadata device. This device will be used to store system metadata by the driver.
	SystemMetadataDeviceSpec pulumi.StringPtrInput `pulumi:"systemMetadataDeviceSpec"`
}

func (StorageClusterSpecCloudStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecCloudStorage)(nil)).Elem()
}

func (i StorageClusterSpecCloudStorageArgs) ToStorageClusterSpecCloudStorageOutput() StorageClusterSpecCloudStorageOutput {
	return i.ToStorageClusterSpecCloudStorageOutputWithContext(context.Background())
}

func (i StorageClusterSpecCloudStorageArgs) ToStorageClusterSpecCloudStorageOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecCloudStorageOutput)
}

func (i StorageClusterSpecCloudStorageArgs) ToStorageClusterSpecCloudStoragePtrOutput() StorageClusterSpecCloudStoragePtrOutput {
	return i.ToStorageClusterSpecCloudStoragePtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecCloudStorageArgs) ToStorageClusterSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecCloudStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecCloudStorageOutput).ToStorageClusterSpecCloudStoragePtrOutputWithContext(ctx)
}

// StorageClusterSpecCloudStoragePtrInput is an input type that accepts StorageClusterSpecCloudStorageArgs, StorageClusterSpecCloudStoragePtr and StorageClusterSpecCloudStoragePtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecCloudStoragePtrInput` via:
//
//          StorageClusterSpecCloudStorageArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecCloudStoragePtrInput interface {
	pulumi.Input

	ToStorageClusterSpecCloudStoragePtrOutput() StorageClusterSpecCloudStoragePtrOutput
	ToStorageClusterSpecCloudStoragePtrOutputWithContext(context.Context) StorageClusterSpecCloudStoragePtrOutput
}

type storageClusterSpecCloudStoragePtrType StorageClusterSpecCloudStorageArgs

func StorageClusterSpecCloudStoragePtr(v *StorageClusterSpecCloudStorageArgs) StorageClusterSpecCloudStoragePtrInput {
	return (*storageClusterSpecCloudStoragePtrType)(v)
}

func (*storageClusterSpecCloudStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecCloudStorage)(nil)).Elem()
}

func (i *storageClusterSpecCloudStoragePtrType) ToStorageClusterSpecCloudStoragePtrOutput() StorageClusterSpecCloudStoragePtrOutput {
	return i.ToStorageClusterSpecCloudStoragePtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecCloudStoragePtrType) ToStorageClusterSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecCloudStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecCloudStoragePtrOutput)
}

// Details of storage used in cloud environment.
type StorageClusterSpecCloudStorageOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecCloudStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecCloudStorage)(nil)).Elem()
}

func (o StorageClusterSpecCloudStorageOutput) ToStorageClusterSpecCloudStorageOutput() StorageClusterSpecCloudStorageOutput {
	return o
}

func (o StorageClusterSpecCloudStorageOutput) ToStorageClusterSpecCloudStorageOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageOutput {
	return o
}

func (o StorageClusterSpecCloudStorageOutput) ToStorageClusterSpecCloudStoragePtrOutput() StorageClusterSpecCloudStoragePtrOutput {
	return o.ToStorageClusterSpecCloudStoragePtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecCloudStorageOutput) ToStorageClusterSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecCloudStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) *StorageClusterSpecCloudStorage {
		return &v
	}).(StorageClusterSpecCloudStoragePtrOutput)
}

// List of cluster wide storage types and their capacities. A single capacity spec identifies a storage pool with a set of minimum requested IOPS and size. Based on the cloud provider, the total storage capacity will get divided amongst the nodes. The nodes bearing storage themselves will get uniformly distributed across all the zones.
func (o StorageClusterSpecCloudStorageOutput) CapacitySpecs() StorageClusterSpecCloudStorageCapacitySpecsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) []StorageClusterSpecCloudStorageCapacitySpecs {
		return v.CapacitySpecs
	}).(StorageClusterSpecCloudStorageCapacitySpecsArrayOutput)
}

// List of storage device specs. A cloud storage device will be created for every spec in the list. The specs will be applied to all nodes in the cluster up to spec.cloudStorage.maxStorageNodes or spec.cloudStorage.maxStorageNodesPerZone. This will be ignored if spec.cloudStorage.capacitySpecs is present.
func (o StorageClusterSpecCloudStorageOutput) DeviceSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) []string { return v.DeviceSpecs }).(pulumi.StringArrayOutput)
}

// Device spec for the journal device.
func (o StorageClusterSpecCloudStorageOutput) JournalDeviceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) *string { return v.JournalDeviceSpec }).(pulumi.StringPtrOutput)
}

// Device spec for internal KVDB device.
func (o StorageClusterSpecCloudStorageOutput) KvdbDeviceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) *string { return v.KvdbDeviceSpec }).(pulumi.StringPtrOutput)
}

// Maximum nodes that will have storage in the cluster.
func (o StorageClusterSpecCloudStorageOutput) MaxStorageNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) *int { return v.MaxStorageNodes }).(pulumi.IntPtrOutput)
}

// Maximum nodes in every zone that will have storage in the cluster.
func (o StorageClusterSpecCloudStorageOutput) MaxStorageNodesPerZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) *int { return v.MaxStorageNodesPerZone }).(pulumi.IntPtrOutput)
}

// Device spec for the metadata device. This device will be used to store system metadata by the driver.
func (o StorageClusterSpecCloudStorageOutput) SystemMetadataDeviceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorage) *string { return v.SystemMetadataDeviceSpec }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecCloudStoragePtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecCloudStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecCloudStorage)(nil)).Elem()
}

func (o StorageClusterSpecCloudStoragePtrOutput) ToStorageClusterSpecCloudStoragePtrOutput() StorageClusterSpecCloudStoragePtrOutput {
	return o
}

func (o StorageClusterSpecCloudStoragePtrOutput) ToStorageClusterSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecCloudStoragePtrOutput {
	return o
}

func (o StorageClusterSpecCloudStoragePtrOutput) Elem() StorageClusterSpecCloudStorageOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) StorageClusterSpecCloudStorage { return *v }).(StorageClusterSpecCloudStorageOutput)
}

// List of cluster wide storage types and their capacities. A single capacity spec identifies a storage pool with a set of minimum requested IOPS and size. Based on the cloud provider, the total storage capacity will get divided amongst the nodes. The nodes bearing storage themselves will get uniformly distributed across all the zones.
func (o StorageClusterSpecCloudStoragePtrOutput) CapacitySpecs() StorageClusterSpecCloudStorageCapacitySpecsArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) []StorageClusterSpecCloudStorageCapacitySpecs {
		if v == nil {
			return nil
		}
		return v.CapacitySpecs
	}).(StorageClusterSpecCloudStorageCapacitySpecsArrayOutput)
}

// List of storage device specs. A cloud storage device will be created for every spec in the list. The specs will be applied to all nodes in the cluster up to spec.cloudStorage.maxStorageNodes or spec.cloudStorage.maxStorageNodesPerZone. This will be ignored if spec.cloudStorage.capacitySpecs is present.
func (o StorageClusterSpecCloudStoragePtrOutput) DeviceSpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) []string {
		if v == nil {
			return nil
		}
		return v.DeviceSpecs
	}).(pulumi.StringArrayOutput)
}

// Device spec for the journal device.
func (o StorageClusterSpecCloudStoragePtrOutput) JournalDeviceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) *string {
		if v == nil {
			return nil
		}
		return v.JournalDeviceSpec
	}).(pulumi.StringPtrOutput)
}

// Device spec for internal KVDB device.
func (o StorageClusterSpecCloudStoragePtrOutput) KvdbDeviceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) *string {
		if v == nil {
			return nil
		}
		return v.KvdbDeviceSpec
	}).(pulumi.StringPtrOutput)
}

// Maximum nodes that will have storage in the cluster.
func (o StorageClusterSpecCloudStoragePtrOutput) MaxStorageNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) *int {
		if v == nil {
			return nil
		}
		return v.MaxStorageNodes
	}).(pulumi.IntPtrOutput)
}

// Maximum nodes in every zone that will have storage in the cluster.
func (o StorageClusterSpecCloudStoragePtrOutput) MaxStorageNodesPerZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) *int {
		if v == nil {
			return nil
		}
		return v.MaxStorageNodesPerZone
	}).(pulumi.IntPtrOutput)
}

// Device spec for the metadata device. This device will be used to store system metadata by the driver.
func (o StorageClusterSpecCloudStoragePtrOutput) SystemMetadataDeviceSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecCloudStorage) *string {
		if v == nil {
			return nil
		}
		return v.SystemMetadataDeviceSpec
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecCloudStorageCapacitySpecs struct {
	// Maximum capacity for this storage cluster. The total capacity of devices created by this capacity spec should not be greater than this number for the entire cluster.
	MaxCapacityInGiB *int `pulumi:"maxCapacityInGiB"`
	// Minimum capacity for this storage cluster. The total capacity of devices created by this capacity spec should not be less than this number for the entire cluster.
	MinCapacityInGiB *int `pulumi:"minCapacityInGiB"`
	// Minimum IOPS expected from the cloud drive.
	MinIOPS *int `pulumi:"minIOPS"`
	// Additional options required to provision the drive in cloud.
	Options map[string]interface{} `pulumi:"options"`
}

// StorageClusterSpecCloudStorageCapacitySpecsInput is an input type that accepts StorageClusterSpecCloudStorageCapacitySpecsArgs and StorageClusterSpecCloudStorageCapacitySpecsOutput values.
// You can construct a concrete instance of `StorageClusterSpecCloudStorageCapacitySpecsInput` via:
//
//          StorageClusterSpecCloudStorageCapacitySpecsArgs{...}
type StorageClusterSpecCloudStorageCapacitySpecsInput interface {
	pulumi.Input

	ToStorageClusterSpecCloudStorageCapacitySpecsOutput() StorageClusterSpecCloudStorageCapacitySpecsOutput
	ToStorageClusterSpecCloudStorageCapacitySpecsOutputWithContext(context.Context) StorageClusterSpecCloudStorageCapacitySpecsOutput
}

type StorageClusterSpecCloudStorageCapacitySpecsArgs struct {
	// Maximum capacity for this storage cluster. The total capacity of devices created by this capacity spec should not be greater than this number for the entire cluster.
	MaxCapacityInGiB pulumi.IntPtrInput `pulumi:"maxCapacityInGiB"`
	// Minimum capacity for this storage cluster. The total capacity of devices created by this capacity spec should not be less than this number for the entire cluster.
	MinCapacityInGiB pulumi.IntPtrInput `pulumi:"minCapacityInGiB"`
	// Minimum IOPS expected from the cloud drive.
	MinIOPS pulumi.IntPtrInput `pulumi:"minIOPS"`
	// Additional options required to provision the drive in cloud.
	Options pulumi.MapInput `pulumi:"options"`
}

func (StorageClusterSpecCloudStorageCapacitySpecsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecCloudStorageCapacitySpecs)(nil)).Elem()
}

func (i StorageClusterSpecCloudStorageCapacitySpecsArgs) ToStorageClusterSpecCloudStorageCapacitySpecsOutput() StorageClusterSpecCloudStorageCapacitySpecsOutput {
	return i.ToStorageClusterSpecCloudStorageCapacitySpecsOutputWithContext(context.Background())
}

func (i StorageClusterSpecCloudStorageCapacitySpecsArgs) ToStorageClusterSpecCloudStorageCapacitySpecsOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageCapacitySpecsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecCloudStorageCapacitySpecsOutput)
}

// StorageClusterSpecCloudStorageCapacitySpecsArrayInput is an input type that accepts StorageClusterSpecCloudStorageCapacitySpecsArray and StorageClusterSpecCloudStorageCapacitySpecsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecCloudStorageCapacitySpecsArrayInput` via:
//
//          StorageClusterSpecCloudStorageCapacitySpecsArray{ StorageClusterSpecCloudStorageCapacitySpecsArgs{...} }
type StorageClusterSpecCloudStorageCapacitySpecsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutput() StorageClusterSpecCloudStorageCapacitySpecsArrayOutput
	ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutputWithContext(context.Context) StorageClusterSpecCloudStorageCapacitySpecsArrayOutput
}

type StorageClusterSpecCloudStorageCapacitySpecsArray []StorageClusterSpecCloudStorageCapacitySpecsInput

func (StorageClusterSpecCloudStorageCapacitySpecsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecCloudStorageCapacitySpecs)(nil)).Elem()
}

func (i StorageClusterSpecCloudStorageCapacitySpecsArray) ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutput() StorageClusterSpecCloudStorageCapacitySpecsArrayOutput {
	return i.ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecCloudStorageCapacitySpecsArray) ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageCapacitySpecsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecCloudStorageCapacitySpecsArrayOutput)
}

type StorageClusterSpecCloudStorageCapacitySpecsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecCloudStorageCapacitySpecsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecCloudStorageCapacitySpecs)(nil)).Elem()
}

func (o StorageClusterSpecCloudStorageCapacitySpecsOutput) ToStorageClusterSpecCloudStorageCapacitySpecsOutput() StorageClusterSpecCloudStorageCapacitySpecsOutput {
	return o
}

func (o StorageClusterSpecCloudStorageCapacitySpecsOutput) ToStorageClusterSpecCloudStorageCapacitySpecsOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageCapacitySpecsOutput {
	return o
}

// Maximum capacity for this storage cluster. The total capacity of devices created by this capacity spec should not be greater than this number for the entire cluster.
func (o StorageClusterSpecCloudStorageCapacitySpecsOutput) MaxCapacityInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorageCapacitySpecs) *int { return v.MaxCapacityInGiB }).(pulumi.IntPtrOutput)
}

// Minimum capacity for this storage cluster. The total capacity of devices created by this capacity spec should not be less than this number for the entire cluster.
func (o StorageClusterSpecCloudStorageCapacitySpecsOutput) MinCapacityInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorageCapacitySpecs) *int { return v.MinCapacityInGiB }).(pulumi.IntPtrOutput)
}

// Minimum IOPS expected from the cloud drive.
func (o StorageClusterSpecCloudStorageCapacitySpecsOutput) MinIOPS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorageCapacitySpecs) *int { return v.MinIOPS }).(pulumi.IntPtrOutput)
}

// Additional options required to provision the drive in cloud.
func (o StorageClusterSpecCloudStorageCapacitySpecsOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpecCloudStorageCapacitySpecs) map[string]interface{} { return v.Options }).(pulumi.MapOutput)
}

type StorageClusterSpecCloudStorageCapacitySpecsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecCloudStorageCapacitySpecsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecCloudStorageCapacitySpecs)(nil)).Elem()
}

func (o StorageClusterSpecCloudStorageCapacitySpecsArrayOutput) ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutput() StorageClusterSpecCloudStorageCapacitySpecsArrayOutput {
	return o
}

func (o StorageClusterSpecCloudStorageCapacitySpecsArrayOutput) ToStorageClusterSpecCloudStorageCapacitySpecsArrayOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageCapacitySpecsArrayOutput {
	return o
}

func (o StorageClusterSpecCloudStorageCapacitySpecsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecCloudStorageCapacitySpecsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecCloudStorageCapacitySpecs {
		return vs[0].([]StorageClusterSpecCloudStorageCapacitySpecs)[vs[1].(int)]
	}).(StorageClusterSpecCloudStorageCapacitySpecsOutput)
}

// Additional options required to provision the drive in cloud.
type StorageClusterSpecCloudStorageCapacitySpecsOptions struct {
}

// StorageClusterSpecCloudStorageCapacitySpecsOptionsInput is an input type that accepts StorageClusterSpecCloudStorageCapacitySpecsOptionsArgs and StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput values.
// You can construct a concrete instance of `StorageClusterSpecCloudStorageCapacitySpecsOptionsInput` via:
//
//          StorageClusterSpecCloudStorageCapacitySpecsOptionsArgs{...}
type StorageClusterSpecCloudStorageCapacitySpecsOptionsInput interface {
	pulumi.Input

	ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutput() StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput
	ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutputWithContext(context.Context) StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput
}

// Additional options required to provision the drive in cloud.
type StorageClusterSpecCloudStorageCapacitySpecsOptionsArgs struct {
}

func (StorageClusterSpecCloudStorageCapacitySpecsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecCloudStorageCapacitySpecsOptions)(nil)).Elem()
}

func (i StorageClusterSpecCloudStorageCapacitySpecsOptionsArgs) ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutput() StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput {
	return i.ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutputWithContext(context.Background())
}

func (i StorageClusterSpecCloudStorageCapacitySpecsOptionsArgs) ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput)
}

// Additional options required to provision the drive in cloud.
type StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecCloudStorageCapacitySpecsOptions)(nil)).Elem()
}

func (o StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput) ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutput() StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput {
	return o
}

func (o StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput) ToStorageClusterSpecCloudStorageCapacitySpecsOptionsOutputWithContext(ctx context.Context) StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput {
	return o
}

// Delete strategy to uninstall and wipe the storage cluster.
type StorageClusterSpecDeleteStrategy struct {
	// Type of storage cluster delete. Can be Uninstall or UninstallAndWipe. There is no default delete strategy. When no delete strategy only objects managed by the StorageCluster controller and owned by the StorageCluster object are deleted. The storage driver will be left in a state where it will not be managed by any object. Uninstall strategy ensures that the cluster is completely uninstalled even from the storage driver perspective. UninstallAndWipe strategy ensures that the cluster is completely uninstalled as well as the storage devices and metadata are wiped for reuse. This may result in data loss.
	Type *string `pulumi:"type"`
}

// StorageClusterSpecDeleteStrategyInput is an input type that accepts StorageClusterSpecDeleteStrategyArgs and StorageClusterSpecDeleteStrategyOutput values.
// You can construct a concrete instance of `StorageClusterSpecDeleteStrategyInput` via:
//
//          StorageClusterSpecDeleteStrategyArgs{...}
type StorageClusterSpecDeleteStrategyInput interface {
	pulumi.Input

	ToStorageClusterSpecDeleteStrategyOutput() StorageClusterSpecDeleteStrategyOutput
	ToStorageClusterSpecDeleteStrategyOutputWithContext(context.Context) StorageClusterSpecDeleteStrategyOutput
}

// Delete strategy to uninstall and wipe the storage cluster.
type StorageClusterSpecDeleteStrategyArgs struct {
	// Type of storage cluster delete. Can be Uninstall or UninstallAndWipe. There is no default delete strategy. When no delete strategy only objects managed by the StorageCluster controller and owned by the StorageCluster object are deleted. The storage driver will be left in a state where it will not be managed by any object. Uninstall strategy ensures that the cluster is completely uninstalled even from the storage driver perspective. UninstallAndWipe strategy ensures that the cluster is completely uninstalled as well as the storage devices and metadata are wiped for reuse. This may result in data loss.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageClusterSpecDeleteStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecDeleteStrategy)(nil)).Elem()
}

func (i StorageClusterSpecDeleteStrategyArgs) ToStorageClusterSpecDeleteStrategyOutput() StorageClusterSpecDeleteStrategyOutput {
	return i.ToStorageClusterSpecDeleteStrategyOutputWithContext(context.Background())
}

func (i StorageClusterSpecDeleteStrategyArgs) ToStorageClusterSpecDeleteStrategyOutputWithContext(ctx context.Context) StorageClusterSpecDeleteStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecDeleteStrategyOutput)
}

func (i StorageClusterSpecDeleteStrategyArgs) ToStorageClusterSpecDeleteStrategyPtrOutput() StorageClusterSpecDeleteStrategyPtrOutput {
	return i.ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecDeleteStrategyArgs) ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecDeleteStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecDeleteStrategyOutput).ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(ctx)
}

// StorageClusterSpecDeleteStrategyPtrInput is an input type that accepts StorageClusterSpecDeleteStrategyArgs, StorageClusterSpecDeleteStrategyPtr and StorageClusterSpecDeleteStrategyPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecDeleteStrategyPtrInput` via:
//
//          StorageClusterSpecDeleteStrategyArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecDeleteStrategyPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecDeleteStrategyPtrOutput() StorageClusterSpecDeleteStrategyPtrOutput
	ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(context.Context) StorageClusterSpecDeleteStrategyPtrOutput
}

type storageClusterSpecDeleteStrategyPtrType StorageClusterSpecDeleteStrategyArgs

func StorageClusterSpecDeleteStrategyPtr(v *StorageClusterSpecDeleteStrategyArgs) StorageClusterSpecDeleteStrategyPtrInput {
	return (*storageClusterSpecDeleteStrategyPtrType)(v)
}

func (*storageClusterSpecDeleteStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecDeleteStrategy)(nil)).Elem()
}

func (i *storageClusterSpecDeleteStrategyPtrType) ToStorageClusterSpecDeleteStrategyPtrOutput() StorageClusterSpecDeleteStrategyPtrOutput {
	return i.ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecDeleteStrategyPtrType) ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecDeleteStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecDeleteStrategyPtrOutput)
}

// Delete strategy to uninstall and wipe the storage cluster.
type StorageClusterSpecDeleteStrategyOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecDeleteStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecDeleteStrategy)(nil)).Elem()
}

func (o StorageClusterSpecDeleteStrategyOutput) ToStorageClusterSpecDeleteStrategyOutput() StorageClusterSpecDeleteStrategyOutput {
	return o
}

func (o StorageClusterSpecDeleteStrategyOutput) ToStorageClusterSpecDeleteStrategyOutputWithContext(ctx context.Context) StorageClusterSpecDeleteStrategyOutput {
	return o
}

func (o StorageClusterSpecDeleteStrategyOutput) ToStorageClusterSpecDeleteStrategyPtrOutput() StorageClusterSpecDeleteStrategyPtrOutput {
	return o.ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecDeleteStrategyOutput) ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecDeleteStrategyPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecDeleteStrategy) *StorageClusterSpecDeleteStrategy {
		return &v
	}).(StorageClusterSpecDeleteStrategyPtrOutput)
}

// Type of storage cluster delete. Can be Uninstall or UninstallAndWipe. There is no default delete strategy. When no delete strategy only objects managed by the StorageCluster controller and owned by the StorageCluster object are deleted. The storage driver will be left in a state where it will not be managed by any object. Uninstall strategy ensures that the cluster is completely uninstalled even from the storage driver perspective. UninstallAndWipe strategy ensures that the cluster is completely uninstalled as well as the storage devices and metadata are wiped for reuse. This may result in data loss.
func (o StorageClusterSpecDeleteStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecDeleteStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecDeleteStrategyPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecDeleteStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecDeleteStrategy)(nil)).Elem()
}

func (o StorageClusterSpecDeleteStrategyPtrOutput) ToStorageClusterSpecDeleteStrategyPtrOutput() StorageClusterSpecDeleteStrategyPtrOutput {
	return o
}

func (o StorageClusterSpecDeleteStrategyPtrOutput) ToStorageClusterSpecDeleteStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecDeleteStrategyPtrOutput {
	return o
}

func (o StorageClusterSpecDeleteStrategyPtrOutput) Elem() StorageClusterSpecDeleteStrategyOutput {
	return o.ApplyT(func(v *StorageClusterSpecDeleteStrategy) StorageClusterSpecDeleteStrategy { return *v }).(StorageClusterSpecDeleteStrategyOutput)
}

// Type of storage cluster delete. Can be Uninstall or UninstallAndWipe. There is no default delete strategy. When no delete strategy only objects managed by the StorageCluster controller and owned by the StorageCluster object are deleted. The storage driver will be left in a state where it will not be managed by any object. Uninstall strategy ensures that the cluster is completely uninstalled even from the storage driver perspective. UninstallAndWipe strategy ensures that the cluster is completely uninstalled as well as the storage devices and metadata are wiped for reuse. This may result in data loss.
func (o StorageClusterSpecDeleteStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecDeleteStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecEnv struct {
	Name      *string                         `pulumi:"name"`
	Value     *string                         `pulumi:"value"`
	ValueFrom *StorageClusterSpecEnvValueFrom `pulumi:"valueFrom"`
}

// StorageClusterSpecEnvInput is an input type that accepts StorageClusterSpecEnvArgs and StorageClusterSpecEnvOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvInput` via:
//
//          StorageClusterSpecEnvArgs{...}
type StorageClusterSpecEnvInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvOutput() StorageClusterSpecEnvOutput
	ToStorageClusterSpecEnvOutputWithContext(context.Context) StorageClusterSpecEnvOutput
}

type StorageClusterSpecEnvArgs struct {
	Name      pulumi.StringPtrInput                  `pulumi:"name"`
	Value     pulumi.StringPtrInput                  `pulumi:"value"`
	ValueFrom StorageClusterSpecEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (StorageClusterSpecEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnv)(nil)).Elem()
}

func (i StorageClusterSpecEnvArgs) ToStorageClusterSpecEnvOutput() StorageClusterSpecEnvOutput {
	return i.ToStorageClusterSpecEnvOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvArgs) ToStorageClusterSpecEnvOutputWithContext(ctx context.Context) StorageClusterSpecEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvOutput)
}

// StorageClusterSpecEnvArrayInput is an input type that accepts StorageClusterSpecEnvArray and StorageClusterSpecEnvArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvArrayInput` via:
//
//          StorageClusterSpecEnvArray{ StorageClusterSpecEnvArgs{...} }
type StorageClusterSpecEnvArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvArrayOutput() StorageClusterSpecEnvArrayOutput
	ToStorageClusterSpecEnvArrayOutputWithContext(context.Context) StorageClusterSpecEnvArrayOutput
}

type StorageClusterSpecEnvArray []StorageClusterSpecEnvInput

func (StorageClusterSpecEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecEnv)(nil)).Elem()
}

func (i StorageClusterSpecEnvArray) ToStorageClusterSpecEnvArrayOutput() StorageClusterSpecEnvArrayOutput {
	return i.ToStorageClusterSpecEnvArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvArray) ToStorageClusterSpecEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvArrayOutput)
}

type StorageClusterSpecEnvOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnv)(nil)).Elem()
}

func (o StorageClusterSpecEnvOutput) ToStorageClusterSpecEnvOutput() StorageClusterSpecEnvOutput {
	return o
}

func (o StorageClusterSpecEnvOutput) ToStorageClusterSpecEnvOutputWithContext(ctx context.Context) StorageClusterSpecEnvOutput {
	return o
}

func (o StorageClusterSpecEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvOutput) ValueFrom() StorageClusterSpecEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnv) *StorageClusterSpecEnvValueFrom { return v.ValueFrom }).(StorageClusterSpecEnvValueFromPtrOutput)
}

type StorageClusterSpecEnvArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecEnv)(nil)).Elem()
}

func (o StorageClusterSpecEnvArrayOutput) ToStorageClusterSpecEnvArrayOutput() StorageClusterSpecEnvArrayOutput {
	return o
}

func (o StorageClusterSpecEnvArrayOutput) ToStorageClusterSpecEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecEnvArrayOutput {
	return o
}

func (o StorageClusterSpecEnvArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecEnv {
		return vs[0].([]StorageClusterSpecEnv)[vs[1].(int)]
	}).(StorageClusterSpecEnvOutput)
}

type StorageClusterSpecEnvValueFrom struct {
	ConfigMapKeyRef  *StorageClusterSpecEnvValueFromConfigMapKeyRef  `pulumi:"configMapKeyRef"`
	FieldRef         *StorageClusterSpecEnvValueFromFieldRef         `pulumi:"fieldRef"`
	ResourceFieldRef *StorageClusterSpecEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	SecretKeyRef     *StorageClusterSpecEnvValueFromSecretKeyRef     `pulumi:"secretKeyRef"`
}

// StorageClusterSpecEnvValueFromInput is an input type that accepts StorageClusterSpecEnvValueFromArgs and StorageClusterSpecEnvValueFromOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromInput` via:
//
//          StorageClusterSpecEnvValueFromArgs{...}
type StorageClusterSpecEnvValueFromInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromOutput() StorageClusterSpecEnvValueFromOutput
	ToStorageClusterSpecEnvValueFromOutputWithContext(context.Context) StorageClusterSpecEnvValueFromOutput
}

type StorageClusterSpecEnvValueFromArgs struct {
	ConfigMapKeyRef  StorageClusterSpecEnvValueFromConfigMapKeyRefPtrInput  `pulumi:"configMapKeyRef"`
	FieldRef         StorageClusterSpecEnvValueFromFieldRefPtrInput         `pulumi:"fieldRef"`
	ResourceFieldRef StorageClusterSpecEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	SecretKeyRef     StorageClusterSpecEnvValueFromSecretKeyRefPtrInput     `pulumi:"secretKeyRef"`
}

func (StorageClusterSpecEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFrom)(nil)).Elem()
}

func (i StorageClusterSpecEnvValueFromArgs) ToStorageClusterSpecEnvValueFromOutput() StorageClusterSpecEnvValueFromOutput {
	return i.ToStorageClusterSpecEnvValueFromOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromArgs) ToStorageClusterSpecEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromOutput)
}

func (i StorageClusterSpecEnvValueFromArgs) ToStorageClusterSpecEnvValueFromPtrOutput() StorageClusterSpecEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromArgs) ToStorageClusterSpecEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromOutput).ToStorageClusterSpecEnvValueFromPtrOutputWithContext(ctx)
}

// StorageClusterSpecEnvValueFromPtrInput is an input type that accepts StorageClusterSpecEnvValueFromArgs, StorageClusterSpecEnvValueFromPtr and StorageClusterSpecEnvValueFromPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromPtrInput` via:
//
//          StorageClusterSpecEnvValueFromArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecEnvValueFromPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromPtrOutput() StorageClusterSpecEnvValueFromPtrOutput
	ToStorageClusterSpecEnvValueFromPtrOutputWithContext(context.Context) StorageClusterSpecEnvValueFromPtrOutput
}

type storageClusterSpecEnvValueFromPtrType StorageClusterSpecEnvValueFromArgs

func StorageClusterSpecEnvValueFromPtr(v *StorageClusterSpecEnvValueFromArgs) StorageClusterSpecEnvValueFromPtrInput {
	return (*storageClusterSpecEnvValueFromPtrType)(v)
}

func (*storageClusterSpecEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFrom)(nil)).Elem()
}

func (i *storageClusterSpecEnvValueFromPtrType) ToStorageClusterSpecEnvValueFromPtrOutput() StorageClusterSpecEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecEnvValueFromPtrType) ToStorageClusterSpecEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromPtrOutput)
}

type StorageClusterSpecEnvValueFromOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromOutput) ToStorageClusterSpecEnvValueFromOutput() StorageClusterSpecEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromOutput) ToStorageClusterSpecEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromOutput) ToStorageClusterSpecEnvValueFromPtrOutput() StorageClusterSpecEnvValueFromPtrOutput {
	return o.ToStorageClusterSpecEnvValueFromPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecEnvValueFromOutput) ToStorageClusterSpecEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFrom {
		return &v
	}).(StorageClusterSpecEnvValueFromPtrOutput)
}
func (o StorageClusterSpecEnvValueFromOutput) ConfigMapKeyRef() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecEnvValueFromOutput) FieldRef() StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromFieldRef { return v.FieldRef }).(StorageClusterSpecEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecEnvValueFromOutput) ResourceFieldRef() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecEnvValueFromOutput) SecretKeyRef() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromPtrOutput) ToStorageClusterSpecEnvValueFromPtrOutput() StorageClusterSpecEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromPtrOutput) ToStorageClusterSpecEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromPtrOutput) Elem() StorageClusterSpecEnvValueFromOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFrom) StorageClusterSpecEnvValueFrom { return *v }).(StorageClusterSpecEnvValueFromOutput)
}

func (o StorageClusterSpecEnvValueFromPtrOutput) ConfigMapKeyRef() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecEnvValueFromPtrOutput) FieldRef() StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(StorageClusterSpecEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecEnvValueFromPtrOutput) ResourceFieldRef() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecEnvValueFromPtrOutput) SecretKeyRef() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFrom) *StorageClusterSpecEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecEnvValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecEnvValueFromConfigMapKeyRefInput is an input type that accepts StorageClusterSpecEnvValueFromConfigMapKeyRefArgs and StorageClusterSpecEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromConfigMapKeyRefInput` via:
//
//          StorageClusterSpecEnvValueFromConfigMapKeyRefArgs{...}
type StorageClusterSpecEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefOutput
	ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefOutput
}

type StorageClusterSpecEnvValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefOutput {
	return i.ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromConfigMapKeyRefOutput)
}

func (i StorageClusterSpecEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromConfigMapKeyRefOutput).ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts StorageClusterSpecEnvValueFromConfigMapKeyRefArgs, StorageClusterSpecEnvValueFromConfigMapKeyRefPtr and StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          StorageClusterSpecEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput
	ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput
}

type storageClusterSpecEnvValueFromConfigMapKeyRefPtrType StorageClusterSpecEnvValueFromConfigMapKeyRefArgs

func StorageClusterSpecEnvValueFromConfigMapKeyRefPtr(v *StorageClusterSpecEnvValueFromConfigMapKeyRefArgs) StorageClusterSpecEnvValueFromConfigMapKeyRefPtrInput {
	return (*storageClusterSpecEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*storageClusterSpecEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput)
}

type StorageClusterSpecEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromConfigMapKeyRef) *StorageClusterSpecEnvValueFromConfigMapKeyRef {
		return &v
	}).(StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput)
}
func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) Elem() StorageClusterSpecEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromConfigMapKeyRef) StorageClusterSpecEnvValueFromConfigMapKeyRef {
		return *v
	}).(StorageClusterSpecEnvValueFromConfigMapKeyRefOutput)
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecEnvValueFromFieldRef struct {
	ApiVersion *string `pulumi:"apiVersion"`
	FieldPath  *string `pulumi:"fieldPath"`
}

// StorageClusterSpecEnvValueFromFieldRefInput is an input type that accepts StorageClusterSpecEnvValueFromFieldRefArgs and StorageClusterSpecEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromFieldRefInput` via:
//
//          StorageClusterSpecEnvValueFromFieldRefArgs{...}
type StorageClusterSpecEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromFieldRefOutput() StorageClusterSpecEnvValueFromFieldRefOutput
	ToStorageClusterSpecEnvValueFromFieldRefOutputWithContext(context.Context) StorageClusterSpecEnvValueFromFieldRefOutput
}

type StorageClusterSpecEnvValueFromFieldRefArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	FieldPath  pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (StorageClusterSpecEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecEnvValueFromFieldRefArgs) ToStorageClusterSpecEnvValueFromFieldRefOutput() StorageClusterSpecEnvValueFromFieldRefOutput {
	return i.ToStorageClusterSpecEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromFieldRefArgs) ToStorageClusterSpecEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromFieldRefOutput)
}

func (i StorageClusterSpecEnvValueFromFieldRefArgs) ToStorageClusterSpecEnvValueFromFieldRefPtrOutput() StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromFieldRefArgs) ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromFieldRefOutput).ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecEnvValueFromFieldRefPtrInput is an input type that accepts StorageClusterSpecEnvValueFromFieldRefArgs, StorageClusterSpecEnvValueFromFieldRefPtr and StorageClusterSpecEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromFieldRefPtrInput` via:
//
//          StorageClusterSpecEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromFieldRefPtrOutput() StorageClusterSpecEnvValueFromFieldRefPtrOutput
	ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecEnvValueFromFieldRefPtrOutput
}

type storageClusterSpecEnvValueFromFieldRefPtrType StorageClusterSpecEnvValueFromFieldRefArgs

func StorageClusterSpecEnvValueFromFieldRefPtr(v *StorageClusterSpecEnvValueFromFieldRefArgs) StorageClusterSpecEnvValueFromFieldRefPtrInput {
	return (*storageClusterSpecEnvValueFromFieldRefPtrType)(v)
}

func (*storageClusterSpecEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecEnvValueFromFieldRefPtrType) ToStorageClusterSpecEnvValueFromFieldRefPtrOutput() StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecEnvValueFromFieldRefPtrType) ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromFieldRefPtrOutput)
}

type StorageClusterSpecEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromFieldRefOutput) ToStorageClusterSpecEnvValueFromFieldRefOutput() StorageClusterSpecEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromFieldRefOutput) ToStorageClusterSpecEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromFieldRefOutput) ToStorageClusterSpecEnvValueFromFieldRefPtrOutput() StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return o.ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecEnvValueFromFieldRefOutput) ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromFieldRef) *StorageClusterSpecEnvValueFromFieldRef {
		return &v
	}).(StorageClusterSpecEnvValueFromFieldRefPtrOutput)
}
func (o StorageClusterSpecEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromFieldRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecEnvValueFromFieldRefPtrOutput() StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromFieldRefPtrOutput) Elem() StorageClusterSpecEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromFieldRef) StorageClusterSpecEnvValueFromFieldRef { return *v }).(StorageClusterSpecEnvValueFromFieldRefOutput)
}

func (o StorageClusterSpecEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecEnvValueFromResourceFieldRef struct {
	ContainerName *string `pulumi:"containerName"`
	Divisor       *string `pulumi:"divisor"`
	Resource      *string `pulumi:"resource"`
}

// StorageClusterSpecEnvValueFromResourceFieldRefInput is an input type that accepts StorageClusterSpecEnvValueFromResourceFieldRefArgs and StorageClusterSpecEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromResourceFieldRefInput` via:
//
//          StorageClusterSpecEnvValueFromResourceFieldRefArgs{...}
type StorageClusterSpecEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromResourceFieldRefOutput() StorageClusterSpecEnvValueFromResourceFieldRefOutput
	ToStorageClusterSpecEnvValueFromResourceFieldRefOutputWithContext(context.Context) StorageClusterSpecEnvValueFromResourceFieldRefOutput
}

type StorageClusterSpecEnvValueFromResourceFieldRefArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	Divisor       pulumi.StringPtrInput `pulumi:"divisor"`
	Resource      pulumi.StringPtrInput `pulumi:"resource"`
}

func (StorageClusterSpecEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecEnvValueFromResourceFieldRefOutput() StorageClusterSpecEnvValueFromResourceFieldRefOutput {
	return i.ToStorageClusterSpecEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromResourceFieldRefOutput)
}

func (i StorageClusterSpecEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromResourceFieldRefOutput).ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecEnvValueFromResourceFieldRefPtrInput is an input type that accepts StorageClusterSpecEnvValueFromResourceFieldRefArgs, StorageClusterSpecEnvValueFromResourceFieldRefPtr and StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromResourceFieldRefPtrInput` via:
//
//          StorageClusterSpecEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput
	ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput
}

type storageClusterSpecEnvValueFromResourceFieldRefPtrType StorageClusterSpecEnvValueFromResourceFieldRefArgs

func StorageClusterSpecEnvValueFromResourceFieldRefPtr(v *StorageClusterSpecEnvValueFromResourceFieldRefArgs) StorageClusterSpecEnvValueFromResourceFieldRefPtrInput {
	return (*storageClusterSpecEnvValueFromResourceFieldRefPtrType)(v)
}

func (*storageClusterSpecEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput)
}

type StorageClusterSpecEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecEnvValueFromResourceFieldRefOutput() StorageClusterSpecEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return o.ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromResourceFieldRef) *StorageClusterSpecEnvValueFromResourceFieldRef {
		return &v
	}).(StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput)
}
func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromResourceFieldRef) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) Elem() StorageClusterSpecEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromResourceFieldRef) StorageClusterSpecEnvValueFromResourceFieldRef {
		return *v
	}).(StorageClusterSpecEnvValueFromResourceFieldRefOutput)
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecEnvValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecEnvValueFromSecretKeyRefInput is an input type that accepts StorageClusterSpecEnvValueFromSecretKeyRefArgs and StorageClusterSpecEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromSecretKeyRefInput` via:
//
//          StorageClusterSpecEnvValueFromSecretKeyRefArgs{...}
type StorageClusterSpecEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromSecretKeyRefOutput() StorageClusterSpecEnvValueFromSecretKeyRefOutput
	ToStorageClusterSpecEnvValueFromSecretKeyRefOutputWithContext(context.Context) StorageClusterSpecEnvValueFromSecretKeyRefOutput
}

type StorageClusterSpecEnvValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecEnvValueFromSecretKeyRefOutput() StorageClusterSpecEnvValueFromSecretKeyRefOutput {
	return i.ToStorageClusterSpecEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromSecretKeyRefOutput)
}

func (i StorageClusterSpecEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromSecretKeyRefOutput).ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecEnvValueFromSecretKeyRefPtrInput is an input type that accepts StorageClusterSpecEnvValueFromSecretKeyRefArgs, StorageClusterSpecEnvValueFromSecretKeyRefPtr and StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecEnvValueFromSecretKeyRefPtrInput` via:
//
//          StorageClusterSpecEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput
	ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput
}

type storageClusterSpecEnvValueFromSecretKeyRefPtrType StorageClusterSpecEnvValueFromSecretKeyRefArgs

func StorageClusterSpecEnvValueFromSecretKeyRefPtr(v *StorageClusterSpecEnvValueFromSecretKeyRefArgs) StorageClusterSpecEnvValueFromSecretKeyRefPtrInput {
	return (*storageClusterSpecEnvValueFromSecretKeyRefPtrType)(v)
}

func (*storageClusterSpecEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecEnvValueFromSecretKeyRefOutput() StorageClusterSpecEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return o.ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromSecretKeyRef) *StorageClusterSpecEnvValueFromSecretKeyRef {
		return &v
	}).(StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput)
}
func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) Elem() StorageClusterSpecEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromSecretKeyRef) StorageClusterSpecEnvValueFromSecretKeyRef {
		return *v
	}).(StorageClusterSpecEnvValueFromSecretKeyRefOutput)
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// This is a map of feature names to string values.
type StorageClusterSpecFeatureGates struct {
}

// StorageClusterSpecFeatureGatesInput is an input type that accepts StorageClusterSpecFeatureGatesArgs and StorageClusterSpecFeatureGatesOutput values.
// You can construct a concrete instance of `StorageClusterSpecFeatureGatesInput` via:
//
//          StorageClusterSpecFeatureGatesArgs{...}
type StorageClusterSpecFeatureGatesInput interface {
	pulumi.Input

	ToStorageClusterSpecFeatureGatesOutput() StorageClusterSpecFeatureGatesOutput
	ToStorageClusterSpecFeatureGatesOutputWithContext(context.Context) StorageClusterSpecFeatureGatesOutput
}

// This is a map of feature names to string values.
type StorageClusterSpecFeatureGatesArgs struct {
}

func (StorageClusterSpecFeatureGatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecFeatureGates)(nil)).Elem()
}

func (i StorageClusterSpecFeatureGatesArgs) ToStorageClusterSpecFeatureGatesOutput() StorageClusterSpecFeatureGatesOutput {
	return i.ToStorageClusterSpecFeatureGatesOutputWithContext(context.Background())
}

func (i StorageClusterSpecFeatureGatesArgs) ToStorageClusterSpecFeatureGatesOutputWithContext(ctx context.Context) StorageClusterSpecFeatureGatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecFeatureGatesOutput)
}

// This is a map of feature names to string values.
type StorageClusterSpecFeatureGatesOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecFeatureGatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecFeatureGates)(nil)).Elem()
}

func (o StorageClusterSpecFeatureGatesOutput) ToStorageClusterSpecFeatureGatesOutput() StorageClusterSpecFeatureGatesOutput {
	return o
}

func (o StorageClusterSpecFeatureGatesOutput) ToStorageClusterSpecFeatureGatesOutputWithContext(ctx context.Context) StorageClusterSpecFeatureGatesOutput {
	return o
}

// Details of KVDB that the storage driver will use.
type StorageClusterSpecKvdb struct {
	// Authentication secret is the name of Kubernetes secret containing information to authenticate with the external KVDB. It could have the username/password for basic auth, certificate information or an ACL token.
	AuthSecret *string `pulumi:"authSecret"`
	// If using external KVDB, this is the list of KVDB endpoints.
	Endpoints []string `pulumi:"endpoints"`
	// Flag indicating whether to use internal KVDB or an external KVDB.
	Internal *bool `pulumi:"internal"`
}

// StorageClusterSpecKvdbInput is an input type that accepts StorageClusterSpecKvdbArgs and StorageClusterSpecKvdbOutput values.
// You can construct a concrete instance of `StorageClusterSpecKvdbInput` via:
//
//          StorageClusterSpecKvdbArgs{...}
type StorageClusterSpecKvdbInput interface {
	pulumi.Input

	ToStorageClusterSpecKvdbOutput() StorageClusterSpecKvdbOutput
	ToStorageClusterSpecKvdbOutputWithContext(context.Context) StorageClusterSpecKvdbOutput
}

// Details of KVDB that the storage driver will use.
type StorageClusterSpecKvdbArgs struct {
	// Authentication secret is the name of Kubernetes secret containing information to authenticate with the external KVDB. It could have the username/password for basic auth, certificate information or an ACL token.
	AuthSecret pulumi.StringPtrInput `pulumi:"authSecret"`
	// If using external KVDB, this is the list of KVDB endpoints.
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Flag indicating whether to use internal KVDB or an external KVDB.
	Internal pulumi.BoolPtrInput `pulumi:"internal"`
}

func (StorageClusterSpecKvdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecKvdb)(nil)).Elem()
}

func (i StorageClusterSpecKvdbArgs) ToStorageClusterSpecKvdbOutput() StorageClusterSpecKvdbOutput {
	return i.ToStorageClusterSpecKvdbOutputWithContext(context.Background())
}

func (i StorageClusterSpecKvdbArgs) ToStorageClusterSpecKvdbOutputWithContext(ctx context.Context) StorageClusterSpecKvdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecKvdbOutput)
}

func (i StorageClusterSpecKvdbArgs) ToStorageClusterSpecKvdbPtrOutput() StorageClusterSpecKvdbPtrOutput {
	return i.ToStorageClusterSpecKvdbPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecKvdbArgs) ToStorageClusterSpecKvdbPtrOutputWithContext(ctx context.Context) StorageClusterSpecKvdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecKvdbOutput).ToStorageClusterSpecKvdbPtrOutputWithContext(ctx)
}

// StorageClusterSpecKvdbPtrInput is an input type that accepts StorageClusterSpecKvdbArgs, StorageClusterSpecKvdbPtr and StorageClusterSpecKvdbPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecKvdbPtrInput` via:
//
//          StorageClusterSpecKvdbArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecKvdbPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecKvdbPtrOutput() StorageClusterSpecKvdbPtrOutput
	ToStorageClusterSpecKvdbPtrOutputWithContext(context.Context) StorageClusterSpecKvdbPtrOutput
}

type storageClusterSpecKvdbPtrType StorageClusterSpecKvdbArgs

func StorageClusterSpecKvdbPtr(v *StorageClusterSpecKvdbArgs) StorageClusterSpecKvdbPtrInput {
	return (*storageClusterSpecKvdbPtrType)(v)
}

func (*storageClusterSpecKvdbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecKvdb)(nil)).Elem()
}

func (i *storageClusterSpecKvdbPtrType) ToStorageClusterSpecKvdbPtrOutput() StorageClusterSpecKvdbPtrOutput {
	return i.ToStorageClusterSpecKvdbPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecKvdbPtrType) ToStorageClusterSpecKvdbPtrOutputWithContext(ctx context.Context) StorageClusterSpecKvdbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecKvdbPtrOutput)
}

// Details of KVDB that the storage driver will use.
type StorageClusterSpecKvdbOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecKvdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecKvdb)(nil)).Elem()
}

func (o StorageClusterSpecKvdbOutput) ToStorageClusterSpecKvdbOutput() StorageClusterSpecKvdbOutput {
	return o
}

func (o StorageClusterSpecKvdbOutput) ToStorageClusterSpecKvdbOutputWithContext(ctx context.Context) StorageClusterSpecKvdbOutput {
	return o
}

func (o StorageClusterSpecKvdbOutput) ToStorageClusterSpecKvdbPtrOutput() StorageClusterSpecKvdbPtrOutput {
	return o.ToStorageClusterSpecKvdbPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecKvdbOutput) ToStorageClusterSpecKvdbPtrOutputWithContext(ctx context.Context) StorageClusterSpecKvdbPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecKvdb) *StorageClusterSpecKvdb {
		return &v
	}).(StorageClusterSpecKvdbPtrOutput)
}

// Authentication secret is the name of Kubernetes secret containing information to authenticate with the external KVDB. It could have the username/password for basic auth, certificate information or an ACL token.
func (o StorageClusterSpecKvdbOutput) AuthSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecKvdb) *string { return v.AuthSecret }).(pulumi.StringPtrOutput)
}

// If using external KVDB, this is the list of KVDB endpoints.
func (o StorageClusterSpecKvdbOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecKvdb) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Flag indicating whether to use internal KVDB or an external KVDB.
func (o StorageClusterSpecKvdbOutput) Internal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecKvdb) *bool { return v.Internal }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecKvdbPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecKvdbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecKvdb)(nil)).Elem()
}

func (o StorageClusterSpecKvdbPtrOutput) ToStorageClusterSpecKvdbPtrOutput() StorageClusterSpecKvdbPtrOutput {
	return o
}

func (o StorageClusterSpecKvdbPtrOutput) ToStorageClusterSpecKvdbPtrOutputWithContext(ctx context.Context) StorageClusterSpecKvdbPtrOutput {
	return o
}

func (o StorageClusterSpecKvdbPtrOutput) Elem() StorageClusterSpecKvdbOutput {
	return o.ApplyT(func(v *StorageClusterSpecKvdb) StorageClusterSpecKvdb { return *v }).(StorageClusterSpecKvdbOutput)
}

// Authentication secret is the name of Kubernetes secret containing information to authenticate with the external KVDB. It could have the username/password for basic auth, certificate information or an ACL token.
func (o StorageClusterSpecKvdbPtrOutput) AuthSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecKvdb) *string {
		if v == nil {
			return nil
		}
		return v.AuthSecret
	}).(pulumi.StringPtrOutput)
}

// If using external KVDB, this is the list of KVDB endpoints.
func (o StorageClusterSpecKvdbPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecKvdb) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Flag indicating whether to use internal KVDB or an external KVDB.
func (o StorageClusterSpecKvdbPtrOutput) Internal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecKvdb) *bool {
		if v == nil {
			return nil
		}
		return v.Internal
	}).(pulumi.BoolPtrOutput)
}

// Contains monitoring configuration for the storage cluster.
type StorageClusterSpecMonitoring struct {
	// If this flag is enabled it will expose the storage cluster metrics to external monitoring solutions like Prometheus. DEPRECATED - use prometheus.exportMetrics instead
	EnableMetrics *bool `pulumi:"enableMetrics"`
	// Contains configuration of Prometheus to monitor the storage cluster.
	Prometheus *StorageClusterSpecMonitoringPrometheus `pulumi:"prometheus"`
}

// StorageClusterSpecMonitoringInput is an input type that accepts StorageClusterSpecMonitoringArgs and StorageClusterSpecMonitoringOutput values.
// You can construct a concrete instance of `StorageClusterSpecMonitoringInput` via:
//
//          StorageClusterSpecMonitoringArgs{...}
type StorageClusterSpecMonitoringInput interface {
	pulumi.Input

	ToStorageClusterSpecMonitoringOutput() StorageClusterSpecMonitoringOutput
	ToStorageClusterSpecMonitoringOutputWithContext(context.Context) StorageClusterSpecMonitoringOutput
}

// Contains monitoring configuration for the storage cluster.
type StorageClusterSpecMonitoringArgs struct {
	// If this flag is enabled it will expose the storage cluster metrics to external monitoring solutions like Prometheus. DEPRECATED - use prometheus.exportMetrics instead
	EnableMetrics pulumi.BoolPtrInput `pulumi:"enableMetrics"`
	// Contains configuration of Prometheus to monitor the storage cluster.
	Prometheus StorageClusterSpecMonitoringPrometheusPtrInput `pulumi:"prometheus"`
}

func (StorageClusterSpecMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecMonitoring)(nil)).Elem()
}

func (i StorageClusterSpecMonitoringArgs) ToStorageClusterSpecMonitoringOutput() StorageClusterSpecMonitoringOutput {
	return i.ToStorageClusterSpecMonitoringOutputWithContext(context.Background())
}

func (i StorageClusterSpecMonitoringArgs) ToStorageClusterSpecMonitoringOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecMonitoringOutput)
}

func (i StorageClusterSpecMonitoringArgs) ToStorageClusterSpecMonitoringPtrOutput() StorageClusterSpecMonitoringPtrOutput {
	return i.ToStorageClusterSpecMonitoringPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecMonitoringArgs) ToStorageClusterSpecMonitoringPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecMonitoringOutput).ToStorageClusterSpecMonitoringPtrOutputWithContext(ctx)
}

// StorageClusterSpecMonitoringPtrInput is an input type that accepts StorageClusterSpecMonitoringArgs, StorageClusterSpecMonitoringPtr and StorageClusterSpecMonitoringPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecMonitoringPtrInput` via:
//
//          StorageClusterSpecMonitoringArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecMonitoringPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecMonitoringPtrOutput() StorageClusterSpecMonitoringPtrOutput
	ToStorageClusterSpecMonitoringPtrOutputWithContext(context.Context) StorageClusterSpecMonitoringPtrOutput
}

type storageClusterSpecMonitoringPtrType StorageClusterSpecMonitoringArgs

func StorageClusterSpecMonitoringPtr(v *StorageClusterSpecMonitoringArgs) StorageClusterSpecMonitoringPtrInput {
	return (*storageClusterSpecMonitoringPtrType)(v)
}

func (*storageClusterSpecMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecMonitoring)(nil)).Elem()
}

func (i *storageClusterSpecMonitoringPtrType) ToStorageClusterSpecMonitoringPtrOutput() StorageClusterSpecMonitoringPtrOutput {
	return i.ToStorageClusterSpecMonitoringPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecMonitoringPtrType) ToStorageClusterSpecMonitoringPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecMonitoringPtrOutput)
}

// Contains monitoring configuration for the storage cluster.
type StorageClusterSpecMonitoringOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecMonitoring)(nil)).Elem()
}

func (o StorageClusterSpecMonitoringOutput) ToStorageClusterSpecMonitoringOutput() StorageClusterSpecMonitoringOutput {
	return o
}

func (o StorageClusterSpecMonitoringOutput) ToStorageClusterSpecMonitoringOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringOutput {
	return o
}

func (o StorageClusterSpecMonitoringOutput) ToStorageClusterSpecMonitoringPtrOutput() StorageClusterSpecMonitoringPtrOutput {
	return o.ToStorageClusterSpecMonitoringPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecMonitoringOutput) ToStorageClusterSpecMonitoringPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoring) *StorageClusterSpecMonitoring {
		return &v
	}).(StorageClusterSpecMonitoringPtrOutput)
}

// If this flag is enabled it will expose the storage cluster metrics to external monitoring solutions like Prometheus. DEPRECATED - use prometheus.exportMetrics instead
func (o StorageClusterSpecMonitoringOutput) EnableMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoring) *bool { return v.EnableMetrics }).(pulumi.BoolPtrOutput)
}

// Contains configuration of Prometheus to monitor the storage cluster.
func (o StorageClusterSpecMonitoringOutput) Prometheus() StorageClusterSpecMonitoringPrometheusPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoring) *StorageClusterSpecMonitoringPrometheus { return v.Prometheus }).(StorageClusterSpecMonitoringPrometheusPtrOutput)
}

type StorageClusterSpecMonitoringPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecMonitoring)(nil)).Elem()
}

func (o StorageClusterSpecMonitoringPtrOutput) ToStorageClusterSpecMonitoringPtrOutput() StorageClusterSpecMonitoringPtrOutput {
	return o
}

func (o StorageClusterSpecMonitoringPtrOutput) ToStorageClusterSpecMonitoringPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPtrOutput {
	return o
}

func (o StorageClusterSpecMonitoringPtrOutput) Elem() StorageClusterSpecMonitoringOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoring) StorageClusterSpecMonitoring { return *v }).(StorageClusterSpecMonitoringOutput)
}

// If this flag is enabled it will expose the storage cluster metrics to external monitoring solutions like Prometheus. DEPRECATED - use prometheus.exportMetrics instead
func (o StorageClusterSpecMonitoringPtrOutput) EnableMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoring) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMetrics
	}).(pulumi.BoolPtrOutput)
}

// Contains configuration of Prometheus to monitor the storage cluster.
func (o StorageClusterSpecMonitoringPtrOutput) Prometheus() StorageClusterSpecMonitoringPrometheusPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoring) *StorageClusterSpecMonitoringPrometheus {
		if v == nil {
			return nil
		}
		return v.Prometheus
	}).(StorageClusterSpecMonitoringPrometheusPtrOutput)
}

// Contains configuration of Prometheus to monitor the storage cluster.
type StorageClusterSpecMonitoringPrometheus struct {
	// Flag indicating whether Prometheus stack needs to be enabled and deployed by the Storage operator.
	Enabled *bool `pulumi:"enabled"`
	// If this flag is enabled it will expose the storage cluster metrics to Prometheus.
	ExportMetrics *bool `pulumi:"exportMetrics"`
	// Specifies the remote write endpoint for Prometheus.
	RemoteWriteEndpoint *string `pulumi:"remoteWriteEndpoint"`
}

// StorageClusterSpecMonitoringPrometheusInput is an input type that accepts StorageClusterSpecMonitoringPrometheusArgs and StorageClusterSpecMonitoringPrometheusOutput values.
// You can construct a concrete instance of `StorageClusterSpecMonitoringPrometheusInput` via:
//
//          StorageClusterSpecMonitoringPrometheusArgs{...}
type StorageClusterSpecMonitoringPrometheusInput interface {
	pulumi.Input

	ToStorageClusterSpecMonitoringPrometheusOutput() StorageClusterSpecMonitoringPrometheusOutput
	ToStorageClusterSpecMonitoringPrometheusOutputWithContext(context.Context) StorageClusterSpecMonitoringPrometheusOutput
}

// Contains configuration of Prometheus to monitor the storage cluster.
type StorageClusterSpecMonitoringPrometheusArgs struct {
	// Flag indicating whether Prometheus stack needs to be enabled and deployed by the Storage operator.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// If this flag is enabled it will expose the storage cluster metrics to Prometheus.
	ExportMetrics pulumi.BoolPtrInput `pulumi:"exportMetrics"`
	// Specifies the remote write endpoint for Prometheus.
	RemoteWriteEndpoint pulumi.StringPtrInput `pulumi:"remoteWriteEndpoint"`
}

func (StorageClusterSpecMonitoringPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecMonitoringPrometheus)(nil)).Elem()
}

func (i StorageClusterSpecMonitoringPrometheusArgs) ToStorageClusterSpecMonitoringPrometheusOutput() StorageClusterSpecMonitoringPrometheusOutput {
	return i.ToStorageClusterSpecMonitoringPrometheusOutputWithContext(context.Background())
}

func (i StorageClusterSpecMonitoringPrometheusArgs) ToStorageClusterSpecMonitoringPrometheusOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecMonitoringPrometheusOutput)
}

func (i StorageClusterSpecMonitoringPrometheusArgs) ToStorageClusterSpecMonitoringPrometheusPtrOutput() StorageClusterSpecMonitoringPrometheusPtrOutput {
	return i.ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecMonitoringPrometheusArgs) ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecMonitoringPrometheusOutput).ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(ctx)
}

// StorageClusterSpecMonitoringPrometheusPtrInput is an input type that accepts StorageClusterSpecMonitoringPrometheusArgs, StorageClusterSpecMonitoringPrometheusPtr and StorageClusterSpecMonitoringPrometheusPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecMonitoringPrometheusPtrInput` via:
//
//          StorageClusterSpecMonitoringPrometheusArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecMonitoringPrometheusPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecMonitoringPrometheusPtrOutput() StorageClusterSpecMonitoringPrometheusPtrOutput
	ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(context.Context) StorageClusterSpecMonitoringPrometheusPtrOutput
}

type storageClusterSpecMonitoringPrometheusPtrType StorageClusterSpecMonitoringPrometheusArgs

func StorageClusterSpecMonitoringPrometheusPtr(v *StorageClusterSpecMonitoringPrometheusArgs) StorageClusterSpecMonitoringPrometheusPtrInput {
	return (*storageClusterSpecMonitoringPrometheusPtrType)(v)
}

func (*storageClusterSpecMonitoringPrometheusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecMonitoringPrometheus)(nil)).Elem()
}

func (i *storageClusterSpecMonitoringPrometheusPtrType) ToStorageClusterSpecMonitoringPrometheusPtrOutput() StorageClusterSpecMonitoringPrometheusPtrOutput {
	return i.ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecMonitoringPrometheusPtrType) ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecMonitoringPrometheusPtrOutput)
}

// Contains configuration of Prometheus to monitor the storage cluster.
type StorageClusterSpecMonitoringPrometheusOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecMonitoringPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecMonitoringPrometheus)(nil)).Elem()
}

func (o StorageClusterSpecMonitoringPrometheusOutput) ToStorageClusterSpecMonitoringPrometheusOutput() StorageClusterSpecMonitoringPrometheusOutput {
	return o
}

func (o StorageClusterSpecMonitoringPrometheusOutput) ToStorageClusterSpecMonitoringPrometheusOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPrometheusOutput {
	return o
}

func (o StorageClusterSpecMonitoringPrometheusOutput) ToStorageClusterSpecMonitoringPrometheusPtrOutput() StorageClusterSpecMonitoringPrometheusPtrOutput {
	return o.ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecMonitoringPrometheusOutput) ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPrometheusPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoringPrometheus) *StorageClusterSpecMonitoringPrometheus {
		return &v
	}).(StorageClusterSpecMonitoringPrometheusPtrOutput)
}

// Flag indicating whether Prometheus stack needs to be enabled and deployed by the Storage operator.
func (o StorageClusterSpecMonitoringPrometheusOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoringPrometheus) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// If this flag is enabled it will expose the storage cluster metrics to Prometheus.
func (o StorageClusterSpecMonitoringPrometheusOutput) ExportMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoringPrometheus) *bool { return v.ExportMetrics }).(pulumi.BoolPtrOutput)
}

// Specifies the remote write endpoint for Prometheus.
func (o StorageClusterSpecMonitoringPrometheusOutput) RemoteWriteEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecMonitoringPrometheus) *string { return v.RemoteWriteEndpoint }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecMonitoringPrometheusPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecMonitoringPrometheusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecMonitoringPrometheus)(nil)).Elem()
}

func (o StorageClusterSpecMonitoringPrometheusPtrOutput) ToStorageClusterSpecMonitoringPrometheusPtrOutput() StorageClusterSpecMonitoringPrometheusPtrOutput {
	return o
}

func (o StorageClusterSpecMonitoringPrometheusPtrOutput) ToStorageClusterSpecMonitoringPrometheusPtrOutputWithContext(ctx context.Context) StorageClusterSpecMonitoringPrometheusPtrOutput {
	return o
}

func (o StorageClusterSpecMonitoringPrometheusPtrOutput) Elem() StorageClusterSpecMonitoringPrometheusOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoringPrometheus) StorageClusterSpecMonitoringPrometheus { return *v }).(StorageClusterSpecMonitoringPrometheusOutput)
}

// Flag indicating whether Prometheus stack needs to be enabled and deployed by the Storage operator.
func (o StorageClusterSpecMonitoringPrometheusPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoringPrometheus) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If this flag is enabled it will expose the storage cluster metrics to Prometheus.
func (o StorageClusterSpecMonitoringPrometheusPtrOutput) ExportMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoringPrometheus) *bool {
		if v == nil {
			return nil
		}
		return v.ExportMetrics
	}).(pulumi.BoolPtrOutput)
}

// Specifies the remote write endpoint for Prometheus.
func (o StorageClusterSpecMonitoringPrometheusPtrOutput) RemoteWriteEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecMonitoringPrometheus) *string {
		if v == nil {
			return nil
		}
		return v.RemoteWriteEndpoint
	}).(pulumi.StringPtrOutput)
}

// Contains network information that is needed by the storage driver.
type StorageClusterSpecNetwork struct {
	// Name of the network interface used by the storage driver for data traffic.
	DataInterface *string `pulumi:"dataInterface"`
	// Name of the network interface used by the storage driver for management traffic.
	MgmtInterface *string `pulumi:"mgmtInterface"`
}

// StorageClusterSpecNetworkInput is an input type that accepts StorageClusterSpecNetworkArgs and StorageClusterSpecNetworkOutput values.
// You can construct a concrete instance of `StorageClusterSpecNetworkInput` via:
//
//          StorageClusterSpecNetworkArgs{...}
type StorageClusterSpecNetworkInput interface {
	pulumi.Input

	ToStorageClusterSpecNetworkOutput() StorageClusterSpecNetworkOutput
	ToStorageClusterSpecNetworkOutputWithContext(context.Context) StorageClusterSpecNetworkOutput
}

// Contains network information that is needed by the storage driver.
type StorageClusterSpecNetworkArgs struct {
	// Name of the network interface used by the storage driver for data traffic.
	DataInterface pulumi.StringPtrInput `pulumi:"dataInterface"`
	// Name of the network interface used by the storage driver for management traffic.
	MgmtInterface pulumi.StringPtrInput `pulumi:"mgmtInterface"`
}

func (StorageClusterSpecNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNetwork)(nil)).Elem()
}

func (i StorageClusterSpecNetworkArgs) ToStorageClusterSpecNetworkOutput() StorageClusterSpecNetworkOutput {
	return i.ToStorageClusterSpecNetworkOutputWithContext(context.Background())
}

func (i StorageClusterSpecNetworkArgs) ToStorageClusterSpecNetworkOutputWithContext(ctx context.Context) StorageClusterSpecNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNetworkOutput)
}

func (i StorageClusterSpecNetworkArgs) ToStorageClusterSpecNetworkPtrOutput() StorageClusterSpecNetworkPtrOutput {
	return i.ToStorageClusterSpecNetworkPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNetworkArgs) ToStorageClusterSpecNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNetworkOutput).ToStorageClusterSpecNetworkPtrOutputWithContext(ctx)
}

// StorageClusterSpecNetworkPtrInput is an input type that accepts StorageClusterSpecNetworkArgs, StorageClusterSpecNetworkPtr and StorageClusterSpecNetworkPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNetworkPtrInput` via:
//
//          StorageClusterSpecNetworkArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNetworkPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNetworkPtrOutput() StorageClusterSpecNetworkPtrOutput
	ToStorageClusterSpecNetworkPtrOutputWithContext(context.Context) StorageClusterSpecNetworkPtrOutput
}

type storageClusterSpecNetworkPtrType StorageClusterSpecNetworkArgs

func StorageClusterSpecNetworkPtr(v *StorageClusterSpecNetworkArgs) StorageClusterSpecNetworkPtrInput {
	return (*storageClusterSpecNetworkPtrType)(v)
}

func (*storageClusterSpecNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNetwork)(nil)).Elem()
}

func (i *storageClusterSpecNetworkPtrType) ToStorageClusterSpecNetworkPtrOutput() StorageClusterSpecNetworkPtrOutput {
	return i.ToStorageClusterSpecNetworkPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNetworkPtrType) ToStorageClusterSpecNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNetworkPtrOutput)
}

// Contains network information that is needed by the storage driver.
type StorageClusterSpecNetworkOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNetwork)(nil)).Elem()
}

func (o StorageClusterSpecNetworkOutput) ToStorageClusterSpecNetworkOutput() StorageClusterSpecNetworkOutput {
	return o
}

func (o StorageClusterSpecNetworkOutput) ToStorageClusterSpecNetworkOutputWithContext(ctx context.Context) StorageClusterSpecNetworkOutput {
	return o
}

func (o StorageClusterSpecNetworkOutput) ToStorageClusterSpecNetworkPtrOutput() StorageClusterSpecNetworkPtrOutput {
	return o.ToStorageClusterSpecNetworkPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNetworkOutput) ToStorageClusterSpecNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNetworkPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNetwork) *StorageClusterSpecNetwork {
		return &v
	}).(StorageClusterSpecNetworkPtrOutput)
}

// Name of the network interface used by the storage driver for data traffic.
func (o StorageClusterSpecNetworkOutput) DataInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNetwork) *string { return v.DataInterface }).(pulumi.StringPtrOutput)
}

// Name of the network interface used by the storage driver for management traffic.
func (o StorageClusterSpecNetworkOutput) MgmtInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNetwork) *string { return v.MgmtInterface }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNetworkPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNetwork)(nil)).Elem()
}

func (o StorageClusterSpecNetworkPtrOutput) ToStorageClusterSpecNetworkPtrOutput() StorageClusterSpecNetworkPtrOutput {
	return o
}

func (o StorageClusterSpecNetworkPtrOutput) ToStorageClusterSpecNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNetworkPtrOutput {
	return o
}

func (o StorageClusterSpecNetworkPtrOutput) Elem() StorageClusterSpecNetworkOutput {
	return o.ApplyT(func(v *StorageClusterSpecNetwork) StorageClusterSpecNetwork { return *v }).(StorageClusterSpecNetworkOutput)
}

// Name of the network interface used by the storage driver for data traffic.
func (o StorageClusterSpecNetworkPtrOutput) DataInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNetwork) *string {
		if v == nil {
			return nil
		}
		return v.DataInterface
	}).(pulumi.StringPtrOutput)
}

// Name of the network interface used by the storage driver for management traffic.
func (o StorageClusterSpecNetworkPtrOutput) MgmtInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNetwork) *string {
		if v == nil {
			return nil
		}
		return v.MgmtInterface
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodes struct {
	// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret. Environment variables specified here at the node level will be merged with the ones present in cluster configuration and sent to the nodes. If there is duplicate, the node level value will take precedence.
	Env []StorageClusterSpecNodesEnv `pulumi:"env"`
	// Contains network information that is needed by the storage driver.
	Network *StorageClusterSpecNodesNetwork `pulumi:"network"`
	// This is map of any runtime options that need to be sent to the storage driver. The value is a string. If runtime options are present here at node level, they will override the ones from cluster configuration.
	RuntimeOptions map[string]interface{} `pulumi:"runtimeOptions"`
	// Configuration in this node block is applied to nodes based on this selector. Use either nodeName of labelSelector, not both. If nodeName is used, labelSelector will be ignored.
	Selector *StorageClusterSpecNodesSelector `pulumi:"selector"`
	// Details of the storage used by the storage driver.
	Storage *StorageClusterSpecNodesStorage `pulumi:"storage"`
}

// StorageClusterSpecNodesInput is an input type that accepts StorageClusterSpecNodesArgs and StorageClusterSpecNodesOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesInput` via:
//
//          StorageClusterSpecNodesArgs{...}
type StorageClusterSpecNodesInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesOutput() StorageClusterSpecNodesOutput
	ToStorageClusterSpecNodesOutputWithContext(context.Context) StorageClusterSpecNodesOutput
}

type StorageClusterSpecNodesArgs struct {
	// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret. Environment variables specified here at the node level will be merged with the ones present in cluster configuration and sent to the nodes. If there is duplicate, the node level value will take precedence.
	Env StorageClusterSpecNodesEnvArrayInput `pulumi:"env"`
	// Contains network information that is needed by the storage driver.
	Network StorageClusterSpecNodesNetworkPtrInput `pulumi:"network"`
	// This is map of any runtime options that need to be sent to the storage driver. The value is a string. If runtime options are present here at node level, they will override the ones from cluster configuration.
	RuntimeOptions pulumi.MapInput `pulumi:"runtimeOptions"`
	// Configuration in this node block is applied to nodes based on this selector. Use either nodeName of labelSelector, not both. If nodeName is used, labelSelector will be ignored.
	Selector StorageClusterSpecNodesSelectorPtrInput `pulumi:"selector"`
	// Details of the storage used by the storage driver.
	Storage StorageClusterSpecNodesStoragePtrInput `pulumi:"storage"`
}

func (StorageClusterSpecNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodes)(nil)).Elem()
}

func (i StorageClusterSpecNodesArgs) ToStorageClusterSpecNodesOutput() StorageClusterSpecNodesOutput {
	return i.ToStorageClusterSpecNodesOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesArgs) ToStorageClusterSpecNodesOutputWithContext(ctx context.Context) StorageClusterSpecNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesOutput)
}

// StorageClusterSpecNodesArrayInput is an input type that accepts StorageClusterSpecNodesArray and StorageClusterSpecNodesArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesArrayInput` via:
//
//          StorageClusterSpecNodesArray{ StorageClusterSpecNodesArgs{...} }
type StorageClusterSpecNodesArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesArrayOutput() StorageClusterSpecNodesArrayOutput
	ToStorageClusterSpecNodesArrayOutputWithContext(context.Context) StorageClusterSpecNodesArrayOutput
}

type StorageClusterSpecNodesArray []StorageClusterSpecNodesInput

func (StorageClusterSpecNodesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecNodes)(nil)).Elem()
}

func (i StorageClusterSpecNodesArray) ToStorageClusterSpecNodesArrayOutput() StorageClusterSpecNodesArrayOutput {
	return i.ToStorageClusterSpecNodesArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesArray) ToStorageClusterSpecNodesArrayOutputWithContext(ctx context.Context) StorageClusterSpecNodesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesArrayOutput)
}

type StorageClusterSpecNodesOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodes)(nil)).Elem()
}

func (o StorageClusterSpecNodesOutput) ToStorageClusterSpecNodesOutput() StorageClusterSpecNodesOutput {
	return o
}

func (o StorageClusterSpecNodesOutput) ToStorageClusterSpecNodesOutputWithContext(ctx context.Context) StorageClusterSpecNodesOutput {
	return o
}

// List of environment variables used by the driver. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret. Environment variables specified here at the node level will be merged with the ones present in cluster configuration and sent to the nodes. If there is duplicate, the node level value will take precedence.
func (o StorageClusterSpecNodesOutput) Env() StorageClusterSpecNodesEnvArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecNodes) []StorageClusterSpecNodesEnv { return v.Env }).(StorageClusterSpecNodesEnvArrayOutput)
}

// Contains network information that is needed by the storage driver.
func (o StorageClusterSpecNodesOutput) Network() StorageClusterSpecNodesNetworkPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodes) *StorageClusterSpecNodesNetwork { return v.Network }).(StorageClusterSpecNodesNetworkPtrOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string. If runtime options are present here at node level, they will override the ones from cluster configuration.
func (o StorageClusterSpecNodesOutput) RuntimeOptions() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpecNodes) map[string]interface{} { return v.RuntimeOptions }).(pulumi.MapOutput)
}

// Configuration in this node block is applied to nodes based on this selector. Use either nodeName of labelSelector, not both. If nodeName is used, labelSelector will be ignored.
func (o StorageClusterSpecNodesOutput) Selector() StorageClusterSpecNodesSelectorPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodes) *StorageClusterSpecNodesSelector { return v.Selector }).(StorageClusterSpecNodesSelectorPtrOutput)
}

// Details of the storage used by the storage driver.
func (o StorageClusterSpecNodesOutput) Storage() StorageClusterSpecNodesStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodes) *StorageClusterSpecNodesStorage { return v.Storage }).(StorageClusterSpecNodesStoragePtrOutput)
}

type StorageClusterSpecNodesArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecNodes)(nil)).Elem()
}

func (o StorageClusterSpecNodesArrayOutput) ToStorageClusterSpecNodesArrayOutput() StorageClusterSpecNodesArrayOutput {
	return o
}

func (o StorageClusterSpecNodesArrayOutput) ToStorageClusterSpecNodesArrayOutputWithContext(ctx context.Context) StorageClusterSpecNodesArrayOutput {
	return o
}

func (o StorageClusterSpecNodesArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecNodesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecNodes {
		return vs[0].([]StorageClusterSpecNodes)[vs[1].(int)]
	}).(StorageClusterSpecNodesOutput)
}

type StorageClusterSpecNodesEnv struct {
	Name      *string                              `pulumi:"name"`
	Value     *string                              `pulumi:"value"`
	ValueFrom *StorageClusterSpecNodesEnvValueFrom `pulumi:"valueFrom"`
}

// StorageClusterSpecNodesEnvInput is an input type that accepts StorageClusterSpecNodesEnvArgs and StorageClusterSpecNodesEnvOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvInput` via:
//
//          StorageClusterSpecNodesEnvArgs{...}
type StorageClusterSpecNodesEnvInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvOutput() StorageClusterSpecNodesEnvOutput
	ToStorageClusterSpecNodesEnvOutputWithContext(context.Context) StorageClusterSpecNodesEnvOutput
}

type StorageClusterSpecNodesEnvArgs struct {
	Name      pulumi.StringPtrInput                       `pulumi:"name"`
	Value     pulumi.StringPtrInput                       `pulumi:"value"`
	ValueFrom StorageClusterSpecNodesEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (StorageClusterSpecNodesEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnv)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvArgs) ToStorageClusterSpecNodesEnvOutput() StorageClusterSpecNodesEnvOutput {
	return i.ToStorageClusterSpecNodesEnvOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvArgs) ToStorageClusterSpecNodesEnvOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvOutput)
}

// StorageClusterSpecNodesEnvArrayInput is an input type that accepts StorageClusterSpecNodesEnvArray and StorageClusterSpecNodesEnvArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvArrayInput` via:
//
//          StorageClusterSpecNodesEnvArray{ StorageClusterSpecNodesEnvArgs{...} }
type StorageClusterSpecNodesEnvArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvArrayOutput() StorageClusterSpecNodesEnvArrayOutput
	ToStorageClusterSpecNodesEnvArrayOutputWithContext(context.Context) StorageClusterSpecNodesEnvArrayOutput
}

type StorageClusterSpecNodesEnvArray []StorageClusterSpecNodesEnvInput

func (StorageClusterSpecNodesEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecNodesEnv)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvArray) ToStorageClusterSpecNodesEnvArrayOutput() StorageClusterSpecNodesEnvArrayOutput {
	return i.ToStorageClusterSpecNodesEnvArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvArray) ToStorageClusterSpecNodesEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvArrayOutput)
}

type StorageClusterSpecNodesEnvOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnv)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvOutput) ToStorageClusterSpecNodesEnvOutput() StorageClusterSpecNodesEnvOutput {
	return o
}

func (o StorageClusterSpecNodesEnvOutput) ToStorageClusterSpecNodesEnvOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvOutput {
	return o
}

func (o StorageClusterSpecNodesEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvOutput) ValueFrom() StorageClusterSpecNodesEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnv) *StorageClusterSpecNodesEnvValueFrom { return v.ValueFrom }).(StorageClusterSpecNodesEnvValueFromPtrOutput)
}

type StorageClusterSpecNodesEnvArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecNodesEnv)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvArrayOutput) ToStorageClusterSpecNodesEnvArrayOutput() StorageClusterSpecNodesEnvArrayOutput {
	return o
}

func (o StorageClusterSpecNodesEnvArrayOutput) ToStorageClusterSpecNodesEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvArrayOutput {
	return o
}

func (o StorageClusterSpecNodesEnvArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecNodesEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecNodesEnv {
		return vs[0].([]StorageClusterSpecNodesEnv)[vs[1].(int)]
	}).(StorageClusterSpecNodesEnvOutput)
}

type StorageClusterSpecNodesEnvValueFrom struct {
	ConfigMapKeyRef  *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef  `pulumi:"configMapKeyRef"`
	FieldRef         *StorageClusterSpecNodesEnvValueFromFieldRef         `pulumi:"fieldRef"`
	ResourceFieldRef *StorageClusterSpecNodesEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	SecretKeyRef     *StorageClusterSpecNodesEnvValueFromSecretKeyRef     `pulumi:"secretKeyRef"`
}

// StorageClusterSpecNodesEnvValueFromInput is an input type that accepts StorageClusterSpecNodesEnvValueFromArgs and StorageClusterSpecNodesEnvValueFromOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromInput` via:
//
//          StorageClusterSpecNodesEnvValueFromArgs{...}
type StorageClusterSpecNodesEnvValueFromInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromOutput() StorageClusterSpecNodesEnvValueFromOutput
	ToStorageClusterSpecNodesEnvValueFromOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromOutput
}

type StorageClusterSpecNodesEnvValueFromArgs struct {
	ConfigMapKeyRef  StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrInput  `pulumi:"configMapKeyRef"`
	FieldRef         StorageClusterSpecNodesEnvValueFromFieldRefPtrInput         `pulumi:"fieldRef"`
	ResourceFieldRef StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	SecretKeyRef     StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrInput     `pulumi:"secretKeyRef"`
}

func (StorageClusterSpecNodesEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFrom)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvValueFromArgs) ToStorageClusterSpecNodesEnvValueFromOutput() StorageClusterSpecNodesEnvValueFromOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromArgs) ToStorageClusterSpecNodesEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromOutput)
}

func (i StorageClusterSpecNodesEnvValueFromArgs) ToStorageClusterSpecNodesEnvValueFromPtrOutput() StorageClusterSpecNodesEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromArgs) ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromOutput).ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesEnvValueFromPtrInput is an input type that accepts StorageClusterSpecNodesEnvValueFromArgs, StorageClusterSpecNodesEnvValueFromPtr and StorageClusterSpecNodesEnvValueFromPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromPtrInput` via:
//
//          StorageClusterSpecNodesEnvValueFromArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesEnvValueFromPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromPtrOutput() StorageClusterSpecNodesEnvValueFromPtrOutput
	ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromPtrOutput
}

type storageClusterSpecNodesEnvValueFromPtrType StorageClusterSpecNodesEnvValueFromArgs

func StorageClusterSpecNodesEnvValueFromPtr(v *StorageClusterSpecNodesEnvValueFromArgs) StorageClusterSpecNodesEnvValueFromPtrInput {
	return (*storageClusterSpecNodesEnvValueFromPtrType)(v)
}

func (*storageClusterSpecNodesEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFrom)(nil)).Elem()
}

func (i *storageClusterSpecNodesEnvValueFromPtrType) ToStorageClusterSpecNodesEnvValueFromPtrOutput() StorageClusterSpecNodesEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesEnvValueFromPtrType) ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromOutput) ToStorageClusterSpecNodesEnvValueFromOutput() StorageClusterSpecNodesEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromOutput) ToStorageClusterSpecNodesEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromOutput) ToStorageClusterSpecNodesEnvValueFromPtrOutput() StorageClusterSpecNodesEnvValueFromPtrOutput {
	return o.ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesEnvValueFromOutput) ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFrom {
		return &v
	}).(StorageClusterSpecNodesEnvValueFromPtrOutput)
}
func (o StorageClusterSpecNodesEnvValueFromOutput) ConfigMapKeyRef() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromOutput) FieldRef() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromFieldRef {
		return v.FieldRef
	}).(StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromOutput) ResourceFieldRef() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromOutput) SecretKeyRef() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) ToStorageClusterSpecNodesEnvValueFromPtrOutput() StorageClusterSpecNodesEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) ToStorageClusterSpecNodesEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) Elem() StorageClusterSpecNodesEnvValueFromOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFrom) StorageClusterSpecNodesEnvValueFrom { return *v }).(StorageClusterSpecNodesEnvValueFromOutput)
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) ConfigMapKeyRef() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) FieldRef() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) ResourceFieldRef() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromPtrOutput) SecretKeyRef() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFrom) *StorageClusterSpecNodesEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecNodesEnvValueFromConfigMapKeyRefInput is an input type that accepts StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs and StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromConfigMapKeyRefInput` via:
//
//          StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs{...}
type StorageClusterSpecNodesEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput
	ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput
}

type StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput)
}

func (i StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput).ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs, StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtr and StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput
	ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput
}

type storageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrType StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs

func StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtr(v *StorageClusterSpecNodesEnvValueFromConfigMapKeyRefArgs) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrInput {
	return (*storageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*storageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef {
		return &v
	}).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput)
}
func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) Elem() StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) StorageClusterSpecNodesEnvValueFromConfigMapKeyRef {
		return *v
	}).(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput)
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromFieldRef struct {
	ApiVersion *string `pulumi:"apiVersion"`
	FieldPath  *string `pulumi:"fieldPath"`
}

// StorageClusterSpecNodesEnvValueFromFieldRefInput is an input type that accepts StorageClusterSpecNodesEnvValueFromFieldRefArgs and StorageClusterSpecNodesEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromFieldRefInput` via:
//
//          StorageClusterSpecNodesEnvValueFromFieldRefArgs{...}
type StorageClusterSpecNodesEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromFieldRefOutput() StorageClusterSpecNodesEnvValueFromFieldRefOutput
	ToStorageClusterSpecNodesEnvValueFromFieldRefOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromFieldRefOutput
}

type StorageClusterSpecNodesEnvValueFromFieldRefArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	FieldPath  pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (StorageClusterSpecNodesEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvValueFromFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromFieldRefOutput() StorageClusterSpecNodesEnvValueFromFieldRefOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromFieldRefOutput)
}

func (i StorageClusterSpecNodesEnvValueFromFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromFieldRefOutput).ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesEnvValueFromFieldRefPtrInput is an input type that accepts StorageClusterSpecNodesEnvValueFromFieldRefArgs, StorageClusterSpecNodesEnvValueFromFieldRefPtr and StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromFieldRefPtrInput` via:
//
//          StorageClusterSpecNodesEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput
	ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput
}

type storageClusterSpecNodesEnvValueFromFieldRefPtrType StorageClusterSpecNodesEnvValueFromFieldRefArgs

func StorageClusterSpecNodesEnvValueFromFieldRefPtr(v *StorageClusterSpecNodesEnvValueFromFieldRefArgs) StorageClusterSpecNodesEnvValueFromFieldRefPtrInput {
	return (*storageClusterSpecNodesEnvValueFromFieldRefPtrType)(v)
}

func (*storageClusterSpecNodesEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecNodesEnvValueFromFieldRefPtrType) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesEnvValueFromFieldRefPtrType) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromFieldRefOutput() StorageClusterSpecNodesEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return o.ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromFieldRef) *StorageClusterSpecNodesEnvValueFromFieldRef {
		return &v
	}).(StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput)
}
func (o StorageClusterSpecNodesEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromFieldRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput) Elem() StorageClusterSpecNodesEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromFieldRef) StorageClusterSpecNodesEnvValueFromFieldRef {
		return *v
	}).(StorageClusterSpecNodesEnvValueFromFieldRefOutput)
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromResourceFieldRef struct {
	ContainerName *string `pulumi:"containerName"`
	Divisor       *string `pulumi:"divisor"`
	Resource      *string `pulumi:"resource"`
}

// StorageClusterSpecNodesEnvValueFromResourceFieldRefInput is an input type that accepts StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs and StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromResourceFieldRefInput` via:
//
//          StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs{...}
type StorageClusterSpecNodesEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput
	ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput
}

type StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	Divisor       pulumi.StringPtrInput `pulumi:"divisor"`
	Resource      pulumi.StringPtrInput `pulumi:"resource"`
}

func (StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput)
}

func (i StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput).ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrInput is an input type that accepts StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs, StorageClusterSpecNodesEnvValueFromResourceFieldRefPtr and StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrInput` via:
//
//          StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput
	ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput
}

type storageClusterSpecNodesEnvValueFromResourceFieldRefPtrType StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs

func StorageClusterSpecNodesEnvValueFromResourceFieldRefPtr(v *StorageClusterSpecNodesEnvValueFromResourceFieldRefArgs) StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrInput {
	return (*storageClusterSpecNodesEnvValueFromResourceFieldRefPtrType)(v)
}

func (*storageClusterSpecNodesEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecNodesEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return o.ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromResourceFieldRef) *StorageClusterSpecNodesEnvValueFromResourceFieldRef {
		return &v
	}).(StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput)
}
func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromResourceFieldRef) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) Elem() StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromResourceFieldRef) StorageClusterSpecNodesEnvValueFromResourceFieldRef {
		return *v
	}).(StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput)
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecNodesEnvValueFromSecretKeyRefInput is an input type that accepts StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs and StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromSecretKeyRefInput` via:
//
//          StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs{...}
type StorageClusterSpecNodesEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput
	ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput
}

type StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput)
}

func (i StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput).ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrInput is an input type that accepts StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs, StorageClusterSpecNodesEnvValueFromSecretKeyRefPtr and StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrInput` via:
//
//          StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput
	ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput
}

type storageClusterSpecNodesEnvValueFromSecretKeyRefPtrType StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs

func StorageClusterSpecNodesEnvValueFromSecretKeyRefPtr(v *StorageClusterSpecNodesEnvValueFromSecretKeyRefArgs) StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrInput {
	return (*storageClusterSpecNodesEnvValueFromSecretKeyRefPtrType)(v)
}

func (*storageClusterSpecNodesEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecNodesEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return o.ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromSecretKeyRef) *StorageClusterSpecNodesEnvValueFromSecretKeyRef {
		return &v
	}).(StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput)
}
func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) Elem() StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromSecretKeyRef) StorageClusterSpecNodesEnvValueFromSecretKeyRef {
		return *v
	}).(StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput)
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Contains network information that is needed by the storage driver.
type StorageClusterSpecNodesNetwork struct {
	// Name of the network interface used by the storage driver for data traffic.
	DataInterface *string `pulumi:"dataInterface"`
	// Name of the network interface used by the storage driver for management traffic.
	MgmtInterface *string `pulumi:"mgmtInterface"`
}

// StorageClusterSpecNodesNetworkInput is an input type that accepts StorageClusterSpecNodesNetworkArgs and StorageClusterSpecNodesNetworkOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesNetworkInput` via:
//
//          StorageClusterSpecNodesNetworkArgs{...}
type StorageClusterSpecNodesNetworkInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesNetworkOutput() StorageClusterSpecNodesNetworkOutput
	ToStorageClusterSpecNodesNetworkOutputWithContext(context.Context) StorageClusterSpecNodesNetworkOutput
}

// Contains network information that is needed by the storage driver.
type StorageClusterSpecNodesNetworkArgs struct {
	// Name of the network interface used by the storage driver for data traffic.
	DataInterface pulumi.StringPtrInput `pulumi:"dataInterface"`
	// Name of the network interface used by the storage driver for management traffic.
	MgmtInterface pulumi.StringPtrInput `pulumi:"mgmtInterface"`
}

func (StorageClusterSpecNodesNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesNetwork)(nil)).Elem()
}

func (i StorageClusterSpecNodesNetworkArgs) ToStorageClusterSpecNodesNetworkOutput() StorageClusterSpecNodesNetworkOutput {
	return i.ToStorageClusterSpecNodesNetworkOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesNetworkArgs) ToStorageClusterSpecNodesNetworkOutputWithContext(ctx context.Context) StorageClusterSpecNodesNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesNetworkOutput)
}

func (i StorageClusterSpecNodesNetworkArgs) ToStorageClusterSpecNodesNetworkPtrOutput() StorageClusterSpecNodesNetworkPtrOutput {
	return i.ToStorageClusterSpecNodesNetworkPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesNetworkArgs) ToStorageClusterSpecNodesNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesNetworkOutput).ToStorageClusterSpecNodesNetworkPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesNetworkPtrInput is an input type that accepts StorageClusterSpecNodesNetworkArgs, StorageClusterSpecNodesNetworkPtr and StorageClusterSpecNodesNetworkPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesNetworkPtrInput` via:
//
//          StorageClusterSpecNodesNetworkArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesNetworkPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesNetworkPtrOutput() StorageClusterSpecNodesNetworkPtrOutput
	ToStorageClusterSpecNodesNetworkPtrOutputWithContext(context.Context) StorageClusterSpecNodesNetworkPtrOutput
}

type storageClusterSpecNodesNetworkPtrType StorageClusterSpecNodesNetworkArgs

func StorageClusterSpecNodesNetworkPtr(v *StorageClusterSpecNodesNetworkArgs) StorageClusterSpecNodesNetworkPtrInput {
	return (*storageClusterSpecNodesNetworkPtrType)(v)
}

func (*storageClusterSpecNodesNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesNetwork)(nil)).Elem()
}

func (i *storageClusterSpecNodesNetworkPtrType) ToStorageClusterSpecNodesNetworkPtrOutput() StorageClusterSpecNodesNetworkPtrOutput {
	return i.ToStorageClusterSpecNodesNetworkPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesNetworkPtrType) ToStorageClusterSpecNodesNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesNetworkPtrOutput)
}

// Contains network information that is needed by the storage driver.
type StorageClusterSpecNodesNetworkOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesNetwork)(nil)).Elem()
}

func (o StorageClusterSpecNodesNetworkOutput) ToStorageClusterSpecNodesNetworkOutput() StorageClusterSpecNodesNetworkOutput {
	return o
}

func (o StorageClusterSpecNodesNetworkOutput) ToStorageClusterSpecNodesNetworkOutputWithContext(ctx context.Context) StorageClusterSpecNodesNetworkOutput {
	return o
}

func (o StorageClusterSpecNodesNetworkOutput) ToStorageClusterSpecNodesNetworkPtrOutput() StorageClusterSpecNodesNetworkPtrOutput {
	return o.ToStorageClusterSpecNodesNetworkPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesNetworkOutput) ToStorageClusterSpecNodesNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesNetworkPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesNetwork) *StorageClusterSpecNodesNetwork {
		return &v
	}).(StorageClusterSpecNodesNetworkPtrOutput)
}

// Name of the network interface used by the storage driver for data traffic.
func (o StorageClusterSpecNodesNetworkOutput) DataInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesNetwork) *string { return v.DataInterface }).(pulumi.StringPtrOutput)
}

// Name of the network interface used by the storage driver for management traffic.
func (o StorageClusterSpecNodesNetworkOutput) MgmtInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesNetwork) *string { return v.MgmtInterface }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodesNetworkPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesNetwork)(nil)).Elem()
}

func (o StorageClusterSpecNodesNetworkPtrOutput) ToStorageClusterSpecNodesNetworkPtrOutput() StorageClusterSpecNodesNetworkPtrOutput {
	return o
}

func (o StorageClusterSpecNodesNetworkPtrOutput) ToStorageClusterSpecNodesNetworkPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesNetworkPtrOutput {
	return o
}

func (o StorageClusterSpecNodesNetworkPtrOutput) Elem() StorageClusterSpecNodesNetworkOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesNetwork) StorageClusterSpecNodesNetwork { return *v }).(StorageClusterSpecNodesNetworkOutput)
}

// Name of the network interface used by the storage driver for data traffic.
func (o StorageClusterSpecNodesNetworkPtrOutput) DataInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesNetwork) *string {
		if v == nil {
			return nil
		}
		return v.DataInterface
	}).(pulumi.StringPtrOutput)
}

// Name of the network interface used by the storage driver for management traffic.
func (o StorageClusterSpecNodesNetworkPtrOutput) MgmtInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesNetwork) *string {
		if v == nil {
			return nil
		}
		return v.MgmtInterface
	}).(pulumi.StringPtrOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string. If runtime options are present here at node level, they will override the ones from cluster configuration.
type StorageClusterSpecNodesRuntimeOptions struct {
}

// StorageClusterSpecNodesRuntimeOptionsInput is an input type that accepts StorageClusterSpecNodesRuntimeOptionsArgs and StorageClusterSpecNodesRuntimeOptionsOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesRuntimeOptionsInput` via:
//
//          StorageClusterSpecNodesRuntimeOptionsArgs{...}
type StorageClusterSpecNodesRuntimeOptionsInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesRuntimeOptionsOutput() StorageClusterSpecNodesRuntimeOptionsOutput
	ToStorageClusterSpecNodesRuntimeOptionsOutputWithContext(context.Context) StorageClusterSpecNodesRuntimeOptionsOutput
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string. If runtime options are present here at node level, they will override the ones from cluster configuration.
type StorageClusterSpecNodesRuntimeOptionsArgs struct {
}

func (StorageClusterSpecNodesRuntimeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesRuntimeOptions)(nil)).Elem()
}

func (i StorageClusterSpecNodesRuntimeOptionsArgs) ToStorageClusterSpecNodesRuntimeOptionsOutput() StorageClusterSpecNodesRuntimeOptionsOutput {
	return i.ToStorageClusterSpecNodesRuntimeOptionsOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesRuntimeOptionsArgs) ToStorageClusterSpecNodesRuntimeOptionsOutputWithContext(ctx context.Context) StorageClusterSpecNodesRuntimeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesRuntimeOptionsOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string. If runtime options are present here at node level, they will override the ones from cluster configuration.
type StorageClusterSpecNodesRuntimeOptionsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesRuntimeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesRuntimeOptions)(nil)).Elem()
}

func (o StorageClusterSpecNodesRuntimeOptionsOutput) ToStorageClusterSpecNodesRuntimeOptionsOutput() StorageClusterSpecNodesRuntimeOptionsOutput {
	return o
}

func (o StorageClusterSpecNodesRuntimeOptionsOutput) ToStorageClusterSpecNodesRuntimeOptionsOutputWithContext(ctx context.Context) StorageClusterSpecNodesRuntimeOptionsOutput {
	return o
}

// Configuration in this node block is applied to nodes based on this selector. Use either nodeName of labelSelector, not both. If nodeName is used, labelSelector will be ignored.
type StorageClusterSpecNodesSelector struct {
	// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
	LabelSelector *StorageClusterSpecNodesSelectorLabelSelector `pulumi:"labelSelector"`
	// Name of the Kubernetes node that is to be selected. If present then the labelSelector is ignored even if the node with the given name is absent and the labelSelector matches another node.
	NodeName *string `pulumi:"nodeName"`
}

// StorageClusterSpecNodesSelectorInput is an input type that accepts StorageClusterSpecNodesSelectorArgs and StorageClusterSpecNodesSelectorOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorInput` via:
//
//          StorageClusterSpecNodesSelectorArgs{...}
type StorageClusterSpecNodesSelectorInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorOutput() StorageClusterSpecNodesSelectorOutput
	ToStorageClusterSpecNodesSelectorOutputWithContext(context.Context) StorageClusterSpecNodesSelectorOutput
}

// Configuration in this node block is applied to nodes based on this selector. Use either nodeName of labelSelector, not both. If nodeName is used, labelSelector will be ignored.
type StorageClusterSpecNodesSelectorArgs struct {
	// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
	LabelSelector StorageClusterSpecNodesSelectorLabelSelectorPtrInput `pulumi:"labelSelector"`
	// Name of the Kubernetes node that is to be selected. If present then the labelSelector is ignored even if the node with the given name is absent and the labelSelector matches another node.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (StorageClusterSpecNodesSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelector)(nil)).Elem()
}

func (i StorageClusterSpecNodesSelectorArgs) ToStorageClusterSpecNodesSelectorOutput() StorageClusterSpecNodesSelectorOutput {
	return i.ToStorageClusterSpecNodesSelectorOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorArgs) ToStorageClusterSpecNodesSelectorOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorOutput)
}

func (i StorageClusterSpecNodesSelectorArgs) ToStorageClusterSpecNodesSelectorPtrOutput() StorageClusterSpecNodesSelectorPtrOutput {
	return i.ToStorageClusterSpecNodesSelectorPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorArgs) ToStorageClusterSpecNodesSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorOutput).ToStorageClusterSpecNodesSelectorPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesSelectorPtrInput is an input type that accepts StorageClusterSpecNodesSelectorArgs, StorageClusterSpecNodesSelectorPtr and StorageClusterSpecNodesSelectorPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorPtrInput` via:
//
//          StorageClusterSpecNodesSelectorArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesSelectorPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorPtrOutput() StorageClusterSpecNodesSelectorPtrOutput
	ToStorageClusterSpecNodesSelectorPtrOutputWithContext(context.Context) StorageClusterSpecNodesSelectorPtrOutput
}

type storageClusterSpecNodesSelectorPtrType StorageClusterSpecNodesSelectorArgs

func StorageClusterSpecNodesSelectorPtr(v *StorageClusterSpecNodesSelectorArgs) StorageClusterSpecNodesSelectorPtrInput {
	return (*storageClusterSpecNodesSelectorPtrType)(v)
}

func (*storageClusterSpecNodesSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesSelector)(nil)).Elem()
}

func (i *storageClusterSpecNodesSelectorPtrType) ToStorageClusterSpecNodesSelectorPtrOutput() StorageClusterSpecNodesSelectorPtrOutput {
	return i.ToStorageClusterSpecNodesSelectorPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesSelectorPtrType) ToStorageClusterSpecNodesSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorPtrOutput)
}

// Configuration in this node block is applied to nodes based on this selector. Use either nodeName of labelSelector, not both. If nodeName is used, labelSelector will be ignored.
type StorageClusterSpecNodesSelectorOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelector)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorOutput) ToStorageClusterSpecNodesSelectorOutput() StorageClusterSpecNodesSelectorOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorOutput) ToStorageClusterSpecNodesSelectorOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorOutput) ToStorageClusterSpecNodesSelectorPtrOutput() StorageClusterSpecNodesSelectorPtrOutput {
	return o.ToStorageClusterSpecNodesSelectorPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesSelectorOutput) ToStorageClusterSpecNodesSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelector) *StorageClusterSpecNodesSelector {
		return &v
	}).(StorageClusterSpecNodesSelectorPtrOutput)
}

// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
func (o StorageClusterSpecNodesSelectorOutput) LabelSelector() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelector) *StorageClusterSpecNodesSelectorLabelSelector {
		return v.LabelSelector
	}).(StorageClusterSpecNodesSelectorLabelSelectorPtrOutput)
}

// Name of the Kubernetes node that is to be selected. If present then the labelSelector is ignored even if the node with the given name is absent and the labelSelector matches another node.
func (o StorageClusterSpecNodesSelectorOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelector) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecNodesSelectorPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesSelector)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorPtrOutput) ToStorageClusterSpecNodesSelectorPtrOutput() StorageClusterSpecNodesSelectorPtrOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorPtrOutput) ToStorageClusterSpecNodesSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorPtrOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorPtrOutput) Elem() StorageClusterSpecNodesSelectorOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesSelector) StorageClusterSpecNodesSelector { return *v }).(StorageClusterSpecNodesSelectorOutput)
}

// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
func (o StorageClusterSpecNodesSelectorPtrOutput) LabelSelector() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesSelector) *StorageClusterSpecNodesSelectorLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(StorageClusterSpecNodesSelectorLabelSelectorPtrOutput)
}

// Name of the Kubernetes node that is to be selected. If present then the labelSelector is ignored even if the node with the given name is absent and the labelSelector matches another node.
func (o StorageClusterSpecNodesSelectorPtrOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesSelector) *string {
		if v == nil {
			return nil
		}
		return v.NodeName
	}).(pulumi.StringPtrOutput)
}

// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
type StorageClusterSpecNodesSelectorLabelSelector struct {
	// It is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]interface{} `pulumi:"matchLabels"`
}

// StorageClusterSpecNodesSelectorLabelSelectorInput is an input type that accepts StorageClusterSpecNodesSelectorLabelSelectorArgs and StorageClusterSpecNodesSelectorLabelSelectorOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorLabelSelectorInput` via:
//
//          StorageClusterSpecNodesSelectorLabelSelectorArgs{...}
type StorageClusterSpecNodesSelectorLabelSelectorInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorLabelSelectorOutput() StorageClusterSpecNodesSelectorLabelSelectorOutput
	ToStorageClusterSpecNodesSelectorLabelSelectorOutputWithContext(context.Context) StorageClusterSpecNodesSelectorLabelSelectorOutput
}

// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
type StorageClusterSpecNodesSelectorLabelSelectorArgs struct {
	// It is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.MapInput `pulumi:"matchLabels"`
}

func (StorageClusterSpecNodesSelectorLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelectorLabelSelector)(nil)).Elem()
}

func (i StorageClusterSpecNodesSelectorLabelSelectorArgs) ToStorageClusterSpecNodesSelectorLabelSelectorOutput() StorageClusterSpecNodesSelectorLabelSelectorOutput {
	return i.ToStorageClusterSpecNodesSelectorLabelSelectorOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorLabelSelectorArgs) ToStorageClusterSpecNodesSelectorLabelSelectorOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorLabelSelectorOutput)
}

func (i StorageClusterSpecNodesSelectorLabelSelectorArgs) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutput() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return i.ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorLabelSelectorArgs) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorLabelSelectorOutput).ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesSelectorLabelSelectorPtrInput is an input type that accepts StorageClusterSpecNodesSelectorLabelSelectorArgs, StorageClusterSpecNodesSelectorLabelSelectorPtr and StorageClusterSpecNodesSelectorLabelSelectorPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorLabelSelectorPtrInput` via:
//
//          StorageClusterSpecNodesSelectorLabelSelectorArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesSelectorLabelSelectorPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutput() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput
	ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(context.Context) StorageClusterSpecNodesSelectorLabelSelectorPtrOutput
}

type storageClusterSpecNodesSelectorLabelSelectorPtrType StorageClusterSpecNodesSelectorLabelSelectorArgs

func StorageClusterSpecNodesSelectorLabelSelectorPtr(v *StorageClusterSpecNodesSelectorLabelSelectorArgs) StorageClusterSpecNodesSelectorLabelSelectorPtrInput {
	return (*storageClusterSpecNodesSelectorLabelSelectorPtrType)(v)
}

func (*storageClusterSpecNodesSelectorLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesSelectorLabelSelector)(nil)).Elem()
}

func (i *storageClusterSpecNodesSelectorLabelSelectorPtrType) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutput() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return i.ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesSelectorLabelSelectorPtrType) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorLabelSelectorPtrOutput)
}

// It is a label query over all the nodes. The result of matchLabels and matchExpressions is ANDed. An empty label selector matches all nodes. A null label selector matches no objects.
type StorageClusterSpecNodesSelectorLabelSelectorOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelectorLabelSelector)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorLabelSelectorOutput) ToStorageClusterSpecNodesSelectorLabelSelectorOutput() StorageClusterSpecNodesSelectorLabelSelectorOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorOutput) ToStorageClusterSpecNodesSelectorLabelSelectorOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorOutput) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutput() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return o.ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesSelectorLabelSelectorOutput) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelectorLabelSelector) *StorageClusterSpecNodesSelectorLabelSelector {
		return &v
	}).(StorageClusterSpecNodesSelectorLabelSelectorPtrOutput)
}

// It is a list of label selector requirements. The requirements are ANDed.
func (o StorageClusterSpecNodesSelectorLabelSelectorOutput) MatchExpressions() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelectorLabelSelector) []StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput)
}

// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o StorageClusterSpecNodesSelectorLabelSelectorOutput) MatchLabels() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelectorLabelSelector) map[string]interface{} { return v.MatchLabels }).(pulumi.MapOutput)
}

type StorageClusterSpecNodesSelectorLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesSelectorLabelSelector)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorLabelSelectorPtrOutput) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutput() StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorPtrOutput) ToStorageClusterSpecNodesSelectorLabelSelectorPtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorPtrOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorPtrOutput) Elem() StorageClusterSpecNodesSelectorLabelSelectorOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesSelectorLabelSelector) StorageClusterSpecNodesSelectorLabelSelector {
		return *v
	}).(StorageClusterSpecNodesSelectorLabelSelectorOutput)
}

// It is a list of label selector requirements. The requirements are ANDed.
func (o StorageClusterSpecNodesSelectorLabelSelectorPtrOutput) MatchExpressions() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesSelectorLabelSelector) []StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput)
}

// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o StorageClusterSpecNodesSelectorLabelSelectorPtrOutput) MatchLabels() pulumi.MapOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesSelectorLabelSelector) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.MapOutput)
}

type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions struct {
	// It is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// It represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// It is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
	Values []string `pulumi:"values"`
}

// StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsInput is an input type that accepts StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs and StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsInput` via:
//
//          StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs{...}
type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput
	ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutputWithContext(context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput
}

type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs struct {
	// It is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// It represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// It is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput {
	return i.ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput)
}

// StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayInput is an input type that accepts StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArray and StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayInput` via:
//
//          StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArray{ StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArgs{...} }
type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput
	ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput
}

type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArray []StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsInput

func (StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArray) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput {
	return i.ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArray) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput)
}

type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput {
	return o
}

// It is the label key that the selector applies to.
func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// It represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// It is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput) ToStorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions {
		return vs[0].([]StorageClusterSpecNodesSelectorLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput)
}

// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type StorageClusterSpecNodesSelectorLabelSelectorMatchLabels struct {
}

// StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsInput is an input type that accepts StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsArgs and StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsInput` via:
//
//          StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsArgs{...}
type StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput
	ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutputWithContext(context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput
}

// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsArgs struct {
}

func (StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelectorLabelSelectorMatchLabels)(nil)).Elem()
}

func (i StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsArgs) ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput {
	return i.ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsArgs) ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput)
}

// It is a map of key-value pairs. A single key-value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesSelectorLabelSelectorMatchLabels)(nil)).Elem()
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput) ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput() StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput {
	return o
}

func (o StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput) ToStorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput {
	return o
}

// Details of the storage used by the storage driver.
type StorageClusterSpecNodesStorage struct {
	// List of devices to be used by the storage driver.
	Devices []string `pulumi:"devices"`
	// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
	ForceUseDisks *bool `pulumi:"forceUseDisks"`
	// Device used for journaling.
	JournalDevice *string `pulumi:"journalDevice"`
	// Device used for internal KVDB.
	KvdbDevice *string `pulumi:"kvdbDevice"`
	// Device that will be used to store system metadata by the driver.
	SystemMetadataDevice *string `pulumi:"systemMetadataDevice"`
	// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
	UseAll *bool `pulumi:"useAll"`
	// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
	UseAllWithPartitions *bool `pulumi:"useAllWithPartitions"`
}

// StorageClusterSpecNodesStorageInput is an input type that accepts StorageClusterSpecNodesStorageArgs and StorageClusterSpecNodesStorageOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesStorageInput` via:
//
//          StorageClusterSpecNodesStorageArgs{...}
type StorageClusterSpecNodesStorageInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesStorageOutput() StorageClusterSpecNodesStorageOutput
	ToStorageClusterSpecNodesStorageOutputWithContext(context.Context) StorageClusterSpecNodesStorageOutput
}

// Details of the storage used by the storage driver.
type StorageClusterSpecNodesStorageArgs struct {
	// List of devices to be used by the storage driver.
	Devices pulumi.StringArrayInput `pulumi:"devices"`
	// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
	ForceUseDisks pulumi.BoolPtrInput `pulumi:"forceUseDisks"`
	// Device used for journaling.
	JournalDevice pulumi.StringPtrInput `pulumi:"journalDevice"`
	// Device used for internal KVDB.
	KvdbDevice pulumi.StringPtrInput `pulumi:"kvdbDevice"`
	// Device that will be used to store system metadata by the driver.
	SystemMetadataDevice pulumi.StringPtrInput `pulumi:"systemMetadataDevice"`
	// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
	UseAll pulumi.BoolPtrInput `pulumi:"useAll"`
	// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
	UseAllWithPartitions pulumi.BoolPtrInput `pulumi:"useAllWithPartitions"`
}

func (StorageClusterSpecNodesStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesStorage)(nil)).Elem()
}

func (i StorageClusterSpecNodesStorageArgs) ToStorageClusterSpecNodesStorageOutput() StorageClusterSpecNodesStorageOutput {
	return i.ToStorageClusterSpecNodesStorageOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesStorageArgs) ToStorageClusterSpecNodesStorageOutputWithContext(ctx context.Context) StorageClusterSpecNodesStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesStorageOutput)
}

func (i StorageClusterSpecNodesStorageArgs) ToStorageClusterSpecNodesStoragePtrOutput() StorageClusterSpecNodesStoragePtrOutput {
	return i.ToStorageClusterSpecNodesStoragePtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecNodesStorageArgs) ToStorageClusterSpecNodesStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesStorageOutput).ToStorageClusterSpecNodesStoragePtrOutputWithContext(ctx)
}

// StorageClusterSpecNodesStoragePtrInput is an input type that accepts StorageClusterSpecNodesStorageArgs, StorageClusterSpecNodesStoragePtr and StorageClusterSpecNodesStoragePtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecNodesStoragePtrInput` via:
//
//          StorageClusterSpecNodesStorageArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecNodesStoragePtrInput interface {
	pulumi.Input

	ToStorageClusterSpecNodesStoragePtrOutput() StorageClusterSpecNodesStoragePtrOutput
	ToStorageClusterSpecNodesStoragePtrOutputWithContext(context.Context) StorageClusterSpecNodesStoragePtrOutput
}

type storageClusterSpecNodesStoragePtrType StorageClusterSpecNodesStorageArgs

func StorageClusterSpecNodesStoragePtr(v *StorageClusterSpecNodesStorageArgs) StorageClusterSpecNodesStoragePtrInput {
	return (*storageClusterSpecNodesStoragePtrType)(v)
}

func (*storageClusterSpecNodesStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesStorage)(nil)).Elem()
}

func (i *storageClusterSpecNodesStoragePtrType) ToStorageClusterSpecNodesStoragePtrOutput() StorageClusterSpecNodesStoragePtrOutput {
	return i.ToStorageClusterSpecNodesStoragePtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecNodesStoragePtrType) ToStorageClusterSpecNodesStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecNodesStoragePtrOutput)
}

// Details of the storage used by the storage driver.
type StorageClusterSpecNodesStorageOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecNodesStorage)(nil)).Elem()
}

func (o StorageClusterSpecNodesStorageOutput) ToStorageClusterSpecNodesStorageOutput() StorageClusterSpecNodesStorageOutput {
	return o
}

func (o StorageClusterSpecNodesStorageOutput) ToStorageClusterSpecNodesStorageOutputWithContext(ctx context.Context) StorageClusterSpecNodesStorageOutput {
	return o
}

func (o StorageClusterSpecNodesStorageOutput) ToStorageClusterSpecNodesStoragePtrOutput() StorageClusterSpecNodesStoragePtrOutput {
	return o.ToStorageClusterSpecNodesStoragePtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecNodesStorageOutput) ToStorageClusterSpecNodesStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *StorageClusterSpecNodesStorage {
		return &v
	}).(StorageClusterSpecNodesStoragePtrOutput)
}

// List of devices to be used by the storage driver.
func (o StorageClusterSpecNodesStorageOutput) Devices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) []string { return v.Devices }).(pulumi.StringArrayOutput)
}

// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
func (o StorageClusterSpecNodesStorageOutput) ForceUseDisks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *bool { return v.ForceUseDisks }).(pulumi.BoolPtrOutput)
}

// Device used for journaling.
func (o StorageClusterSpecNodesStorageOutput) JournalDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *string { return v.JournalDevice }).(pulumi.StringPtrOutput)
}

// Device used for internal KVDB.
func (o StorageClusterSpecNodesStorageOutput) KvdbDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *string { return v.KvdbDevice }).(pulumi.StringPtrOutput)
}

// Device that will be used to store system metadata by the driver.
func (o StorageClusterSpecNodesStorageOutput) SystemMetadataDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *string { return v.SystemMetadataDevice }).(pulumi.StringPtrOutput)
}

// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecNodesStorageOutput) UseAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *bool { return v.UseAll }).(pulumi.BoolPtrOutput)
}

// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecNodesStorageOutput) UseAllWithPartitions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecNodesStorage) *bool { return v.UseAllWithPartitions }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecNodesStoragePtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecNodesStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecNodesStorage)(nil)).Elem()
}

func (o StorageClusterSpecNodesStoragePtrOutput) ToStorageClusterSpecNodesStoragePtrOutput() StorageClusterSpecNodesStoragePtrOutput {
	return o
}

func (o StorageClusterSpecNodesStoragePtrOutput) ToStorageClusterSpecNodesStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecNodesStoragePtrOutput {
	return o
}

func (o StorageClusterSpecNodesStoragePtrOutput) Elem() StorageClusterSpecNodesStorageOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) StorageClusterSpecNodesStorage { return *v }).(StorageClusterSpecNodesStorageOutput)
}

// List of devices to be used by the storage driver.
func (o StorageClusterSpecNodesStoragePtrOutput) Devices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) []string {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(pulumi.StringArrayOutput)
}

// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
func (o StorageClusterSpecNodesStoragePtrOutput) ForceUseDisks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) *bool {
		if v == nil {
			return nil
		}
		return v.ForceUseDisks
	}).(pulumi.BoolPtrOutput)
}

// Device used for journaling.
func (o StorageClusterSpecNodesStoragePtrOutput) JournalDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) *string {
		if v == nil {
			return nil
		}
		return v.JournalDevice
	}).(pulumi.StringPtrOutput)
}

// Device used for internal KVDB.
func (o StorageClusterSpecNodesStoragePtrOutput) KvdbDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) *string {
		if v == nil {
			return nil
		}
		return v.KvdbDevice
	}).(pulumi.StringPtrOutput)
}

// Device that will be used to store system metadata by the driver.
func (o StorageClusterSpecNodesStoragePtrOutput) SystemMetadataDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) *string {
		if v == nil {
			return nil
		}
		return v.SystemMetadataDevice
	}).(pulumi.StringPtrOutput)
}

// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecNodesStoragePtrOutput) UseAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) *bool {
		if v == nil {
			return nil
		}
		return v.UseAll
	}).(pulumi.BoolPtrOutput)
}

// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecNodesStoragePtrOutput) UseAllWithPartitions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecNodesStorage) *bool {
		if v == nil {
			return nil
		}
		return v.UseAllWithPartitions
	}).(pulumi.BoolPtrOutput)
}

// Describes placement configuration for the storage cluster pods.
type StorageClusterSpecPlacement struct {
	// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
	NodeAffinity *StorageClusterSpecPlacementNodeAffinity `pulumi:"nodeAffinity"`
	// Tolerations for all the pods deployed by the StorageCluster controller. The pod with this toleration attached will tolerate any taint that matches the triple <key,value,effect> using the matching operator <operator>.
	Tolerations []StorageClusterSpecPlacementTolerations `pulumi:"tolerations"`
}

// StorageClusterSpecPlacementInput is an input type that accepts StorageClusterSpecPlacementArgs and StorageClusterSpecPlacementOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementInput` via:
//
//          StorageClusterSpecPlacementArgs{...}
type StorageClusterSpecPlacementInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementOutput() StorageClusterSpecPlacementOutput
	ToStorageClusterSpecPlacementOutputWithContext(context.Context) StorageClusterSpecPlacementOutput
}

// Describes placement configuration for the storage cluster pods.
type StorageClusterSpecPlacementArgs struct {
	// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
	NodeAffinity StorageClusterSpecPlacementNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Tolerations for all the pods deployed by the StorageCluster controller. The pod with this toleration attached will tolerate any taint that matches the triple <key,value,effect> using the matching operator <operator>.
	Tolerations StorageClusterSpecPlacementTolerationsArrayInput `pulumi:"tolerations"`
}

func (StorageClusterSpecPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacement)(nil)).Elem()
}

func (i StorageClusterSpecPlacementArgs) ToStorageClusterSpecPlacementOutput() StorageClusterSpecPlacementOutput {
	return i.ToStorageClusterSpecPlacementOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementArgs) ToStorageClusterSpecPlacementOutputWithContext(ctx context.Context) StorageClusterSpecPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementOutput)
}

func (i StorageClusterSpecPlacementArgs) ToStorageClusterSpecPlacementPtrOutput() StorageClusterSpecPlacementPtrOutput {
	return i.ToStorageClusterSpecPlacementPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementArgs) ToStorageClusterSpecPlacementPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementOutput).ToStorageClusterSpecPlacementPtrOutputWithContext(ctx)
}

// StorageClusterSpecPlacementPtrInput is an input type that accepts StorageClusterSpecPlacementArgs, StorageClusterSpecPlacementPtr and StorageClusterSpecPlacementPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementPtrInput` via:
//
//          StorageClusterSpecPlacementArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecPlacementPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementPtrOutput() StorageClusterSpecPlacementPtrOutput
	ToStorageClusterSpecPlacementPtrOutputWithContext(context.Context) StorageClusterSpecPlacementPtrOutput
}

type storageClusterSpecPlacementPtrType StorageClusterSpecPlacementArgs

func StorageClusterSpecPlacementPtr(v *StorageClusterSpecPlacementArgs) StorageClusterSpecPlacementPtrInput {
	return (*storageClusterSpecPlacementPtrType)(v)
}

func (*storageClusterSpecPlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecPlacement)(nil)).Elem()
}

func (i *storageClusterSpecPlacementPtrType) ToStorageClusterSpecPlacementPtrOutput() StorageClusterSpecPlacementPtrOutput {
	return i.ToStorageClusterSpecPlacementPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecPlacementPtrType) ToStorageClusterSpecPlacementPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementPtrOutput)
}

// Describes placement configuration for the storage cluster pods.
type StorageClusterSpecPlacementOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacement)(nil)).Elem()
}

func (o StorageClusterSpecPlacementOutput) ToStorageClusterSpecPlacementOutput() StorageClusterSpecPlacementOutput {
	return o
}

func (o StorageClusterSpecPlacementOutput) ToStorageClusterSpecPlacementOutputWithContext(ctx context.Context) StorageClusterSpecPlacementOutput {
	return o
}

func (o StorageClusterSpecPlacementOutput) ToStorageClusterSpecPlacementPtrOutput() StorageClusterSpecPlacementPtrOutput {
	return o.ToStorageClusterSpecPlacementPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecPlacementOutput) ToStorageClusterSpecPlacementPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacement) *StorageClusterSpecPlacement {
		return &v
	}).(StorageClusterSpecPlacementPtrOutput)
}

// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
func (o StorageClusterSpecPlacementOutput) NodeAffinity() StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacement) *StorageClusterSpecPlacementNodeAffinity { return v.NodeAffinity }).(StorageClusterSpecPlacementNodeAffinityPtrOutput)
}

// Tolerations for all the pods deployed by the StorageCluster controller. The pod with this toleration attached will tolerate any taint that matches the triple <key,value,effect> using the matching operator <operator>.
func (o StorageClusterSpecPlacementOutput) Tolerations() StorageClusterSpecPlacementTolerationsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacement) []StorageClusterSpecPlacementTolerations { return v.Tolerations }).(StorageClusterSpecPlacementTolerationsArrayOutput)
}

type StorageClusterSpecPlacementPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecPlacement)(nil)).Elem()
}

func (o StorageClusterSpecPlacementPtrOutput) ToStorageClusterSpecPlacementPtrOutput() StorageClusterSpecPlacementPtrOutput {
	return o
}

func (o StorageClusterSpecPlacementPtrOutput) ToStorageClusterSpecPlacementPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementPtrOutput {
	return o
}

func (o StorageClusterSpecPlacementPtrOutput) Elem() StorageClusterSpecPlacementOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacement) StorageClusterSpecPlacement { return *v }).(StorageClusterSpecPlacementOutput)
}

// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
func (o StorageClusterSpecPlacementPtrOutput) NodeAffinity() StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacement) *StorageClusterSpecPlacementNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(StorageClusterSpecPlacementNodeAffinityPtrOutput)
}

// Tolerations for all the pods deployed by the StorageCluster controller. The pod with this toleration attached will tolerate any taint that matches the triple <key,value,effect> using the matching operator <operator>.
func (o StorageClusterSpecPlacementPtrOutput) Tolerations() StorageClusterSpecPlacementTolerationsArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacement) []StorageClusterSpecPlacementTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(StorageClusterSpecPlacementTolerationsArrayOutput)
}

// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
type StorageClusterSpecPlacementNodeAffinity struct {
	PreferredDuringSchedulingIgnoredDuringExecution []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution   `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// StorageClusterSpecPlacementNodeAffinityInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityArgs and StorageClusterSpecPlacementNodeAffinityOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityArgs{...}
type StorageClusterSpecPlacementNodeAffinityInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityOutput() StorageClusterSpecPlacementNodeAffinityOutput
	ToStorageClusterSpecPlacementNodeAffinityOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityOutput
}

// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
type StorageClusterSpecPlacementNodeAffinityArgs struct {
	PreferredDuringSchedulingIgnoredDuringExecution StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	RequiredDuringSchedulingIgnoredDuringExecution  StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput    `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (StorageClusterSpecPlacementNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinity)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityArgs) ToStorageClusterSpecPlacementNodeAffinityOutput() StorageClusterSpecPlacementNodeAffinityOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityArgs) ToStorageClusterSpecPlacementNodeAffinityOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityOutput)
}

func (i StorageClusterSpecPlacementNodeAffinityArgs) ToStorageClusterSpecPlacementNodeAffinityPtrOutput() StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityArgs) ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityOutput).ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(ctx)
}

// StorageClusterSpecPlacementNodeAffinityPtrInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityArgs, StorageClusterSpecPlacementNodeAffinityPtr and StorageClusterSpecPlacementNodeAffinityPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPtrInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecPlacementNodeAffinityPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPtrOutput() StorageClusterSpecPlacementNodeAffinityPtrOutput
	ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPtrOutput
}

type storageClusterSpecPlacementNodeAffinityPtrType StorageClusterSpecPlacementNodeAffinityArgs

func StorageClusterSpecPlacementNodeAffinityPtr(v *StorageClusterSpecPlacementNodeAffinityArgs) StorageClusterSpecPlacementNodeAffinityPtrInput {
	return (*storageClusterSpecPlacementNodeAffinityPtrType)(v)
}

func (*storageClusterSpecPlacementNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecPlacementNodeAffinity)(nil)).Elem()
}

func (i *storageClusterSpecPlacementNodeAffinityPtrType) ToStorageClusterSpecPlacementNodeAffinityPtrOutput() StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecPlacementNodeAffinityPtrType) ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the storage cluster pods. This is exactly the same object as Kubernetes node affinity for pods.
type StorageClusterSpecPlacementNodeAffinityOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinity)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityOutput) ToStorageClusterSpecPlacementNodeAffinityOutput() StorageClusterSpecPlacementNodeAffinityOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityOutput) ToStorageClusterSpecPlacementNodeAffinityOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityOutput) ToStorageClusterSpecPlacementNodeAffinityPtrOutput() StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return o.ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecPlacementNodeAffinityOutput) ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinity) *StorageClusterSpecPlacementNodeAffinity {
		return &v
	}).(StorageClusterSpecPlacementNodeAffinityPtrOutput)
}
func (o StorageClusterSpecPlacementNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinity) []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinity) *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type StorageClusterSpecPlacementNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecPlacementNodeAffinity)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPtrOutput) ToStorageClusterSpecPlacementNodeAffinityPtrOutput() StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPtrOutput) ToStorageClusterSpecPlacementNodeAffinityPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPtrOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPtrOutput) Elem() StorageClusterSpecPlacementNodeAffinityOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacementNodeAffinity) StorageClusterSpecPlacementNodeAffinity { return *v }).(StorageClusterSpecPlacementNodeAffinityOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacementNodeAffinity) []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacementNodeAffinity) *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	Preference StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	Weight     int                                                                                              `pulumi:"weight"`
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	Preference StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	Weight     pulumi.IntInput                                                                                       `pulumi:"weight"`
}

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	MatchExpressions []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	MatchFields      []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields      `pulumi:"matchFields"`
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	MatchExpressions StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchFields      StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput      `pulumi:"matchFields"`
}

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	Key      string   `pulumi:"key"`
	Operator string   `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	Key      pulumi.StringInput      `pulumi:"key"`
	Operator pulumi.StringInput      `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	Key      string   `pulumi:"key"`
	Operator string   `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	Key      pulumi.StringInput      `pulumi:"key"`
	Operator pulumi.StringInput      `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	NodeSelectorTerms []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	NodeSelectorTerms StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type storageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*storageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*storageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *storageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}
func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return *v
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	MatchExpressions []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	MatchFields      []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields      `pulumi:"matchFields"`
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	MatchExpressions StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchFields      StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput      `pulumi:"matchFields"`
}

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	Key      string   `pulumi:"key"`
	Operator string   `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	Key      pulumi.StringInput      `pulumi:"key"`
	Operator pulumi.StringInput      `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	Key      string   `pulumi:"key"`
	Operator string   `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	Key      pulumi.StringInput      `pulumi:"key"`
	Operator pulumi.StringInput      `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToStorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

type StorageClusterSpecPlacementTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// StorageClusterSpecPlacementTolerationsInput is an input type that accepts StorageClusterSpecPlacementTolerationsArgs and StorageClusterSpecPlacementTolerationsOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementTolerationsInput` via:
//
//          StorageClusterSpecPlacementTolerationsArgs{...}
type StorageClusterSpecPlacementTolerationsInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementTolerationsOutput() StorageClusterSpecPlacementTolerationsOutput
	ToStorageClusterSpecPlacementTolerationsOutputWithContext(context.Context) StorageClusterSpecPlacementTolerationsOutput
}

type StorageClusterSpecPlacementTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StorageClusterSpecPlacementTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementTolerations)(nil)).Elem()
}

func (i StorageClusterSpecPlacementTolerationsArgs) ToStorageClusterSpecPlacementTolerationsOutput() StorageClusterSpecPlacementTolerationsOutput {
	return i.ToStorageClusterSpecPlacementTolerationsOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementTolerationsArgs) ToStorageClusterSpecPlacementTolerationsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementTolerationsOutput)
}

// StorageClusterSpecPlacementTolerationsArrayInput is an input type that accepts StorageClusterSpecPlacementTolerationsArray and StorageClusterSpecPlacementTolerationsArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecPlacementTolerationsArrayInput` via:
//
//          StorageClusterSpecPlacementTolerationsArray{ StorageClusterSpecPlacementTolerationsArgs{...} }
type StorageClusterSpecPlacementTolerationsArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecPlacementTolerationsArrayOutput() StorageClusterSpecPlacementTolerationsArrayOutput
	ToStorageClusterSpecPlacementTolerationsArrayOutputWithContext(context.Context) StorageClusterSpecPlacementTolerationsArrayOutput
}

type StorageClusterSpecPlacementTolerationsArray []StorageClusterSpecPlacementTolerationsInput

func (StorageClusterSpecPlacementTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementTolerations)(nil)).Elem()
}

func (i StorageClusterSpecPlacementTolerationsArray) ToStorageClusterSpecPlacementTolerationsArrayOutput() StorageClusterSpecPlacementTolerationsArrayOutput {
	return i.ToStorageClusterSpecPlacementTolerationsArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecPlacementTolerationsArray) ToStorageClusterSpecPlacementTolerationsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecPlacementTolerationsArrayOutput)
}

type StorageClusterSpecPlacementTolerationsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecPlacementTolerations)(nil)).Elem()
}

func (o StorageClusterSpecPlacementTolerationsOutput) ToStorageClusterSpecPlacementTolerationsOutput() StorageClusterSpecPlacementTolerationsOutput {
	return o
}

func (o StorageClusterSpecPlacementTolerationsOutput) ToStorageClusterSpecPlacementTolerationsOutputWithContext(ctx context.Context) StorageClusterSpecPlacementTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o StorageClusterSpecPlacementTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o StorageClusterSpecPlacementTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
func (o StorageClusterSpecPlacementTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o StorageClusterSpecPlacementTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o StorageClusterSpecPlacementTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecPlacementTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecPlacementTolerationsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecPlacementTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecPlacementTolerations)(nil)).Elem()
}

func (o StorageClusterSpecPlacementTolerationsArrayOutput) ToStorageClusterSpecPlacementTolerationsArrayOutput() StorageClusterSpecPlacementTolerationsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementTolerationsArrayOutput) ToStorageClusterSpecPlacementTolerationsArrayOutputWithContext(ctx context.Context) StorageClusterSpecPlacementTolerationsArrayOutput {
	return o
}

func (o StorageClusterSpecPlacementTolerationsArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecPlacementTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecPlacementTolerations {
		return vs[0].([]StorageClusterSpecPlacementTolerations)[vs[1].(int)]
	}).(StorageClusterSpecPlacementTolerationsOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
type StorageClusterSpecRuntimeOptions struct {
}

// StorageClusterSpecRuntimeOptionsInput is an input type that accepts StorageClusterSpecRuntimeOptionsArgs and StorageClusterSpecRuntimeOptionsOutput values.
// You can construct a concrete instance of `StorageClusterSpecRuntimeOptionsInput` via:
//
//          StorageClusterSpecRuntimeOptionsArgs{...}
type StorageClusterSpecRuntimeOptionsInput interface {
	pulumi.Input

	ToStorageClusterSpecRuntimeOptionsOutput() StorageClusterSpecRuntimeOptionsOutput
	ToStorageClusterSpecRuntimeOptionsOutputWithContext(context.Context) StorageClusterSpecRuntimeOptionsOutput
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
type StorageClusterSpecRuntimeOptionsArgs struct {
}

func (StorageClusterSpecRuntimeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecRuntimeOptions)(nil)).Elem()
}

func (i StorageClusterSpecRuntimeOptionsArgs) ToStorageClusterSpecRuntimeOptionsOutput() StorageClusterSpecRuntimeOptionsOutput {
	return i.ToStorageClusterSpecRuntimeOptionsOutputWithContext(context.Background())
}

func (i StorageClusterSpecRuntimeOptionsArgs) ToStorageClusterSpecRuntimeOptionsOutputWithContext(ctx context.Context) StorageClusterSpecRuntimeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecRuntimeOptionsOutput)
}

// This is map of any runtime options that need to be sent to the storage driver. The value is a string.
type StorageClusterSpecRuntimeOptionsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecRuntimeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecRuntimeOptions)(nil)).Elem()
}

func (o StorageClusterSpecRuntimeOptionsOutput) ToStorageClusterSpecRuntimeOptionsOutput() StorageClusterSpecRuntimeOptionsOutput {
	return o
}

func (o StorageClusterSpecRuntimeOptionsOutput) ToStorageClusterSpecRuntimeOptionsOutputWithContext(ctx context.Context) StorageClusterSpecRuntimeOptionsOutput {
	return o
}

// Contains security configuration for the storage cluster.
type StorageClusterSpecSecurity struct {
	// Authorization configurations for a RBAC enabled storage cluster
	Auth *StorageClusterSpecSecurityAuth `pulumi:"auth"`
	// Flag indicating whether security features need to be enabled for the storage cluster.
	Enabled *bool `pulumi:"enabled"`
}

// StorageClusterSpecSecurityInput is an input type that accepts StorageClusterSpecSecurityArgs and StorageClusterSpecSecurityOutput values.
// You can construct a concrete instance of `StorageClusterSpecSecurityInput` via:
//
//          StorageClusterSpecSecurityArgs{...}
type StorageClusterSpecSecurityInput interface {
	pulumi.Input

	ToStorageClusterSpecSecurityOutput() StorageClusterSpecSecurityOutput
	ToStorageClusterSpecSecurityOutputWithContext(context.Context) StorageClusterSpecSecurityOutput
}

// Contains security configuration for the storage cluster.
type StorageClusterSpecSecurityArgs struct {
	// Authorization configurations for a RBAC enabled storage cluster
	Auth StorageClusterSpecSecurityAuthPtrInput `pulumi:"auth"`
	// Flag indicating whether security features need to be enabled for the storage cluster.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (StorageClusterSpecSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecSecurity)(nil)).Elem()
}

func (i StorageClusterSpecSecurityArgs) ToStorageClusterSpecSecurityOutput() StorageClusterSpecSecurityOutput {
	return i.ToStorageClusterSpecSecurityOutputWithContext(context.Background())
}

func (i StorageClusterSpecSecurityArgs) ToStorageClusterSpecSecurityOutputWithContext(ctx context.Context) StorageClusterSpecSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityOutput)
}

func (i StorageClusterSpecSecurityArgs) ToStorageClusterSpecSecurityPtrOutput() StorageClusterSpecSecurityPtrOutput {
	return i.ToStorageClusterSpecSecurityPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecSecurityArgs) ToStorageClusterSpecSecurityPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityOutput).ToStorageClusterSpecSecurityPtrOutputWithContext(ctx)
}

// StorageClusterSpecSecurityPtrInput is an input type that accepts StorageClusterSpecSecurityArgs, StorageClusterSpecSecurityPtr and StorageClusterSpecSecurityPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecSecurityPtrInput` via:
//
//          StorageClusterSpecSecurityArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecSecurityPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecSecurityPtrOutput() StorageClusterSpecSecurityPtrOutput
	ToStorageClusterSpecSecurityPtrOutputWithContext(context.Context) StorageClusterSpecSecurityPtrOutput
}

type storageClusterSpecSecurityPtrType StorageClusterSpecSecurityArgs

func StorageClusterSpecSecurityPtr(v *StorageClusterSpecSecurityArgs) StorageClusterSpecSecurityPtrInput {
	return (*storageClusterSpecSecurityPtrType)(v)
}

func (*storageClusterSpecSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecSecurity)(nil)).Elem()
}

func (i *storageClusterSpecSecurityPtrType) ToStorageClusterSpecSecurityPtrOutput() StorageClusterSpecSecurityPtrOutput {
	return i.ToStorageClusterSpecSecurityPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecSecurityPtrType) ToStorageClusterSpecSecurityPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityPtrOutput)
}

// Contains security configuration for the storage cluster.
type StorageClusterSpecSecurityOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecSecurity)(nil)).Elem()
}

func (o StorageClusterSpecSecurityOutput) ToStorageClusterSpecSecurityOutput() StorageClusterSpecSecurityOutput {
	return o
}

func (o StorageClusterSpecSecurityOutput) ToStorageClusterSpecSecurityOutputWithContext(ctx context.Context) StorageClusterSpecSecurityOutput {
	return o
}

func (o StorageClusterSpecSecurityOutput) ToStorageClusterSpecSecurityPtrOutput() StorageClusterSpecSecurityPtrOutput {
	return o.ToStorageClusterSpecSecurityPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecSecurityOutput) ToStorageClusterSpecSecurityPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurity) *StorageClusterSpecSecurity {
		return &v
	}).(StorageClusterSpecSecurityPtrOutput)
}

// Authorization configurations for a RBAC enabled storage cluster
func (o StorageClusterSpecSecurityOutput) Auth() StorageClusterSpecSecurityAuthPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurity) *StorageClusterSpecSecurityAuth { return v.Auth }).(StorageClusterSpecSecurityAuthPtrOutput)
}

// Flag indicating whether security features need to be enabled for the storage cluster.
func (o StorageClusterSpecSecurityOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurity) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecSecurityPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecSecurity)(nil)).Elem()
}

func (o StorageClusterSpecSecurityPtrOutput) ToStorageClusterSpecSecurityPtrOutput() StorageClusterSpecSecurityPtrOutput {
	return o
}

func (o StorageClusterSpecSecurityPtrOutput) ToStorageClusterSpecSecurityPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityPtrOutput {
	return o
}

func (o StorageClusterSpecSecurityPtrOutput) Elem() StorageClusterSpecSecurityOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurity) StorageClusterSpecSecurity { return *v }).(StorageClusterSpecSecurityOutput)
}

// Authorization configurations for a RBAC enabled storage cluster
func (o StorageClusterSpecSecurityPtrOutput) Auth() StorageClusterSpecSecurityAuthPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurity) *StorageClusterSpecSecurityAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(StorageClusterSpecSecurityAuthPtrOutput)
}

// Flag indicating whether security features need to be enabled for the storage cluster.
func (o StorageClusterSpecSecurityPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Authorization configurations for a RBAC enabled storage cluster
type StorageClusterSpecSecurityAuth struct {
	// Defines the access mode of a guest user
	GuestAccess *string `pulumi:"guestAccess"`
	// Configuration for self signed authentication
	SelfSigned *StorageClusterSpecSecurityAuthSelfSigned `pulumi:"selfSigned"`
}

// StorageClusterSpecSecurityAuthInput is an input type that accepts StorageClusterSpecSecurityAuthArgs and StorageClusterSpecSecurityAuthOutput values.
// You can construct a concrete instance of `StorageClusterSpecSecurityAuthInput` via:
//
//          StorageClusterSpecSecurityAuthArgs{...}
type StorageClusterSpecSecurityAuthInput interface {
	pulumi.Input

	ToStorageClusterSpecSecurityAuthOutput() StorageClusterSpecSecurityAuthOutput
	ToStorageClusterSpecSecurityAuthOutputWithContext(context.Context) StorageClusterSpecSecurityAuthOutput
}

// Authorization configurations for a RBAC enabled storage cluster
type StorageClusterSpecSecurityAuthArgs struct {
	// Defines the access mode of a guest user
	GuestAccess pulumi.StringPtrInput `pulumi:"guestAccess"`
	// Configuration for self signed authentication
	SelfSigned StorageClusterSpecSecurityAuthSelfSignedPtrInput `pulumi:"selfSigned"`
}

func (StorageClusterSpecSecurityAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecSecurityAuth)(nil)).Elem()
}

func (i StorageClusterSpecSecurityAuthArgs) ToStorageClusterSpecSecurityAuthOutput() StorageClusterSpecSecurityAuthOutput {
	return i.ToStorageClusterSpecSecurityAuthOutputWithContext(context.Background())
}

func (i StorageClusterSpecSecurityAuthArgs) ToStorageClusterSpecSecurityAuthOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityAuthOutput)
}

func (i StorageClusterSpecSecurityAuthArgs) ToStorageClusterSpecSecurityAuthPtrOutput() StorageClusterSpecSecurityAuthPtrOutput {
	return i.ToStorageClusterSpecSecurityAuthPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecSecurityAuthArgs) ToStorageClusterSpecSecurityAuthPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityAuthOutput).ToStorageClusterSpecSecurityAuthPtrOutputWithContext(ctx)
}

// StorageClusterSpecSecurityAuthPtrInput is an input type that accepts StorageClusterSpecSecurityAuthArgs, StorageClusterSpecSecurityAuthPtr and StorageClusterSpecSecurityAuthPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecSecurityAuthPtrInput` via:
//
//          StorageClusterSpecSecurityAuthArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecSecurityAuthPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecSecurityAuthPtrOutput() StorageClusterSpecSecurityAuthPtrOutput
	ToStorageClusterSpecSecurityAuthPtrOutputWithContext(context.Context) StorageClusterSpecSecurityAuthPtrOutput
}

type storageClusterSpecSecurityAuthPtrType StorageClusterSpecSecurityAuthArgs

func StorageClusterSpecSecurityAuthPtr(v *StorageClusterSpecSecurityAuthArgs) StorageClusterSpecSecurityAuthPtrInput {
	return (*storageClusterSpecSecurityAuthPtrType)(v)
}

func (*storageClusterSpecSecurityAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecSecurityAuth)(nil)).Elem()
}

func (i *storageClusterSpecSecurityAuthPtrType) ToStorageClusterSpecSecurityAuthPtrOutput() StorageClusterSpecSecurityAuthPtrOutput {
	return i.ToStorageClusterSpecSecurityAuthPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecSecurityAuthPtrType) ToStorageClusterSpecSecurityAuthPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityAuthPtrOutput)
}

// Authorization configurations for a RBAC enabled storage cluster
type StorageClusterSpecSecurityAuthOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecSecurityAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecSecurityAuth)(nil)).Elem()
}

func (o StorageClusterSpecSecurityAuthOutput) ToStorageClusterSpecSecurityAuthOutput() StorageClusterSpecSecurityAuthOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthOutput) ToStorageClusterSpecSecurityAuthOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthOutput) ToStorageClusterSpecSecurityAuthPtrOutput() StorageClusterSpecSecurityAuthPtrOutput {
	return o.ToStorageClusterSpecSecurityAuthPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecSecurityAuthOutput) ToStorageClusterSpecSecurityAuthPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuth) *StorageClusterSpecSecurityAuth {
		return &v
	}).(StorageClusterSpecSecurityAuthPtrOutput)
}

// Defines the access mode of a guest user
func (o StorageClusterSpecSecurityAuthOutput) GuestAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuth) *string { return v.GuestAccess }).(pulumi.StringPtrOutput)
}

// Configuration for self signed authentication
func (o StorageClusterSpecSecurityAuthOutput) SelfSigned() StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuth) *StorageClusterSpecSecurityAuthSelfSigned { return v.SelfSigned }).(StorageClusterSpecSecurityAuthSelfSignedPtrOutput)
}

type StorageClusterSpecSecurityAuthPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecSecurityAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecSecurityAuth)(nil)).Elem()
}

func (o StorageClusterSpecSecurityAuthPtrOutput) ToStorageClusterSpecSecurityAuthPtrOutput() StorageClusterSpecSecurityAuthPtrOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthPtrOutput) ToStorageClusterSpecSecurityAuthPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthPtrOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthPtrOutput) Elem() StorageClusterSpecSecurityAuthOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuth) StorageClusterSpecSecurityAuth { return *v }).(StorageClusterSpecSecurityAuthOutput)
}

// Defines the access mode of a guest user
func (o StorageClusterSpecSecurityAuthPtrOutput) GuestAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuth) *string {
		if v == nil {
			return nil
		}
		return v.GuestAccess
	}).(pulumi.StringPtrOutput)
}

// Configuration for self signed authentication
func (o StorageClusterSpecSecurityAuthPtrOutput) SelfSigned() StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuth) *StorageClusterSpecSecurityAuthSelfSigned {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(StorageClusterSpecSecurityAuthSelfSignedPtrOutput)
}

// Configuration for self signed authentication
type StorageClusterSpecSecurityAuthSelfSigned struct {
	// Token issuer for the tokens used to connect with storage cluster.
	Issuer *string `pulumi:"issuer"`
	// Shared secret is the name of the Kubernetes secret containing the shared key used for signing RBAC tokens. The secret has to be present in the StorageCluster namespace.
	SharedSecret *string `pulumi:"sharedSecret"`
	// Lifetime of auto-generated RBAC tokens to access the storage cluster.
	TokenLifetime *string `pulumi:"tokenLifetime"`
}

// StorageClusterSpecSecurityAuthSelfSignedInput is an input type that accepts StorageClusterSpecSecurityAuthSelfSignedArgs and StorageClusterSpecSecurityAuthSelfSignedOutput values.
// You can construct a concrete instance of `StorageClusterSpecSecurityAuthSelfSignedInput` via:
//
//          StorageClusterSpecSecurityAuthSelfSignedArgs{...}
type StorageClusterSpecSecurityAuthSelfSignedInput interface {
	pulumi.Input

	ToStorageClusterSpecSecurityAuthSelfSignedOutput() StorageClusterSpecSecurityAuthSelfSignedOutput
	ToStorageClusterSpecSecurityAuthSelfSignedOutputWithContext(context.Context) StorageClusterSpecSecurityAuthSelfSignedOutput
}

// Configuration for self signed authentication
type StorageClusterSpecSecurityAuthSelfSignedArgs struct {
	// Token issuer for the tokens used to connect with storage cluster.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Shared secret is the name of the Kubernetes secret containing the shared key used for signing RBAC tokens. The secret has to be present in the StorageCluster namespace.
	SharedSecret pulumi.StringPtrInput `pulumi:"sharedSecret"`
	// Lifetime of auto-generated RBAC tokens to access the storage cluster.
	TokenLifetime pulumi.StringPtrInput `pulumi:"tokenLifetime"`
}

func (StorageClusterSpecSecurityAuthSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecSecurityAuthSelfSigned)(nil)).Elem()
}

func (i StorageClusterSpecSecurityAuthSelfSignedArgs) ToStorageClusterSpecSecurityAuthSelfSignedOutput() StorageClusterSpecSecurityAuthSelfSignedOutput {
	return i.ToStorageClusterSpecSecurityAuthSelfSignedOutputWithContext(context.Background())
}

func (i StorageClusterSpecSecurityAuthSelfSignedArgs) ToStorageClusterSpecSecurityAuthSelfSignedOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityAuthSelfSignedOutput)
}

func (i StorageClusterSpecSecurityAuthSelfSignedArgs) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutput() StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return i.ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecSecurityAuthSelfSignedArgs) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityAuthSelfSignedOutput).ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(ctx)
}

// StorageClusterSpecSecurityAuthSelfSignedPtrInput is an input type that accepts StorageClusterSpecSecurityAuthSelfSignedArgs, StorageClusterSpecSecurityAuthSelfSignedPtr and StorageClusterSpecSecurityAuthSelfSignedPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecSecurityAuthSelfSignedPtrInput` via:
//
//          StorageClusterSpecSecurityAuthSelfSignedArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecSecurityAuthSelfSignedPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecSecurityAuthSelfSignedPtrOutput() StorageClusterSpecSecurityAuthSelfSignedPtrOutput
	ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(context.Context) StorageClusterSpecSecurityAuthSelfSignedPtrOutput
}

type storageClusterSpecSecurityAuthSelfSignedPtrType StorageClusterSpecSecurityAuthSelfSignedArgs

func StorageClusterSpecSecurityAuthSelfSignedPtr(v *StorageClusterSpecSecurityAuthSelfSignedArgs) StorageClusterSpecSecurityAuthSelfSignedPtrInput {
	return (*storageClusterSpecSecurityAuthSelfSignedPtrType)(v)
}

func (*storageClusterSpecSecurityAuthSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecSecurityAuthSelfSigned)(nil)).Elem()
}

func (i *storageClusterSpecSecurityAuthSelfSignedPtrType) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutput() StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return i.ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecSecurityAuthSelfSignedPtrType) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecSecurityAuthSelfSignedPtrOutput)
}

// Configuration for self signed authentication
type StorageClusterSpecSecurityAuthSelfSignedOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecSecurityAuthSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecSecurityAuthSelfSigned)(nil)).Elem()
}

func (o StorageClusterSpecSecurityAuthSelfSignedOutput) ToStorageClusterSpecSecurityAuthSelfSignedOutput() StorageClusterSpecSecurityAuthSelfSignedOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthSelfSignedOutput) ToStorageClusterSpecSecurityAuthSelfSignedOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthSelfSignedOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthSelfSignedOutput) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutput() StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return o.ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecSecurityAuthSelfSignedOutput) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuthSelfSigned) *StorageClusterSpecSecurityAuthSelfSigned {
		return &v
	}).(StorageClusterSpecSecurityAuthSelfSignedPtrOutput)
}

// Token issuer for the tokens used to connect with storage cluster.
func (o StorageClusterSpecSecurityAuthSelfSignedOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuthSelfSigned) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Shared secret is the name of the Kubernetes secret containing the shared key used for signing RBAC tokens. The secret has to be present in the StorageCluster namespace.
func (o StorageClusterSpecSecurityAuthSelfSignedOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuthSelfSigned) *string { return v.SharedSecret }).(pulumi.StringPtrOutput)
}

// Lifetime of auto-generated RBAC tokens to access the storage cluster.
func (o StorageClusterSpecSecurityAuthSelfSignedOutput) TokenLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecSecurityAuthSelfSigned) *string { return v.TokenLifetime }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecSecurityAuthSelfSignedPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecSecurityAuthSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecSecurityAuthSelfSigned)(nil)).Elem()
}

func (o StorageClusterSpecSecurityAuthSelfSignedPtrOutput) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutput() StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthSelfSignedPtrOutput) ToStorageClusterSpecSecurityAuthSelfSignedPtrOutputWithContext(ctx context.Context) StorageClusterSpecSecurityAuthSelfSignedPtrOutput {
	return o
}

func (o StorageClusterSpecSecurityAuthSelfSignedPtrOutput) Elem() StorageClusterSpecSecurityAuthSelfSignedOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuthSelfSigned) StorageClusterSpecSecurityAuthSelfSigned { return *v }).(StorageClusterSpecSecurityAuthSelfSignedOutput)
}

// Token issuer for the tokens used to connect with storage cluster.
func (o StorageClusterSpecSecurityAuthSelfSignedPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuthSelfSigned) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Shared secret is the name of the Kubernetes secret containing the shared key used for signing RBAC tokens. The secret has to be present in the StorageCluster namespace.
func (o StorageClusterSpecSecurityAuthSelfSignedPtrOutput) SharedSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuthSelfSigned) *string {
		if v == nil {
			return nil
		}
		return v.SharedSecret
	}).(pulumi.StringPtrOutput)
}

// Lifetime of auto-generated RBAC tokens to access the storage cluster.
func (o StorageClusterSpecSecurityAuthSelfSignedPtrOutput) TokenLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecSecurityAuthSelfSigned) *string {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.StringPtrOutput)
}

// Details of the storage used by the storage driver.
type StorageClusterSpecStorage struct {
	// List of devices to be used by the storage driver.
	Devices []string `pulumi:"devices"`
	// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
	ForceUseDisks *bool `pulumi:"forceUseDisks"`
	// Device used for journaling.
	JournalDevice *string `pulumi:"journalDevice"`
	// Device used for internal KVDB.
	KvdbDevice *string `pulumi:"kvdbDevice"`
	// Device that will be used to store system metadata by the driver.
	SystemMetadataDevice *string `pulumi:"systemMetadataDevice"`
	// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
	UseAll *bool `pulumi:"useAll"`
	// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
	UseAllWithPartitions *bool `pulumi:"useAllWithPartitions"`
}

// StorageClusterSpecStorageInput is an input type that accepts StorageClusterSpecStorageArgs and StorageClusterSpecStorageOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorageInput` via:
//
//          StorageClusterSpecStorageArgs{...}
type StorageClusterSpecStorageInput interface {
	pulumi.Input

	ToStorageClusterSpecStorageOutput() StorageClusterSpecStorageOutput
	ToStorageClusterSpecStorageOutputWithContext(context.Context) StorageClusterSpecStorageOutput
}

// Details of the storage used by the storage driver.
type StorageClusterSpecStorageArgs struct {
	// List of devices to be used by the storage driver.
	Devices pulumi.StringArrayInput `pulumi:"devices"`
	// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
	ForceUseDisks pulumi.BoolPtrInput `pulumi:"forceUseDisks"`
	// Device used for journaling.
	JournalDevice pulumi.StringPtrInput `pulumi:"journalDevice"`
	// Device used for internal KVDB.
	KvdbDevice pulumi.StringPtrInput `pulumi:"kvdbDevice"`
	// Device that will be used to store system metadata by the driver.
	SystemMetadataDevice pulumi.StringPtrInput `pulumi:"systemMetadataDevice"`
	// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
	UseAll pulumi.BoolPtrInput `pulumi:"useAll"`
	// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
	UseAllWithPartitions pulumi.BoolPtrInput `pulumi:"useAllWithPartitions"`
}

func (StorageClusterSpecStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorage)(nil)).Elem()
}

func (i StorageClusterSpecStorageArgs) ToStorageClusterSpecStorageOutput() StorageClusterSpecStorageOutput {
	return i.ToStorageClusterSpecStorageOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorageArgs) ToStorageClusterSpecStorageOutputWithContext(ctx context.Context) StorageClusterSpecStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorageOutput)
}

func (i StorageClusterSpecStorageArgs) ToStorageClusterSpecStoragePtrOutput() StorageClusterSpecStoragePtrOutput {
	return i.ToStorageClusterSpecStoragePtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorageArgs) ToStorageClusterSpecStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorageOutput).ToStorageClusterSpecStoragePtrOutputWithContext(ctx)
}

// StorageClusterSpecStoragePtrInput is an input type that accepts StorageClusterSpecStorageArgs, StorageClusterSpecStoragePtr and StorageClusterSpecStoragePtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStoragePtrInput` via:
//
//          StorageClusterSpecStorageArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStoragePtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStoragePtrOutput() StorageClusterSpecStoragePtrOutput
	ToStorageClusterSpecStoragePtrOutputWithContext(context.Context) StorageClusterSpecStoragePtrOutput
}

type storageClusterSpecStoragePtrType StorageClusterSpecStorageArgs

func StorageClusterSpecStoragePtr(v *StorageClusterSpecStorageArgs) StorageClusterSpecStoragePtrInput {
	return (*storageClusterSpecStoragePtrType)(v)
}

func (*storageClusterSpecStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorage)(nil)).Elem()
}

func (i *storageClusterSpecStoragePtrType) ToStorageClusterSpecStoragePtrOutput() StorageClusterSpecStoragePtrOutput {
	return i.ToStorageClusterSpecStoragePtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStoragePtrType) ToStorageClusterSpecStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStoragePtrOutput)
}

// Details of the storage used by the storage driver.
type StorageClusterSpecStorageOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorage)(nil)).Elem()
}

func (o StorageClusterSpecStorageOutput) ToStorageClusterSpecStorageOutput() StorageClusterSpecStorageOutput {
	return o
}

func (o StorageClusterSpecStorageOutput) ToStorageClusterSpecStorageOutputWithContext(ctx context.Context) StorageClusterSpecStorageOutput {
	return o
}

func (o StorageClusterSpecStorageOutput) ToStorageClusterSpecStoragePtrOutput() StorageClusterSpecStoragePtrOutput {
	return o.ToStorageClusterSpecStoragePtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorageOutput) ToStorageClusterSpecStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *StorageClusterSpecStorage {
		return &v
	}).(StorageClusterSpecStoragePtrOutput)
}

// List of devices to be used by the storage driver.
func (o StorageClusterSpecStorageOutput) Devices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) []string { return v.Devices }).(pulumi.StringArrayOutput)
}

// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
func (o StorageClusterSpecStorageOutput) ForceUseDisks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *bool { return v.ForceUseDisks }).(pulumi.BoolPtrOutput)
}

// Device used for journaling.
func (o StorageClusterSpecStorageOutput) JournalDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *string { return v.JournalDevice }).(pulumi.StringPtrOutput)
}

// Device used for internal KVDB.
func (o StorageClusterSpecStorageOutput) KvdbDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *string { return v.KvdbDevice }).(pulumi.StringPtrOutput)
}

// Device that will be used to store system metadata by the driver.
func (o StorageClusterSpecStorageOutput) SystemMetadataDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *string { return v.SystemMetadataDevice }).(pulumi.StringPtrOutput)
}

// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecStorageOutput) UseAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *bool { return v.UseAll }).(pulumi.BoolPtrOutput)
}

// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecStorageOutput) UseAllWithPartitions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorage) *bool { return v.UseAllWithPartitions }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecStoragePtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorage)(nil)).Elem()
}

func (o StorageClusterSpecStoragePtrOutput) ToStorageClusterSpecStoragePtrOutput() StorageClusterSpecStoragePtrOutput {
	return o
}

func (o StorageClusterSpecStoragePtrOutput) ToStorageClusterSpecStoragePtrOutputWithContext(ctx context.Context) StorageClusterSpecStoragePtrOutput {
	return o
}

func (o StorageClusterSpecStoragePtrOutput) Elem() StorageClusterSpecStorageOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) StorageClusterSpecStorage { return *v }).(StorageClusterSpecStorageOutput)
}

// List of devices to be used by the storage driver.
func (o StorageClusterSpecStoragePtrOutput) Devices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) []string {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(pulumi.StringArrayOutput)
}

// Flag indicating to use the devices even if there is file system present on it. Note that the devices may be wiped before using.
func (o StorageClusterSpecStoragePtrOutput) ForceUseDisks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) *bool {
		if v == nil {
			return nil
		}
		return v.ForceUseDisks
	}).(pulumi.BoolPtrOutput)
}

// Device used for journaling.
func (o StorageClusterSpecStoragePtrOutput) JournalDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) *string {
		if v == nil {
			return nil
		}
		return v.JournalDevice
	}).(pulumi.StringPtrOutput)
}

// Device used for internal KVDB.
func (o StorageClusterSpecStoragePtrOutput) KvdbDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) *string {
		if v == nil {
			return nil
		}
		return v.KvdbDevice
	}).(pulumi.StringPtrOutput)
}

// Device that will be used to store system metadata by the driver.
func (o StorageClusterSpecStoragePtrOutput) SystemMetadataDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) *string {
		if v == nil {
			return nil
		}
		return v.SystemMetadataDevice
	}).(pulumi.StringPtrOutput)
}

// Use all available, unformatted, unpartitioned devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecStoragePtrOutput) UseAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) *bool {
		if v == nil {
			return nil
		}
		return v.UseAll
	}).(pulumi.BoolPtrOutput)
}

// Use all available unformatted devices. This will be ignored if spec.storage.devices is not empty.
func (o StorageClusterSpecStoragePtrOutput) UseAllWithPartitions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorage) *bool {
		if v == nil {
			return nil
		}
		return v.UseAllWithPartitions
	}).(pulumi.BoolPtrOutput)
}

// Contains STORK related spec.
type StorageClusterSpecStork struct {
	// It is map of arguments given to STORK. Example: driver: pxd
	Args map[string]interface{} `pulumi:"args"`
	// Flag indicating whether STORK needs to be enabled.
	Enabled *bool `pulumi:"enabled"`
	// List of environment variables used by STORK. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env []StorageClusterSpecStorkEnv `pulumi:"env"`
	// Flag indicating if Stork pods should run in host network.
	HostNetwork *bool `pulumi:"hostNetwork"`
	// Docker image of the STORK container.
	Image *string `pulumi:"image"`
	// Flag indicating if the STORK image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
	LockImage *bool `pulumi:"lockImage"`
}

// StorageClusterSpecStorkInput is an input type that accepts StorageClusterSpecStorkArgs and StorageClusterSpecStorkOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkInput` via:
//
//          StorageClusterSpecStorkArgs{...}
type StorageClusterSpecStorkInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkOutput() StorageClusterSpecStorkOutput
	ToStorageClusterSpecStorkOutputWithContext(context.Context) StorageClusterSpecStorkOutput
}

// Contains STORK related spec.
type StorageClusterSpecStorkArgs struct {
	// It is map of arguments given to STORK. Example: driver: pxd
	Args pulumi.MapInput `pulumi:"args"`
	// Flag indicating whether STORK needs to be enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of environment variables used by STORK. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env StorageClusterSpecStorkEnvArrayInput `pulumi:"env"`
	// Flag indicating if Stork pods should run in host network.
	HostNetwork pulumi.BoolPtrInput `pulumi:"hostNetwork"`
	// Docker image of the STORK container.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Flag indicating if the STORK image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
	LockImage pulumi.BoolPtrInput `pulumi:"lockImage"`
}

func (StorageClusterSpecStorkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStork)(nil)).Elem()
}

func (i StorageClusterSpecStorkArgs) ToStorageClusterSpecStorkOutput() StorageClusterSpecStorkOutput {
	return i.ToStorageClusterSpecStorkOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkArgs) ToStorageClusterSpecStorkOutputWithContext(ctx context.Context) StorageClusterSpecStorkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkOutput)
}

func (i StorageClusterSpecStorkArgs) ToStorageClusterSpecStorkPtrOutput() StorageClusterSpecStorkPtrOutput {
	return i.ToStorageClusterSpecStorkPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkArgs) ToStorageClusterSpecStorkPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkOutput).ToStorageClusterSpecStorkPtrOutputWithContext(ctx)
}

// StorageClusterSpecStorkPtrInput is an input type that accepts StorageClusterSpecStorkArgs, StorageClusterSpecStorkPtr and StorageClusterSpecStorkPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkPtrInput` via:
//
//          StorageClusterSpecStorkArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStorkPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkPtrOutput() StorageClusterSpecStorkPtrOutput
	ToStorageClusterSpecStorkPtrOutputWithContext(context.Context) StorageClusterSpecStorkPtrOutput
}

type storageClusterSpecStorkPtrType StorageClusterSpecStorkArgs

func StorageClusterSpecStorkPtr(v *StorageClusterSpecStorkArgs) StorageClusterSpecStorkPtrInput {
	return (*storageClusterSpecStorkPtrType)(v)
}

func (*storageClusterSpecStorkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStork)(nil)).Elem()
}

func (i *storageClusterSpecStorkPtrType) ToStorageClusterSpecStorkPtrOutput() StorageClusterSpecStorkPtrOutput {
	return i.ToStorageClusterSpecStorkPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStorkPtrType) ToStorageClusterSpecStorkPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkPtrOutput)
}

// Contains STORK related spec.
type StorageClusterSpecStorkOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStork)(nil)).Elem()
}

func (o StorageClusterSpecStorkOutput) ToStorageClusterSpecStorkOutput() StorageClusterSpecStorkOutput {
	return o
}

func (o StorageClusterSpecStorkOutput) ToStorageClusterSpecStorkOutputWithContext(ctx context.Context) StorageClusterSpecStorkOutput {
	return o
}

func (o StorageClusterSpecStorkOutput) ToStorageClusterSpecStorkPtrOutput() StorageClusterSpecStorkPtrOutput {
	return o.ToStorageClusterSpecStorkPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorkOutput) ToStorageClusterSpecStorkPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) *StorageClusterSpecStork {
		return &v
	}).(StorageClusterSpecStorkPtrOutput)
}

// It is map of arguments given to STORK. Example: driver: pxd
func (o StorageClusterSpecStorkOutput) Args() pulumi.MapOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) map[string]interface{} { return v.Args }).(pulumi.MapOutput)
}

// Flag indicating whether STORK needs to be enabled.
func (o StorageClusterSpecStorkOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of environment variables used by STORK. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecStorkOutput) Env() StorageClusterSpecStorkEnvArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) []StorageClusterSpecStorkEnv { return v.Env }).(StorageClusterSpecStorkEnvArrayOutput)
}

// Flag indicating if Stork pods should run in host network.
func (o StorageClusterSpecStorkOutput) HostNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) *bool { return v.HostNetwork }).(pulumi.BoolPtrOutput)
}

// Docker image of the STORK container.
func (o StorageClusterSpecStorkOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Flag indicating if the STORK image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
func (o StorageClusterSpecStorkOutput) LockImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStork) *bool { return v.LockImage }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecStorkPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStork)(nil)).Elem()
}

func (o StorageClusterSpecStorkPtrOutput) ToStorageClusterSpecStorkPtrOutput() StorageClusterSpecStorkPtrOutput {
	return o
}

func (o StorageClusterSpecStorkPtrOutput) ToStorageClusterSpecStorkPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkPtrOutput {
	return o
}

func (o StorageClusterSpecStorkPtrOutput) Elem() StorageClusterSpecStorkOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) StorageClusterSpecStork { return *v }).(StorageClusterSpecStorkOutput)
}

// It is map of arguments given to STORK. Example: driver: pxd
func (o StorageClusterSpecStorkPtrOutput) Args() pulumi.MapOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.MapOutput)
}

// Flag indicating whether STORK needs to be enabled.
func (o StorageClusterSpecStorkPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List of environment variables used by STORK. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecStorkPtrOutput) Env() StorageClusterSpecStorkEnvArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) []StorageClusterSpecStorkEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(StorageClusterSpecStorkEnvArrayOutput)
}

// Flag indicating if Stork pods should run in host network.
func (o StorageClusterSpecStorkPtrOutput) HostNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) *bool {
		if v == nil {
			return nil
		}
		return v.HostNetwork
	}).(pulumi.BoolPtrOutput)
}

// Docker image of the STORK container.
func (o StorageClusterSpecStorkPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Flag indicating if the STORK image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
func (o StorageClusterSpecStorkPtrOutput) LockImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStork) *bool {
		if v == nil {
			return nil
		}
		return v.LockImage
	}).(pulumi.BoolPtrOutput)
}

// It is map of arguments given to STORK. Example: driver: pxd
type StorageClusterSpecStorkArgs struct {
}

// StorageClusterSpecStorkArgsInput is an input type that accepts StorageClusterSpecStorkArgsArgs and StorageClusterSpecStorkArgsOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkArgsInput` via:
//
//          StorageClusterSpecStorkArgsArgs{...}
type StorageClusterSpecStorkArgsInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkArgsOutput() StorageClusterSpecStorkArgsOutput
	ToStorageClusterSpecStorkArgsOutputWithContext(context.Context) StorageClusterSpecStorkArgsOutput
}

// It is map of arguments given to STORK. Example: driver: pxd
type StorageClusterSpecStorkArgsArgs struct {
}

func (StorageClusterSpecStorkArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkArgs)(nil)).Elem()
}

func (i StorageClusterSpecStorkArgsArgs) ToStorageClusterSpecStorkArgsOutput() StorageClusterSpecStorkArgsOutput {
	return i.ToStorageClusterSpecStorkArgsOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkArgsArgs) ToStorageClusterSpecStorkArgsOutputWithContext(ctx context.Context) StorageClusterSpecStorkArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkArgsOutput)
}

// It is map of arguments given to STORK. Example: driver: pxd
type StorageClusterSpecStorkArgsOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkArgs)(nil)).Elem()
}

func (o StorageClusterSpecStorkArgsOutput) ToStorageClusterSpecStorkArgsOutput() StorageClusterSpecStorkArgsOutput {
	return o
}

func (o StorageClusterSpecStorkArgsOutput) ToStorageClusterSpecStorkArgsOutputWithContext(ctx context.Context) StorageClusterSpecStorkArgsOutput {
	return o
}

type StorageClusterSpecStorkEnv struct {
	Name      *string                              `pulumi:"name"`
	Value     *string                              `pulumi:"value"`
	ValueFrom *StorageClusterSpecStorkEnvValueFrom `pulumi:"valueFrom"`
}

// StorageClusterSpecStorkEnvInput is an input type that accepts StorageClusterSpecStorkEnvArgs and StorageClusterSpecStorkEnvOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvInput` via:
//
//          StorageClusterSpecStorkEnvArgs{...}
type StorageClusterSpecStorkEnvInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvOutput() StorageClusterSpecStorkEnvOutput
	ToStorageClusterSpecStorkEnvOutputWithContext(context.Context) StorageClusterSpecStorkEnvOutput
}

type StorageClusterSpecStorkEnvArgs struct {
	Name      pulumi.StringPtrInput                       `pulumi:"name"`
	Value     pulumi.StringPtrInput                       `pulumi:"value"`
	ValueFrom StorageClusterSpecStorkEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (StorageClusterSpecStorkEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnv)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvArgs) ToStorageClusterSpecStorkEnvOutput() StorageClusterSpecStorkEnvOutput {
	return i.ToStorageClusterSpecStorkEnvOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvArgs) ToStorageClusterSpecStorkEnvOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvOutput)
}

// StorageClusterSpecStorkEnvArrayInput is an input type that accepts StorageClusterSpecStorkEnvArray and StorageClusterSpecStorkEnvArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvArrayInput` via:
//
//          StorageClusterSpecStorkEnvArray{ StorageClusterSpecStorkEnvArgs{...} }
type StorageClusterSpecStorkEnvArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvArrayOutput() StorageClusterSpecStorkEnvArrayOutput
	ToStorageClusterSpecStorkEnvArrayOutputWithContext(context.Context) StorageClusterSpecStorkEnvArrayOutput
}

type StorageClusterSpecStorkEnvArray []StorageClusterSpecStorkEnvInput

func (StorageClusterSpecStorkEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecStorkEnv)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvArray) ToStorageClusterSpecStorkEnvArrayOutput() StorageClusterSpecStorkEnvArrayOutput {
	return i.ToStorageClusterSpecStorkEnvArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvArray) ToStorageClusterSpecStorkEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvArrayOutput)
}

type StorageClusterSpecStorkEnvOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnv)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvOutput) ToStorageClusterSpecStorkEnvOutput() StorageClusterSpecStorkEnvOutput {
	return o
}

func (o StorageClusterSpecStorkEnvOutput) ToStorageClusterSpecStorkEnvOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvOutput {
	return o
}

func (o StorageClusterSpecStorkEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvOutput) ValueFrom() StorageClusterSpecStorkEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnv) *StorageClusterSpecStorkEnvValueFrom { return v.ValueFrom }).(StorageClusterSpecStorkEnvValueFromPtrOutput)
}

type StorageClusterSpecStorkEnvArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecStorkEnv)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvArrayOutput) ToStorageClusterSpecStorkEnvArrayOutput() StorageClusterSpecStorkEnvArrayOutput {
	return o
}

func (o StorageClusterSpecStorkEnvArrayOutput) ToStorageClusterSpecStorkEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvArrayOutput {
	return o
}

func (o StorageClusterSpecStorkEnvArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecStorkEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecStorkEnv {
		return vs[0].([]StorageClusterSpecStorkEnv)[vs[1].(int)]
	}).(StorageClusterSpecStorkEnvOutput)
}

type StorageClusterSpecStorkEnvValueFrom struct {
	ConfigMapKeyRef  *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef  `pulumi:"configMapKeyRef"`
	FieldRef         *StorageClusterSpecStorkEnvValueFromFieldRef         `pulumi:"fieldRef"`
	ResourceFieldRef *StorageClusterSpecStorkEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	SecretKeyRef     *StorageClusterSpecStorkEnvValueFromSecretKeyRef     `pulumi:"secretKeyRef"`
}

// StorageClusterSpecStorkEnvValueFromInput is an input type that accepts StorageClusterSpecStorkEnvValueFromArgs and StorageClusterSpecStorkEnvValueFromOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromInput` via:
//
//          StorageClusterSpecStorkEnvValueFromArgs{...}
type StorageClusterSpecStorkEnvValueFromInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromOutput() StorageClusterSpecStorkEnvValueFromOutput
	ToStorageClusterSpecStorkEnvValueFromOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromOutput
}

type StorageClusterSpecStorkEnvValueFromArgs struct {
	ConfigMapKeyRef  StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrInput  `pulumi:"configMapKeyRef"`
	FieldRef         StorageClusterSpecStorkEnvValueFromFieldRefPtrInput         `pulumi:"fieldRef"`
	ResourceFieldRef StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	SecretKeyRef     StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrInput     `pulumi:"secretKeyRef"`
}

func (StorageClusterSpecStorkEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFrom)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvValueFromArgs) ToStorageClusterSpecStorkEnvValueFromOutput() StorageClusterSpecStorkEnvValueFromOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromArgs) ToStorageClusterSpecStorkEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromOutput)
}

func (i StorageClusterSpecStorkEnvValueFromArgs) ToStorageClusterSpecStorkEnvValueFromPtrOutput() StorageClusterSpecStorkEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromArgs) ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromOutput).ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(ctx)
}

// StorageClusterSpecStorkEnvValueFromPtrInput is an input type that accepts StorageClusterSpecStorkEnvValueFromArgs, StorageClusterSpecStorkEnvValueFromPtr and StorageClusterSpecStorkEnvValueFromPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromPtrInput` via:
//
//          StorageClusterSpecStorkEnvValueFromArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStorkEnvValueFromPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromPtrOutput() StorageClusterSpecStorkEnvValueFromPtrOutput
	ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromPtrOutput
}

type storageClusterSpecStorkEnvValueFromPtrType StorageClusterSpecStorkEnvValueFromArgs

func StorageClusterSpecStorkEnvValueFromPtr(v *StorageClusterSpecStorkEnvValueFromArgs) StorageClusterSpecStorkEnvValueFromPtrInput {
	return (*storageClusterSpecStorkEnvValueFromPtrType)(v)
}

func (*storageClusterSpecStorkEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFrom)(nil)).Elem()
}

func (i *storageClusterSpecStorkEnvValueFromPtrType) ToStorageClusterSpecStorkEnvValueFromPtrOutput() StorageClusterSpecStorkEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStorkEnvValueFromPtrType) ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromOutput) ToStorageClusterSpecStorkEnvValueFromOutput() StorageClusterSpecStorkEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromOutput) ToStorageClusterSpecStorkEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromOutput) ToStorageClusterSpecStorkEnvValueFromPtrOutput() StorageClusterSpecStorkEnvValueFromPtrOutput {
	return o.ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorkEnvValueFromOutput) ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFrom {
		return &v
	}).(StorageClusterSpecStorkEnvValueFromPtrOutput)
}
func (o StorageClusterSpecStorkEnvValueFromOutput) ConfigMapKeyRef() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromOutput) FieldRef() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromFieldRef {
		return v.FieldRef
	}).(StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromOutput) ResourceFieldRef() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromOutput) SecretKeyRef() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) ToStorageClusterSpecStorkEnvValueFromPtrOutput() StorageClusterSpecStorkEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) ToStorageClusterSpecStorkEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) Elem() StorageClusterSpecStorkEnvValueFromOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFrom) StorageClusterSpecStorkEnvValueFrom { return *v }).(StorageClusterSpecStorkEnvValueFromOutput)
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) ConfigMapKeyRef() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) FieldRef() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) ResourceFieldRef() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromPtrOutput) SecretKeyRef() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFrom) *StorageClusterSpecStorkEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecStorkEnvValueFromConfigMapKeyRefInput is an input type that accepts StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs and StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromConfigMapKeyRefInput` via:
//
//          StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs{...}
type StorageClusterSpecStorkEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput
	ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput
}

type StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput)
}

func (i StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput).ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs, StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtr and StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput
	ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput
}

type storageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrType StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs

func StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtr(v *StorageClusterSpecStorkEnvValueFromConfigMapKeyRefArgs) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrInput {
	return (*storageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*storageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef {
		return &v
	}).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput)
}
func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) Elem() StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) StorageClusterSpecStorkEnvValueFromConfigMapKeyRef {
		return *v
	}).(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput)
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromFieldRef struct {
	ApiVersion *string `pulumi:"apiVersion"`
	FieldPath  *string `pulumi:"fieldPath"`
}

// StorageClusterSpecStorkEnvValueFromFieldRefInput is an input type that accepts StorageClusterSpecStorkEnvValueFromFieldRefArgs and StorageClusterSpecStorkEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromFieldRefInput` via:
//
//          StorageClusterSpecStorkEnvValueFromFieldRefArgs{...}
type StorageClusterSpecStorkEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromFieldRefOutput() StorageClusterSpecStorkEnvValueFromFieldRefOutput
	ToStorageClusterSpecStorkEnvValueFromFieldRefOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromFieldRefOutput
}

type StorageClusterSpecStorkEnvValueFromFieldRefArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	FieldPath  pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (StorageClusterSpecStorkEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvValueFromFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromFieldRefOutput() StorageClusterSpecStorkEnvValueFromFieldRefOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromFieldRefOutput)
}

func (i StorageClusterSpecStorkEnvValueFromFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromFieldRefOutput).ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecStorkEnvValueFromFieldRefPtrInput is an input type that accepts StorageClusterSpecStorkEnvValueFromFieldRefArgs, StorageClusterSpecStorkEnvValueFromFieldRefPtr and StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromFieldRefPtrInput` via:
//
//          StorageClusterSpecStorkEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStorkEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput
	ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput
}

type storageClusterSpecStorkEnvValueFromFieldRefPtrType StorageClusterSpecStorkEnvValueFromFieldRefArgs

func StorageClusterSpecStorkEnvValueFromFieldRefPtr(v *StorageClusterSpecStorkEnvValueFromFieldRefArgs) StorageClusterSpecStorkEnvValueFromFieldRefPtrInput {
	return (*storageClusterSpecStorkEnvValueFromFieldRefPtrType)(v)
}

func (*storageClusterSpecStorkEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecStorkEnvValueFromFieldRefPtrType) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStorkEnvValueFromFieldRefPtrType) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromFieldRefOutput() StorageClusterSpecStorkEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return o.ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromFieldRef) *StorageClusterSpecStorkEnvValueFromFieldRef {
		return &v
	}).(StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput)
}
func (o StorageClusterSpecStorkEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromFieldRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput) Elem() StorageClusterSpecStorkEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromFieldRef) StorageClusterSpecStorkEnvValueFromFieldRef {
		return *v
	}).(StorageClusterSpecStorkEnvValueFromFieldRefOutput)
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromResourceFieldRef struct {
	ContainerName *string `pulumi:"containerName"`
	Divisor       *string `pulumi:"divisor"`
	Resource      *string `pulumi:"resource"`
}

// StorageClusterSpecStorkEnvValueFromResourceFieldRefInput is an input type that accepts StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs and StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromResourceFieldRefInput` via:
//
//          StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs{...}
type StorageClusterSpecStorkEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput
	ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput
}

type StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	Divisor       pulumi.StringPtrInput `pulumi:"divisor"`
	Resource      pulumi.StringPtrInput `pulumi:"resource"`
}

func (StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput)
}

func (i StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput).ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrInput is an input type that accepts StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs, StorageClusterSpecStorkEnvValueFromResourceFieldRefPtr and StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrInput` via:
//
//          StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput
	ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput
}

type storageClusterSpecStorkEnvValueFromResourceFieldRefPtrType StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs

func StorageClusterSpecStorkEnvValueFromResourceFieldRefPtr(v *StorageClusterSpecStorkEnvValueFromResourceFieldRefArgs) StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrInput {
	return (*storageClusterSpecStorkEnvValueFromResourceFieldRefPtrType)(v)
}

func (*storageClusterSpecStorkEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecStorkEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStorkEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return o.ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromResourceFieldRef) *StorageClusterSpecStorkEnvValueFromResourceFieldRef {
		return &v
	}).(StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput)
}
func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromResourceFieldRef) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) Elem() StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromResourceFieldRef) StorageClusterSpecStorkEnvValueFromResourceFieldRef {
		return *v
	}).(StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput)
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecStorkEnvValueFromSecretKeyRefInput is an input type that accepts StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs and StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromSecretKeyRefInput` via:
//
//          StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs{...}
type StorageClusterSpecStorkEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput
	ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput
}

type StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput)
}

func (i StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput).ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrInput is an input type that accepts StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs, StorageClusterSpecStorkEnvValueFromSecretKeyRefPtr and StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrInput` via:
//
//          StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput
	ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput
}

type storageClusterSpecStorkEnvValueFromSecretKeyRefPtrType StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs

func StorageClusterSpecStorkEnvValueFromSecretKeyRefPtr(v *StorageClusterSpecStorkEnvValueFromSecretKeyRefArgs) StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrInput {
	return (*storageClusterSpecStorkEnvValueFromSecretKeyRefPtrType)(v)
}

func (*storageClusterSpecStorkEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecStorkEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecStorkEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecStorkEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return o.ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromSecretKeyRef) *StorageClusterSpecStorkEnvValueFromSecretKeyRef {
		return &v
	}).(StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput)
}
func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecStorkEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecStorkEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) Elem() StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromSecretKeyRef) StorageClusterSpecStorkEnvValueFromSecretKeyRef {
		return *v
	}).(StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput)
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecStorkEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// An update strategy to replace existing StorageCluster pods with new pods.
type StorageClusterSpecUpdateStrategy struct {
	// Spec to control the desired behavior of storage cluster rolling update.
	RollingUpdate *StorageClusterSpecUpdateStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of storage cluster update. Can be RollingUpdate or OnDelete. Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// StorageClusterSpecUpdateStrategyInput is an input type that accepts StorageClusterSpecUpdateStrategyArgs and StorageClusterSpecUpdateStrategyOutput values.
// You can construct a concrete instance of `StorageClusterSpecUpdateStrategyInput` via:
//
//          StorageClusterSpecUpdateStrategyArgs{...}
type StorageClusterSpecUpdateStrategyInput interface {
	pulumi.Input

	ToStorageClusterSpecUpdateStrategyOutput() StorageClusterSpecUpdateStrategyOutput
	ToStorageClusterSpecUpdateStrategyOutputWithContext(context.Context) StorageClusterSpecUpdateStrategyOutput
}

// An update strategy to replace existing StorageCluster pods with new pods.
type StorageClusterSpecUpdateStrategyArgs struct {
	// Spec to control the desired behavior of storage cluster rolling update.
	RollingUpdate StorageClusterSpecUpdateStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of storage cluster update. Can be RollingUpdate or OnDelete. Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageClusterSpecUpdateStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUpdateStrategy)(nil)).Elem()
}

func (i StorageClusterSpecUpdateStrategyArgs) ToStorageClusterSpecUpdateStrategyOutput() StorageClusterSpecUpdateStrategyOutput {
	return i.ToStorageClusterSpecUpdateStrategyOutputWithContext(context.Background())
}

func (i StorageClusterSpecUpdateStrategyArgs) ToStorageClusterSpecUpdateStrategyOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUpdateStrategyOutput)
}

func (i StorageClusterSpecUpdateStrategyArgs) ToStorageClusterSpecUpdateStrategyPtrOutput() StorageClusterSpecUpdateStrategyPtrOutput {
	return i.ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUpdateStrategyArgs) ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUpdateStrategyOutput).ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(ctx)
}

// StorageClusterSpecUpdateStrategyPtrInput is an input type that accepts StorageClusterSpecUpdateStrategyArgs, StorageClusterSpecUpdateStrategyPtr and StorageClusterSpecUpdateStrategyPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUpdateStrategyPtrInput` via:
//
//          StorageClusterSpecUpdateStrategyArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUpdateStrategyPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUpdateStrategyPtrOutput() StorageClusterSpecUpdateStrategyPtrOutput
	ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(context.Context) StorageClusterSpecUpdateStrategyPtrOutput
}

type storageClusterSpecUpdateStrategyPtrType StorageClusterSpecUpdateStrategyArgs

func StorageClusterSpecUpdateStrategyPtr(v *StorageClusterSpecUpdateStrategyArgs) StorageClusterSpecUpdateStrategyPtrInput {
	return (*storageClusterSpecUpdateStrategyPtrType)(v)
}

func (*storageClusterSpecUpdateStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUpdateStrategy)(nil)).Elem()
}

func (i *storageClusterSpecUpdateStrategyPtrType) ToStorageClusterSpecUpdateStrategyPtrOutput() StorageClusterSpecUpdateStrategyPtrOutput {
	return i.ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUpdateStrategyPtrType) ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUpdateStrategyPtrOutput)
}

// An update strategy to replace existing StorageCluster pods with new pods.
type StorageClusterSpecUpdateStrategyOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUpdateStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUpdateStrategy)(nil)).Elem()
}

func (o StorageClusterSpecUpdateStrategyOutput) ToStorageClusterSpecUpdateStrategyOutput() StorageClusterSpecUpdateStrategyOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyOutput) ToStorageClusterSpecUpdateStrategyOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyOutput) ToStorageClusterSpecUpdateStrategyPtrOutput() StorageClusterSpecUpdateStrategyPtrOutput {
	return o.ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUpdateStrategyOutput) ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUpdateStrategy) *StorageClusterSpecUpdateStrategy {
		return &v
	}).(StorageClusterSpecUpdateStrategyPtrOutput)
}

// Spec to control the desired behavior of storage cluster rolling update.
func (o StorageClusterSpecUpdateStrategyOutput) RollingUpdate() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUpdateStrategy) *StorageClusterSpecUpdateStrategyRollingUpdate {
		return v.RollingUpdate
	}).(StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput)
}

// Type of storage cluster update. Can be RollingUpdate or OnDelete. Default is RollingUpdate.
func (o StorageClusterSpecUpdateStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUpdateStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecUpdateStrategyPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUpdateStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUpdateStrategy)(nil)).Elem()
}

func (o StorageClusterSpecUpdateStrategyPtrOutput) ToStorageClusterSpecUpdateStrategyPtrOutput() StorageClusterSpecUpdateStrategyPtrOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyPtrOutput) ToStorageClusterSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyPtrOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyPtrOutput) Elem() StorageClusterSpecUpdateStrategyOutput {
	return o.ApplyT(func(v *StorageClusterSpecUpdateStrategy) StorageClusterSpecUpdateStrategy { return *v }).(StorageClusterSpecUpdateStrategyOutput)
}

// Spec to control the desired behavior of storage cluster rolling update.
func (o StorageClusterSpecUpdateStrategyPtrOutput) RollingUpdate() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUpdateStrategy) *StorageClusterSpecUpdateStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput)
}

// Type of storage cluster update. Can be RollingUpdate or OnDelete. Default is RollingUpdate.
func (o StorageClusterSpecUpdateStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUpdateStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Spec to control the desired behavior of storage cluster rolling update.
type StorageClusterSpecUpdateStrategyRollingUpdate struct {
	// The maximum number of StorageCluster pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of StorageCluster pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the storage pod can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those StorageCluster pods and then brings up new StorageCluster pods in their place. Once the new pods are available, it then proceeds onto other StorageCluster pods, thus ensuring that at least 70% of original number of StorageCluster pods are available at all times during the update.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// StorageClusterSpecUpdateStrategyRollingUpdateInput is an input type that accepts StorageClusterSpecUpdateStrategyRollingUpdateArgs and StorageClusterSpecUpdateStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `StorageClusterSpecUpdateStrategyRollingUpdateInput` via:
//
//          StorageClusterSpecUpdateStrategyRollingUpdateArgs{...}
type StorageClusterSpecUpdateStrategyRollingUpdateInput interface {
	pulumi.Input

	ToStorageClusterSpecUpdateStrategyRollingUpdateOutput() StorageClusterSpecUpdateStrategyRollingUpdateOutput
	ToStorageClusterSpecUpdateStrategyRollingUpdateOutputWithContext(context.Context) StorageClusterSpecUpdateStrategyRollingUpdateOutput
}

// Spec to control the desired behavior of storage cluster rolling update.
type StorageClusterSpecUpdateStrategyRollingUpdateArgs struct {
	// The maximum number of StorageCluster pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of StorageCluster pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the storage pod can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those StorageCluster pods and then brings up new StorageCluster pods in their place. Once the new pods are available, it then proceeds onto other StorageCluster pods, thus ensuring that at least 70% of original number of StorageCluster pods are available at all times during the update.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (StorageClusterSpecUpdateStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (i StorageClusterSpecUpdateStrategyRollingUpdateArgs) ToStorageClusterSpecUpdateStrategyRollingUpdateOutput() StorageClusterSpecUpdateStrategyRollingUpdateOutput {
	return i.ToStorageClusterSpecUpdateStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i StorageClusterSpecUpdateStrategyRollingUpdateArgs) ToStorageClusterSpecUpdateStrategyRollingUpdateOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUpdateStrategyRollingUpdateOutput)
}

func (i StorageClusterSpecUpdateStrategyRollingUpdateArgs) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutput() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return i.ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUpdateStrategyRollingUpdateArgs) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUpdateStrategyRollingUpdateOutput).ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// StorageClusterSpecUpdateStrategyRollingUpdatePtrInput is an input type that accepts StorageClusterSpecUpdateStrategyRollingUpdateArgs, StorageClusterSpecUpdateStrategyRollingUpdatePtr and StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUpdateStrategyRollingUpdatePtrInput` via:
//
//          StorageClusterSpecUpdateStrategyRollingUpdateArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUpdateStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutput() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput
	ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(context.Context) StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput
}

type storageClusterSpecUpdateStrategyRollingUpdatePtrType StorageClusterSpecUpdateStrategyRollingUpdateArgs

func StorageClusterSpecUpdateStrategyRollingUpdatePtr(v *StorageClusterSpecUpdateStrategyRollingUpdateArgs) StorageClusterSpecUpdateStrategyRollingUpdatePtrInput {
	return (*storageClusterSpecUpdateStrategyRollingUpdatePtrType)(v)
}

func (*storageClusterSpecUpdateStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (i *storageClusterSpecUpdateStrategyRollingUpdatePtrType) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutput() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return i.ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUpdateStrategyRollingUpdatePtrType) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput)
}

// Spec to control the desired behavior of storage cluster rolling update.
type StorageClusterSpecUpdateStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUpdateStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (o StorageClusterSpecUpdateStrategyRollingUpdateOutput) ToStorageClusterSpecUpdateStrategyRollingUpdateOutput() StorageClusterSpecUpdateStrategyRollingUpdateOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyRollingUpdateOutput) ToStorageClusterSpecUpdateStrategyRollingUpdateOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyRollingUpdateOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyRollingUpdateOutput) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutput() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return o.ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUpdateStrategyRollingUpdateOutput) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUpdateStrategyRollingUpdate) *StorageClusterSpecUpdateStrategyRollingUpdate {
		return &v
	}).(StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput)
}

// The maximum number of StorageCluster pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of StorageCluster pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the storage pod can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those StorageCluster pods and then brings up new StorageCluster pods in their place. Once the new pods are available, it then proceeds onto other StorageCluster pods, thus ensuring that at least 70% of original number of StorageCluster pods are available at all times during the update.
func (o StorageClusterSpecUpdateStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v StorageClusterSpecUpdateStrategyRollingUpdate) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (o StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutput() StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput) ToStorageClusterSpecUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput {
	return o
}

func (o StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput) Elem() StorageClusterSpecUpdateStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *StorageClusterSpecUpdateStrategyRollingUpdate) StorageClusterSpecUpdateStrategyRollingUpdate {
		return *v
	}).(StorageClusterSpecUpdateStrategyRollingUpdateOutput)
}

// The maximum number of StorageCluster pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of StorageCluster pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the storage pod can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those StorageCluster pods and then brings up new StorageCluster pods in their place. Once the new pods are available, it then proceeds onto other StorageCluster pods, thus ensuring that at least 70% of original number of StorageCluster pods are available at all times during the update.
func (o StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *StorageClusterSpecUpdateStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Contains spec of a user interface for the storage driver.
type StorageClusterSpecUserInterface struct {
	// Flag indicating whether the user interface needs to be enabled.
	Enabled *bool `pulumi:"enabled"`
	// List of environment variables used by the UI components. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env []StorageClusterSpecUserInterfaceEnv `pulumi:"env"`
	// Docker image of the user interface container.
	Image *string `pulumi:"image"`
	// Flag indicating if the user interface image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
	LockImage *bool `pulumi:"lockImage"`
}

// StorageClusterSpecUserInterfaceInput is an input type that accepts StorageClusterSpecUserInterfaceArgs and StorageClusterSpecUserInterfaceOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceInput` via:
//
//          StorageClusterSpecUserInterfaceArgs{...}
type StorageClusterSpecUserInterfaceInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceOutput() StorageClusterSpecUserInterfaceOutput
	ToStorageClusterSpecUserInterfaceOutputWithContext(context.Context) StorageClusterSpecUserInterfaceOutput
}

// Contains spec of a user interface for the storage driver.
type StorageClusterSpecUserInterfaceArgs struct {
	// Flag indicating whether the user interface needs to be enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// List of environment variables used by the UI components. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
	Env StorageClusterSpecUserInterfaceEnvArrayInput `pulumi:"env"`
	// Docker image of the user interface container.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Flag indicating if the user interface image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
	LockImage pulumi.BoolPtrInput `pulumi:"lockImage"`
}

func (StorageClusterSpecUserInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterface)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceArgs) ToStorageClusterSpecUserInterfaceOutput() StorageClusterSpecUserInterfaceOutput {
	return i.ToStorageClusterSpecUserInterfaceOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceArgs) ToStorageClusterSpecUserInterfaceOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceOutput)
}

func (i StorageClusterSpecUserInterfaceArgs) ToStorageClusterSpecUserInterfacePtrOutput() StorageClusterSpecUserInterfacePtrOutput {
	return i.ToStorageClusterSpecUserInterfacePtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceArgs) ToStorageClusterSpecUserInterfacePtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceOutput).ToStorageClusterSpecUserInterfacePtrOutputWithContext(ctx)
}

// StorageClusterSpecUserInterfacePtrInput is an input type that accepts StorageClusterSpecUserInterfaceArgs, StorageClusterSpecUserInterfacePtr and StorageClusterSpecUserInterfacePtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfacePtrInput` via:
//
//          StorageClusterSpecUserInterfaceArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUserInterfacePtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfacePtrOutput() StorageClusterSpecUserInterfacePtrOutput
	ToStorageClusterSpecUserInterfacePtrOutputWithContext(context.Context) StorageClusterSpecUserInterfacePtrOutput
}

type storageClusterSpecUserInterfacePtrType StorageClusterSpecUserInterfaceArgs

func StorageClusterSpecUserInterfacePtr(v *StorageClusterSpecUserInterfaceArgs) StorageClusterSpecUserInterfacePtrInput {
	return (*storageClusterSpecUserInterfacePtrType)(v)
}

func (*storageClusterSpecUserInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterface)(nil)).Elem()
}

func (i *storageClusterSpecUserInterfacePtrType) ToStorageClusterSpecUserInterfacePtrOutput() StorageClusterSpecUserInterfacePtrOutput {
	return i.ToStorageClusterSpecUserInterfacePtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUserInterfacePtrType) ToStorageClusterSpecUserInterfacePtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfacePtrOutput)
}

// Contains spec of a user interface for the storage driver.
type StorageClusterSpecUserInterfaceOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterface)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceOutput) ToStorageClusterSpecUserInterfaceOutput() StorageClusterSpecUserInterfaceOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceOutput) ToStorageClusterSpecUserInterfaceOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceOutput) ToStorageClusterSpecUserInterfacePtrOutput() StorageClusterSpecUserInterfacePtrOutput {
	return o.ToStorageClusterSpecUserInterfacePtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUserInterfaceOutput) ToStorageClusterSpecUserInterfacePtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfacePtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterface) *StorageClusterSpecUserInterface {
		return &v
	}).(StorageClusterSpecUserInterfacePtrOutput)
}

// Flag indicating whether the user interface needs to be enabled.
func (o StorageClusterSpecUserInterfaceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterface) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// List of environment variables used by the UI components. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecUserInterfaceOutput) Env() StorageClusterSpecUserInterfaceEnvArrayOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterface) []StorageClusterSpecUserInterfaceEnv { return v.Env }).(StorageClusterSpecUserInterfaceEnvArrayOutput)
}

// Docker image of the user interface container.
func (o StorageClusterSpecUserInterfaceOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterface) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Flag indicating if the user interface image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
func (o StorageClusterSpecUserInterfaceOutput) LockImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterface) *bool { return v.LockImage }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecUserInterfacePtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterface)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfacePtrOutput) ToStorageClusterSpecUserInterfacePtrOutput() StorageClusterSpecUserInterfacePtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfacePtrOutput) ToStorageClusterSpecUserInterfacePtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfacePtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfacePtrOutput) Elem() StorageClusterSpecUserInterfaceOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterface) StorageClusterSpecUserInterface { return *v }).(StorageClusterSpecUserInterfaceOutput)
}

// Flag indicating whether the user interface needs to be enabled.
func (o StorageClusterSpecUserInterfacePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterface) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// List of environment variables used by the UI components. This is an array of Kubernetes EnvVar where the value can be given directly or from a source like field, config map or secret.
func (o StorageClusterSpecUserInterfacePtrOutput) Env() StorageClusterSpecUserInterfaceEnvArrayOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterface) []StorageClusterSpecUserInterfaceEnv {
		if v == nil {
			return nil
		}
		return v.Env
	}).(StorageClusterSpecUserInterfaceEnvArrayOutput)
}

// Docker image of the user interface container.
func (o StorageClusterSpecUserInterfacePtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterface) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Flag indicating if the user interface image needs to be locked to the given image. If the image is not locked, it can be updated by the storage driver during upgrades.
func (o StorageClusterSpecUserInterfacePtrOutput) LockImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterface) *bool {
		if v == nil {
			return nil
		}
		return v.LockImage
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecUserInterfaceEnv struct {
	Name      *string                                      `pulumi:"name"`
	Value     *string                                      `pulumi:"value"`
	ValueFrom *StorageClusterSpecUserInterfaceEnvValueFrom `pulumi:"valueFrom"`
}

// StorageClusterSpecUserInterfaceEnvInput is an input type that accepts StorageClusterSpecUserInterfaceEnvArgs and StorageClusterSpecUserInterfaceEnvOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvInput` via:
//
//          StorageClusterSpecUserInterfaceEnvArgs{...}
type StorageClusterSpecUserInterfaceEnvInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvOutput() StorageClusterSpecUserInterfaceEnvOutput
	ToStorageClusterSpecUserInterfaceEnvOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvOutput
}

type StorageClusterSpecUserInterfaceEnvArgs struct {
	Name      pulumi.StringPtrInput                               `pulumi:"name"`
	Value     pulumi.StringPtrInput                               `pulumi:"value"`
	ValueFrom StorageClusterSpecUserInterfaceEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (StorageClusterSpecUserInterfaceEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnv)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvArgs) ToStorageClusterSpecUserInterfaceEnvOutput() StorageClusterSpecUserInterfaceEnvOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvArgs) ToStorageClusterSpecUserInterfaceEnvOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvOutput)
}

// StorageClusterSpecUserInterfaceEnvArrayInput is an input type that accepts StorageClusterSpecUserInterfaceEnvArray and StorageClusterSpecUserInterfaceEnvArrayOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvArrayInput` via:
//
//          StorageClusterSpecUserInterfaceEnvArray{ StorageClusterSpecUserInterfaceEnvArgs{...} }
type StorageClusterSpecUserInterfaceEnvArrayInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvArrayOutput() StorageClusterSpecUserInterfaceEnvArrayOutput
	ToStorageClusterSpecUserInterfaceEnvArrayOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvArrayOutput
}

type StorageClusterSpecUserInterfaceEnvArray []StorageClusterSpecUserInterfaceEnvInput

func (StorageClusterSpecUserInterfaceEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecUserInterfaceEnv)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvArray) ToStorageClusterSpecUserInterfaceEnvArrayOutput() StorageClusterSpecUserInterfaceEnvArrayOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvArrayOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvArray) ToStorageClusterSpecUserInterfaceEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvArrayOutput)
}

type StorageClusterSpecUserInterfaceEnvOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnv)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvOutput) ToStorageClusterSpecUserInterfaceEnvOutput() StorageClusterSpecUserInterfaceEnvOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvOutput) ToStorageClusterSpecUserInterfaceEnvOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvOutput) ValueFrom() StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnv) *StorageClusterSpecUserInterfaceEnvValueFrom {
		return v.ValueFrom
	}).(StorageClusterSpecUserInterfaceEnvValueFromPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterSpecUserInterfaceEnv)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvArrayOutput) ToStorageClusterSpecUserInterfaceEnvArrayOutput() StorageClusterSpecUserInterfaceEnvArrayOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvArrayOutput) ToStorageClusterSpecUserInterfaceEnvArrayOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvArrayOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvArrayOutput) Index(i pulumi.IntInput) StorageClusterSpecUserInterfaceEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterSpecUserInterfaceEnv {
		return vs[0].([]StorageClusterSpecUserInterfaceEnv)[vs[1].(int)]
	}).(StorageClusterSpecUserInterfaceEnvOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFrom struct {
	ConfigMapKeyRef  *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef  `pulumi:"configMapKeyRef"`
	FieldRef         *StorageClusterSpecUserInterfaceEnvValueFromFieldRef         `pulumi:"fieldRef"`
	ResourceFieldRef *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	SecretKeyRef     *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef     `pulumi:"secretKeyRef"`
}

// StorageClusterSpecUserInterfaceEnvValueFromInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromArgs and StorageClusterSpecUserInterfaceEnvValueFromOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromArgs{...}
type StorageClusterSpecUserInterfaceEnvValueFromInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromOutput() StorageClusterSpecUserInterfaceEnvValueFromOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromOutput
}

type StorageClusterSpecUserInterfaceEnvValueFromArgs struct {
	ConfigMapKeyRef  StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrInput  `pulumi:"configMapKeyRef"`
	FieldRef         StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrInput         `pulumi:"fieldRef"`
	ResourceFieldRef StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	SecretKeyRef     StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrInput     `pulumi:"secretKeyRef"`
}

func (StorageClusterSpecUserInterfaceEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFrom)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvValueFromArgs) ToStorageClusterSpecUserInterfaceEnvValueFromOutput() StorageClusterSpecUserInterfaceEnvValueFromOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromArgs) ToStorageClusterSpecUserInterfaceEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromOutput)
}

func (i StorageClusterSpecUserInterfaceEnvValueFromArgs) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromArgs) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromOutput).ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(ctx)
}

// StorageClusterSpecUserInterfaceEnvValueFromPtrInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromArgs, StorageClusterSpecUserInterfaceEnvValueFromPtr and StorageClusterSpecUserInterfaceEnvValueFromPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromPtrInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUserInterfaceEnvValueFromPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromPtrOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromPtrOutput
}

type storageClusterSpecUserInterfaceEnvValueFromPtrType StorageClusterSpecUserInterfaceEnvValueFromArgs

func StorageClusterSpecUserInterfaceEnvValueFromPtr(v *StorageClusterSpecUserInterfaceEnvValueFromArgs) StorageClusterSpecUserInterfaceEnvValueFromPtrInput {
	return (*storageClusterSpecUserInterfaceEnvValueFromPtrType)(v)
}

func (*storageClusterSpecUserInterfaceEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFrom)(nil)).Elem()
}

func (i *storageClusterSpecUserInterfaceEnvValueFromPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUserInterfaceEnvValueFromPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) ToStorageClusterSpecUserInterfaceEnvValueFromOutput() StorageClusterSpecUserInterfaceEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) ToStorageClusterSpecUserInterfaceEnvValueFromOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return o.ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFrom {
		return &v
	}).(StorageClusterSpecUserInterfaceEnvValueFromPtrOutput)
}
func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) ConfigMapKeyRef() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) FieldRef() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromFieldRef {
		return v.FieldRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) ResourceFieldRef() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromOutput) SecretKeyRef() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFrom)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) Elem() StorageClusterSpecUserInterfaceEnvValueFromOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFrom) StorageClusterSpecUserInterfaceEnvValueFrom {
		return *v
	}).(StorageClusterSpecUserInterfaceEnvValueFromOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) ConfigMapKeyRef() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) FieldRef() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) ResourceFieldRef() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromPtrOutput) SecretKeyRef() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFrom) *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs and StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs{...}
type StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput
}

type StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput)
}

func (i StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput).ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs, StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtr and StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput
}

type storageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrType StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs

func StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtr(v *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefArgs) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrInput {
	return (*storageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*storageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef {
		return &v
	}).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput)
}
func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) Elem() StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef {
		return *v
	}).(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromFieldRef struct {
	ApiVersion *string `pulumi:"apiVersion"`
	FieldPath  *string `pulumi:"fieldPath"`
}

// StorageClusterSpecUserInterfaceEnvValueFromFieldRefInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs and StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromFieldRefInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs{...}
type StorageClusterSpecUserInterfaceEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput
}

type StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs struct {
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	FieldPath  pulumi.StringPtrInput `pulumi:"fieldPath"`
}

func (StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput)
}

func (i StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput).ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs, StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtr and StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput
}

type storageClusterSpecUserInterfaceEnvValueFromFieldRefPtrType StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs

func StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtr(v *StorageClusterSpecUserInterfaceEnvValueFromFieldRefArgs) StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrInput {
	return (*storageClusterSpecUserInterfaceEnvValueFromFieldRefPtrType)(v)
}

func (*storageClusterSpecUserInterfaceEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecUserInterfaceEnvValueFromFieldRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUserInterfaceEnvValueFromFieldRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return o.ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromFieldRef) *StorageClusterSpecUserInterfaceEnvValueFromFieldRef {
		return &v
	}).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput)
}
func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromFieldRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput) Elem() StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromFieldRef) StorageClusterSpecUserInterfaceEnvValueFromFieldRef {
		return *v
	}).(StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef struct {
	ContainerName *string `pulumi:"containerName"`
	Divisor       *string `pulumi:"divisor"`
	Resource      *string `pulumi:"resource"`
}

// StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs and StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs{...}
type StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput
}

type StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	Divisor       pulumi.StringPtrInput `pulumi:"divisor"`
	Resource      pulumi.StringPtrInput `pulumi:"resource"`
}

func (StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput)
}

func (i StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput).ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs, StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtr and StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput
}

type storageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrType StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs

func StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtr(v *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefArgs) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrInput {
	return (*storageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrType)(v)
}

func (*storageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *storageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return o.ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef {
		return &v
	}).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput)
}
func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) Elem() StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef {
		return *v
	}).(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef struct {
	Key      *string `pulumi:"key"`
	Name     *string `pulumi:"name"`
	Optional *bool   `pulumi:"optional"`
}

// StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs and StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs{...}
type StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput
}

type StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs struct {
	Key      pulumi.StringPtrInput `pulumi:"key"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Optional pulumi.BoolPtrInput   `pulumi:"optional"`
}

func (StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput)
}

func (i StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput).ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrInput is an input type that accepts StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs, StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtr and StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrInput` via:
//
//          StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput
	ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput
}

type storageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrType StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs

func StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtr(v *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefArgs) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrInput {
	return (*storageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrType)(v)
}

func (*storageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *storageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return i.ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *storageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrType) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return o.ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef {
		return &v
	}).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput)
}
func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) ToStorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) Elem() StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef {
		return *v
	}).(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Most recently observed status of the storage cluster. This data may not be up to date.
type StorageClusterStatus struct {
	// Name of the storage cluster.
	ClusterName *string `pulumi:"clusterName"`
	// Unique ID of the storage cluster.
	ClusterUid *string `pulumi:"clusterUid"`
	// Count of hash collisions for the StorageCluster. The StorageCluster controller uses this field as a collision avoidance mechanism when it needs to create the name of the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Contains details for the current condition of this cluster.
	Conditions []StorageClusterStatusConditions `pulumi:"conditions"`
	// Phase of the StorageCluster is a simple, high-level summary of where the StorageCluster is in its lifecycle. The condition array contains more detailed information about the state of the cluster.
	Phase *string `pulumi:"phase"`
	// Contains details of storage in the cluster.
	Storage *StorageClusterStatusStorage `pulumi:"storage"`
}

// StorageClusterStatusInput is an input type that accepts StorageClusterStatusArgs and StorageClusterStatusOutput values.
// You can construct a concrete instance of `StorageClusterStatusInput` via:
//
//          StorageClusterStatusArgs{...}
type StorageClusterStatusInput interface {
	pulumi.Input

	ToStorageClusterStatusOutput() StorageClusterStatusOutput
	ToStorageClusterStatusOutputWithContext(context.Context) StorageClusterStatusOutput
}

// Most recently observed status of the storage cluster. This data may not be up to date.
type StorageClusterStatusArgs struct {
	// Name of the storage cluster.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// Unique ID of the storage cluster.
	ClusterUid pulumi.StringPtrInput `pulumi:"clusterUid"`
	// Count of hash collisions for the StorageCluster. The StorageCluster controller uses this field as a collision avoidance mechanism when it needs to create the name of the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Contains details for the current condition of this cluster.
	Conditions StorageClusterStatusConditionsArrayInput `pulumi:"conditions"`
	// Phase of the StorageCluster is a simple, high-level summary of where the StorageCluster is in its lifecycle. The condition array contains more detailed information about the state of the cluster.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// Contains details of storage in the cluster.
	Storage StorageClusterStatusStoragePtrInput `pulumi:"storage"`
}

func (StorageClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterStatus)(nil)).Elem()
}

func (i StorageClusterStatusArgs) ToStorageClusterStatusOutput() StorageClusterStatusOutput {
	return i.ToStorageClusterStatusOutputWithContext(context.Background())
}

func (i StorageClusterStatusArgs) ToStorageClusterStatusOutputWithContext(ctx context.Context) StorageClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusOutput)
}

func (i StorageClusterStatusArgs) ToStorageClusterStatusPtrOutput() StorageClusterStatusPtrOutput {
	return i.ToStorageClusterStatusPtrOutputWithContext(context.Background())
}

func (i StorageClusterStatusArgs) ToStorageClusterStatusPtrOutputWithContext(ctx context.Context) StorageClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusOutput).ToStorageClusterStatusPtrOutputWithContext(ctx)
}

// StorageClusterStatusPtrInput is an input type that accepts StorageClusterStatusArgs, StorageClusterStatusPtr and StorageClusterStatusPtrOutput values.
// You can construct a concrete instance of `StorageClusterStatusPtrInput` via:
//
//          StorageClusterStatusArgs{...}
//
//  or:
//
//          nil
type StorageClusterStatusPtrInput interface {
	pulumi.Input

	ToStorageClusterStatusPtrOutput() StorageClusterStatusPtrOutput
	ToStorageClusterStatusPtrOutputWithContext(context.Context) StorageClusterStatusPtrOutput
}

type storageClusterStatusPtrType StorageClusterStatusArgs

func StorageClusterStatusPtr(v *StorageClusterStatusArgs) StorageClusterStatusPtrInput {
	return (*storageClusterStatusPtrType)(v)
}

func (*storageClusterStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterStatus)(nil)).Elem()
}

func (i *storageClusterStatusPtrType) ToStorageClusterStatusPtrOutput() StorageClusterStatusPtrOutput {
	return i.ToStorageClusterStatusPtrOutputWithContext(context.Background())
}

func (i *storageClusterStatusPtrType) ToStorageClusterStatusPtrOutputWithContext(ctx context.Context) StorageClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusPtrOutput)
}

// Most recently observed status of the storage cluster. This data may not be up to date.
type StorageClusterStatusOutput struct{ *pulumi.OutputState }

func (StorageClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterStatus)(nil)).Elem()
}

func (o StorageClusterStatusOutput) ToStorageClusterStatusOutput() StorageClusterStatusOutput {
	return o
}

func (o StorageClusterStatusOutput) ToStorageClusterStatusOutputWithContext(ctx context.Context) StorageClusterStatusOutput {
	return o
}

func (o StorageClusterStatusOutput) ToStorageClusterStatusPtrOutput() StorageClusterStatusPtrOutput {
	return o.ToStorageClusterStatusPtrOutputWithContext(context.Background())
}

func (o StorageClusterStatusOutput) ToStorageClusterStatusPtrOutputWithContext(ctx context.Context) StorageClusterStatusPtrOutput {
	return o.ApplyT(func(v StorageClusterStatus) *StorageClusterStatus {
		return &v
	}).(StorageClusterStatusPtrOutput)
}

// Name of the storage cluster.
func (o StorageClusterStatusOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterStatus) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// Unique ID of the storage cluster.
func (o StorageClusterStatusOutput) ClusterUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterStatus) *string { return v.ClusterUid }).(pulumi.StringPtrOutput)
}

// Count of hash collisions for the StorageCluster. The StorageCluster controller uses this field as a collision avoidance mechanism when it needs to create the name of the newest ControllerRevision.
func (o StorageClusterStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Contains details for the current condition of this cluster.
func (o StorageClusterStatusOutput) Conditions() StorageClusterStatusConditionsArrayOutput {
	return o.ApplyT(func(v StorageClusterStatus) []StorageClusterStatusConditions { return v.Conditions }).(StorageClusterStatusConditionsArrayOutput)
}

// Phase of the StorageCluster is a simple, high-level summary of where the StorageCluster is in its lifecycle. The condition array contains more detailed information about the state of the cluster.
func (o StorageClusterStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// Contains details of storage in the cluster.
func (o StorageClusterStatusOutput) Storage() StorageClusterStatusStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterStatus) *StorageClusterStatusStorage { return v.Storage }).(StorageClusterStatusStoragePtrOutput)
}

type StorageClusterStatusPtrOutput struct{ *pulumi.OutputState }

func (StorageClusterStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterStatus)(nil)).Elem()
}

func (o StorageClusterStatusPtrOutput) ToStorageClusterStatusPtrOutput() StorageClusterStatusPtrOutput {
	return o
}

func (o StorageClusterStatusPtrOutput) ToStorageClusterStatusPtrOutputWithContext(ctx context.Context) StorageClusterStatusPtrOutput {
	return o
}

func (o StorageClusterStatusPtrOutput) Elem() StorageClusterStatusOutput {
	return o.ApplyT(func(v *StorageClusterStatus) StorageClusterStatus { return *v }).(StorageClusterStatusOutput)
}

// Name of the storage cluster.
func (o StorageClusterStatusPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// Unique ID of the storage cluster.
func (o StorageClusterStatusPtrOutput) ClusterUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.ClusterUid
	}).(pulumi.StringPtrOutput)
}

// Count of hash collisions for the StorageCluster. The StorageCluster controller uses this field as a collision avoidance mechanism when it needs to create the name of the newest ControllerRevision.
func (o StorageClusterStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageClusterStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Contains details for the current condition of this cluster.
func (o StorageClusterStatusPtrOutput) Conditions() StorageClusterStatusConditionsArrayOutput {
	return o.ApplyT(func(v *StorageClusterStatus) []StorageClusterStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(StorageClusterStatusConditionsArrayOutput)
}

// Phase of the StorageCluster is a simple, high-level summary of where the StorageCluster is in its lifecycle. The condition array contains more detailed information about the state of the cluster.
func (o StorageClusterStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// Contains details of storage in the cluster.
func (o StorageClusterStatusPtrOutput) Storage() StorageClusterStatusStoragePtrOutput {
	return o.ApplyT(func(v *StorageClusterStatus) *StorageClusterStatusStorage {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(StorageClusterStatusStoragePtrOutput)
}

type StorageClusterStatusConditions struct {
	// Reason is human readable message indicating details about the current state of the cluster.
	Reason *string `pulumi:"reason"`
	// Status of the condition.
	Status *string `pulumi:"status"`
	// Type of the condition.
	Type *string `pulumi:"type"`
}

// StorageClusterStatusConditionsInput is an input type that accepts StorageClusterStatusConditionsArgs and StorageClusterStatusConditionsOutput values.
// You can construct a concrete instance of `StorageClusterStatusConditionsInput` via:
//
//          StorageClusterStatusConditionsArgs{...}
type StorageClusterStatusConditionsInput interface {
	pulumi.Input

	ToStorageClusterStatusConditionsOutput() StorageClusterStatusConditionsOutput
	ToStorageClusterStatusConditionsOutputWithContext(context.Context) StorageClusterStatusConditionsOutput
}

type StorageClusterStatusConditionsArgs struct {
	// Reason is human readable message indicating details about the current state of the cluster.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of the condition.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageClusterStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterStatusConditions)(nil)).Elem()
}

func (i StorageClusterStatusConditionsArgs) ToStorageClusterStatusConditionsOutput() StorageClusterStatusConditionsOutput {
	return i.ToStorageClusterStatusConditionsOutputWithContext(context.Background())
}

func (i StorageClusterStatusConditionsArgs) ToStorageClusterStatusConditionsOutputWithContext(ctx context.Context) StorageClusterStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusConditionsOutput)
}

// StorageClusterStatusConditionsArrayInput is an input type that accepts StorageClusterStatusConditionsArray and StorageClusterStatusConditionsArrayOutput values.
// You can construct a concrete instance of `StorageClusterStatusConditionsArrayInput` via:
//
//          StorageClusterStatusConditionsArray{ StorageClusterStatusConditionsArgs{...} }
type StorageClusterStatusConditionsArrayInput interface {
	pulumi.Input

	ToStorageClusterStatusConditionsArrayOutput() StorageClusterStatusConditionsArrayOutput
	ToStorageClusterStatusConditionsArrayOutputWithContext(context.Context) StorageClusterStatusConditionsArrayOutput
}

type StorageClusterStatusConditionsArray []StorageClusterStatusConditionsInput

func (StorageClusterStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterStatusConditions)(nil)).Elem()
}

func (i StorageClusterStatusConditionsArray) ToStorageClusterStatusConditionsArrayOutput() StorageClusterStatusConditionsArrayOutput {
	return i.ToStorageClusterStatusConditionsArrayOutputWithContext(context.Background())
}

func (i StorageClusterStatusConditionsArray) ToStorageClusterStatusConditionsArrayOutputWithContext(ctx context.Context) StorageClusterStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusConditionsArrayOutput)
}

type StorageClusterStatusConditionsOutput struct{ *pulumi.OutputState }

func (StorageClusterStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterStatusConditions)(nil)).Elem()
}

func (o StorageClusterStatusConditionsOutput) ToStorageClusterStatusConditionsOutput() StorageClusterStatusConditionsOutput {
	return o
}

func (o StorageClusterStatusConditionsOutput) ToStorageClusterStatusConditionsOutputWithContext(ctx context.Context) StorageClusterStatusConditionsOutput {
	return o
}

// Reason is human readable message indicating details about the current state of the cluster.
func (o StorageClusterStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition.
func (o StorageClusterStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of the condition.
func (o StorageClusterStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClusterStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageClusterStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (StorageClusterStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageClusterStatusConditions)(nil)).Elem()
}

func (o StorageClusterStatusConditionsArrayOutput) ToStorageClusterStatusConditionsArrayOutput() StorageClusterStatusConditionsArrayOutput {
	return o
}

func (o StorageClusterStatusConditionsArrayOutput) ToStorageClusterStatusConditionsArrayOutputWithContext(ctx context.Context) StorageClusterStatusConditionsArrayOutput {
	return o
}

func (o StorageClusterStatusConditionsArrayOutput) Index(i pulumi.IntInput) StorageClusterStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageClusterStatusConditions {
		return vs[0].([]StorageClusterStatusConditions)[vs[1].(int)]
	}).(StorageClusterStatusConditionsOutput)
}

// Contains details of storage in the cluster.
type StorageClusterStatusStorage struct {
	// The number of storage nodes per zone in the cluster.
	StorageNodesPerZone *int `pulumi:"storageNodesPerZone"`
}

// StorageClusterStatusStorageInput is an input type that accepts StorageClusterStatusStorageArgs and StorageClusterStatusStorageOutput values.
// You can construct a concrete instance of `StorageClusterStatusStorageInput` via:
//
//          StorageClusterStatusStorageArgs{...}
type StorageClusterStatusStorageInput interface {
	pulumi.Input

	ToStorageClusterStatusStorageOutput() StorageClusterStatusStorageOutput
	ToStorageClusterStatusStorageOutputWithContext(context.Context) StorageClusterStatusStorageOutput
}

// Contains details of storage in the cluster.
type StorageClusterStatusStorageArgs struct {
	// The number of storage nodes per zone in the cluster.
	StorageNodesPerZone pulumi.IntPtrInput `pulumi:"storageNodesPerZone"`
}

func (StorageClusterStatusStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterStatusStorage)(nil)).Elem()
}

func (i StorageClusterStatusStorageArgs) ToStorageClusterStatusStorageOutput() StorageClusterStatusStorageOutput {
	return i.ToStorageClusterStatusStorageOutputWithContext(context.Background())
}

func (i StorageClusterStatusStorageArgs) ToStorageClusterStatusStorageOutputWithContext(ctx context.Context) StorageClusterStatusStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusStorageOutput)
}

func (i StorageClusterStatusStorageArgs) ToStorageClusterStatusStoragePtrOutput() StorageClusterStatusStoragePtrOutput {
	return i.ToStorageClusterStatusStoragePtrOutputWithContext(context.Background())
}

func (i StorageClusterStatusStorageArgs) ToStorageClusterStatusStoragePtrOutputWithContext(ctx context.Context) StorageClusterStatusStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusStorageOutput).ToStorageClusterStatusStoragePtrOutputWithContext(ctx)
}

// StorageClusterStatusStoragePtrInput is an input type that accepts StorageClusterStatusStorageArgs, StorageClusterStatusStoragePtr and StorageClusterStatusStoragePtrOutput values.
// You can construct a concrete instance of `StorageClusterStatusStoragePtrInput` via:
//
//          StorageClusterStatusStorageArgs{...}
//
//  or:
//
//          nil
type StorageClusterStatusStoragePtrInput interface {
	pulumi.Input

	ToStorageClusterStatusStoragePtrOutput() StorageClusterStatusStoragePtrOutput
	ToStorageClusterStatusStoragePtrOutputWithContext(context.Context) StorageClusterStatusStoragePtrOutput
}

type storageClusterStatusStoragePtrType StorageClusterStatusStorageArgs

func StorageClusterStatusStoragePtr(v *StorageClusterStatusStorageArgs) StorageClusterStatusStoragePtrInput {
	return (*storageClusterStatusStoragePtrType)(v)
}

func (*storageClusterStatusStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterStatusStorage)(nil)).Elem()
}

func (i *storageClusterStatusStoragePtrType) ToStorageClusterStatusStoragePtrOutput() StorageClusterStatusStoragePtrOutput {
	return i.ToStorageClusterStatusStoragePtrOutputWithContext(context.Background())
}

func (i *storageClusterStatusStoragePtrType) ToStorageClusterStatusStoragePtrOutputWithContext(ctx context.Context) StorageClusterStatusStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClusterStatusStoragePtrOutput)
}

// Contains details of storage in the cluster.
type StorageClusterStatusStorageOutput struct{ *pulumi.OutputState }

func (StorageClusterStatusStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClusterStatusStorage)(nil)).Elem()
}

func (o StorageClusterStatusStorageOutput) ToStorageClusterStatusStorageOutput() StorageClusterStatusStorageOutput {
	return o
}

func (o StorageClusterStatusStorageOutput) ToStorageClusterStatusStorageOutputWithContext(ctx context.Context) StorageClusterStatusStorageOutput {
	return o
}

func (o StorageClusterStatusStorageOutput) ToStorageClusterStatusStoragePtrOutput() StorageClusterStatusStoragePtrOutput {
	return o.ToStorageClusterStatusStoragePtrOutputWithContext(context.Background())
}

func (o StorageClusterStatusStorageOutput) ToStorageClusterStatusStoragePtrOutputWithContext(ctx context.Context) StorageClusterStatusStoragePtrOutput {
	return o.ApplyT(func(v StorageClusterStatusStorage) *StorageClusterStatusStorage {
		return &v
	}).(StorageClusterStatusStoragePtrOutput)
}

// The number of storage nodes per zone in the cluster.
func (o StorageClusterStatusStorageOutput) StorageNodesPerZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageClusterStatusStorage) *int { return v.StorageNodesPerZone }).(pulumi.IntPtrOutput)
}

type StorageClusterStatusStoragePtrOutput struct{ *pulumi.OutputState }

func (StorageClusterStatusStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClusterStatusStorage)(nil)).Elem()
}

func (o StorageClusterStatusStoragePtrOutput) ToStorageClusterStatusStoragePtrOutput() StorageClusterStatusStoragePtrOutput {
	return o
}

func (o StorageClusterStatusStoragePtrOutput) ToStorageClusterStatusStoragePtrOutputWithContext(ctx context.Context) StorageClusterStatusStoragePtrOutput {
	return o
}

func (o StorageClusterStatusStoragePtrOutput) Elem() StorageClusterStatusStorageOutput {
	return o.ApplyT(func(v *StorageClusterStatusStorage) StorageClusterStatusStorage { return *v }).(StorageClusterStatusStorageOutput)
}

// The number of storage nodes per zone in the cluster.
func (o StorageClusterStatusStoragePtrOutput) StorageNodesPerZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageClusterStatusStorage) *int {
		if v == nil {
			return nil
		}
		return v.StorageNodesPerZone
	}).(pulumi.IntPtrOutput)
}

type StorageNodeType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// The desired behavior of the storage node. Currently changing the spec does not affect the actual storage node in the cluster. Eventually spec in StorageNode will override the spec from StorageCluster so that configuration can be overridden at node level.
	Spec *StorageNodeSpec `pulumi:"spec"`
	// Most recently observed status of the storage node. The data may not be up to date.
	Status *StorageNodeStatus `pulumi:"status"`
}

// StorageNodeTypeInput is an input type that accepts StorageNodeTypeArgs and StorageNodeTypeOutput values.
// You can construct a concrete instance of `StorageNodeTypeInput` via:
//
//          StorageNodeTypeArgs{...}
type StorageNodeTypeInput interface {
	pulumi.Input

	ToStorageNodeTypeOutput() StorageNodeTypeOutput
	ToStorageNodeTypeOutputWithContext(context.Context) StorageNodeTypeOutput
}

type StorageNodeTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// The desired behavior of the storage node. Currently changing the spec does not affect the actual storage node in the cluster. Eventually spec in StorageNode will override the spec from StorageCluster so that configuration can be overridden at node level.
	Spec StorageNodeSpecPtrInput `pulumi:"spec"`
	// Most recently observed status of the storage node. The data may not be up to date.
	Status StorageNodeStatusPtrInput `pulumi:"status"`
}

func (StorageNodeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeType)(nil)).Elem()
}

func (i StorageNodeTypeArgs) ToStorageNodeTypeOutput() StorageNodeTypeOutput {
	return i.ToStorageNodeTypeOutputWithContext(context.Background())
}

func (i StorageNodeTypeArgs) ToStorageNodeTypeOutputWithContext(ctx context.Context) StorageNodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeTypeOutput)
}

type StorageNodeTypeOutput struct{ *pulumi.OutputState }

func (StorageNodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeType)(nil)).Elem()
}

func (o StorageNodeTypeOutput) ToStorageNodeTypeOutput() StorageNodeTypeOutput {
	return o
}

func (o StorageNodeTypeOutput) ToStorageNodeTypeOutputWithContext(ctx context.Context) StorageNodeTypeOutput {
	return o
}

func (o StorageNodeTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o StorageNodeTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o StorageNodeTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v StorageNodeType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// The desired behavior of the storage node. Currently changing the spec does not affect the actual storage node in the cluster. Eventually spec in StorageNode will override the spec from StorageCluster so that configuration can be overridden at node level.
func (o StorageNodeTypeOutput) Spec() StorageNodeSpecPtrOutput {
	return o.ApplyT(func(v StorageNodeType) *StorageNodeSpec { return v.Spec }).(StorageNodeSpecPtrOutput)
}

// Most recently observed status of the storage node. The data may not be up to date.
func (o StorageNodeTypeOutput) Status() StorageNodeStatusPtrOutput {
	return o.ApplyT(func(v StorageNodeType) *StorageNodeStatus { return v.Status }).(StorageNodeStatusPtrOutput)
}

// The desired behavior of the storage node. Currently changing the spec does not affect the actual storage node in the cluster. Eventually spec in StorageNode will override the spec from StorageCluster so that configuration can be overridden at node level.
type StorageNodeSpec struct {
	// Details of storage on the node for cloud environments.
	CloudStorage *StorageNodeSpecCloudStorage `pulumi:"cloudStorage"`
	// Version of the storage driver on the node.
	Version *string `pulumi:"version"`
}

// StorageNodeSpecInput is an input type that accepts StorageNodeSpecArgs and StorageNodeSpecOutput values.
// You can construct a concrete instance of `StorageNodeSpecInput` via:
//
//          StorageNodeSpecArgs{...}
type StorageNodeSpecInput interface {
	pulumi.Input

	ToStorageNodeSpecOutput() StorageNodeSpecOutput
	ToStorageNodeSpecOutputWithContext(context.Context) StorageNodeSpecOutput
}

// The desired behavior of the storage node. Currently changing the spec does not affect the actual storage node in the cluster. Eventually spec in StorageNode will override the spec from StorageCluster so that configuration can be overridden at node level.
type StorageNodeSpecArgs struct {
	// Details of storage on the node for cloud environments.
	CloudStorage StorageNodeSpecCloudStoragePtrInput `pulumi:"cloudStorage"`
	// Version of the storage driver on the node.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StorageNodeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpec)(nil)).Elem()
}

func (i StorageNodeSpecArgs) ToStorageNodeSpecOutput() StorageNodeSpecOutput {
	return i.ToStorageNodeSpecOutputWithContext(context.Background())
}

func (i StorageNodeSpecArgs) ToStorageNodeSpecOutputWithContext(ctx context.Context) StorageNodeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecOutput)
}

func (i StorageNodeSpecArgs) ToStorageNodeSpecPtrOutput() StorageNodeSpecPtrOutput {
	return i.ToStorageNodeSpecPtrOutputWithContext(context.Background())
}

func (i StorageNodeSpecArgs) ToStorageNodeSpecPtrOutputWithContext(ctx context.Context) StorageNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecOutput).ToStorageNodeSpecPtrOutputWithContext(ctx)
}

// StorageNodeSpecPtrInput is an input type that accepts StorageNodeSpecArgs, StorageNodeSpecPtr and StorageNodeSpecPtrOutput values.
// You can construct a concrete instance of `StorageNodeSpecPtrInput` via:
//
//          StorageNodeSpecArgs{...}
//
//  or:
//
//          nil
type StorageNodeSpecPtrInput interface {
	pulumi.Input

	ToStorageNodeSpecPtrOutput() StorageNodeSpecPtrOutput
	ToStorageNodeSpecPtrOutputWithContext(context.Context) StorageNodeSpecPtrOutput
}

type storageNodeSpecPtrType StorageNodeSpecArgs

func StorageNodeSpecPtr(v *StorageNodeSpecArgs) StorageNodeSpecPtrInput {
	return (*storageNodeSpecPtrType)(v)
}

func (*storageNodeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeSpec)(nil)).Elem()
}

func (i *storageNodeSpecPtrType) ToStorageNodeSpecPtrOutput() StorageNodeSpecPtrOutput {
	return i.ToStorageNodeSpecPtrOutputWithContext(context.Background())
}

func (i *storageNodeSpecPtrType) ToStorageNodeSpecPtrOutputWithContext(ctx context.Context) StorageNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecPtrOutput)
}

// The desired behavior of the storage node. Currently changing the spec does not affect the actual storage node in the cluster. Eventually spec in StorageNode will override the spec from StorageCluster so that configuration can be overridden at node level.
type StorageNodeSpecOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpec)(nil)).Elem()
}

func (o StorageNodeSpecOutput) ToStorageNodeSpecOutput() StorageNodeSpecOutput {
	return o
}

func (o StorageNodeSpecOutput) ToStorageNodeSpecOutputWithContext(ctx context.Context) StorageNodeSpecOutput {
	return o
}

func (o StorageNodeSpecOutput) ToStorageNodeSpecPtrOutput() StorageNodeSpecPtrOutput {
	return o.ToStorageNodeSpecPtrOutputWithContext(context.Background())
}

func (o StorageNodeSpecOutput) ToStorageNodeSpecPtrOutputWithContext(ctx context.Context) StorageNodeSpecPtrOutput {
	return o.ApplyT(func(v StorageNodeSpec) *StorageNodeSpec {
		return &v
	}).(StorageNodeSpecPtrOutput)
}

// Details of storage on the node for cloud environments.
func (o StorageNodeSpecOutput) CloudStorage() StorageNodeSpecCloudStoragePtrOutput {
	return o.ApplyT(func(v StorageNodeSpec) *StorageNodeSpecCloudStorage { return v.CloudStorage }).(StorageNodeSpecCloudStoragePtrOutput)
}

// Version of the storage driver on the node.
func (o StorageNodeSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StorageNodeSpecPtrOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeSpec)(nil)).Elem()
}

func (o StorageNodeSpecPtrOutput) ToStorageNodeSpecPtrOutput() StorageNodeSpecPtrOutput {
	return o
}

func (o StorageNodeSpecPtrOutput) ToStorageNodeSpecPtrOutputWithContext(ctx context.Context) StorageNodeSpecPtrOutput {
	return o
}

func (o StorageNodeSpecPtrOutput) Elem() StorageNodeSpecOutput {
	return o.ApplyT(func(v *StorageNodeSpec) StorageNodeSpec { return *v }).(StorageNodeSpecOutput)
}

// Details of storage on the node for cloud environments.
func (o StorageNodeSpecPtrOutput) CloudStorage() StorageNodeSpecCloudStoragePtrOutput {
	return o.ApplyT(func(v *StorageNodeSpec) *StorageNodeSpecCloudStorage {
		if v == nil {
			return nil
		}
		return v.CloudStorage
	}).(StorageNodeSpecCloudStoragePtrOutput)
}

// Version of the storage driver on the node.
func (o StorageNodeSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Details of storage on the node for cloud environments.
type StorageNodeSpecCloudStorage struct {
	// List of cloud drive configs for the storage node.
	DriveConfigs []StorageNodeSpecCloudStorageDriveConfigs `pulumi:"driveConfigs"`
}

// StorageNodeSpecCloudStorageInput is an input type that accepts StorageNodeSpecCloudStorageArgs and StorageNodeSpecCloudStorageOutput values.
// You can construct a concrete instance of `StorageNodeSpecCloudStorageInput` via:
//
//          StorageNodeSpecCloudStorageArgs{...}
type StorageNodeSpecCloudStorageInput interface {
	pulumi.Input

	ToStorageNodeSpecCloudStorageOutput() StorageNodeSpecCloudStorageOutput
	ToStorageNodeSpecCloudStorageOutputWithContext(context.Context) StorageNodeSpecCloudStorageOutput
}

// Details of storage on the node for cloud environments.
type StorageNodeSpecCloudStorageArgs struct {
	// List of cloud drive configs for the storage node.
	DriveConfigs StorageNodeSpecCloudStorageDriveConfigsArrayInput `pulumi:"driveConfigs"`
}

func (StorageNodeSpecCloudStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpecCloudStorage)(nil)).Elem()
}

func (i StorageNodeSpecCloudStorageArgs) ToStorageNodeSpecCloudStorageOutput() StorageNodeSpecCloudStorageOutput {
	return i.ToStorageNodeSpecCloudStorageOutputWithContext(context.Background())
}

func (i StorageNodeSpecCloudStorageArgs) ToStorageNodeSpecCloudStorageOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecCloudStorageOutput)
}

func (i StorageNodeSpecCloudStorageArgs) ToStorageNodeSpecCloudStoragePtrOutput() StorageNodeSpecCloudStoragePtrOutput {
	return i.ToStorageNodeSpecCloudStoragePtrOutputWithContext(context.Background())
}

func (i StorageNodeSpecCloudStorageArgs) ToStorageNodeSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageNodeSpecCloudStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecCloudStorageOutput).ToStorageNodeSpecCloudStoragePtrOutputWithContext(ctx)
}

// StorageNodeSpecCloudStoragePtrInput is an input type that accepts StorageNodeSpecCloudStorageArgs, StorageNodeSpecCloudStoragePtr and StorageNodeSpecCloudStoragePtrOutput values.
// You can construct a concrete instance of `StorageNodeSpecCloudStoragePtrInput` via:
//
//          StorageNodeSpecCloudStorageArgs{...}
//
//  or:
//
//          nil
type StorageNodeSpecCloudStoragePtrInput interface {
	pulumi.Input

	ToStorageNodeSpecCloudStoragePtrOutput() StorageNodeSpecCloudStoragePtrOutput
	ToStorageNodeSpecCloudStoragePtrOutputWithContext(context.Context) StorageNodeSpecCloudStoragePtrOutput
}

type storageNodeSpecCloudStoragePtrType StorageNodeSpecCloudStorageArgs

func StorageNodeSpecCloudStoragePtr(v *StorageNodeSpecCloudStorageArgs) StorageNodeSpecCloudStoragePtrInput {
	return (*storageNodeSpecCloudStoragePtrType)(v)
}

func (*storageNodeSpecCloudStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeSpecCloudStorage)(nil)).Elem()
}

func (i *storageNodeSpecCloudStoragePtrType) ToStorageNodeSpecCloudStoragePtrOutput() StorageNodeSpecCloudStoragePtrOutput {
	return i.ToStorageNodeSpecCloudStoragePtrOutputWithContext(context.Background())
}

func (i *storageNodeSpecCloudStoragePtrType) ToStorageNodeSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageNodeSpecCloudStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecCloudStoragePtrOutput)
}

// Details of storage on the node for cloud environments.
type StorageNodeSpecCloudStorageOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecCloudStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpecCloudStorage)(nil)).Elem()
}

func (o StorageNodeSpecCloudStorageOutput) ToStorageNodeSpecCloudStorageOutput() StorageNodeSpecCloudStorageOutput {
	return o
}

func (o StorageNodeSpecCloudStorageOutput) ToStorageNodeSpecCloudStorageOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageOutput {
	return o
}

func (o StorageNodeSpecCloudStorageOutput) ToStorageNodeSpecCloudStoragePtrOutput() StorageNodeSpecCloudStoragePtrOutput {
	return o.ToStorageNodeSpecCloudStoragePtrOutputWithContext(context.Background())
}

func (o StorageNodeSpecCloudStorageOutput) ToStorageNodeSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageNodeSpecCloudStoragePtrOutput {
	return o.ApplyT(func(v StorageNodeSpecCloudStorage) *StorageNodeSpecCloudStorage {
		return &v
	}).(StorageNodeSpecCloudStoragePtrOutput)
}

// List of cloud drive configs for the storage node.
func (o StorageNodeSpecCloudStorageOutput) DriveConfigs() StorageNodeSpecCloudStorageDriveConfigsArrayOutput {
	return o.ApplyT(func(v StorageNodeSpecCloudStorage) []StorageNodeSpecCloudStorageDriveConfigs { return v.DriveConfigs }).(StorageNodeSpecCloudStorageDriveConfigsArrayOutput)
}

type StorageNodeSpecCloudStoragePtrOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecCloudStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeSpecCloudStorage)(nil)).Elem()
}

func (o StorageNodeSpecCloudStoragePtrOutput) ToStorageNodeSpecCloudStoragePtrOutput() StorageNodeSpecCloudStoragePtrOutput {
	return o
}

func (o StorageNodeSpecCloudStoragePtrOutput) ToStorageNodeSpecCloudStoragePtrOutputWithContext(ctx context.Context) StorageNodeSpecCloudStoragePtrOutput {
	return o
}

func (o StorageNodeSpecCloudStoragePtrOutput) Elem() StorageNodeSpecCloudStorageOutput {
	return o.ApplyT(func(v *StorageNodeSpecCloudStorage) StorageNodeSpecCloudStorage { return *v }).(StorageNodeSpecCloudStorageOutput)
}

// List of cloud drive configs for the storage node.
func (o StorageNodeSpecCloudStoragePtrOutput) DriveConfigs() StorageNodeSpecCloudStorageDriveConfigsArrayOutput {
	return o.ApplyT(func(v *StorageNodeSpecCloudStorage) []StorageNodeSpecCloudStorageDriveConfigs {
		if v == nil {
			return nil
		}
		return v.DriveConfigs
	}).(StorageNodeSpecCloudStorageDriveConfigsArrayOutput)
}

type StorageNodeSpecCloudStorageDriveConfigs struct {
	// IOPS required from the cloud drive.
	Iops *int `pulumi:"iops"`
	// Additional options for the cloud drive.
	Options map[string]interface{} `pulumi:"options"`
	// Size of cloud drive in GiB.
	SizeInGiB *int `pulumi:"sizeInGiB"`
	// Type of cloud drive.
	Type *string `pulumi:"type"`
}

// StorageNodeSpecCloudStorageDriveConfigsInput is an input type that accepts StorageNodeSpecCloudStorageDriveConfigsArgs and StorageNodeSpecCloudStorageDriveConfigsOutput values.
// You can construct a concrete instance of `StorageNodeSpecCloudStorageDriveConfigsInput` via:
//
//          StorageNodeSpecCloudStorageDriveConfigsArgs{...}
type StorageNodeSpecCloudStorageDriveConfigsInput interface {
	pulumi.Input

	ToStorageNodeSpecCloudStorageDriveConfigsOutput() StorageNodeSpecCloudStorageDriveConfigsOutput
	ToStorageNodeSpecCloudStorageDriveConfigsOutputWithContext(context.Context) StorageNodeSpecCloudStorageDriveConfigsOutput
}

type StorageNodeSpecCloudStorageDriveConfigsArgs struct {
	// IOPS required from the cloud drive.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Additional options for the cloud drive.
	Options pulumi.MapInput `pulumi:"options"`
	// Size of cloud drive in GiB.
	SizeInGiB pulumi.IntPtrInput `pulumi:"sizeInGiB"`
	// Type of cloud drive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageNodeSpecCloudStorageDriveConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpecCloudStorageDriveConfigs)(nil)).Elem()
}

func (i StorageNodeSpecCloudStorageDriveConfigsArgs) ToStorageNodeSpecCloudStorageDriveConfigsOutput() StorageNodeSpecCloudStorageDriveConfigsOutput {
	return i.ToStorageNodeSpecCloudStorageDriveConfigsOutputWithContext(context.Background())
}

func (i StorageNodeSpecCloudStorageDriveConfigsArgs) ToStorageNodeSpecCloudStorageDriveConfigsOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageDriveConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecCloudStorageDriveConfigsOutput)
}

// StorageNodeSpecCloudStorageDriveConfigsArrayInput is an input type that accepts StorageNodeSpecCloudStorageDriveConfigsArray and StorageNodeSpecCloudStorageDriveConfigsArrayOutput values.
// You can construct a concrete instance of `StorageNodeSpecCloudStorageDriveConfigsArrayInput` via:
//
//          StorageNodeSpecCloudStorageDriveConfigsArray{ StorageNodeSpecCloudStorageDriveConfigsArgs{...} }
type StorageNodeSpecCloudStorageDriveConfigsArrayInput interface {
	pulumi.Input

	ToStorageNodeSpecCloudStorageDriveConfigsArrayOutput() StorageNodeSpecCloudStorageDriveConfigsArrayOutput
	ToStorageNodeSpecCloudStorageDriveConfigsArrayOutputWithContext(context.Context) StorageNodeSpecCloudStorageDriveConfigsArrayOutput
}

type StorageNodeSpecCloudStorageDriveConfigsArray []StorageNodeSpecCloudStorageDriveConfigsInput

func (StorageNodeSpecCloudStorageDriveConfigsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNodeSpecCloudStorageDriveConfigs)(nil)).Elem()
}

func (i StorageNodeSpecCloudStorageDriveConfigsArray) ToStorageNodeSpecCloudStorageDriveConfigsArrayOutput() StorageNodeSpecCloudStorageDriveConfigsArrayOutput {
	return i.ToStorageNodeSpecCloudStorageDriveConfigsArrayOutputWithContext(context.Background())
}

func (i StorageNodeSpecCloudStorageDriveConfigsArray) ToStorageNodeSpecCloudStorageDriveConfigsArrayOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageDriveConfigsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecCloudStorageDriveConfigsArrayOutput)
}

type StorageNodeSpecCloudStorageDriveConfigsOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecCloudStorageDriveConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpecCloudStorageDriveConfigs)(nil)).Elem()
}

func (o StorageNodeSpecCloudStorageDriveConfigsOutput) ToStorageNodeSpecCloudStorageDriveConfigsOutput() StorageNodeSpecCloudStorageDriveConfigsOutput {
	return o
}

func (o StorageNodeSpecCloudStorageDriveConfigsOutput) ToStorageNodeSpecCloudStorageDriveConfigsOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageDriveConfigsOutput {
	return o
}

// IOPS required from the cloud drive.
func (o StorageNodeSpecCloudStorageDriveConfigsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageNodeSpecCloudStorageDriveConfigs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Additional options for the cloud drive.
func (o StorageNodeSpecCloudStorageDriveConfigsOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v StorageNodeSpecCloudStorageDriveConfigs) map[string]interface{} { return v.Options }).(pulumi.MapOutput)
}

// Size of cloud drive in GiB.
func (o StorageNodeSpecCloudStorageDriveConfigsOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageNodeSpecCloudStorageDriveConfigs) *int { return v.SizeInGiB }).(pulumi.IntPtrOutput)
}

// Type of cloud drive.
func (o StorageNodeSpecCloudStorageDriveConfigsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeSpecCloudStorageDriveConfigs) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageNodeSpecCloudStorageDriveConfigsArrayOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecCloudStorageDriveConfigsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNodeSpecCloudStorageDriveConfigs)(nil)).Elem()
}

func (o StorageNodeSpecCloudStorageDriveConfigsArrayOutput) ToStorageNodeSpecCloudStorageDriveConfigsArrayOutput() StorageNodeSpecCloudStorageDriveConfigsArrayOutput {
	return o
}

func (o StorageNodeSpecCloudStorageDriveConfigsArrayOutput) ToStorageNodeSpecCloudStorageDriveConfigsArrayOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageDriveConfigsArrayOutput {
	return o
}

func (o StorageNodeSpecCloudStorageDriveConfigsArrayOutput) Index(i pulumi.IntInput) StorageNodeSpecCloudStorageDriveConfigsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNodeSpecCloudStorageDriveConfigs {
		return vs[0].([]StorageNodeSpecCloudStorageDriveConfigs)[vs[1].(int)]
	}).(StorageNodeSpecCloudStorageDriveConfigsOutput)
}

// Additional options for the cloud drive.
type StorageNodeSpecCloudStorageDriveConfigsOptions struct {
}

// StorageNodeSpecCloudStorageDriveConfigsOptionsInput is an input type that accepts StorageNodeSpecCloudStorageDriveConfigsOptionsArgs and StorageNodeSpecCloudStorageDriveConfigsOptionsOutput values.
// You can construct a concrete instance of `StorageNodeSpecCloudStorageDriveConfigsOptionsInput` via:
//
//          StorageNodeSpecCloudStorageDriveConfigsOptionsArgs{...}
type StorageNodeSpecCloudStorageDriveConfigsOptionsInput interface {
	pulumi.Input

	ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutput() StorageNodeSpecCloudStorageDriveConfigsOptionsOutput
	ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutputWithContext(context.Context) StorageNodeSpecCloudStorageDriveConfigsOptionsOutput
}

// Additional options for the cloud drive.
type StorageNodeSpecCloudStorageDriveConfigsOptionsArgs struct {
}

func (StorageNodeSpecCloudStorageDriveConfigsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpecCloudStorageDriveConfigsOptions)(nil)).Elem()
}

func (i StorageNodeSpecCloudStorageDriveConfigsOptionsArgs) ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutput() StorageNodeSpecCloudStorageDriveConfigsOptionsOutput {
	return i.ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutputWithContext(context.Background())
}

func (i StorageNodeSpecCloudStorageDriveConfigsOptionsArgs) ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageDriveConfigsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeSpecCloudStorageDriveConfigsOptionsOutput)
}

// Additional options for the cloud drive.
type StorageNodeSpecCloudStorageDriveConfigsOptionsOutput struct{ *pulumi.OutputState }

func (StorageNodeSpecCloudStorageDriveConfigsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeSpecCloudStorageDriveConfigsOptions)(nil)).Elem()
}

func (o StorageNodeSpecCloudStorageDriveConfigsOptionsOutput) ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutput() StorageNodeSpecCloudStorageDriveConfigsOptionsOutput {
	return o
}

func (o StorageNodeSpecCloudStorageDriveConfigsOptionsOutput) ToStorageNodeSpecCloudStorageDriveConfigsOptionsOutputWithContext(ctx context.Context) StorageNodeSpecCloudStorageDriveConfigsOptionsOutput {
	return o
}

// Most recently observed status of the storage node. The data may not be up to date.
type StorageNodeStatus struct {
	// Contains details for the current condition of this storage node.
	Conditions []StorageNodeStatusConditions `pulumi:"conditions"`
	// Contains topology information for the storage node.
	Geography *StorageNodeStatusGeography `pulumi:"geography"`
	// Contains network information used by the storage node
	Network *StorageNodeStatusNetwork `pulumi:"network"`
	// Unique ID of the storage node.
	NodeUid *string `pulumi:"nodeUid"`
	// Phase of the StorageNode is a simple, high-level summary of where the StorageNode is in its lifecycle. The condition array contains more detailed information about the state of the node.
	Phase *string `pulumi:"phase"`
	// Contains details of the status of storage for the node
	Storage *StorageNodeStatusStorage `pulumi:"storage"`
}

// StorageNodeStatusInput is an input type that accepts StorageNodeStatusArgs and StorageNodeStatusOutput values.
// You can construct a concrete instance of `StorageNodeStatusInput` via:
//
//          StorageNodeStatusArgs{...}
type StorageNodeStatusInput interface {
	pulumi.Input

	ToStorageNodeStatusOutput() StorageNodeStatusOutput
	ToStorageNodeStatusOutputWithContext(context.Context) StorageNodeStatusOutput
}

// Most recently observed status of the storage node. The data may not be up to date.
type StorageNodeStatusArgs struct {
	// Contains details for the current condition of this storage node.
	Conditions StorageNodeStatusConditionsArrayInput `pulumi:"conditions"`
	// Contains topology information for the storage node.
	Geography StorageNodeStatusGeographyPtrInput `pulumi:"geography"`
	// Contains network information used by the storage node
	Network StorageNodeStatusNetworkPtrInput `pulumi:"network"`
	// Unique ID of the storage node.
	NodeUid pulumi.StringPtrInput `pulumi:"nodeUid"`
	// Phase of the StorageNode is a simple, high-level summary of where the StorageNode is in its lifecycle. The condition array contains more detailed information about the state of the node.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// Contains details of the status of storage for the node
	Storage StorageNodeStatusStoragePtrInput `pulumi:"storage"`
}

func (StorageNodeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatus)(nil)).Elem()
}

func (i StorageNodeStatusArgs) ToStorageNodeStatusOutput() StorageNodeStatusOutput {
	return i.ToStorageNodeStatusOutputWithContext(context.Background())
}

func (i StorageNodeStatusArgs) ToStorageNodeStatusOutputWithContext(ctx context.Context) StorageNodeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusOutput)
}

func (i StorageNodeStatusArgs) ToStorageNodeStatusPtrOutput() StorageNodeStatusPtrOutput {
	return i.ToStorageNodeStatusPtrOutputWithContext(context.Background())
}

func (i StorageNodeStatusArgs) ToStorageNodeStatusPtrOutputWithContext(ctx context.Context) StorageNodeStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusOutput).ToStorageNodeStatusPtrOutputWithContext(ctx)
}

// StorageNodeStatusPtrInput is an input type that accepts StorageNodeStatusArgs, StorageNodeStatusPtr and StorageNodeStatusPtrOutput values.
// You can construct a concrete instance of `StorageNodeStatusPtrInput` via:
//
//          StorageNodeStatusArgs{...}
//
//  or:
//
//          nil
type StorageNodeStatusPtrInput interface {
	pulumi.Input

	ToStorageNodeStatusPtrOutput() StorageNodeStatusPtrOutput
	ToStorageNodeStatusPtrOutputWithContext(context.Context) StorageNodeStatusPtrOutput
}

type storageNodeStatusPtrType StorageNodeStatusArgs

func StorageNodeStatusPtr(v *StorageNodeStatusArgs) StorageNodeStatusPtrInput {
	return (*storageNodeStatusPtrType)(v)
}

func (*storageNodeStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatus)(nil)).Elem()
}

func (i *storageNodeStatusPtrType) ToStorageNodeStatusPtrOutput() StorageNodeStatusPtrOutput {
	return i.ToStorageNodeStatusPtrOutputWithContext(context.Background())
}

func (i *storageNodeStatusPtrType) ToStorageNodeStatusPtrOutputWithContext(ctx context.Context) StorageNodeStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusPtrOutput)
}

// Most recently observed status of the storage node. The data may not be up to date.
type StorageNodeStatusOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatus)(nil)).Elem()
}

func (o StorageNodeStatusOutput) ToStorageNodeStatusOutput() StorageNodeStatusOutput {
	return o
}

func (o StorageNodeStatusOutput) ToStorageNodeStatusOutputWithContext(ctx context.Context) StorageNodeStatusOutput {
	return o
}

func (o StorageNodeStatusOutput) ToStorageNodeStatusPtrOutput() StorageNodeStatusPtrOutput {
	return o.ToStorageNodeStatusPtrOutputWithContext(context.Background())
}

func (o StorageNodeStatusOutput) ToStorageNodeStatusPtrOutputWithContext(ctx context.Context) StorageNodeStatusPtrOutput {
	return o.ApplyT(func(v StorageNodeStatus) *StorageNodeStatus {
		return &v
	}).(StorageNodeStatusPtrOutput)
}

// Contains details for the current condition of this storage node.
func (o StorageNodeStatusOutput) Conditions() StorageNodeStatusConditionsArrayOutput {
	return o.ApplyT(func(v StorageNodeStatus) []StorageNodeStatusConditions { return v.Conditions }).(StorageNodeStatusConditionsArrayOutput)
}

// Contains topology information for the storage node.
func (o StorageNodeStatusOutput) Geography() StorageNodeStatusGeographyPtrOutput {
	return o.ApplyT(func(v StorageNodeStatus) *StorageNodeStatusGeography { return v.Geography }).(StorageNodeStatusGeographyPtrOutput)
}

// Contains network information used by the storage node
func (o StorageNodeStatusOutput) Network() StorageNodeStatusNetworkPtrOutput {
	return o.ApplyT(func(v StorageNodeStatus) *StorageNodeStatusNetwork { return v.Network }).(StorageNodeStatusNetworkPtrOutput)
}

// Unique ID of the storage node.
func (o StorageNodeStatusOutput) NodeUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatus) *string { return v.NodeUid }).(pulumi.StringPtrOutput)
}

// Phase of the StorageNode is a simple, high-level summary of where the StorageNode is in its lifecycle. The condition array contains more detailed information about the state of the node.
func (o StorageNodeStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// Contains details of the status of storage for the node
func (o StorageNodeStatusOutput) Storage() StorageNodeStatusStoragePtrOutput {
	return o.ApplyT(func(v StorageNodeStatus) *StorageNodeStatusStorage { return v.Storage }).(StorageNodeStatusStoragePtrOutput)
}

type StorageNodeStatusPtrOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatus)(nil)).Elem()
}

func (o StorageNodeStatusPtrOutput) ToStorageNodeStatusPtrOutput() StorageNodeStatusPtrOutput {
	return o
}

func (o StorageNodeStatusPtrOutput) ToStorageNodeStatusPtrOutputWithContext(ctx context.Context) StorageNodeStatusPtrOutput {
	return o
}

func (o StorageNodeStatusPtrOutput) Elem() StorageNodeStatusOutput {
	return o.ApplyT(func(v *StorageNodeStatus) StorageNodeStatus { return *v }).(StorageNodeStatusOutput)
}

// Contains details for the current condition of this storage node.
func (o StorageNodeStatusPtrOutput) Conditions() StorageNodeStatusConditionsArrayOutput {
	return o.ApplyT(func(v *StorageNodeStatus) []StorageNodeStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(StorageNodeStatusConditionsArrayOutput)
}

// Contains topology information for the storage node.
func (o StorageNodeStatusPtrOutput) Geography() StorageNodeStatusGeographyPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatus) *StorageNodeStatusGeography {
		if v == nil {
			return nil
		}
		return v.Geography
	}).(StorageNodeStatusGeographyPtrOutput)
}

// Contains network information used by the storage node
func (o StorageNodeStatusPtrOutput) Network() StorageNodeStatusNetworkPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatus) *StorageNodeStatusNetwork {
		if v == nil {
			return nil
		}
		return v.Network
	}).(StorageNodeStatusNetworkPtrOutput)
}

// Unique ID of the storage node.
func (o StorageNodeStatusPtrOutput) NodeUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatus) *string {
		if v == nil {
			return nil
		}
		return v.NodeUid
	}).(pulumi.StringPtrOutput)
}

// Phase of the StorageNode is a simple, high-level summary of where the StorageNode is in its lifecycle. The condition array contains more detailed information about the state of the node.
func (o StorageNodeStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// Contains details of the status of storage for the node
func (o StorageNodeStatusPtrOutput) Storage() StorageNodeStatusStoragePtrOutput {
	return o.ApplyT(func(v *StorageNodeStatus) *StorageNodeStatusStorage {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(StorageNodeStatusStoragePtrOutput)
}

type StorageNodeStatusConditions struct {
	// Reason is the human readable message indicating details about the current state of the cluster.
	Reason *string `pulumi:"reason"`
	// Status of the condition.
	Status *string `pulumi:"status"`
	// Type of the condition.
	Type *string `pulumi:"type"`
}

// StorageNodeStatusConditionsInput is an input type that accepts StorageNodeStatusConditionsArgs and StorageNodeStatusConditionsOutput values.
// You can construct a concrete instance of `StorageNodeStatusConditionsInput` via:
//
//          StorageNodeStatusConditionsArgs{...}
type StorageNodeStatusConditionsInput interface {
	pulumi.Input

	ToStorageNodeStatusConditionsOutput() StorageNodeStatusConditionsOutput
	ToStorageNodeStatusConditionsOutputWithContext(context.Context) StorageNodeStatusConditionsOutput
}

type StorageNodeStatusConditionsArgs struct {
	// Reason is the human readable message indicating details about the current state of the cluster.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Type of the condition.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageNodeStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusConditions)(nil)).Elem()
}

func (i StorageNodeStatusConditionsArgs) ToStorageNodeStatusConditionsOutput() StorageNodeStatusConditionsOutput {
	return i.ToStorageNodeStatusConditionsOutputWithContext(context.Background())
}

func (i StorageNodeStatusConditionsArgs) ToStorageNodeStatusConditionsOutputWithContext(ctx context.Context) StorageNodeStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusConditionsOutput)
}

// StorageNodeStatusConditionsArrayInput is an input type that accepts StorageNodeStatusConditionsArray and StorageNodeStatusConditionsArrayOutput values.
// You can construct a concrete instance of `StorageNodeStatusConditionsArrayInput` via:
//
//          StorageNodeStatusConditionsArray{ StorageNodeStatusConditionsArgs{...} }
type StorageNodeStatusConditionsArrayInput interface {
	pulumi.Input

	ToStorageNodeStatusConditionsArrayOutput() StorageNodeStatusConditionsArrayOutput
	ToStorageNodeStatusConditionsArrayOutputWithContext(context.Context) StorageNodeStatusConditionsArrayOutput
}

type StorageNodeStatusConditionsArray []StorageNodeStatusConditionsInput

func (StorageNodeStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNodeStatusConditions)(nil)).Elem()
}

func (i StorageNodeStatusConditionsArray) ToStorageNodeStatusConditionsArrayOutput() StorageNodeStatusConditionsArrayOutput {
	return i.ToStorageNodeStatusConditionsArrayOutputWithContext(context.Background())
}

func (i StorageNodeStatusConditionsArray) ToStorageNodeStatusConditionsArrayOutputWithContext(ctx context.Context) StorageNodeStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusConditionsArrayOutput)
}

type StorageNodeStatusConditionsOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusConditions)(nil)).Elem()
}

func (o StorageNodeStatusConditionsOutput) ToStorageNodeStatusConditionsOutput() StorageNodeStatusConditionsOutput {
	return o
}

func (o StorageNodeStatusConditionsOutput) ToStorageNodeStatusConditionsOutputWithContext(ctx context.Context) StorageNodeStatusConditionsOutput {
	return o
}

// Reason is the human readable message indicating details about the current state of the cluster.
func (o StorageNodeStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition.
func (o StorageNodeStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Type of the condition.
func (o StorageNodeStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageNodeStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNodeStatusConditions)(nil)).Elem()
}

func (o StorageNodeStatusConditionsArrayOutput) ToStorageNodeStatusConditionsArrayOutput() StorageNodeStatusConditionsArrayOutput {
	return o
}

func (o StorageNodeStatusConditionsArrayOutput) ToStorageNodeStatusConditionsArrayOutputWithContext(ctx context.Context) StorageNodeStatusConditionsArrayOutput {
	return o
}

func (o StorageNodeStatusConditionsArrayOutput) Index(i pulumi.IntInput) StorageNodeStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNodeStatusConditions {
		return vs[0].([]StorageNodeStatusConditions)[vs[1].(int)]
	}).(StorageNodeStatusConditionsOutput)
}

// Contains topology information for the storage node.
type StorageNodeStatusGeography struct {
	// Rack on which the storage node is placed.
	Rack *string `pulumi:"rack"`
	// Region in which the storage node is placed.
	Region *string `pulumi:"region"`
	// Zone in which the storage node is placed.
	Zone *string `pulumi:"zone"`
}

// StorageNodeStatusGeographyInput is an input type that accepts StorageNodeStatusGeographyArgs and StorageNodeStatusGeographyOutput values.
// You can construct a concrete instance of `StorageNodeStatusGeographyInput` via:
//
//          StorageNodeStatusGeographyArgs{...}
type StorageNodeStatusGeographyInput interface {
	pulumi.Input

	ToStorageNodeStatusGeographyOutput() StorageNodeStatusGeographyOutput
	ToStorageNodeStatusGeographyOutputWithContext(context.Context) StorageNodeStatusGeographyOutput
}

// Contains topology information for the storage node.
type StorageNodeStatusGeographyArgs struct {
	// Rack on which the storage node is placed.
	Rack pulumi.StringPtrInput `pulumi:"rack"`
	// Region in which the storage node is placed.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Zone in which the storage node is placed.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (StorageNodeStatusGeographyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusGeography)(nil)).Elem()
}

func (i StorageNodeStatusGeographyArgs) ToStorageNodeStatusGeographyOutput() StorageNodeStatusGeographyOutput {
	return i.ToStorageNodeStatusGeographyOutputWithContext(context.Background())
}

func (i StorageNodeStatusGeographyArgs) ToStorageNodeStatusGeographyOutputWithContext(ctx context.Context) StorageNodeStatusGeographyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusGeographyOutput)
}

func (i StorageNodeStatusGeographyArgs) ToStorageNodeStatusGeographyPtrOutput() StorageNodeStatusGeographyPtrOutput {
	return i.ToStorageNodeStatusGeographyPtrOutputWithContext(context.Background())
}

func (i StorageNodeStatusGeographyArgs) ToStorageNodeStatusGeographyPtrOutputWithContext(ctx context.Context) StorageNodeStatusGeographyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusGeographyOutput).ToStorageNodeStatusGeographyPtrOutputWithContext(ctx)
}

// StorageNodeStatusGeographyPtrInput is an input type that accepts StorageNodeStatusGeographyArgs, StorageNodeStatusGeographyPtr and StorageNodeStatusGeographyPtrOutput values.
// You can construct a concrete instance of `StorageNodeStatusGeographyPtrInput` via:
//
//          StorageNodeStatusGeographyArgs{...}
//
//  or:
//
//          nil
type StorageNodeStatusGeographyPtrInput interface {
	pulumi.Input

	ToStorageNodeStatusGeographyPtrOutput() StorageNodeStatusGeographyPtrOutput
	ToStorageNodeStatusGeographyPtrOutputWithContext(context.Context) StorageNodeStatusGeographyPtrOutput
}

type storageNodeStatusGeographyPtrType StorageNodeStatusGeographyArgs

func StorageNodeStatusGeographyPtr(v *StorageNodeStatusGeographyArgs) StorageNodeStatusGeographyPtrInput {
	return (*storageNodeStatusGeographyPtrType)(v)
}

func (*storageNodeStatusGeographyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatusGeography)(nil)).Elem()
}

func (i *storageNodeStatusGeographyPtrType) ToStorageNodeStatusGeographyPtrOutput() StorageNodeStatusGeographyPtrOutput {
	return i.ToStorageNodeStatusGeographyPtrOutputWithContext(context.Background())
}

func (i *storageNodeStatusGeographyPtrType) ToStorageNodeStatusGeographyPtrOutputWithContext(ctx context.Context) StorageNodeStatusGeographyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusGeographyPtrOutput)
}

// Contains topology information for the storage node.
type StorageNodeStatusGeographyOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusGeographyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusGeography)(nil)).Elem()
}

func (o StorageNodeStatusGeographyOutput) ToStorageNodeStatusGeographyOutput() StorageNodeStatusGeographyOutput {
	return o
}

func (o StorageNodeStatusGeographyOutput) ToStorageNodeStatusGeographyOutputWithContext(ctx context.Context) StorageNodeStatusGeographyOutput {
	return o
}

func (o StorageNodeStatusGeographyOutput) ToStorageNodeStatusGeographyPtrOutput() StorageNodeStatusGeographyPtrOutput {
	return o.ToStorageNodeStatusGeographyPtrOutputWithContext(context.Background())
}

func (o StorageNodeStatusGeographyOutput) ToStorageNodeStatusGeographyPtrOutputWithContext(ctx context.Context) StorageNodeStatusGeographyPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusGeography) *StorageNodeStatusGeography {
		return &v
	}).(StorageNodeStatusGeographyPtrOutput)
}

// Rack on which the storage node is placed.
func (o StorageNodeStatusGeographyOutput) Rack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusGeography) *string { return v.Rack }).(pulumi.StringPtrOutput)
}

// Region in which the storage node is placed.
func (o StorageNodeStatusGeographyOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusGeography) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Zone in which the storage node is placed.
func (o StorageNodeStatusGeographyOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusGeography) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type StorageNodeStatusGeographyPtrOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusGeographyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatusGeography)(nil)).Elem()
}

func (o StorageNodeStatusGeographyPtrOutput) ToStorageNodeStatusGeographyPtrOutput() StorageNodeStatusGeographyPtrOutput {
	return o
}

func (o StorageNodeStatusGeographyPtrOutput) ToStorageNodeStatusGeographyPtrOutputWithContext(ctx context.Context) StorageNodeStatusGeographyPtrOutput {
	return o
}

func (o StorageNodeStatusGeographyPtrOutput) Elem() StorageNodeStatusGeographyOutput {
	return o.ApplyT(func(v *StorageNodeStatusGeography) StorageNodeStatusGeography { return *v }).(StorageNodeStatusGeographyOutput)
}

// Rack on which the storage node is placed.
func (o StorageNodeStatusGeographyPtrOutput) Rack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusGeography) *string {
		if v == nil {
			return nil
		}
		return v.Rack
	}).(pulumi.StringPtrOutput)
}

// Region in which the storage node is placed.
func (o StorageNodeStatusGeographyPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusGeography) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Zone in which the storage node is placed.
func (o StorageNodeStatusGeographyPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusGeography) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

// Contains network information used by the storage node
type StorageNodeStatusNetwork struct {
	// IP address used by the storage driver for data traffic.
	DataIP *string `pulumi:"dataIP"`
	// IP address used by the storage driver for management traffic.
	MgmtIP *string `pulumi:"mgmtIP"`
}

// StorageNodeStatusNetworkInput is an input type that accepts StorageNodeStatusNetworkArgs and StorageNodeStatusNetworkOutput values.
// You can construct a concrete instance of `StorageNodeStatusNetworkInput` via:
//
//          StorageNodeStatusNetworkArgs{...}
type StorageNodeStatusNetworkInput interface {
	pulumi.Input

	ToStorageNodeStatusNetworkOutput() StorageNodeStatusNetworkOutput
	ToStorageNodeStatusNetworkOutputWithContext(context.Context) StorageNodeStatusNetworkOutput
}

// Contains network information used by the storage node
type StorageNodeStatusNetworkArgs struct {
	// IP address used by the storage driver for data traffic.
	DataIP pulumi.StringPtrInput `pulumi:"dataIP"`
	// IP address used by the storage driver for management traffic.
	MgmtIP pulumi.StringPtrInput `pulumi:"mgmtIP"`
}

func (StorageNodeStatusNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusNetwork)(nil)).Elem()
}

func (i StorageNodeStatusNetworkArgs) ToStorageNodeStatusNetworkOutput() StorageNodeStatusNetworkOutput {
	return i.ToStorageNodeStatusNetworkOutputWithContext(context.Background())
}

func (i StorageNodeStatusNetworkArgs) ToStorageNodeStatusNetworkOutputWithContext(ctx context.Context) StorageNodeStatusNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusNetworkOutput)
}

func (i StorageNodeStatusNetworkArgs) ToStorageNodeStatusNetworkPtrOutput() StorageNodeStatusNetworkPtrOutput {
	return i.ToStorageNodeStatusNetworkPtrOutputWithContext(context.Background())
}

func (i StorageNodeStatusNetworkArgs) ToStorageNodeStatusNetworkPtrOutputWithContext(ctx context.Context) StorageNodeStatusNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusNetworkOutput).ToStorageNodeStatusNetworkPtrOutputWithContext(ctx)
}

// StorageNodeStatusNetworkPtrInput is an input type that accepts StorageNodeStatusNetworkArgs, StorageNodeStatusNetworkPtr and StorageNodeStatusNetworkPtrOutput values.
// You can construct a concrete instance of `StorageNodeStatusNetworkPtrInput` via:
//
//          StorageNodeStatusNetworkArgs{...}
//
//  or:
//
//          nil
type StorageNodeStatusNetworkPtrInput interface {
	pulumi.Input

	ToStorageNodeStatusNetworkPtrOutput() StorageNodeStatusNetworkPtrOutput
	ToStorageNodeStatusNetworkPtrOutputWithContext(context.Context) StorageNodeStatusNetworkPtrOutput
}

type storageNodeStatusNetworkPtrType StorageNodeStatusNetworkArgs

func StorageNodeStatusNetworkPtr(v *StorageNodeStatusNetworkArgs) StorageNodeStatusNetworkPtrInput {
	return (*storageNodeStatusNetworkPtrType)(v)
}

func (*storageNodeStatusNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatusNetwork)(nil)).Elem()
}

func (i *storageNodeStatusNetworkPtrType) ToStorageNodeStatusNetworkPtrOutput() StorageNodeStatusNetworkPtrOutput {
	return i.ToStorageNodeStatusNetworkPtrOutputWithContext(context.Background())
}

func (i *storageNodeStatusNetworkPtrType) ToStorageNodeStatusNetworkPtrOutputWithContext(ctx context.Context) StorageNodeStatusNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusNetworkPtrOutput)
}

// Contains network information used by the storage node
type StorageNodeStatusNetworkOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusNetwork)(nil)).Elem()
}

func (o StorageNodeStatusNetworkOutput) ToStorageNodeStatusNetworkOutput() StorageNodeStatusNetworkOutput {
	return o
}

func (o StorageNodeStatusNetworkOutput) ToStorageNodeStatusNetworkOutputWithContext(ctx context.Context) StorageNodeStatusNetworkOutput {
	return o
}

func (o StorageNodeStatusNetworkOutput) ToStorageNodeStatusNetworkPtrOutput() StorageNodeStatusNetworkPtrOutput {
	return o.ToStorageNodeStatusNetworkPtrOutputWithContext(context.Background())
}

func (o StorageNodeStatusNetworkOutput) ToStorageNodeStatusNetworkPtrOutputWithContext(ctx context.Context) StorageNodeStatusNetworkPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusNetwork) *StorageNodeStatusNetwork {
		return &v
	}).(StorageNodeStatusNetworkPtrOutput)
}

// IP address used by the storage driver for data traffic.
func (o StorageNodeStatusNetworkOutput) DataIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusNetwork) *string { return v.DataIP }).(pulumi.StringPtrOutput)
}

// IP address used by the storage driver for management traffic.
func (o StorageNodeStatusNetworkOutput) MgmtIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusNetwork) *string { return v.MgmtIP }).(pulumi.StringPtrOutput)
}

type StorageNodeStatusNetworkPtrOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatusNetwork)(nil)).Elem()
}

func (o StorageNodeStatusNetworkPtrOutput) ToStorageNodeStatusNetworkPtrOutput() StorageNodeStatusNetworkPtrOutput {
	return o
}

func (o StorageNodeStatusNetworkPtrOutput) ToStorageNodeStatusNetworkPtrOutputWithContext(ctx context.Context) StorageNodeStatusNetworkPtrOutput {
	return o
}

func (o StorageNodeStatusNetworkPtrOutput) Elem() StorageNodeStatusNetworkOutput {
	return o.ApplyT(func(v *StorageNodeStatusNetwork) StorageNodeStatusNetwork { return *v }).(StorageNodeStatusNetworkOutput)
}

// IP address used by the storage driver for data traffic.
func (o StorageNodeStatusNetworkPtrOutput) DataIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusNetwork) *string {
		if v == nil {
			return nil
		}
		return v.DataIP
	}).(pulumi.StringPtrOutput)
}

// IP address used by the storage driver for management traffic.
func (o StorageNodeStatusNetworkPtrOutput) MgmtIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusNetwork) *string {
		if v == nil {
			return nil
		}
		return v.MgmtIP
	}).(pulumi.StringPtrOutput)
}

// Contains details of the status of storage for the node
type StorageNodeStatusStorage struct {
	// Cumulative total size of all storage pools on the node
	TotalSize *string `pulumi:"totalSize"`
	// Cumulative used size of all storage pools on the node
	UsedSize *string `pulumi:"usedSize"`
}

// StorageNodeStatusStorageInput is an input type that accepts StorageNodeStatusStorageArgs and StorageNodeStatusStorageOutput values.
// You can construct a concrete instance of `StorageNodeStatusStorageInput` via:
//
//          StorageNodeStatusStorageArgs{...}
type StorageNodeStatusStorageInput interface {
	pulumi.Input

	ToStorageNodeStatusStorageOutput() StorageNodeStatusStorageOutput
	ToStorageNodeStatusStorageOutputWithContext(context.Context) StorageNodeStatusStorageOutput
}

// Contains details of the status of storage for the node
type StorageNodeStatusStorageArgs struct {
	// Cumulative total size of all storage pools on the node
	TotalSize pulumi.StringPtrInput `pulumi:"totalSize"`
	// Cumulative used size of all storage pools on the node
	UsedSize pulumi.StringPtrInput `pulumi:"usedSize"`
}

func (StorageNodeStatusStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusStorage)(nil)).Elem()
}

func (i StorageNodeStatusStorageArgs) ToStorageNodeStatusStorageOutput() StorageNodeStatusStorageOutput {
	return i.ToStorageNodeStatusStorageOutputWithContext(context.Background())
}

func (i StorageNodeStatusStorageArgs) ToStorageNodeStatusStorageOutputWithContext(ctx context.Context) StorageNodeStatusStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusStorageOutput)
}

func (i StorageNodeStatusStorageArgs) ToStorageNodeStatusStoragePtrOutput() StorageNodeStatusStoragePtrOutput {
	return i.ToStorageNodeStatusStoragePtrOutputWithContext(context.Background())
}

func (i StorageNodeStatusStorageArgs) ToStorageNodeStatusStoragePtrOutputWithContext(ctx context.Context) StorageNodeStatusStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusStorageOutput).ToStorageNodeStatusStoragePtrOutputWithContext(ctx)
}

// StorageNodeStatusStoragePtrInput is an input type that accepts StorageNodeStatusStorageArgs, StorageNodeStatusStoragePtr and StorageNodeStatusStoragePtrOutput values.
// You can construct a concrete instance of `StorageNodeStatusStoragePtrInput` via:
//
//          StorageNodeStatusStorageArgs{...}
//
//  or:
//
//          nil
type StorageNodeStatusStoragePtrInput interface {
	pulumi.Input

	ToStorageNodeStatusStoragePtrOutput() StorageNodeStatusStoragePtrOutput
	ToStorageNodeStatusStoragePtrOutputWithContext(context.Context) StorageNodeStatusStoragePtrOutput
}

type storageNodeStatusStoragePtrType StorageNodeStatusStorageArgs

func StorageNodeStatusStoragePtr(v *StorageNodeStatusStorageArgs) StorageNodeStatusStoragePtrInput {
	return (*storageNodeStatusStoragePtrType)(v)
}

func (*storageNodeStatusStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatusStorage)(nil)).Elem()
}

func (i *storageNodeStatusStoragePtrType) ToStorageNodeStatusStoragePtrOutput() StorageNodeStatusStoragePtrOutput {
	return i.ToStorageNodeStatusStoragePtrOutputWithContext(context.Background())
}

func (i *storageNodeStatusStoragePtrType) ToStorageNodeStatusStoragePtrOutputWithContext(ctx context.Context) StorageNodeStatusStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNodeStatusStoragePtrOutput)
}

// Contains details of the status of storage for the node
type StorageNodeStatusStorageOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNodeStatusStorage)(nil)).Elem()
}

func (o StorageNodeStatusStorageOutput) ToStorageNodeStatusStorageOutput() StorageNodeStatusStorageOutput {
	return o
}

func (o StorageNodeStatusStorageOutput) ToStorageNodeStatusStorageOutputWithContext(ctx context.Context) StorageNodeStatusStorageOutput {
	return o
}

func (o StorageNodeStatusStorageOutput) ToStorageNodeStatusStoragePtrOutput() StorageNodeStatusStoragePtrOutput {
	return o.ToStorageNodeStatusStoragePtrOutputWithContext(context.Background())
}

func (o StorageNodeStatusStorageOutput) ToStorageNodeStatusStoragePtrOutputWithContext(ctx context.Context) StorageNodeStatusStoragePtrOutput {
	return o.ApplyT(func(v StorageNodeStatusStorage) *StorageNodeStatusStorage {
		return &v
	}).(StorageNodeStatusStoragePtrOutput)
}

// Cumulative total size of all storage pools on the node
func (o StorageNodeStatusStorageOutput) TotalSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusStorage) *string { return v.TotalSize }).(pulumi.StringPtrOutput)
}

// Cumulative used size of all storage pools on the node
func (o StorageNodeStatusStorageOutput) UsedSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNodeStatusStorage) *string { return v.UsedSize }).(pulumi.StringPtrOutput)
}

type StorageNodeStatusStoragePtrOutput struct{ *pulumi.OutputState }

func (StorageNodeStatusStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNodeStatusStorage)(nil)).Elem()
}

func (o StorageNodeStatusStoragePtrOutput) ToStorageNodeStatusStoragePtrOutput() StorageNodeStatusStoragePtrOutput {
	return o
}

func (o StorageNodeStatusStoragePtrOutput) ToStorageNodeStatusStoragePtrOutputWithContext(ctx context.Context) StorageNodeStatusStoragePtrOutput {
	return o
}

func (o StorageNodeStatusStoragePtrOutput) Elem() StorageNodeStatusStorageOutput {
	return o.ApplyT(func(v *StorageNodeStatusStorage) StorageNodeStatusStorage { return *v }).(StorageNodeStatusStorageOutput)
}

// Cumulative total size of all storage pools on the node
func (o StorageNodeStatusStoragePtrOutput) TotalSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusStorage) *string {
		if v == nil {
			return nil
		}
		return v.TotalSize
	}).(pulumi.StringPtrOutput)
}

// Cumulative used size of all storage pools on the node
func (o StorageNodeStatusStoragePtrOutput) UsedSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNodeStatusStorage) *string {
		if v == nil {
			return nil
		}
		return v.UsedSize
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(StorageClusterTypeOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotArgsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotProvidersOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotProvidersArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecAutopilotProvidersParamsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecCloudStorageOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecCloudStoragePtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecCloudStorageCapacitySpecsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecCloudStorageCapacitySpecsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecCloudStorageCapacitySpecsOptionsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecDeleteStrategyOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecDeleteStrategyPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecFeatureGatesOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecKvdbOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecKvdbPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecMonitoringOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecMonitoringPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecMonitoringPrometheusOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecMonitoringPrometheusPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNetworkOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNetworkPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesNetworkOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesNetworkPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesRuntimeOptionsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorLabelSelectorOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesSelectorLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesStorageOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecNodesStoragePtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementTolerationsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecPlacementTolerationsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecRuntimeOptionsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecSecurityOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecSecurityPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecSecurityAuthOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecSecurityAuthPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecSecurityAuthSelfSignedOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecSecurityAuthSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorageOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStoragePtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkArgsOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecStorkEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUpdateStrategyOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUpdateStrategyPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUpdateStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUpdateStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfacePtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(StorageClusterSpecUserInterfaceEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterStatusOutput{})
	pulumi.RegisterOutputType(StorageClusterStatusPtrOutput{})
	pulumi.RegisterOutputType(StorageClusterStatusConditionsOutput{})
	pulumi.RegisterOutputType(StorageClusterStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(StorageClusterStatusStorageOutput{})
	pulumi.RegisterOutputType(StorageClusterStatusStoragePtrOutput{})
	pulumi.RegisterOutputType(StorageNodeTypeOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecPtrOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecCloudStorageOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecCloudStoragePtrOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecCloudStorageDriveConfigsOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecCloudStorageDriveConfigsArrayOutput{})
	pulumi.RegisterOutputType(StorageNodeSpecCloudStorageDriveConfigsOptionsOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusPtrOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusConditionsOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusGeographyOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusGeographyPtrOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusNetworkOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusNetworkPtrOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusStorageOutput{})
	pulumi.RegisterOutputType(StorageNodeStatusStoragePtrOutput{})
}
