// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1
{

    [OutputType]
    public sealed class ApicurioRegistrySpecConfiguration
    {
        public readonly Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationDataSource DataSource;
        public readonly Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationInfinispan Infinispan;
        public readonly Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationKafka Kafka;
        public readonly string LogLevel;
        public readonly string Persistence;
        public readonly Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationStreams Streams;
        public readonly Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationUi Ui;

        [OutputConstructor]
        private ApicurioRegistrySpecConfiguration(
            Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationDataSource dataSource,

            Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationInfinispan infinispan,

            Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationKafka kafka,

            string logLevel,

            string persistence,

            Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationStreams streams,

            Pulumi.Kubernetes.Types.Outputs.Apicur.V1Alpha1.ApicurioRegistrySpecConfigurationUi ui)
        {
            DataSource = dataSource;
            Infinispan = infinispan;
            Kafka = kafka;
            LogLevel = logLevel;
            Persistence = persistence;
            Streams = streams;
            Ui = ui;
        }
    }
}
