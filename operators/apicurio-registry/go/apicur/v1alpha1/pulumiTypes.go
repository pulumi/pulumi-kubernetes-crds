// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ApicurioRegistry is the Schema for the apicurioregistries API
type ApicurioRegistryType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ApicurioRegistrySpec defines the desired state of ApicurioRegistry
	Spec *ApicurioRegistrySpec `pulumi:"spec"`
	// ApicurioRegistryStatus defines the observed state of ApicurioRegistry
	Status *ApicurioRegistryStatus `pulumi:"status"`
}

// ApicurioRegistryTypeInput is an input type that accepts ApicurioRegistryTypeArgs and ApicurioRegistryTypeOutput values.
// You can construct a concrete instance of `ApicurioRegistryTypeInput` via:
//
//          ApicurioRegistryTypeArgs{...}
type ApicurioRegistryTypeInput interface {
	pulumi.Input

	ToApicurioRegistryTypeOutput() ApicurioRegistryTypeOutput
	ToApicurioRegistryTypeOutputWithContext(context.Context) ApicurioRegistryTypeOutput
}

// ApicurioRegistry is the Schema for the apicurioregistries API
type ApicurioRegistryTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ApicurioRegistrySpec defines the desired state of ApicurioRegistry
	Spec ApicurioRegistrySpecPtrInput `pulumi:"spec"`
	// ApicurioRegistryStatus defines the observed state of ApicurioRegistry
	Status ApicurioRegistryStatusPtrInput `pulumi:"status"`
}

func (ApicurioRegistryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistryType)(nil)).Elem()
}

func (i ApicurioRegistryTypeArgs) ToApicurioRegistryTypeOutput() ApicurioRegistryTypeOutput {
	return i.ToApicurioRegistryTypeOutputWithContext(context.Background())
}

func (i ApicurioRegistryTypeArgs) ToApicurioRegistryTypeOutputWithContext(ctx context.Context) ApicurioRegistryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistryTypeOutput)
}

// ApicurioRegistry is the Schema for the apicurioregistries API
type ApicurioRegistryTypeOutput struct{ *pulumi.OutputState }

func (ApicurioRegistryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistryType)(nil)).Elem()
}

func (o ApicurioRegistryTypeOutput) ToApicurioRegistryTypeOutput() ApicurioRegistryTypeOutput {
	return o
}

func (o ApicurioRegistryTypeOutput) ToApicurioRegistryTypeOutputWithContext(ctx context.Context) ApicurioRegistryTypeOutput {
	return o
}

func (o ApicurioRegistryTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ApicurioRegistrySpec defines the desired state of ApicurioRegistry
func (o ApicurioRegistryTypeOutput) Spec() ApicurioRegistrySpecPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryType) *ApicurioRegistrySpec { return v.Spec }).(ApicurioRegistrySpecPtrOutput)
}

// ApicurioRegistryStatus defines the observed state of ApicurioRegistry
func (o ApicurioRegistryTypeOutput) Status() ApicurioRegistryStatusPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryType) *ApicurioRegistryStatus { return v.Status }).(ApicurioRegistryStatusPtrOutput)
}

type ApicurioRegistryMetadata struct {
}

// ApicurioRegistryMetadataInput is an input type that accepts ApicurioRegistryMetadataArgs and ApicurioRegistryMetadataOutput values.
// You can construct a concrete instance of `ApicurioRegistryMetadataInput` via:
//
//          ApicurioRegistryMetadataArgs{...}
type ApicurioRegistryMetadataInput interface {
	pulumi.Input

	ToApicurioRegistryMetadataOutput() ApicurioRegistryMetadataOutput
	ToApicurioRegistryMetadataOutputWithContext(context.Context) ApicurioRegistryMetadataOutput
}

type ApicurioRegistryMetadataArgs struct {
}

func (ApicurioRegistryMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistryMetadata)(nil)).Elem()
}

func (i ApicurioRegistryMetadataArgs) ToApicurioRegistryMetadataOutput() ApicurioRegistryMetadataOutput {
	return i.ToApicurioRegistryMetadataOutputWithContext(context.Background())
}

func (i ApicurioRegistryMetadataArgs) ToApicurioRegistryMetadataOutputWithContext(ctx context.Context) ApicurioRegistryMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistryMetadataOutput)
}

type ApicurioRegistryMetadataOutput struct{ *pulumi.OutputState }

func (ApicurioRegistryMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistryMetadata)(nil)).Elem()
}

func (o ApicurioRegistryMetadataOutput) ToApicurioRegistryMetadataOutput() ApicurioRegistryMetadataOutput {
	return o
}

func (o ApicurioRegistryMetadataOutput) ToApicurioRegistryMetadataOutputWithContext(ctx context.Context) ApicurioRegistryMetadataOutput {
	return o
}

// ApicurioRegistrySpec defines the desired state of ApicurioRegistry
type ApicurioRegistrySpec struct {
	Configuration *ApicurioRegistrySpecConfiguration `pulumi:"configuration"`
	Deployment    *ApicurioRegistrySpecDeployment    `pulumi:"deployment"`
	Image         *ApicurioRegistrySpecImage         `pulumi:"image"`
}

// ApicurioRegistrySpecInput is an input type that accepts ApicurioRegistrySpecArgs and ApicurioRegistrySpecOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecInput` via:
//
//          ApicurioRegistrySpecArgs{...}
type ApicurioRegistrySpecInput interface {
	pulumi.Input

	ToApicurioRegistrySpecOutput() ApicurioRegistrySpecOutput
	ToApicurioRegistrySpecOutputWithContext(context.Context) ApicurioRegistrySpecOutput
}

// ApicurioRegistrySpec defines the desired state of ApicurioRegistry
type ApicurioRegistrySpecArgs struct {
	Configuration ApicurioRegistrySpecConfigurationPtrInput `pulumi:"configuration"`
	Deployment    ApicurioRegistrySpecDeploymentPtrInput    `pulumi:"deployment"`
	Image         ApicurioRegistrySpecImagePtrInput         `pulumi:"image"`
}

func (ApicurioRegistrySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpec)(nil)).Elem()
}

func (i ApicurioRegistrySpecArgs) ToApicurioRegistrySpecOutput() ApicurioRegistrySpecOutput {
	return i.ToApicurioRegistrySpecOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecArgs) ToApicurioRegistrySpecOutputWithContext(ctx context.Context) ApicurioRegistrySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecOutput)
}

func (i ApicurioRegistrySpecArgs) ToApicurioRegistrySpecPtrOutput() ApicurioRegistrySpecPtrOutput {
	return i.ToApicurioRegistrySpecPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecArgs) ToApicurioRegistrySpecPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecOutput).ToApicurioRegistrySpecPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecPtrInput is an input type that accepts ApicurioRegistrySpecArgs, ApicurioRegistrySpecPtr and ApicurioRegistrySpecPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecPtrInput` via:
//
//          ApicurioRegistrySpecArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecPtrOutput() ApicurioRegistrySpecPtrOutput
	ToApicurioRegistrySpecPtrOutputWithContext(context.Context) ApicurioRegistrySpecPtrOutput
}

type apicurioRegistrySpecPtrType ApicurioRegistrySpecArgs

func ApicurioRegistrySpecPtr(v *ApicurioRegistrySpecArgs) ApicurioRegistrySpecPtrInput {
	return (*apicurioRegistrySpecPtrType)(v)
}

func (*apicurioRegistrySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpec)(nil)).Elem()
}

func (i *apicurioRegistrySpecPtrType) ToApicurioRegistrySpecPtrOutput() ApicurioRegistrySpecPtrOutput {
	return i.ToApicurioRegistrySpecPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecPtrType) ToApicurioRegistrySpecPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecPtrOutput)
}

// ApicurioRegistrySpec defines the desired state of ApicurioRegistry
type ApicurioRegistrySpecOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpec)(nil)).Elem()
}

func (o ApicurioRegistrySpecOutput) ToApicurioRegistrySpecOutput() ApicurioRegistrySpecOutput {
	return o
}

func (o ApicurioRegistrySpecOutput) ToApicurioRegistrySpecOutputWithContext(ctx context.Context) ApicurioRegistrySpecOutput {
	return o
}

func (o ApicurioRegistrySpecOutput) ToApicurioRegistrySpecPtrOutput() ApicurioRegistrySpecPtrOutput {
	return o.ToApicurioRegistrySpecPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecOutput) ToApicurioRegistrySpecPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpec) *ApicurioRegistrySpec {
		return &v
	}).(ApicurioRegistrySpecPtrOutput)
}
func (o ApicurioRegistrySpecOutput) Configuration() ApicurioRegistrySpecConfigurationPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpec) *ApicurioRegistrySpecConfiguration { return v.Configuration }).(ApicurioRegistrySpecConfigurationPtrOutput)
}

func (o ApicurioRegistrySpecOutput) Deployment() ApicurioRegistrySpecDeploymentPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpec) *ApicurioRegistrySpecDeployment { return v.Deployment }).(ApicurioRegistrySpecDeploymentPtrOutput)
}

func (o ApicurioRegistrySpecOutput) Image() ApicurioRegistrySpecImagePtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpec) *ApicurioRegistrySpecImage { return v.Image }).(ApicurioRegistrySpecImagePtrOutput)
}

type ApicurioRegistrySpecPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpec)(nil)).Elem()
}

func (o ApicurioRegistrySpecPtrOutput) ToApicurioRegistrySpecPtrOutput() ApicurioRegistrySpecPtrOutput {
	return o
}

func (o ApicurioRegistrySpecPtrOutput) ToApicurioRegistrySpecPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecPtrOutput {
	return o
}

func (o ApicurioRegistrySpecPtrOutput) Elem() ApicurioRegistrySpecOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpec) ApicurioRegistrySpec { return *v }).(ApicurioRegistrySpecOutput)
}

func (o ApicurioRegistrySpecPtrOutput) Configuration() ApicurioRegistrySpecConfigurationPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpec) *ApicurioRegistrySpecConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(ApicurioRegistrySpecConfigurationPtrOutput)
}

func (o ApicurioRegistrySpecPtrOutput) Deployment() ApicurioRegistrySpecDeploymentPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpec) *ApicurioRegistrySpecDeployment {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(ApicurioRegistrySpecDeploymentPtrOutput)
}

func (o ApicurioRegistrySpecPtrOutput) Image() ApicurioRegistrySpecImagePtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpec) *ApicurioRegistrySpecImage {
		if v == nil {
			return nil
		}
		return v.Image
	}).(ApicurioRegistrySpecImagePtrOutput)
}

type ApicurioRegistrySpecConfiguration struct {
	DataSource  *ApicurioRegistrySpecConfigurationDataSource `pulumi:"dataSource"`
	Infinispan  *ApicurioRegistrySpecConfigurationInfinispan `pulumi:"infinispan"`
	Kafka       *ApicurioRegistrySpecConfigurationKafka      `pulumi:"kafka"`
	LogLevel    *string                                      `pulumi:"logLevel"`
	Persistence *string                                      `pulumi:"persistence"`
	Streams     *ApicurioRegistrySpecConfigurationStreams    `pulumi:"streams"`
	Ui          *ApicurioRegistrySpecConfigurationUi         `pulumi:"ui"`
}

// ApicurioRegistrySpecConfigurationInput is an input type that accepts ApicurioRegistrySpecConfigurationArgs and ApicurioRegistrySpecConfigurationOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationInput` via:
//
//          ApicurioRegistrySpecConfigurationArgs{...}
type ApicurioRegistrySpecConfigurationInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationOutput() ApicurioRegistrySpecConfigurationOutput
	ToApicurioRegistrySpecConfigurationOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationOutput
}

type ApicurioRegistrySpecConfigurationArgs struct {
	DataSource  ApicurioRegistrySpecConfigurationDataSourcePtrInput `pulumi:"dataSource"`
	Infinispan  ApicurioRegistrySpecConfigurationInfinispanPtrInput `pulumi:"infinispan"`
	Kafka       ApicurioRegistrySpecConfigurationKafkaPtrInput      `pulumi:"kafka"`
	LogLevel    pulumi.StringPtrInput                               `pulumi:"logLevel"`
	Persistence pulumi.StringPtrInput                               `pulumi:"persistence"`
	Streams     ApicurioRegistrySpecConfigurationStreamsPtrInput    `pulumi:"streams"`
	Ui          ApicurioRegistrySpecConfigurationUiPtrInput         `pulumi:"ui"`
}

func (ApicurioRegistrySpecConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfiguration)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationArgs) ToApicurioRegistrySpecConfigurationOutput() ApicurioRegistrySpecConfigurationOutput {
	return i.ToApicurioRegistrySpecConfigurationOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationArgs) ToApicurioRegistrySpecConfigurationOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationOutput)
}

func (i ApicurioRegistrySpecConfigurationArgs) ToApicurioRegistrySpecConfigurationPtrOutput() ApicurioRegistrySpecConfigurationPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationArgs) ToApicurioRegistrySpecConfigurationPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationOutput).ToApicurioRegistrySpecConfigurationPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationArgs, ApicurioRegistrySpecConfigurationPtr and ApicurioRegistrySpecConfigurationPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationPtrOutput() ApicurioRegistrySpecConfigurationPtrOutput
	ToApicurioRegistrySpecConfigurationPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationPtrOutput
}

type apicurioRegistrySpecConfigurationPtrType ApicurioRegistrySpecConfigurationArgs

func ApicurioRegistrySpecConfigurationPtr(v *ApicurioRegistrySpecConfigurationArgs) ApicurioRegistrySpecConfigurationPtrInput {
	return (*apicurioRegistrySpecConfigurationPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfiguration)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationPtrType) ToApicurioRegistrySpecConfigurationPtrOutput() ApicurioRegistrySpecConfigurationPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationPtrType) ToApicurioRegistrySpecConfigurationPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationPtrOutput)
}

type ApicurioRegistrySpecConfigurationOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfiguration)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationOutput) ToApicurioRegistrySpecConfigurationOutput() ApicurioRegistrySpecConfigurationOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationOutput) ToApicurioRegistrySpecConfigurationOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationOutput) ToApicurioRegistrySpecConfigurationPtrOutput() ApicurioRegistrySpecConfigurationPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationOutput) ToApicurioRegistrySpecConfigurationPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfiguration {
		return &v
	}).(ApicurioRegistrySpecConfigurationPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationOutput) DataSource() ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationDataSource {
		return v.DataSource
	}).(ApicurioRegistrySpecConfigurationDataSourcePtrOutput)
}

func (o ApicurioRegistrySpecConfigurationOutput) Infinispan() ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationInfinispan {
		return v.Infinispan
	}).(ApicurioRegistrySpecConfigurationInfinispanPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationOutput) Kafka() ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationKafka { return v.Kafka }).(ApicurioRegistrySpecConfigurationKafkaPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationOutput) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *string { return v.Persistence }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationOutput) Streams() ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationStreams { return v.Streams }).(ApicurioRegistrySpecConfigurationStreamsPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationOutput) Ui() ApicurioRegistrySpecConfigurationUiPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationUi { return v.Ui }).(ApicurioRegistrySpecConfigurationUiPtrOutput)
}

type ApicurioRegistrySpecConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfiguration)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) ToApicurioRegistrySpecConfigurationPtrOutput() ApicurioRegistrySpecConfigurationPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) ToApicurioRegistrySpecConfigurationPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) Elem() ApicurioRegistrySpecConfigurationOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) ApicurioRegistrySpecConfiguration { return *v }).(ApicurioRegistrySpecConfigurationOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) DataSource() ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationDataSource {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(ApicurioRegistrySpecConfigurationDataSourcePtrOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) Infinispan() ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationInfinispan {
		if v == nil {
			return nil
		}
		return v.Infinispan
	}).(ApicurioRegistrySpecConfigurationInfinispanPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) Kafka() ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationKafka {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(ApicurioRegistrySpecConfigurationKafkaPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LogLevel
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) Persistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Persistence
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) Streams() ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationStreams {
		if v == nil {
			return nil
		}
		return v.Streams
	}).(ApicurioRegistrySpecConfigurationStreamsPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationPtrOutput) Ui() ApicurioRegistrySpecConfigurationUiPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfiguration) *ApicurioRegistrySpecConfigurationUi {
		if v == nil {
			return nil
		}
		return v.Ui
	}).(ApicurioRegistrySpecConfigurationUiPtrOutput)
}

type ApicurioRegistrySpecConfigurationDataSource struct {
	Password *string `pulumi:"password"`
	Url      *string `pulumi:"url"`
	UserName *string `pulumi:"userName"`
}

// ApicurioRegistrySpecConfigurationDataSourceInput is an input type that accepts ApicurioRegistrySpecConfigurationDataSourceArgs and ApicurioRegistrySpecConfigurationDataSourceOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationDataSourceInput` via:
//
//          ApicurioRegistrySpecConfigurationDataSourceArgs{...}
type ApicurioRegistrySpecConfigurationDataSourceInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationDataSourceOutput() ApicurioRegistrySpecConfigurationDataSourceOutput
	ToApicurioRegistrySpecConfigurationDataSourceOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationDataSourceOutput
}

type ApicurioRegistrySpecConfigurationDataSourceArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	Url      pulumi.StringPtrInput `pulumi:"url"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (ApicurioRegistrySpecConfigurationDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationDataSource)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationDataSourceArgs) ToApicurioRegistrySpecConfigurationDataSourceOutput() ApicurioRegistrySpecConfigurationDataSourceOutput {
	return i.ToApicurioRegistrySpecConfigurationDataSourceOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationDataSourceArgs) ToApicurioRegistrySpecConfigurationDataSourceOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationDataSourceOutput)
}

func (i ApicurioRegistrySpecConfigurationDataSourceArgs) ToApicurioRegistrySpecConfigurationDataSourcePtrOutput() ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return i.ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationDataSourceArgs) ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationDataSourceOutput).ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationDataSourcePtrInput is an input type that accepts ApicurioRegistrySpecConfigurationDataSourceArgs, ApicurioRegistrySpecConfigurationDataSourcePtr and ApicurioRegistrySpecConfigurationDataSourcePtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationDataSourcePtrInput` via:
//
//          ApicurioRegistrySpecConfigurationDataSourceArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationDataSourcePtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationDataSourcePtrOutput() ApicurioRegistrySpecConfigurationDataSourcePtrOutput
	ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationDataSourcePtrOutput
}

type apicurioRegistrySpecConfigurationDataSourcePtrType ApicurioRegistrySpecConfigurationDataSourceArgs

func ApicurioRegistrySpecConfigurationDataSourcePtr(v *ApicurioRegistrySpecConfigurationDataSourceArgs) ApicurioRegistrySpecConfigurationDataSourcePtrInput {
	return (*apicurioRegistrySpecConfigurationDataSourcePtrType)(v)
}

func (*apicurioRegistrySpecConfigurationDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationDataSource)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationDataSourcePtrType) ToApicurioRegistrySpecConfigurationDataSourcePtrOutput() ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return i.ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationDataSourcePtrType) ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationDataSourcePtrOutput)
}

type ApicurioRegistrySpecConfigurationDataSourceOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationDataSource)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationDataSourceOutput) ToApicurioRegistrySpecConfigurationDataSourceOutput() ApicurioRegistrySpecConfigurationDataSourceOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationDataSourceOutput) ToApicurioRegistrySpecConfigurationDataSourceOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationDataSourceOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationDataSourceOutput) ToApicurioRegistrySpecConfigurationDataSourcePtrOutput() ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return o.ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationDataSourceOutput) ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationDataSource) *ApicurioRegistrySpecConfigurationDataSource {
		return &v
	}).(ApicurioRegistrySpecConfigurationDataSourcePtrOutput)
}
func (o ApicurioRegistrySpecConfigurationDataSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationDataSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationDataSourceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationDataSource) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationDataSourceOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationDataSource) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationDataSourcePtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationDataSource)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationDataSourcePtrOutput) ToApicurioRegistrySpecConfigurationDataSourcePtrOutput() ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationDataSourcePtrOutput) ToApicurioRegistrySpecConfigurationDataSourcePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationDataSourcePtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationDataSourcePtrOutput) Elem() ApicurioRegistrySpecConfigurationDataSourceOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationDataSource) ApicurioRegistrySpecConfigurationDataSource {
		return *v
	}).(ApicurioRegistrySpecConfigurationDataSourceOutput)
}

func (o ApicurioRegistrySpecConfigurationDataSourcePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationDataSourcePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationDataSourcePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationDataSource) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationInfinispan struct {
	ClusterName *string `pulumi:"clusterName"`
}

// ApicurioRegistrySpecConfigurationInfinispanInput is an input type that accepts ApicurioRegistrySpecConfigurationInfinispanArgs and ApicurioRegistrySpecConfigurationInfinispanOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationInfinispanInput` via:
//
//          ApicurioRegistrySpecConfigurationInfinispanArgs{...}
type ApicurioRegistrySpecConfigurationInfinispanInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationInfinispanOutput() ApicurioRegistrySpecConfigurationInfinispanOutput
	ToApicurioRegistrySpecConfigurationInfinispanOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationInfinispanOutput
}

type ApicurioRegistrySpecConfigurationInfinispanArgs struct {
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
}

func (ApicurioRegistrySpecConfigurationInfinispanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationInfinispan)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationInfinispanArgs) ToApicurioRegistrySpecConfigurationInfinispanOutput() ApicurioRegistrySpecConfigurationInfinispanOutput {
	return i.ToApicurioRegistrySpecConfigurationInfinispanOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationInfinispanArgs) ToApicurioRegistrySpecConfigurationInfinispanOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationInfinispanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationInfinispanOutput)
}

func (i ApicurioRegistrySpecConfigurationInfinispanArgs) ToApicurioRegistrySpecConfigurationInfinispanPtrOutput() ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationInfinispanArgs) ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationInfinispanOutput).ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationInfinispanPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationInfinispanArgs, ApicurioRegistrySpecConfigurationInfinispanPtr and ApicurioRegistrySpecConfigurationInfinispanPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationInfinispanPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationInfinispanArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationInfinispanPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationInfinispanPtrOutput() ApicurioRegistrySpecConfigurationInfinispanPtrOutput
	ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationInfinispanPtrOutput
}

type apicurioRegistrySpecConfigurationInfinispanPtrType ApicurioRegistrySpecConfigurationInfinispanArgs

func ApicurioRegistrySpecConfigurationInfinispanPtr(v *ApicurioRegistrySpecConfigurationInfinispanArgs) ApicurioRegistrySpecConfigurationInfinispanPtrInput {
	return (*apicurioRegistrySpecConfigurationInfinispanPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationInfinispanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationInfinispan)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationInfinispanPtrType) ToApicurioRegistrySpecConfigurationInfinispanPtrOutput() ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationInfinispanPtrType) ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationInfinispanPtrOutput)
}

type ApicurioRegistrySpecConfigurationInfinispanOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationInfinispanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationInfinispan)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationInfinispanOutput) ToApicurioRegistrySpecConfigurationInfinispanOutput() ApicurioRegistrySpecConfigurationInfinispanOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationInfinispanOutput) ToApicurioRegistrySpecConfigurationInfinispanOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationInfinispanOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationInfinispanOutput) ToApicurioRegistrySpecConfigurationInfinispanPtrOutput() ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationInfinispanOutput) ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationInfinispan) *ApicurioRegistrySpecConfigurationInfinispan {
		return &v
	}).(ApicurioRegistrySpecConfigurationInfinispanPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationInfinispanOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationInfinispan) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationInfinispanPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationInfinispanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationInfinispan)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationInfinispanPtrOutput) ToApicurioRegistrySpecConfigurationInfinispanPtrOutput() ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationInfinispanPtrOutput) ToApicurioRegistrySpecConfigurationInfinispanPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationInfinispanPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationInfinispanPtrOutput) Elem() ApicurioRegistrySpecConfigurationInfinispanOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationInfinispan) ApicurioRegistrySpecConfigurationInfinispan {
		return *v
	}).(ApicurioRegistrySpecConfigurationInfinispanOutput)
}

func (o ApicurioRegistrySpecConfigurationInfinispanPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationInfinispan) *string {
		if v == nil {
			return nil
		}
		return v.ClusterName
	}).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationKafka struct {
	BootstrapServers *string `pulumi:"bootstrapServers"`
}

// ApicurioRegistrySpecConfigurationKafkaInput is an input type that accepts ApicurioRegistrySpecConfigurationKafkaArgs and ApicurioRegistrySpecConfigurationKafkaOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationKafkaInput` via:
//
//          ApicurioRegistrySpecConfigurationKafkaArgs{...}
type ApicurioRegistrySpecConfigurationKafkaInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationKafkaOutput() ApicurioRegistrySpecConfigurationKafkaOutput
	ToApicurioRegistrySpecConfigurationKafkaOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationKafkaOutput
}

type ApicurioRegistrySpecConfigurationKafkaArgs struct {
	BootstrapServers pulumi.StringPtrInput `pulumi:"bootstrapServers"`
}

func (ApicurioRegistrySpecConfigurationKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationKafka)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationKafkaArgs) ToApicurioRegistrySpecConfigurationKafkaOutput() ApicurioRegistrySpecConfigurationKafkaOutput {
	return i.ToApicurioRegistrySpecConfigurationKafkaOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationKafkaArgs) ToApicurioRegistrySpecConfigurationKafkaOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationKafkaOutput)
}

func (i ApicurioRegistrySpecConfigurationKafkaArgs) ToApicurioRegistrySpecConfigurationKafkaPtrOutput() ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationKafkaArgs) ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationKafkaOutput).ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationKafkaPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationKafkaArgs, ApicurioRegistrySpecConfigurationKafkaPtr and ApicurioRegistrySpecConfigurationKafkaPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationKafkaPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationKafkaArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationKafkaPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationKafkaPtrOutput() ApicurioRegistrySpecConfigurationKafkaPtrOutput
	ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationKafkaPtrOutput
}

type apicurioRegistrySpecConfigurationKafkaPtrType ApicurioRegistrySpecConfigurationKafkaArgs

func ApicurioRegistrySpecConfigurationKafkaPtr(v *ApicurioRegistrySpecConfigurationKafkaArgs) ApicurioRegistrySpecConfigurationKafkaPtrInput {
	return (*apicurioRegistrySpecConfigurationKafkaPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationKafka)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationKafkaPtrType) ToApicurioRegistrySpecConfigurationKafkaPtrOutput() ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationKafkaPtrType) ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationKafkaPtrOutput)
}

type ApicurioRegistrySpecConfigurationKafkaOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationKafka)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationKafkaOutput) ToApicurioRegistrySpecConfigurationKafkaOutput() ApicurioRegistrySpecConfigurationKafkaOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationKafkaOutput) ToApicurioRegistrySpecConfigurationKafkaOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationKafkaOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationKafkaOutput) ToApicurioRegistrySpecConfigurationKafkaPtrOutput() ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationKafkaOutput) ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationKafka) *ApicurioRegistrySpecConfigurationKafka {
		return &v
	}).(ApicurioRegistrySpecConfigurationKafkaPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationKafkaOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationKafka) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationKafkaPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationKafka)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationKafkaPtrOutput) ToApicurioRegistrySpecConfigurationKafkaPtrOutput() ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationKafkaPtrOutput) ToApicurioRegistrySpecConfigurationKafkaPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationKafkaPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationKafkaPtrOutput) Elem() ApicurioRegistrySpecConfigurationKafkaOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationKafka) ApicurioRegistrySpecConfigurationKafka { return *v }).(ApicurioRegistrySpecConfigurationKafkaOutput)
}

func (o ApicurioRegistrySpecConfigurationKafkaPtrOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationKafka) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapServers
	}).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreams struct {
	ApplicationId         *string                                           `pulumi:"applicationId"`
	ApplicationServerPort *string                                           `pulumi:"applicationServerPort"`
	BootstrapServers      *string                                           `pulumi:"bootstrapServers"`
	Security              *ApicurioRegistrySpecConfigurationStreamsSecurity `pulumi:"security"`
}

// ApicurioRegistrySpecConfigurationStreamsInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsArgs and ApicurioRegistrySpecConfigurationStreamsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsArgs{...}
type ApicurioRegistrySpecConfigurationStreamsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsOutput() ApicurioRegistrySpecConfigurationStreamsOutput
	ToApicurioRegistrySpecConfigurationStreamsOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsOutput
}

type ApicurioRegistrySpecConfigurationStreamsArgs struct {
	ApplicationId         pulumi.StringPtrInput                                    `pulumi:"applicationId"`
	ApplicationServerPort pulumi.StringPtrInput                                    `pulumi:"applicationServerPort"`
	BootstrapServers      pulumi.StringPtrInput                                    `pulumi:"bootstrapServers"`
	Security              ApicurioRegistrySpecConfigurationStreamsSecurityPtrInput `pulumi:"security"`
}

func (ApicurioRegistrySpecConfigurationStreamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreams)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationStreamsArgs) ToApicurioRegistrySpecConfigurationStreamsOutput() ApicurioRegistrySpecConfigurationStreamsOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsArgs) ToApicurioRegistrySpecConfigurationStreamsOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsOutput)
}

func (i ApicurioRegistrySpecConfigurationStreamsArgs) ToApicurioRegistrySpecConfigurationStreamsPtrOutput() ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsArgs) ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsOutput).ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationStreamsPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsArgs, ApicurioRegistrySpecConfigurationStreamsPtr and ApicurioRegistrySpecConfigurationStreamsPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationStreamsPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsPtrOutput() ApicurioRegistrySpecConfigurationStreamsPtrOutput
	ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsPtrOutput
}

type apicurioRegistrySpecConfigurationStreamsPtrType ApicurioRegistrySpecConfigurationStreamsArgs

func ApicurioRegistrySpecConfigurationStreamsPtr(v *ApicurioRegistrySpecConfigurationStreamsArgs) ApicurioRegistrySpecConfigurationStreamsPtrInput {
	return (*apicurioRegistrySpecConfigurationStreamsPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationStreamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreams)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationStreamsPtrType) ToApicurioRegistrySpecConfigurationStreamsPtrOutput() ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationStreamsPtrType) ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreams)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) ToApicurioRegistrySpecConfigurationStreamsOutput() ApicurioRegistrySpecConfigurationStreamsOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) ToApicurioRegistrySpecConfigurationStreamsOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) ToApicurioRegistrySpecConfigurationStreamsPtrOutput() ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreams) *ApicurioRegistrySpecConfigurationStreams {
		return &v
	}).(ApicurioRegistrySpecConfigurationStreamsPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationStreamsOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreams) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) ApplicationServerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreams) *string { return v.ApplicationServerPort }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreams) *string { return v.BootstrapServers }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsOutput) Security() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreams) *ApicurioRegistrySpecConfigurationStreamsSecurity {
		return v.Security
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreams)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) ToApicurioRegistrySpecConfigurationStreamsPtrOutput() ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) ToApicurioRegistrySpecConfigurationStreamsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) Elem() ApicurioRegistrySpecConfigurationStreamsOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreams) ApicurioRegistrySpecConfigurationStreams { return *v }).(ApicurioRegistrySpecConfigurationStreamsOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreams) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) ApplicationServerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreams) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationServerPort
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreams) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapServers
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsPtrOutput) Security() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreams) *ApicurioRegistrySpecConfigurationStreamsSecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurity struct {
	Scram *ApicurioRegistrySpecConfigurationStreamsSecurityScram `pulumi:"scram"`
	Tls   *ApicurioRegistrySpecConfigurationStreamsSecurityTls   `pulumi:"tls"`
}

// ApicurioRegistrySpecConfigurationStreamsSecurityInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsSecurityArgs and ApicurioRegistrySpecConfigurationStreamsSecurityOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsSecurityInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsSecurityArgs{...}
type ApicurioRegistrySpecConfigurationStreamsSecurityInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsSecurityOutput() ApicurioRegistrySpecConfigurationStreamsSecurityOutput
	ToApicurioRegistrySpecConfigurationStreamsSecurityOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityOutput
}

type ApicurioRegistrySpecConfigurationStreamsSecurityArgs struct {
	Scram ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrInput `pulumi:"scram"`
	Tls   ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrInput   `pulumi:"tls"`
}

func (ApicurioRegistrySpecConfigurationStreamsSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreamsSecurity)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityOutput() ApicurioRegistrySpecConfigurationStreamsSecurityOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityOutput)
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityOutput).ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationStreamsSecurityPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsSecurityArgs, ApicurioRegistrySpecConfigurationStreamsSecurityPtr and ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsSecurityPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsSecurityArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationStreamsSecurityPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput
	ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput
}

type apicurioRegistrySpecConfigurationStreamsSecurityPtrType ApicurioRegistrySpecConfigurationStreamsSecurityArgs

func ApicurioRegistrySpecConfigurationStreamsSecurityPtr(v *ApicurioRegistrySpecConfigurationStreamsSecurityArgs) ApicurioRegistrySpecConfigurationStreamsSecurityPtrInput {
	return (*apicurioRegistrySpecConfigurationStreamsSecurityPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationStreamsSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreamsSecurity)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationStreamsSecurityPtrType) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationStreamsSecurityPtrType) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreamsSecurity)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityOutput() ApicurioRegistrySpecConfigurationStreamsSecurityOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurity) *ApicurioRegistrySpecConfigurationStreamsSecurity {
		return &v
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationStreamsSecurityOutput) Scram() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurity) *ApicurioRegistrySpecConfigurationStreamsSecurityScram {
		return v.Scram
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityOutput) Tls() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurity) *ApicurioRegistrySpecConfigurationStreamsSecurityTls {
		return v.Tls
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreamsSecurity)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput) Elem() ApicurioRegistrySpecConfigurationStreamsSecurityOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurity) ApicurioRegistrySpecConfigurationStreamsSecurity {
		return *v
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput) Scram() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurity) *ApicurioRegistrySpecConfigurationStreamsSecurityScram {
		if v == nil {
			return nil
		}
		return v.Scram
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput) Tls() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurity) *ApicurioRegistrySpecConfigurationStreamsSecurityTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityScram struct {
	Mechanism            *string `pulumi:"mechanism"`
	PasswordSecretName   *string `pulumi:"passwordSecretName"`
	TruststoreSecretName *string `pulumi:"truststoreSecretName"`
	User                 *string `pulumi:"user"`
}

// ApicurioRegistrySpecConfigurationStreamsSecurityScramInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs and ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsSecurityScramInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs{...}
type ApicurioRegistrySpecConfigurationStreamsSecurityScramInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput
	ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput
}

type ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs struct {
	Mechanism            pulumi.StringPtrInput `pulumi:"mechanism"`
	PasswordSecretName   pulumi.StringPtrInput `pulumi:"passwordSecretName"`
	TruststoreSecretName pulumi.StringPtrInput `pulumi:"truststoreSecretName"`
	User                 pulumi.StringPtrInput `pulumi:"user"`
}

func (ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreamsSecurityScram)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput)
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput).ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs, ApicurioRegistrySpecConfigurationStreamsSecurityScramPtr and ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput
	ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput
}

type apicurioRegistrySpecConfigurationStreamsSecurityScramPtrType ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs

func ApicurioRegistrySpecConfigurationStreamsSecurityScramPtr(v *ApicurioRegistrySpecConfigurationStreamsSecurityScramArgs) ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrInput {
	return (*apicurioRegistrySpecConfigurationStreamsSecurityScramPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationStreamsSecurityScramPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreamsSecurityScram)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationStreamsSecurityScramPtrType) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationStreamsSecurityScramPtrType) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreamsSecurityScram)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityScramOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityScram) *ApicurioRegistrySpecConfigurationStreamsSecurityScram {
		return &v
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) Mechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string { return v.Mechanism }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) PasswordSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string { return v.PasswordSecretName }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) TruststoreSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string { return v.TruststoreSecretName }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreamsSecurityScram)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) Elem() ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityScram) ApicurioRegistrySpecConfigurationStreamsSecurityScram {
		return *v
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) Mechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string {
		if v == nil {
			return nil
		}
		return v.Mechanism
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) PasswordSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string {
		if v == nil {
			return nil
		}
		return v.PasswordSecretName
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) TruststoreSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string {
		if v == nil {
			return nil
		}
		return v.TruststoreSecretName
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityScram) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityTls struct {
	KeystoreSecretName   *string `pulumi:"keystoreSecretName"`
	TruststoreSecretName *string `pulumi:"truststoreSecretName"`
}

// ApicurioRegistrySpecConfigurationStreamsSecurityTlsInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs and ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsSecurityTlsInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs{...}
type ApicurioRegistrySpecConfigurationStreamsSecurityTlsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput
	ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput
}

type ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs struct {
	KeystoreSecretName   pulumi.StringPtrInput `pulumi:"keystoreSecretName"`
	TruststoreSecretName pulumi.StringPtrInput `pulumi:"truststoreSecretName"`
}

func (ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreamsSecurityTls)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput)
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput).ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs, ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtr and ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput
	ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput
}

type apicurioRegistrySpecConfigurationStreamsSecurityTlsPtrType ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs

func ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtr(v *ApicurioRegistrySpecConfigurationStreamsSecurityTlsArgs) ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrInput {
	return (*apicurioRegistrySpecConfigurationStreamsSecurityTlsPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationStreamsSecurityTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreamsSecurityTls)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationStreamsSecurityTlsPtrType) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationStreamsSecurityTlsPtrType) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationStreamsSecurityTls)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityTls) *ApicurioRegistrySpecConfigurationStreamsSecurityTls {
		return &v
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) KeystoreSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityTls) *string { return v.KeystoreSecretName }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput) TruststoreSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationStreamsSecurityTls) *string { return v.TruststoreSecretName }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationStreamsSecurityTls)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput() ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput) ToApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput) Elem() ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityTls) ApicurioRegistrySpecConfigurationStreamsSecurityTls {
		return *v
	}).(ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput) KeystoreSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityTls) *string {
		if v == nil {
			return nil
		}
		return v.KeystoreSecretName
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput) TruststoreSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationStreamsSecurityTls) *string {
		if v == nil {
			return nil
		}
		return v.TruststoreSecretName
	}).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecConfigurationUi struct {
	ReadOnly *bool `pulumi:"readOnly"`
}

// ApicurioRegistrySpecConfigurationUiInput is an input type that accepts ApicurioRegistrySpecConfigurationUiArgs and ApicurioRegistrySpecConfigurationUiOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationUiInput` via:
//
//          ApicurioRegistrySpecConfigurationUiArgs{...}
type ApicurioRegistrySpecConfigurationUiInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationUiOutput() ApicurioRegistrySpecConfigurationUiOutput
	ToApicurioRegistrySpecConfigurationUiOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationUiOutput
}

type ApicurioRegistrySpecConfigurationUiArgs struct {
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (ApicurioRegistrySpecConfigurationUiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationUi)(nil)).Elem()
}

func (i ApicurioRegistrySpecConfigurationUiArgs) ToApicurioRegistrySpecConfigurationUiOutput() ApicurioRegistrySpecConfigurationUiOutput {
	return i.ToApicurioRegistrySpecConfigurationUiOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationUiArgs) ToApicurioRegistrySpecConfigurationUiOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationUiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationUiOutput)
}

func (i ApicurioRegistrySpecConfigurationUiArgs) ToApicurioRegistrySpecConfigurationUiPtrOutput() ApicurioRegistrySpecConfigurationUiPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecConfigurationUiArgs) ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationUiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationUiOutput).ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecConfigurationUiPtrInput is an input type that accepts ApicurioRegistrySpecConfigurationUiArgs, ApicurioRegistrySpecConfigurationUiPtr and ApicurioRegistrySpecConfigurationUiPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecConfigurationUiPtrInput` via:
//
//          ApicurioRegistrySpecConfigurationUiArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecConfigurationUiPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecConfigurationUiPtrOutput() ApicurioRegistrySpecConfigurationUiPtrOutput
	ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(context.Context) ApicurioRegistrySpecConfigurationUiPtrOutput
}

type apicurioRegistrySpecConfigurationUiPtrType ApicurioRegistrySpecConfigurationUiArgs

func ApicurioRegistrySpecConfigurationUiPtr(v *ApicurioRegistrySpecConfigurationUiArgs) ApicurioRegistrySpecConfigurationUiPtrInput {
	return (*apicurioRegistrySpecConfigurationUiPtrType)(v)
}

func (*apicurioRegistrySpecConfigurationUiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationUi)(nil)).Elem()
}

func (i *apicurioRegistrySpecConfigurationUiPtrType) ToApicurioRegistrySpecConfigurationUiPtrOutput() ApicurioRegistrySpecConfigurationUiPtrOutput {
	return i.ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecConfigurationUiPtrType) ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationUiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecConfigurationUiPtrOutput)
}

type ApicurioRegistrySpecConfigurationUiOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationUiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecConfigurationUi)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationUiOutput) ToApicurioRegistrySpecConfigurationUiOutput() ApicurioRegistrySpecConfigurationUiOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationUiOutput) ToApicurioRegistrySpecConfigurationUiOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationUiOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationUiOutput) ToApicurioRegistrySpecConfigurationUiPtrOutput() ApicurioRegistrySpecConfigurationUiPtrOutput {
	return o.ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecConfigurationUiOutput) ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationUiPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationUi) *ApicurioRegistrySpecConfigurationUi {
		return &v
	}).(ApicurioRegistrySpecConfigurationUiPtrOutput)
}
func (o ApicurioRegistrySpecConfigurationUiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecConfigurationUi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type ApicurioRegistrySpecConfigurationUiPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecConfigurationUiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecConfigurationUi)(nil)).Elem()
}

func (o ApicurioRegistrySpecConfigurationUiPtrOutput) ToApicurioRegistrySpecConfigurationUiPtrOutput() ApicurioRegistrySpecConfigurationUiPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationUiPtrOutput) ToApicurioRegistrySpecConfigurationUiPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecConfigurationUiPtrOutput {
	return o
}

func (o ApicurioRegistrySpecConfigurationUiPtrOutput) Elem() ApicurioRegistrySpecConfigurationUiOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationUi) ApicurioRegistrySpecConfigurationUi { return *v }).(ApicurioRegistrySpecConfigurationUiOutput)
}

func (o ApicurioRegistrySpecConfigurationUiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecConfigurationUi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

type ApicurioRegistrySpecDeployment struct {
	// Affinity is a group of affinity scheduling rules.
	Affinity    *ApicurioRegistrySpecDeploymentAffinity     `pulumi:"affinity"`
	Host        *string                                     `pulumi:"host"`
	Replicas    *int                                        `pulumi:"replicas"`
	Tolerations []ApicurioRegistrySpecDeploymentTolerations `pulumi:"tolerations"`
}

// ApicurioRegistrySpecDeploymentInput is an input type that accepts ApicurioRegistrySpecDeploymentArgs and ApicurioRegistrySpecDeploymentOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentInput` via:
//
//          ApicurioRegistrySpecDeploymentArgs{...}
type ApicurioRegistrySpecDeploymentInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentOutput() ApicurioRegistrySpecDeploymentOutput
	ToApicurioRegistrySpecDeploymentOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentOutput
}

type ApicurioRegistrySpecDeploymentArgs struct {
	// Affinity is a group of affinity scheduling rules.
	Affinity    ApicurioRegistrySpecDeploymentAffinityPtrInput      `pulumi:"affinity"`
	Host        pulumi.StringPtrInput                               `pulumi:"host"`
	Replicas    pulumi.IntPtrInput                                  `pulumi:"replicas"`
	Tolerations ApicurioRegistrySpecDeploymentTolerationsArrayInput `pulumi:"tolerations"`
}

func (ApicurioRegistrySpecDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeployment)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentArgs) ToApicurioRegistrySpecDeploymentOutput() ApicurioRegistrySpecDeploymentOutput {
	return i.ToApicurioRegistrySpecDeploymentOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentArgs) ToApicurioRegistrySpecDeploymentOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentOutput)
}

func (i ApicurioRegistrySpecDeploymentArgs) ToApicurioRegistrySpecDeploymentPtrOutput() ApicurioRegistrySpecDeploymentPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentArgs) ToApicurioRegistrySpecDeploymentPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentOutput).ToApicurioRegistrySpecDeploymentPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentArgs, ApicurioRegistrySpecDeploymentPtr and ApicurioRegistrySpecDeploymentPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentPtrOutput() ApicurioRegistrySpecDeploymentPtrOutput
	ToApicurioRegistrySpecDeploymentPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentPtrOutput
}

type apicurioRegistrySpecDeploymentPtrType ApicurioRegistrySpecDeploymentArgs

func ApicurioRegistrySpecDeploymentPtr(v *ApicurioRegistrySpecDeploymentArgs) ApicurioRegistrySpecDeploymentPtrInput {
	return (*apicurioRegistrySpecDeploymentPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeployment)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentPtrType) ToApicurioRegistrySpecDeploymentPtrOutput() ApicurioRegistrySpecDeploymentPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentPtrType) ToApicurioRegistrySpecDeploymentPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentPtrOutput)
}

type ApicurioRegistrySpecDeploymentOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeployment)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentOutput) ToApicurioRegistrySpecDeploymentOutput() ApicurioRegistrySpecDeploymentOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentOutput) ToApicurioRegistrySpecDeploymentOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentOutput) ToApicurioRegistrySpecDeploymentPtrOutput() ApicurioRegistrySpecDeploymentPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentOutput) ToApicurioRegistrySpecDeploymentPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeployment) *ApicurioRegistrySpecDeployment {
		return &v
	}).(ApicurioRegistrySpecDeploymentPtrOutput)
}

// Affinity is a group of affinity scheduling rules.
func (o ApicurioRegistrySpecDeploymentOutput) Affinity() ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeployment) *ApicurioRegistrySpecDeploymentAffinity { return v.Affinity }).(ApicurioRegistrySpecDeploymentAffinityPtrOutput)
}

func (o ApicurioRegistrySpecDeploymentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeployment) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecDeploymentOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeployment) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o ApicurioRegistrySpecDeploymentOutput) Tolerations() ApicurioRegistrySpecDeploymentTolerationsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeployment) []ApicurioRegistrySpecDeploymentTolerations {
		return v.Tolerations
	}).(ApicurioRegistrySpecDeploymentTolerationsArrayOutput)
}

type ApicurioRegistrySpecDeploymentPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeployment)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentPtrOutput) ToApicurioRegistrySpecDeploymentPtrOutput() ApicurioRegistrySpecDeploymentPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentPtrOutput) ToApicurioRegistrySpecDeploymentPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentPtrOutput) Elem() ApicurioRegistrySpecDeploymentOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeployment) ApicurioRegistrySpecDeployment { return *v }).(ApicurioRegistrySpecDeploymentOutput)
}

// Affinity is a group of affinity scheduling rules.
func (o ApicurioRegistrySpecDeploymentPtrOutput) Affinity() ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeployment) *ApicurioRegistrySpecDeploymentAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(ApicurioRegistrySpecDeploymentAffinityPtrOutput)
}

func (o ApicurioRegistrySpecDeploymentPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeployment) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistrySpecDeploymentPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeployment) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o ApicurioRegistrySpecDeploymentPtrOutput) Tolerations() ApicurioRegistrySpecDeploymentTolerationsArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeployment) []ApicurioRegistrySpecDeploymentTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(ApicurioRegistrySpecDeploymentTolerationsArrayOutput)
}

// Affinity is a group of affinity scheduling rules.
type ApicurioRegistrySpecDeploymentAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *ApicurioRegistrySpecDeploymentAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *ApicurioRegistrySpecDeploymentAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// ApicurioRegistrySpecDeploymentAffinityInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityArgs and ApicurioRegistrySpecDeploymentAffinityOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityArgs{...}
type ApicurioRegistrySpecDeploymentAffinityInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityOutput() ApicurioRegistrySpecDeploymentAffinityOutput
	ToApicurioRegistrySpecDeploymentAffinityOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityOutput
}

// Affinity is a group of affinity scheduling rules.
type ApicurioRegistrySpecDeploymentAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (ApicurioRegistrySpecDeploymentAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinity)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityOutput() ApicurioRegistrySpecDeploymentAffinityOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityOutput).ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityArgs, ApicurioRegistrySpecDeploymentAffinityPtr and ApicurioRegistrySpecDeploymentAffinityPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPtrType ApicurioRegistrySpecDeploymentAffinityArgs

func ApicurioRegistrySpecDeploymentAffinityPtr(v *ApicurioRegistrySpecDeploymentAffinityArgs) ApicurioRegistrySpecDeploymentAffinityPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinity)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPtrOutput)
}

// Affinity is a group of affinity scheduling rules.
type ApicurioRegistrySpecDeploymentAffinityOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityOutput() ApicurioRegistrySpecDeploymentAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinity {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o ApicurioRegistrySpecDeploymentAffinityOutput) NodeAffinity() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinityNodeAffinity {
		return v.NodeAffinity
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o ApicurioRegistrySpecDeploymentAffinityOutput) PodAffinity() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinityPodAffinity {
		return v.PodAffinity
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o ApicurioRegistrySpecDeploymentAffinityOutput) PodAntiAffinity() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinity) ApicurioRegistrySpecDeploymentAffinity { return *v }).(ApicurioRegistrySpecDeploymentAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o ApicurioRegistrySpecDeploymentAffinityPtrOutput) NodeAffinity() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o ApicurioRegistrySpecDeploymentAffinityPtrOutput) PodAffinity() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o ApicurioRegistrySpecDeploymentAffinityPtrOutput) PodAntiAffinity() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinity) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinity)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput).ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs, ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtr and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityNodeAffinityPtrType ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs

func ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtr(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinityArgs) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityNodeAffinityPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityNodeAffinity)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityNodeAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityNodeAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinity) *ApicurioRegistrySpecDeploymentAffinityNodeAffinity {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinity) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinity) *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityNodeAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinity) ApicurioRegistrySpecDeploymentAffinityNodeAffinity {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinity) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinity) *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ApicurioRegistrySpecDeploymentAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinity)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput).ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs, ApicurioRegistrySpecDeploymentAffinityPodAffinityPtr and ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPodAffinityPtrType ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs

func ApicurioRegistrySpecDeploymentAffinityPodAffinityPtr(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityArgs) ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPodAffinityPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAffinity)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinity) *ApicurioRegistrySpecDeploymentAffinityPodAffinity {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinity) ApicurioRegistrySpecDeploymentAffinityPodAffinity {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput).ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs, ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtr and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrType ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs

func ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtr(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityArgs) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinity) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type apicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*apicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*apicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ApicurioRegistrySpecDeploymentTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// ApicurioRegistrySpecDeploymentTolerationsInput is an input type that accepts ApicurioRegistrySpecDeploymentTolerationsArgs and ApicurioRegistrySpecDeploymentTolerationsOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentTolerationsInput` via:
//
//          ApicurioRegistrySpecDeploymentTolerationsArgs{...}
type ApicurioRegistrySpecDeploymentTolerationsInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentTolerationsOutput() ApicurioRegistrySpecDeploymentTolerationsOutput
	ToApicurioRegistrySpecDeploymentTolerationsOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ApicurioRegistrySpecDeploymentTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApicurioRegistrySpecDeploymentTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentTolerations)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentTolerationsArgs) ToApicurioRegistrySpecDeploymentTolerationsOutput() ApicurioRegistrySpecDeploymentTolerationsOutput {
	return i.ToApicurioRegistrySpecDeploymentTolerationsOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentTolerationsArgs) ToApicurioRegistrySpecDeploymentTolerationsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentTolerationsOutput)
}

// ApicurioRegistrySpecDeploymentTolerationsArrayInput is an input type that accepts ApicurioRegistrySpecDeploymentTolerationsArray and ApicurioRegistrySpecDeploymentTolerationsArrayOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecDeploymentTolerationsArrayInput` via:
//
//          ApicurioRegistrySpecDeploymentTolerationsArray{ ApicurioRegistrySpecDeploymentTolerationsArgs{...} }
type ApicurioRegistrySpecDeploymentTolerationsArrayInput interface {
	pulumi.Input

	ToApicurioRegistrySpecDeploymentTolerationsArrayOutput() ApicurioRegistrySpecDeploymentTolerationsArrayOutput
	ToApicurioRegistrySpecDeploymentTolerationsArrayOutputWithContext(context.Context) ApicurioRegistrySpecDeploymentTolerationsArrayOutput
}

type ApicurioRegistrySpecDeploymentTolerationsArray []ApicurioRegistrySpecDeploymentTolerationsInput

func (ApicurioRegistrySpecDeploymentTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentTolerations)(nil)).Elem()
}

func (i ApicurioRegistrySpecDeploymentTolerationsArray) ToApicurioRegistrySpecDeploymentTolerationsArrayOutput() ApicurioRegistrySpecDeploymentTolerationsArrayOutput {
	return i.ToApicurioRegistrySpecDeploymentTolerationsArrayOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecDeploymentTolerationsArray) ToApicurioRegistrySpecDeploymentTolerationsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecDeploymentTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ApicurioRegistrySpecDeploymentTolerationsOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecDeploymentTolerations)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentTolerationsOutput) ToApicurioRegistrySpecDeploymentTolerationsOutput() ApicurioRegistrySpecDeploymentTolerationsOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentTolerationsOutput) ToApicurioRegistrySpecDeploymentTolerationsOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o ApicurioRegistrySpecDeploymentTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o ApicurioRegistrySpecDeploymentTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
func (o ApicurioRegistrySpecDeploymentTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o ApicurioRegistrySpecDeploymentTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o ApicurioRegistrySpecDeploymentTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecDeploymentTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecDeploymentTolerationsArrayOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecDeploymentTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApicurioRegistrySpecDeploymentTolerations)(nil)).Elem()
}

func (o ApicurioRegistrySpecDeploymentTolerationsArrayOutput) ToApicurioRegistrySpecDeploymentTolerationsArrayOutput() ApicurioRegistrySpecDeploymentTolerationsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentTolerationsArrayOutput) ToApicurioRegistrySpecDeploymentTolerationsArrayOutputWithContext(ctx context.Context) ApicurioRegistrySpecDeploymentTolerationsArrayOutput {
	return o
}

func (o ApicurioRegistrySpecDeploymentTolerationsArrayOutput) Index(i pulumi.IntInput) ApicurioRegistrySpecDeploymentTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApicurioRegistrySpecDeploymentTolerations {
		return vs[0].([]ApicurioRegistrySpecDeploymentTolerations)[vs[1].(int)]
	}).(ApicurioRegistrySpecDeploymentTolerationsOutput)
}

type ApicurioRegistrySpecImage struct {
	// Registry string `json:"registry,omitempty"` Version  string `json:"version,omitempty"` Override string `json:"override,omitempty"`
	Name *string `pulumi:"name"`
}

// ApicurioRegistrySpecImageInput is an input type that accepts ApicurioRegistrySpecImageArgs and ApicurioRegistrySpecImageOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecImageInput` via:
//
//          ApicurioRegistrySpecImageArgs{...}
type ApicurioRegistrySpecImageInput interface {
	pulumi.Input

	ToApicurioRegistrySpecImageOutput() ApicurioRegistrySpecImageOutput
	ToApicurioRegistrySpecImageOutputWithContext(context.Context) ApicurioRegistrySpecImageOutput
}

type ApicurioRegistrySpecImageArgs struct {
	// Registry string `json:"registry,omitempty"` Version  string `json:"version,omitempty"` Override string `json:"override,omitempty"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApicurioRegistrySpecImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecImage)(nil)).Elem()
}

func (i ApicurioRegistrySpecImageArgs) ToApicurioRegistrySpecImageOutput() ApicurioRegistrySpecImageOutput {
	return i.ToApicurioRegistrySpecImageOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecImageArgs) ToApicurioRegistrySpecImageOutputWithContext(ctx context.Context) ApicurioRegistrySpecImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecImageOutput)
}

func (i ApicurioRegistrySpecImageArgs) ToApicurioRegistrySpecImagePtrOutput() ApicurioRegistrySpecImagePtrOutput {
	return i.ToApicurioRegistrySpecImagePtrOutputWithContext(context.Background())
}

func (i ApicurioRegistrySpecImageArgs) ToApicurioRegistrySpecImagePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecImageOutput).ToApicurioRegistrySpecImagePtrOutputWithContext(ctx)
}

// ApicurioRegistrySpecImagePtrInput is an input type that accepts ApicurioRegistrySpecImageArgs, ApicurioRegistrySpecImagePtr and ApicurioRegistrySpecImagePtrOutput values.
// You can construct a concrete instance of `ApicurioRegistrySpecImagePtrInput` via:
//
//          ApicurioRegistrySpecImageArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistrySpecImagePtrInput interface {
	pulumi.Input

	ToApicurioRegistrySpecImagePtrOutput() ApicurioRegistrySpecImagePtrOutput
	ToApicurioRegistrySpecImagePtrOutputWithContext(context.Context) ApicurioRegistrySpecImagePtrOutput
}

type apicurioRegistrySpecImagePtrType ApicurioRegistrySpecImageArgs

func ApicurioRegistrySpecImagePtr(v *ApicurioRegistrySpecImageArgs) ApicurioRegistrySpecImagePtrInput {
	return (*apicurioRegistrySpecImagePtrType)(v)
}

func (*apicurioRegistrySpecImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecImage)(nil)).Elem()
}

func (i *apicurioRegistrySpecImagePtrType) ToApicurioRegistrySpecImagePtrOutput() ApicurioRegistrySpecImagePtrOutput {
	return i.ToApicurioRegistrySpecImagePtrOutputWithContext(context.Background())
}

func (i *apicurioRegistrySpecImagePtrType) ToApicurioRegistrySpecImagePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistrySpecImagePtrOutput)
}

type ApicurioRegistrySpecImageOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistrySpecImage)(nil)).Elem()
}

func (o ApicurioRegistrySpecImageOutput) ToApicurioRegistrySpecImageOutput() ApicurioRegistrySpecImageOutput {
	return o
}

func (o ApicurioRegistrySpecImageOutput) ToApicurioRegistrySpecImageOutputWithContext(ctx context.Context) ApicurioRegistrySpecImageOutput {
	return o
}

func (o ApicurioRegistrySpecImageOutput) ToApicurioRegistrySpecImagePtrOutput() ApicurioRegistrySpecImagePtrOutput {
	return o.ToApicurioRegistrySpecImagePtrOutputWithContext(context.Background())
}

func (o ApicurioRegistrySpecImageOutput) ToApicurioRegistrySpecImagePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecImagePtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecImage) *ApicurioRegistrySpecImage {
		return &v
	}).(ApicurioRegistrySpecImagePtrOutput)
}

// Registry string `json:"registry,omitempty"` Version  string `json:"version,omitempty"` Override string `json:"override,omitempty"`
func (o ApicurioRegistrySpecImageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistrySpecImage) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApicurioRegistrySpecImagePtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistrySpecImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistrySpecImage)(nil)).Elem()
}

func (o ApicurioRegistrySpecImagePtrOutput) ToApicurioRegistrySpecImagePtrOutput() ApicurioRegistrySpecImagePtrOutput {
	return o
}

func (o ApicurioRegistrySpecImagePtrOutput) ToApicurioRegistrySpecImagePtrOutputWithContext(ctx context.Context) ApicurioRegistrySpecImagePtrOutput {
	return o
}

func (o ApicurioRegistrySpecImagePtrOutput) Elem() ApicurioRegistrySpecImageOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecImage) ApicurioRegistrySpecImage { return *v }).(ApicurioRegistrySpecImageOutput)
}

// Registry string `json:"registry,omitempty"` Version  string `json:"version,omitempty"` Override string `json:"override,omitempty"`
func (o ApicurioRegistrySpecImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistrySpecImage) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ApicurioRegistryStatus defines the observed state of ApicurioRegistry
type ApicurioRegistryStatus struct {
	DeploymentName *string `pulumi:"deploymentName"`
	Host           *string `pulumi:"host"`
	Image          *string `pulumi:"image"`
	IngressName    *string `pulumi:"ingressName"`
	ReplicaCount   *int    `pulumi:"replicaCount"`
	ServiceName    *string `pulumi:"serviceName"`
}

// ApicurioRegistryStatusInput is an input type that accepts ApicurioRegistryStatusArgs and ApicurioRegistryStatusOutput values.
// You can construct a concrete instance of `ApicurioRegistryStatusInput` via:
//
//          ApicurioRegistryStatusArgs{...}
type ApicurioRegistryStatusInput interface {
	pulumi.Input

	ToApicurioRegistryStatusOutput() ApicurioRegistryStatusOutput
	ToApicurioRegistryStatusOutputWithContext(context.Context) ApicurioRegistryStatusOutput
}

// ApicurioRegistryStatus defines the observed state of ApicurioRegistry
type ApicurioRegistryStatusArgs struct {
	DeploymentName pulumi.StringPtrInput `pulumi:"deploymentName"`
	Host           pulumi.StringPtrInput `pulumi:"host"`
	Image          pulumi.StringPtrInput `pulumi:"image"`
	IngressName    pulumi.StringPtrInput `pulumi:"ingressName"`
	ReplicaCount   pulumi.IntPtrInput    `pulumi:"replicaCount"`
	ServiceName    pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (ApicurioRegistryStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistryStatus)(nil)).Elem()
}

func (i ApicurioRegistryStatusArgs) ToApicurioRegistryStatusOutput() ApicurioRegistryStatusOutput {
	return i.ToApicurioRegistryStatusOutputWithContext(context.Background())
}

func (i ApicurioRegistryStatusArgs) ToApicurioRegistryStatusOutputWithContext(ctx context.Context) ApicurioRegistryStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistryStatusOutput)
}

func (i ApicurioRegistryStatusArgs) ToApicurioRegistryStatusPtrOutput() ApicurioRegistryStatusPtrOutput {
	return i.ToApicurioRegistryStatusPtrOutputWithContext(context.Background())
}

func (i ApicurioRegistryStatusArgs) ToApicurioRegistryStatusPtrOutputWithContext(ctx context.Context) ApicurioRegistryStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistryStatusOutput).ToApicurioRegistryStatusPtrOutputWithContext(ctx)
}

// ApicurioRegistryStatusPtrInput is an input type that accepts ApicurioRegistryStatusArgs, ApicurioRegistryStatusPtr and ApicurioRegistryStatusPtrOutput values.
// You can construct a concrete instance of `ApicurioRegistryStatusPtrInput` via:
//
//          ApicurioRegistryStatusArgs{...}
//
//  or:
//
//          nil
type ApicurioRegistryStatusPtrInput interface {
	pulumi.Input

	ToApicurioRegistryStatusPtrOutput() ApicurioRegistryStatusPtrOutput
	ToApicurioRegistryStatusPtrOutputWithContext(context.Context) ApicurioRegistryStatusPtrOutput
}

type apicurioRegistryStatusPtrType ApicurioRegistryStatusArgs

func ApicurioRegistryStatusPtr(v *ApicurioRegistryStatusArgs) ApicurioRegistryStatusPtrInput {
	return (*apicurioRegistryStatusPtrType)(v)
}

func (*apicurioRegistryStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistryStatus)(nil)).Elem()
}

func (i *apicurioRegistryStatusPtrType) ToApicurioRegistryStatusPtrOutput() ApicurioRegistryStatusPtrOutput {
	return i.ToApicurioRegistryStatusPtrOutputWithContext(context.Background())
}

func (i *apicurioRegistryStatusPtrType) ToApicurioRegistryStatusPtrOutputWithContext(ctx context.Context) ApicurioRegistryStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicurioRegistryStatusPtrOutput)
}

// ApicurioRegistryStatus defines the observed state of ApicurioRegistry
type ApicurioRegistryStatusOutput struct{ *pulumi.OutputState }

func (ApicurioRegistryStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicurioRegistryStatus)(nil)).Elem()
}

func (o ApicurioRegistryStatusOutput) ToApicurioRegistryStatusOutput() ApicurioRegistryStatusOutput {
	return o
}

func (o ApicurioRegistryStatusOutput) ToApicurioRegistryStatusOutputWithContext(ctx context.Context) ApicurioRegistryStatusOutput {
	return o
}

func (o ApicurioRegistryStatusOutput) ToApicurioRegistryStatusPtrOutput() ApicurioRegistryStatusPtrOutput {
	return o.ToApicurioRegistryStatusPtrOutputWithContext(context.Background())
}

func (o ApicurioRegistryStatusOutput) ToApicurioRegistryStatusPtrOutputWithContext(ctx context.Context) ApicurioRegistryStatusPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *ApicurioRegistryStatus {
		return &v
	}).(ApicurioRegistryStatusPtrOutput)
}
func (o ApicurioRegistryStatusOutput) DeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *string { return v.DeploymentName }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusOutput) IngressName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *string { return v.IngressName }).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

func (o ApicurioRegistryStatusOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicurioRegistryStatus) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type ApicurioRegistryStatusPtrOutput struct{ *pulumi.OutputState }

func (ApicurioRegistryStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApicurioRegistryStatus)(nil)).Elem()
}

func (o ApicurioRegistryStatusPtrOutput) ToApicurioRegistryStatusPtrOutput() ApicurioRegistryStatusPtrOutput {
	return o
}

func (o ApicurioRegistryStatusPtrOutput) ToApicurioRegistryStatusPtrOutputWithContext(ctx context.Context) ApicurioRegistryStatusPtrOutput {
	return o
}

func (o ApicurioRegistryStatusPtrOutput) Elem() ApicurioRegistryStatusOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) ApicurioRegistryStatus { return *v }).(ApicurioRegistryStatusOutput)
}

func (o ApicurioRegistryStatusPtrOutput) DeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentName
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusPtrOutput) IngressName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) *string {
		if v == nil {
			return nil
		}
		return v.IngressName
	}).(pulumi.StringPtrOutput)
}

func (o ApicurioRegistryStatusPtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

func (o ApicurioRegistryStatusPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApicurioRegistryStatus) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApicurioRegistryTypeOutput{})
	pulumi.RegisterOutputType(ApicurioRegistryMetadataOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationDataSourceOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationDataSourcePtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationInfinispanOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationInfinispanPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationKafkaOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationKafkaPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsSecurityOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsSecurityPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsSecurityScramOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsSecurityScramPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsSecurityTlsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationStreamsSecurityTlsPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationUiOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecConfigurationUiPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentTolerationsOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecDeploymentTolerationsArrayOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecImageOutput{})
	pulumi.RegisterOutputType(ApicurioRegistrySpecImagePtrOutput{})
	pulumi.RegisterOutputType(ApicurioRegistryStatusOutput{})
	pulumi.RegisterOutputType(ApicurioRegistryStatusPtrOutput{})
}
