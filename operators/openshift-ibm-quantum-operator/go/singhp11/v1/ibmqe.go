// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Ibmqe is the Schema for the ibmqes API
type Ibmqe struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// IbmqeSpec defines the desired state of Ibmqe
	Spec pulumi.MapOutput `pulumi:"spec"`
	// IbmqeStatus defines the observed state of Ibmqe
	Status pulumi.MapOutput `pulumi:"status"`
}

// NewIbmqe registers a new resource with the given unique name, arguments, and options.
func NewIbmqe(ctx *pulumi.Context,
	name string, args *IbmqeArgs, opts ...pulumi.ResourceOption) (*Ibmqe, error) {
	if args == nil {
		args = &IbmqeArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("singhp11.io/v1")
	args.Kind = pulumi.StringPtr("Ibmqe")
	var resource Ibmqe
	err := ctx.RegisterResource("kubernetes:singhp11.io/v1:Ibmqe", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIbmqe gets an existing Ibmqe resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIbmqe(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IbmqeState, opts ...pulumi.ResourceOption) (*Ibmqe, error) {
	var resource Ibmqe
	err := ctx.ReadResource("kubernetes:singhp11.io/v1:Ibmqe", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ibmqe resources.
type ibmqeState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IbmqeSpec defines the desired state of Ibmqe
	Spec map[string]interface{} `pulumi:"spec"`
	// IbmqeStatus defines the observed state of Ibmqe
	Status map[string]interface{} `pulumi:"status"`
}

type IbmqeState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// IbmqeSpec defines the desired state of Ibmqe
	Spec pulumi.MapInput
	// IbmqeStatus defines the observed state of Ibmqe
	Status pulumi.MapInput
}

func (IbmqeState) ElementType() reflect.Type {
	return reflect.TypeOf((*ibmqeState)(nil)).Elem()
}

type ibmqeArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IbmqeSpec defines the desired state of Ibmqe
	Spec map[string]interface{} `pulumi:"spec"`
	// IbmqeStatus defines the observed state of Ibmqe
	Status map[string]interface{} `pulumi:"status"`
}

// The set of arguments for constructing a Ibmqe resource.
type IbmqeArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// IbmqeSpec defines the desired state of Ibmqe
	Spec pulumi.MapInput
	// IbmqeStatus defines the observed state of Ibmqe
	Status pulumi.MapInput
}

func (IbmqeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ibmqeArgs)(nil)).Elem()
}
