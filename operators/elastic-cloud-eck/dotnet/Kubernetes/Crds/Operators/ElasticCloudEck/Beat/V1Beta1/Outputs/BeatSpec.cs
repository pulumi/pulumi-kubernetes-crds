// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1
{

    [OutputType]
    public sealed class BeatSpec
    {
        /// <summary>
        /// Config holds the Beat configuration. At most one of [`Config`, `ConfigRef`] can be specified.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Config;
        /// <summary>
        /// ConfigRef contains a reference to an existing Kubernetes Secret holding the Beat configuration. Beat settings must be specified as yaml, under a single "beat.yml" entry. At most one of [`Config`, `ConfigRef`] can be specified.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecConfigRef ConfigRef;
        /// <summary>
        /// DaemonSet specifies the Beat should be deployed as a DaemonSet, and allows providing its spec. Cannot be used along with `deployment`. If both are absent a default for the Type is used.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecDaemonSet DaemonSet;
        /// <summary>
        /// Deployment specifies the Beat should be deployed as a Deployment, and allows providing its spec. Cannot be used along with `daemonSet`. If both are absent a default for the Type is used.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecDeployment Deployment;
        /// <summary>
        /// ElasticsearchRef is a reference to an Elasticsearch cluster running in the same Kubernetes cluster.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecElasticsearchRef ElasticsearchRef;
        /// <summary>
        /// Image is the Beat Docker image to deploy. Version and Type have to match the Beat in the image.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// KibanaRef is a reference to a Kibana instance running in the same Kubernetes cluster. It allows automatic setup of dashboards and visualizations.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecKibanaRef KibanaRef;
        /// <summary>
        /// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Beat. Secrets data can be then referenced in the Beat config using the Secret's keys or as specified in `Entries` field of each SecureSetting.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecSecureSettings> SecureSettings;
        /// <summary>
        /// ServiceAccountName is used to check access from the current resource to Elasticsearch resource in a different namespace. Can only be used if ECK is enforcing RBAC on references.
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// Type is the type of the Beat to deploy (filebeat, metricbeat, heartbeat, auditbeat, journalbeat, packetbeat, etc.). Any string can be used, but well-known types will have the image field defaulted and have the appropriate Elasticsearch roles created automatically. It also allows for dashboard setup when combined with a `KibanaRef`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the Beat.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private BeatSpec(
            ImmutableDictionary<string, object> config,

            Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecConfigRef configRef,

            Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecDaemonSet daemonSet,

            Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecDeployment deployment,

            Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecElasticsearchRef elasticsearchRef,

            string image,

            Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecKibanaRef kibanaRef,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Beat.V1Beta1.BeatSpecSecureSettings> secureSettings,

            string serviceAccountName,

            string type,

            string version)
        {
            Config = config;
            ConfigRef = configRef;
            DaemonSet = daemonSet;
            Deployment = deployment;
            ElasticsearchRef = elasticsearchRef;
            Image = image;
            KibanaRef = kibanaRef;
            SecureSettings = secureSettings;
            ServiceAccountName = serviceAccountName;
            Type = type;
            Version = version;
        }
    }
}
