// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Elasticsearch represents an Elasticsearch resource in a Kubernetes cluster.
type ElasticsearchType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ElasticsearchSpec holds the specification of an Elasticsearch cluster.
	Spec *ElasticsearchSpec `pulumi:"spec"`
	// ElasticsearchStatus defines the observed state of Elasticsearch
	Status *ElasticsearchStatus `pulumi:"status"`
}

// ElasticsearchTypeInput is an input type that accepts ElasticsearchTypeArgs and ElasticsearchTypeOutput values.
// You can construct a concrete instance of `ElasticsearchTypeInput` via:
//
//          ElasticsearchTypeArgs{...}
type ElasticsearchTypeInput interface {
	pulumi.Input

	ToElasticsearchTypeOutput() ElasticsearchTypeOutput
	ToElasticsearchTypeOutputWithContext(context.Context) ElasticsearchTypeOutput
}

// Elasticsearch represents an Elasticsearch resource in a Kubernetes cluster.
type ElasticsearchTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ElasticsearchSpec holds the specification of an Elasticsearch cluster.
	Spec ElasticsearchSpecPtrInput `pulumi:"spec"`
	// ElasticsearchStatus defines the observed state of Elasticsearch
	Status ElasticsearchStatusPtrInput `pulumi:"status"`
}

func (ElasticsearchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchType)(nil)).Elem()
}

func (i ElasticsearchTypeArgs) ToElasticsearchTypeOutput() ElasticsearchTypeOutput {
	return i.ToElasticsearchTypeOutputWithContext(context.Background())
}

func (i ElasticsearchTypeArgs) ToElasticsearchTypeOutputWithContext(ctx context.Context) ElasticsearchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchTypeOutput)
}

// Elasticsearch represents an Elasticsearch resource in a Kubernetes cluster.
type ElasticsearchTypeOutput struct{ *pulumi.OutputState }

func (ElasticsearchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchType)(nil)).Elem()
}

func (o ElasticsearchTypeOutput) ToElasticsearchTypeOutput() ElasticsearchTypeOutput {
	return o
}

func (o ElasticsearchTypeOutput) ToElasticsearchTypeOutputWithContext(ctx context.Context) ElasticsearchTypeOutput {
	return o
}

func (o ElasticsearchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ElasticsearchSpec holds the specification of an Elasticsearch cluster.
func (o ElasticsearchTypeOutput) Spec() ElasticsearchSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *ElasticsearchSpec { return v.Spec }).(ElasticsearchSpecPtrOutput)
}

// ElasticsearchStatus defines the observed state of Elasticsearch
func (o ElasticsearchTypeOutput) Status() ElasticsearchStatusPtrOutput {
	return o.ApplyT(func(v ElasticsearchType) *ElasticsearchStatus { return v.Status }).(ElasticsearchStatusPtrOutput)
}

type ElasticsearchMetadata struct {
}

// ElasticsearchMetadataInput is an input type that accepts ElasticsearchMetadataArgs and ElasticsearchMetadataOutput values.
// You can construct a concrete instance of `ElasticsearchMetadataInput` via:
//
//          ElasticsearchMetadataArgs{...}
type ElasticsearchMetadataInput interface {
	pulumi.Input

	ToElasticsearchMetadataOutput() ElasticsearchMetadataOutput
	ToElasticsearchMetadataOutputWithContext(context.Context) ElasticsearchMetadataOutput
}

type ElasticsearchMetadataArgs struct {
}

func (ElasticsearchMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchMetadata)(nil)).Elem()
}

func (i ElasticsearchMetadataArgs) ToElasticsearchMetadataOutput() ElasticsearchMetadataOutput {
	return i.ToElasticsearchMetadataOutputWithContext(context.Background())
}

func (i ElasticsearchMetadataArgs) ToElasticsearchMetadataOutputWithContext(ctx context.Context) ElasticsearchMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchMetadataOutput)
}

type ElasticsearchMetadataOutput struct{ *pulumi.OutputState }

func (ElasticsearchMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchMetadata)(nil)).Elem()
}

func (o ElasticsearchMetadataOutput) ToElasticsearchMetadataOutput() ElasticsearchMetadataOutput {
	return o
}

func (o ElasticsearchMetadataOutput) ToElasticsearchMetadataOutputWithContext(ctx context.Context) ElasticsearchMetadataOutput {
	return o
}

// ElasticsearchSpec holds the specification of an Elasticsearch cluster.
type ElasticsearchSpec struct {
	// Auth contains user authentication and authorization security settings for Elasticsearch.
	Auth *ElasticsearchSpecAuth `pulumi:"auth"`
	// HTTP holds HTTP layer settings for Elasticsearch.
	Http *ElasticsearchSpecHttp `pulumi:"http"`
	// Image is the Elasticsearch Docker image to deploy.
	Image *string `pulumi:"image"`
	// NodeSets allow specifying groups of Elasticsearch nodes sharing the same configuration and Pod templates.
	NodeSets []ElasticsearchSpecNodeSets `pulumi:"nodeSets"`
	// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
	PodDisruptionBudget *ElasticsearchSpecPodDisruptionBudget `pulumi:"podDisruptionBudget"`
	// RemoteClusters enables you to establish uni-directional connections to a remote Elasticsearch cluster.
	RemoteClusters []ElasticsearchSpecRemoteClusters `pulumi:"remoteClusters"`
	// SecureSettings is a list of references to Kubernetes secrets containing sensitive configuration options for Elasticsearch.
	SecureSettings []ElasticsearchSpecSecureSettings `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to a resource (eg. a remote Elasticsearch cluster) in a different namespace. Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// Transport holds transport layer settings for Elasticsearch.
	Transport *ElasticsearchSpecTransport `pulumi:"transport"`
	// UpdateStrategy specifies how updates to the cluster should be performed.
	UpdateStrategy *ElasticsearchSpecUpdateStrategy `pulumi:"updateStrategy"`
	// Version of Elasticsearch.
	Version string `pulumi:"version"`
}

// ElasticsearchSpecInput is an input type that accepts ElasticsearchSpecArgs and ElasticsearchSpecOutput values.
// You can construct a concrete instance of `ElasticsearchSpecInput` via:
//
//          ElasticsearchSpecArgs{...}
type ElasticsearchSpecInput interface {
	pulumi.Input

	ToElasticsearchSpecOutput() ElasticsearchSpecOutput
	ToElasticsearchSpecOutputWithContext(context.Context) ElasticsearchSpecOutput
}

// ElasticsearchSpec holds the specification of an Elasticsearch cluster.
type ElasticsearchSpecArgs struct {
	// Auth contains user authentication and authorization security settings for Elasticsearch.
	Auth ElasticsearchSpecAuthPtrInput `pulumi:"auth"`
	// HTTP holds HTTP layer settings for Elasticsearch.
	Http ElasticsearchSpecHttpPtrInput `pulumi:"http"`
	// Image is the Elasticsearch Docker image to deploy.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// NodeSets allow specifying groups of Elasticsearch nodes sharing the same configuration and Pod templates.
	NodeSets ElasticsearchSpecNodeSetsArrayInput `pulumi:"nodeSets"`
	// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
	PodDisruptionBudget ElasticsearchSpecPodDisruptionBudgetPtrInput `pulumi:"podDisruptionBudget"`
	// RemoteClusters enables you to establish uni-directional connections to a remote Elasticsearch cluster.
	RemoteClusters ElasticsearchSpecRemoteClustersArrayInput `pulumi:"remoteClusters"`
	// SecureSettings is a list of references to Kubernetes secrets containing sensitive configuration options for Elasticsearch.
	SecureSettings ElasticsearchSpecSecureSettingsArrayInput `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to a resource (eg. a remote Elasticsearch cluster) in a different namespace. Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// Transport holds transport layer settings for Elasticsearch.
	Transport ElasticsearchSpecTransportPtrInput `pulumi:"transport"`
	// UpdateStrategy specifies how updates to the cluster should be performed.
	UpdateStrategy ElasticsearchSpecUpdateStrategyPtrInput `pulumi:"updateStrategy"`
	// Version of Elasticsearch.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ElasticsearchSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpec)(nil)).Elem()
}

func (i ElasticsearchSpecArgs) ToElasticsearchSpecOutput() ElasticsearchSpecOutput {
	return i.ToElasticsearchSpecOutputWithContext(context.Background())
}

func (i ElasticsearchSpecArgs) ToElasticsearchSpecOutputWithContext(ctx context.Context) ElasticsearchSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecOutput)
}

func (i ElasticsearchSpecArgs) ToElasticsearchSpecPtrOutput() ElasticsearchSpecPtrOutput {
	return i.ToElasticsearchSpecPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecArgs) ToElasticsearchSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecOutput).ToElasticsearchSpecPtrOutputWithContext(ctx)
}

// ElasticsearchSpecPtrInput is an input type that accepts ElasticsearchSpecArgs, ElasticsearchSpecPtr and ElasticsearchSpecPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPtrInput` via:
//
//          ElasticsearchSpecArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecPtrOutput() ElasticsearchSpecPtrOutput
	ToElasticsearchSpecPtrOutputWithContext(context.Context) ElasticsearchSpecPtrOutput
}

type elasticsearchSpecPtrType ElasticsearchSpecArgs

func ElasticsearchSpecPtr(v *ElasticsearchSpecArgs) ElasticsearchSpecPtrInput {
	return (*elasticsearchSpecPtrType)(v)
}

func (*elasticsearchSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpec)(nil)).Elem()
}

func (i *elasticsearchSpecPtrType) ToElasticsearchSpecPtrOutput() ElasticsearchSpecPtrOutput {
	return i.ToElasticsearchSpecPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecPtrType) ToElasticsearchSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPtrOutput)
}

// ElasticsearchSpec holds the specification of an Elasticsearch cluster.
type ElasticsearchSpecOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpec)(nil)).Elem()
}

func (o ElasticsearchSpecOutput) ToElasticsearchSpecOutput() ElasticsearchSpecOutput {
	return o
}

func (o ElasticsearchSpecOutput) ToElasticsearchSpecOutputWithContext(ctx context.Context) ElasticsearchSpecOutput {
	return o
}

func (o ElasticsearchSpecOutput) ToElasticsearchSpecPtrOutput() ElasticsearchSpecPtrOutput {
	return o.ToElasticsearchSpecPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecOutput) ToElasticsearchSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *ElasticsearchSpec {
		return &v
	}).(ElasticsearchSpecPtrOutput)
}

// Auth contains user authentication and authorization security settings for Elasticsearch.
func (o ElasticsearchSpecOutput) Auth() ElasticsearchSpecAuthPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *ElasticsearchSpecAuth { return v.Auth }).(ElasticsearchSpecAuthPtrOutput)
}

// HTTP holds HTTP layer settings for Elasticsearch.
func (o ElasticsearchSpecOutput) Http() ElasticsearchSpecHttpPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *ElasticsearchSpecHttp { return v.Http }).(ElasticsearchSpecHttpPtrOutput)
}

// Image is the Elasticsearch Docker image to deploy.
func (o ElasticsearchSpecOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// NodeSets allow specifying groups of Elasticsearch nodes sharing the same configuration and Pod templates.
func (o ElasticsearchSpecOutput) NodeSets() ElasticsearchSpecNodeSetsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpec) []ElasticsearchSpecNodeSets { return v.NodeSets }).(ElasticsearchSpecNodeSetsArrayOutput)
}

// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
func (o ElasticsearchSpecOutput) PodDisruptionBudget() ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *ElasticsearchSpecPodDisruptionBudget { return v.PodDisruptionBudget }).(ElasticsearchSpecPodDisruptionBudgetPtrOutput)
}

// RemoteClusters enables you to establish uni-directional connections to a remote Elasticsearch cluster.
func (o ElasticsearchSpecOutput) RemoteClusters() ElasticsearchSpecRemoteClustersArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpec) []ElasticsearchSpecRemoteClusters { return v.RemoteClusters }).(ElasticsearchSpecRemoteClustersArrayOutput)
}

// SecureSettings is a list of references to Kubernetes secrets containing sensitive configuration options for Elasticsearch.
func (o ElasticsearchSpecOutput) SecureSettings() ElasticsearchSpecSecureSettingsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpec) []ElasticsearchSpecSecureSettings { return v.SecureSettings }).(ElasticsearchSpecSecureSettingsArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to a resource (eg. a remote Elasticsearch cluster) in a different namespace. Can only be used if ECK is enforcing RBAC on references.
func (o ElasticsearchSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// Transport holds transport layer settings for Elasticsearch.
func (o ElasticsearchSpecOutput) Transport() ElasticsearchSpecTransportPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *ElasticsearchSpecTransport { return v.Transport }).(ElasticsearchSpecTransportPtrOutput)
}

// UpdateStrategy specifies how updates to the cluster should be performed.
func (o ElasticsearchSpecOutput) UpdateStrategy() ElasticsearchSpecUpdateStrategyPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpec) *ElasticsearchSpecUpdateStrategy { return v.UpdateStrategy }).(ElasticsearchSpecUpdateStrategyPtrOutput)
}

// Version of Elasticsearch.
func (o ElasticsearchSpecOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpec) string { return v.Version }).(pulumi.StringOutput)
}

type ElasticsearchSpecPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpec)(nil)).Elem()
}

func (o ElasticsearchSpecPtrOutput) ToElasticsearchSpecPtrOutput() ElasticsearchSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecPtrOutput) ToElasticsearchSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecPtrOutput) Elem() ElasticsearchSpecOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) ElasticsearchSpec { return *v }).(ElasticsearchSpecOutput)
}

// Auth contains user authentication and authorization security settings for Elasticsearch.
func (o ElasticsearchSpecPtrOutput) Auth() ElasticsearchSpecAuthPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *ElasticsearchSpecAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ElasticsearchSpecAuthPtrOutput)
}

// HTTP holds HTTP layer settings for Elasticsearch.
func (o ElasticsearchSpecPtrOutput) Http() ElasticsearchSpecHttpPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *ElasticsearchSpecHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ElasticsearchSpecHttpPtrOutput)
}

// Image is the Elasticsearch Docker image to deploy.
func (o ElasticsearchSpecPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// NodeSets allow specifying groups of Elasticsearch nodes sharing the same configuration and Pod templates.
func (o ElasticsearchSpecPtrOutput) NodeSets() ElasticsearchSpecNodeSetsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) []ElasticsearchSpecNodeSets {
		if v == nil {
			return nil
		}
		return v.NodeSets
	}).(ElasticsearchSpecNodeSetsArrayOutput)
}

// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
func (o ElasticsearchSpecPtrOutput) PodDisruptionBudget() ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *ElasticsearchSpecPodDisruptionBudget {
		if v == nil {
			return nil
		}
		return v.PodDisruptionBudget
	}).(ElasticsearchSpecPodDisruptionBudgetPtrOutput)
}

// RemoteClusters enables you to establish uni-directional connections to a remote Elasticsearch cluster.
func (o ElasticsearchSpecPtrOutput) RemoteClusters() ElasticsearchSpecRemoteClustersArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) []ElasticsearchSpecRemoteClusters {
		if v == nil {
			return nil
		}
		return v.RemoteClusters
	}).(ElasticsearchSpecRemoteClustersArrayOutput)
}

// SecureSettings is a list of references to Kubernetes secrets containing sensitive configuration options for Elasticsearch.
func (o ElasticsearchSpecPtrOutput) SecureSettings() ElasticsearchSpecSecureSettingsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) []ElasticsearchSpecSecureSettings {
		if v == nil {
			return nil
		}
		return v.SecureSettings
	}).(ElasticsearchSpecSecureSettingsArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to a resource (eg. a remote Elasticsearch cluster) in a different namespace. Can only be used if ECK is enforcing RBAC on references.
func (o ElasticsearchSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// Transport holds transport layer settings for Elasticsearch.
func (o ElasticsearchSpecPtrOutput) Transport() ElasticsearchSpecTransportPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *ElasticsearchSpecTransport {
		if v == nil {
			return nil
		}
		return v.Transport
	}).(ElasticsearchSpecTransportPtrOutput)
}

// UpdateStrategy specifies how updates to the cluster should be performed.
func (o ElasticsearchSpecPtrOutput) UpdateStrategy() ElasticsearchSpecUpdateStrategyPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *ElasticsearchSpecUpdateStrategy {
		if v == nil {
			return nil
		}
		return v.UpdateStrategy
	}).(ElasticsearchSpecUpdateStrategyPtrOutput)
}

// Version of Elasticsearch.
func (o ElasticsearchSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Auth contains user authentication and authorization security settings for Elasticsearch.
type ElasticsearchSpecAuth struct {
	// FileRealm to propagate to the Elasticsearch cluster.
	FileRealm []ElasticsearchSpecAuthFileRealm `pulumi:"fileRealm"`
	// Roles to propagate to the Elasticsearch cluster.
	Roles []ElasticsearchSpecAuthRoles `pulumi:"roles"`
}

// ElasticsearchSpecAuthInput is an input type that accepts ElasticsearchSpecAuthArgs and ElasticsearchSpecAuthOutput values.
// You can construct a concrete instance of `ElasticsearchSpecAuthInput` via:
//
//          ElasticsearchSpecAuthArgs{...}
type ElasticsearchSpecAuthInput interface {
	pulumi.Input

	ToElasticsearchSpecAuthOutput() ElasticsearchSpecAuthOutput
	ToElasticsearchSpecAuthOutputWithContext(context.Context) ElasticsearchSpecAuthOutput
}

// Auth contains user authentication and authorization security settings for Elasticsearch.
type ElasticsearchSpecAuthArgs struct {
	// FileRealm to propagate to the Elasticsearch cluster.
	FileRealm ElasticsearchSpecAuthFileRealmArrayInput `pulumi:"fileRealm"`
	// Roles to propagate to the Elasticsearch cluster.
	Roles ElasticsearchSpecAuthRolesArrayInput `pulumi:"roles"`
}

func (ElasticsearchSpecAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecAuth)(nil)).Elem()
}

func (i ElasticsearchSpecAuthArgs) ToElasticsearchSpecAuthOutput() ElasticsearchSpecAuthOutput {
	return i.ToElasticsearchSpecAuthOutputWithContext(context.Background())
}

func (i ElasticsearchSpecAuthArgs) ToElasticsearchSpecAuthOutputWithContext(ctx context.Context) ElasticsearchSpecAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthOutput)
}

func (i ElasticsearchSpecAuthArgs) ToElasticsearchSpecAuthPtrOutput() ElasticsearchSpecAuthPtrOutput {
	return i.ToElasticsearchSpecAuthPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecAuthArgs) ToElasticsearchSpecAuthPtrOutputWithContext(ctx context.Context) ElasticsearchSpecAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthOutput).ToElasticsearchSpecAuthPtrOutputWithContext(ctx)
}

// ElasticsearchSpecAuthPtrInput is an input type that accepts ElasticsearchSpecAuthArgs, ElasticsearchSpecAuthPtr and ElasticsearchSpecAuthPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecAuthPtrInput` via:
//
//          ElasticsearchSpecAuthArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecAuthPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecAuthPtrOutput() ElasticsearchSpecAuthPtrOutput
	ToElasticsearchSpecAuthPtrOutputWithContext(context.Context) ElasticsearchSpecAuthPtrOutput
}

type elasticsearchSpecAuthPtrType ElasticsearchSpecAuthArgs

func ElasticsearchSpecAuthPtr(v *ElasticsearchSpecAuthArgs) ElasticsearchSpecAuthPtrInput {
	return (*elasticsearchSpecAuthPtrType)(v)
}

func (*elasticsearchSpecAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecAuth)(nil)).Elem()
}

func (i *elasticsearchSpecAuthPtrType) ToElasticsearchSpecAuthPtrOutput() ElasticsearchSpecAuthPtrOutput {
	return i.ToElasticsearchSpecAuthPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecAuthPtrType) ToElasticsearchSpecAuthPtrOutputWithContext(ctx context.Context) ElasticsearchSpecAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthPtrOutput)
}

// Auth contains user authentication and authorization security settings for Elasticsearch.
type ElasticsearchSpecAuthOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecAuth)(nil)).Elem()
}

func (o ElasticsearchSpecAuthOutput) ToElasticsearchSpecAuthOutput() ElasticsearchSpecAuthOutput {
	return o
}

func (o ElasticsearchSpecAuthOutput) ToElasticsearchSpecAuthOutputWithContext(ctx context.Context) ElasticsearchSpecAuthOutput {
	return o
}

func (o ElasticsearchSpecAuthOutput) ToElasticsearchSpecAuthPtrOutput() ElasticsearchSpecAuthPtrOutput {
	return o.ToElasticsearchSpecAuthPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecAuthOutput) ToElasticsearchSpecAuthPtrOutputWithContext(ctx context.Context) ElasticsearchSpecAuthPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecAuth) *ElasticsearchSpecAuth {
		return &v
	}).(ElasticsearchSpecAuthPtrOutput)
}

// FileRealm to propagate to the Elasticsearch cluster.
func (o ElasticsearchSpecAuthOutput) FileRealm() ElasticsearchSpecAuthFileRealmArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecAuth) []ElasticsearchSpecAuthFileRealm { return v.FileRealm }).(ElasticsearchSpecAuthFileRealmArrayOutput)
}

// Roles to propagate to the Elasticsearch cluster.
func (o ElasticsearchSpecAuthOutput) Roles() ElasticsearchSpecAuthRolesArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecAuth) []ElasticsearchSpecAuthRoles { return v.Roles }).(ElasticsearchSpecAuthRolesArrayOutput)
}

type ElasticsearchSpecAuthPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecAuth)(nil)).Elem()
}

func (o ElasticsearchSpecAuthPtrOutput) ToElasticsearchSpecAuthPtrOutput() ElasticsearchSpecAuthPtrOutput {
	return o
}

func (o ElasticsearchSpecAuthPtrOutput) ToElasticsearchSpecAuthPtrOutputWithContext(ctx context.Context) ElasticsearchSpecAuthPtrOutput {
	return o
}

func (o ElasticsearchSpecAuthPtrOutput) Elem() ElasticsearchSpecAuthOutput {
	return o.ApplyT(func(v *ElasticsearchSpecAuth) ElasticsearchSpecAuth { return *v }).(ElasticsearchSpecAuthOutput)
}

// FileRealm to propagate to the Elasticsearch cluster.
func (o ElasticsearchSpecAuthPtrOutput) FileRealm() ElasticsearchSpecAuthFileRealmArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecAuth) []ElasticsearchSpecAuthFileRealm {
		if v == nil {
			return nil
		}
		return v.FileRealm
	}).(ElasticsearchSpecAuthFileRealmArrayOutput)
}

// Roles to propagate to the Elasticsearch cluster.
func (o ElasticsearchSpecAuthPtrOutput) Roles() ElasticsearchSpecAuthRolesArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecAuth) []ElasticsearchSpecAuthRoles {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(ElasticsearchSpecAuthRolesArrayOutput)
}

// FileRealmSource references users to create in the Elasticsearch cluster.
type ElasticsearchSpecAuthFileRealm struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// ElasticsearchSpecAuthFileRealmInput is an input type that accepts ElasticsearchSpecAuthFileRealmArgs and ElasticsearchSpecAuthFileRealmOutput values.
// You can construct a concrete instance of `ElasticsearchSpecAuthFileRealmInput` via:
//
//          ElasticsearchSpecAuthFileRealmArgs{...}
type ElasticsearchSpecAuthFileRealmInput interface {
	pulumi.Input

	ToElasticsearchSpecAuthFileRealmOutput() ElasticsearchSpecAuthFileRealmOutput
	ToElasticsearchSpecAuthFileRealmOutputWithContext(context.Context) ElasticsearchSpecAuthFileRealmOutput
}

// FileRealmSource references users to create in the Elasticsearch cluster.
type ElasticsearchSpecAuthFileRealmArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (ElasticsearchSpecAuthFileRealmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecAuthFileRealm)(nil)).Elem()
}

func (i ElasticsearchSpecAuthFileRealmArgs) ToElasticsearchSpecAuthFileRealmOutput() ElasticsearchSpecAuthFileRealmOutput {
	return i.ToElasticsearchSpecAuthFileRealmOutputWithContext(context.Background())
}

func (i ElasticsearchSpecAuthFileRealmArgs) ToElasticsearchSpecAuthFileRealmOutputWithContext(ctx context.Context) ElasticsearchSpecAuthFileRealmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthFileRealmOutput)
}

// ElasticsearchSpecAuthFileRealmArrayInput is an input type that accepts ElasticsearchSpecAuthFileRealmArray and ElasticsearchSpecAuthFileRealmArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecAuthFileRealmArrayInput` via:
//
//          ElasticsearchSpecAuthFileRealmArray{ ElasticsearchSpecAuthFileRealmArgs{...} }
type ElasticsearchSpecAuthFileRealmArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecAuthFileRealmArrayOutput() ElasticsearchSpecAuthFileRealmArrayOutput
	ToElasticsearchSpecAuthFileRealmArrayOutputWithContext(context.Context) ElasticsearchSpecAuthFileRealmArrayOutput
}

type ElasticsearchSpecAuthFileRealmArray []ElasticsearchSpecAuthFileRealmInput

func (ElasticsearchSpecAuthFileRealmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecAuthFileRealm)(nil)).Elem()
}

func (i ElasticsearchSpecAuthFileRealmArray) ToElasticsearchSpecAuthFileRealmArrayOutput() ElasticsearchSpecAuthFileRealmArrayOutput {
	return i.ToElasticsearchSpecAuthFileRealmArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecAuthFileRealmArray) ToElasticsearchSpecAuthFileRealmArrayOutputWithContext(ctx context.Context) ElasticsearchSpecAuthFileRealmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthFileRealmArrayOutput)
}

// FileRealmSource references users to create in the Elasticsearch cluster.
type ElasticsearchSpecAuthFileRealmOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecAuthFileRealmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecAuthFileRealm)(nil)).Elem()
}

func (o ElasticsearchSpecAuthFileRealmOutput) ToElasticsearchSpecAuthFileRealmOutput() ElasticsearchSpecAuthFileRealmOutput {
	return o
}

func (o ElasticsearchSpecAuthFileRealmOutput) ToElasticsearchSpecAuthFileRealmOutputWithContext(ctx context.Context) ElasticsearchSpecAuthFileRealmOutput {
	return o
}

// SecretName is the name of the secret.
func (o ElasticsearchSpecAuthFileRealmOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecAuthFileRealm) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecAuthFileRealmArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecAuthFileRealmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecAuthFileRealm)(nil)).Elem()
}

func (o ElasticsearchSpecAuthFileRealmArrayOutput) ToElasticsearchSpecAuthFileRealmArrayOutput() ElasticsearchSpecAuthFileRealmArrayOutput {
	return o
}

func (o ElasticsearchSpecAuthFileRealmArrayOutput) ToElasticsearchSpecAuthFileRealmArrayOutputWithContext(ctx context.Context) ElasticsearchSpecAuthFileRealmArrayOutput {
	return o
}

func (o ElasticsearchSpecAuthFileRealmArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecAuthFileRealmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecAuthFileRealm {
		return vs[0].([]ElasticsearchSpecAuthFileRealm)[vs[1].(int)]
	}).(ElasticsearchSpecAuthFileRealmOutput)
}

// RoleSource references roles to create in the Elasticsearch cluster.
type ElasticsearchSpecAuthRoles struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// ElasticsearchSpecAuthRolesInput is an input type that accepts ElasticsearchSpecAuthRolesArgs and ElasticsearchSpecAuthRolesOutput values.
// You can construct a concrete instance of `ElasticsearchSpecAuthRolesInput` via:
//
//          ElasticsearchSpecAuthRolesArgs{...}
type ElasticsearchSpecAuthRolesInput interface {
	pulumi.Input

	ToElasticsearchSpecAuthRolesOutput() ElasticsearchSpecAuthRolesOutput
	ToElasticsearchSpecAuthRolesOutputWithContext(context.Context) ElasticsearchSpecAuthRolesOutput
}

// RoleSource references roles to create in the Elasticsearch cluster.
type ElasticsearchSpecAuthRolesArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (ElasticsearchSpecAuthRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecAuthRoles)(nil)).Elem()
}

func (i ElasticsearchSpecAuthRolesArgs) ToElasticsearchSpecAuthRolesOutput() ElasticsearchSpecAuthRolesOutput {
	return i.ToElasticsearchSpecAuthRolesOutputWithContext(context.Background())
}

func (i ElasticsearchSpecAuthRolesArgs) ToElasticsearchSpecAuthRolesOutputWithContext(ctx context.Context) ElasticsearchSpecAuthRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthRolesOutput)
}

// ElasticsearchSpecAuthRolesArrayInput is an input type that accepts ElasticsearchSpecAuthRolesArray and ElasticsearchSpecAuthRolesArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecAuthRolesArrayInput` via:
//
//          ElasticsearchSpecAuthRolesArray{ ElasticsearchSpecAuthRolesArgs{...} }
type ElasticsearchSpecAuthRolesArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecAuthRolesArrayOutput() ElasticsearchSpecAuthRolesArrayOutput
	ToElasticsearchSpecAuthRolesArrayOutputWithContext(context.Context) ElasticsearchSpecAuthRolesArrayOutput
}

type ElasticsearchSpecAuthRolesArray []ElasticsearchSpecAuthRolesInput

func (ElasticsearchSpecAuthRolesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecAuthRoles)(nil)).Elem()
}

func (i ElasticsearchSpecAuthRolesArray) ToElasticsearchSpecAuthRolesArrayOutput() ElasticsearchSpecAuthRolesArrayOutput {
	return i.ToElasticsearchSpecAuthRolesArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecAuthRolesArray) ToElasticsearchSpecAuthRolesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecAuthRolesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecAuthRolesArrayOutput)
}

// RoleSource references roles to create in the Elasticsearch cluster.
type ElasticsearchSpecAuthRolesOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecAuthRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecAuthRoles)(nil)).Elem()
}

func (o ElasticsearchSpecAuthRolesOutput) ToElasticsearchSpecAuthRolesOutput() ElasticsearchSpecAuthRolesOutput {
	return o
}

func (o ElasticsearchSpecAuthRolesOutput) ToElasticsearchSpecAuthRolesOutputWithContext(ctx context.Context) ElasticsearchSpecAuthRolesOutput {
	return o
}

// SecretName is the name of the secret.
func (o ElasticsearchSpecAuthRolesOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecAuthRoles) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecAuthRolesArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecAuthRolesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecAuthRoles)(nil)).Elem()
}

func (o ElasticsearchSpecAuthRolesArrayOutput) ToElasticsearchSpecAuthRolesArrayOutput() ElasticsearchSpecAuthRolesArrayOutput {
	return o
}

func (o ElasticsearchSpecAuthRolesArrayOutput) ToElasticsearchSpecAuthRolesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecAuthRolesArrayOutput {
	return o
}

func (o ElasticsearchSpecAuthRolesArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecAuthRolesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecAuthRoles {
		return vs[0].([]ElasticsearchSpecAuthRoles)[vs[1].(int)]
	}).(ElasticsearchSpecAuthRolesOutput)
}

// HTTP holds HTTP layer settings for Elasticsearch.
type ElasticsearchSpecHttp struct {
	// Service defines the template for the associated Kubernetes Service object.
	Service *ElasticsearchSpecHttpService `pulumi:"service"`
	// TLS defines options for configuring TLS for HTTP.
	Tls *ElasticsearchSpecHttpTls `pulumi:"tls"`
}

// ElasticsearchSpecHttpInput is an input type that accepts ElasticsearchSpecHttpArgs and ElasticsearchSpecHttpOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpInput` via:
//
//          ElasticsearchSpecHttpArgs{...}
type ElasticsearchSpecHttpInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpOutput() ElasticsearchSpecHttpOutput
	ToElasticsearchSpecHttpOutputWithContext(context.Context) ElasticsearchSpecHttpOutput
}

// HTTP holds HTTP layer settings for Elasticsearch.
type ElasticsearchSpecHttpArgs struct {
	// Service defines the template for the associated Kubernetes Service object.
	Service ElasticsearchSpecHttpServicePtrInput `pulumi:"service"`
	// TLS defines options for configuring TLS for HTTP.
	Tls ElasticsearchSpecHttpTlsPtrInput `pulumi:"tls"`
}

func (ElasticsearchSpecHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttp)(nil)).Elem()
}

func (i ElasticsearchSpecHttpArgs) ToElasticsearchSpecHttpOutput() ElasticsearchSpecHttpOutput {
	return i.ToElasticsearchSpecHttpOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpArgs) ToElasticsearchSpecHttpOutputWithContext(ctx context.Context) ElasticsearchSpecHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpOutput)
}

func (i ElasticsearchSpecHttpArgs) ToElasticsearchSpecHttpPtrOutput() ElasticsearchSpecHttpPtrOutput {
	return i.ToElasticsearchSpecHttpPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpArgs) ToElasticsearchSpecHttpPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpOutput).ToElasticsearchSpecHttpPtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpPtrInput is an input type that accepts ElasticsearchSpecHttpArgs, ElasticsearchSpecHttpPtr and ElasticsearchSpecHttpPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpPtrInput` via:
//
//          ElasticsearchSpecHttpArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpPtrOutput() ElasticsearchSpecHttpPtrOutput
	ToElasticsearchSpecHttpPtrOutputWithContext(context.Context) ElasticsearchSpecHttpPtrOutput
}

type elasticsearchSpecHttpPtrType ElasticsearchSpecHttpArgs

func ElasticsearchSpecHttpPtr(v *ElasticsearchSpecHttpArgs) ElasticsearchSpecHttpPtrInput {
	return (*elasticsearchSpecHttpPtrType)(v)
}

func (*elasticsearchSpecHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttp)(nil)).Elem()
}

func (i *elasticsearchSpecHttpPtrType) ToElasticsearchSpecHttpPtrOutput() ElasticsearchSpecHttpPtrOutput {
	return i.ToElasticsearchSpecHttpPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpPtrType) ToElasticsearchSpecHttpPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpPtrOutput)
}

// HTTP holds HTTP layer settings for Elasticsearch.
type ElasticsearchSpecHttpOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttp)(nil)).Elem()
}

func (o ElasticsearchSpecHttpOutput) ToElasticsearchSpecHttpOutput() ElasticsearchSpecHttpOutput {
	return o
}

func (o ElasticsearchSpecHttpOutput) ToElasticsearchSpecHttpOutputWithContext(ctx context.Context) ElasticsearchSpecHttpOutput {
	return o
}

func (o ElasticsearchSpecHttpOutput) ToElasticsearchSpecHttpPtrOutput() ElasticsearchSpecHttpPtrOutput {
	return o.ToElasticsearchSpecHttpPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpOutput) ToElasticsearchSpecHttpPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttp) *ElasticsearchSpecHttp {
		return &v
	}).(ElasticsearchSpecHttpPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
func (o ElasticsearchSpecHttpOutput) Service() ElasticsearchSpecHttpServicePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttp) *ElasticsearchSpecHttpService { return v.Service }).(ElasticsearchSpecHttpServicePtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
func (o ElasticsearchSpecHttpOutput) Tls() ElasticsearchSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttp) *ElasticsearchSpecHttpTls { return v.Tls }).(ElasticsearchSpecHttpTlsPtrOutput)
}

type ElasticsearchSpecHttpPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttp)(nil)).Elem()
}

func (o ElasticsearchSpecHttpPtrOutput) ToElasticsearchSpecHttpPtrOutput() ElasticsearchSpecHttpPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpPtrOutput) ToElasticsearchSpecHttpPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpPtrOutput) Elem() ElasticsearchSpecHttpOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttp) ElasticsearchSpecHttp { return *v }).(ElasticsearchSpecHttpOutput)
}

// Service defines the template for the associated Kubernetes Service object.
func (o ElasticsearchSpecHttpPtrOutput) Service() ElasticsearchSpecHttpServicePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttp) *ElasticsearchSpecHttpService {
		if v == nil {
			return nil
		}
		return v.Service
	}).(ElasticsearchSpecHttpServicePtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
func (o ElasticsearchSpecHttpPtrOutput) Tls() ElasticsearchSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttp) *ElasticsearchSpecHttpTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(ElasticsearchSpecHttpTlsPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type ElasticsearchSpecHttpService struct {
	// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Spec is the specification of the service.
	Spec *ElasticsearchSpecHttpServiceSpec `pulumi:"spec"`
}

// ElasticsearchSpecHttpServiceInput is an input type that accepts ElasticsearchSpecHttpServiceArgs and ElasticsearchSpecHttpServiceOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceInput` via:
//
//          ElasticsearchSpecHttpServiceArgs{...}
type ElasticsearchSpecHttpServiceInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceOutput() ElasticsearchSpecHttpServiceOutput
	ToElasticsearchSpecHttpServiceOutputWithContext(context.Context) ElasticsearchSpecHttpServiceOutput
}

// Service defines the template for the associated Kubernetes Service object.
type ElasticsearchSpecHttpServiceArgs struct {
	// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// Spec is the specification of the service.
	Spec ElasticsearchSpecHttpServiceSpecPtrInput `pulumi:"spec"`
}

func (ElasticsearchSpecHttpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpService)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceArgs) ToElasticsearchSpecHttpServiceOutput() ElasticsearchSpecHttpServiceOutput {
	return i.ToElasticsearchSpecHttpServiceOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceArgs) ToElasticsearchSpecHttpServiceOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceOutput)
}

func (i ElasticsearchSpecHttpServiceArgs) ToElasticsearchSpecHttpServicePtrOutput() ElasticsearchSpecHttpServicePtrOutput {
	return i.ToElasticsearchSpecHttpServicePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceArgs) ToElasticsearchSpecHttpServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceOutput).ToElasticsearchSpecHttpServicePtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpServicePtrInput is an input type that accepts ElasticsearchSpecHttpServiceArgs, ElasticsearchSpecHttpServicePtr and ElasticsearchSpecHttpServicePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServicePtrInput` via:
//
//          ElasticsearchSpecHttpServiceArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpServicePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServicePtrOutput() ElasticsearchSpecHttpServicePtrOutput
	ToElasticsearchSpecHttpServicePtrOutputWithContext(context.Context) ElasticsearchSpecHttpServicePtrOutput
}

type elasticsearchSpecHttpServicePtrType ElasticsearchSpecHttpServiceArgs

func ElasticsearchSpecHttpServicePtr(v *ElasticsearchSpecHttpServiceArgs) ElasticsearchSpecHttpServicePtrInput {
	return (*elasticsearchSpecHttpServicePtrType)(v)
}

func (*elasticsearchSpecHttpServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpService)(nil)).Elem()
}

func (i *elasticsearchSpecHttpServicePtrType) ToElasticsearchSpecHttpServicePtrOutput() ElasticsearchSpecHttpServicePtrOutput {
	return i.ToElasticsearchSpecHttpServicePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpServicePtrType) ToElasticsearchSpecHttpServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServicePtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type ElasticsearchSpecHttpServiceOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpService)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceOutput) ToElasticsearchSpecHttpServiceOutput() ElasticsearchSpecHttpServiceOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceOutput) ToElasticsearchSpecHttpServiceOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceOutput) ToElasticsearchSpecHttpServicePtrOutput() ElasticsearchSpecHttpServicePtrOutput {
	return o.ToElasticsearchSpecHttpServicePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpServiceOutput) ToElasticsearchSpecHttpServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServicePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpService) *ElasticsearchSpecHttpService {
		return &v
	}).(ElasticsearchSpecHttpServicePtrOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
func (o ElasticsearchSpecHttpServiceOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpService) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// Spec is the specification of the service.
func (o ElasticsearchSpecHttpServiceOutput) Spec() ElasticsearchSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpService) *ElasticsearchSpecHttpServiceSpec { return v.Spec }).(ElasticsearchSpecHttpServiceSpecPtrOutput)
}

type ElasticsearchSpecHttpServicePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpService)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServicePtrOutput) ToElasticsearchSpecHttpServicePtrOutput() ElasticsearchSpecHttpServicePtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServicePtrOutput) ToElasticsearchSpecHttpServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServicePtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServicePtrOutput) Elem() ElasticsearchSpecHttpServiceOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpService) ElasticsearchSpecHttpService { return *v }).(ElasticsearchSpecHttpServiceOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
func (o ElasticsearchSpecHttpServicePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpService) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Spec is the specification of the service.
func (o ElasticsearchSpecHttpServicePtrOutput) Spec() ElasticsearchSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpService) *ElasticsearchSpecHttpServiceSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ElasticsearchSpecHttpServiceSpecPtrOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecHttpServiceMetadata struct {
}

// ElasticsearchSpecHttpServiceMetadataInput is an input type that accepts ElasticsearchSpecHttpServiceMetadataArgs and ElasticsearchSpecHttpServiceMetadataOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceMetadataInput` via:
//
//          ElasticsearchSpecHttpServiceMetadataArgs{...}
type ElasticsearchSpecHttpServiceMetadataInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceMetadataOutput() ElasticsearchSpecHttpServiceMetadataOutput
	ToElasticsearchSpecHttpServiceMetadataOutputWithContext(context.Context) ElasticsearchSpecHttpServiceMetadataOutput
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecHttpServiceMetadataArgs struct {
}

func (ElasticsearchSpecHttpServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceMetadata)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceMetadataArgs) ToElasticsearchSpecHttpServiceMetadataOutput() ElasticsearchSpecHttpServiceMetadataOutput {
	return i.ToElasticsearchSpecHttpServiceMetadataOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceMetadataArgs) ToElasticsearchSpecHttpServiceMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceMetadataOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecHttpServiceMetadataOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceMetadata)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceMetadataOutput) ToElasticsearchSpecHttpServiceMetadataOutput() ElasticsearchSpecHttpServiceMetadataOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceMetadataOutput) ToElasticsearchSpecHttpServiceMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceMetadataOutput {
	return o
}

// Spec is the specification of the service.
type ElasticsearchSpecHttpServiceSpec struct {
	// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP *string `pulumi:"clusterIP"`
	// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
	ExternalIPs []string `pulumi:"externalIPs"`
	// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
	ExternalName *string `pulumi:"externalName"`
	// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
	ExternalTrafficPolicy *string `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
	HealthCheckNodePort *int `pulumi:"healthCheckNodePort"`
	// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
	IpFamily *string `pulumi:"ipFamily"`
	// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
	LoadBalancerIP *string `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
	LoadBalancerSourceRanges []string `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports []ElasticsearchSpecHttpServiceSpecPorts `pulumi:"ports"`
	// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
	PublishNotReadyAddresses *bool `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector map[string]string `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// sessionAffinityConfig contains the configurations of session affinity.
	SessionAffinityConfig *ElasticsearchSpecHttpServiceSpecSessionAffinityConfig `pulumi:"sessionAffinityConfig"`
	// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
	TopologyKeys []string `pulumi:"topologyKeys"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type *string `pulumi:"type"`
}

// ElasticsearchSpecHttpServiceSpecInput is an input type that accepts ElasticsearchSpecHttpServiceSpecArgs and ElasticsearchSpecHttpServiceSpecOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecInput` via:
//
//          ElasticsearchSpecHttpServiceSpecArgs{...}
type ElasticsearchSpecHttpServiceSpecInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecOutput() ElasticsearchSpecHttpServiceSpecOutput
	ToElasticsearchSpecHttpServiceSpecOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecOutput
}

// Spec is the specification of the service.
type ElasticsearchSpecHttpServiceSpecArgs struct {
	// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP pulumi.StringPtrInput `pulumi:"clusterIP"`
	// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
	ExternalIPs pulumi.StringArrayInput `pulumi:"externalIPs"`
	// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
	ExternalName pulumi.StringPtrInput `pulumi:"externalName"`
	// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
	ExternalTrafficPolicy pulumi.StringPtrInput `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
	HealthCheckNodePort pulumi.IntPtrInput `pulumi:"healthCheckNodePort"`
	// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
	IpFamily pulumi.StringPtrInput `pulumi:"ipFamily"`
	// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
	LoadBalancerIP pulumi.StringPtrInput `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
	LoadBalancerSourceRanges pulumi.StringArrayInput `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports ElasticsearchSpecHttpServiceSpecPortsArrayInput `pulumi:"ports"`
	// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
	PublishNotReadyAddresses pulumi.BoolPtrInput `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity pulumi.StringPtrInput `pulumi:"sessionAffinity"`
	// sessionAffinityConfig contains the configurations of session affinity.
	SessionAffinityConfig ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrInput `pulumi:"sessionAffinityConfig"`
	// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
	TopologyKeys pulumi.StringArrayInput `pulumi:"topologyKeys"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ElasticsearchSpecHttpServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpec)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecArgs) ToElasticsearchSpecHttpServiceSpecOutput() ElasticsearchSpecHttpServiceSpecOutput {
	return i.ToElasticsearchSpecHttpServiceSpecOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecArgs) ToElasticsearchSpecHttpServiceSpecOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecOutput)
}

func (i ElasticsearchSpecHttpServiceSpecArgs) ToElasticsearchSpecHttpServiceSpecPtrOutput() ElasticsearchSpecHttpServiceSpecPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecArgs) ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecOutput).ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpServiceSpecPtrInput is an input type that accepts ElasticsearchSpecHttpServiceSpecArgs, ElasticsearchSpecHttpServiceSpecPtr and ElasticsearchSpecHttpServiceSpecPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecPtrInput` via:
//
//          ElasticsearchSpecHttpServiceSpecArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpServiceSpecPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecPtrOutput() ElasticsearchSpecHttpServiceSpecPtrOutput
	ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecPtrOutput
}

type elasticsearchSpecHttpServiceSpecPtrType ElasticsearchSpecHttpServiceSpecArgs

func ElasticsearchSpecHttpServiceSpecPtr(v *ElasticsearchSpecHttpServiceSpecArgs) ElasticsearchSpecHttpServiceSpecPtrInput {
	return (*elasticsearchSpecHttpServiceSpecPtrType)(v)
}

func (*elasticsearchSpecHttpServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpec)(nil)).Elem()
}

func (i *elasticsearchSpecHttpServiceSpecPtrType) ToElasticsearchSpecHttpServiceSpecPtrOutput() ElasticsearchSpecHttpServiceSpecPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpServiceSpecPtrType) ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecPtrOutput)
}

// Spec is the specification of the service.
type ElasticsearchSpecHttpServiceSpecOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpec)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecOutput) ToElasticsearchSpecHttpServiceSpecOutput() ElasticsearchSpecHttpServiceSpecOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecOutput) ToElasticsearchSpecHttpServiceSpecOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecOutput) ToElasticsearchSpecHttpServiceSpecPtrOutput() ElasticsearchSpecHttpServiceSpecPtrOutput {
	return o.ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpServiceSpecOutput) ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *ElasticsearchSpecHttpServiceSpec {
		return &v
	}).(ElasticsearchSpecHttpServiceSpecPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecHttpServiceSpecOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.ClusterIP }).(pulumi.StringPtrOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
func (o ElasticsearchSpecHttpServiceSpecOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) []string { return v.ExternalIPs }).(pulumi.StringArrayOutput)
}

// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
func (o ElasticsearchSpecHttpServiceSpecOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
func (o ElasticsearchSpecHttpServiceSpecOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.ExternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
func (o ElasticsearchSpecHttpServiceSpecOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *int { return v.HealthCheckNodePort }).(pulumi.IntPtrOutput)
}

// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
func (o ElasticsearchSpecHttpServiceSpecOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.IpFamily }).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
func (o ElasticsearchSpecHttpServiceSpecOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.LoadBalancerIP }).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
func (o ElasticsearchSpecHttpServiceSpecOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) []string { return v.LoadBalancerSourceRanges }).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecHttpServiceSpecOutput) Ports() ElasticsearchSpecHttpServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) []ElasticsearchSpecHttpServiceSpecPorts { return v.Ports }).(ElasticsearchSpecHttpServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
func (o ElasticsearchSpecHttpServiceSpecOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *bool { return v.PublishNotReadyAddresses }).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o ElasticsearchSpecHttpServiceSpecOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecHttpServiceSpecOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
func (o ElasticsearchSpecHttpServiceSpecOutput) SessionAffinityConfig() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *ElasticsearchSpecHttpServiceSpecSessionAffinityConfig {
		return v.SessionAffinityConfig
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
func (o ElasticsearchSpecHttpServiceSpecOutput) TopologyKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) []string { return v.TopologyKeys }).(pulumi.StringArrayOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o ElasticsearchSpecHttpServiceSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecHttpServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpec)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecPtrOutput) ToElasticsearchSpecHttpServiceSpecPtrOutput() ElasticsearchSpecHttpServiceSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPtrOutput) ToElasticsearchSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPtrOutput) Elem() ElasticsearchSpecHttpServiceSpecOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) ElasticsearchSpecHttpServiceSpec { return *v }).(ElasticsearchSpecHttpServiceSpecOutput)
}

// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIP
	}).(pulumi.StringPtrOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExternalIPs
	}).(pulumi.StringArrayOutput)
}

// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckNodePort
	}).(pulumi.IntPtrOutput)
}

// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.IpFamily
	}).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerIP
	}).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSourceRanges
	}).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) Ports() ElasticsearchSpecHttpServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) []ElasticsearchSpecHttpServiceSpecPorts {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(ElasticsearchSpecHttpServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.PublishNotReadyAddresses
	}).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) SessionAffinityConfig() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *ElasticsearchSpecHttpServiceSpecSessionAffinityConfig {
		if v == nil {
			return nil
		}
		return v.SessionAffinityConfig
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) TopologyKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.TopologyKeys
	}).(pulumi.StringArrayOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o ElasticsearchSpecHttpServiceSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ServicePort contains information on service's port.
type ElasticsearchSpecHttpServiceSpecPorts struct {
	// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
	AppProtocol *string `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
	Name *string `pulumi:"name"`
	// The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort *int `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port int `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
	Protocol *string `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort *ElasticsearchSpecHttpServiceSpecPortsTargetPort `pulumi:"targetPort"`
}

// ElasticsearchSpecHttpServiceSpecPortsInput is an input type that accepts ElasticsearchSpecHttpServiceSpecPortsArgs and ElasticsearchSpecHttpServiceSpecPortsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecPortsInput` via:
//
//          ElasticsearchSpecHttpServiceSpecPortsArgs{...}
type ElasticsearchSpecHttpServiceSpecPortsInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecPortsOutput() ElasticsearchSpecHttpServiceSpecPortsOutput
	ToElasticsearchSpecHttpServiceSpecPortsOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecPortsOutput
}

// ServicePort contains information on service's port.
type ElasticsearchSpecHttpServiceSpecPortsArgs struct {
	// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort pulumi.IntPtrInput `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port pulumi.IntInput `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrInput `pulumi:"targetPort"`
}

func (ElasticsearchSpecHttpServiceSpecPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecPortsArgs) ToElasticsearchSpecHttpServiceSpecPortsOutput() ElasticsearchSpecHttpServiceSpecPortsOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPortsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecPortsArgs) ToElasticsearchSpecHttpServiceSpecPortsOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecPortsOutput)
}

// ElasticsearchSpecHttpServiceSpecPortsArrayInput is an input type that accepts ElasticsearchSpecHttpServiceSpecPortsArray and ElasticsearchSpecHttpServiceSpecPortsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecPortsArrayInput` via:
//
//          ElasticsearchSpecHttpServiceSpecPortsArray{ ElasticsearchSpecHttpServiceSpecPortsArgs{...} }
type ElasticsearchSpecHttpServiceSpecPortsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecPortsArrayOutput() ElasticsearchSpecHttpServiceSpecPortsArrayOutput
	ToElasticsearchSpecHttpServiceSpecPortsArrayOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecPortsArrayOutput
}

type ElasticsearchSpecHttpServiceSpecPortsArray []ElasticsearchSpecHttpServiceSpecPortsInput

func (ElasticsearchSpecHttpServiceSpecPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecPortsArray) ToElasticsearchSpecHttpServiceSpecPortsArrayOutput() ElasticsearchSpecHttpServiceSpecPortsArrayOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPortsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecPortsArray) ToElasticsearchSpecHttpServiceSpecPortsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecPortsArrayOutput)
}

// ServicePort contains information on service's port.
type ElasticsearchSpecHttpServiceSpecPortsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecPortsOutput) ToElasticsearchSpecHttpServiceSpecPortsOutput() ElasticsearchSpecHttpServiceSpecPortsOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsOutput) ToElasticsearchSpecHttpServiceSpecPortsOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsOutput {
	return o
}

// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
func (o ElasticsearchSpecHttpServiceSpecPortsOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPorts) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
func (o ElasticsearchSpecHttpServiceSpecPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
func (o ElasticsearchSpecHttpServiceSpecPortsOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPorts) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// The port that will be exposed by this service.
func (o ElasticsearchSpecHttpServiceSpecPortsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPorts) int { return v.Port }).(pulumi.IntOutput)
}

// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
func (o ElasticsearchSpecHttpServiceSpecPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
func (o ElasticsearchSpecHttpServiceSpecPortsOutput) TargetPort() ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPorts) *ElasticsearchSpecHttpServiceSpecPortsTargetPort {
		return v.TargetPort
	}).(ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput)
}

type ElasticsearchSpecHttpServiceSpecPortsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecPortsArrayOutput) ToElasticsearchSpecHttpServiceSpecPortsArrayOutput() ElasticsearchSpecHttpServiceSpecPortsArrayOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsArrayOutput) ToElasticsearchSpecHttpServiceSpecPortsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsArrayOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecHttpServiceSpecPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecHttpServiceSpecPorts {
		return vs[0].([]ElasticsearchSpecHttpServiceSpecPorts)[vs[1].(int)]
	}).(ElasticsearchSpecHttpServiceSpecPortsOutput)
}

type ElasticsearchSpecHttpServiceSpecPortsTargetPort struct {
}

// ElasticsearchSpecHttpServiceSpecPortsTargetPortInput is an input type that accepts ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs and ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecPortsTargetPortInput` via:
//
//          ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs{...}
type ElasticsearchSpecHttpServiceSpecPortsTargetPortInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput
	ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput
}

type ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs struct {
}

func (ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecPortsTargetPort)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs) ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs) ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput)
}

func (i ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput).ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrInput is an input type that accepts ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs, ElasticsearchSpecHttpServiceSpecPortsTargetPortPtr and ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrInput` via:
//
//          ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput
	ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput
}

type elasticsearchSpecHttpServiceSpecPortsTargetPortPtrType ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs

func ElasticsearchSpecHttpServiceSpecPortsTargetPortPtr(v *ElasticsearchSpecHttpServiceSpecPortsTargetPortArgs) ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrInput {
	return (*elasticsearchSpecHttpServiceSpecPortsTargetPortPtrType)(v)
}

func (*elasticsearchSpecHttpServiceSpecPortsTargetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpecPortsTargetPort)(nil)).Elem()
}

func (i *elasticsearchSpecHttpServiceSpecPortsTargetPortPtrType) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpServiceSpecPortsTargetPortPtrType) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput)
}

type ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecPortsTargetPort)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput) ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput) ToElasticsearchSpecHttpServiceSpecPortsTargetPortOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return o.ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecPortsTargetPort) *ElasticsearchSpecHttpServiceSpecPortsTargetPort {
		return &v
	}).(ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput)
}

type ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpecPortsTargetPort)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput) ToElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput) Elem() ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpecPortsTargetPort) ElasticsearchSpecHttpServiceSpecPortsTargetPort {
		return *v
	}).(ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
type ElasticsearchSpecHttpServiceSpecSelector struct {
}

// ElasticsearchSpecHttpServiceSpecSelectorInput is an input type that accepts ElasticsearchSpecHttpServiceSpecSelectorArgs and ElasticsearchSpecHttpServiceSpecSelectorOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecSelectorInput` via:
//
//          ElasticsearchSpecHttpServiceSpecSelectorArgs{...}
type ElasticsearchSpecHttpServiceSpecSelectorInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecSelectorOutput() ElasticsearchSpecHttpServiceSpecSelectorOutput
	ToElasticsearchSpecHttpServiceSpecSelectorOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecSelectorOutput
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
type ElasticsearchSpecHttpServiceSpecSelectorArgs struct {
}

func (ElasticsearchSpecHttpServiceSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecSelector)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecSelectorArgs) ToElasticsearchSpecHttpServiceSpecSelectorOutput() ElasticsearchSpecHttpServiceSpecSelectorOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSelectorOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecSelectorArgs) ToElasticsearchSpecHttpServiceSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSelectorOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
type ElasticsearchSpecHttpServiceSpecSelectorOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecSelector)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecSelectorOutput) ToElasticsearchSpecHttpServiceSpecSelectorOutput() ElasticsearchSpecHttpServiceSpecSelectorOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSelectorOutput) ToElasticsearchSpecHttpServiceSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSelectorOutput {
	return o
}

// sessionAffinityConfig contains the configurations of session affinity.
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfig struct {
	// clientIP contains the configurations of Client IP based session affinity.
	ClientIP *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP `pulumi:"clientIP"`
}

// ElasticsearchSpecHttpServiceSpecSessionAffinityConfigInput is an input type that accepts ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs and ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecSessionAffinityConfigInput` via:
//
//          ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs{...}
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput
	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput
}

// sessionAffinityConfig contains the configurations of session affinity.
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs struct {
	// clientIP contains the configurations of Client IP based session affinity.
	ClientIP ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput `pulumi:"clientIP"`
}

func (ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput)
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput).ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrInput is an input type that accepts ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs, ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtr and ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrInput` via:
//
//          ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput
	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput
}

type elasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrType ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs

func ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtr(v *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigArgs) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrInput {
	return (*elasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrType)(v)
}

func (*elasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i *elasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrType) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrType) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecSessionAffinityConfig) *ElasticsearchSpecHttpServiceSpecSessionAffinityConfig {
		return &v
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput) ClientIP() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecSessionAffinityConfig) *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP {
		return v.ClientIP
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput) Elem() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpecSessionAffinityConfig) ElasticsearchSpecHttpServiceSpecSessionAffinityConfig {
		return *v
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ClientIP() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpecSessionAffinityConfig) *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP {
		if v == nil {
			return nil
		}
		return v.ClientIP
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPInput is an input type that accepts ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs and ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPInput` via:
//
//          ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs{...}
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput
	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput
}

// clientIP contains the configurations of Client IP based session affinity.
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput)
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput).ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput is an input type that accepts ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs, ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtr and ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput` via:
//
//          ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput
	ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput
}

type elasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs

func ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtr(v *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPArgs) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrInput {
	return (*elasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType)(v)
}

func (*elasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (i *elasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return i.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrType) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP) *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP {
		return &v
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) ToElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) Elem() ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP) ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP {
		return *v
	}).(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
func (o ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIP) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type ElasticsearchSpecHttpTls struct {
	// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
	//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
	Certificate *ElasticsearchSpecHttpTlsCertificate `pulumi:"certificate"`
	// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
	SelfSignedCertificate *ElasticsearchSpecHttpTlsSelfSignedCertificate `pulumi:"selfSignedCertificate"`
}

// ElasticsearchSpecHttpTlsInput is an input type that accepts ElasticsearchSpecHttpTlsArgs and ElasticsearchSpecHttpTlsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsInput` via:
//
//          ElasticsearchSpecHttpTlsArgs{...}
type ElasticsearchSpecHttpTlsInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsOutput() ElasticsearchSpecHttpTlsOutput
	ToElasticsearchSpecHttpTlsOutputWithContext(context.Context) ElasticsearchSpecHttpTlsOutput
}

// TLS defines options for configuring TLS for HTTP.
type ElasticsearchSpecHttpTlsArgs struct {
	// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
	//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
	Certificate ElasticsearchSpecHttpTlsCertificatePtrInput `pulumi:"certificate"`
	// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
	SelfSignedCertificate ElasticsearchSpecHttpTlsSelfSignedCertificatePtrInput `pulumi:"selfSignedCertificate"`
}

func (ElasticsearchSpecHttpTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTls)(nil)).Elem()
}

func (i ElasticsearchSpecHttpTlsArgs) ToElasticsearchSpecHttpTlsOutput() ElasticsearchSpecHttpTlsOutput {
	return i.ToElasticsearchSpecHttpTlsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsArgs) ToElasticsearchSpecHttpTlsOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsOutput)
}

func (i ElasticsearchSpecHttpTlsArgs) ToElasticsearchSpecHttpTlsPtrOutput() ElasticsearchSpecHttpTlsPtrOutput {
	return i.ToElasticsearchSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsArgs) ToElasticsearchSpecHttpTlsPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsOutput).ToElasticsearchSpecHttpTlsPtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpTlsPtrInput is an input type that accepts ElasticsearchSpecHttpTlsArgs, ElasticsearchSpecHttpTlsPtr and ElasticsearchSpecHttpTlsPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsPtrInput` via:
//
//          ElasticsearchSpecHttpTlsArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpTlsPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsPtrOutput() ElasticsearchSpecHttpTlsPtrOutput
	ToElasticsearchSpecHttpTlsPtrOutputWithContext(context.Context) ElasticsearchSpecHttpTlsPtrOutput
}

type elasticsearchSpecHttpTlsPtrType ElasticsearchSpecHttpTlsArgs

func ElasticsearchSpecHttpTlsPtr(v *ElasticsearchSpecHttpTlsArgs) ElasticsearchSpecHttpTlsPtrInput {
	return (*elasticsearchSpecHttpTlsPtrType)(v)
}

func (*elasticsearchSpecHttpTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpTls)(nil)).Elem()
}

func (i *elasticsearchSpecHttpTlsPtrType) ToElasticsearchSpecHttpTlsPtrOutput() ElasticsearchSpecHttpTlsPtrOutput {
	return i.ToElasticsearchSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpTlsPtrType) ToElasticsearchSpecHttpTlsPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type ElasticsearchSpecHttpTlsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTls)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsOutput) ToElasticsearchSpecHttpTlsOutput() ElasticsearchSpecHttpTlsOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsOutput) ToElasticsearchSpecHttpTlsOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsOutput) ToElasticsearchSpecHttpTlsPtrOutput() ElasticsearchSpecHttpTlsPtrOutput {
	return o.ToElasticsearchSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpTlsOutput) ToElasticsearchSpecHttpTlsPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTls) *ElasticsearchSpecHttpTls {
		return &v
	}).(ElasticsearchSpecHttpTlsPtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
func (o ElasticsearchSpecHttpTlsOutput) Certificate() ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTls) *ElasticsearchSpecHttpTlsCertificate { return v.Certificate }).(ElasticsearchSpecHttpTlsCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
func (o ElasticsearchSpecHttpTlsOutput) SelfSignedCertificate() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTls) *ElasticsearchSpecHttpTlsSelfSignedCertificate {
		return v.SelfSignedCertificate
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput)
}

type ElasticsearchSpecHttpTlsPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpTls)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsPtrOutput) ToElasticsearchSpecHttpTlsPtrOutput() ElasticsearchSpecHttpTlsPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsPtrOutput) ToElasticsearchSpecHttpTlsPtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsPtrOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsPtrOutput) Elem() ElasticsearchSpecHttpTlsOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTls) ElasticsearchSpecHttpTls { return *v }).(ElasticsearchSpecHttpTlsOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
func (o ElasticsearchSpecHttpTlsPtrOutput) Certificate() ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTls) *ElasticsearchSpecHttpTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(ElasticsearchSpecHttpTlsCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
func (o ElasticsearchSpecHttpTlsPtrOutput) SelfSignedCertificate() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTls) *ElasticsearchSpecHttpTlsSelfSignedCertificate {
		if v == nil {
			return nil
		}
		return v.SelfSignedCertificate
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
type ElasticsearchSpecHttpTlsCertificate struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// ElasticsearchSpecHttpTlsCertificateInput is an input type that accepts ElasticsearchSpecHttpTlsCertificateArgs and ElasticsearchSpecHttpTlsCertificateOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsCertificateInput` via:
//
//          ElasticsearchSpecHttpTlsCertificateArgs{...}
type ElasticsearchSpecHttpTlsCertificateInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsCertificateOutput() ElasticsearchSpecHttpTlsCertificateOutput
	ToElasticsearchSpecHttpTlsCertificateOutputWithContext(context.Context) ElasticsearchSpecHttpTlsCertificateOutput
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
type ElasticsearchSpecHttpTlsCertificateArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (ElasticsearchSpecHttpTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTlsCertificate)(nil)).Elem()
}

func (i ElasticsearchSpecHttpTlsCertificateArgs) ToElasticsearchSpecHttpTlsCertificateOutput() ElasticsearchSpecHttpTlsCertificateOutput {
	return i.ToElasticsearchSpecHttpTlsCertificateOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsCertificateArgs) ToElasticsearchSpecHttpTlsCertificateOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsCertificateOutput)
}

func (i ElasticsearchSpecHttpTlsCertificateArgs) ToElasticsearchSpecHttpTlsCertificatePtrOutput() ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return i.ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsCertificateArgs) ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsCertificateOutput).ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpTlsCertificatePtrInput is an input type that accepts ElasticsearchSpecHttpTlsCertificateArgs, ElasticsearchSpecHttpTlsCertificatePtr and ElasticsearchSpecHttpTlsCertificatePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsCertificatePtrInput` via:
//
//          ElasticsearchSpecHttpTlsCertificateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpTlsCertificatePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsCertificatePtrOutput() ElasticsearchSpecHttpTlsCertificatePtrOutput
	ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(context.Context) ElasticsearchSpecHttpTlsCertificatePtrOutput
}

type elasticsearchSpecHttpTlsCertificatePtrType ElasticsearchSpecHttpTlsCertificateArgs

func ElasticsearchSpecHttpTlsCertificatePtr(v *ElasticsearchSpecHttpTlsCertificateArgs) ElasticsearchSpecHttpTlsCertificatePtrInput {
	return (*elasticsearchSpecHttpTlsCertificatePtrType)(v)
}

func (*elasticsearchSpecHttpTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpTlsCertificate)(nil)).Elem()
}

func (i *elasticsearchSpecHttpTlsCertificatePtrType) ToElasticsearchSpecHttpTlsCertificatePtrOutput() ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return i.ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpTlsCertificatePtrType) ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsCertificatePtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS. The referenced secret should contain the following:
//  - `ca.crt`: The certificate authority (optional). - `tls.crt`: The certificate (or a chain). - `tls.key`: The private key to the first certificate in the certificate chain.
type ElasticsearchSpecHttpTlsCertificateOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTlsCertificate)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsCertificateOutput) ToElasticsearchSpecHttpTlsCertificateOutput() ElasticsearchSpecHttpTlsCertificateOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsCertificateOutput) ToElasticsearchSpecHttpTlsCertificateOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsCertificateOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsCertificateOutput) ToElasticsearchSpecHttpTlsCertificatePtrOutput() ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return o.ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpTlsCertificateOutput) ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsCertificate) *ElasticsearchSpecHttpTlsCertificate {
		return &v
	}).(ElasticsearchSpecHttpTlsCertificatePtrOutput)
}

// SecretName is the name of the secret.
func (o ElasticsearchSpecHttpTlsCertificateOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsCertificate) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecHttpTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpTlsCertificate)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsCertificatePtrOutput) ToElasticsearchSpecHttpTlsCertificatePtrOutput() ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsCertificatePtrOutput) ToElasticsearchSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsCertificatePtrOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsCertificatePtrOutput) Elem() ElasticsearchSpecHttpTlsCertificateOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTlsCertificate) ElasticsearchSpecHttpTlsCertificate { return *v }).(ElasticsearchSpecHttpTlsCertificateOutput)
}

// SecretName is the name of the secret.
func (o ElasticsearchSpecHttpTlsCertificatePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTlsCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type ElasticsearchSpecHttpTlsSelfSignedCertificate struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled *bool `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames []ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames `pulumi:"subjectAltNames"`
}

// ElasticsearchSpecHttpTlsSelfSignedCertificateInput is an input type that accepts ElasticsearchSpecHttpTlsSelfSignedCertificateArgs and ElasticsearchSpecHttpTlsSelfSignedCertificateOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsSelfSignedCertificateInput` via:
//
//          ElasticsearchSpecHttpTlsSelfSignedCertificateArgs{...}
type ElasticsearchSpecHttpTlsSelfSignedCertificateInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsSelfSignedCertificateOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateOutput
	ToElasticsearchSpecHttpTlsSelfSignedCertificateOutputWithContext(context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateOutput
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type ElasticsearchSpecHttpTlsSelfSignedCertificateArgs struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput `pulumi:"subjectAltNames"`
}

func (ElasticsearchSpecHttpTlsSelfSignedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateArgs) ToElasticsearchSpecHttpTlsSelfSignedCertificateOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateOutput {
	return i.ToElasticsearchSpecHttpTlsSelfSignedCertificateOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateArgs) ToElasticsearchSpecHttpTlsSelfSignedCertificateOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsSelfSignedCertificateOutput)
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateArgs) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return i.ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateArgs) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsSelfSignedCertificateOutput).ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx)
}

// ElasticsearchSpecHttpTlsSelfSignedCertificatePtrInput is an input type that accepts ElasticsearchSpecHttpTlsSelfSignedCertificateArgs, ElasticsearchSpecHttpTlsSelfSignedCertificatePtr and ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsSelfSignedCertificatePtrInput` via:
//
//          ElasticsearchSpecHttpTlsSelfSignedCertificateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecHttpTlsSelfSignedCertificatePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput
	ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput
}

type elasticsearchSpecHttpTlsSelfSignedCertificatePtrType ElasticsearchSpecHttpTlsSelfSignedCertificateArgs

func ElasticsearchSpecHttpTlsSelfSignedCertificatePtr(v *ElasticsearchSpecHttpTlsSelfSignedCertificateArgs) ElasticsearchSpecHttpTlsSelfSignedCertificatePtrInput {
	return (*elasticsearchSpecHttpTlsSelfSignedCertificatePtrType)(v)
}

func (*elasticsearchSpecHttpTlsSelfSignedCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (i *elasticsearchSpecHttpTlsSelfSignedCertificatePtrType) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return i.ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecHttpTlsSelfSignedCertificatePtrType) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type ElasticsearchSpecHttpTlsSelfSignedCertificateOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificateOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificateOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsSelfSignedCertificate) *ElasticsearchSpecHttpTlsSelfSignedCertificate {
		return &v
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsSelfSignedCertificate) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o ElasticsearchSpecHttpTlsSelfSignedCertificateOutput) SubjectAltNames() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsSelfSignedCertificate) []ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		return v.SubjectAltNames
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

type ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput() ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput) Elem() ElasticsearchSpecHttpTlsSelfSignedCertificateOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTlsSelfSignedCertificate) ElasticsearchSpecHttpTlsSelfSignedCertificate {
		return *v
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificateOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTlsSelfSignedCertificate) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput) SubjectAltNames() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecHttpTlsSelfSignedCertificate) []ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames struct {
	// DNS is the DNS name of the subject.
	Dns *string `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip *string `pulumi:"ip"`
}

// ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput is an input type that accepts ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs and ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput` via:
//
//          ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{...}
type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput
	ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs struct {
	// DNS is the DNS name of the subject.
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return i.ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput)
}

// ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput is an input type that accepts ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray and ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput` via:
//
//          ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray{ ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{...} }
type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput
	ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput
}

type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray []ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput

func (ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return i.ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return o
}

// DNS is the DNS name of the subject.
func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// IP is the IP address of the subject.
func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ToElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o
}

func (o ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		return vs[0].([]ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNames)[vs[1].(int)]
	}).(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput)
}

// NodeSet is the specification for a group of Elasticsearch nodes sharing the same configuration and a Pod template.
type ElasticsearchSpecNodeSets struct {
	// Config holds the Elasticsearch configuration.
	Config map[string]interface{} `pulumi:"config"`
	// Count of Elasticsearch nodes to deploy.
	Count int `pulumi:"count"`
	// Name of this set of nodes. Becomes a part of the Elasticsearch node.name setting.
	Name string `pulumi:"name"`
	// PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
	PodTemplate map[string]interface{} `pulumi:"podTemplate"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod in this NodeSet. Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate. Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates []ElasticsearchSpecNodeSetsVolumeClaimTemplates `pulumi:"volumeClaimTemplates"`
}

// ElasticsearchSpecNodeSetsInput is an input type that accepts ElasticsearchSpecNodeSetsArgs and ElasticsearchSpecNodeSetsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsInput` via:
//
//          ElasticsearchSpecNodeSetsArgs{...}
type ElasticsearchSpecNodeSetsInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsOutput() ElasticsearchSpecNodeSetsOutput
	ToElasticsearchSpecNodeSetsOutputWithContext(context.Context) ElasticsearchSpecNodeSetsOutput
}

// NodeSet is the specification for a group of Elasticsearch nodes sharing the same configuration and a Pod template.
type ElasticsearchSpecNodeSetsArgs struct {
	// Config holds the Elasticsearch configuration.
	Config pulumi.MapInput `pulumi:"config"`
	// Count of Elasticsearch nodes to deploy.
	Count pulumi.IntInput `pulumi:"count"`
	// Name of this set of nodes. Becomes a part of the Elasticsearch node.name setting.
	Name pulumi.StringInput `pulumi:"name"`
	// PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
	PodTemplate pulumi.MapInput `pulumi:"podTemplate"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod in this NodeSet. Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate. Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayInput `pulumi:"volumeClaimTemplates"`
}

func (ElasticsearchSpecNodeSetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSets)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsArgs) ToElasticsearchSpecNodeSetsOutput() ElasticsearchSpecNodeSetsOutput {
	return i.ToElasticsearchSpecNodeSetsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsArgs) ToElasticsearchSpecNodeSetsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsOutput)
}

// ElasticsearchSpecNodeSetsArrayInput is an input type that accepts ElasticsearchSpecNodeSetsArray and ElasticsearchSpecNodeSetsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsArrayInput` via:
//
//          ElasticsearchSpecNodeSetsArray{ ElasticsearchSpecNodeSetsArgs{...} }
type ElasticsearchSpecNodeSetsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsArrayOutput() ElasticsearchSpecNodeSetsArrayOutput
	ToElasticsearchSpecNodeSetsArrayOutputWithContext(context.Context) ElasticsearchSpecNodeSetsArrayOutput
}

type ElasticsearchSpecNodeSetsArray []ElasticsearchSpecNodeSetsInput

func (ElasticsearchSpecNodeSetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSets)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsArray) ToElasticsearchSpecNodeSetsArrayOutput() ElasticsearchSpecNodeSetsArrayOutput {
	return i.ToElasticsearchSpecNodeSetsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsArray) ToElasticsearchSpecNodeSetsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsArrayOutput)
}

// NodeSet is the specification for a group of Elasticsearch nodes sharing the same configuration and a Pod template.
type ElasticsearchSpecNodeSetsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSets)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsOutput) ToElasticsearchSpecNodeSetsOutput() ElasticsearchSpecNodeSetsOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsOutput) ToElasticsearchSpecNodeSetsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsOutput {
	return o
}

// Config holds the Elasticsearch configuration.
func (o ElasticsearchSpecNodeSetsOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSets) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Count of Elasticsearch nodes to deploy.
func (o ElasticsearchSpecNodeSetsOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSets) int { return v.Count }).(pulumi.IntOutput)
}

// Name of this set of nodes. Becomes a part of the Elasticsearch node.name setting.
func (o ElasticsearchSpecNodeSetsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSets) string { return v.Name }).(pulumi.StringOutput)
}

// PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
func (o ElasticsearchSpecNodeSetsOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSets) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod in this NodeSet. Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate. Items defined here take precedence over any default claims added by the operator with the same name.
func (o ElasticsearchSpecNodeSetsOutput) VolumeClaimTemplates() ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSets) []ElasticsearchSpecNodeSetsVolumeClaimTemplates {
		return v.VolumeClaimTemplates
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput)
}

type ElasticsearchSpecNodeSetsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSets)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsArrayOutput) ToElasticsearchSpecNodeSetsArrayOutput() ElasticsearchSpecNodeSetsArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsArrayOutput) ToElasticsearchSpecNodeSetsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecNodeSetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSets {
		return vs[0].([]ElasticsearchSpecNodeSets)[vs[1].(int)]
	}).(ElasticsearchSpecNodeSetsOutput)
}

// Config holds the Elasticsearch configuration.
type ElasticsearchSpecNodeSetsConfig struct {
}

// ElasticsearchSpecNodeSetsConfigInput is an input type that accepts ElasticsearchSpecNodeSetsConfigArgs and ElasticsearchSpecNodeSetsConfigOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsConfigInput` via:
//
//          ElasticsearchSpecNodeSetsConfigArgs{...}
type ElasticsearchSpecNodeSetsConfigInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsConfigOutput() ElasticsearchSpecNodeSetsConfigOutput
	ToElasticsearchSpecNodeSetsConfigOutputWithContext(context.Context) ElasticsearchSpecNodeSetsConfigOutput
}

// Config holds the Elasticsearch configuration.
type ElasticsearchSpecNodeSetsConfigArgs struct {
}

func (ElasticsearchSpecNodeSetsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsConfig)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsConfigArgs) ToElasticsearchSpecNodeSetsConfigOutput() ElasticsearchSpecNodeSetsConfigOutput {
	return i.ToElasticsearchSpecNodeSetsConfigOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsConfigArgs) ToElasticsearchSpecNodeSetsConfigOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsConfigOutput)
}

// Config holds the Elasticsearch configuration.
type ElasticsearchSpecNodeSetsConfigOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsConfig)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsConfigOutput) ToElasticsearchSpecNodeSetsConfigOutput() ElasticsearchSpecNodeSetsConfigOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsConfigOutput) ToElasticsearchSpecNodeSetsConfigOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsConfigOutput {
	return o
}

// PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
type ElasticsearchSpecNodeSetsPodTemplate struct {
}

// ElasticsearchSpecNodeSetsPodTemplateInput is an input type that accepts ElasticsearchSpecNodeSetsPodTemplateArgs and ElasticsearchSpecNodeSetsPodTemplateOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsPodTemplateInput` via:
//
//          ElasticsearchSpecNodeSetsPodTemplateArgs{...}
type ElasticsearchSpecNodeSetsPodTemplateInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsPodTemplateOutput() ElasticsearchSpecNodeSetsPodTemplateOutput
	ToElasticsearchSpecNodeSetsPodTemplateOutputWithContext(context.Context) ElasticsearchSpecNodeSetsPodTemplateOutput
}

// PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
type ElasticsearchSpecNodeSetsPodTemplateArgs struct {
}

func (ElasticsearchSpecNodeSetsPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsPodTemplate)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsPodTemplateArgs) ToElasticsearchSpecNodeSetsPodTemplateOutput() ElasticsearchSpecNodeSetsPodTemplateOutput {
	return i.ToElasticsearchSpecNodeSetsPodTemplateOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsPodTemplateArgs) ToElasticsearchSpecNodeSetsPodTemplateOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsPodTemplateOutput)
}

// PodTemplate provides customisation options (labels, annotations, affinity rules, resource requests, and so on) for the Pods belonging to this NodeSet.
type ElasticsearchSpecNodeSetsPodTemplateOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsPodTemplate)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsPodTemplateOutput) ToElasticsearchSpecNodeSetsPodTemplateOutput() ElasticsearchSpecNodeSetsPodTemplateOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsPodTemplateOutput) ToElasticsearchSpecNodeSetsPodTemplateOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsPodTemplateOutput {
	return o
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type ElasticsearchSpecNodeSetsVolumeClaimTemplates struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	Spec *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec `pulumi:"spec"`
	// Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	Status *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus `pulumi:"status"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	Spec ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrInput `pulumi:"spec"`
	// Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	Status ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrInput `pulumi:"status"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplates)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesArray and ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesArray{ ElasticsearchSpecNodeSetsVolumeClaimTemplatesArgs{...} }
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesArray []ElasticsearchSpecNodeSetsVolumeClaimTemplatesInput

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSetsVolumeClaimTemplates)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesArray) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesArray) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplates)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplates) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplates) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplates) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) Spec() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplates) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec {
		return v.Spec
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput)
}

// Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput) Status() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplates) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus {
		return v.Status
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSetsVolumeClaimTemplates)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSetsVolumeClaimTemplates {
		return vs[0].([]ElasticsearchSpecNodeSetsVolumeClaimTemplates)[vs[1].(int)]
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadata struct {
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataArgs struct {
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput {
	return o
}

// Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec struct {
	// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes []string `pulumi:"accessModes"`
	// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
	DataSource *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource `pulumi:"dataSource"`
	// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources `pulumi:"resources"`
	// A label query over volumes to consider for binding.
	Selector *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector `pulumi:"selector"`
	// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// VolumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput
}

// Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs struct {
	// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
	DataSource ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrInput `pulumi:"dataSource"`
	// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrInput `pulumi:"resources"`
	// A label query over volumes to consider for binding.
	Selector ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrInput `pulumi:"selector"`
	// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// VolumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput)
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput).ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(ctx)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs, ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtr and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput
}

type elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrType ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs

func ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtr(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecArgs) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrInput {
	return (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrType)(v)
}

func (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput)
}

// Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return o.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec {
		return &v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput)
}

// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) DataSource() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource {
		return v.DataSource
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) Resources() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources {
		return v.Resources
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// A label query over volumes to consider for binding.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) Selector() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector {
		return v.Selector
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// VolumeName is the binding reference to the PersistentVolume backing this claim.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) Elem() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec {
		return *v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput)
}

// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) DataSource() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) Resources() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// A label query over volumes to consider for binding.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) Selector() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// VolumeName is the binding reference to the PersistentVolume backing this claim.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput)
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput).ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs, ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtr and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput
}

type elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrType ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs

func ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtr(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceArgs) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrInput {
	return (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrType)(v)
}

func (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource {
		return &v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) string { return v.Name }).(pulumi.StringOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) Elem() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource {
		return *v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests `pulumi:"requests"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput
}

// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapInput `pulumi:"requests"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput)
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput).ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs, ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtr and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput
}

type elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrType ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs

func ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtr(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesArgs) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrInput {
	return (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrType)(v)
}

func (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources {
		return &v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) Limits() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources) map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits {
		return v.Limits
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput) Requests() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources) map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests {
		return v.Requests
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput) Elem() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources {
		return *v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput) Limits() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources) map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput) Requests() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResources) map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits struct {
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs struct {
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMap and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMap{ "key": ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsArgs{...} }
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMap map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsInput

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMap) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMap) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput {
	return o
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput) MapIndex(k pulumi.StringInput) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits {
		return vs[0].(map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimits)[vs[1].(string)]
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests struct {
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs struct {
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMap and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMap{ "key": ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsArgs{...} }
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMap map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsInput

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMap) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMap) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput {
	return o
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput) MapIndex(k pulumi.StringInput) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests {
		return vs[0].(map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequests)[vs[1].(string)]
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput)
}

// A label query over volumes to consider for binding.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput
}

// A label query over volumes to consider for binding.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput)
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput).ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs, ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtr and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput
}

type elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrType ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs

func ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtr(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorArgs) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrInput {
	return (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrType)(v)
}

func (*elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// A label query over volumes to consider for binding.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector {
		return &v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) MatchExpressions() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector) []ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput) Elem() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector {
		return *v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput) MatchExpressions() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector) []ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArray and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArray{ ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{...} }
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArray []ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsInput

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions {
		return vs[0].([]ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabels struct {
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsArgs struct {
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabels)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabels)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput {
	return o
}

// Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus struct {
	// AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes []string `pulumi:"accessModes"`
	// Represents the actual resources of the underlying volume.
	Capacity map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity `pulumi:"capacity"`
	// Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
	Conditions []ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions `pulumi:"conditions"`
	// Phase represents the current phase of PersistentVolumeClaim.
	Phase *string `pulumi:"phase"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput
}

// Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs struct {
	// AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	// Represents the actual resources of the underlying volume.
	Capacity ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapInput `pulumi:"capacity"`
	// Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
	Conditions ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayInput `pulumi:"conditions"`
	// Phase represents the current phase of PersistentVolumeClaim.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput)
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput).ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(ctx)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs, ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtr and ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput
}

type elasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrType ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs

func ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtr(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusArgs) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrInput {
	return (*elasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrType)(v)
}

func (*elasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus)(nil)).Elem()
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrType) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput)
}

// Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return o.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus {
		return &v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput)
}

// AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// Represents the actual resources of the underlying volume.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) Capacity() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity {
		return v.Capacity
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput)
}

// Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) Conditions() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) []ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions {
		return v.Conditions
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput)
}

// Phase represents the current phase of PersistentVolumeClaim.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) Elem() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus {
		return *v
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput)
}

// AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

// Represents the actual resources of the underlying volume.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) Capacity() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput)
}

// Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) Conditions() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) []ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput)
}

// Phase represents the current phase of PersistentVolumeClaim.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity struct {
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs struct {
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMap and ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMap{ "key": ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityArgs{...} }
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMap map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityInput

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMap) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMap) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput {
	return o
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput) MapIndex(k pulumi.StringInput) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity {
		return vs[0].(map[string]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacity)[vs[1].(string)]
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput)
}

// PersistentVolumeClaimCondition contails details about state of pvc
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions struct {
	// Last time we probed the condition.
	LastProbeTime *string `pulumi:"lastProbeTime"`
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
	Reason *string `pulumi:"reason"`
	Status string  `pulumi:"status"`
	// PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
	Type string `pulumi:"type"`
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs and ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs{...}
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput
}

// PersistentVolumeClaimCondition contails details about state of pvc
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs struct {
	// Last time we probed the condition.
	LastProbeTime pulumi.StringPtrInput `pulumi:"lastProbeTime"`
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Status pulumi.StringInput    `pulumi:"status"`
	// PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput)
}

// ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayInput is an input type that accepts ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArray and ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayInput` via:
//
//          ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArray{ ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArgs{...} }
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput
	ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutputWithContext(context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArray []ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsInput

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions)(nil)).Elem()
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArray) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput {
	return i.ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArray) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput)
}

// PersistentVolumeClaimCondition contails details about state of pvc
type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput {
	return o
}

// Last time we probed the condition.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) LastProbeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions) *string { return v.LastProbeTime }).(pulumi.StringPtrOutput)
}

// Last time the condition transitioned from one status to another.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions) *string {
		return v.LastTransitionTime
	}).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about last transition.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions)(nil)).Elem()
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput() ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput) ToElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput {
	return o
}

func (o ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions {
		return vs[0].([]ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditions)[vs[1].(int)]
	}).(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput)
}

// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
type ElasticsearchSpecPodDisruptionBudget struct {
	// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Spec is the specification of the PDB.
	Spec *ElasticsearchSpecPodDisruptionBudgetSpec `pulumi:"spec"`
}

// ElasticsearchSpecPodDisruptionBudgetInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetArgs and ElasticsearchSpecPodDisruptionBudgetOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetArgs{...}
type ElasticsearchSpecPodDisruptionBudgetInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetOutput() ElasticsearchSpecPodDisruptionBudgetOutput
	ToElasticsearchSpecPodDisruptionBudgetOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetOutput
}

// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
type ElasticsearchSpecPodDisruptionBudgetArgs struct {
	// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// Spec is the specification of the PDB.
	Spec ElasticsearchSpecPodDisruptionBudgetSpecPtrInput `pulumi:"spec"`
}

func (ElasticsearchSpecPodDisruptionBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudget)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetArgs) ToElasticsearchSpecPodDisruptionBudgetOutput() ElasticsearchSpecPodDisruptionBudgetOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetArgs) ToElasticsearchSpecPodDisruptionBudgetOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetOutput)
}

func (i ElasticsearchSpecPodDisruptionBudgetArgs) ToElasticsearchSpecPodDisruptionBudgetPtrOutput() ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetArgs) ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetOutput).ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(ctx)
}

// ElasticsearchSpecPodDisruptionBudgetPtrInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetArgs, ElasticsearchSpecPodDisruptionBudgetPtr and ElasticsearchSpecPodDisruptionBudgetPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetPtrInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecPodDisruptionBudgetPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetPtrOutput() ElasticsearchSpecPodDisruptionBudgetPtrOutput
	ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetPtrOutput
}

type elasticsearchSpecPodDisruptionBudgetPtrType ElasticsearchSpecPodDisruptionBudgetArgs

func ElasticsearchSpecPodDisruptionBudgetPtr(v *ElasticsearchSpecPodDisruptionBudgetArgs) ElasticsearchSpecPodDisruptionBudgetPtrInput {
	return (*elasticsearchSpecPodDisruptionBudgetPtrType)(v)
}

func (*elasticsearchSpecPodDisruptionBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudget)(nil)).Elem()
}

func (i *elasticsearchSpecPodDisruptionBudgetPtrType) ToElasticsearchSpecPodDisruptionBudgetPtrOutput() ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecPodDisruptionBudgetPtrType) ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetPtrOutput)
}

// PodDisruptionBudget provides access to the default pod disruption budget for the Elasticsearch cluster. The default budget selects all cluster pods and sets `maxUnavailable` to 1. To disable, set `PodDisruptionBudget` to the empty value (`{}` in YAML).
type ElasticsearchSpecPodDisruptionBudgetOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudget)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetOutput) ToElasticsearchSpecPodDisruptionBudgetOutput() ElasticsearchSpecPodDisruptionBudgetOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetOutput) ToElasticsearchSpecPodDisruptionBudgetOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetOutput) ToElasticsearchSpecPodDisruptionBudgetPtrOutput() ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return o.ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecPodDisruptionBudgetOutput) ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudget) *ElasticsearchSpecPodDisruptionBudget {
		return &v
	}).(ElasticsearchSpecPodDisruptionBudgetPtrOutput)
}

// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
func (o ElasticsearchSpecPodDisruptionBudgetOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudget) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// Spec is the specification of the PDB.
func (o ElasticsearchSpecPodDisruptionBudgetOutput) Spec() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudget) *ElasticsearchSpecPodDisruptionBudgetSpec { return v.Spec }).(ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudget)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetPtrOutput) ToElasticsearchSpecPodDisruptionBudgetPtrOutput() ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetPtrOutput) ToElasticsearchSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetPtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetPtrOutput) Elem() ElasticsearchSpecPodDisruptionBudgetOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudget) ElasticsearchSpecPodDisruptionBudget { return *v }).(ElasticsearchSpecPodDisruptionBudgetOutput)
}

// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
func (o ElasticsearchSpecPodDisruptionBudgetPtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudget) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Spec is the specification of the PDB.
func (o ElasticsearchSpecPodDisruptionBudgetPtrOutput) Spec() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudget) *ElasticsearchSpecPodDisruptionBudgetSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput)
}

// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecPodDisruptionBudgetMetadata struct {
}

// ElasticsearchSpecPodDisruptionBudgetMetadataInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetMetadataArgs and ElasticsearchSpecPodDisruptionBudgetMetadataOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetMetadataInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetMetadataArgs{...}
type ElasticsearchSpecPodDisruptionBudgetMetadataInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetMetadataOutput() ElasticsearchSpecPodDisruptionBudgetMetadataOutput
	ToElasticsearchSpecPodDisruptionBudgetMetadataOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetMetadataOutput
}

// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecPodDisruptionBudgetMetadataArgs struct {
}

func (ElasticsearchSpecPodDisruptionBudgetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetMetadata)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetMetadataArgs) ToElasticsearchSpecPodDisruptionBudgetMetadataOutput() ElasticsearchSpecPodDisruptionBudgetMetadataOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetMetadataOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetMetadataArgs) ToElasticsearchSpecPodDisruptionBudgetMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetMetadataOutput)
}

// ObjectMeta is the metadata of the PDB. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecPodDisruptionBudgetMetadataOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetMetadata)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetMetadataOutput) ToElasticsearchSpecPodDisruptionBudgetMetadataOutput() ElasticsearchSpecPodDisruptionBudgetMetadataOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetMetadataOutput) ToElasticsearchSpecPodDisruptionBudgetMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetMetadataOutput {
	return o
}

// Spec is the specification of the PDB.
type ElasticsearchSpecPodDisruptionBudgetSpec struct {
	// An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
	MaxUnavailable *ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable `pulumi:"maxUnavailable"`
	// An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
	MinAvailable *ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable `pulumi:"minAvailable"`
	// Label query over pods whose evictions are managed by the disruption budget.
	Selector *ElasticsearchSpecPodDisruptionBudgetSpecSelector `pulumi:"selector"`
}

// ElasticsearchSpecPodDisruptionBudgetSpecInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecArgs and ElasticsearchSpecPodDisruptionBudgetSpecOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecArgs{...}
type ElasticsearchSpecPodDisruptionBudgetSpecInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecOutput() ElasticsearchSpecPodDisruptionBudgetSpecOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecOutput
}

// Spec is the specification of the PDB.
type ElasticsearchSpecPodDisruptionBudgetSpecArgs struct {
	// An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
	MaxUnavailable ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrInput `pulumi:"maxUnavailable"`
	// An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
	MinAvailable ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrInput `pulumi:"minAvailable"`
	// Label query over pods whose evictions are managed by the disruption budget.
	Selector ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrInput `pulumi:"selector"`
}

func (ElasticsearchSpecPodDisruptionBudgetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpec)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecArgs) ToElasticsearchSpecPodDisruptionBudgetSpecOutput() ElasticsearchSpecPodDisruptionBudgetSpecOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecArgs) ToElasticsearchSpecPodDisruptionBudgetSpecOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecOutput)
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecArgs) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecArgs) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecOutput).ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(ctx)
}

// ElasticsearchSpecPodDisruptionBudgetSpecPtrInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecArgs, ElasticsearchSpecPodDisruptionBudgetSpecPtr and ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecPtrInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecPodDisruptionBudgetSpecPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput
}

type elasticsearchSpecPodDisruptionBudgetSpecPtrType ElasticsearchSpecPodDisruptionBudgetSpecArgs

func ElasticsearchSpecPodDisruptionBudgetSpecPtr(v *ElasticsearchSpecPodDisruptionBudgetSpecArgs) ElasticsearchSpecPodDisruptionBudgetSpecPtrInput {
	return (*elasticsearchSpecPodDisruptionBudgetSpecPtrType)(v)
}

func (*elasticsearchSpecPodDisruptionBudgetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpec)(nil)).Elem()
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecPtrType) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecPtrType) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput)
}

// Spec is the specification of the PDB.
type ElasticsearchSpecPodDisruptionBudgetSpecOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpec)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) ToElasticsearchSpecPodDisruptionBudgetSpecOutput() ElasticsearchSpecPodDisruptionBudgetSpecOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) ToElasticsearchSpecPodDisruptionBudgetSpecOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return o.ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpec {
		return &v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput)
}

// An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) MaxUnavailable() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable {
		return v.MaxUnavailable
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput)
}

// An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) MinAvailable() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable {
		return v.MinAvailable
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput)
}

// Label query over pods whose evictions are managed by the disruption budget.
func (o ElasticsearchSpecPodDisruptionBudgetSpecOutput) Selector() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpecSelector {
		return v.Selector
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpec)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) Elem() ElasticsearchSpecPodDisruptionBudgetSpecOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpec) ElasticsearchSpecPodDisruptionBudgetSpec { return *v }).(ElasticsearchSpecPodDisruptionBudgetSpecOutput)
}

// An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
func (o ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) MaxUnavailable() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput)
}

// An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
func (o ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) MinAvailable() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable {
		if v == nil {
			return nil
		}
		return v.MinAvailable
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput)
}

// Label query over pods whose evictions are managed by the disruption budget.
func (o ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput) Selector() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpec) *ElasticsearchSpecPodDisruptionBudgetSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable struct {
}

// ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs and ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs{...}
type ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput
}

type ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs struct {
}

func (ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput)
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput).ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(ctx)
}

// ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs, ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtr and ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput
}

type elasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrType ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs

func ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtr(v *ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableArgs) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrInput {
	return (*elasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrType)(v)
}

func (*elasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable)(nil)).Elem()
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrType) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrType) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return o.ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable) *ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable {
		return &v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput) Elem() ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable) ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailable {
		return *v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable struct {
}

// ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs and ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs{...}
type ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput
}

type ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs struct {
}

func (ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput)
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput).ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(ctx)
}

// ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs, ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtr and ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput
}

type elasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrType ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs

func ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtr(v *ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableArgs) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrInput {
	return (*elasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrType)(v)
}

func (*elasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable)(nil)).Elem()
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrType) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrType) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return o.ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable) *ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable {
		return &v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput) Elem() ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable) ElasticsearchSpecPodDisruptionBudgetSpecMinAvailable {
		return *v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput)
}

// Label query over pods whose evictions are managed by the disruption budget.
type ElasticsearchSpecPodDisruptionBudgetSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ElasticsearchSpecPodDisruptionBudgetSpecSelectorInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs and ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecSelectorInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs{...}
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput
}

// Label query over pods whose evictions are managed by the disruption budget.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecSelector)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput)
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput).ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(ctx)
}

// ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs, ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtr and ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput
}

type elasticsearchSpecPodDisruptionBudgetSpecSelectorPtrType ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs

func ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtr(v *ElasticsearchSpecPodDisruptionBudgetSpecSelectorArgs) ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrInput {
	return (*elasticsearchSpecPodDisruptionBudgetSpecSelectorPtrType)(v)
}

func (*elasticsearchSpecPodDisruptionBudgetSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpecSelector)(nil)).Elem()
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecSelectorPtrType) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecPodDisruptionBudgetSpecSelectorPtrType) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput)
}

// Label query over pods whose evictions are managed by the disruption budget.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecSelector)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return o.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecSelector) *ElasticsearchSpecPodDisruptionBudgetSpecSelector {
		return &v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) MatchExpressions() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecSelector) []ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecPodDisruptionBudgetSpecSelector)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput) Elem() ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpecSelector) ElasticsearchSpecPodDisruptionBudgetSpecSelector {
		return *v
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput) MatchExpressions() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpecSelector) []ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecPodDisruptionBudgetSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs and ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs{...}
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput)
}

// ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArray and ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArray{ ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArgs{...} }
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput
}

type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArray []ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsInput

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArray) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArray) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions {
		return vs[0].([]ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabels struct {
}

// ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsInput is an input type that accepts ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsArgs and ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsInput` via:
//
//          ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsArgs{...}
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsInput interface {
	pulumi.Input

	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput
	ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutputWithContext(context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsArgs struct {
}

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabels)(nil)).Elem()
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput {
	return i.ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsArgs) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabels)(nil)).Elem()
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput() ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput {
	return o
}

func (o ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput) ToElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutputWithContext(ctx context.Context) ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput {
	return o
}

// RemoteCluster declares a remote Elasticsearch cluster connection.
type ElasticsearchSpecRemoteClusters struct {
	// ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.
	ElasticsearchRef *ElasticsearchSpecRemoteClustersElasticsearchRef `pulumi:"elasticsearchRef"`
	// Name is the name of the remote cluster as it is set in the Elasticsearch settings. The name is expected to be unique for each remote clusters.
	Name string `pulumi:"name"`
}

// ElasticsearchSpecRemoteClustersInput is an input type that accepts ElasticsearchSpecRemoteClustersArgs and ElasticsearchSpecRemoteClustersOutput values.
// You can construct a concrete instance of `ElasticsearchSpecRemoteClustersInput` via:
//
//          ElasticsearchSpecRemoteClustersArgs{...}
type ElasticsearchSpecRemoteClustersInput interface {
	pulumi.Input

	ToElasticsearchSpecRemoteClustersOutput() ElasticsearchSpecRemoteClustersOutput
	ToElasticsearchSpecRemoteClustersOutputWithContext(context.Context) ElasticsearchSpecRemoteClustersOutput
}

// RemoteCluster declares a remote Elasticsearch cluster connection.
type ElasticsearchSpecRemoteClustersArgs struct {
	// ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.
	ElasticsearchRef ElasticsearchSpecRemoteClustersElasticsearchRefPtrInput `pulumi:"elasticsearchRef"`
	// Name is the name of the remote cluster as it is set in the Elasticsearch settings. The name is expected to be unique for each remote clusters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ElasticsearchSpecRemoteClustersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecRemoteClusters)(nil)).Elem()
}

func (i ElasticsearchSpecRemoteClustersArgs) ToElasticsearchSpecRemoteClustersOutput() ElasticsearchSpecRemoteClustersOutput {
	return i.ToElasticsearchSpecRemoteClustersOutputWithContext(context.Background())
}

func (i ElasticsearchSpecRemoteClustersArgs) ToElasticsearchSpecRemoteClustersOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecRemoteClustersOutput)
}

// ElasticsearchSpecRemoteClustersArrayInput is an input type that accepts ElasticsearchSpecRemoteClustersArray and ElasticsearchSpecRemoteClustersArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecRemoteClustersArrayInput` via:
//
//          ElasticsearchSpecRemoteClustersArray{ ElasticsearchSpecRemoteClustersArgs{...} }
type ElasticsearchSpecRemoteClustersArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecRemoteClustersArrayOutput() ElasticsearchSpecRemoteClustersArrayOutput
	ToElasticsearchSpecRemoteClustersArrayOutputWithContext(context.Context) ElasticsearchSpecRemoteClustersArrayOutput
}

type ElasticsearchSpecRemoteClustersArray []ElasticsearchSpecRemoteClustersInput

func (ElasticsearchSpecRemoteClustersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecRemoteClusters)(nil)).Elem()
}

func (i ElasticsearchSpecRemoteClustersArray) ToElasticsearchSpecRemoteClustersArrayOutput() ElasticsearchSpecRemoteClustersArrayOutput {
	return i.ToElasticsearchSpecRemoteClustersArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecRemoteClustersArray) ToElasticsearchSpecRemoteClustersArrayOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecRemoteClustersArrayOutput)
}

// RemoteCluster declares a remote Elasticsearch cluster connection.
type ElasticsearchSpecRemoteClustersOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecRemoteClustersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecRemoteClusters)(nil)).Elem()
}

func (o ElasticsearchSpecRemoteClustersOutput) ToElasticsearchSpecRemoteClustersOutput() ElasticsearchSpecRemoteClustersOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersOutput) ToElasticsearchSpecRemoteClustersOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersOutput {
	return o
}

// ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.
func (o ElasticsearchSpecRemoteClustersOutput) ElasticsearchRef() ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecRemoteClusters) *ElasticsearchSpecRemoteClustersElasticsearchRef {
		return v.ElasticsearchRef
	}).(ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput)
}

// Name is the name of the remote cluster as it is set in the Elasticsearch settings. The name is expected to be unique for each remote clusters.
func (o ElasticsearchSpecRemoteClustersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecRemoteClusters) string { return v.Name }).(pulumi.StringOutput)
}

type ElasticsearchSpecRemoteClustersArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecRemoteClustersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecRemoteClusters)(nil)).Elem()
}

func (o ElasticsearchSpecRemoteClustersArrayOutput) ToElasticsearchSpecRemoteClustersArrayOutput() ElasticsearchSpecRemoteClustersArrayOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersArrayOutput) ToElasticsearchSpecRemoteClustersArrayOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersArrayOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecRemoteClustersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecRemoteClusters {
		return vs[0].([]ElasticsearchSpecRemoteClusters)[vs[1].(int)]
	}).(ElasticsearchSpecRemoteClustersOutput)
}

// ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.
type ElasticsearchSpecRemoteClustersElasticsearchRef struct {
	// Name of the Kubernetes object.
	Name string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
}

// ElasticsearchSpecRemoteClustersElasticsearchRefInput is an input type that accepts ElasticsearchSpecRemoteClustersElasticsearchRefArgs and ElasticsearchSpecRemoteClustersElasticsearchRefOutput values.
// You can construct a concrete instance of `ElasticsearchSpecRemoteClustersElasticsearchRefInput` via:
//
//          ElasticsearchSpecRemoteClustersElasticsearchRefArgs{...}
type ElasticsearchSpecRemoteClustersElasticsearchRefInput interface {
	pulumi.Input

	ToElasticsearchSpecRemoteClustersElasticsearchRefOutput() ElasticsearchSpecRemoteClustersElasticsearchRefOutput
	ToElasticsearchSpecRemoteClustersElasticsearchRefOutputWithContext(context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefOutput
}

// ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.
type ElasticsearchSpecRemoteClustersElasticsearchRefArgs struct {
	// Name of the Kubernetes object.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ElasticsearchSpecRemoteClustersElasticsearchRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecRemoteClustersElasticsearchRef)(nil)).Elem()
}

func (i ElasticsearchSpecRemoteClustersElasticsearchRefArgs) ToElasticsearchSpecRemoteClustersElasticsearchRefOutput() ElasticsearchSpecRemoteClustersElasticsearchRefOutput {
	return i.ToElasticsearchSpecRemoteClustersElasticsearchRefOutputWithContext(context.Background())
}

func (i ElasticsearchSpecRemoteClustersElasticsearchRefArgs) ToElasticsearchSpecRemoteClustersElasticsearchRefOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecRemoteClustersElasticsearchRefOutput)
}

func (i ElasticsearchSpecRemoteClustersElasticsearchRefArgs) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput() ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return i.ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecRemoteClustersElasticsearchRefArgs) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecRemoteClustersElasticsearchRefOutput).ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(ctx)
}

// ElasticsearchSpecRemoteClustersElasticsearchRefPtrInput is an input type that accepts ElasticsearchSpecRemoteClustersElasticsearchRefArgs, ElasticsearchSpecRemoteClustersElasticsearchRefPtr and ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecRemoteClustersElasticsearchRefPtrInput` via:
//
//          ElasticsearchSpecRemoteClustersElasticsearchRefArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecRemoteClustersElasticsearchRefPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput() ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput
	ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput
}

type elasticsearchSpecRemoteClustersElasticsearchRefPtrType ElasticsearchSpecRemoteClustersElasticsearchRefArgs

func ElasticsearchSpecRemoteClustersElasticsearchRefPtr(v *ElasticsearchSpecRemoteClustersElasticsearchRefArgs) ElasticsearchSpecRemoteClustersElasticsearchRefPtrInput {
	return (*elasticsearchSpecRemoteClustersElasticsearchRefPtrType)(v)
}

func (*elasticsearchSpecRemoteClustersElasticsearchRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecRemoteClustersElasticsearchRef)(nil)).Elem()
}

func (i *elasticsearchSpecRemoteClustersElasticsearchRefPtrType) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput() ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return i.ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecRemoteClustersElasticsearchRefPtrType) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput)
}

// ElasticsearchRef is a reference to an Elasticsearch cluster running within the same k8s cluster.
type ElasticsearchSpecRemoteClustersElasticsearchRefOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecRemoteClustersElasticsearchRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecRemoteClustersElasticsearchRef)(nil)).Elem()
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefOutput) ToElasticsearchSpecRemoteClustersElasticsearchRefOutput() ElasticsearchSpecRemoteClustersElasticsearchRefOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefOutput) ToElasticsearchSpecRemoteClustersElasticsearchRefOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefOutput) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput() ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return o.ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefOutput) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecRemoteClustersElasticsearchRef) *ElasticsearchSpecRemoteClustersElasticsearchRef {
		return &v
	}).(ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput)
}

// Name of the Kubernetes object.
func (o ElasticsearchSpecRemoteClustersElasticsearchRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecRemoteClustersElasticsearchRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o ElasticsearchSpecRemoteClustersElasticsearchRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecRemoteClustersElasticsearchRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecRemoteClustersElasticsearchRef)(nil)).Elem()
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput() ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput) ToElasticsearchSpecRemoteClustersElasticsearchRefPtrOutputWithContext(ctx context.Context) ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput {
	return o
}

func (o ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput) Elem() ElasticsearchSpecRemoteClustersElasticsearchRefOutput {
	return o.ApplyT(func(v *ElasticsearchSpecRemoteClustersElasticsearchRef) ElasticsearchSpecRemoteClustersElasticsearchRef {
		return *v
	}).(ElasticsearchSpecRemoteClustersElasticsearchRefOutput)
}

// Name of the Kubernetes object.
func (o ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecRemoteClustersElasticsearchRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecRemoteClustersElasticsearchRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type ElasticsearchSpecSecureSettings struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths. If not defined, all keys will be projected to similarly named paths in the filesystem. If defined, only the specified keys will be projected to the corresponding paths.
	Entries []ElasticsearchSpecSecureSettingsEntries `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName string `pulumi:"secretName"`
}

// ElasticsearchSpecSecureSettingsInput is an input type that accepts ElasticsearchSpecSecureSettingsArgs and ElasticsearchSpecSecureSettingsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecSecureSettingsInput` via:
//
//          ElasticsearchSpecSecureSettingsArgs{...}
type ElasticsearchSpecSecureSettingsInput interface {
	pulumi.Input

	ToElasticsearchSpecSecureSettingsOutput() ElasticsearchSpecSecureSettingsOutput
	ToElasticsearchSpecSecureSettingsOutputWithContext(context.Context) ElasticsearchSpecSecureSettingsOutput
}

// SecretSource defines a data source based on a Kubernetes Secret.
type ElasticsearchSpecSecureSettingsArgs struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths. If not defined, all keys will be projected to similarly named paths in the filesystem. If defined, only the specified keys will be projected to the corresponding paths.
	Entries ElasticsearchSpecSecureSettingsEntriesArrayInput `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (ElasticsearchSpecSecureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecSecureSettings)(nil)).Elem()
}

func (i ElasticsearchSpecSecureSettingsArgs) ToElasticsearchSpecSecureSettingsOutput() ElasticsearchSpecSecureSettingsOutput {
	return i.ToElasticsearchSpecSecureSettingsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecSecureSettingsArgs) ToElasticsearchSpecSecureSettingsOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecSecureSettingsOutput)
}

// ElasticsearchSpecSecureSettingsArrayInput is an input type that accepts ElasticsearchSpecSecureSettingsArray and ElasticsearchSpecSecureSettingsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecSecureSettingsArrayInput` via:
//
//          ElasticsearchSpecSecureSettingsArray{ ElasticsearchSpecSecureSettingsArgs{...} }
type ElasticsearchSpecSecureSettingsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecSecureSettingsArrayOutput() ElasticsearchSpecSecureSettingsArrayOutput
	ToElasticsearchSpecSecureSettingsArrayOutputWithContext(context.Context) ElasticsearchSpecSecureSettingsArrayOutput
}

type ElasticsearchSpecSecureSettingsArray []ElasticsearchSpecSecureSettingsInput

func (ElasticsearchSpecSecureSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecSecureSettings)(nil)).Elem()
}

func (i ElasticsearchSpecSecureSettingsArray) ToElasticsearchSpecSecureSettingsArrayOutput() ElasticsearchSpecSecureSettingsArrayOutput {
	return i.ToElasticsearchSpecSecureSettingsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecSecureSettingsArray) ToElasticsearchSpecSecureSettingsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecSecureSettingsArrayOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type ElasticsearchSpecSecureSettingsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecSecureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecSecureSettings)(nil)).Elem()
}

func (o ElasticsearchSpecSecureSettingsOutput) ToElasticsearchSpecSecureSettingsOutput() ElasticsearchSpecSecureSettingsOutput {
	return o
}

func (o ElasticsearchSpecSecureSettingsOutput) ToElasticsearchSpecSecureSettingsOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsOutput {
	return o
}

// Entries define how to project each key-value pair in the secret to filesystem paths. If not defined, all keys will be projected to similarly named paths in the filesystem. If defined, only the specified keys will be projected to the corresponding paths.
func (o ElasticsearchSpecSecureSettingsOutput) Entries() ElasticsearchSpecSecureSettingsEntriesArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecSecureSettings) []ElasticsearchSpecSecureSettingsEntries { return v.Entries }).(ElasticsearchSpecSecureSettingsEntriesArrayOutput)
}

// SecretName is the name of the secret.
func (o ElasticsearchSpecSecureSettingsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecSecureSettings) string { return v.SecretName }).(pulumi.StringOutput)
}

type ElasticsearchSpecSecureSettingsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecSecureSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecSecureSettings)(nil)).Elem()
}

func (o ElasticsearchSpecSecureSettingsArrayOutput) ToElasticsearchSpecSecureSettingsArrayOutput() ElasticsearchSpecSecureSettingsArrayOutput {
	return o
}

func (o ElasticsearchSpecSecureSettingsArrayOutput) ToElasticsearchSpecSecureSettingsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsArrayOutput {
	return o
}

func (o ElasticsearchSpecSecureSettingsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecSecureSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecSecureSettings {
		return vs[0].([]ElasticsearchSpecSecureSettings)[vs[1].(int)]
	}).(ElasticsearchSpecSecureSettingsOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type ElasticsearchSpecSecureSettingsEntries struct {
	// Key is the key contained in the secret.
	Key string `pulumi:"key"`
	// Path is the relative file path to map the key to. Path must not be an absolute file path and must not contain any ".." components.
	Path *string `pulumi:"path"`
}

// ElasticsearchSpecSecureSettingsEntriesInput is an input type that accepts ElasticsearchSpecSecureSettingsEntriesArgs and ElasticsearchSpecSecureSettingsEntriesOutput values.
// You can construct a concrete instance of `ElasticsearchSpecSecureSettingsEntriesInput` via:
//
//          ElasticsearchSpecSecureSettingsEntriesArgs{...}
type ElasticsearchSpecSecureSettingsEntriesInput interface {
	pulumi.Input

	ToElasticsearchSpecSecureSettingsEntriesOutput() ElasticsearchSpecSecureSettingsEntriesOutput
	ToElasticsearchSpecSecureSettingsEntriesOutputWithContext(context.Context) ElasticsearchSpecSecureSettingsEntriesOutput
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type ElasticsearchSpecSecureSettingsEntriesArgs struct {
	// Key is the key contained in the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Path is the relative file path to map the key to. Path must not be an absolute file path and must not contain any ".." components.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ElasticsearchSpecSecureSettingsEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecSecureSettingsEntries)(nil)).Elem()
}

func (i ElasticsearchSpecSecureSettingsEntriesArgs) ToElasticsearchSpecSecureSettingsEntriesOutput() ElasticsearchSpecSecureSettingsEntriesOutput {
	return i.ToElasticsearchSpecSecureSettingsEntriesOutputWithContext(context.Background())
}

func (i ElasticsearchSpecSecureSettingsEntriesArgs) ToElasticsearchSpecSecureSettingsEntriesOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsEntriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecSecureSettingsEntriesOutput)
}

// ElasticsearchSpecSecureSettingsEntriesArrayInput is an input type that accepts ElasticsearchSpecSecureSettingsEntriesArray and ElasticsearchSpecSecureSettingsEntriesArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecSecureSettingsEntriesArrayInput` via:
//
//          ElasticsearchSpecSecureSettingsEntriesArray{ ElasticsearchSpecSecureSettingsEntriesArgs{...} }
type ElasticsearchSpecSecureSettingsEntriesArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecSecureSettingsEntriesArrayOutput() ElasticsearchSpecSecureSettingsEntriesArrayOutput
	ToElasticsearchSpecSecureSettingsEntriesArrayOutputWithContext(context.Context) ElasticsearchSpecSecureSettingsEntriesArrayOutput
}

type ElasticsearchSpecSecureSettingsEntriesArray []ElasticsearchSpecSecureSettingsEntriesInput

func (ElasticsearchSpecSecureSettingsEntriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecSecureSettingsEntries)(nil)).Elem()
}

func (i ElasticsearchSpecSecureSettingsEntriesArray) ToElasticsearchSpecSecureSettingsEntriesArrayOutput() ElasticsearchSpecSecureSettingsEntriesArrayOutput {
	return i.ToElasticsearchSpecSecureSettingsEntriesArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecSecureSettingsEntriesArray) ToElasticsearchSpecSecureSettingsEntriesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsEntriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecSecureSettingsEntriesArrayOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type ElasticsearchSpecSecureSettingsEntriesOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecSecureSettingsEntriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecSecureSettingsEntries)(nil)).Elem()
}

func (o ElasticsearchSpecSecureSettingsEntriesOutput) ToElasticsearchSpecSecureSettingsEntriesOutput() ElasticsearchSpecSecureSettingsEntriesOutput {
	return o
}

func (o ElasticsearchSpecSecureSettingsEntriesOutput) ToElasticsearchSpecSecureSettingsEntriesOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsEntriesOutput {
	return o
}

// Key is the key contained in the secret.
func (o ElasticsearchSpecSecureSettingsEntriesOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSpecSecureSettingsEntries) string { return v.Key }).(pulumi.StringOutput)
}

// Path is the relative file path to map the key to. Path must not be an absolute file path and must not contain any ".." components.
func (o ElasticsearchSpecSecureSettingsEntriesOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecSecureSettingsEntries) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecSecureSettingsEntriesArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecSecureSettingsEntriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecSecureSettingsEntries)(nil)).Elem()
}

func (o ElasticsearchSpecSecureSettingsEntriesArrayOutput) ToElasticsearchSpecSecureSettingsEntriesArrayOutput() ElasticsearchSpecSecureSettingsEntriesArrayOutput {
	return o
}

func (o ElasticsearchSpecSecureSettingsEntriesArrayOutput) ToElasticsearchSpecSecureSettingsEntriesArrayOutputWithContext(ctx context.Context) ElasticsearchSpecSecureSettingsEntriesArrayOutput {
	return o
}

func (o ElasticsearchSpecSecureSettingsEntriesArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecSecureSettingsEntriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecSecureSettingsEntries {
		return vs[0].([]ElasticsearchSpecSecureSettingsEntries)[vs[1].(int)]
	}).(ElasticsearchSpecSecureSettingsEntriesOutput)
}

// Transport holds transport layer settings for Elasticsearch.
type ElasticsearchSpecTransport struct {
	// Service defines the template for the associated Kubernetes Service object.
	Service *ElasticsearchSpecTransportService `pulumi:"service"`
}

// ElasticsearchSpecTransportInput is an input type that accepts ElasticsearchSpecTransportArgs and ElasticsearchSpecTransportOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportInput` via:
//
//          ElasticsearchSpecTransportArgs{...}
type ElasticsearchSpecTransportInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportOutput() ElasticsearchSpecTransportOutput
	ToElasticsearchSpecTransportOutputWithContext(context.Context) ElasticsearchSpecTransportOutput
}

// Transport holds transport layer settings for Elasticsearch.
type ElasticsearchSpecTransportArgs struct {
	// Service defines the template for the associated Kubernetes Service object.
	Service ElasticsearchSpecTransportServicePtrInput `pulumi:"service"`
}

func (ElasticsearchSpecTransportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransport)(nil)).Elem()
}

func (i ElasticsearchSpecTransportArgs) ToElasticsearchSpecTransportOutput() ElasticsearchSpecTransportOutput {
	return i.ToElasticsearchSpecTransportOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportArgs) ToElasticsearchSpecTransportOutputWithContext(ctx context.Context) ElasticsearchSpecTransportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportOutput)
}

func (i ElasticsearchSpecTransportArgs) ToElasticsearchSpecTransportPtrOutput() ElasticsearchSpecTransportPtrOutput {
	return i.ToElasticsearchSpecTransportPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportArgs) ToElasticsearchSpecTransportPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportOutput).ToElasticsearchSpecTransportPtrOutputWithContext(ctx)
}

// ElasticsearchSpecTransportPtrInput is an input type that accepts ElasticsearchSpecTransportArgs, ElasticsearchSpecTransportPtr and ElasticsearchSpecTransportPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportPtrInput` via:
//
//          ElasticsearchSpecTransportArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecTransportPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportPtrOutput() ElasticsearchSpecTransportPtrOutput
	ToElasticsearchSpecTransportPtrOutputWithContext(context.Context) ElasticsearchSpecTransportPtrOutput
}

type elasticsearchSpecTransportPtrType ElasticsearchSpecTransportArgs

func ElasticsearchSpecTransportPtr(v *ElasticsearchSpecTransportArgs) ElasticsearchSpecTransportPtrInput {
	return (*elasticsearchSpecTransportPtrType)(v)
}

func (*elasticsearchSpecTransportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransport)(nil)).Elem()
}

func (i *elasticsearchSpecTransportPtrType) ToElasticsearchSpecTransportPtrOutput() ElasticsearchSpecTransportPtrOutput {
	return i.ToElasticsearchSpecTransportPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecTransportPtrType) ToElasticsearchSpecTransportPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportPtrOutput)
}

// Transport holds transport layer settings for Elasticsearch.
type ElasticsearchSpecTransportOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransport)(nil)).Elem()
}

func (o ElasticsearchSpecTransportOutput) ToElasticsearchSpecTransportOutput() ElasticsearchSpecTransportOutput {
	return o
}

func (o ElasticsearchSpecTransportOutput) ToElasticsearchSpecTransportOutputWithContext(ctx context.Context) ElasticsearchSpecTransportOutput {
	return o
}

func (o ElasticsearchSpecTransportOutput) ToElasticsearchSpecTransportPtrOutput() ElasticsearchSpecTransportPtrOutput {
	return o.ToElasticsearchSpecTransportPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecTransportOutput) ToElasticsearchSpecTransportPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransport) *ElasticsearchSpecTransport {
		return &v
	}).(ElasticsearchSpecTransportPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
func (o ElasticsearchSpecTransportOutput) Service() ElasticsearchSpecTransportServicePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransport) *ElasticsearchSpecTransportService { return v.Service }).(ElasticsearchSpecTransportServicePtrOutput)
}

type ElasticsearchSpecTransportPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransport)(nil)).Elem()
}

func (o ElasticsearchSpecTransportPtrOutput) ToElasticsearchSpecTransportPtrOutput() ElasticsearchSpecTransportPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportPtrOutput) ToElasticsearchSpecTransportPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportPtrOutput) Elem() ElasticsearchSpecTransportOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransport) ElasticsearchSpecTransport { return *v }).(ElasticsearchSpecTransportOutput)
}

// Service defines the template for the associated Kubernetes Service object.
func (o ElasticsearchSpecTransportPtrOutput) Service() ElasticsearchSpecTransportServicePtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransport) *ElasticsearchSpecTransportService {
		if v == nil {
			return nil
		}
		return v.Service
	}).(ElasticsearchSpecTransportServicePtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type ElasticsearchSpecTransportService struct {
	// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Spec is the specification of the service.
	Spec *ElasticsearchSpecTransportServiceSpec `pulumi:"spec"`
}

// ElasticsearchSpecTransportServiceInput is an input type that accepts ElasticsearchSpecTransportServiceArgs and ElasticsearchSpecTransportServiceOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceInput` via:
//
//          ElasticsearchSpecTransportServiceArgs{...}
type ElasticsearchSpecTransportServiceInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceOutput() ElasticsearchSpecTransportServiceOutput
	ToElasticsearchSpecTransportServiceOutputWithContext(context.Context) ElasticsearchSpecTransportServiceOutput
}

// Service defines the template for the associated Kubernetes Service object.
type ElasticsearchSpecTransportServiceArgs struct {
	// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// Spec is the specification of the service.
	Spec ElasticsearchSpecTransportServiceSpecPtrInput `pulumi:"spec"`
}

func (ElasticsearchSpecTransportServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportService)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceArgs) ToElasticsearchSpecTransportServiceOutput() ElasticsearchSpecTransportServiceOutput {
	return i.ToElasticsearchSpecTransportServiceOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceArgs) ToElasticsearchSpecTransportServiceOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceOutput)
}

func (i ElasticsearchSpecTransportServiceArgs) ToElasticsearchSpecTransportServicePtrOutput() ElasticsearchSpecTransportServicePtrOutput {
	return i.ToElasticsearchSpecTransportServicePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceArgs) ToElasticsearchSpecTransportServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceOutput).ToElasticsearchSpecTransportServicePtrOutputWithContext(ctx)
}

// ElasticsearchSpecTransportServicePtrInput is an input type that accepts ElasticsearchSpecTransportServiceArgs, ElasticsearchSpecTransportServicePtr and ElasticsearchSpecTransportServicePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServicePtrInput` via:
//
//          ElasticsearchSpecTransportServiceArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecTransportServicePtrInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServicePtrOutput() ElasticsearchSpecTransportServicePtrOutput
	ToElasticsearchSpecTransportServicePtrOutputWithContext(context.Context) ElasticsearchSpecTransportServicePtrOutput
}

type elasticsearchSpecTransportServicePtrType ElasticsearchSpecTransportServiceArgs

func ElasticsearchSpecTransportServicePtr(v *ElasticsearchSpecTransportServiceArgs) ElasticsearchSpecTransportServicePtrInput {
	return (*elasticsearchSpecTransportServicePtrType)(v)
}

func (*elasticsearchSpecTransportServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportService)(nil)).Elem()
}

func (i *elasticsearchSpecTransportServicePtrType) ToElasticsearchSpecTransportServicePtrOutput() ElasticsearchSpecTransportServicePtrOutput {
	return i.ToElasticsearchSpecTransportServicePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecTransportServicePtrType) ToElasticsearchSpecTransportServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServicePtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type ElasticsearchSpecTransportServiceOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportService)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceOutput) ToElasticsearchSpecTransportServiceOutput() ElasticsearchSpecTransportServiceOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceOutput) ToElasticsearchSpecTransportServiceOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceOutput) ToElasticsearchSpecTransportServicePtrOutput() ElasticsearchSpecTransportServicePtrOutput {
	return o.ToElasticsearchSpecTransportServicePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecTransportServiceOutput) ToElasticsearchSpecTransportServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServicePtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportService) *ElasticsearchSpecTransportService {
		return &v
	}).(ElasticsearchSpecTransportServicePtrOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
func (o ElasticsearchSpecTransportServiceOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportService) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// Spec is the specification of the service.
func (o ElasticsearchSpecTransportServiceOutput) Spec() ElasticsearchSpecTransportServiceSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportService) *ElasticsearchSpecTransportServiceSpec { return v.Spec }).(ElasticsearchSpecTransportServiceSpecPtrOutput)
}

type ElasticsearchSpecTransportServicePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportService)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServicePtrOutput) ToElasticsearchSpecTransportServicePtrOutput() ElasticsearchSpecTransportServicePtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServicePtrOutput) ToElasticsearchSpecTransportServicePtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServicePtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServicePtrOutput) Elem() ElasticsearchSpecTransportServiceOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportService) ElasticsearchSpecTransportService { return *v }).(ElasticsearchSpecTransportServiceOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
func (o ElasticsearchSpecTransportServicePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportService) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Spec is the specification of the service.
func (o ElasticsearchSpecTransportServicePtrOutput) Spec() ElasticsearchSpecTransportServiceSpecPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportService) *ElasticsearchSpecTransportServiceSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ElasticsearchSpecTransportServiceSpecPtrOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecTransportServiceMetadata struct {
}

// ElasticsearchSpecTransportServiceMetadataInput is an input type that accepts ElasticsearchSpecTransportServiceMetadataArgs and ElasticsearchSpecTransportServiceMetadataOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceMetadataInput` via:
//
//          ElasticsearchSpecTransportServiceMetadataArgs{...}
type ElasticsearchSpecTransportServiceMetadataInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceMetadataOutput() ElasticsearchSpecTransportServiceMetadataOutput
	ToElasticsearchSpecTransportServiceMetadataOutputWithContext(context.Context) ElasticsearchSpecTransportServiceMetadataOutput
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecTransportServiceMetadataArgs struct {
}

func (ElasticsearchSpecTransportServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceMetadata)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceMetadataArgs) ToElasticsearchSpecTransportServiceMetadataOutput() ElasticsearchSpecTransportServiceMetadataOutput {
	return i.ToElasticsearchSpecTransportServiceMetadataOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceMetadataArgs) ToElasticsearchSpecTransportServiceMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceMetadataOutput)
}

// ObjectMeta is the metadata of the service. The name and namespace provided here are managed by ECK and will be ignored.
type ElasticsearchSpecTransportServiceMetadataOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceMetadata)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceMetadataOutput) ToElasticsearchSpecTransportServiceMetadataOutput() ElasticsearchSpecTransportServiceMetadataOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceMetadataOutput) ToElasticsearchSpecTransportServiceMetadataOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceMetadataOutput {
	return o
}

// Spec is the specification of the service.
type ElasticsearchSpecTransportServiceSpec struct {
	// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP *string `pulumi:"clusterIP"`
	// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
	ExternalIPs []string `pulumi:"externalIPs"`
	// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
	ExternalName *string `pulumi:"externalName"`
	// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
	ExternalTrafficPolicy *string `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
	HealthCheckNodePort *int `pulumi:"healthCheckNodePort"`
	// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
	IpFamily *string `pulumi:"ipFamily"`
	// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
	LoadBalancerIP *string `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
	LoadBalancerSourceRanges []string `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports []ElasticsearchSpecTransportServiceSpecPorts `pulumi:"ports"`
	// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
	PublishNotReadyAddresses *bool `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector map[string]string `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// sessionAffinityConfig contains the configurations of session affinity.
	SessionAffinityConfig *ElasticsearchSpecTransportServiceSpecSessionAffinityConfig `pulumi:"sessionAffinityConfig"`
	// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
	TopologyKeys []string `pulumi:"topologyKeys"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type *string `pulumi:"type"`
}

// ElasticsearchSpecTransportServiceSpecInput is an input type that accepts ElasticsearchSpecTransportServiceSpecArgs and ElasticsearchSpecTransportServiceSpecOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecInput` via:
//
//          ElasticsearchSpecTransportServiceSpecArgs{...}
type ElasticsearchSpecTransportServiceSpecInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecOutput() ElasticsearchSpecTransportServiceSpecOutput
	ToElasticsearchSpecTransportServiceSpecOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecOutput
}

// Spec is the specification of the service.
type ElasticsearchSpecTransportServiceSpecArgs struct {
	// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP pulumi.StringPtrInput `pulumi:"clusterIP"`
	// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
	ExternalIPs pulumi.StringArrayInput `pulumi:"externalIPs"`
	// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
	ExternalName pulumi.StringPtrInput `pulumi:"externalName"`
	// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
	ExternalTrafficPolicy pulumi.StringPtrInput `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
	HealthCheckNodePort pulumi.IntPtrInput `pulumi:"healthCheckNodePort"`
	// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
	IpFamily pulumi.StringPtrInput `pulumi:"ipFamily"`
	// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
	LoadBalancerIP pulumi.StringPtrInput `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
	LoadBalancerSourceRanges pulumi.StringArrayInput `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports ElasticsearchSpecTransportServiceSpecPortsArrayInput `pulumi:"ports"`
	// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
	PublishNotReadyAddresses pulumi.BoolPtrInput `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity pulumi.StringPtrInput `pulumi:"sessionAffinity"`
	// sessionAffinityConfig contains the configurations of session affinity.
	SessionAffinityConfig ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrInput `pulumi:"sessionAffinityConfig"`
	// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
	TopologyKeys pulumi.StringArrayInput `pulumi:"topologyKeys"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ElasticsearchSpecTransportServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpec)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecArgs) ToElasticsearchSpecTransportServiceSpecOutput() ElasticsearchSpecTransportServiceSpecOutput {
	return i.ToElasticsearchSpecTransportServiceSpecOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecArgs) ToElasticsearchSpecTransportServiceSpecOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecOutput)
}

func (i ElasticsearchSpecTransportServiceSpecArgs) ToElasticsearchSpecTransportServiceSpecPtrOutput() ElasticsearchSpecTransportServiceSpecPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecArgs) ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecOutput).ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(ctx)
}

// ElasticsearchSpecTransportServiceSpecPtrInput is an input type that accepts ElasticsearchSpecTransportServiceSpecArgs, ElasticsearchSpecTransportServiceSpecPtr and ElasticsearchSpecTransportServiceSpecPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecPtrInput` via:
//
//          ElasticsearchSpecTransportServiceSpecArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecTransportServiceSpecPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecPtrOutput() ElasticsearchSpecTransportServiceSpecPtrOutput
	ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecPtrOutput
}

type elasticsearchSpecTransportServiceSpecPtrType ElasticsearchSpecTransportServiceSpecArgs

func ElasticsearchSpecTransportServiceSpecPtr(v *ElasticsearchSpecTransportServiceSpecArgs) ElasticsearchSpecTransportServiceSpecPtrInput {
	return (*elasticsearchSpecTransportServiceSpecPtrType)(v)
}

func (*elasticsearchSpecTransportServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpec)(nil)).Elem()
}

func (i *elasticsearchSpecTransportServiceSpecPtrType) ToElasticsearchSpecTransportServiceSpecPtrOutput() ElasticsearchSpecTransportServiceSpecPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecTransportServiceSpecPtrType) ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecPtrOutput)
}

// Spec is the specification of the service.
type ElasticsearchSpecTransportServiceSpecOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpec)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecOutput) ToElasticsearchSpecTransportServiceSpecOutput() ElasticsearchSpecTransportServiceSpecOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecOutput) ToElasticsearchSpecTransportServiceSpecOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecOutput) ToElasticsearchSpecTransportServiceSpecPtrOutput() ElasticsearchSpecTransportServiceSpecPtrOutput {
	return o.ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecTransportServiceSpecOutput) ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *ElasticsearchSpecTransportServiceSpec {
		return &v
	}).(ElasticsearchSpecTransportServiceSpecPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecTransportServiceSpecOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.ClusterIP }).(pulumi.StringPtrOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
func (o ElasticsearchSpecTransportServiceSpecOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) []string { return v.ExternalIPs }).(pulumi.StringArrayOutput)
}

// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
func (o ElasticsearchSpecTransportServiceSpecOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
func (o ElasticsearchSpecTransportServiceSpecOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.ExternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
func (o ElasticsearchSpecTransportServiceSpecOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *int { return v.HealthCheckNodePort }).(pulumi.IntPtrOutput)
}

// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
func (o ElasticsearchSpecTransportServiceSpecOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.IpFamily }).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
func (o ElasticsearchSpecTransportServiceSpecOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.LoadBalancerIP }).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
func (o ElasticsearchSpecTransportServiceSpecOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) []string { return v.LoadBalancerSourceRanges }).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecTransportServiceSpecOutput) Ports() ElasticsearchSpecTransportServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) []ElasticsearchSpecTransportServiceSpecPorts {
		return v.Ports
	}).(ElasticsearchSpecTransportServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
func (o ElasticsearchSpecTransportServiceSpecOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *bool { return v.PublishNotReadyAddresses }).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o ElasticsearchSpecTransportServiceSpecOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecTransportServiceSpecOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
func (o ElasticsearchSpecTransportServiceSpecOutput) SessionAffinityConfig() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *ElasticsearchSpecTransportServiceSpecSessionAffinityConfig {
		return v.SessionAffinityConfig
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput)
}

// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
func (o ElasticsearchSpecTransportServiceSpecOutput) TopologyKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) []string { return v.TopologyKeys }).(pulumi.StringArrayOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o ElasticsearchSpecTransportServiceSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ElasticsearchSpecTransportServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpec)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecPtrOutput) ToElasticsearchSpecTransportServiceSpecPtrOutput() ElasticsearchSpecTransportServiceSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPtrOutput) ToElasticsearchSpecTransportServiceSpecPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPtrOutput) Elem() ElasticsearchSpecTransportServiceSpecOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) ElasticsearchSpecTransportServiceSpec { return *v }).(ElasticsearchSpecTransportServiceSpecOutput)
}

// clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIP
	}).(pulumi.StringPtrOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExternalIPs
	}).(pulumi.StringArrayOutput)
}

// externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckNodePort
	}).(pulumi.IntPtrOutput)
}

// ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.IpFamily
	}).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerIP
	}).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSourceRanges
	}).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) Ports() ElasticsearchSpecTransportServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) []ElasticsearchSpecTransportServiceSpecPorts {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(ElasticsearchSpecTransportServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.PublishNotReadyAddresses
	}).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) SessionAffinityConfig() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *ElasticsearchSpecTransportServiceSpecSessionAffinityConfig {
		if v == nil {
			return nil
		}
		return v.SessionAffinityConfig
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput)
}

// topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) TopologyKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.TopologyKeys
	}).(pulumi.StringArrayOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o ElasticsearchSpecTransportServiceSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ServicePort contains information on service's port.
type ElasticsearchSpecTransportServiceSpecPorts struct {
	// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
	AppProtocol *string `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
	Name *string `pulumi:"name"`
	// The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort *int `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port int `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
	Protocol *string `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort *ElasticsearchSpecTransportServiceSpecPortsTargetPort `pulumi:"targetPort"`
}

// ElasticsearchSpecTransportServiceSpecPortsInput is an input type that accepts ElasticsearchSpecTransportServiceSpecPortsArgs and ElasticsearchSpecTransportServiceSpecPortsOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecPortsInput` via:
//
//          ElasticsearchSpecTransportServiceSpecPortsArgs{...}
type ElasticsearchSpecTransportServiceSpecPortsInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecPortsOutput() ElasticsearchSpecTransportServiceSpecPortsOutput
	ToElasticsearchSpecTransportServiceSpecPortsOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecPortsOutput
}

// ServicePort contains information on service's port.
type ElasticsearchSpecTransportServiceSpecPortsArgs struct {
	// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort pulumi.IntPtrInput `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port pulumi.IntInput `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrInput `pulumi:"targetPort"`
}

func (ElasticsearchSpecTransportServiceSpecPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecPorts)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecPortsArgs) ToElasticsearchSpecTransportServiceSpecPortsOutput() ElasticsearchSpecTransportServiceSpecPortsOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPortsOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecPortsArgs) ToElasticsearchSpecTransportServiceSpecPortsOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecPortsOutput)
}

// ElasticsearchSpecTransportServiceSpecPortsArrayInput is an input type that accepts ElasticsearchSpecTransportServiceSpecPortsArray and ElasticsearchSpecTransportServiceSpecPortsArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecPortsArrayInput` via:
//
//          ElasticsearchSpecTransportServiceSpecPortsArray{ ElasticsearchSpecTransportServiceSpecPortsArgs{...} }
type ElasticsearchSpecTransportServiceSpecPortsArrayInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecPortsArrayOutput() ElasticsearchSpecTransportServiceSpecPortsArrayOutput
	ToElasticsearchSpecTransportServiceSpecPortsArrayOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecPortsArrayOutput
}

type ElasticsearchSpecTransportServiceSpecPortsArray []ElasticsearchSpecTransportServiceSpecPortsInput

func (ElasticsearchSpecTransportServiceSpecPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecTransportServiceSpecPorts)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecPortsArray) ToElasticsearchSpecTransportServiceSpecPortsArrayOutput() ElasticsearchSpecTransportServiceSpecPortsArrayOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPortsArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecPortsArray) ToElasticsearchSpecTransportServiceSpecPortsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecPortsArrayOutput)
}

// ServicePort contains information on service's port.
type ElasticsearchSpecTransportServiceSpecPortsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecPorts)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecPortsOutput) ToElasticsearchSpecTransportServiceSpecPortsOutput() ElasticsearchSpecTransportServiceSpecPortsOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsOutput) ToElasticsearchSpecTransportServiceSpecPortsOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsOutput {
	return o
}

// The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. Field can be enabled with ServiceAppProtocol feature gate.
func (o ElasticsearchSpecTransportServiceSpecPortsOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPorts) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
func (o ElasticsearchSpecTransportServiceSpecPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
func (o ElasticsearchSpecTransportServiceSpecPortsOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPorts) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// The port that will be exposed by this service.
func (o ElasticsearchSpecTransportServiceSpecPortsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPorts) int { return v.Port }).(pulumi.IntOutput)
}

// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
func (o ElasticsearchSpecTransportServiceSpecPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
func (o ElasticsearchSpecTransportServiceSpecPortsOutput) TargetPort() ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPorts) *ElasticsearchSpecTransportServiceSpecPortsTargetPort {
		return v.TargetPort
	}).(ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput)
}

type ElasticsearchSpecTransportServiceSpecPortsArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSpecTransportServiceSpecPorts)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecPortsArrayOutput) ToElasticsearchSpecTransportServiceSpecPortsArrayOutput() ElasticsearchSpecTransportServiceSpecPortsArrayOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsArrayOutput) ToElasticsearchSpecTransportServiceSpecPortsArrayOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsArrayOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsArrayOutput) Index(i pulumi.IntInput) ElasticsearchSpecTransportServiceSpecPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSpecTransportServiceSpecPorts {
		return vs[0].([]ElasticsearchSpecTransportServiceSpecPorts)[vs[1].(int)]
	}).(ElasticsearchSpecTransportServiceSpecPortsOutput)
}

type ElasticsearchSpecTransportServiceSpecPortsTargetPort struct {
}

// ElasticsearchSpecTransportServiceSpecPortsTargetPortInput is an input type that accepts ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs and ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecPortsTargetPortInput` via:
//
//          ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs{...}
type ElasticsearchSpecTransportServiceSpecPortsTargetPortInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput
	ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput
}

type ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs struct {
}

func (ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecPortsTargetPort)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs) ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs) ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput)
}

func (i ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput).ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(ctx)
}

// ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrInput is an input type that accepts ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs, ElasticsearchSpecTransportServiceSpecPortsTargetPortPtr and ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrInput` via:
//
//          ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput
	ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput
}

type elasticsearchSpecTransportServiceSpecPortsTargetPortPtrType ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs

func ElasticsearchSpecTransportServiceSpecPortsTargetPortPtr(v *ElasticsearchSpecTransportServiceSpecPortsTargetPortArgs) ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrInput {
	return (*elasticsearchSpecTransportServiceSpecPortsTargetPortPtrType)(v)
}

func (*elasticsearchSpecTransportServiceSpecPortsTargetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpecPortsTargetPort)(nil)).Elem()
}

func (i *elasticsearchSpecTransportServiceSpecPortsTargetPortPtrType) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecTransportServiceSpecPortsTargetPortPtrType) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput)
}

type ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecPortsTargetPort)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput) ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput) ToElasticsearchSpecTransportServiceSpecPortsTargetPortOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return o.ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecPortsTargetPort) *ElasticsearchSpecTransportServiceSpecPortsTargetPort {
		return &v
	}).(ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput)
}

type ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpecPortsTargetPort)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput() ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput) ToElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput) Elem() ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpecPortsTargetPort) ElasticsearchSpecTransportServiceSpecPortsTargetPort {
		return *v
	}).(ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
type ElasticsearchSpecTransportServiceSpecSelector struct {
}

// ElasticsearchSpecTransportServiceSpecSelectorInput is an input type that accepts ElasticsearchSpecTransportServiceSpecSelectorArgs and ElasticsearchSpecTransportServiceSpecSelectorOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecSelectorInput` via:
//
//          ElasticsearchSpecTransportServiceSpecSelectorArgs{...}
type ElasticsearchSpecTransportServiceSpecSelectorInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecSelectorOutput() ElasticsearchSpecTransportServiceSpecSelectorOutput
	ToElasticsearchSpecTransportServiceSpecSelectorOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecSelectorOutput
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
type ElasticsearchSpecTransportServiceSpecSelectorArgs struct {
}

func (ElasticsearchSpecTransportServiceSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecSelector)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecSelectorArgs) ToElasticsearchSpecTransportServiceSpecSelectorOutput() ElasticsearchSpecTransportServiceSpecSelectorOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSelectorOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecSelectorArgs) ToElasticsearchSpecTransportServiceSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSelectorOutput)
}

// Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/
type ElasticsearchSpecTransportServiceSpecSelectorOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecSelector)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecSelectorOutput) ToElasticsearchSpecTransportServiceSpecSelectorOutput() ElasticsearchSpecTransportServiceSpecSelectorOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSelectorOutput) ToElasticsearchSpecTransportServiceSpecSelectorOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSelectorOutput {
	return o
}

// sessionAffinityConfig contains the configurations of session affinity.
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfig struct {
	// clientIP contains the configurations of Client IP based session affinity.
	ClientIP *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP `pulumi:"clientIP"`
}

// ElasticsearchSpecTransportServiceSpecSessionAffinityConfigInput is an input type that accepts ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs and ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecSessionAffinityConfigInput` via:
//
//          ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs{...}
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput
	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput
}

// sessionAffinityConfig contains the configurations of session affinity.
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs struct {
	// clientIP contains the configurations of Client IP based session affinity.
	ClientIP ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrInput `pulumi:"clientIP"`
}

func (ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput)
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput).ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx)
}

// ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrInput is an input type that accepts ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs, ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtr and ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrInput` via:
//
//          ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput
	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput
}

type elasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrType ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs

func ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtr(v *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigArgs) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrInput {
	return (*elasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrType)(v)
}

func (*elasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i *elasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrType) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrType) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return o.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecSessionAffinityConfig) *ElasticsearchSpecTransportServiceSpecSessionAffinityConfig {
		return &v
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput) ClientIP() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecSessionAffinityConfig) *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP {
		return v.ClientIP
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput) Elem() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpecSessionAffinityConfig) ElasticsearchSpecTransportServiceSpecSessionAffinityConfig {
		return *v
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput) ClientIP() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpecSessionAffinityConfig) *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP {
		if v == nil {
			return nil
		}
		return v.ClientIP
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPInput is an input type that accepts ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs and ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPInput` via:
//
//          ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs{...}
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput
	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput
}

// clientIP contains the configurations of Client IP based session affinity.
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput)
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput).ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx)
}

// ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrInput is an input type that accepts ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs, ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtr and ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrInput` via:
//
//          ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput
	ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput
}

type elasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrType ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs

func ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtr(v *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPArgs) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrInput {
	return (*elasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrType)(v)
}

func (*elasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (i *elasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrType) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return i.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrType) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP) *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP {
		return &v
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP) *int {
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP)(nil)).Elem()
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput) ToElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutputWithContext(ctx context.Context) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput {
	return o
}

func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput) Elem() ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP) ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP {
		return *v
	}).(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
func (o ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIP) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// UpdateStrategy specifies how updates to the cluster should be performed.
type ElasticsearchSpecUpdateStrategy struct {
	// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
	ChangeBudget *ElasticsearchSpecUpdateStrategyChangeBudget `pulumi:"changeBudget"`
}

// ElasticsearchSpecUpdateStrategyInput is an input type that accepts ElasticsearchSpecUpdateStrategyArgs and ElasticsearchSpecUpdateStrategyOutput values.
// You can construct a concrete instance of `ElasticsearchSpecUpdateStrategyInput` via:
//
//          ElasticsearchSpecUpdateStrategyArgs{...}
type ElasticsearchSpecUpdateStrategyInput interface {
	pulumi.Input

	ToElasticsearchSpecUpdateStrategyOutput() ElasticsearchSpecUpdateStrategyOutput
	ToElasticsearchSpecUpdateStrategyOutputWithContext(context.Context) ElasticsearchSpecUpdateStrategyOutput
}

// UpdateStrategy specifies how updates to the cluster should be performed.
type ElasticsearchSpecUpdateStrategyArgs struct {
	// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
	ChangeBudget ElasticsearchSpecUpdateStrategyChangeBudgetPtrInput `pulumi:"changeBudget"`
}

func (ElasticsearchSpecUpdateStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecUpdateStrategy)(nil)).Elem()
}

func (i ElasticsearchSpecUpdateStrategyArgs) ToElasticsearchSpecUpdateStrategyOutput() ElasticsearchSpecUpdateStrategyOutput {
	return i.ToElasticsearchSpecUpdateStrategyOutputWithContext(context.Background())
}

func (i ElasticsearchSpecUpdateStrategyArgs) ToElasticsearchSpecUpdateStrategyOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecUpdateStrategyOutput)
}

func (i ElasticsearchSpecUpdateStrategyArgs) ToElasticsearchSpecUpdateStrategyPtrOutput() ElasticsearchSpecUpdateStrategyPtrOutput {
	return i.ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecUpdateStrategyArgs) ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecUpdateStrategyOutput).ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(ctx)
}

// ElasticsearchSpecUpdateStrategyPtrInput is an input type that accepts ElasticsearchSpecUpdateStrategyArgs, ElasticsearchSpecUpdateStrategyPtr and ElasticsearchSpecUpdateStrategyPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecUpdateStrategyPtrInput` via:
//
//          ElasticsearchSpecUpdateStrategyArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecUpdateStrategyPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecUpdateStrategyPtrOutput() ElasticsearchSpecUpdateStrategyPtrOutput
	ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(context.Context) ElasticsearchSpecUpdateStrategyPtrOutput
}

type elasticsearchSpecUpdateStrategyPtrType ElasticsearchSpecUpdateStrategyArgs

func ElasticsearchSpecUpdateStrategyPtr(v *ElasticsearchSpecUpdateStrategyArgs) ElasticsearchSpecUpdateStrategyPtrInput {
	return (*elasticsearchSpecUpdateStrategyPtrType)(v)
}

func (*elasticsearchSpecUpdateStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecUpdateStrategy)(nil)).Elem()
}

func (i *elasticsearchSpecUpdateStrategyPtrType) ToElasticsearchSpecUpdateStrategyPtrOutput() ElasticsearchSpecUpdateStrategyPtrOutput {
	return i.ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecUpdateStrategyPtrType) ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecUpdateStrategyPtrOutput)
}

// UpdateStrategy specifies how updates to the cluster should be performed.
type ElasticsearchSpecUpdateStrategyOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecUpdateStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecUpdateStrategy)(nil)).Elem()
}

func (o ElasticsearchSpecUpdateStrategyOutput) ToElasticsearchSpecUpdateStrategyOutput() ElasticsearchSpecUpdateStrategyOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyOutput) ToElasticsearchSpecUpdateStrategyOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyOutput) ToElasticsearchSpecUpdateStrategyPtrOutput() ElasticsearchSpecUpdateStrategyPtrOutput {
	return o.ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecUpdateStrategyOutput) ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecUpdateStrategy) *ElasticsearchSpecUpdateStrategy {
		return &v
	}).(ElasticsearchSpecUpdateStrategyPtrOutput)
}

// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
func (o ElasticsearchSpecUpdateStrategyOutput) ChangeBudget() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecUpdateStrategy) *ElasticsearchSpecUpdateStrategyChangeBudget {
		return v.ChangeBudget
	}).(ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput)
}

type ElasticsearchSpecUpdateStrategyPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecUpdateStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecUpdateStrategy)(nil)).Elem()
}

func (o ElasticsearchSpecUpdateStrategyPtrOutput) ToElasticsearchSpecUpdateStrategyPtrOutput() ElasticsearchSpecUpdateStrategyPtrOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyPtrOutput) ToElasticsearchSpecUpdateStrategyPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyPtrOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyPtrOutput) Elem() ElasticsearchSpecUpdateStrategyOutput {
	return o.ApplyT(func(v *ElasticsearchSpecUpdateStrategy) ElasticsearchSpecUpdateStrategy { return *v }).(ElasticsearchSpecUpdateStrategyOutput)
}

// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
func (o ElasticsearchSpecUpdateStrategyPtrOutput) ChangeBudget() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecUpdateStrategy) *ElasticsearchSpecUpdateStrategyChangeBudget {
		if v == nil {
			return nil
		}
		return v.ChangeBudget
	}).(ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput)
}

// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
type ElasticsearchSpecUpdateStrategyChangeBudget struct {
	// MaxSurge is the maximum number of new pods that can be created exceeding the original number of pods defined in the specification. MaxSurge is only taken into consideration when scaling up. Setting a negative value will disable the restriction. Defaults to unbounded if not specified.
	MaxSurge *int `pulumi:"maxSurge"`
	// MaxUnavailable is the maximum number of pods that can be unavailable (not ready) during the update due to circumstances under the control of the operator. Setting a negative value will disable this restriction. Defaults to 1 if not specified.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
}

// ElasticsearchSpecUpdateStrategyChangeBudgetInput is an input type that accepts ElasticsearchSpecUpdateStrategyChangeBudgetArgs and ElasticsearchSpecUpdateStrategyChangeBudgetOutput values.
// You can construct a concrete instance of `ElasticsearchSpecUpdateStrategyChangeBudgetInput` via:
//
//          ElasticsearchSpecUpdateStrategyChangeBudgetArgs{...}
type ElasticsearchSpecUpdateStrategyChangeBudgetInput interface {
	pulumi.Input

	ToElasticsearchSpecUpdateStrategyChangeBudgetOutput() ElasticsearchSpecUpdateStrategyChangeBudgetOutput
	ToElasticsearchSpecUpdateStrategyChangeBudgetOutputWithContext(context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetOutput
}

// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
type ElasticsearchSpecUpdateStrategyChangeBudgetArgs struct {
	// MaxSurge is the maximum number of new pods that can be created exceeding the original number of pods defined in the specification. MaxSurge is only taken into consideration when scaling up. Setting a negative value will disable the restriction. Defaults to unbounded if not specified.
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// MaxUnavailable is the maximum number of pods that can be unavailable (not ready) during the update due to circumstances under the control of the operator. Setting a negative value will disable this restriction. Defaults to 1 if not specified.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
}

func (ElasticsearchSpecUpdateStrategyChangeBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecUpdateStrategyChangeBudget)(nil)).Elem()
}

func (i ElasticsearchSpecUpdateStrategyChangeBudgetArgs) ToElasticsearchSpecUpdateStrategyChangeBudgetOutput() ElasticsearchSpecUpdateStrategyChangeBudgetOutput {
	return i.ToElasticsearchSpecUpdateStrategyChangeBudgetOutputWithContext(context.Background())
}

func (i ElasticsearchSpecUpdateStrategyChangeBudgetArgs) ToElasticsearchSpecUpdateStrategyChangeBudgetOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecUpdateStrategyChangeBudgetOutput)
}

func (i ElasticsearchSpecUpdateStrategyChangeBudgetArgs) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return i.ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSpecUpdateStrategyChangeBudgetArgs) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecUpdateStrategyChangeBudgetOutput).ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(ctx)
}

// ElasticsearchSpecUpdateStrategyChangeBudgetPtrInput is an input type that accepts ElasticsearchSpecUpdateStrategyChangeBudgetArgs, ElasticsearchSpecUpdateStrategyChangeBudgetPtr and ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSpecUpdateStrategyChangeBudgetPtrInput` via:
//
//          ElasticsearchSpecUpdateStrategyChangeBudgetArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSpecUpdateStrategyChangeBudgetPtrInput interface {
	pulumi.Input

	ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput
	ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput
}

type elasticsearchSpecUpdateStrategyChangeBudgetPtrType ElasticsearchSpecUpdateStrategyChangeBudgetArgs

func ElasticsearchSpecUpdateStrategyChangeBudgetPtr(v *ElasticsearchSpecUpdateStrategyChangeBudgetArgs) ElasticsearchSpecUpdateStrategyChangeBudgetPtrInput {
	return (*elasticsearchSpecUpdateStrategyChangeBudgetPtrType)(v)
}

func (*elasticsearchSpecUpdateStrategyChangeBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecUpdateStrategyChangeBudget)(nil)).Elem()
}

func (i *elasticsearchSpecUpdateStrategyChangeBudgetPtrType) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return i.ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSpecUpdateStrategyChangeBudgetPtrType) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput)
}

// ChangeBudget defines the constraints to consider when applying changes to the Elasticsearch cluster.
type ElasticsearchSpecUpdateStrategyChangeBudgetOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecUpdateStrategyChangeBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSpecUpdateStrategyChangeBudget)(nil)).Elem()
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetOutput) ToElasticsearchSpecUpdateStrategyChangeBudgetOutput() ElasticsearchSpecUpdateStrategyChangeBudgetOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetOutput) ToElasticsearchSpecUpdateStrategyChangeBudgetOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetOutput) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return o.ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetOutput) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecUpdateStrategyChangeBudget) *ElasticsearchSpecUpdateStrategyChangeBudget {
		return &v
	}).(ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput)
}

// MaxSurge is the maximum number of new pods that can be created exceeding the original number of pods defined in the specification. MaxSurge is only taken into consideration when scaling up. Setting a negative value will disable the restriction. Defaults to unbounded if not specified.
func (o ElasticsearchSpecUpdateStrategyChangeBudgetOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecUpdateStrategyChangeBudget) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// MaxUnavailable is the maximum number of pods that can be unavailable (not ready) during the update due to circumstances under the control of the operator. Setting a negative value will disable this restriction. Defaults to 1 if not specified.
func (o ElasticsearchSpecUpdateStrategyChangeBudgetOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSpecUpdateStrategyChangeBudget) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

type ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSpecUpdateStrategyChangeBudget)(nil)).Elem()
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput() ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput) ToElasticsearchSpecUpdateStrategyChangeBudgetPtrOutputWithContext(ctx context.Context) ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput {
	return o
}

func (o ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput) Elem() ElasticsearchSpecUpdateStrategyChangeBudgetOutput {
	return o.ApplyT(func(v *ElasticsearchSpecUpdateStrategyChangeBudget) ElasticsearchSpecUpdateStrategyChangeBudget {
		return *v
	}).(ElasticsearchSpecUpdateStrategyChangeBudgetOutput)
}

// MaxSurge is the maximum number of new pods that can be created exceeding the original number of pods defined in the specification. MaxSurge is only taken into consideration when scaling up. Setting a negative value will disable the restriction. Defaults to unbounded if not specified.
func (o ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecUpdateStrategyChangeBudget) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// MaxUnavailable is the maximum number of pods that can be unavailable (not ready) during the update due to circumstances under the control of the operator. Setting a negative value will disable this restriction. Defaults to 1 if not specified.
func (o ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSpecUpdateStrategyChangeBudget) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// ElasticsearchStatus defines the observed state of Elasticsearch
type ElasticsearchStatus struct {
	// AvailableNodes is the number of available instances.
	AvailableNodes *int `pulumi:"availableNodes"`
	// ElasticsearchHealth is the health of the cluster as returned by the health API.
	Health *string `pulumi:"health"`
	// ElasticsearchOrchestrationPhase is the phase Elasticsearch is in from the controller point of view.
	Phase *string `pulumi:"phase"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run in parallel: this value specifies the lowest version currently running.
	Version *string `pulumi:"version"`
}

// ElasticsearchStatusInput is an input type that accepts ElasticsearchStatusArgs and ElasticsearchStatusOutput values.
// You can construct a concrete instance of `ElasticsearchStatusInput` via:
//
//          ElasticsearchStatusArgs{...}
type ElasticsearchStatusInput interface {
	pulumi.Input

	ToElasticsearchStatusOutput() ElasticsearchStatusOutput
	ToElasticsearchStatusOutputWithContext(context.Context) ElasticsearchStatusOutput
}

// ElasticsearchStatus defines the observed state of Elasticsearch
type ElasticsearchStatusArgs struct {
	// AvailableNodes is the number of available instances.
	AvailableNodes pulumi.IntPtrInput `pulumi:"availableNodes"`
	// ElasticsearchHealth is the health of the cluster as returned by the health API.
	Health pulumi.StringPtrInput `pulumi:"health"`
	// ElasticsearchOrchestrationPhase is the phase Elasticsearch is in from the controller point of view.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run in parallel: this value specifies the lowest version currently running.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ElasticsearchStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchStatus)(nil)).Elem()
}

func (i ElasticsearchStatusArgs) ToElasticsearchStatusOutput() ElasticsearchStatusOutput {
	return i.ToElasticsearchStatusOutputWithContext(context.Background())
}

func (i ElasticsearchStatusArgs) ToElasticsearchStatusOutputWithContext(ctx context.Context) ElasticsearchStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchStatusOutput)
}

func (i ElasticsearchStatusArgs) ToElasticsearchStatusPtrOutput() ElasticsearchStatusPtrOutput {
	return i.ToElasticsearchStatusPtrOutputWithContext(context.Background())
}

func (i ElasticsearchStatusArgs) ToElasticsearchStatusPtrOutputWithContext(ctx context.Context) ElasticsearchStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchStatusOutput).ToElasticsearchStatusPtrOutputWithContext(ctx)
}

// ElasticsearchStatusPtrInput is an input type that accepts ElasticsearchStatusArgs, ElasticsearchStatusPtr and ElasticsearchStatusPtrOutput values.
// You can construct a concrete instance of `ElasticsearchStatusPtrInput` via:
//
//          ElasticsearchStatusArgs{...}
//
//  or:
//
//          nil
type ElasticsearchStatusPtrInput interface {
	pulumi.Input

	ToElasticsearchStatusPtrOutput() ElasticsearchStatusPtrOutput
	ToElasticsearchStatusPtrOutputWithContext(context.Context) ElasticsearchStatusPtrOutput
}

type elasticsearchStatusPtrType ElasticsearchStatusArgs

func ElasticsearchStatusPtr(v *ElasticsearchStatusArgs) ElasticsearchStatusPtrInput {
	return (*elasticsearchStatusPtrType)(v)
}

func (*elasticsearchStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchStatus)(nil)).Elem()
}

func (i *elasticsearchStatusPtrType) ToElasticsearchStatusPtrOutput() ElasticsearchStatusPtrOutput {
	return i.ToElasticsearchStatusPtrOutputWithContext(context.Background())
}

func (i *elasticsearchStatusPtrType) ToElasticsearchStatusPtrOutputWithContext(ctx context.Context) ElasticsearchStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchStatusPtrOutput)
}

// ElasticsearchStatus defines the observed state of Elasticsearch
type ElasticsearchStatusOutput struct{ *pulumi.OutputState }

func (ElasticsearchStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchStatus)(nil)).Elem()
}

func (o ElasticsearchStatusOutput) ToElasticsearchStatusOutput() ElasticsearchStatusOutput {
	return o
}

func (o ElasticsearchStatusOutput) ToElasticsearchStatusOutputWithContext(ctx context.Context) ElasticsearchStatusOutput {
	return o
}

func (o ElasticsearchStatusOutput) ToElasticsearchStatusPtrOutput() ElasticsearchStatusPtrOutput {
	return o.ToElasticsearchStatusPtrOutputWithContext(context.Background())
}

func (o ElasticsearchStatusOutput) ToElasticsearchStatusPtrOutputWithContext(ctx context.Context) ElasticsearchStatusPtrOutput {
	return o.ApplyT(func(v ElasticsearchStatus) *ElasticsearchStatus {
		return &v
	}).(ElasticsearchStatusPtrOutput)
}

// AvailableNodes is the number of available instances.
func (o ElasticsearchStatusOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchStatus) *int { return v.AvailableNodes }).(pulumi.IntPtrOutput)
}

// ElasticsearchHealth is the health of the cluster as returned by the health API.
func (o ElasticsearchStatusOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchStatus) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// ElasticsearchOrchestrationPhase is the phase Elasticsearch is in from the controller point of view.
func (o ElasticsearchStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run in parallel: this value specifies the lowest version currently running.
func (o ElasticsearchStatusOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchStatus) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ElasticsearchStatusPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchStatus)(nil)).Elem()
}

func (o ElasticsearchStatusPtrOutput) ToElasticsearchStatusPtrOutput() ElasticsearchStatusPtrOutput {
	return o
}

func (o ElasticsearchStatusPtrOutput) ToElasticsearchStatusPtrOutputWithContext(ctx context.Context) ElasticsearchStatusPtrOutput {
	return o
}

func (o ElasticsearchStatusPtrOutput) Elem() ElasticsearchStatusOutput {
	return o.ApplyT(func(v *ElasticsearchStatus) ElasticsearchStatus { return *v }).(ElasticsearchStatusOutput)
}

// AvailableNodes is the number of available instances.
func (o ElasticsearchStatusPtrOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchStatus) *int {
		if v == nil {
			return nil
		}
		return v.AvailableNodes
	}).(pulumi.IntPtrOutput)
}

// ElasticsearchHealth is the health of the cluster as returned by the health API.
func (o ElasticsearchStatusPtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchStatus) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// ElasticsearchOrchestrationPhase is the phase Elasticsearch is in from the controller point of view.
func (o ElasticsearchStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run in parallel: this value specifies the lowest version currently running.
func (o ElasticsearchStatusPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchStatus) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticsearchTypeOutput{})
	pulumi.RegisterOutputType(ElasticsearchMetadataOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecAuthOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecAuthPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecAuthFileRealmOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecAuthFileRealmArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecAuthRolesOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecAuthRolesArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServicePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceMetadataOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecPortsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecPortsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecPortsTargetPortOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecPortsTargetPortPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecSelectorOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpServiceSpecSessionAffinityConfigClientIPPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsCertificateOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsSelfSignedCertificateOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsSelfSignedCertificatePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsConfigOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsPodTemplateOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesMetadataOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourceOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecDataSourcePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesLimitsMapOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecResourcesRequestsMapOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesSpecSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusCapacityMapOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecNodeSetsVolumeClaimTemplatesStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetMetadataOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailableOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecMaxUnavailablePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailableOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecMinAvailablePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecSelectorOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecPodDisruptionBudgetSpecSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecRemoteClustersOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecRemoteClustersArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecRemoteClustersElasticsearchRefOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecRemoteClustersElasticsearchRefPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecSecureSettingsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecSecureSettingsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecSecureSettingsEntriesOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecSecureSettingsEntriesArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServicePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceMetadataOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecPortsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecPortsArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecPortsTargetPortOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecPortsTargetPortPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecSelectorOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecTransportServiceSpecSessionAffinityConfigClientIPPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecUpdateStrategyOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecUpdateStrategyPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecUpdateStrategyChangeBudgetOutput{})
	pulumi.RegisterOutputType(ElasticsearchSpecUpdateStrategyChangeBudgetPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchStatusOutput{})
	pulumi.RegisterOutputType(ElasticsearchStatusPtrOutput{})
}
