// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// PlacementRule is the Schema for the placementrules API
type PlacementRule struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// PlacementRuleSpec defines the desired state of PlacementRule
	Spec PlacementRuleSpecPtrOutput `pulumi:"spec"`
	// PlacementRuleStatus defines the observed state of PlacementRule
	Status PlacementRuleStatusPtrOutput `pulumi:"status"`
}

// NewPlacementRule registers a new resource with the given unique name, arguments, and options.
func NewPlacementRule(ctx *pulumi.Context,
	name string, args *PlacementRuleArgs, opts ...pulumi.ResourceOption) (*PlacementRule, error) {
	if args == nil {
		args = &PlacementRuleArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("apps.open-cluster-management.io/v1")
	args.Kind = pulumi.StringPtr("PlacementRule")
	var resource PlacementRule
	err := ctx.RegisterResource("kubernetes:apps.open-cluster-management.io/v1:PlacementRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlacementRule gets an existing PlacementRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlacementRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlacementRuleState, opts ...pulumi.ResourceOption) (*PlacementRule, error) {
	var resource PlacementRule
	err := ctx.ReadResource("kubernetes:apps.open-cluster-management.io/v1:PlacementRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlacementRule resources.
type placementRuleState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PlacementRuleSpec defines the desired state of PlacementRule
	Spec *PlacementRuleSpec `pulumi:"spec"`
	// PlacementRuleStatus defines the observed state of PlacementRule
	Status *PlacementRuleStatus `pulumi:"status"`
}

type PlacementRuleState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PlacementRuleSpec defines the desired state of PlacementRule
	Spec PlacementRuleSpecPtrInput
	// PlacementRuleStatus defines the observed state of PlacementRule
	Status PlacementRuleStatusPtrInput
}

func (PlacementRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*placementRuleState)(nil)).Elem()
}

type placementRuleArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PlacementRuleSpec defines the desired state of PlacementRule
	Spec *PlacementRuleSpec `pulumi:"spec"`
	// PlacementRuleStatus defines the observed state of PlacementRule
	Status *PlacementRuleStatus `pulumi:"status"`
}

// The set of arguments for constructing a PlacementRule resource.
type PlacementRuleArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PlacementRuleSpec defines the desired state of PlacementRule
	Spec PlacementRuleSpecPtrInput
	// PlacementRuleStatus defines the observed state of PlacementRule
	Status PlacementRuleStatusPtrInput
}

func (PlacementRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*placementRuleArgs)(nil)).Elem()
}
