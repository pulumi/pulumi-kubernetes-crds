// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Apps.V1
{

    /// <summary>
    /// To specify more than 1 package in channel
    /// </summary>
    public class SubscriptionSpecPackageFilterArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
        /// </summary>
        [Input("filterRef")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Apps.V1.SubscriptionSpecPackageFilterFilterRefArgs>? FilterRef { get; set; }

        /// <summary>
        /// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
        /// </summary>
        [Input("labelSelector")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Apps.V1.SubscriptionSpecPackageFilterLabelSelectorArgs>? LabelSelector { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public SubscriptionSpecPackageFilterArgs()
        {
        }
    }
}
