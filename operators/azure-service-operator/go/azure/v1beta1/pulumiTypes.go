// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AzureSqlDatabase is the Schema for the azuresqldatabases API
type AzureSqlDatabaseType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
	Spec *AzureSqlDatabaseSpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AzureSqlDatabaseStatus `pulumi:"status"`
}

// AzureSqlDatabaseTypeInput is an input type that accepts AzureSqlDatabaseTypeArgs and AzureSqlDatabaseTypeOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseTypeInput` via:
//
//          AzureSqlDatabaseTypeArgs{...}
type AzureSqlDatabaseTypeInput interface {
	pulumi.Input

	ToAzureSqlDatabaseTypeOutput() AzureSqlDatabaseTypeOutput
	ToAzureSqlDatabaseTypeOutputWithContext(context.Context) AzureSqlDatabaseTypeOutput
}

// AzureSqlDatabase is the Schema for the azuresqldatabases API
type AzureSqlDatabaseTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
	Spec AzureSqlDatabaseSpecPtrInput `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureSqlDatabaseStatusPtrInput `pulumi:"status"`
}

func (AzureSqlDatabaseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseType)(nil)).Elem()
}

func (i AzureSqlDatabaseTypeArgs) ToAzureSqlDatabaseTypeOutput() AzureSqlDatabaseTypeOutput {
	return i.ToAzureSqlDatabaseTypeOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseTypeArgs) ToAzureSqlDatabaseTypeOutputWithContext(ctx context.Context) AzureSqlDatabaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseTypeOutput)
}

// AzureSqlDatabase is the Schema for the azuresqldatabases API
type AzureSqlDatabaseTypeOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseType)(nil)).Elem()
}

func (o AzureSqlDatabaseTypeOutput) ToAzureSqlDatabaseTypeOutput() AzureSqlDatabaseTypeOutput {
	return o
}

func (o AzureSqlDatabaseTypeOutput) ToAzureSqlDatabaseTypeOutputWithContext(ctx context.Context) AzureSqlDatabaseTypeOutput {
	return o
}

func (o AzureSqlDatabaseTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
func (o AzureSqlDatabaseTypeOutput) Spec() AzureSqlDatabaseSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseType) *AzureSqlDatabaseSpec { return v.Spec }).(AzureSqlDatabaseSpecPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
func (o AzureSqlDatabaseTypeOutput) Status() AzureSqlDatabaseStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseType) *AzureSqlDatabaseStatus { return v.Status }).(AzureSqlDatabaseStatusPtrOutput)
}

type AzureSqlDatabaseMetadata struct {
}

// AzureSqlDatabaseMetadataInput is an input type that accepts AzureSqlDatabaseMetadataArgs and AzureSqlDatabaseMetadataOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseMetadataInput` via:
//
//          AzureSqlDatabaseMetadataArgs{...}
type AzureSqlDatabaseMetadataInput interface {
	pulumi.Input

	ToAzureSqlDatabaseMetadataOutput() AzureSqlDatabaseMetadataOutput
	ToAzureSqlDatabaseMetadataOutputWithContext(context.Context) AzureSqlDatabaseMetadataOutput
}

type AzureSqlDatabaseMetadataArgs struct {
}

func (AzureSqlDatabaseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseMetadata)(nil)).Elem()
}

func (i AzureSqlDatabaseMetadataArgs) ToAzureSqlDatabaseMetadataOutput() AzureSqlDatabaseMetadataOutput {
	return i.ToAzureSqlDatabaseMetadataOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseMetadataArgs) ToAzureSqlDatabaseMetadataOutputWithContext(ctx context.Context) AzureSqlDatabaseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseMetadataOutput)
}

type AzureSqlDatabaseMetadataOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseMetadata)(nil)).Elem()
}

func (o AzureSqlDatabaseMetadataOutput) ToAzureSqlDatabaseMetadataOutput() AzureSqlDatabaseMetadataOutput {
	return o
}

func (o AzureSqlDatabaseMetadataOutput) ToAzureSqlDatabaseMetadataOutputWithContext(ctx context.Context) AzureSqlDatabaseMetadataOutput {
	return o
}

// AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
type AzureSqlDatabaseSpec struct {
	DbName  *string `pulumi:"dbName"`
	Edition *int    `pulumi:"edition"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
	Location         string                       `pulumi:"location"`
	MaxSize          *AzureSqlDatabaseSpecMaxSize `pulumi:"maxSize"`
	MonthlyRetention *string                      `pulumi:"monthlyRetention"`
	ResourceGroup    string                       `pulumi:"resourceGroup"`
	Server           string                       `pulumi:"server"`
	Sku              *AzureSqlDatabaseSpecSku     `pulumi:"sku"`
	WeekOfYear       *int                         `pulumi:"weekOfYear"`
	WeeklyRetention  *string                      `pulumi:"weeklyRetention"`
	YearlyRetention  *string                      `pulumi:"yearlyRetention"`
}

// AzureSqlDatabaseSpecInput is an input type that accepts AzureSqlDatabaseSpecArgs and AzureSqlDatabaseSpecOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSpecInput` via:
//
//          AzureSqlDatabaseSpecArgs{...}
type AzureSqlDatabaseSpecInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSpecOutput() AzureSqlDatabaseSpecOutput
	ToAzureSqlDatabaseSpecOutputWithContext(context.Context) AzureSqlDatabaseSpecOutput
}

// AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
type AzureSqlDatabaseSpecArgs struct {
	DbName  pulumi.StringPtrInput `pulumi:"dbName"`
	Edition pulumi.IntPtrInput    `pulumi:"edition"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
	Location         pulumi.StringInput                  `pulumi:"location"`
	MaxSize          AzureSqlDatabaseSpecMaxSizePtrInput `pulumi:"maxSize"`
	MonthlyRetention pulumi.StringPtrInput               `pulumi:"monthlyRetention"`
	ResourceGroup    pulumi.StringInput                  `pulumi:"resourceGroup"`
	Server           pulumi.StringInput                  `pulumi:"server"`
	Sku              AzureSqlDatabaseSpecSkuPtrInput     `pulumi:"sku"`
	WeekOfYear       pulumi.IntPtrInput                  `pulumi:"weekOfYear"`
	WeeklyRetention  pulumi.StringPtrInput               `pulumi:"weeklyRetention"`
	YearlyRetention  pulumi.StringPtrInput               `pulumi:"yearlyRetention"`
}

func (AzureSqlDatabaseSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSpec)(nil)).Elem()
}

func (i AzureSqlDatabaseSpecArgs) ToAzureSqlDatabaseSpecOutput() AzureSqlDatabaseSpecOutput {
	return i.ToAzureSqlDatabaseSpecOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSpecArgs) ToAzureSqlDatabaseSpecOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecOutput)
}

func (i AzureSqlDatabaseSpecArgs) ToAzureSqlDatabaseSpecPtrOutput() AzureSqlDatabaseSpecPtrOutput {
	return i.ToAzureSqlDatabaseSpecPtrOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSpecArgs) ToAzureSqlDatabaseSpecPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecOutput).ToAzureSqlDatabaseSpecPtrOutputWithContext(ctx)
}

// AzureSqlDatabaseSpecPtrInput is an input type that accepts AzureSqlDatabaseSpecArgs, AzureSqlDatabaseSpecPtr and AzureSqlDatabaseSpecPtrOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSpecPtrInput` via:
//
//          AzureSqlDatabaseSpecArgs{...}
//
//  or:
//
//          nil
type AzureSqlDatabaseSpecPtrInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSpecPtrOutput() AzureSqlDatabaseSpecPtrOutput
	ToAzureSqlDatabaseSpecPtrOutputWithContext(context.Context) AzureSqlDatabaseSpecPtrOutput
}

type azureSqlDatabaseSpecPtrType AzureSqlDatabaseSpecArgs

func AzureSqlDatabaseSpecPtr(v *AzureSqlDatabaseSpecArgs) AzureSqlDatabaseSpecPtrInput {
	return (*azureSqlDatabaseSpecPtrType)(v)
}

func (*azureSqlDatabaseSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSpec)(nil)).Elem()
}

func (i *azureSqlDatabaseSpecPtrType) ToAzureSqlDatabaseSpecPtrOutput() AzureSqlDatabaseSpecPtrOutput {
	return i.ToAzureSqlDatabaseSpecPtrOutputWithContext(context.Background())
}

func (i *azureSqlDatabaseSpecPtrType) ToAzureSqlDatabaseSpecPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecPtrOutput)
}

// AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
type AzureSqlDatabaseSpecOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSpec)(nil)).Elem()
}

func (o AzureSqlDatabaseSpecOutput) ToAzureSqlDatabaseSpecOutput() AzureSqlDatabaseSpecOutput {
	return o
}

func (o AzureSqlDatabaseSpecOutput) ToAzureSqlDatabaseSpecOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecOutput {
	return o
}

func (o AzureSqlDatabaseSpecOutput) ToAzureSqlDatabaseSpecPtrOutput() AzureSqlDatabaseSpecPtrOutput {
	return o.ToAzureSqlDatabaseSpecPtrOutputWithContext(context.Background())
}

func (o AzureSqlDatabaseSpecOutput) ToAzureSqlDatabaseSpecPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *AzureSqlDatabaseSpec {
		return &v
	}).(AzureSqlDatabaseSpecPtrOutput)
}
func (o AzureSqlDatabaseSpecOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecOutput) Edition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *int { return v.Edition }).(pulumi.IntPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlDatabaseSpecOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) string { return v.Location }).(pulumi.StringOutput)
}

func (o AzureSqlDatabaseSpecOutput) MaxSize() AzureSqlDatabaseSpecMaxSizePtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *AzureSqlDatabaseSpecMaxSize { return v.MaxSize }).(AzureSqlDatabaseSpecMaxSizePtrOutput)
}

func (o AzureSqlDatabaseSpecOutput) MonthlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *string { return v.MonthlyRetention }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

func (o AzureSqlDatabaseSpecOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) string { return v.Server }).(pulumi.StringOutput)
}

func (o AzureSqlDatabaseSpecOutput) Sku() AzureSqlDatabaseSpecSkuPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *AzureSqlDatabaseSpecSku { return v.Sku }).(AzureSqlDatabaseSpecSkuPtrOutput)
}

func (o AzureSqlDatabaseSpecOutput) WeekOfYear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *int { return v.WeekOfYear }).(pulumi.IntPtrOutput)
}

func (o AzureSqlDatabaseSpecOutput) WeeklyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *string { return v.WeeklyRetention }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecOutput) YearlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpec) *string { return v.YearlyRetention }).(pulumi.StringPtrOutput)
}

type AzureSqlDatabaseSpecPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSpec)(nil)).Elem()
}

func (o AzureSqlDatabaseSpecPtrOutput) ToAzureSqlDatabaseSpecPtrOutput() AzureSqlDatabaseSpecPtrOutput {
	return o
}

func (o AzureSqlDatabaseSpecPtrOutput) ToAzureSqlDatabaseSpecPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecPtrOutput {
	return o
}

func (o AzureSqlDatabaseSpecPtrOutput) Elem() AzureSqlDatabaseSpecOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) AzureSqlDatabaseSpec { return *v }).(AzureSqlDatabaseSpecOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return v.DbName
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) Edition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *int {
		if v == nil {
			return nil
		}
		return v.Edition
	}).(pulumi.IntPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlDatabaseSpecPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) MaxSize() AzureSqlDatabaseSpecMaxSizePtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *AzureSqlDatabaseSpecMaxSize {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(AzureSqlDatabaseSpecMaxSizePtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) MonthlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return v.MonthlyRetention
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) Sku() AzureSqlDatabaseSpecSkuPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *AzureSqlDatabaseSpecSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(AzureSqlDatabaseSpecSkuPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) WeekOfYear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *int {
		if v == nil {
			return nil
		}
		return v.WeekOfYear
	}).(pulumi.IntPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) WeeklyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return v.WeeklyRetention
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseSpecPtrOutput) YearlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpec) *string {
		if v == nil {
			return nil
		}
		return v.YearlyRetention
	}).(pulumi.StringPtrOutput)
}

type AzureSqlDatabaseSpecMaxSize struct {
}

// AzureSqlDatabaseSpecMaxSizeInput is an input type that accepts AzureSqlDatabaseSpecMaxSizeArgs and AzureSqlDatabaseSpecMaxSizeOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSpecMaxSizeInput` via:
//
//          AzureSqlDatabaseSpecMaxSizeArgs{...}
type AzureSqlDatabaseSpecMaxSizeInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSpecMaxSizeOutput() AzureSqlDatabaseSpecMaxSizeOutput
	ToAzureSqlDatabaseSpecMaxSizeOutputWithContext(context.Context) AzureSqlDatabaseSpecMaxSizeOutput
}

type AzureSqlDatabaseSpecMaxSizeArgs struct {
}

func (AzureSqlDatabaseSpecMaxSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSpecMaxSize)(nil)).Elem()
}

func (i AzureSqlDatabaseSpecMaxSizeArgs) ToAzureSqlDatabaseSpecMaxSizeOutput() AzureSqlDatabaseSpecMaxSizeOutput {
	return i.ToAzureSqlDatabaseSpecMaxSizeOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSpecMaxSizeArgs) ToAzureSqlDatabaseSpecMaxSizeOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecMaxSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecMaxSizeOutput)
}

func (i AzureSqlDatabaseSpecMaxSizeArgs) ToAzureSqlDatabaseSpecMaxSizePtrOutput() AzureSqlDatabaseSpecMaxSizePtrOutput {
	return i.ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSpecMaxSizeArgs) ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecMaxSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecMaxSizeOutput).ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(ctx)
}

// AzureSqlDatabaseSpecMaxSizePtrInput is an input type that accepts AzureSqlDatabaseSpecMaxSizeArgs, AzureSqlDatabaseSpecMaxSizePtr and AzureSqlDatabaseSpecMaxSizePtrOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSpecMaxSizePtrInput` via:
//
//          AzureSqlDatabaseSpecMaxSizeArgs{...}
//
//  or:
//
//          nil
type AzureSqlDatabaseSpecMaxSizePtrInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSpecMaxSizePtrOutput() AzureSqlDatabaseSpecMaxSizePtrOutput
	ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(context.Context) AzureSqlDatabaseSpecMaxSizePtrOutput
}

type azureSqlDatabaseSpecMaxSizePtrType AzureSqlDatabaseSpecMaxSizeArgs

func AzureSqlDatabaseSpecMaxSizePtr(v *AzureSqlDatabaseSpecMaxSizeArgs) AzureSqlDatabaseSpecMaxSizePtrInput {
	return (*azureSqlDatabaseSpecMaxSizePtrType)(v)
}

func (*azureSqlDatabaseSpecMaxSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSpecMaxSize)(nil)).Elem()
}

func (i *azureSqlDatabaseSpecMaxSizePtrType) ToAzureSqlDatabaseSpecMaxSizePtrOutput() AzureSqlDatabaseSpecMaxSizePtrOutput {
	return i.ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(context.Background())
}

func (i *azureSqlDatabaseSpecMaxSizePtrType) ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecMaxSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecMaxSizePtrOutput)
}

type AzureSqlDatabaseSpecMaxSizeOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSpecMaxSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSpecMaxSize)(nil)).Elem()
}

func (o AzureSqlDatabaseSpecMaxSizeOutput) ToAzureSqlDatabaseSpecMaxSizeOutput() AzureSqlDatabaseSpecMaxSizeOutput {
	return o
}

func (o AzureSqlDatabaseSpecMaxSizeOutput) ToAzureSqlDatabaseSpecMaxSizeOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecMaxSizeOutput {
	return o
}

func (o AzureSqlDatabaseSpecMaxSizeOutput) ToAzureSqlDatabaseSpecMaxSizePtrOutput() AzureSqlDatabaseSpecMaxSizePtrOutput {
	return o.ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(context.Background())
}

func (o AzureSqlDatabaseSpecMaxSizeOutput) ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecMaxSizePtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecMaxSize) *AzureSqlDatabaseSpecMaxSize {
		return &v
	}).(AzureSqlDatabaseSpecMaxSizePtrOutput)
}

type AzureSqlDatabaseSpecMaxSizePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSpecMaxSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSpecMaxSize)(nil)).Elem()
}

func (o AzureSqlDatabaseSpecMaxSizePtrOutput) ToAzureSqlDatabaseSpecMaxSizePtrOutput() AzureSqlDatabaseSpecMaxSizePtrOutput {
	return o
}

func (o AzureSqlDatabaseSpecMaxSizePtrOutput) ToAzureSqlDatabaseSpecMaxSizePtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecMaxSizePtrOutput {
	return o
}

func (o AzureSqlDatabaseSpecMaxSizePtrOutput) Elem() AzureSqlDatabaseSpecMaxSizeOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecMaxSize) AzureSqlDatabaseSpecMaxSize { return *v }).(AzureSqlDatabaseSpecMaxSizeOutput)
}

type AzureSqlDatabaseSpecSku struct {
	// Capacity - Capacity of the particular SKU.
	Capacity *int `pulumi:"capacity"`
	// Family - If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// Name - The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `pulumi:"name"`
	// Size - Size of the particular SKU
	Size *string `pulumi:"size"`
	// optional Tier - The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `pulumi:"tier"`
}

// AzureSqlDatabaseSpecSkuInput is an input type that accepts AzureSqlDatabaseSpecSkuArgs and AzureSqlDatabaseSpecSkuOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSpecSkuInput` via:
//
//          AzureSqlDatabaseSpecSkuArgs{...}
type AzureSqlDatabaseSpecSkuInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSpecSkuOutput() AzureSqlDatabaseSpecSkuOutput
	ToAzureSqlDatabaseSpecSkuOutputWithContext(context.Context) AzureSqlDatabaseSpecSkuOutput
}

type AzureSqlDatabaseSpecSkuArgs struct {
	// Capacity - Capacity of the particular SKU.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family - If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Name - The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name pulumi.StringInput `pulumi:"name"`
	// Size - Size of the particular SKU
	Size pulumi.StringPtrInput `pulumi:"size"`
	// optional Tier - The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (AzureSqlDatabaseSpecSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSpecSku)(nil)).Elem()
}

func (i AzureSqlDatabaseSpecSkuArgs) ToAzureSqlDatabaseSpecSkuOutput() AzureSqlDatabaseSpecSkuOutput {
	return i.ToAzureSqlDatabaseSpecSkuOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSpecSkuArgs) ToAzureSqlDatabaseSpecSkuOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecSkuOutput)
}

func (i AzureSqlDatabaseSpecSkuArgs) ToAzureSqlDatabaseSpecSkuPtrOutput() AzureSqlDatabaseSpecSkuPtrOutput {
	return i.ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseSpecSkuArgs) ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecSkuOutput).ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(ctx)
}

// AzureSqlDatabaseSpecSkuPtrInput is an input type that accepts AzureSqlDatabaseSpecSkuArgs, AzureSqlDatabaseSpecSkuPtr and AzureSqlDatabaseSpecSkuPtrOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseSpecSkuPtrInput` via:
//
//          AzureSqlDatabaseSpecSkuArgs{...}
//
//  or:
//
//          nil
type AzureSqlDatabaseSpecSkuPtrInput interface {
	pulumi.Input

	ToAzureSqlDatabaseSpecSkuPtrOutput() AzureSqlDatabaseSpecSkuPtrOutput
	ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(context.Context) AzureSqlDatabaseSpecSkuPtrOutput
}

type azureSqlDatabaseSpecSkuPtrType AzureSqlDatabaseSpecSkuArgs

func AzureSqlDatabaseSpecSkuPtr(v *AzureSqlDatabaseSpecSkuArgs) AzureSqlDatabaseSpecSkuPtrInput {
	return (*azureSqlDatabaseSpecSkuPtrType)(v)
}

func (*azureSqlDatabaseSpecSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSpecSku)(nil)).Elem()
}

func (i *azureSqlDatabaseSpecSkuPtrType) ToAzureSqlDatabaseSpecSkuPtrOutput() AzureSqlDatabaseSpecSkuPtrOutput {
	return i.ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(context.Background())
}

func (i *azureSqlDatabaseSpecSkuPtrType) ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseSpecSkuPtrOutput)
}

type AzureSqlDatabaseSpecSkuOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSpecSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseSpecSku)(nil)).Elem()
}

func (o AzureSqlDatabaseSpecSkuOutput) ToAzureSqlDatabaseSpecSkuOutput() AzureSqlDatabaseSpecSkuOutput {
	return o
}

func (o AzureSqlDatabaseSpecSkuOutput) ToAzureSqlDatabaseSpecSkuOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecSkuOutput {
	return o
}

func (o AzureSqlDatabaseSpecSkuOutput) ToAzureSqlDatabaseSpecSkuPtrOutput() AzureSqlDatabaseSpecSkuPtrOutput {
	return o.ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(context.Background())
}

func (o AzureSqlDatabaseSpecSkuOutput) ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecSkuPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecSku) *AzureSqlDatabaseSpecSku {
		return &v
	}).(AzureSqlDatabaseSpecSkuPtrOutput)
}

// Capacity - Capacity of the particular SKU.
func (o AzureSqlDatabaseSpecSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family - If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o AzureSqlDatabaseSpecSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name - The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o AzureSqlDatabaseSpecSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecSku) string { return v.Name }).(pulumi.StringOutput)
}

// Size - Size of the particular SKU
func (o AzureSqlDatabaseSpecSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// optional Tier - The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o AzureSqlDatabaseSpecSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseSpecSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type AzureSqlDatabaseSpecSkuPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseSpecSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseSpecSku)(nil)).Elem()
}

func (o AzureSqlDatabaseSpecSkuPtrOutput) ToAzureSqlDatabaseSpecSkuPtrOutput() AzureSqlDatabaseSpecSkuPtrOutput {
	return o
}

func (o AzureSqlDatabaseSpecSkuPtrOutput) ToAzureSqlDatabaseSpecSkuPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseSpecSkuPtrOutput {
	return o
}

func (o AzureSqlDatabaseSpecSkuPtrOutput) Elem() AzureSqlDatabaseSpecSkuOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecSku) AzureSqlDatabaseSpecSku { return *v }).(AzureSqlDatabaseSpecSkuOutput)
}

// Capacity - Capacity of the particular SKU.
func (o AzureSqlDatabaseSpecSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family - If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o AzureSqlDatabaseSpecSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name - The name of the SKU, typically, a letter + Number code, e.g. P3.
func (o AzureSqlDatabaseSpecSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Size - Size of the particular SKU
func (o AzureSqlDatabaseSpecSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// optional Tier - The tier or edition of the particular SKU, e.g. Basic, Premium.
func (o AzureSqlDatabaseSpecSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseSpecSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlDatabaseStatus struct {
	Completed          *string `pulumi:"completed"`
	ContainsUpdate     *bool   `pulumi:"containsUpdate"`
	FailedProvisioning *bool   `pulumi:"failedProvisioning"`
	FlattenedSecrets   *bool   `pulumi:"flattenedSecrets"`
	Message            *string `pulumi:"message"`
	Output             *string `pulumi:"output"`
	PollingUrl         *string `pulumi:"pollingUrl"`
	Provisioned        *bool   `pulumi:"provisioned"`
	Provisioning       *bool   `pulumi:"provisioning"`
	Requested          *string `pulumi:"requested"`
	ResourceId         *string `pulumi:"resourceId"`
	SpecHash           *string `pulumi:"specHash"`
	State              *string `pulumi:"state"`
}

// AzureSqlDatabaseStatusInput is an input type that accepts AzureSqlDatabaseStatusArgs and AzureSqlDatabaseStatusOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseStatusInput` via:
//
//          AzureSqlDatabaseStatusArgs{...}
type AzureSqlDatabaseStatusInput interface {
	pulumi.Input

	ToAzureSqlDatabaseStatusOutput() AzureSqlDatabaseStatusOutput
	ToAzureSqlDatabaseStatusOutputWithContext(context.Context) AzureSqlDatabaseStatusOutput
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlDatabaseStatusArgs struct {
	Completed          pulumi.StringPtrInput `pulumi:"completed"`
	ContainsUpdate     pulumi.BoolPtrInput   `pulumi:"containsUpdate"`
	FailedProvisioning pulumi.BoolPtrInput   `pulumi:"failedProvisioning"`
	FlattenedSecrets   pulumi.BoolPtrInput   `pulumi:"flattenedSecrets"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Output             pulumi.StringPtrInput `pulumi:"output"`
	PollingUrl         pulumi.StringPtrInput `pulumi:"pollingUrl"`
	Provisioned        pulumi.BoolPtrInput   `pulumi:"provisioned"`
	Provisioning       pulumi.BoolPtrInput   `pulumi:"provisioning"`
	Requested          pulumi.StringPtrInput `pulumi:"requested"`
	ResourceId         pulumi.StringPtrInput `pulumi:"resourceId"`
	SpecHash           pulumi.StringPtrInput `pulumi:"specHash"`
	State              pulumi.StringPtrInput `pulumi:"state"`
}

func (AzureSqlDatabaseStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseStatus)(nil)).Elem()
}

func (i AzureSqlDatabaseStatusArgs) ToAzureSqlDatabaseStatusOutput() AzureSqlDatabaseStatusOutput {
	return i.ToAzureSqlDatabaseStatusOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseStatusArgs) ToAzureSqlDatabaseStatusOutputWithContext(ctx context.Context) AzureSqlDatabaseStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseStatusOutput)
}

func (i AzureSqlDatabaseStatusArgs) ToAzureSqlDatabaseStatusPtrOutput() AzureSqlDatabaseStatusPtrOutput {
	return i.ToAzureSqlDatabaseStatusPtrOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseStatusArgs) ToAzureSqlDatabaseStatusPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseStatusOutput).ToAzureSqlDatabaseStatusPtrOutputWithContext(ctx)
}

// AzureSqlDatabaseStatusPtrInput is an input type that accepts AzureSqlDatabaseStatusArgs, AzureSqlDatabaseStatusPtr and AzureSqlDatabaseStatusPtrOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseStatusPtrInput` via:
//
//          AzureSqlDatabaseStatusArgs{...}
//
//  or:
//
//          nil
type AzureSqlDatabaseStatusPtrInput interface {
	pulumi.Input

	ToAzureSqlDatabaseStatusPtrOutput() AzureSqlDatabaseStatusPtrOutput
	ToAzureSqlDatabaseStatusPtrOutputWithContext(context.Context) AzureSqlDatabaseStatusPtrOutput
}

type azureSqlDatabaseStatusPtrType AzureSqlDatabaseStatusArgs

func AzureSqlDatabaseStatusPtr(v *AzureSqlDatabaseStatusArgs) AzureSqlDatabaseStatusPtrInput {
	return (*azureSqlDatabaseStatusPtrType)(v)
}

func (*azureSqlDatabaseStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseStatus)(nil)).Elem()
}

func (i *azureSqlDatabaseStatusPtrType) ToAzureSqlDatabaseStatusPtrOutput() AzureSqlDatabaseStatusPtrOutput {
	return i.ToAzureSqlDatabaseStatusPtrOutputWithContext(context.Background())
}

func (i *azureSqlDatabaseStatusPtrType) ToAzureSqlDatabaseStatusPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseStatusPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlDatabaseStatusOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseStatus)(nil)).Elem()
}

func (o AzureSqlDatabaseStatusOutput) ToAzureSqlDatabaseStatusOutput() AzureSqlDatabaseStatusOutput {
	return o
}

func (o AzureSqlDatabaseStatusOutput) ToAzureSqlDatabaseStatusOutputWithContext(ctx context.Context) AzureSqlDatabaseStatusOutput {
	return o
}

func (o AzureSqlDatabaseStatusOutput) ToAzureSqlDatabaseStatusPtrOutput() AzureSqlDatabaseStatusPtrOutput {
	return o.ToAzureSqlDatabaseStatusPtrOutputWithContext(context.Background())
}

func (o AzureSqlDatabaseStatusOutput) ToAzureSqlDatabaseStatusPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *AzureSqlDatabaseStatus {
		return &v
	}).(AzureSqlDatabaseStatusPtrOutput)
}
func (o AzureSqlDatabaseStatusOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.Completed }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *bool { return v.ContainsUpdate }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *bool { return v.FailedProvisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *bool { return v.FlattenedSecrets }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.Output }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.PollingUrl }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *bool { return v.Provisioned }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *bool { return v.Provisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.Requested }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.SpecHash }).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AzureSqlDatabaseStatusPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlDatabaseStatus)(nil)).Elem()
}

func (o AzureSqlDatabaseStatusPtrOutput) ToAzureSqlDatabaseStatusPtrOutput() AzureSqlDatabaseStatusPtrOutput {
	return o
}

func (o AzureSqlDatabaseStatusPtrOutput) ToAzureSqlDatabaseStatusPtrOutputWithContext(ctx context.Context) AzureSqlDatabaseStatusPtrOutput {
	return o
}

func (o AzureSqlDatabaseStatusPtrOutput) Elem() AzureSqlDatabaseStatusOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) AzureSqlDatabaseStatus { return *v }).(AzureSqlDatabaseStatusOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Completed
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ContainsUpdate
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FailedProvisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FlattenedSecrets
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Output
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.PollingUrl
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioned
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Requested
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.SpecHash
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlDatabaseStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlDatabaseStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups API
type AzureSqlFailoverGroupType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
	Spec *AzureSqlFailoverGroupSpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AzureSqlFailoverGroupStatus `pulumi:"status"`
}

// AzureSqlFailoverGroupTypeInput is an input type that accepts AzureSqlFailoverGroupTypeArgs and AzureSqlFailoverGroupTypeOutput values.
// You can construct a concrete instance of `AzureSqlFailoverGroupTypeInput` via:
//
//          AzureSqlFailoverGroupTypeArgs{...}
type AzureSqlFailoverGroupTypeInput interface {
	pulumi.Input

	ToAzureSqlFailoverGroupTypeOutput() AzureSqlFailoverGroupTypeOutput
	ToAzureSqlFailoverGroupTypeOutputWithContext(context.Context) AzureSqlFailoverGroupTypeOutput
}

// AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups API
type AzureSqlFailoverGroupTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
	Spec AzureSqlFailoverGroupSpecPtrInput `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureSqlFailoverGroupStatusPtrInput `pulumi:"status"`
}

func (AzureSqlFailoverGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupType)(nil)).Elem()
}

func (i AzureSqlFailoverGroupTypeArgs) ToAzureSqlFailoverGroupTypeOutput() AzureSqlFailoverGroupTypeOutput {
	return i.ToAzureSqlFailoverGroupTypeOutputWithContext(context.Background())
}

func (i AzureSqlFailoverGroupTypeArgs) ToAzureSqlFailoverGroupTypeOutputWithContext(ctx context.Context) AzureSqlFailoverGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupTypeOutput)
}

// AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups API
type AzureSqlFailoverGroupTypeOutput struct{ *pulumi.OutputState }

func (AzureSqlFailoverGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupType)(nil)).Elem()
}

func (o AzureSqlFailoverGroupTypeOutput) ToAzureSqlFailoverGroupTypeOutput() AzureSqlFailoverGroupTypeOutput {
	return o
}

func (o AzureSqlFailoverGroupTypeOutput) ToAzureSqlFailoverGroupTypeOutputWithContext(ctx context.Context) AzureSqlFailoverGroupTypeOutput {
	return o
}

func (o AzureSqlFailoverGroupTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
func (o AzureSqlFailoverGroupTypeOutput) Spec() AzureSqlFailoverGroupSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupType) *AzureSqlFailoverGroupSpec { return v.Spec }).(AzureSqlFailoverGroupSpecPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
func (o AzureSqlFailoverGroupTypeOutput) Status() AzureSqlFailoverGroupStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupType) *AzureSqlFailoverGroupStatus { return v.Status }).(AzureSqlFailoverGroupStatusPtrOutput)
}

type AzureSqlFailoverGroupMetadata struct {
}

// AzureSqlFailoverGroupMetadataInput is an input type that accepts AzureSqlFailoverGroupMetadataArgs and AzureSqlFailoverGroupMetadataOutput values.
// You can construct a concrete instance of `AzureSqlFailoverGroupMetadataInput` via:
//
//          AzureSqlFailoverGroupMetadataArgs{...}
type AzureSqlFailoverGroupMetadataInput interface {
	pulumi.Input

	ToAzureSqlFailoverGroupMetadataOutput() AzureSqlFailoverGroupMetadataOutput
	ToAzureSqlFailoverGroupMetadataOutputWithContext(context.Context) AzureSqlFailoverGroupMetadataOutput
}

type AzureSqlFailoverGroupMetadataArgs struct {
}

func (AzureSqlFailoverGroupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupMetadata)(nil)).Elem()
}

func (i AzureSqlFailoverGroupMetadataArgs) ToAzureSqlFailoverGroupMetadataOutput() AzureSqlFailoverGroupMetadataOutput {
	return i.ToAzureSqlFailoverGroupMetadataOutputWithContext(context.Background())
}

func (i AzureSqlFailoverGroupMetadataArgs) ToAzureSqlFailoverGroupMetadataOutputWithContext(ctx context.Context) AzureSqlFailoverGroupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupMetadataOutput)
}

type AzureSqlFailoverGroupMetadataOutput struct{ *pulumi.OutputState }

func (AzureSqlFailoverGroupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupMetadata)(nil)).Elem()
}

func (o AzureSqlFailoverGroupMetadataOutput) ToAzureSqlFailoverGroupMetadataOutput() AzureSqlFailoverGroupMetadataOutput {
	return o
}

func (o AzureSqlFailoverGroupMetadataOutput) ToAzureSqlFailoverGroupMetadataOutputWithContext(ctx context.Context) AzureSqlFailoverGroupMetadataOutput {
	return o
}

// AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
type AzureSqlFailoverGroupSpec struct {
	DatabaseList        []string `pulumi:"databaseList"`
	FailoverGracePeriod int      `pulumi:"failoverGracePeriod"`
	// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
	FailoverPolicy         string  `pulumi:"failoverPolicy"`
	KeyVaultToStoreSecrets *string `pulumi:"keyVaultToStoreSecrets"`
	// Important: Run "make" to regenerate code after modifying this file
	Location                     string `pulumi:"location"`
	ResourceGroup                string `pulumi:"resourceGroup"`
	SecondaryServer              string `pulumi:"secondaryServer"`
	SecondaryServerResourceGroup string `pulumi:"secondaryServerResourceGroup"`
	Server                       string `pulumi:"server"`
}

// AzureSqlFailoverGroupSpecInput is an input type that accepts AzureSqlFailoverGroupSpecArgs and AzureSqlFailoverGroupSpecOutput values.
// You can construct a concrete instance of `AzureSqlFailoverGroupSpecInput` via:
//
//          AzureSqlFailoverGroupSpecArgs{...}
type AzureSqlFailoverGroupSpecInput interface {
	pulumi.Input

	ToAzureSqlFailoverGroupSpecOutput() AzureSqlFailoverGroupSpecOutput
	ToAzureSqlFailoverGroupSpecOutputWithContext(context.Context) AzureSqlFailoverGroupSpecOutput
}

// AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
type AzureSqlFailoverGroupSpecArgs struct {
	DatabaseList        pulumi.StringArrayInput `pulumi:"databaseList"`
	FailoverGracePeriod pulumi.IntInput         `pulumi:"failoverGracePeriod"`
	// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
	FailoverPolicy         pulumi.StringInput    `pulumi:"failoverPolicy"`
	KeyVaultToStoreSecrets pulumi.StringPtrInput `pulumi:"keyVaultToStoreSecrets"`
	// Important: Run "make" to regenerate code after modifying this file
	Location                     pulumi.StringInput `pulumi:"location"`
	ResourceGroup                pulumi.StringInput `pulumi:"resourceGroup"`
	SecondaryServer              pulumi.StringInput `pulumi:"secondaryServer"`
	SecondaryServerResourceGroup pulumi.StringInput `pulumi:"secondaryServerResourceGroup"`
	Server                       pulumi.StringInput `pulumi:"server"`
}

func (AzureSqlFailoverGroupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupSpec)(nil)).Elem()
}

func (i AzureSqlFailoverGroupSpecArgs) ToAzureSqlFailoverGroupSpecOutput() AzureSqlFailoverGroupSpecOutput {
	return i.ToAzureSqlFailoverGroupSpecOutputWithContext(context.Background())
}

func (i AzureSqlFailoverGroupSpecArgs) ToAzureSqlFailoverGroupSpecOutputWithContext(ctx context.Context) AzureSqlFailoverGroupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupSpecOutput)
}

func (i AzureSqlFailoverGroupSpecArgs) ToAzureSqlFailoverGroupSpecPtrOutput() AzureSqlFailoverGroupSpecPtrOutput {
	return i.ToAzureSqlFailoverGroupSpecPtrOutputWithContext(context.Background())
}

func (i AzureSqlFailoverGroupSpecArgs) ToAzureSqlFailoverGroupSpecPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupSpecOutput).ToAzureSqlFailoverGroupSpecPtrOutputWithContext(ctx)
}

// AzureSqlFailoverGroupSpecPtrInput is an input type that accepts AzureSqlFailoverGroupSpecArgs, AzureSqlFailoverGroupSpecPtr and AzureSqlFailoverGroupSpecPtrOutput values.
// You can construct a concrete instance of `AzureSqlFailoverGroupSpecPtrInput` via:
//
//          AzureSqlFailoverGroupSpecArgs{...}
//
//  or:
//
//          nil
type AzureSqlFailoverGroupSpecPtrInput interface {
	pulumi.Input

	ToAzureSqlFailoverGroupSpecPtrOutput() AzureSqlFailoverGroupSpecPtrOutput
	ToAzureSqlFailoverGroupSpecPtrOutputWithContext(context.Context) AzureSqlFailoverGroupSpecPtrOutput
}

type azureSqlFailoverGroupSpecPtrType AzureSqlFailoverGroupSpecArgs

func AzureSqlFailoverGroupSpecPtr(v *AzureSqlFailoverGroupSpecArgs) AzureSqlFailoverGroupSpecPtrInput {
	return (*azureSqlFailoverGroupSpecPtrType)(v)
}

func (*azureSqlFailoverGroupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFailoverGroupSpec)(nil)).Elem()
}

func (i *azureSqlFailoverGroupSpecPtrType) ToAzureSqlFailoverGroupSpecPtrOutput() AzureSqlFailoverGroupSpecPtrOutput {
	return i.ToAzureSqlFailoverGroupSpecPtrOutputWithContext(context.Background())
}

func (i *azureSqlFailoverGroupSpecPtrType) ToAzureSqlFailoverGroupSpecPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupSpecPtrOutput)
}

// AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
type AzureSqlFailoverGroupSpecOutput struct{ *pulumi.OutputState }

func (AzureSqlFailoverGroupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupSpec)(nil)).Elem()
}

func (o AzureSqlFailoverGroupSpecOutput) ToAzureSqlFailoverGroupSpecOutput() AzureSqlFailoverGroupSpecOutput {
	return o
}

func (o AzureSqlFailoverGroupSpecOutput) ToAzureSqlFailoverGroupSpecOutputWithContext(ctx context.Context) AzureSqlFailoverGroupSpecOutput {
	return o
}

func (o AzureSqlFailoverGroupSpecOutput) ToAzureSqlFailoverGroupSpecPtrOutput() AzureSqlFailoverGroupSpecPtrOutput {
	return o.ToAzureSqlFailoverGroupSpecPtrOutputWithContext(context.Background())
}

func (o AzureSqlFailoverGroupSpecOutput) ToAzureSqlFailoverGroupSpecPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) *AzureSqlFailoverGroupSpec {
		return &v
	}).(AzureSqlFailoverGroupSpecPtrOutput)
}
func (o AzureSqlFailoverGroupSpecOutput) DatabaseList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) []string { return v.DatabaseList }).(pulumi.StringArrayOutput)
}

func (o AzureSqlFailoverGroupSpecOutput) FailoverGracePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) int { return v.FailoverGracePeriod }).(pulumi.IntOutput)
}

// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
func (o AzureSqlFailoverGroupSpecOutput) FailoverPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) string { return v.FailoverPolicy }).(pulumi.StringOutput)
}

func (o AzureSqlFailoverGroupSpecOutput) KeyVaultToStoreSecrets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) *string { return v.KeyVaultToStoreSecrets }).(pulumi.StringPtrOutput)
}

// Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlFailoverGroupSpecOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) string { return v.Location }).(pulumi.StringOutput)
}

func (o AzureSqlFailoverGroupSpecOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

func (o AzureSqlFailoverGroupSpecOutput) SecondaryServer() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) string { return v.SecondaryServer }).(pulumi.StringOutput)
}

func (o AzureSqlFailoverGroupSpecOutput) SecondaryServerResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) string { return v.SecondaryServerResourceGroup }).(pulumi.StringOutput)
}

func (o AzureSqlFailoverGroupSpecOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupSpec) string { return v.Server }).(pulumi.StringOutput)
}

type AzureSqlFailoverGroupSpecPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlFailoverGroupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFailoverGroupSpec)(nil)).Elem()
}

func (o AzureSqlFailoverGroupSpecPtrOutput) ToAzureSqlFailoverGroupSpecPtrOutput() AzureSqlFailoverGroupSpecPtrOutput {
	return o
}

func (o AzureSqlFailoverGroupSpecPtrOutput) ToAzureSqlFailoverGroupSpecPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupSpecPtrOutput {
	return o
}

func (o AzureSqlFailoverGroupSpecPtrOutput) Elem() AzureSqlFailoverGroupSpecOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) AzureSqlFailoverGroupSpec { return *v }).(AzureSqlFailoverGroupSpecOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) DatabaseList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) []string {
		if v == nil {
			return nil
		}
		return v.DatabaseList
	}).(pulumi.StringArrayOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) FailoverGracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *int {
		if v == nil {
			return nil
		}
		return &v.FailoverGracePeriod
	}).(pulumi.IntPtrOutput)
}

// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
func (o AzureSqlFailoverGroupSpecPtrOutput) FailoverPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.FailoverPolicy
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) KeyVaultToStoreSecrets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultToStoreSecrets
	}).(pulumi.StringPtrOutput)
}

// Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlFailoverGroupSpecPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryServer
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) SecondaryServerResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryServerResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupSpecPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlFailoverGroupStatus struct {
	Completed          *string `pulumi:"completed"`
	ContainsUpdate     *bool   `pulumi:"containsUpdate"`
	FailedProvisioning *bool   `pulumi:"failedProvisioning"`
	FlattenedSecrets   *bool   `pulumi:"flattenedSecrets"`
	Message            *string `pulumi:"message"`
	Output             *string `pulumi:"output"`
	PollingUrl         *string `pulumi:"pollingUrl"`
	Provisioned        *bool   `pulumi:"provisioned"`
	Provisioning       *bool   `pulumi:"provisioning"`
	Requested          *string `pulumi:"requested"`
	ResourceId         *string `pulumi:"resourceId"`
	SpecHash           *string `pulumi:"specHash"`
	State              *string `pulumi:"state"`
}

// AzureSqlFailoverGroupStatusInput is an input type that accepts AzureSqlFailoverGroupStatusArgs and AzureSqlFailoverGroupStatusOutput values.
// You can construct a concrete instance of `AzureSqlFailoverGroupStatusInput` via:
//
//          AzureSqlFailoverGroupStatusArgs{...}
type AzureSqlFailoverGroupStatusInput interface {
	pulumi.Input

	ToAzureSqlFailoverGroupStatusOutput() AzureSqlFailoverGroupStatusOutput
	ToAzureSqlFailoverGroupStatusOutputWithContext(context.Context) AzureSqlFailoverGroupStatusOutput
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlFailoverGroupStatusArgs struct {
	Completed          pulumi.StringPtrInput `pulumi:"completed"`
	ContainsUpdate     pulumi.BoolPtrInput   `pulumi:"containsUpdate"`
	FailedProvisioning pulumi.BoolPtrInput   `pulumi:"failedProvisioning"`
	FlattenedSecrets   pulumi.BoolPtrInput   `pulumi:"flattenedSecrets"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Output             pulumi.StringPtrInput `pulumi:"output"`
	PollingUrl         pulumi.StringPtrInput `pulumi:"pollingUrl"`
	Provisioned        pulumi.BoolPtrInput   `pulumi:"provisioned"`
	Provisioning       pulumi.BoolPtrInput   `pulumi:"provisioning"`
	Requested          pulumi.StringPtrInput `pulumi:"requested"`
	ResourceId         pulumi.StringPtrInput `pulumi:"resourceId"`
	SpecHash           pulumi.StringPtrInput `pulumi:"specHash"`
	State              pulumi.StringPtrInput `pulumi:"state"`
}

func (AzureSqlFailoverGroupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupStatus)(nil)).Elem()
}

func (i AzureSqlFailoverGroupStatusArgs) ToAzureSqlFailoverGroupStatusOutput() AzureSqlFailoverGroupStatusOutput {
	return i.ToAzureSqlFailoverGroupStatusOutputWithContext(context.Background())
}

func (i AzureSqlFailoverGroupStatusArgs) ToAzureSqlFailoverGroupStatusOutputWithContext(ctx context.Context) AzureSqlFailoverGroupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupStatusOutput)
}

func (i AzureSqlFailoverGroupStatusArgs) ToAzureSqlFailoverGroupStatusPtrOutput() AzureSqlFailoverGroupStatusPtrOutput {
	return i.ToAzureSqlFailoverGroupStatusPtrOutputWithContext(context.Background())
}

func (i AzureSqlFailoverGroupStatusArgs) ToAzureSqlFailoverGroupStatusPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupStatusOutput).ToAzureSqlFailoverGroupStatusPtrOutputWithContext(ctx)
}

// AzureSqlFailoverGroupStatusPtrInput is an input type that accepts AzureSqlFailoverGroupStatusArgs, AzureSqlFailoverGroupStatusPtr and AzureSqlFailoverGroupStatusPtrOutput values.
// You can construct a concrete instance of `AzureSqlFailoverGroupStatusPtrInput` via:
//
//          AzureSqlFailoverGroupStatusArgs{...}
//
//  or:
//
//          nil
type AzureSqlFailoverGroupStatusPtrInput interface {
	pulumi.Input

	ToAzureSqlFailoverGroupStatusPtrOutput() AzureSqlFailoverGroupStatusPtrOutput
	ToAzureSqlFailoverGroupStatusPtrOutputWithContext(context.Context) AzureSqlFailoverGroupStatusPtrOutput
}

type azureSqlFailoverGroupStatusPtrType AzureSqlFailoverGroupStatusArgs

func AzureSqlFailoverGroupStatusPtr(v *AzureSqlFailoverGroupStatusArgs) AzureSqlFailoverGroupStatusPtrInput {
	return (*azureSqlFailoverGroupStatusPtrType)(v)
}

func (*azureSqlFailoverGroupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFailoverGroupStatus)(nil)).Elem()
}

func (i *azureSqlFailoverGroupStatusPtrType) ToAzureSqlFailoverGroupStatusPtrOutput() AzureSqlFailoverGroupStatusPtrOutput {
	return i.ToAzureSqlFailoverGroupStatusPtrOutputWithContext(context.Background())
}

func (i *azureSqlFailoverGroupStatusPtrType) ToAzureSqlFailoverGroupStatusPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFailoverGroupStatusPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlFailoverGroupStatusOutput struct{ *pulumi.OutputState }

func (AzureSqlFailoverGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFailoverGroupStatus)(nil)).Elem()
}

func (o AzureSqlFailoverGroupStatusOutput) ToAzureSqlFailoverGroupStatusOutput() AzureSqlFailoverGroupStatusOutput {
	return o
}

func (o AzureSqlFailoverGroupStatusOutput) ToAzureSqlFailoverGroupStatusOutputWithContext(ctx context.Context) AzureSqlFailoverGroupStatusOutput {
	return o
}

func (o AzureSqlFailoverGroupStatusOutput) ToAzureSqlFailoverGroupStatusPtrOutput() AzureSqlFailoverGroupStatusPtrOutput {
	return o.ToAzureSqlFailoverGroupStatusPtrOutputWithContext(context.Background())
}

func (o AzureSqlFailoverGroupStatusOutput) ToAzureSqlFailoverGroupStatusPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *AzureSqlFailoverGroupStatus {
		return &v
	}).(AzureSqlFailoverGroupStatusPtrOutput)
}
func (o AzureSqlFailoverGroupStatusOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.Completed }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *bool { return v.ContainsUpdate }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *bool { return v.FailedProvisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *bool { return v.FlattenedSecrets }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.Output }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.PollingUrl }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *bool { return v.Provisioned }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *bool { return v.Provisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.Requested }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.SpecHash }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFailoverGroupStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AzureSqlFailoverGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlFailoverGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFailoverGroupStatus)(nil)).Elem()
}

func (o AzureSqlFailoverGroupStatusPtrOutput) ToAzureSqlFailoverGroupStatusPtrOutput() AzureSqlFailoverGroupStatusPtrOutput {
	return o
}

func (o AzureSqlFailoverGroupStatusPtrOutput) ToAzureSqlFailoverGroupStatusPtrOutputWithContext(ctx context.Context) AzureSqlFailoverGroupStatusPtrOutput {
	return o
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Elem() AzureSqlFailoverGroupStatusOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) AzureSqlFailoverGroupStatus { return *v }).(AzureSqlFailoverGroupStatusOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Completed
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ContainsUpdate
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FailedProvisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FlattenedSecrets
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Output
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.PollingUrl
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioned
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Requested
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.SpecHash
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFailoverGroupStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFailoverGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules API
type AzureSqlFirewallRuleType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
	Spec *AzureSqlFirewallRuleSpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AzureSqlFirewallRuleStatus `pulumi:"status"`
}

// AzureSqlFirewallRuleTypeInput is an input type that accepts AzureSqlFirewallRuleTypeArgs and AzureSqlFirewallRuleTypeOutput values.
// You can construct a concrete instance of `AzureSqlFirewallRuleTypeInput` via:
//
//          AzureSqlFirewallRuleTypeArgs{...}
type AzureSqlFirewallRuleTypeInput interface {
	pulumi.Input

	ToAzureSqlFirewallRuleTypeOutput() AzureSqlFirewallRuleTypeOutput
	ToAzureSqlFirewallRuleTypeOutputWithContext(context.Context) AzureSqlFirewallRuleTypeOutput
}

// AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules API
type AzureSqlFirewallRuleTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
	Spec AzureSqlFirewallRuleSpecPtrInput `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureSqlFirewallRuleStatusPtrInput `pulumi:"status"`
}

func (AzureSqlFirewallRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleType)(nil)).Elem()
}

func (i AzureSqlFirewallRuleTypeArgs) ToAzureSqlFirewallRuleTypeOutput() AzureSqlFirewallRuleTypeOutput {
	return i.ToAzureSqlFirewallRuleTypeOutputWithContext(context.Background())
}

func (i AzureSqlFirewallRuleTypeArgs) ToAzureSqlFirewallRuleTypeOutputWithContext(ctx context.Context) AzureSqlFirewallRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleTypeOutput)
}

// AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules API
type AzureSqlFirewallRuleTypeOutput struct{ *pulumi.OutputState }

func (AzureSqlFirewallRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleType)(nil)).Elem()
}

func (o AzureSqlFirewallRuleTypeOutput) ToAzureSqlFirewallRuleTypeOutput() AzureSqlFirewallRuleTypeOutput {
	return o
}

func (o AzureSqlFirewallRuleTypeOutput) ToAzureSqlFirewallRuleTypeOutputWithContext(ctx context.Context) AzureSqlFirewallRuleTypeOutput {
	return o
}

func (o AzureSqlFirewallRuleTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
func (o AzureSqlFirewallRuleTypeOutput) Spec() AzureSqlFirewallRuleSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleType) *AzureSqlFirewallRuleSpec { return v.Spec }).(AzureSqlFirewallRuleSpecPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
func (o AzureSqlFirewallRuleTypeOutput) Status() AzureSqlFirewallRuleStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleType) *AzureSqlFirewallRuleStatus { return v.Status }).(AzureSqlFirewallRuleStatusPtrOutput)
}

type AzureSqlFirewallRuleMetadata struct {
}

// AzureSqlFirewallRuleMetadataInput is an input type that accepts AzureSqlFirewallRuleMetadataArgs and AzureSqlFirewallRuleMetadataOutput values.
// You can construct a concrete instance of `AzureSqlFirewallRuleMetadataInput` via:
//
//          AzureSqlFirewallRuleMetadataArgs{...}
type AzureSqlFirewallRuleMetadataInput interface {
	pulumi.Input

	ToAzureSqlFirewallRuleMetadataOutput() AzureSqlFirewallRuleMetadataOutput
	ToAzureSqlFirewallRuleMetadataOutputWithContext(context.Context) AzureSqlFirewallRuleMetadataOutput
}

type AzureSqlFirewallRuleMetadataArgs struct {
}

func (AzureSqlFirewallRuleMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleMetadata)(nil)).Elem()
}

func (i AzureSqlFirewallRuleMetadataArgs) ToAzureSqlFirewallRuleMetadataOutput() AzureSqlFirewallRuleMetadataOutput {
	return i.ToAzureSqlFirewallRuleMetadataOutputWithContext(context.Background())
}

func (i AzureSqlFirewallRuleMetadataArgs) ToAzureSqlFirewallRuleMetadataOutputWithContext(ctx context.Context) AzureSqlFirewallRuleMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleMetadataOutput)
}

type AzureSqlFirewallRuleMetadataOutput struct{ *pulumi.OutputState }

func (AzureSqlFirewallRuleMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleMetadata)(nil)).Elem()
}

func (o AzureSqlFirewallRuleMetadataOutput) ToAzureSqlFirewallRuleMetadataOutput() AzureSqlFirewallRuleMetadataOutput {
	return o
}

func (o AzureSqlFirewallRuleMetadataOutput) ToAzureSqlFirewallRuleMetadataOutputWithContext(ctx context.Context) AzureSqlFirewallRuleMetadataOutput {
	return o
}

// AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
type AzureSqlFirewallRuleSpec struct {
	EndIpAddress *string `pulumi:"endIpAddress"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
	ResourceGroup  string  `pulumi:"resourceGroup"`
	Server         string  `pulumi:"server"`
	StartIpAddress *string `pulumi:"startIpAddress"`
}

// AzureSqlFirewallRuleSpecInput is an input type that accepts AzureSqlFirewallRuleSpecArgs and AzureSqlFirewallRuleSpecOutput values.
// You can construct a concrete instance of `AzureSqlFirewallRuleSpecInput` via:
//
//          AzureSqlFirewallRuleSpecArgs{...}
type AzureSqlFirewallRuleSpecInput interface {
	pulumi.Input

	ToAzureSqlFirewallRuleSpecOutput() AzureSqlFirewallRuleSpecOutput
	ToAzureSqlFirewallRuleSpecOutputWithContext(context.Context) AzureSqlFirewallRuleSpecOutput
}

// AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
type AzureSqlFirewallRuleSpecArgs struct {
	EndIpAddress pulumi.StringPtrInput `pulumi:"endIpAddress"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
	ResourceGroup  pulumi.StringInput    `pulumi:"resourceGroup"`
	Server         pulumi.StringInput    `pulumi:"server"`
	StartIpAddress pulumi.StringPtrInput `pulumi:"startIpAddress"`
}

func (AzureSqlFirewallRuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleSpec)(nil)).Elem()
}

func (i AzureSqlFirewallRuleSpecArgs) ToAzureSqlFirewallRuleSpecOutput() AzureSqlFirewallRuleSpecOutput {
	return i.ToAzureSqlFirewallRuleSpecOutputWithContext(context.Background())
}

func (i AzureSqlFirewallRuleSpecArgs) ToAzureSqlFirewallRuleSpecOutputWithContext(ctx context.Context) AzureSqlFirewallRuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleSpecOutput)
}

func (i AzureSqlFirewallRuleSpecArgs) ToAzureSqlFirewallRuleSpecPtrOutput() AzureSqlFirewallRuleSpecPtrOutput {
	return i.ToAzureSqlFirewallRuleSpecPtrOutputWithContext(context.Background())
}

func (i AzureSqlFirewallRuleSpecArgs) ToAzureSqlFirewallRuleSpecPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleSpecOutput).ToAzureSqlFirewallRuleSpecPtrOutputWithContext(ctx)
}

// AzureSqlFirewallRuleSpecPtrInput is an input type that accepts AzureSqlFirewallRuleSpecArgs, AzureSqlFirewallRuleSpecPtr and AzureSqlFirewallRuleSpecPtrOutput values.
// You can construct a concrete instance of `AzureSqlFirewallRuleSpecPtrInput` via:
//
//          AzureSqlFirewallRuleSpecArgs{...}
//
//  or:
//
//          nil
type AzureSqlFirewallRuleSpecPtrInput interface {
	pulumi.Input

	ToAzureSqlFirewallRuleSpecPtrOutput() AzureSqlFirewallRuleSpecPtrOutput
	ToAzureSqlFirewallRuleSpecPtrOutputWithContext(context.Context) AzureSqlFirewallRuleSpecPtrOutput
}

type azureSqlFirewallRuleSpecPtrType AzureSqlFirewallRuleSpecArgs

func AzureSqlFirewallRuleSpecPtr(v *AzureSqlFirewallRuleSpecArgs) AzureSqlFirewallRuleSpecPtrInput {
	return (*azureSqlFirewallRuleSpecPtrType)(v)
}

func (*azureSqlFirewallRuleSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFirewallRuleSpec)(nil)).Elem()
}

func (i *azureSqlFirewallRuleSpecPtrType) ToAzureSqlFirewallRuleSpecPtrOutput() AzureSqlFirewallRuleSpecPtrOutput {
	return i.ToAzureSqlFirewallRuleSpecPtrOutputWithContext(context.Background())
}

func (i *azureSqlFirewallRuleSpecPtrType) ToAzureSqlFirewallRuleSpecPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleSpecPtrOutput)
}

// AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
type AzureSqlFirewallRuleSpecOutput struct{ *pulumi.OutputState }

func (AzureSqlFirewallRuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleSpec)(nil)).Elem()
}

func (o AzureSqlFirewallRuleSpecOutput) ToAzureSqlFirewallRuleSpecOutput() AzureSqlFirewallRuleSpecOutput {
	return o
}

func (o AzureSqlFirewallRuleSpecOutput) ToAzureSqlFirewallRuleSpecOutputWithContext(ctx context.Context) AzureSqlFirewallRuleSpecOutput {
	return o
}

func (o AzureSqlFirewallRuleSpecOutput) ToAzureSqlFirewallRuleSpecPtrOutput() AzureSqlFirewallRuleSpecPtrOutput {
	return o.ToAzureSqlFirewallRuleSpecPtrOutputWithContext(context.Background())
}

func (o AzureSqlFirewallRuleSpecOutput) ToAzureSqlFirewallRuleSpecPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleSpec) *AzureSqlFirewallRuleSpec {
		return &v
	}).(AzureSqlFirewallRuleSpecPtrOutput)
}
func (o AzureSqlFirewallRuleSpecOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleSpec) *string { return v.EndIpAddress }).(pulumi.StringPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlFirewallRuleSpecOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleSpec) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

func (o AzureSqlFirewallRuleSpecOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleSpec) string { return v.Server }).(pulumi.StringOutput)
}

func (o AzureSqlFirewallRuleSpecOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleSpec) *string { return v.StartIpAddress }).(pulumi.StringPtrOutput)
}

type AzureSqlFirewallRuleSpecPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlFirewallRuleSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFirewallRuleSpec)(nil)).Elem()
}

func (o AzureSqlFirewallRuleSpecPtrOutput) ToAzureSqlFirewallRuleSpecPtrOutput() AzureSqlFirewallRuleSpecPtrOutput {
	return o
}

func (o AzureSqlFirewallRuleSpecPtrOutput) ToAzureSqlFirewallRuleSpecPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleSpecPtrOutput {
	return o
}

func (o AzureSqlFirewallRuleSpecPtrOutput) Elem() AzureSqlFirewallRuleSpecOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleSpec) AzureSqlFirewallRuleSpec { return *v }).(AzureSqlFirewallRuleSpecOutput)
}

func (o AzureSqlFirewallRuleSpecPtrOutput) EndIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleSpec) *string {
		if v == nil {
			return nil
		}
		return v.EndIpAddress
	}).(pulumi.StringPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlFirewallRuleSpecPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleSpecPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleSpecPtrOutput) StartIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleSpec) *string {
		if v == nil {
			return nil
		}
		return v.StartIpAddress
	}).(pulumi.StringPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlFirewallRuleStatus struct {
	Completed          *string `pulumi:"completed"`
	ContainsUpdate     *bool   `pulumi:"containsUpdate"`
	FailedProvisioning *bool   `pulumi:"failedProvisioning"`
	FlattenedSecrets   *bool   `pulumi:"flattenedSecrets"`
	Message            *string `pulumi:"message"`
	Output             *string `pulumi:"output"`
	PollingUrl         *string `pulumi:"pollingUrl"`
	Provisioned        *bool   `pulumi:"provisioned"`
	Provisioning       *bool   `pulumi:"provisioning"`
	Requested          *string `pulumi:"requested"`
	ResourceId         *string `pulumi:"resourceId"`
	SpecHash           *string `pulumi:"specHash"`
	State              *string `pulumi:"state"`
}

// AzureSqlFirewallRuleStatusInput is an input type that accepts AzureSqlFirewallRuleStatusArgs and AzureSqlFirewallRuleStatusOutput values.
// You can construct a concrete instance of `AzureSqlFirewallRuleStatusInput` via:
//
//          AzureSqlFirewallRuleStatusArgs{...}
type AzureSqlFirewallRuleStatusInput interface {
	pulumi.Input

	ToAzureSqlFirewallRuleStatusOutput() AzureSqlFirewallRuleStatusOutput
	ToAzureSqlFirewallRuleStatusOutputWithContext(context.Context) AzureSqlFirewallRuleStatusOutput
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlFirewallRuleStatusArgs struct {
	Completed          pulumi.StringPtrInput `pulumi:"completed"`
	ContainsUpdate     pulumi.BoolPtrInput   `pulumi:"containsUpdate"`
	FailedProvisioning pulumi.BoolPtrInput   `pulumi:"failedProvisioning"`
	FlattenedSecrets   pulumi.BoolPtrInput   `pulumi:"flattenedSecrets"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Output             pulumi.StringPtrInput `pulumi:"output"`
	PollingUrl         pulumi.StringPtrInput `pulumi:"pollingUrl"`
	Provisioned        pulumi.BoolPtrInput   `pulumi:"provisioned"`
	Provisioning       pulumi.BoolPtrInput   `pulumi:"provisioning"`
	Requested          pulumi.StringPtrInput `pulumi:"requested"`
	ResourceId         pulumi.StringPtrInput `pulumi:"resourceId"`
	SpecHash           pulumi.StringPtrInput `pulumi:"specHash"`
	State              pulumi.StringPtrInput `pulumi:"state"`
}

func (AzureSqlFirewallRuleStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleStatus)(nil)).Elem()
}

func (i AzureSqlFirewallRuleStatusArgs) ToAzureSqlFirewallRuleStatusOutput() AzureSqlFirewallRuleStatusOutput {
	return i.ToAzureSqlFirewallRuleStatusOutputWithContext(context.Background())
}

func (i AzureSqlFirewallRuleStatusArgs) ToAzureSqlFirewallRuleStatusOutputWithContext(ctx context.Context) AzureSqlFirewallRuleStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleStatusOutput)
}

func (i AzureSqlFirewallRuleStatusArgs) ToAzureSqlFirewallRuleStatusPtrOutput() AzureSqlFirewallRuleStatusPtrOutput {
	return i.ToAzureSqlFirewallRuleStatusPtrOutputWithContext(context.Background())
}

func (i AzureSqlFirewallRuleStatusArgs) ToAzureSqlFirewallRuleStatusPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleStatusOutput).ToAzureSqlFirewallRuleStatusPtrOutputWithContext(ctx)
}

// AzureSqlFirewallRuleStatusPtrInput is an input type that accepts AzureSqlFirewallRuleStatusArgs, AzureSqlFirewallRuleStatusPtr and AzureSqlFirewallRuleStatusPtrOutput values.
// You can construct a concrete instance of `AzureSqlFirewallRuleStatusPtrInput` via:
//
//          AzureSqlFirewallRuleStatusArgs{...}
//
//  or:
//
//          nil
type AzureSqlFirewallRuleStatusPtrInput interface {
	pulumi.Input

	ToAzureSqlFirewallRuleStatusPtrOutput() AzureSqlFirewallRuleStatusPtrOutput
	ToAzureSqlFirewallRuleStatusPtrOutputWithContext(context.Context) AzureSqlFirewallRuleStatusPtrOutput
}

type azureSqlFirewallRuleStatusPtrType AzureSqlFirewallRuleStatusArgs

func AzureSqlFirewallRuleStatusPtr(v *AzureSqlFirewallRuleStatusArgs) AzureSqlFirewallRuleStatusPtrInput {
	return (*azureSqlFirewallRuleStatusPtrType)(v)
}

func (*azureSqlFirewallRuleStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFirewallRuleStatus)(nil)).Elem()
}

func (i *azureSqlFirewallRuleStatusPtrType) ToAzureSqlFirewallRuleStatusPtrOutput() AzureSqlFirewallRuleStatusPtrOutput {
	return i.ToAzureSqlFirewallRuleStatusPtrOutputWithContext(context.Background())
}

func (i *azureSqlFirewallRuleStatusPtrType) ToAzureSqlFirewallRuleStatusPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlFirewallRuleStatusPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlFirewallRuleStatusOutput struct{ *pulumi.OutputState }

func (AzureSqlFirewallRuleStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlFirewallRuleStatus)(nil)).Elem()
}

func (o AzureSqlFirewallRuleStatusOutput) ToAzureSqlFirewallRuleStatusOutput() AzureSqlFirewallRuleStatusOutput {
	return o
}

func (o AzureSqlFirewallRuleStatusOutput) ToAzureSqlFirewallRuleStatusOutputWithContext(ctx context.Context) AzureSqlFirewallRuleStatusOutput {
	return o
}

func (o AzureSqlFirewallRuleStatusOutput) ToAzureSqlFirewallRuleStatusPtrOutput() AzureSqlFirewallRuleStatusPtrOutput {
	return o.ToAzureSqlFirewallRuleStatusPtrOutputWithContext(context.Background())
}

func (o AzureSqlFirewallRuleStatusOutput) ToAzureSqlFirewallRuleStatusPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *AzureSqlFirewallRuleStatus {
		return &v
	}).(AzureSqlFirewallRuleStatusPtrOutput)
}
func (o AzureSqlFirewallRuleStatusOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.Completed }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *bool { return v.ContainsUpdate }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *bool { return v.FailedProvisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *bool { return v.FlattenedSecrets }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.Output }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.PollingUrl }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *bool { return v.Provisioned }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *bool { return v.Provisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.Requested }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.SpecHash }).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlFirewallRuleStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AzureSqlFirewallRuleStatusPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlFirewallRuleStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlFirewallRuleStatus)(nil)).Elem()
}

func (o AzureSqlFirewallRuleStatusPtrOutput) ToAzureSqlFirewallRuleStatusPtrOutput() AzureSqlFirewallRuleStatusPtrOutput {
	return o
}

func (o AzureSqlFirewallRuleStatusPtrOutput) ToAzureSqlFirewallRuleStatusPtrOutputWithContext(ctx context.Context) AzureSqlFirewallRuleStatusPtrOutput {
	return o
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Elem() AzureSqlFirewallRuleStatusOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) AzureSqlFirewallRuleStatus { return *v }).(AzureSqlFirewallRuleStatusOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.Completed
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ContainsUpdate
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FailedProvisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FlattenedSecrets
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.Output
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.PollingUrl
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioned
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.Requested
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.SpecHash
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlFirewallRuleStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlFirewallRuleStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// AzureSqlServer is the Schema for the azuresqlservers API
type AzureSqlServerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureSqlServerSpec defines the desired state of AzureSqlServer
	Spec *AzureSqlServerSpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AzureSqlServerStatus `pulumi:"status"`
}

// AzureSqlServerTypeInput is an input type that accepts AzureSqlServerTypeArgs and AzureSqlServerTypeOutput values.
// You can construct a concrete instance of `AzureSqlServerTypeInput` via:
//
//          AzureSqlServerTypeArgs{...}
type AzureSqlServerTypeInput interface {
	pulumi.Input

	ToAzureSqlServerTypeOutput() AzureSqlServerTypeOutput
	ToAzureSqlServerTypeOutputWithContext(context.Context) AzureSqlServerTypeOutput
}

// AzureSqlServer is the Schema for the azuresqlservers API
type AzureSqlServerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AzureSqlServerSpec defines the desired state of AzureSqlServer
	Spec AzureSqlServerSpecPtrInput `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureSqlServerStatusPtrInput `pulumi:"status"`
}

func (AzureSqlServerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerType)(nil)).Elem()
}

func (i AzureSqlServerTypeArgs) ToAzureSqlServerTypeOutput() AzureSqlServerTypeOutput {
	return i.ToAzureSqlServerTypeOutputWithContext(context.Background())
}

func (i AzureSqlServerTypeArgs) ToAzureSqlServerTypeOutputWithContext(ctx context.Context) AzureSqlServerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerTypeOutput)
}

// AzureSqlServer is the Schema for the azuresqlservers API
type AzureSqlServerTypeOutput struct{ *pulumi.OutputState }

func (AzureSqlServerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerType)(nil)).Elem()
}

func (o AzureSqlServerTypeOutput) ToAzureSqlServerTypeOutput() AzureSqlServerTypeOutput {
	return o
}

func (o AzureSqlServerTypeOutput) ToAzureSqlServerTypeOutputWithContext(ctx context.Context) AzureSqlServerTypeOutput {
	return o
}

func (o AzureSqlServerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AzureSqlServerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AzureSqlServerSpec defines the desired state of AzureSqlServer
func (o AzureSqlServerTypeOutput) Spec() AzureSqlServerSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlServerType) *AzureSqlServerSpec { return v.Spec }).(AzureSqlServerSpecPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
func (o AzureSqlServerTypeOutput) Status() AzureSqlServerStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlServerType) *AzureSqlServerStatus { return v.Status }).(AzureSqlServerStatusPtrOutput)
}

type AzureSqlServerMetadata struct {
}

// AzureSqlServerMetadataInput is an input type that accepts AzureSqlServerMetadataArgs and AzureSqlServerMetadataOutput values.
// You can construct a concrete instance of `AzureSqlServerMetadataInput` via:
//
//          AzureSqlServerMetadataArgs{...}
type AzureSqlServerMetadataInput interface {
	pulumi.Input

	ToAzureSqlServerMetadataOutput() AzureSqlServerMetadataOutput
	ToAzureSqlServerMetadataOutputWithContext(context.Context) AzureSqlServerMetadataOutput
}

type AzureSqlServerMetadataArgs struct {
}

func (AzureSqlServerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerMetadata)(nil)).Elem()
}

func (i AzureSqlServerMetadataArgs) ToAzureSqlServerMetadataOutput() AzureSqlServerMetadataOutput {
	return i.ToAzureSqlServerMetadataOutputWithContext(context.Background())
}

func (i AzureSqlServerMetadataArgs) ToAzureSqlServerMetadataOutputWithContext(ctx context.Context) AzureSqlServerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerMetadataOutput)
}

type AzureSqlServerMetadataOutput struct{ *pulumi.OutputState }

func (AzureSqlServerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerMetadata)(nil)).Elem()
}

func (o AzureSqlServerMetadataOutput) ToAzureSqlServerMetadataOutput() AzureSqlServerMetadataOutput {
	return o
}

func (o AzureSqlServerMetadataOutput) ToAzureSqlServerMetadataOutputWithContext(ctx context.Context) AzureSqlServerMetadataOutput {
	return o
}

// AzureSqlServerSpec defines the desired state of AzureSqlServer
type AzureSqlServerSpec struct {
	KeyVaultToStoreSecrets *string `pulumi:"keyVaultToStoreSecrets"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
	Location      string `pulumi:"location"`
	ResourceGroup string `pulumi:"resourceGroup"`
}

// AzureSqlServerSpecInput is an input type that accepts AzureSqlServerSpecArgs and AzureSqlServerSpecOutput values.
// You can construct a concrete instance of `AzureSqlServerSpecInput` via:
//
//          AzureSqlServerSpecArgs{...}
type AzureSqlServerSpecInput interface {
	pulumi.Input

	ToAzureSqlServerSpecOutput() AzureSqlServerSpecOutput
	ToAzureSqlServerSpecOutputWithContext(context.Context) AzureSqlServerSpecOutput
}

// AzureSqlServerSpec defines the desired state of AzureSqlServer
type AzureSqlServerSpecArgs struct {
	KeyVaultToStoreSecrets pulumi.StringPtrInput `pulumi:"keyVaultToStoreSecrets"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
	Location      pulumi.StringInput `pulumi:"location"`
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
}

func (AzureSqlServerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerSpec)(nil)).Elem()
}

func (i AzureSqlServerSpecArgs) ToAzureSqlServerSpecOutput() AzureSqlServerSpecOutput {
	return i.ToAzureSqlServerSpecOutputWithContext(context.Background())
}

func (i AzureSqlServerSpecArgs) ToAzureSqlServerSpecOutputWithContext(ctx context.Context) AzureSqlServerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerSpecOutput)
}

func (i AzureSqlServerSpecArgs) ToAzureSqlServerSpecPtrOutput() AzureSqlServerSpecPtrOutput {
	return i.ToAzureSqlServerSpecPtrOutputWithContext(context.Background())
}

func (i AzureSqlServerSpecArgs) ToAzureSqlServerSpecPtrOutputWithContext(ctx context.Context) AzureSqlServerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerSpecOutput).ToAzureSqlServerSpecPtrOutputWithContext(ctx)
}

// AzureSqlServerSpecPtrInput is an input type that accepts AzureSqlServerSpecArgs, AzureSqlServerSpecPtr and AzureSqlServerSpecPtrOutput values.
// You can construct a concrete instance of `AzureSqlServerSpecPtrInput` via:
//
//          AzureSqlServerSpecArgs{...}
//
//  or:
//
//          nil
type AzureSqlServerSpecPtrInput interface {
	pulumi.Input

	ToAzureSqlServerSpecPtrOutput() AzureSqlServerSpecPtrOutput
	ToAzureSqlServerSpecPtrOutputWithContext(context.Context) AzureSqlServerSpecPtrOutput
}

type azureSqlServerSpecPtrType AzureSqlServerSpecArgs

func AzureSqlServerSpecPtr(v *AzureSqlServerSpecArgs) AzureSqlServerSpecPtrInput {
	return (*azureSqlServerSpecPtrType)(v)
}

func (*azureSqlServerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlServerSpec)(nil)).Elem()
}

func (i *azureSqlServerSpecPtrType) ToAzureSqlServerSpecPtrOutput() AzureSqlServerSpecPtrOutput {
	return i.ToAzureSqlServerSpecPtrOutputWithContext(context.Background())
}

func (i *azureSqlServerSpecPtrType) ToAzureSqlServerSpecPtrOutputWithContext(ctx context.Context) AzureSqlServerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerSpecPtrOutput)
}

// AzureSqlServerSpec defines the desired state of AzureSqlServer
type AzureSqlServerSpecOutput struct{ *pulumi.OutputState }

func (AzureSqlServerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerSpec)(nil)).Elem()
}

func (o AzureSqlServerSpecOutput) ToAzureSqlServerSpecOutput() AzureSqlServerSpecOutput {
	return o
}

func (o AzureSqlServerSpecOutput) ToAzureSqlServerSpecOutputWithContext(ctx context.Context) AzureSqlServerSpecOutput {
	return o
}

func (o AzureSqlServerSpecOutput) ToAzureSqlServerSpecPtrOutput() AzureSqlServerSpecPtrOutput {
	return o.ToAzureSqlServerSpecPtrOutputWithContext(context.Background())
}

func (o AzureSqlServerSpecOutput) ToAzureSqlServerSpecPtrOutputWithContext(ctx context.Context) AzureSqlServerSpecPtrOutput {
	return o.ApplyT(func(v AzureSqlServerSpec) *AzureSqlServerSpec {
		return &v
	}).(AzureSqlServerSpecPtrOutput)
}
func (o AzureSqlServerSpecOutput) KeyVaultToStoreSecrets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerSpec) *string { return v.KeyVaultToStoreSecrets }).(pulumi.StringPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlServerSpecOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlServerSpec) string { return v.Location }).(pulumi.StringOutput)
}

func (o AzureSqlServerSpecOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlServerSpec) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

type AzureSqlServerSpecPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlServerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlServerSpec)(nil)).Elem()
}

func (o AzureSqlServerSpecPtrOutput) ToAzureSqlServerSpecPtrOutput() AzureSqlServerSpecPtrOutput {
	return o
}

func (o AzureSqlServerSpecPtrOutput) ToAzureSqlServerSpecPtrOutputWithContext(ctx context.Context) AzureSqlServerSpecPtrOutput {
	return o
}

func (o AzureSqlServerSpecPtrOutput) Elem() AzureSqlServerSpecOutput {
	return o.ApplyT(func(v *AzureSqlServerSpec) AzureSqlServerSpec { return *v }).(AzureSqlServerSpecOutput)
}

func (o AzureSqlServerSpecPtrOutput) KeyVaultToStoreSecrets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultToStoreSecrets
	}).(pulumi.StringPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
func (o AzureSqlServerSpecPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerSpecPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlServerStatus struct {
	Completed          *string `pulumi:"completed"`
	ContainsUpdate     *bool   `pulumi:"containsUpdate"`
	FailedProvisioning *bool   `pulumi:"failedProvisioning"`
	FlattenedSecrets   *bool   `pulumi:"flattenedSecrets"`
	Message            *string `pulumi:"message"`
	Output             *string `pulumi:"output"`
	PollingUrl         *string `pulumi:"pollingUrl"`
	Provisioned        *bool   `pulumi:"provisioned"`
	Provisioning       *bool   `pulumi:"provisioning"`
	Requested          *string `pulumi:"requested"`
	ResourceId         *string `pulumi:"resourceId"`
	SpecHash           *string `pulumi:"specHash"`
	State              *string `pulumi:"state"`
}

// AzureSqlServerStatusInput is an input type that accepts AzureSqlServerStatusArgs and AzureSqlServerStatusOutput values.
// You can construct a concrete instance of `AzureSqlServerStatusInput` via:
//
//          AzureSqlServerStatusArgs{...}
type AzureSqlServerStatusInput interface {
	pulumi.Input

	ToAzureSqlServerStatusOutput() AzureSqlServerStatusOutput
	ToAzureSqlServerStatusOutputWithContext(context.Context) AzureSqlServerStatusOutput
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlServerStatusArgs struct {
	Completed          pulumi.StringPtrInput `pulumi:"completed"`
	ContainsUpdate     pulumi.BoolPtrInput   `pulumi:"containsUpdate"`
	FailedProvisioning pulumi.BoolPtrInput   `pulumi:"failedProvisioning"`
	FlattenedSecrets   pulumi.BoolPtrInput   `pulumi:"flattenedSecrets"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Output             pulumi.StringPtrInput `pulumi:"output"`
	PollingUrl         pulumi.StringPtrInput `pulumi:"pollingUrl"`
	Provisioned        pulumi.BoolPtrInput   `pulumi:"provisioned"`
	Provisioning       pulumi.BoolPtrInput   `pulumi:"provisioning"`
	Requested          pulumi.StringPtrInput `pulumi:"requested"`
	ResourceId         pulumi.StringPtrInput `pulumi:"resourceId"`
	SpecHash           pulumi.StringPtrInput `pulumi:"specHash"`
	State              pulumi.StringPtrInput `pulumi:"state"`
}

func (AzureSqlServerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerStatus)(nil)).Elem()
}

func (i AzureSqlServerStatusArgs) ToAzureSqlServerStatusOutput() AzureSqlServerStatusOutput {
	return i.ToAzureSqlServerStatusOutputWithContext(context.Background())
}

func (i AzureSqlServerStatusArgs) ToAzureSqlServerStatusOutputWithContext(ctx context.Context) AzureSqlServerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerStatusOutput)
}

func (i AzureSqlServerStatusArgs) ToAzureSqlServerStatusPtrOutput() AzureSqlServerStatusPtrOutput {
	return i.ToAzureSqlServerStatusPtrOutputWithContext(context.Background())
}

func (i AzureSqlServerStatusArgs) ToAzureSqlServerStatusPtrOutputWithContext(ctx context.Context) AzureSqlServerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerStatusOutput).ToAzureSqlServerStatusPtrOutputWithContext(ctx)
}

// AzureSqlServerStatusPtrInput is an input type that accepts AzureSqlServerStatusArgs, AzureSqlServerStatusPtr and AzureSqlServerStatusPtrOutput values.
// You can construct a concrete instance of `AzureSqlServerStatusPtrInput` via:
//
//          AzureSqlServerStatusArgs{...}
//
//  or:
//
//          nil
type AzureSqlServerStatusPtrInput interface {
	pulumi.Input

	ToAzureSqlServerStatusPtrOutput() AzureSqlServerStatusPtrOutput
	ToAzureSqlServerStatusPtrOutputWithContext(context.Context) AzureSqlServerStatusPtrOutput
}

type azureSqlServerStatusPtrType AzureSqlServerStatusArgs

func AzureSqlServerStatusPtr(v *AzureSqlServerStatusArgs) AzureSqlServerStatusPtrInput {
	return (*azureSqlServerStatusPtrType)(v)
}

func (*azureSqlServerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlServerStatus)(nil)).Elem()
}

func (i *azureSqlServerStatusPtrType) ToAzureSqlServerStatusPtrOutput() AzureSqlServerStatusPtrOutput {
	return i.ToAzureSqlServerStatusPtrOutputWithContext(context.Background())
}

func (i *azureSqlServerStatusPtrType) ToAzureSqlServerStatusPtrOutputWithContext(ctx context.Context) AzureSqlServerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlServerStatusPtrOutput)
}

// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
type AzureSqlServerStatusOutput struct{ *pulumi.OutputState }

func (AzureSqlServerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlServerStatus)(nil)).Elem()
}

func (o AzureSqlServerStatusOutput) ToAzureSqlServerStatusOutput() AzureSqlServerStatusOutput {
	return o
}

func (o AzureSqlServerStatusOutput) ToAzureSqlServerStatusOutputWithContext(ctx context.Context) AzureSqlServerStatusOutput {
	return o
}

func (o AzureSqlServerStatusOutput) ToAzureSqlServerStatusPtrOutput() AzureSqlServerStatusPtrOutput {
	return o.ToAzureSqlServerStatusPtrOutputWithContext(context.Background())
}

func (o AzureSqlServerStatusOutput) ToAzureSqlServerStatusPtrOutputWithContext(ctx context.Context) AzureSqlServerStatusPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *AzureSqlServerStatus {
		return &v
	}).(AzureSqlServerStatusPtrOutput)
}
func (o AzureSqlServerStatusOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.Completed }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *bool { return v.ContainsUpdate }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *bool { return v.FailedProvisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *bool { return v.FlattenedSecrets }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.Output }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.PollingUrl }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *bool { return v.Provisioned }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *bool { return v.Provisioning }).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.Requested }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.SpecHash }).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlServerStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AzureSqlServerStatusPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlServerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlServerStatus)(nil)).Elem()
}

func (o AzureSqlServerStatusPtrOutput) ToAzureSqlServerStatusPtrOutput() AzureSqlServerStatusPtrOutput {
	return o
}

func (o AzureSqlServerStatusPtrOutput) ToAzureSqlServerStatusPtrOutputWithContext(ctx context.Context) AzureSqlServerStatusPtrOutput {
	return o
}

func (o AzureSqlServerStatusPtrOutput) Elem() AzureSqlServerStatusOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) AzureSqlServerStatus { return *v }).(AzureSqlServerStatusOutput)
}

func (o AzureSqlServerStatusPtrOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.Completed
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) ContainsUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ContainsUpdate
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) FailedProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FailedProvisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) FlattenedSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *bool {
		if v == nil {
			return nil
		}
		return v.FlattenedSecrets
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) Output() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.Output
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) PollingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.PollingUrl
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) Provisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioned
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) Provisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Provisioning
	}).(pulumi.BoolPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) Requested() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.Requested
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) SpecHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.SpecHash
	}).(pulumi.StringPtrOutput)
}

func (o AzureSqlServerStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureSqlDatabaseTypeOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseMetadataOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSpecOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSpecPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSpecMaxSizeOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSpecMaxSizePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSpecSkuOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseSpecSkuPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseStatusOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseStatusPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlFailoverGroupTypeOutput{})
	pulumi.RegisterOutputType(AzureSqlFailoverGroupMetadataOutput{})
	pulumi.RegisterOutputType(AzureSqlFailoverGroupSpecOutput{})
	pulumi.RegisterOutputType(AzureSqlFailoverGroupSpecPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlFailoverGroupStatusOutput{})
	pulumi.RegisterOutputType(AzureSqlFailoverGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlFirewallRuleTypeOutput{})
	pulumi.RegisterOutputType(AzureSqlFirewallRuleMetadataOutput{})
	pulumi.RegisterOutputType(AzureSqlFirewallRuleSpecOutput{})
	pulumi.RegisterOutputType(AzureSqlFirewallRuleSpecPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlFirewallRuleStatusOutput{})
	pulumi.RegisterOutputType(AzureSqlFirewallRuleStatusPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlServerTypeOutput{})
	pulumi.RegisterOutputType(AzureSqlServerMetadataOutput{})
	pulumi.RegisterOutputType(AzureSqlServerSpecOutput{})
	pulumi.RegisterOutputType(AzureSqlServerSpecPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlServerStatusOutput{})
	pulumi.RegisterOutputType(AzureSqlServerStatusPtrOutput{})
}
