// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AppInsightsApiKey is the Schema for the appinsightsapikeys API
type AppInsightsApiKey struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// AppInsightsApiKeySpec defines the desired state of AppInsightsApiKey
	Spec AppInsightsApiKeySpecPtrOutput `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AppInsightsApiKeyStatusPtrOutput `pulumi:"status"`
}

// NewAppInsightsApiKey registers a new resource with the given unique name, arguments, and options.
func NewAppInsightsApiKey(ctx *pulumi.Context,
	name string, args *AppInsightsApiKeyArgs, opts ...pulumi.ResourceOption) (*AppInsightsApiKey, error) {
	if args == nil {
		args = &AppInsightsApiKeyArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("azure.microsoft.com/v1alpha1")
	args.Kind = pulumi.StringPtr("AppInsightsApiKey")
	var resource AppInsightsApiKey
	err := ctx.RegisterResource("kubernetes:azure.microsoft.com/v1alpha1:AppInsightsApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppInsightsApiKey gets an existing AppInsightsApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppInsightsApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppInsightsApiKeyState, opts ...pulumi.ResourceOption) (*AppInsightsApiKey, error) {
	var resource AppInsightsApiKey
	err := ctx.ReadResource("kubernetes:azure.microsoft.com/v1alpha1:AppInsightsApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppInsightsApiKey resources.
type appInsightsApiKeyState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AppInsightsApiKeySpec defines the desired state of AppInsightsApiKey
	Spec *AppInsightsApiKeySpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AppInsightsApiKeyStatus `pulumi:"status"`
}

type AppInsightsApiKeyState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AppInsightsApiKeySpec defines the desired state of AppInsightsApiKey
	Spec AppInsightsApiKeySpecPtrInput
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AppInsightsApiKeyStatusPtrInput
}

func (AppInsightsApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*appInsightsApiKeyState)(nil)).Elem()
}

type appInsightsApiKeyArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AppInsightsApiKeySpec defines the desired state of AppInsightsApiKey
	Spec *AppInsightsApiKeySpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AppInsightsApiKeyStatus `pulumi:"status"`
}

// The set of arguments for constructing a AppInsightsApiKey resource.
type AppInsightsApiKeyArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AppInsightsApiKeySpec defines the desired state of AppInsightsApiKey
	Spec AppInsightsApiKeySpecPtrInput
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AppInsightsApiKeyStatusPtrInput
}

func (AppInsightsApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appInsightsApiKeyArgs)(nil)).Elem()
}
