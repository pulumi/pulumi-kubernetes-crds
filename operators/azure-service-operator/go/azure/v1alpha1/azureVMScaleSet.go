// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AzureVMScaleSet is the Schema for the azurevmscalesets API
type AzureVMScaleSet struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
	Spec AzureVMScaleSetSpecPtrOutput `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureVMScaleSetStatusPtrOutput `pulumi:"status"`
}

// NewAzureVMScaleSet registers a new resource with the given unique name, arguments, and options.
func NewAzureVMScaleSet(ctx *pulumi.Context,
	name string, args *AzureVMScaleSetArgs, opts ...pulumi.ResourceOption) (*AzureVMScaleSet, error) {
	if args == nil {
		args = &AzureVMScaleSetArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("azure.microsoft.com/v1alpha1")
	args.Kind = pulumi.StringPtr("AzureVMScaleSet")
	var resource AzureVMScaleSet
	err := ctx.RegisterResource("kubernetes:azure.microsoft.com/v1alpha1:AzureVMScaleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureVMScaleSet gets an existing AzureVMScaleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureVMScaleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureVMScaleSetState, opts ...pulumi.ResourceOption) (*AzureVMScaleSet, error) {
	var resource AzureVMScaleSet
	err := ctx.ReadResource("kubernetes:azure.microsoft.com/v1alpha1:AzureVMScaleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureVMScaleSet resources.
type azureVMScaleSetState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
	Spec *AzureVMScaleSetSpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AzureVMScaleSetStatus `pulumi:"status"`
}

type AzureVMScaleSetState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
	Spec AzureVMScaleSetSpecPtrInput
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureVMScaleSetStatusPtrInput
}

func (AzureVMScaleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVMScaleSetState)(nil)).Elem()
}

type azureVMScaleSetArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
	Spec *AzureVMScaleSetSpec `pulumi:"spec"`
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status *AzureVMScaleSetStatus `pulumi:"status"`
}

// The set of arguments for constructing a AzureVMScaleSet resource.
type AzureVMScaleSetArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
	Spec AzureVMScaleSetSpecPtrInput
	// ASOStatus (AzureServiceOperatorsStatus) defines the observed state of resource actions
	Status AzureVMScaleSetStatusPtrInput
}

func (AzureVMScaleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureVMScaleSetArgs)(nil)).Elem()
}
