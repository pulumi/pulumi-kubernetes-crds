// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1
{

    [OutputType]
    public sealed class EventhubSpecProperties
    {
        /// <summary>
        /// CaptureDescription - Details specifying EventHub capture to persistent storage
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.EventhubSpecPropertiesCaptureDescription CaptureDescription;
        /// <summary>
        /// MessageRetentionInDays - Number of days to retain the events for this Event Hub, value should be 1 to 7 days
        /// </summary>
        public readonly int MessageRetentionInDays;
        /// <summary>
        /// PartitionCount - Number of partitions created for the Event Hub, allowed values are from 2 to 32 partitions.
        /// </summary>
        public readonly int PartitionCount;

        [OutputConstructor]
        private EventhubSpecProperties(
            Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.EventhubSpecPropertiesCaptureDescription captureDescription,

            int messageRetentionInDays,

            int partitionCount)
        {
            CaptureDescription = captureDescription;
            MessageRetentionInDays = messageRetentionInDays;
            PartitionCount = partitionCount;
        }
    }
}
