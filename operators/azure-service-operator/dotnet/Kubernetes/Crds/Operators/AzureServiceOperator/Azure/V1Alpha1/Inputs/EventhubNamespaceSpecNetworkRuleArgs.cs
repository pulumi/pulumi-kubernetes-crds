// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1
{

    /// <summary>
    /// EventhubNamespaceNetworkRule defines the namespace network rule
    /// </summary>
    public class EventhubNamespaceSpecNetworkRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// DefaultAction defined as a string
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        [Input("ipRules")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubNamespaceSpecNetworkRuleIpRulesArgs>? _ipRules;

        /// <summary>
        /// IPRules - List of IpRules
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubNamespaceSpecNetworkRuleIpRulesArgs> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubNamespaceSpecNetworkRuleIpRulesArgs>());
            set => _ipRules = value;
        }

        [Input("virtualNetworkRules")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubNamespaceSpecNetworkRuleVirtualNetworkRulesArgs>? _virtualNetworkRules;

        /// <summary>
        /// VirtualNetworkRules - List VirtualNetwork Rules
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubNamespaceSpecNetworkRuleVirtualNetworkRulesArgs> VirtualNetworkRules
        {
            get => _virtualNetworkRules ?? (_virtualNetworkRules = new InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubNamespaceSpecNetworkRuleVirtualNetworkRulesArgs>());
            set => _virtualNetworkRules = value;
        }

        public EventhubNamespaceSpecNetworkRuleArgs()
        {
        }
    }
}
