// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1
{

    [OutputType]
    public sealed class CosmosDBSpec
    {
        public readonly ImmutableArray<string> IpRules;
        public readonly string KeyVaultToStoreSecrets;
        /// <summary>
        /// CosmosDBKind enumerates the values for kind. Only one of the following kinds may be specified. If none of the following kinds is specified, the default one is GlobalDocumentDBKind.
        /// </summary>
        public readonly string Kind;
        public readonly string Location;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.CosmosDBSpecLocations> Locations;
        /// <summary>
        /// CosmosDBProperties the CosmosDBProperties of CosmosDB.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.CosmosDBSpecProperties Properties;
        public readonly string ResourceGroup;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.CosmosDBSpecVirtualNetworkRules> VirtualNetworkRules;

        [OutputConstructor]
        private CosmosDBSpec(
            ImmutableArray<string> ipRules,

            string keyVaultToStoreSecrets,

            string kind,

            string location,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.CosmosDBSpecLocations> locations,

            Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.CosmosDBSpecProperties properties,

            string resourceGroup,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.CosmosDBSpecVirtualNetworkRules> virtualNetworkRules)
        {
            IpRules = ipRules;
            KeyVaultToStoreSecrets = keyVaultToStoreSecrets;
            Kind = kind;
            Location = location;
            Locations = locations;
            Properties = properties;
            ResourceGroup = resourceGroup;
            VirtualNetworkRules = virtualNetworkRules;
        }
    }
}
