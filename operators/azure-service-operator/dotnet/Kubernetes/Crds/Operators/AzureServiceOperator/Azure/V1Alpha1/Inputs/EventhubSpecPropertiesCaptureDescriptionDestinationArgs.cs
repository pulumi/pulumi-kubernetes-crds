// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1
{

    /// <summary>
    /// Destination - Resource id of the storage account to be used to create the blobs
    /// </summary>
    public class EventhubSpecPropertiesCaptureDescriptionDestinationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ArchiveNameFormat - Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
        /// </summary>
        [Input("archiveNameFormat")]
        public Input<string>? ArchiveNameFormat { get; set; }

        /// <summary>
        /// BlobContainer - Blob container Name
        /// </summary>
        [Input("blobContainer")]
        public Input<string>? BlobContainer { get; set; }

        /// <summary>
        /// Name - Name for capture destination
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// StorageAccount - Details of the storage account
        /// </summary>
        [Input("storageAccount")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.EventhubSpecPropertiesCaptureDescriptionDestinationStorageAccountArgs>? StorageAccount { get; set; }

        public EventhubSpecPropertiesCaptureDescriptionDestinationArgs()
        {
        }
    }
}
