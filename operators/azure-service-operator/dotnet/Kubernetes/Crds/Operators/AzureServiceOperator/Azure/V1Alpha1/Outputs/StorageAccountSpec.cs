// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1
{

    [OutputType]
    public sealed class StorageAccountSpec
    {
        /// <summary>
        /// StorageAccountAccessTier enumerates the values for access tier. Only one of the following access tiers may be specified. If none of the following access tiers is specified, the default one is Hot.
        /// </summary>
        public readonly string AccessTier;
        public readonly bool DataLakeEnabled;
        /// <summary>
        /// StorageAccountKind enumerates the values for kind. Only one of the following kinds may be specified. If none of the following kinds is specified, the default one is StorageV2.
        /// </summary>
        public readonly string Kind;
        public readonly string Location;
        public readonly Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.StorageAccountSpecNetworkRule NetworkRule;
        public readonly string ResourceGroup;
        /// <summary>
        /// StorageAccountSku the SKU of the storage account.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.StorageAccountSpecSku Sku;
        public readonly bool SupportsHttpsTrafficOnly;

        [OutputConstructor]
        private StorageAccountSpec(
            string accessTier,

            bool dataLakeEnabled,

            string kind,

            string location,

            Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.StorageAccountSpecNetworkRule networkRule,

            string resourceGroup,

            Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.StorageAccountSpecSku sku,

            bool supportsHttpsTrafficOnly)
        {
            AccessTier = accessTier;
            DataLakeEnabled = dataLakeEnabled;
            Kind = kind;
            Location = location;
            NetworkRule = networkRule;
            ResourceGroup = resourceGroup;
            Sku = sku;
            SupportsHttpsTrafficOnly = supportsHttpsTrafficOnly;
        }
    }
}
