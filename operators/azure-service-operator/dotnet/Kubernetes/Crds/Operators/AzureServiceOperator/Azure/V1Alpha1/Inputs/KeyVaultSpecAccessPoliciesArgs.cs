// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1
{

    public class KeyVaultSpecAccessPoliciesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ApplicationID -  Application ID of the client making request on behalf of a principal
        /// </summary>
        [Input("applicationID")]
        public Input<string>? ApplicationID { get; set; }

        /// <summary>
        /// ClientID - The client ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The client ID must be unique for the list of access policies.
        /// </summary>
        [Input("clientID")]
        public Input<string>? ClientID { get; set; }

        /// <summary>
        /// ObjectID is the value to use if the access policy is for a user other than the user creating the Key Vault when the creating user does not have access to the Application API which is used to translate ClientID to Object ID To get around this, use az-cli or the Azure portal to source the ObjectID from your Service Principal
        /// </summary>
        [Input("objectID")]
        public Input<string>? ObjectID { get; set; }

        /// <summary>
        /// Permissions - Permissions the identity has for keys, secrets, and certificates.
        /// </summary>
        [Input("permissions")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.KeyVaultSpecAccessPoliciesPermissionsArgs>? Permissions { get; set; }

        /// <summary>
        /// TenantID - The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
        /// </summary>
        [Input("tenantID")]
        public Input<string>? TenantID { get; set; }

        public KeyVaultSpecAccessPoliciesArgs()
        {
        }
    }
}
