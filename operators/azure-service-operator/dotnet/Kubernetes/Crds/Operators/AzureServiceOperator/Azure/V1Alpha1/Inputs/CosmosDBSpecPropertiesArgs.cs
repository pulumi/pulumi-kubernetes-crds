// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1
{

    /// <summary>
    /// CosmosDBProperties the CosmosDBProperties of CosmosDB.
    /// </summary>
    public class CosmosDBSpecPropertiesArgs : Pulumi.ResourceArgs
    {
        [Input("capabilities")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.CosmosDBSpecPropertiesCapabilitiesArgs>? _capabilities;
        public InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.CosmosDBSpecPropertiesCapabilitiesArgs> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<Pulumi.Kubernetes.Types.Inputs.Azure.V1Alpha1.CosmosDBSpecPropertiesCapabilitiesArgs>());
            set => _capabilities = value;
        }

        /// <summary>
        /// DatabaseAccountOfferType - The offer type for the Cosmos DB database account.
        /// </summary>
        [Input("databaseAccountOfferType")]
        public Input<string>? DatabaseAccountOfferType { get; set; }

        [Input("enableMultipleWriteLocations")]
        public Input<bool>? EnableMultipleWriteLocations { get; set; }

        /// <summary>
        /// IsVirtualNetworkFilterEnabled - Flag to indicate whether to enable/disable Virtual Network ACL rules.
        /// </summary>
        [Input("isVirtualNetworkFilterEnabled")]
        public Input<bool>? IsVirtualNetworkFilterEnabled { get; set; }

        [Input("mongoDBVersion")]
        public Input<string>? MongoDBVersion { get; set; }

        public CosmosDBSpecPropertiesArgs()
        {
        }
    }
}
