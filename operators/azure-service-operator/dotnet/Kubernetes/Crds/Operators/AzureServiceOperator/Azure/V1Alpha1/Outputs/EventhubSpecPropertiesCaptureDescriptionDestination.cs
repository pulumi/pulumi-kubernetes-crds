// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1
{

    [OutputType]
    public sealed class EventhubSpecPropertiesCaptureDescriptionDestination
    {
        /// <summary>
        /// ArchiveNameFormat - Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
        /// </summary>
        public readonly string ArchiveNameFormat;
        /// <summary>
        /// BlobContainer - Blob container Name
        /// </summary>
        public readonly string BlobContainer;
        /// <summary>
        /// Name - Name for capture destination
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// StorageAccount - Details of the storage account
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.EventhubSpecPropertiesCaptureDescriptionDestinationStorageAccount StorageAccount;

        [OutputConstructor]
        private EventhubSpecPropertiesCaptureDescriptionDestination(
            string archiveNameFormat,

            string blobContainer,

            string name,

            Pulumi.Kubernetes.Types.Outputs.Azure.V1Alpha1.EventhubSpecPropertiesCaptureDescriptionDestinationStorageAccount storageAccount)
        {
            ArchiveNameFormat = archiveNameFormat;
            BlobContainer = blobContainer;
            Name = name;
            StorageAccount = storageAccount;
        }
    }
}
