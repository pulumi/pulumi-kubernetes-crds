// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Storage.V1
{

    /// <summary>
    /// StorageClass represents a kubernetes storage class
    /// </summary>
    public class CSIPowerStoreSpecDriverStorageClassArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AllowVolumeExpansion is a boolean flag which indicates if volumes can be expanded
        /// </summary>
        [Input("allowVolumeExpansion")]
        public Input<bool>? AllowVolumeExpansion { get; set; }

        [Input("allowedTopologies")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Storage.V1.CSIPowerStoreSpecDriverStorageClassAllowedTopologiesArgs>? _allowedTopologies;

        /// <summary>
        /// Restrict the node topologies where volumes can be dynamically provisioned.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Storage.V1.CSIPowerStoreSpecDriverStorageClassAllowedTopologiesArgs> AllowedTopologies
        {
            get => _allowedTopologies ?? (_allowedTopologies = new InputList<Pulumi.Kubernetes.Types.Inputs.Storage.V1.CSIPowerStoreSpecDriverStorageClassAllowedTopologiesArgs>());
            set => _allowedTopologies = value;
        }

        /// <summary>
        /// DefaultSc is a boolean flag to indicate if the storage class is going to be marked as default
        /// </summary>
        [Input("default")]
        public Input<bool>? Default { get; set; }

        /// <summary>
        /// Name is the name of the StorageClass
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// Parameters is a map of driver specific storage class
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// ReclaimPolicy is the reclaim policy for the storage class
        /// </summary>
        [Input("reclaimPolicy")]
        public Input<string>? ReclaimPolicy { get; set; }

        public CSIPowerStoreSpecDriverStorageClassArgs()
        {
        }
    }
}
