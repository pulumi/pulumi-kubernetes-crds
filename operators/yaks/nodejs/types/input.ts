// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace yaks {
    export namespace v1alpha1 {
        /**
         * TestSpec defines the desired state of Test
         */
        export interface TestSpec {
            /**
             * SettingsSpec--
             */
            config?: pulumi.Input<inputs.yaks.v1alpha1.TestSpecConfig>;
            env?: pulumi.Input<pulumi.Input<string>[]>;
            resources?: pulumi.Input<pulumi.Input<inputs.yaks.v1alpha1.TestSpecResources>[]>;
            secret?: pulumi.Input<string>;
            /**
             * SourceSpec--
             */
            source?: pulumi.Input<inputs.yaks.v1alpha1.TestSpecSource>;
        }

        /**
         * SettingsSpec--
         */
        export interface TestSpecConfig {
            content?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
        }

        /**
         * ResourceSpec--
         */
        export interface TestSpecResources {
            content?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
        }

        /**
         * SourceSpec--
         */
        export interface TestSpecSource {
            content?: pulumi.Input<string>;
            language?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
        }

        /**
         * TestStatus defines the observed state of Test
         */
        export interface TestStatus {
            digest?: pulumi.Input<string>;
            errors?: pulumi.Input<string>;
            /**
             * TestPhase
             */
            phase?: pulumi.Input<string>;
            results?: pulumi.Input<inputs.yaks.v1alpha1.TestStatusResults>;
            testID?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface TestStatusResults {
            errors?: pulumi.Input<pulumi.Input<string>[]>;
            summary?: pulumi.Input<inputs.yaks.v1alpha1.TestStatusResultsSummary>;
            tests?: pulumi.Input<pulumi.Input<inputs.yaks.v1alpha1.TestStatusResultsTests>[]>;
        }

        export interface TestStatusResultsSummary {
            failed: pulumi.Input<number>;
            passed: pulumi.Input<number>;
            pending: pulumi.Input<number>;
            skipped: pulumi.Input<number>;
            total: pulumi.Input<number>;
            undefined: pulumi.Input<number>;
        }

        export interface TestStatusResultsTests {
            classname?: pulumi.Input<string>;
            errorMessage?: pulumi.Input<string>;
            errorType?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
        }
    }
}
