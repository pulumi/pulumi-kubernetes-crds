// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace wso2 {
    export namespace v1alpha1 {
        export interface APISpec {
            definition: pulumi.Input<inputs.wso2.v1alpha1.APISpecDefinition>;
            /**
             * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
             */
            mode?: pulumi.Input<string>;
            override?: pulumi.Input<boolean>;
            replicas: pulumi.Input<number>;
            updateTimeStamp?: pulumi.Input<string>;
            version?: pulumi.Input<string>;
        }

        export interface APISpecDefinition {
            interceptors?: pulumi.Input<inputs.wso2.v1alpha1.APISpecDefinitionInterceptors>;
            swaggerConfigmapNames: pulumi.Input<pulumi.Input<string>[]>;
            type?: pulumi.Input<string>;
        }

        export interface APISpecDefinitionInterceptors {
            ballerina?: pulumi.Input<pulumi.Input<string>[]>;
            java?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RateLimitingSpec {
            bandwidth?: pulumi.Input<inputs.wso2.v1alpha1.RateLimitingSpecBandwidth>;
            conditions?: pulumi.Input<inputs.wso2.v1alpha1.RateLimitingSpecConditions>;
            description?: pulumi.Input<string>;
            requestCount: pulumi.Input<inputs.wso2.v1alpha1.RateLimitingSpecRequestCount>;
            stopOnQuotaReach?: pulumi.Input<boolean>;
            timeUnit: pulumi.Input<string>;
            type: pulumi.Input<string>;
            unitTime: pulumi.Input<number>;
        }

        export interface RateLimitingSpecBandwidth {
            dataAmount: pulumi.Input<string>;
            dataUnit: pulumi.Input<string>;
        }

        export interface RateLimitingSpecConditions {
            headerCondition: pulumi.Input<inputs.wso2.v1alpha1.RateLimitingSpecConditionsHeaderCondition>;
            ipCondition: pulumi.Input<inputs.wso2.v1alpha1.RateLimitingSpecConditionsIpCondition>;
        }

        export interface RateLimitingSpecConditionsHeaderCondition {
            headerName: pulumi.Input<string>;
            headerValue: pulumi.Input<string>;
        }

        export interface RateLimitingSpecConditionsIpCondition {
            endIp: pulumi.Input<string>;
            negation: pulumi.Input<boolean>;
            specificIp: pulumi.Input<string>;
            startIp: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RateLimitingSpecRequestCount {
            limit: pulumi.Input<number>;
        }

        export interface SecuritySpec {
            securityConfig?: pulumi.Input<pulumi.Input<inputs.wso2.v1alpha1.SecuritySpecSecurityConfig>[]>;
            /**
             * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
             */
            type: pulumi.Input<string>;
        }

        export interface SecuritySpecSecurityConfig {
            alias?: pulumi.Input<string>;
            audience?: pulumi.Input<string>;
            certificate?: pulumi.Input<string>;
            credentials?: pulumi.Input<string>;
            endpoint?: pulumi.Input<string>;
            issuer?: pulumi.Input<string>;
            validateSubscription?: pulumi.Input<boolean>;
        }

        export interface TargetEndpointSpec {
            deploy: pulumi.Input<inputs.wso2.v1alpha1.TargetEndpointSpecDeploy>;
            endpointName?: pulumi.Input<string>;
            endpointSecurity?: pulumi.Input<inputs.wso2.v1alpha1.TargetEndpointSpecEndpointSecurity>;
            hostname?: pulumi.Input<string>;
            mode?: pulumi.Input<string>;
            port: pulumi.Input<number>;
            protocol: pulumi.Input<string>;
            targetPort: pulumi.Input<number>;
            /**
             * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
             */
            type?: pulumi.Input<string>;
        }

        export interface TargetEndpointSpecDeploy {
            cpuLimit?: pulumi.Input<string>;
            dockerImage: pulumi.Input<string>;
            maxReplicas?: pulumi.Input<number>;
            memoryLimit?: pulumi.Input<string>;
            minReplicas?: pulumi.Input<number>;
            name: pulumi.Input<string>;
            reqMemory?: pulumi.Input<string>;
            requestCPU?: pulumi.Input<string>;
        }

        export interface TargetEndpointSpecEndpointSecurity {
            password: pulumi.Input<string>;
            type: pulumi.Input<string>;
            username: pulumi.Input<string>;
        }

    }
}
