// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace wso2 {
    export namespace v1alpha1 {
        export interface APISpec {
            definition: outputs.wso2.v1alpha1.APISpecDefinition;
            /**
             * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
             */
            mode?: string;
            override?: boolean;
            replicas: number;
            updateTimeStamp?: string;
            version?: string;
        }

        export interface APISpecDefinition {
            interceptors?: outputs.wso2.v1alpha1.APISpecDefinitionInterceptors;
            swaggerConfigmapNames: string[];
            type?: string;
        }

        export interface APISpecDefinitionInterceptors {
            ballerina?: string[];
            java?: string[];
        }

        export interface RateLimitingSpec {
            bandwidth?: outputs.wso2.v1alpha1.RateLimitingSpecBandwidth;
            conditions?: outputs.wso2.v1alpha1.RateLimitingSpecConditions;
            description?: string;
            requestCount: outputs.wso2.v1alpha1.RateLimitingSpecRequestCount;
            stopOnQuotaReach?: boolean;
            timeUnit: string;
            type: string;
            unitTime: number;
        }

        export interface RateLimitingSpecBandwidth {
            dataAmount: string;
            dataUnit: string;
        }

        export interface RateLimitingSpecConditions {
            headerCondition: outputs.wso2.v1alpha1.RateLimitingSpecConditionsHeaderCondition;
            ipCondition: outputs.wso2.v1alpha1.RateLimitingSpecConditionsIpCondition;
        }

        export interface RateLimitingSpecConditionsHeaderCondition {
            headerName: string;
            headerValue: string;
        }

        export interface RateLimitingSpecConditionsIpCondition {
            endIp: string;
            negation: boolean;
            specificIp: string;
            startIp: string;
            type: string;
        }

        export interface RateLimitingSpecRequestCount {
            limit: number;
        }

        export interface SecuritySpec {
            securityConfig?: outputs.wso2.v1alpha1.SecuritySpecSecurityConfig[];
            /**
             * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
             */
            type: string;
        }

        export interface SecuritySpecSecurityConfig {
            alias?: string;
            audience?: string;
            certificate?: string;
            credentials?: string;
            endpoint?: string;
            issuer?: string;
            validateSubscription?: boolean;
        }

        export interface TargetEndpointSpec {
            deploy: outputs.wso2.v1alpha1.TargetEndpointSpecDeploy;
            endpointName?: string;
            endpointSecurity?: outputs.wso2.v1alpha1.TargetEndpointSpecEndpointSecurity;
            hostname?: string;
            mode?: string;
            port: number;
            protocol: string;
            targetPort: number;
            /**
             * INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
             */
            type?: string;
        }

        export interface TargetEndpointSpecDeploy {
            cpuLimit?: string;
            dockerImage: string;
            maxReplicas?: number;
            memoryLimit?: string;
            minReplicas?: number;
            name: string;
            reqMemory?: string;
            requestCPU?: string;
        }

        export interface TargetEndpointSpecEndpointSecurity {
            password: string;
            type: string;
            username: string;
        }

    }
}
