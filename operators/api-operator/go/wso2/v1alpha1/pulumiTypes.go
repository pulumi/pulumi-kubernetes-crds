// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type APIType struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *APISpec               `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// APITypeInput is an input type that accepts APITypeArgs and APITypeOutput values.
// You can construct a concrete instance of `APITypeInput` via:
//
//          APITypeArgs{...}
type APITypeInput interface {
	pulumi.Input

	ToAPITypeOutput() APITypeOutput
	ToAPITypeOutputWithContext(context.Context) APITypeOutput
}

type APITypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       APISpecPtrInput           `pulumi:"spec"`
	Status     pulumi.MapInput           `pulumi:"status"`
}

func (APITypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIType)(nil)).Elem()
}

func (i APITypeArgs) ToAPITypeOutput() APITypeOutput {
	return i.ToAPITypeOutputWithContext(context.Background())
}

func (i APITypeArgs) ToAPITypeOutputWithContext(ctx context.Context) APITypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APITypeOutput)
}

type APITypeOutput struct{ *pulumi.OutputState }

func (APITypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIType)(nil)).Elem()
}

func (o APITypeOutput) ToAPITypeOutput() APITypeOutput {
	return o
}

func (o APITypeOutput) ToAPITypeOutputWithContext(ctx context.Context) APITypeOutput {
	return o
}

func (o APITypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o APITypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o APITypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v APIType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o APITypeOutput) Spec() APISpecPtrOutput {
	return o.ApplyT(func(v APIType) *APISpec { return v.Spec }).(APISpecPtrOutput)
}

func (o APITypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v APIType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type APIMetadata struct {
}

// APIMetadataInput is an input type that accepts APIMetadataArgs and APIMetadataOutput values.
// You can construct a concrete instance of `APIMetadataInput` via:
//
//          APIMetadataArgs{...}
type APIMetadataInput interface {
	pulumi.Input

	ToAPIMetadataOutput() APIMetadataOutput
	ToAPIMetadataOutputWithContext(context.Context) APIMetadataOutput
}

type APIMetadataArgs struct {
}

func (APIMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIMetadata)(nil)).Elem()
}

func (i APIMetadataArgs) ToAPIMetadataOutput() APIMetadataOutput {
	return i.ToAPIMetadataOutputWithContext(context.Background())
}

func (i APIMetadataArgs) ToAPIMetadataOutputWithContext(ctx context.Context) APIMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIMetadataOutput)
}

type APIMetadataOutput struct{ *pulumi.OutputState }

func (APIMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIMetadata)(nil)).Elem()
}

func (o APIMetadataOutput) ToAPIMetadataOutput() APIMetadataOutput {
	return o
}

func (o APIMetadataOutput) ToAPIMetadataOutputWithContext(ctx context.Context) APIMetadataOutput {
	return o
}

type APISpec struct {
	Definition APISpecDefinition `pulumi:"definition"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
	Mode            *string `pulumi:"mode"`
	Override        *bool   `pulumi:"override"`
	Replicas        int     `pulumi:"replicas"`
	UpdateTimeStamp *string `pulumi:"updateTimeStamp"`
	Version         *string `pulumi:"version"`
}

// APISpecInput is an input type that accepts APISpecArgs and APISpecOutput values.
// You can construct a concrete instance of `APISpecInput` via:
//
//          APISpecArgs{...}
type APISpecInput interface {
	pulumi.Input

	ToAPISpecOutput() APISpecOutput
	ToAPISpecOutputWithContext(context.Context) APISpecOutput
}

type APISpecArgs struct {
	Definition APISpecDefinitionInput `pulumi:"definition"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
	Mode            pulumi.StringPtrInput `pulumi:"mode"`
	Override        pulumi.BoolPtrInput   `pulumi:"override"`
	Replicas        pulumi.IntInput       `pulumi:"replicas"`
	UpdateTimeStamp pulumi.StringPtrInput `pulumi:"updateTimeStamp"`
	Version         pulumi.StringPtrInput `pulumi:"version"`
}

func (APISpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APISpec)(nil)).Elem()
}

func (i APISpecArgs) ToAPISpecOutput() APISpecOutput {
	return i.ToAPISpecOutputWithContext(context.Background())
}

func (i APISpecArgs) ToAPISpecOutputWithContext(ctx context.Context) APISpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecOutput)
}

func (i APISpecArgs) ToAPISpecPtrOutput() APISpecPtrOutput {
	return i.ToAPISpecPtrOutputWithContext(context.Background())
}

func (i APISpecArgs) ToAPISpecPtrOutputWithContext(ctx context.Context) APISpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecOutput).ToAPISpecPtrOutputWithContext(ctx)
}

// APISpecPtrInput is an input type that accepts APISpecArgs, APISpecPtr and APISpecPtrOutput values.
// You can construct a concrete instance of `APISpecPtrInput` via:
//
//          APISpecArgs{...}
//
//  or:
//
//          nil
type APISpecPtrInput interface {
	pulumi.Input

	ToAPISpecPtrOutput() APISpecPtrOutput
	ToAPISpecPtrOutputWithContext(context.Context) APISpecPtrOutput
}

type apispecPtrType APISpecArgs

func APISpecPtr(v *APISpecArgs) APISpecPtrInput {
	return (*apispecPtrType)(v)
}

func (*apispecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**APISpec)(nil)).Elem()
}

func (i *apispecPtrType) ToAPISpecPtrOutput() APISpecPtrOutput {
	return i.ToAPISpecPtrOutputWithContext(context.Background())
}

func (i *apispecPtrType) ToAPISpecPtrOutputWithContext(ctx context.Context) APISpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecPtrOutput)
}

type APISpecOutput struct{ *pulumi.OutputState }

func (APISpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APISpec)(nil)).Elem()
}

func (o APISpecOutput) ToAPISpecOutput() APISpecOutput {
	return o
}

func (o APISpecOutput) ToAPISpecOutputWithContext(ctx context.Context) APISpecOutput {
	return o
}

func (o APISpecOutput) ToAPISpecPtrOutput() APISpecPtrOutput {
	return o.ToAPISpecPtrOutputWithContext(context.Background())
}

func (o APISpecOutput) ToAPISpecPtrOutputWithContext(ctx context.Context) APISpecPtrOutput {
	return o.ApplyT(func(v APISpec) *APISpec {
		return &v
	}).(APISpecPtrOutput)
}
func (o APISpecOutput) Definition() APISpecDefinitionOutput {
	return o.ApplyT(func(v APISpec) APISpecDefinition { return v.Definition }).(APISpecDefinitionOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
func (o APISpecOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APISpec) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o APISpecOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v APISpec) *bool { return v.Override }).(pulumi.BoolPtrOutput)
}

func (o APISpecOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v APISpec) int { return v.Replicas }).(pulumi.IntOutput)
}

func (o APISpecOutput) UpdateTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APISpec) *string { return v.UpdateTimeStamp }).(pulumi.StringPtrOutput)
}

func (o APISpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APISpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type APISpecPtrOutput struct{ *pulumi.OutputState }

func (APISpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**APISpec)(nil)).Elem()
}

func (o APISpecPtrOutput) ToAPISpecPtrOutput() APISpecPtrOutput {
	return o
}

func (o APISpecPtrOutput) ToAPISpecPtrOutputWithContext(ctx context.Context) APISpecPtrOutput {
	return o
}

func (o APISpecPtrOutput) Elem() APISpecOutput {
	return o.ApplyT(func(v *APISpec) APISpec { return *v }).(APISpecOutput)
}

func (o APISpecPtrOutput) Definition() APISpecDefinitionPtrOutput {
	return o.ApplyT(func(v *APISpec) *APISpecDefinition {
		if v == nil {
			return nil
		}
		return &v.Definition
	}).(APISpecDefinitionPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
func (o APISpecPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APISpec) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o APISpecPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *APISpec) *bool {
		if v == nil {
			return nil
		}
		return v.Override
	}).(pulumi.BoolPtrOutput)
}

func (o APISpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *APISpec) *int {
		if v == nil {
			return nil
		}
		return &v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o APISpecPtrOutput) UpdateTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APISpec) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTimeStamp
	}).(pulumi.StringPtrOutput)
}

func (o APISpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APISpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type APISpecDefinition struct {
	Interceptors          *APISpecDefinitionInterceptors `pulumi:"interceptors"`
	SwaggerConfigmapNames []string                       `pulumi:"swaggerConfigmapNames"`
	Type                  *string                        `pulumi:"type"`
}

// APISpecDefinitionInput is an input type that accepts APISpecDefinitionArgs and APISpecDefinitionOutput values.
// You can construct a concrete instance of `APISpecDefinitionInput` via:
//
//          APISpecDefinitionArgs{...}
type APISpecDefinitionInput interface {
	pulumi.Input

	ToAPISpecDefinitionOutput() APISpecDefinitionOutput
	ToAPISpecDefinitionOutputWithContext(context.Context) APISpecDefinitionOutput
}

type APISpecDefinitionArgs struct {
	Interceptors          APISpecDefinitionInterceptorsPtrInput `pulumi:"interceptors"`
	SwaggerConfigmapNames pulumi.StringArrayInput               `pulumi:"swaggerConfigmapNames"`
	Type                  pulumi.StringPtrInput                 `pulumi:"type"`
}

func (APISpecDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APISpecDefinition)(nil)).Elem()
}

func (i APISpecDefinitionArgs) ToAPISpecDefinitionOutput() APISpecDefinitionOutput {
	return i.ToAPISpecDefinitionOutputWithContext(context.Background())
}

func (i APISpecDefinitionArgs) ToAPISpecDefinitionOutputWithContext(ctx context.Context) APISpecDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecDefinitionOutput)
}

func (i APISpecDefinitionArgs) ToAPISpecDefinitionPtrOutput() APISpecDefinitionPtrOutput {
	return i.ToAPISpecDefinitionPtrOutputWithContext(context.Background())
}

func (i APISpecDefinitionArgs) ToAPISpecDefinitionPtrOutputWithContext(ctx context.Context) APISpecDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecDefinitionOutput).ToAPISpecDefinitionPtrOutputWithContext(ctx)
}

// APISpecDefinitionPtrInput is an input type that accepts APISpecDefinitionArgs, APISpecDefinitionPtr and APISpecDefinitionPtrOutput values.
// You can construct a concrete instance of `APISpecDefinitionPtrInput` via:
//
//          APISpecDefinitionArgs{...}
//
//  or:
//
//          nil
type APISpecDefinitionPtrInput interface {
	pulumi.Input

	ToAPISpecDefinitionPtrOutput() APISpecDefinitionPtrOutput
	ToAPISpecDefinitionPtrOutputWithContext(context.Context) APISpecDefinitionPtrOutput
}

type apispecDefinitionPtrType APISpecDefinitionArgs

func APISpecDefinitionPtr(v *APISpecDefinitionArgs) APISpecDefinitionPtrInput {
	return (*apispecDefinitionPtrType)(v)
}

func (*apispecDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**APISpecDefinition)(nil)).Elem()
}

func (i *apispecDefinitionPtrType) ToAPISpecDefinitionPtrOutput() APISpecDefinitionPtrOutput {
	return i.ToAPISpecDefinitionPtrOutputWithContext(context.Background())
}

func (i *apispecDefinitionPtrType) ToAPISpecDefinitionPtrOutputWithContext(ctx context.Context) APISpecDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecDefinitionPtrOutput)
}

type APISpecDefinitionOutput struct{ *pulumi.OutputState }

func (APISpecDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APISpecDefinition)(nil)).Elem()
}

func (o APISpecDefinitionOutput) ToAPISpecDefinitionOutput() APISpecDefinitionOutput {
	return o
}

func (o APISpecDefinitionOutput) ToAPISpecDefinitionOutputWithContext(ctx context.Context) APISpecDefinitionOutput {
	return o
}

func (o APISpecDefinitionOutput) ToAPISpecDefinitionPtrOutput() APISpecDefinitionPtrOutput {
	return o.ToAPISpecDefinitionPtrOutputWithContext(context.Background())
}

func (o APISpecDefinitionOutput) ToAPISpecDefinitionPtrOutputWithContext(ctx context.Context) APISpecDefinitionPtrOutput {
	return o.ApplyT(func(v APISpecDefinition) *APISpecDefinition {
		return &v
	}).(APISpecDefinitionPtrOutput)
}
func (o APISpecDefinitionOutput) Interceptors() APISpecDefinitionInterceptorsPtrOutput {
	return o.ApplyT(func(v APISpecDefinition) *APISpecDefinitionInterceptors { return v.Interceptors }).(APISpecDefinitionInterceptorsPtrOutput)
}

func (o APISpecDefinitionOutput) SwaggerConfigmapNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v APISpecDefinition) []string { return v.SwaggerConfigmapNames }).(pulumi.StringArrayOutput)
}

func (o APISpecDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APISpecDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type APISpecDefinitionPtrOutput struct{ *pulumi.OutputState }

func (APISpecDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**APISpecDefinition)(nil)).Elem()
}

func (o APISpecDefinitionPtrOutput) ToAPISpecDefinitionPtrOutput() APISpecDefinitionPtrOutput {
	return o
}

func (o APISpecDefinitionPtrOutput) ToAPISpecDefinitionPtrOutputWithContext(ctx context.Context) APISpecDefinitionPtrOutput {
	return o
}

func (o APISpecDefinitionPtrOutput) Elem() APISpecDefinitionOutput {
	return o.ApplyT(func(v *APISpecDefinition) APISpecDefinition { return *v }).(APISpecDefinitionOutput)
}

func (o APISpecDefinitionPtrOutput) Interceptors() APISpecDefinitionInterceptorsPtrOutput {
	return o.ApplyT(func(v *APISpecDefinition) *APISpecDefinitionInterceptors {
		if v == nil {
			return nil
		}
		return v.Interceptors
	}).(APISpecDefinitionInterceptorsPtrOutput)
}

func (o APISpecDefinitionPtrOutput) SwaggerConfigmapNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *APISpecDefinition) []string {
		if v == nil {
			return nil
		}
		return v.SwaggerConfigmapNames
	}).(pulumi.StringArrayOutput)
}

func (o APISpecDefinitionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APISpecDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type APISpecDefinitionInterceptors struct {
	Ballerina []string `pulumi:"ballerina"`
	Java      []string `pulumi:"java"`
}

// APISpecDefinitionInterceptorsInput is an input type that accepts APISpecDefinitionInterceptorsArgs and APISpecDefinitionInterceptorsOutput values.
// You can construct a concrete instance of `APISpecDefinitionInterceptorsInput` via:
//
//          APISpecDefinitionInterceptorsArgs{...}
type APISpecDefinitionInterceptorsInput interface {
	pulumi.Input

	ToAPISpecDefinitionInterceptorsOutput() APISpecDefinitionInterceptorsOutput
	ToAPISpecDefinitionInterceptorsOutputWithContext(context.Context) APISpecDefinitionInterceptorsOutput
}

type APISpecDefinitionInterceptorsArgs struct {
	Ballerina pulumi.StringArrayInput `pulumi:"ballerina"`
	Java      pulumi.StringArrayInput `pulumi:"java"`
}

func (APISpecDefinitionInterceptorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APISpecDefinitionInterceptors)(nil)).Elem()
}

func (i APISpecDefinitionInterceptorsArgs) ToAPISpecDefinitionInterceptorsOutput() APISpecDefinitionInterceptorsOutput {
	return i.ToAPISpecDefinitionInterceptorsOutputWithContext(context.Background())
}

func (i APISpecDefinitionInterceptorsArgs) ToAPISpecDefinitionInterceptorsOutputWithContext(ctx context.Context) APISpecDefinitionInterceptorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecDefinitionInterceptorsOutput)
}

func (i APISpecDefinitionInterceptorsArgs) ToAPISpecDefinitionInterceptorsPtrOutput() APISpecDefinitionInterceptorsPtrOutput {
	return i.ToAPISpecDefinitionInterceptorsPtrOutputWithContext(context.Background())
}

func (i APISpecDefinitionInterceptorsArgs) ToAPISpecDefinitionInterceptorsPtrOutputWithContext(ctx context.Context) APISpecDefinitionInterceptorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecDefinitionInterceptorsOutput).ToAPISpecDefinitionInterceptorsPtrOutputWithContext(ctx)
}

// APISpecDefinitionInterceptorsPtrInput is an input type that accepts APISpecDefinitionInterceptorsArgs, APISpecDefinitionInterceptorsPtr and APISpecDefinitionInterceptorsPtrOutput values.
// You can construct a concrete instance of `APISpecDefinitionInterceptorsPtrInput` via:
//
//          APISpecDefinitionInterceptorsArgs{...}
//
//  or:
//
//          nil
type APISpecDefinitionInterceptorsPtrInput interface {
	pulumi.Input

	ToAPISpecDefinitionInterceptorsPtrOutput() APISpecDefinitionInterceptorsPtrOutput
	ToAPISpecDefinitionInterceptorsPtrOutputWithContext(context.Context) APISpecDefinitionInterceptorsPtrOutput
}

type apispecDefinitionInterceptorsPtrType APISpecDefinitionInterceptorsArgs

func APISpecDefinitionInterceptorsPtr(v *APISpecDefinitionInterceptorsArgs) APISpecDefinitionInterceptorsPtrInput {
	return (*apispecDefinitionInterceptorsPtrType)(v)
}

func (*apispecDefinitionInterceptorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**APISpecDefinitionInterceptors)(nil)).Elem()
}

func (i *apispecDefinitionInterceptorsPtrType) ToAPISpecDefinitionInterceptorsPtrOutput() APISpecDefinitionInterceptorsPtrOutput {
	return i.ToAPISpecDefinitionInterceptorsPtrOutputWithContext(context.Background())
}

func (i *apispecDefinitionInterceptorsPtrType) ToAPISpecDefinitionInterceptorsPtrOutputWithContext(ctx context.Context) APISpecDefinitionInterceptorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APISpecDefinitionInterceptorsPtrOutput)
}

type APISpecDefinitionInterceptorsOutput struct{ *pulumi.OutputState }

func (APISpecDefinitionInterceptorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APISpecDefinitionInterceptors)(nil)).Elem()
}

func (o APISpecDefinitionInterceptorsOutput) ToAPISpecDefinitionInterceptorsOutput() APISpecDefinitionInterceptorsOutput {
	return o
}

func (o APISpecDefinitionInterceptorsOutput) ToAPISpecDefinitionInterceptorsOutputWithContext(ctx context.Context) APISpecDefinitionInterceptorsOutput {
	return o
}

func (o APISpecDefinitionInterceptorsOutput) ToAPISpecDefinitionInterceptorsPtrOutput() APISpecDefinitionInterceptorsPtrOutput {
	return o.ToAPISpecDefinitionInterceptorsPtrOutputWithContext(context.Background())
}

func (o APISpecDefinitionInterceptorsOutput) ToAPISpecDefinitionInterceptorsPtrOutputWithContext(ctx context.Context) APISpecDefinitionInterceptorsPtrOutput {
	return o.ApplyT(func(v APISpecDefinitionInterceptors) *APISpecDefinitionInterceptors {
		return &v
	}).(APISpecDefinitionInterceptorsPtrOutput)
}
func (o APISpecDefinitionInterceptorsOutput) Ballerina() pulumi.StringArrayOutput {
	return o.ApplyT(func(v APISpecDefinitionInterceptors) []string { return v.Ballerina }).(pulumi.StringArrayOutput)
}

func (o APISpecDefinitionInterceptorsOutput) Java() pulumi.StringArrayOutput {
	return o.ApplyT(func(v APISpecDefinitionInterceptors) []string { return v.Java }).(pulumi.StringArrayOutput)
}

type APISpecDefinitionInterceptorsPtrOutput struct{ *pulumi.OutputState }

func (APISpecDefinitionInterceptorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**APISpecDefinitionInterceptors)(nil)).Elem()
}

func (o APISpecDefinitionInterceptorsPtrOutput) ToAPISpecDefinitionInterceptorsPtrOutput() APISpecDefinitionInterceptorsPtrOutput {
	return o
}

func (o APISpecDefinitionInterceptorsPtrOutput) ToAPISpecDefinitionInterceptorsPtrOutputWithContext(ctx context.Context) APISpecDefinitionInterceptorsPtrOutput {
	return o
}

func (o APISpecDefinitionInterceptorsPtrOutput) Elem() APISpecDefinitionInterceptorsOutput {
	return o.ApplyT(func(v *APISpecDefinitionInterceptors) APISpecDefinitionInterceptors { return *v }).(APISpecDefinitionInterceptorsOutput)
}

func (o APISpecDefinitionInterceptorsPtrOutput) Ballerina() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *APISpecDefinitionInterceptors) []string {
		if v == nil {
			return nil
		}
		return v.Ballerina
	}).(pulumi.StringArrayOutput)
}

func (o APISpecDefinitionInterceptorsPtrOutput) Java() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *APISpecDefinitionInterceptors) []string {
		if v == nil {
			return nil
		}
		return v.Java
	}).(pulumi.StringArrayOutput)
}

type APIStatus struct {
}

// APIStatusInput is an input type that accepts APIStatusArgs and APIStatusOutput values.
// You can construct a concrete instance of `APIStatusInput` via:
//
//          APIStatusArgs{...}
type APIStatusInput interface {
	pulumi.Input

	ToAPIStatusOutput() APIStatusOutput
	ToAPIStatusOutputWithContext(context.Context) APIStatusOutput
}

type APIStatusArgs struct {
}

func (APIStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIStatus)(nil)).Elem()
}

func (i APIStatusArgs) ToAPIStatusOutput() APIStatusOutput {
	return i.ToAPIStatusOutputWithContext(context.Background())
}

func (i APIStatusArgs) ToAPIStatusOutputWithContext(ctx context.Context) APIStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIStatusOutput)
}

type APIStatusOutput struct{ *pulumi.OutputState }

func (APIStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIStatus)(nil)).Elem()
}

func (o APIStatusOutput) ToAPIStatusOutput() APIStatusOutput {
	return o
}

func (o APIStatusOutput) ToAPIStatusOutputWithContext(ctx context.Context) APIStatusOutput {
	return o
}

type RateLimitingType struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *RateLimitingSpec      `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// RateLimitingTypeInput is an input type that accepts RateLimitingTypeArgs and RateLimitingTypeOutput values.
// You can construct a concrete instance of `RateLimitingTypeInput` via:
//
//          RateLimitingTypeArgs{...}
type RateLimitingTypeInput interface {
	pulumi.Input

	ToRateLimitingTypeOutput() RateLimitingTypeOutput
	ToRateLimitingTypeOutputWithContext(context.Context) RateLimitingTypeOutput
}

type RateLimitingTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       RateLimitingSpecPtrInput  `pulumi:"spec"`
	Status     pulumi.MapInput           `pulumi:"status"`
}

func (RateLimitingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingType)(nil)).Elem()
}

func (i RateLimitingTypeArgs) ToRateLimitingTypeOutput() RateLimitingTypeOutput {
	return i.ToRateLimitingTypeOutputWithContext(context.Background())
}

func (i RateLimitingTypeArgs) ToRateLimitingTypeOutputWithContext(ctx context.Context) RateLimitingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingTypeOutput)
}

type RateLimitingTypeOutput struct{ *pulumi.OutputState }

func (RateLimitingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingType)(nil)).Elem()
}

func (o RateLimitingTypeOutput) ToRateLimitingTypeOutput() RateLimitingTypeOutput {
	return o
}

func (o RateLimitingTypeOutput) ToRateLimitingTypeOutputWithContext(ctx context.Context) RateLimitingTypeOutput {
	return o
}

func (o RateLimitingTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitingType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o RateLimitingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o RateLimitingTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v RateLimitingType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o RateLimitingTypeOutput) Spec() RateLimitingSpecPtrOutput {
	return o.ApplyT(func(v RateLimitingType) *RateLimitingSpec { return v.Spec }).(RateLimitingSpecPtrOutput)
}

func (o RateLimitingTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v RateLimitingType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type RateLimitingMetadata struct {
}

// RateLimitingMetadataInput is an input type that accepts RateLimitingMetadataArgs and RateLimitingMetadataOutput values.
// You can construct a concrete instance of `RateLimitingMetadataInput` via:
//
//          RateLimitingMetadataArgs{...}
type RateLimitingMetadataInput interface {
	pulumi.Input

	ToRateLimitingMetadataOutput() RateLimitingMetadataOutput
	ToRateLimitingMetadataOutputWithContext(context.Context) RateLimitingMetadataOutput
}

type RateLimitingMetadataArgs struct {
}

func (RateLimitingMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingMetadata)(nil)).Elem()
}

func (i RateLimitingMetadataArgs) ToRateLimitingMetadataOutput() RateLimitingMetadataOutput {
	return i.ToRateLimitingMetadataOutputWithContext(context.Background())
}

func (i RateLimitingMetadataArgs) ToRateLimitingMetadataOutputWithContext(ctx context.Context) RateLimitingMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingMetadataOutput)
}

type RateLimitingMetadataOutput struct{ *pulumi.OutputState }

func (RateLimitingMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingMetadata)(nil)).Elem()
}

func (o RateLimitingMetadataOutput) ToRateLimitingMetadataOutput() RateLimitingMetadataOutput {
	return o
}

func (o RateLimitingMetadataOutput) ToRateLimitingMetadataOutputWithContext(ctx context.Context) RateLimitingMetadataOutput {
	return o
}

type RateLimitingSpec struct {
	Bandwidth        *RateLimitingSpecBandwidth   `pulumi:"bandwidth"`
	Conditions       *RateLimitingSpecConditions  `pulumi:"conditions"`
	Description      *string                      `pulumi:"description"`
	RequestCount     RateLimitingSpecRequestCount `pulumi:"requestCount"`
	StopOnQuotaReach *bool                        `pulumi:"stopOnQuotaReach"`
	TimeUnit         string                       `pulumi:"timeUnit"`
	Type             string                       `pulumi:"type"`
	UnitTime         int                          `pulumi:"unitTime"`
}

// RateLimitingSpecInput is an input type that accepts RateLimitingSpecArgs and RateLimitingSpecOutput values.
// You can construct a concrete instance of `RateLimitingSpecInput` via:
//
//          RateLimitingSpecArgs{...}
type RateLimitingSpecInput interface {
	pulumi.Input

	ToRateLimitingSpecOutput() RateLimitingSpecOutput
	ToRateLimitingSpecOutputWithContext(context.Context) RateLimitingSpecOutput
}

type RateLimitingSpecArgs struct {
	Bandwidth        RateLimitingSpecBandwidthPtrInput  `pulumi:"bandwidth"`
	Conditions       RateLimitingSpecConditionsPtrInput `pulumi:"conditions"`
	Description      pulumi.StringPtrInput              `pulumi:"description"`
	RequestCount     RateLimitingSpecRequestCountInput  `pulumi:"requestCount"`
	StopOnQuotaReach pulumi.BoolPtrInput                `pulumi:"stopOnQuotaReach"`
	TimeUnit         pulumi.StringInput                 `pulumi:"timeUnit"`
	Type             pulumi.StringInput                 `pulumi:"type"`
	UnitTime         pulumi.IntInput                    `pulumi:"unitTime"`
}

func (RateLimitingSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpec)(nil)).Elem()
}

func (i RateLimitingSpecArgs) ToRateLimitingSpecOutput() RateLimitingSpecOutput {
	return i.ToRateLimitingSpecOutputWithContext(context.Background())
}

func (i RateLimitingSpecArgs) ToRateLimitingSpecOutputWithContext(ctx context.Context) RateLimitingSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecOutput)
}

func (i RateLimitingSpecArgs) ToRateLimitingSpecPtrOutput() RateLimitingSpecPtrOutput {
	return i.ToRateLimitingSpecPtrOutputWithContext(context.Background())
}

func (i RateLimitingSpecArgs) ToRateLimitingSpecPtrOutputWithContext(ctx context.Context) RateLimitingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecOutput).ToRateLimitingSpecPtrOutputWithContext(ctx)
}

// RateLimitingSpecPtrInput is an input type that accepts RateLimitingSpecArgs, RateLimitingSpecPtr and RateLimitingSpecPtrOutput values.
// You can construct a concrete instance of `RateLimitingSpecPtrInput` via:
//
//          RateLimitingSpecArgs{...}
//
//  or:
//
//          nil
type RateLimitingSpecPtrInput interface {
	pulumi.Input

	ToRateLimitingSpecPtrOutput() RateLimitingSpecPtrOutput
	ToRateLimitingSpecPtrOutputWithContext(context.Context) RateLimitingSpecPtrOutput
}

type rateLimitingSpecPtrType RateLimitingSpecArgs

func RateLimitingSpecPtr(v *RateLimitingSpecArgs) RateLimitingSpecPtrInput {
	return (*rateLimitingSpecPtrType)(v)
}

func (*rateLimitingSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpec)(nil)).Elem()
}

func (i *rateLimitingSpecPtrType) ToRateLimitingSpecPtrOutput() RateLimitingSpecPtrOutput {
	return i.ToRateLimitingSpecPtrOutputWithContext(context.Background())
}

func (i *rateLimitingSpecPtrType) ToRateLimitingSpecPtrOutputWithContext(ctx context.Context) RateLimitingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecPtrOutput)
}

type RateLimitingSpecOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpec)(nil)).Elem()
}

func (o RateLimitingSpecOutput) ToRateLimitingSpecOutput() RateLimitingSpecOutput {
	return o
}

func (o RateLimitingSpecOutput) ToRateLimitingSpecOutputWithContext(ctx context.Context) RateLimitingSpecOutput {
	return o
}

func (o RateLimitingSpecOutput) ToRateLimitingSpecPtrOutput() RateLimitingSpecPtrOutput {
	return o.ToRateLimitingSpecPtrOutputWithContext(context.Background())
}

func (o RateLimitingSpecOutput) ToRateLimitingSpecPtrOutputWithContext(ctx context.Context) RateLimitingSpecPtrOutput {
	return o.ApplyT(func(v RateLimitingSpec) *RateLimitingSpec {
		return &v
	}).(RateLimitingSpecPtrOutput)
}
func (o RateLimitingSpecOutput) Bandwidth() RateLimitingSpecBandwidthPtrOutput {
	return o.ApplyT(func(v RateLimitingSpec) *RateLimitingSpecBandwidth { return v.Bandwidth }).(RateLimitingSpecBandwidthPtrOutput)
}

func (o RateLimitingSpecOutput) Conditions() RateLimitingSpecConditionsPtrOutput {
	return o.ApplyT(func(v RateLimitingSpec) *RateLimitingSpecConditions { return v.Conditions }).(RateLimitingSpecConditionsPtrOutput)
}

func (o RateLimitingSpecOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitingSpec) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecOutput) RequestCount() RateLimitingSpecRequestCountOutput {
	return o.ApplyT(func(v RateLimitingSpec) RateLimitingSpecRequestCount { return v.RequestCount }).(RateLimitingSpecRequestCountOutput)
}

func (o RateLimitingSpecOutput) StopOnQuotaReach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RateLimitingSpec) *bool { return v.StopOnQuotaReach }).(pulumi.BoolPtrOutput)
}

func (o RateLimitingSpecOutput) TimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpec) string { return v.TimeUnit }).(pulumi.StringOutput)
}

func (o RateLimitingSpecOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpec) string { return v.Type }).(pulumi.StringOutput)
}

func (o RateLimitingSpecOutput) UnitTime() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitingSpec) int { return v.UnitTime }).(pulumi.IntOutput)
}

type RateLimitingSpecPtrOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpec)(nil)).Elem()
}

func (o RateLimitingSpecPtrOutput) ToRateLimitingSpecPtrOutput() RateLimitingSpecPtrOutput {
	return o
}

func (o RateLimitingSpecPtrOutput) ToRateLimitingSpecPtrOutputWithContext(ctx context.Context) RateLimitingSpecPtrOutput {
	return o
}

func (o RateLimitingSpecPtrOutput) Elem() RateLimitingSpecOutput {
	return o.ApplyT(func(v *RateLimitingSpec) RateLimitingSpec { return *v }).(RateLimitingSpecOutput)
}

func (o RateLimitingSpecPtrOutput) Bandwidth() RateLimitingSpecBandwidthPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *RateLimitingSpecBandwidth {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(RateLimitingSpecBandwidthPtrOutput)
}

func (o RateLimitingSpecPtrOutput) Conditions() RateLimitingSpecConditionsPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *RateLimitingSpecConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(RateLimitingSpecConditionsPtrOutput)
}

func (o RateLimitingSpecPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecPtrOutput) RequestCount() RateLimitingSpecRequestCountPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *RateLimitingSpecRequestCount {
		if v == nil {
			return nil
		}
		return &v.RequestCount
	}).(RateLimitingSpecRequestCountPtrOutput)
}

func (o RateLimitingSpecPtrOutput) StopOnQuotaReach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.StopOnQuotaReach
	}).(pulumi.BoolPtrOutput)
}

func (o RateLimitingSpecPtrOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.TimeUnit
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecPtrOutput) UnitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpec) *int {
		if v == nil {
			return nil
		}
		return &v.UnitTime
	}).(pulumi.IntPtrOutput)
}

type RateLimitingSpecBandwidth struct {
	DataAmount string `pulumi:"dataAmount"`
	DataUnit   string `pulumi:"dataUnit"`
}

// RateLimitingSpecBandwidthInput is an input type that accepts RateLimitingSpecBandwidthArgs and RateLimitingSpecBandwidthOutput values.
// You can construct a concrete instance of `RateLimitingSpecBandwidthInput` via:
//
//          RateLimitingSpecBandwidthArgs{...}
type RateLimitingSpecBandwidthInput interface {
	pulumi.Input

	ToRateLimitingSpecBandwidthOutput() RateLimitingSpecBandwidthOutput
	ToRateLimitingSpecBandwidthOutputWithContext(context.Context) RateLimitingSpecBandwidthOutput
}

type RateLimitingSpecBandwidthArgs struct {
	DataAmount pulumi.StringInput `pulumi:"dataAmount"`
	DataUnit   pulumi.StringInput `pulumi:"dataUnit"`
}

func (RateLimitingSpecBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecBandwidth)(nil)).Elem()
}

func (i RateLimitingSpecBandwidthArgs) ToRateLimitingSpecBandwidthOutput() RateLimitingSpecBandwidthOutput {
	return i.ToRateLimitingSpecBandwidthOutputWithContext(context.Background())
}

func (i RateLimitingSpecBandwidthArgs) ToRateLimitingSpecBandwidthOutputWithContext(ctx context.Context) RateLimitingSpecBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecBandwidthOutput)
}

func (i RateLimitingSpecBandwidthArgs) ToRateLimitingSpecBandwidthPtrOutput() RateLimitingSpecBandwidthPtrOutput {
	return i.ToRateLimitingSpecBandwidthPtrOutputWithContext(context.Background())
}

func (i RateLimitingSpecBandwidthArgs) ToRateLimitingSpecBandwidthPtrOutputWithContext(ctx context.Context) RateLimitingSpecBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecBandwidthOutput).ToRateLimitingSpecBandwidthPtrOutputWithContext(ctx)
}

// RateLimitingSpecBandwidthPtrInput is an input type that accepts RateLimitingSpecBandwidthArgs, RateLimitingSpecBandwidthPtr and RateLimitingSpecBandwidthPtrOutput values.
// You can construct a concrete instance of `RateLimitingSpecBandwidthPtrInput` via:
//
//          RateLimitingSpecBandwidthArgs{...}
//
//  or:
//
//          nil
type RateLimitingSpecBandwidthPtrInput interface {
	pulumi.Input

	ToRateLimitingSpecBandwidthPtrOutput() RateLimitingSpecBandwidthPtrOutput
	ToRateLimitingSpecBandwidthPtrOutputWithContext(context.Context) RateLimitingSpecBandwidthPtrOutput
}

type rateLimitingSpecBandwidthPtrType RateLimitingSpecBandwidthArgs

func RateLimitingSpecBandwidthPtr(v *RateLimitingSpecBandwidthArgs) RateLimitingSpecBandwidthPtrInput {
	return (*rateLimitingSpecBandwidthPtrType)(v)
}

func (*rateLimitingSpecBandwidthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecBandwidth)(nil)).Elem()
}

func (i *rateLimitingSpecBandwidthPtrType) ToRateLimitingSpecBandwidthPtrOutput() RateLimitingSpecBandwidthPtrOutput {
	return i.ToRateLimitingSpecBandwidthPtrOutputWithContext(context.Background())
}

func (i *rateLimitingSpecBandwidthPtrType) ToRateLimitingSpecBandwidthPtrOutputWithContext(ctx context.Context) RateLimitingSpecBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecBandwidthPtrOutput)
}

type RateLimitingSpecBandwidthOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecBandwidth)(nil)).Elem()
}

func (o RateLimitingSpecBandwidthOutput) ToRateLimitingSpecBandwidthOutput() RateLimitingSpecBandwidthOutput {
	return o
}

func (o RateLimitingSpecBandwidthOutput) ToRateLimitingSpecBandwidthOutputWithContext(ctx context.Context) RateLimitingSpecBandwidthOutput {
	return o
}

func (o RateLimitingSpecBandwidthOutput) ToRateLimitingSpecBandwidthPtrOutput() RateLimitingSpecBandwidthPtrOutput {
	return o.ToRateLimitingSpecBandwidthPtrOutputWithContext(context.Background())
}

func (o RateLimitingSpecBandwidthOutput) ToRateLimitingSpecBandwidthPtrOutputWithContext(ctx context.Context) RateLimitingSpecBandwidthPtrOutput {
	return o.ApplyT(func(v RateLimitingSpecBandwidth) *RateLimitingSpecBandwidth {
		return &v
	}).(RateLimitingSpecBandwidthPtrOutput)
}
func (o RateLimitingSpecBandwidthOutput) DataAmount() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecBandwidth) string { return v.DataAmount }).(pulumi.StringOutput)
}

func (o RateLimitingSpecBandwidthOutput) DataUnit() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecBandwidth) string { return v.DataUnit }).(pulumi.StringOutput)
}

type RateLimitingSpecBandwidthPtrOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecBandwidth)(nil)).Elem()
}

func (o RateLimitingSpecBandwidthPtrOutput) ToRateLimitingSpecBandwidthPtrOutput() RateLimitingSpecBandwidthPtrOutput {
	return o
}

func (o RateLimitingSpecBandwidthPtrOutput) ToRateLimitingSpecBandwidthPtrOutputWithContext(ctx context.Context) RateLimitingSpecBandwidthPtrOutput {
	return o
}

func (o RateLimitingSpecBandwidthPtrOutput) Elem() RateLimitingSpecBandwidthOutput {
	return o.ApplyT(func(v *RateLimitingSpecBandwidth) RateLimitingSpecBandwidth { return *v }).(RateLimitingSpecBandwidthOutput)
}

func (o RateLimitingSpecBandwidthPtrOutput) DataAmount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecBandwidth) *string {
		if v == nil {
			return nil
		}
		return &v.DataAmount
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecBandwidthPtrOutput) DataUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecBandwidth) *string {
		if v == nil {
			return nil
		}
		return &v.DataUnit
	}).(pulumi.StringPtrOutput)
}

type RateLimitingSpecConditions struct {
	HeaderCondition RateLimitingSpecConditionsHeaderCondition `pulumi:"headerCondition"`
	IpCondition     RateLimitingSpecConditionsIpCondition     `pulumi:"ipCondition"`
}

// RateLimitingSpecConditionsInput is an input type that accepts RateLimitingSpecConditionsArgs and RateLimitingSpecConditionsOutput values.
// You can construct a concrete instance of `RateLimitingSpecConditionsInput` via:
//
//          RateLimitingSpecConditionsArgs{...}
type RateLimitingSpecConditionsInput interface {
	pulumi.Input

	ToRateLimitingSpecConditionsOutput() RateLimitingSpecConditionsOutput
	ToRateLimitingSpecConditionsOutputWithContext(context.Context) RateLimitingSpecConditionsOutput
}

type RateLimitingSpecConditionsArgs struct {
	HeaderCondition RateLimitingSpecConditionsHeaderConditionInput `pulumi:"headerCondition"`
	IpCondition     RateLimitingSpecConditionsIpConditionInput     `pulumi:"ipCondition"`
}

func (RateLimitingSpecConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecConditions)(nil)).Elem()
}

func (i RateLimitingSpecConditionsArgs) ToRateLimitingSpecConditionsOutput() RateLimitingSpecConditionsOutput {
	return i.ToRateLimitingSpecConditionsOutputWithContext(context.Background())
}

func (i RateLimitingSpecConditionsArgs) ToRateLimitingSpecConditionsOutputWithContext(ctx context.Context) RateLimitingSpecConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsOutput)
}

func (i RateLimitingSpecConditionsArgs) ToRateLimitingSpecConditionsPtrOutput() RateLimitingSpecConditionsPtrOutput {
	return i.ToRateLimitingSpecConditionsPtrOutputWithContext(context.Background())
}

func (i RateLimitingSpecConditionsArgs) ToRateLimitingSpecConditionsPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsOutput).ToRateLimitingSpecConditionsPtrOutputWithContext(ctx)
}

// RateLimitingSpecConditionsPtrInput is an input type that accepts RateLimitingSpecConditionsArgs, RateLimitingSpecConditionsPtr and RateLimitingSpecConditionsPtrOutput values.
// You can construct a concrete instance of `RateLimitingSpecConditionsPtrInput` via:
//
//          RateLimitingSpecConditionsArgs{...}
//
//  or:
//
//          nil
type RateLimitingSpecConditionsPtrInput interface {
	pulumi.Input

	ToRateLimitingSpecConditionsPtrOutput() RateLimitingSpecConditionsPtrOutput
	ToRateLimitingSpecConditionsPtrOutputWithContext(context.Context) RateLimitingSpecConditionsPtrOutput
}

type rateLimitingSpecConditionsPtrType RateLimitingSpecConditionsArgs

func RateLimitingSpecConditionsPtr(v *RateLimitingSpecConditionsArgs) RateLimitingSpecConditionsPtrInput {
	return (*rateLimitingSpecConditionsPtrType)(v)
}

func (*rateLimitingSpecConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecConditions)(nil)).Elem()
}

func (i *rateLimitingSpecConditionsPtrType) ToRateLimitingSpecConditionsPtrOutput() RateLimitingSpecConditionsPtrOutput {
	return i.ToRateLimitingSpecConditionsPtrOutputWithContext(context.Background())
}

func (i *rateLimitingSpecConditionsPtrType) ToRateLimitingSpecConditionsPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsPtrOutput)
}

type RateLimitingSpecConditionsOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecConditions)(nil)).Elem()
}

func (o RateLimitingSpecConditionsOutput) ToRateLimitingSpecConditionsOutput() RateLimitingSpecConditionsOutput {
	return o
}

func (o RateLimitingSpecConditionsOutput) ToRateLimitingSpecConditionsOutputWithContext(ctx context.Context) RateLimitingSpecConditionsOutput {
	return o
}

func (o RateLimitingSpecConditionsOutput) ToRateLimitingSpecConditionsPtrOutput() RateLimitingSpecConditionsPtrOutput {
	return o.ToRateLimitingSpecConditionsPtrOutputWithContext(context.Background())
}

func (o RateLimitingSpecConditionsOutput) ToRateLimitingSpecConditionsPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsPtrOutput {
	return o.ApplyT(func(v RateLimitingSpecConditions) *RateLimitingSpecConditions {
		return &v
	}).(RateLimitingSpecConditionsPtrOutput)
}
func (o RateLimitingSpecConditionsOutput) HeaderCondition() RateLimitingSpecConditionsHeaderConditionOutput {
	return o.ApplyT(func(v RateLimitingSpecConditions) RateLimitingSpecConditionsHeaderCondition { return v.HeaderCondition }).(RateLimitingSpecConditionsHeaderConditionOutput)
}

func (o RateLimitingSpecConditionsOutput) IpCondition() RateLimitingSpecConditionsIpConditionOutput {
	return o.ApplyT(func(v RateLimitingSpecConditions) RateLimitingSpecConditionsIpCondition { return v.IpCondition }).(RateLimitingSpecConditionsIpConditionOutput)
}

type RateLimitingSpecConditionsPtrOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecConditions)(nil)).Elem()
}

func (o RateLimitingSpecConditionsPtrOutput) ToRateLimitingSpecConditionsPtrOutput() RateLimitingSpecConditionsPtrOutput {
	return o
}

func (o RateLimitingSpecConditionsPtrOutput) ToRateLimitingSpecConditionsPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsPtrOutput {
	return o
}

func (o RateLimitingSpecConditionsPtrOutput) Elem() RateLimitingSpecConditionsOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditions) RateLimitingSpecConditions { return *v }).(RateLimitingSpecConditionsOutput)
}

func (o RateLimitingSpecConditionsPtrOutput) HeaderCondition() RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditions) *RateLimitingSpecConditionsHeaderCondition {
		if v == nil {
			return nil
		}
		return &v.HeaderCondition
	}).(RateLimitingSpecConditionsHeaderConditionPtrOutput)
}

func (o RateLimitingSpecConditionsPtrOutput) IpCondition() RateLimitingSpecConditionsIpConditionPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditions) *RateLimitingSpecConditionsIpCondition {
		if v == nil {
			return nil
		}
		return &v.IpCondition
	}).(RateLimitingSpecConditionsIpConditionPtrOutput)
}

type RateLimitingSpecConditionsHeaderCondition struct {
	HeaderName  string `pulumi:"headerName"`
	HeaderValue string `pulumi:"headerValue"`
}

// RateLimitingSpecConditionsHeaderConditionInput is an input type that accepts RateLimitingSpecConditionsHeaderConditionArgs and RateLimitingSpecConditionsHeaderConditionOutput values.
// You can construct a concrete instance of `RateLimitingSpecConditionsHeaderConditionInput` via:
//
//          RateLimitingSpecConditionsHeaderConditionArgs{...}
type RateLimitingSpecConditionsHeaderConditionInput interface {
	pulumi.Input

	ToRateLimitingSpecConditionsHeaderConditionOutput() RateLimitingSpecConditionsHeaderConditionOutput
	ToRateLimitingSpecConditionsHeaderConditionOutputWithContext(context.Context) RateLimitingSpecConditionsHeaderConditionOutput
}

type RateLimitingSpecConditionsHeaderConditionArgs struct {
	HeaderName  pulumi.StringInput `pulumi:"headerName"`
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (RateLimitingSpecConditionsHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecConditionsHeaderCondition)(nil)).Elem()
}

func (i RateLimitingSpecConditionsHeaderConditionArgs) ToRateLimitingSpecConditionsHeaderConditionOutput() RateLimitingSpecConditionsHeaderConditionOutput {
	return i.ToRateLimitingSpecConditionsHeaderConditionOutputWithContext(context.Background())
}

func (i RateLimitingSpecConditionsHeaderConditionArgs) ToRateLimitingSpecConditionsHeaderConditionOutputWithContext(ctx context.Context) RateLimitingSpecConditionsHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsHeaderConditionOutput)
}

func (i RateLimitingSpecConditionsHeaderConditionArgs) ToRateLimitingSpecConditionsHeaderConditionPtrOutput() RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return i.ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(context.Background())
}

func (i RateLimitingSpecConditionsHeaderConditionArgs) ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsHeaderConditionOutput).ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(ctx)
}

// RateLimitingSpecConditionsHeaderConditionPtrInput is an input type that accepts RateLimitingSpecConditionsHeaderConditionArgs, RateLimitingSpecConditionsHeaderConditionPtr and RateLimitingSpecConditionsHeaderConditionPtrOutput values.
// You can construct a concrete instance of `RateLimitingSpecConditionsHeaderConditionPtrInput` via:
//
//          RateLimitingSpecConditionsHeaderConditionArgs{...}
//
//  or:
//
//          nil
type RateLimitingSpecConditionsHeaderConditionPtrInput interface {
	pulumi.Input

	ToRateLimitingSpecConditionsHeaderConditionPtrOutput() RateLimitingSpecConditionsHeaderConditionPtrOutput
	ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(context.Context) RateLimitingSpecConditionsHeaderConditionPtrOutput
}

type rateLimitingSpecConditionsHeaderConditionPtrType RateLimitingSpecConditionsHeaderConditionArgs

func RateLimitingSpecConditionsHeaderConditionPtr(v *RateLimitingSpecConditionsHeaderConditionArgs) RateLimitingSpecConditionsHeaderConditionPtrInput {
	return (*rateLimitingSpecConditionsHeaderConditionPtrType)(v)
}

func (*rateLimitingSpecConditionsHeaderConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecConditionsHeaderCondition)(nil)).Elem()
}

func (i *rateLimitingSpecConditionsHeaderConditionPtrType) ToRateLimitingSpecConditionsHeaderConditionPtrOutput() RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return i.ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(context.Background())
}

func (i *rateLimitingSpecConditionsHeaderConditionPtrType) ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsHeaderConditionPtrOutput)
}

type RateLimitingSpecConditionsHeaderConditionOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecConditionsHeaderConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecConditionsHeaderCondition)(nil)).Elem()
}

func (o RateLimitingSpecConditionsHeaderConditionOutput) ToRateLimitingSpecConditionsHeaderConditionOutput() RateLimitingSpecConditionsHeaderConditionOutput {
	return o
}

func (o RateLimitingSpecConditionsHeaderConditionOutput) ToRateLimitingSpecConditionsHeaderConditionOutputWithContext(ctx context.Context) RateLimitingSpecConditionsHeaderConditionOutput {
	return o
}

func (o RateLimitingSpecConditionsHeaderConditionOutput) ToRateLimitingSpecConditionsHeaderConditionPtrOutput() RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return o.ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(context.Background())
}

func (o RateLimitingSpecConditionsHeaderConditionOutput) ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsHeaderCondition) *RateLimitingSpecConditionsHeaderCondition {
		return &v
	}).(RateLimitingSpecConditionsHeaderConditionPtrOutput)
}
func (o RateLimitingSpecConditionsHeaderConditionOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsHeaderCondition) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o RateLimitingSpecConditionsHeaderConditionOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsHeaderCondition) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type RateLimitingSpecConditionsHeaderConditionPtrOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecConditionsHeaderConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecConditionsHeaderCondition)(nil)).Elem()
}

func (o RateLimitingSpecConditionsHeaderConditionPtrOutput) ToRateLimitingSpecConditionsHeaderConditionPtrOutput() RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return o
}

func (o RateLimitingSpecConditionsHeaderConditionPtrOutput) ToRateLimitingSpecConditionsHeaderConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsHeaderConditionPtrOutput {
	return o
}

func (o RateLimitingSpecConditionsHeaderConditionPtrOutput) Elem() RateLimitingSpecConditionsHeaderConditionOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsHeaderCondition) RateLimitingSpecConditionsHeaderCondition {
		return *v
	}).(RateLimitingSpecConditionsHeaderConditionOutput)
}

func (o RateLimitingSpecConditionsHeaderConditionPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsHeaderCondition) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderName
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecConditionsHeaderConditionPtrOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsHeaderCondition) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderValue
	}).(pulumi.StringPtrOutput)
}

type RateLimitingSpecConditionsIpCondition struct {
	EndIp      string `pulumi:"endIp"`
	Negation   bool   `pulumi:"negation"`
	SpecificIp string `pulumi:"specificIp"`
	StartIp    string `pulumi:"startIp"`
	Type       string `pulumi:"type"`
}

// RateLimitingSpecConditionsIpConditionInput is an input type that accepts RateLimitingSpecConditionsIpConditionArgs and RateLimitingSpecConditionsIpConditionOutput values.
// You can construct a concrete instance of `RateLimitingSpecConditionsIpConditionInput` via:
//
//          RateLimitingSpecConditionsIpConditionArgs{...}
type RateLimitingSpecConditionsIpConditionInput interface {
	pulumi.Input

	ToRateLimitingSpecConditionsIpConditionOutput() RateLimitingSpecConditionsIpConditionOutput
	ToRateLimitingSpecConditionsIpConditionOutputWithContext(context.Context) RateLimitingSpecConditionsIpConditionOutput
}

type RateLimitingSpecConditionsIpConditionArgs struct {
	EndIp      pulumi.StringInput `pulumi:"endIp"`
	Negation   pulumi.BoolInput   `pulumi:"negation"`
	SpecificIp pulumi.StringInput `pulumi:"specificIp"`
	StartIp    pulumi.StringInput `pulumi:"startIp"`
	Type       pulumi.StringInput `pulumi:"type"`
}

func (RateLimitingSpecConditionsIpConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecConditionsIpCondition)(nil)).Elem()
}

func (i RateLimitingSpecConditionsIpConditionArgs) ToRateLimitingSpecConditionsIpConditionOutput() RateLimitingSpecConditionsIpConditionOutput {
	return i.ToRateLimitingSpecConditionsIpConditionOutputWithContext(context.Background())
}

func (i RateLimitingSpecConditionsIpConditionArgs) ToRateLimitingSpecConditionsIpConditionOutputWithContext(ctx context.Context) RateLimitingSpecConditionsIpConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsIpConditionOutput)
}

func (i RateLimitingSpecConditionsIpConditionArgs) ToRateLimitingSpecConditionsIpConditionPtrOutput() RateLimitingSpecConditionsIpConditionPtrOutput {
	return i.ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(context.Background())
}

func (i RateLimitingSpecConditionsIpConditionArgs) ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsIpConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsIpConditionOutput).ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(ctx)
}

// RateLimitingSpecConditionsIpConditionPtrInput is an input type that accepts RateLimitingSpecConditionsIpConditionArgs, RateLimitingSpecConditionsIpConditionPtr and RateLimitingSpecConditionsIpConditionPtrOutput values.
// You can construct a concrete instance of `RateLimitingSpecConditionsIpConditionPtrInput` via:
//
//          RateLimitingSpecConditionsIpConditionArgs{...}
//
//  or:
//
//          nil
type RateLimitingSpecConditionsIpConditionPtrInput interface {
	pulumi.Input

	ToRateLimitingSpecConditionsIpConditionPtrOutput() RateLimitingSpecConditionsIpConditionPtrOutput
	ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(context.Context) RateLimitingSpecConditionsIpConditionPtrOutput
}

type rateLimitingSpecConditionsIpConditionPtrType RateLimitingSpecConditionsIpConditionArgs

func RateLimitingSpecConditionsIpConditionPtr(v *RateLimitingSpecConditionsIpConditionArgs) RateLimitingSpecConditionsIpConditionPtrInput {
	return (*rateLimitingSpecConditionsIpConditionPtrType)(v)
}

func (*rateLimitingSpecConditionsIpConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecConditionsIpCondition)(nil)).Elem()
}

func (i *rateLimitingSpecConditionsIpConditionPtrType) ToRateLimitingSpecConditionsIpConditionPtrOutput() RateLimitingSpecConditionsIpConditionPtrOutput {
	return i.ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(context.Background())
}

func (i *rateLimitingSpecConditionsIpConditionPtrType) ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsIpConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecConditionsIpConditionPtrOutput)
}

type RateLimitingSpecConditionsIpConditionOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecConditionsIpConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecConditionsIpCondition)(nil)).Elem()
}

func (o RateLimitingSpecConditionsIpConditionOutput) ToRateLimitingSpecConditionsIpConditionOutput() RateLimitingSpecConditionsIpConditionOutput {
	return o
}

func (o RateLimitingSpecConditionsIpConditionOutput) ToRateLimitingSpecConditionsIpConditionOutputWithContext(ctx context.Context) RateLimitingSpecConditionsIpConditionOutput {
	return o
}

func (o RateLimitingSpecConditionsIpConditionOutput) ToRateLimitingSpecConditionsIpConditionPtrOutput() RateLimitingSpecConditionsIpConditionPtrOutput {
	return o.ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(context.Background())
}

func (o RateLimitingSpecConditionsIpConditionOutput) ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsIpConditionPtrOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsIpCondition) *RateLimitingSpecConditionsIpCondition {
		return &v
	}).(RateLimitingSpecConditionsIpConditionPtrOutput)
}
func (o RateLimitingSpecConditionsIpConditionOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsIpCondition) string { return v.EndIp }).(pulumi.StringOutput)
}

func (o RateLimitingSpecConditionsIpConditionOutput) Negation() pulumi.BoolOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsIpCondition) bool { return v.Negation }).(pulumi.BoolOutput)
}

func (o RateLimitingSpecConditionsIpConditionOutput) SpecificIp() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsIpCondition) string { return v.SpecificIp }).(pulumi.StringOutput)
}

func (o RateLimitingSpecConditionsIpConditionOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsIpCondition) string { return v.StartIp }).(pulumi.StringOutput)
}

func (o RateLimitingSpecConditionsIpConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitingSpecConditionsIpCondition) string { return v.Type }).(pulumi.StringOutput)
}

type RateLimitingSpecConditionsIpConditionPtrOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecConditionsIpConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecConditionsIpCondition)(nil)).Elem()
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) ToRateLimitingSpecConditionsIpConditionPtrOutput() RateLimitingSpecConditionsIpConditionPtrOutput {
	return o
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) ToRateLimitingSpecConditionsIpConditionPtrOutputWithContext(ctx context.Context) RateLimitingSpecConditionsIpConditionPtrOutput {
	return o
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) Elem() RateLimitingSpecConditionsIpConditionOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsIpCondition) RateLimitingSpecConditionsIpCondition { return *v }).(RateLimitingSpecConditionsIpConditionOutput)
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsIpCondition) *string {
		if v == nil {
			return nil
		}
		return &v.EndIp
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) Negation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsIpCondition) *bool {
		if v == nil {
			return nil
		}
		return &v.Negation
	}).(pulumi.BoolPtrOutput)
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) SpecificIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsIpCondition) *string {
		if v == nil {
			return nil
		}
		return &v.SpecificIp
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsIpCondition) *string {
		if v == nil {
			return nil
		}
		return &v.StartIp
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitingSpecConditionsIpConditionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecConditionsIpCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type RateLimitingSpecRequestCount struct {
	Limit int `pulumi:"limit"`
}

// RateLimitingSpecRequestCountInput is an input type that accepts RateLimitingSpecRequestCountArgs and RateLimitingSpecRequestCountOutput values.
// You can construct a concrete instance of `RateLimitingSpecRequestCountInput` via:
//
//          RateLimitingSpecRequestCountArgs{...}
type RateLimitingSpecRequestCountInput interface {
	pulumi.Input

	ToRateLimitingSpecRequestCountOutput() RateLimitingSpecRequestCountOutput
	ToRateLimitingSpecRequestCountOutputWithContext(context.Context) RateLimitingSpecRequestCountOutput
}

type RateLimitingSpecRequestCountArgs struct {
	Limit pulumi.IntInput `pulumi:"limit"`
}

func (RateLimitingSpecRequestCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecRequestCount)(nil)).Elem()
}

func (i RateLimitingSpecRequestCountArgs) ToRateLimitingSpecRequestCountOutput() RateLimitingSpecRequestCountOutput {
	return i.ToRateLimitingSpecRequestCountOutputWithContext(context.Background())
}

func (i RateLimitingSpecRequestCountArgs) ToRateLimitingSpecRequestCountOutputWithContext(ctx context.Context) RateLimitingSpecRequestCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecRequestCountOutput)
}

func (i RateLimitingSpecRequestCountArgs) ToRateLimitingSpecRequestCountPtrOutput() RateLimitingSpecRequestCountPtrOutput {
	return i.ToRateLimitingSpecRequestCountPtrOutputWithContext(context.Background())
}

func (i RateLimitingSpecRequestCountArgs) ToRateLimitingSpecRequestCountPtrOutputWithContext(ctx context.Context) RateLimitingSpecRequestCountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecRequestCountOutput).ToRateLimitingSpecRequestCountPtrOutputWithContext(ctx)
}

// RateLimitingSpecRequestCountPtrInput is an input type that accepts RateLimitingSpecRequestCountArgs, RateLimitingSpecRequestCountPtr and RateLimitingSpecRequestCountPtrOutput values.
// You can construct a concrete instance of `RateLimitingSpecRequestCountPtrInput` via:
//
//          RateLimitingSpecRequestCountArgs{...}
//
//  or:
//
//          nil
type RateLimitingSpecRequestCountPtrInput interface {
	pulumi.Input

	ToRateLimitingSpecRequestCountPtrOutput() RateLimitingSpecRequestCountPtrOutput
	ToRateLimitingSpecRequestCountPtrOutputWithContext(context.Context) RateLimitingSpecRequestCountPtrOutput
}

type rateLimitingSpecRequestCountPtrType RateLimitingSpecRequestCountArgs

func RateLimitingSpecRequestCountPtr(v *RateLimitingSpecRequestCountArgs) RateLimitingSpecRequestCountPtrInput {
	return (*rateLimitingSpecRequestCountPtrType)(v)
}

func (*rateLimitingSpecRequestCountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecRequestCount)(nil)).Elem()
}

func (i *rateLimitingSpecRequestCountPtrType) ToRateLimitingSpecRequestCountPtrOutput() RateLimitingSpecRequestCountPtrOutput {
	return i.ToRateLimitingSpecRequestCountPtrOutputWithContext(context.Background())
}

func (i *rateLimitingSpecRequestCountPtrType) ToRateLimitingSpecRequestCountPtrOutputWithContext(ctx context.Context) RateLimitingSpecRequestCountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingSpecRequestCountPtrOutput)
}

type RateLimitingSpecRequestCountOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecRequestCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingSpecRequestCount)(nil)).Elem()
}

func (o RateLimitingSpecRequestCountOutput) ToRateLimitingSpecRequestCountOutput() RateLimitingSpecRequestCountOutput {
	return o
}

func (o RateLimitingSpecRequestCountOutput) ToRateLimitingSpecRequestCountOutputWithContext(ctx context.Context) RateLimitingSpecRequestCountOutput {
	return o
}

func (o RateLimitingSpecRequestCountOutput) ToRateLimitingSpecRequestCountPtrOutput() RateLimitingSpecRequestCountPtrOutput {
	return o.ToRateLimitingSpecRequestCountPtrOutputWithContext(context.Background())
}

func (o RateLimitingSpecRequestCountOutput) ToRateLimitingSpecRequestCountPtrOutputWithContext(ctx context.Context) RateLimitingSpecRequestCountPtrOutput {
	return o.ApplyT(func(v RateLimitingSpecRequestCount) *RateLimitingSpecRequestCount {
		return &v
	}).(RateLimitingSpecRequestCountPtrOutput)
}
func (o RateLimitingSpecRequestCountOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitingSpecRequestCount) int { return v.Limit }).(pulumi.IntOutput)
}

type RateLimitingSpecRequestCountPtrOutput struct{ *pulumi.OutputState }

func (RateLimitingSpecRequestCountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitingSpecRequestCount)(nil)).Elem()
}

func (o RateLimitingSpecRequestCountPtrOutput) ToRateLimitingSpecRequestCountPtrOutput() RateLimitingSpecRequestCountPtrOutput {
	return o
}

func (o RateLimitingSpecRequestCountPtrOutput) ToRateLimitingSpecRequestCountPtrOutputWithContext(ctx context.Context) RateLimitingSpecRequestCountPtrOutput {
	return o
}

func (o RateLimitingSpecRequestCountPtrOutput) Elem() RateLimitingSpecRequestCountOutput {
	return o.ApplyT(func(v *RateLimitingSpecRequestCount) RateLimitingSpecRequestCount { return *v }).(RateLimitingSpecRequestCountOutput)
}

func (o RateLimitingSpecRequestCountPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RateLimitingSpecRequestCount) *int {
		if v == nil {
			return nil
		}
		return &v.Limit
	}).(pulumi.IntPtrOutput)
}

type RateLimitingStatus struct {
}

// RateLimitingStatusInput is an input type that accepts RateLimitingStatusArgs and RateLimitingStatusOutput values.
// You can construct a concrete instance of `RateLimitingStatusInput` via:
//
//          RateLimitingStatusArgs{...}
type RateLimitingStatusInput interface {
	pulumi.Input

	ToRateLimitingStatusOutput() RateLimitingStatusOutput
	ToRateLimitingStatusOutputWithContext(context.Context) RateLimitingStatusOutput
}

type RateLimitingStatusArgs struct {
}

func (RateLimitingStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingStatus)(nil)).Elem()
}

func (i RateLimitingStatusArgs) ToRateLimitingStatusOutput() RateLimitingStatusOutput {
	return i.ToRateLimitingStatusOutputWithContext(context.Background())
}

func (i RateLimitingStatusArgs) ToRateLimitingStatusOutputWithContext(ctx context.Context) RateLimitingStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitingStatusOutput)
}

type RateLimitingStatusOutput struct{ *pulumi.OutputState }

func (RateLimitingStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitingStatus)(nil)).Elem()
}

func (o RateLimitingStatusOutput) ToRateLimitingStatusOutput() RateLimitingStatusOutput {
	return o
}

func (o RateLimitingStatusOutput) ToRateLimitingStatusOutputWithContext(ctx context.Context) RateLimitingStatusOutput {
	return o
}

type SecurityType struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *SecuritySpec          `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// SecurityTypeInput is an input type that accepts SecurityTypeArgs and SecurityTypeOutput values.
// You can construct a concrete instance of `SecurityTypeInput` via:
//
//          SecurityTypeArgs{...}
type SecurityTypeInput interface {
	pulumi.Input

	ToSecurityTypeOutput() SecurityTypeOutput
	ToSecurityTypeOutputWithContext(context.Context) SecurityTypeOutput
}

type SecurityTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       SecuritySpecPtrInput      `pulumi:"spec"`
	Status     pulumi.MapInput           `pulumi:"status"`
}

func (SecurityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityType)(nil)).Elem()
}

func (i SecurityTypeArgs) ToSecurityTypeOutput() SecurityTypeOutput {
	return i.ToSecurityTypeOutputWithContext(context.Background())
}

func (i SecurityTypeArgs) ToSecurityTypeOutputWithContext(ctx context.Context) SecurityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityTypeOutput)
}

type SecurityTypeOutput struct{ *pulumi.OutputState }

func (SecurityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityType)(nil)).Elem()
}

func (o SecurityTypeOutput) ToSecurityTypeOutput() SecurityTypeOutput {
	return o
}

func (o SecurityTypeOutput) ToSecurityTypeOutputWithContext(ctx context.Context) SecurityTypeOutput {
	return o
}

func (o SecurityTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o SecurityTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o SecurityTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SecurityType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o SecurityTypeOutput) Spec() SecuritySpecPtrOutput {
	return o.ApplyT(func(v SecurityType) *SecuritySpec { return v.Spec }).(SecuritySpecPtrOutput)
}

func (o SecurityTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v SecurityType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type SecurityMetadata struct {
}

// SecurityMetadataInput is an input type that accepts SecurityMetadataArgs and SecurityMetadataOutput values.
// You can construct a concrete instance of `SecurityMetadataInput` via:
//
//          SecurityMetadataArgs{...}
type SecurityMetadataInput interface {
	pulumi.Input

	ToSecurityMetadataOutput() SecurityMetadataOutput
	ToSecurityMetadataOutputWithContext(context.Context) SecurityMetadataOutput
}

type SecurityMetadataArgs struct {
}

func (SecurityMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMetadata)(nil)).Elem()
}

func (i SecurityMetadataArgs) ToSecurityMetadataOutput() SecurityMetadataOutput {
	return i.ToSecurityMetadataOutputWithContext(context.Background())
}

func (i SecurityMetadataArgs) ToSecurityMetadataOutputWithContext(ctx context.Context) SecurityMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMetadataOutput)
}

type SecurityMetadataOutput struct{ *pulumi.OutputState }

func (SecurityMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMetadata)(nil)).Elem()
}

func (o SecurityMetadataOutput) ToSecurityMetadataOutput() SecurityMetadataOutput {
	return o
}

func (o SecurityMetadataOutput) ToSecurityMetadataOutputWithContext(ctx context.Context) SecurityMetadataOutput {
	return o
}

type SecuritySpec struct {
	SecurityConfig []SecuritySpecSecurityConfig `pulumi:"securityConfig"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
	Type string `pulumi:"type"`
}

// SecuritySpecInput is an input type that accepts SecuritySpecArgs and SecuritySpecOutput values.
// You can construct a concrete instance of `SecuritySpecInput` via:
//
//          SecuritySpecArgs{...}
type SecuritySpecInput interface {
	pulumi.Input

	ToSecuritySpecOutput() SecuritySpecOutput
	ToSecuritySpecOutputWithContext(context.Context) SecuritySpecOutput
}

type SecuritySpecArgs struct {
	SecurityConfig SecuritySpecSecurityConfigArrayInput `pulumi:"securityConfig"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecuritySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySpec)(nil)).Elem()
}

func (i SecuritySpecArgs) ToSecuritySpecOutput() SecuritySpecOutput {
	return i.ToSecuritySpecOutputWithContext(context.Background())
}

func (i SecuritySpecArgs) ToSecuritySpecOutputWithContext(ctx context.Context) SecuritySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySpecOutput)
}

func (i SecuritySpecArgs) ToSecuritySpecPtrOutput() SecuritySpecPtrOutput {
	return i.ToSecuritySpecPtrOutputWithContext(context.Background())
}

func (i SecuritySpecArgs) ToSecuritySpecPtrOutputWithContext(ctx context.Context) SecuritySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySpecOutput).ToSecuritySpecPtrOutputWithContext(ctx)
}

// SecuritySpecPtrInput is an input type that accepts SecuritySpecArgs, SecuritySpecPtr and SecuritySpecPtrOutput values.
// You can construct a concrete instance of `SecuritySpecPtrInput` via:
//
//          SecuritySpecArgs{...}
//
//  or:
//
//          nil
type SecuritySpecPtrInput interface {
	pulumi.Input

	ToSecuritySpecPtrOutput() SecuritySpecPtrOutput
	ToSecuritySpecPtrOutputWithContext(context.Context) SecuritySpecPtrOutput
}

type securitySpecPtrType SecuritySpecArgs

func SecuritySpecPtr(v *SecuritySpecArgs) SecuritySpecPtrInput {
	return (*securitySpecPtrType)(v)
}

func (*securitySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySpec)(nil)).Elem()
}

func (i *securitySpecPtrType) ToSecuritySpecPtrOutput() SecuritySpecPtrOutput {
	return i.ToSecuritySpecPtrOutputWithContext(context.Background())
}

func (i *securitySpecPtrType) ToSecuritySpecPtrOutputWithContext(ctx context.Context) SecuritySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySpecPtrOutput)
}

type SecuritySpecOutput struct{ *pulumi.OutputState }

func (SecuritySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySpec)(nil)).Elem()
}

func (o SecuritySpecOutput) ToSecuritySpecOutput() SecuritySpecOutput {
	return o
}

func (o SecuritySpecOutput) ToSecuritySpecOutputWithContext(ctx context.Context) SecuritySpecOutput {
	return o
}

func (o SecuritySpecOutput) ToSecuritySpecPtrOutput() SecuritySpecPtrOutput {
	return o.ToSecuritySpecPtrOutputWithContext(context.Background())
}

func (o SecuritySpecOutput) ToSecuritySpecPtrOutputWithContext(ctx context.Context) SecuritySpecPtrOutput {
	return o.ApplyT(func(v SecuritySpec) *SecuritySpec {
		return &v
	}).(SecuritySpecPtrOutput)
}
func (o SecuritySpecOutput) SecurityConfig() SecuritySpecSecurityConfigArrayOutput {
	return o.ApplyT(func(v SecuritySpec) []SecuritySpecSecurityConfig { return v.SecurityConfig }).(SecuritySpecSecurityConfigArrayOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
func (o SecuritySpecOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecuritySpec) string { return v.Type }).(pulumi.StringOutput)
}

type SecuritySpecPtrOutput struct{ *pulumi.OutputState }

func (SecuritySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySpec)(nil)).Elem()
}

func (o SecuritySpecPtrOutput) ToSecuritySpecPtrOutput() SecuritySpecPtrOutput {
	return o
}

func (o SecuritySpecPtrOutput) ToSecuritySpecPtrOutputWithContext(ctx context.Context) SecuritySpecPtrOutput {
	return o
}

func (o SecuritySpecPtrOutput) Elem() SecuritySpecOutput {
	return o.ApplyT(func(v *SecuritySpec) SecuritySpec { return *v }).(SecuritySpecOutput)
}

func (o SecuritySpecPtrOutput) SecurityConfig() SecuritySpecSecurityConfigArrayOutput {
	return o.ApplyT(func(v *SecuritySpec) []SecuritySpecSecurityConfig {
		if v == nil {
			return nil
		}
		return v.SecurityConfig
	}).(SecuritySpecSecurityConfigArrayOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
func (o SecuritySpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritySpec) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SecuritySpecSecurityConfig struct {
	Alias                *string `pulumi:"alias"`
	Audience             *string `pulumi:"audience"`
	Certificate          *string `pulumi:"certificate"`
	Credentials          *string `pulumi:"credentials"`
	Endpoint             *string `pulumi:"endpoint"`
	Issuer               *string `pulumi:"issuer"`
	ValidateSubscription *bool   `pulumi:"validateSubscription"`
}

// SecuritySpecSecurityConfigInput is an input type that accepts SecuritySpecSecurityConfigArgs and SecuritySpecSecurityConfigOutput values.
// You can construct a concrete instance of `SecuritySpecSecurityConfigInput` via:
//
//          SecuritySpecSecurityConfigArgs{...}
type SecuritySpecSecurityConfigInput interface {
	pulumi.Input

	ToSecuritySpecSecurityConfigOutput() SecuritySpecSecurityConfigOutput
	ToSecuritySpecSecurityConfigOutputWithContext(context.Context) SecuritySpecSecurityConfigOutput
}

type SecuritySpecSecurityConfigArgs struct {
	Alias                pulumi.StringPtrInput `pulumi:"alias"`
	Audience             pulumi.StringPtrInput `pulumi:"audience"`
	Certificate          pulumi.StringPtrInput `pulumi:"certificate"`
	Credentials          pulumi.StringPtrInput `pulumi:"credentials"`
	Endpoint             pulumi.StringPtrInput `pulumi:"endpoint"`
	Issuer               pulumi.StringPtrInput `pulumi:"issuer"`
	ValidateSubscription pulumi.BoolPtrInput   `pulumi:"validateSubscription"`
}

func (SecuritySpecSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySpecSecurityConfig)(nil)).Elem()
}

func (i SecuritySpecSecurityConfigArgs) ToSecuritySpecSecurityConfigOutput() SecuritySpecSecurityConfigOutput {
	return i.ToSecuritySpecSecurityConfigOutputWithContext(context.Background())
}

func (i SecuritySpecSecurityConfigArgs) ToSecuritySpecSecurityConfigOutputWithContext(ctx context.Context) SecuritySpecSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySpecSecurityConfigOutput)
}

// SecuritySpecSecurityConfigArrayInput is an input type that accepts SecuritySpecSecurityConfigArray and SecuritySpecSecurityConfigArrayOutput values.
// You can construct a concrete instance of `SecuritySpecSecurityConfigArrayInput` via:
//
//          SecuritySpecSecurityConfigArray{ SecuritySpecSecurityConfigArgs{...} }
type SecuritySpecSecurityConfigArrayInput interface {
	pulumi.Input

	ToSecuritySpecSecurityConfigArrayOutput() SecuritySpecSecurityConfigArrayOutput
	ToSecuritySpecSecurityConfigArrayOutputWithContext(context.Context) SecuritySpecSecurityConfigArrayOutput
}

type SecuritySpecSecurityConfigArray []SecuritySpecSecurityConfigInput

func (SecuritySpecSecurityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritySpecSecurityConfig)(nil)).Elem()
}

func (i SecuritySpecSecurityConfigArray) ToSecuritySpecSecurityConfigArrayOutput() SecuritySpecSecurityConfigArrayOutput {
	return i.ToSecuritySpecSecurityConfigArrayOutputWithContext(context.Background())
}

func (i SecuritySpecSecurityConfigArray) ToSecuritySpecSecurityConfigArrayOutputWithContext(ctx context.Context) SecuritySpecSecurityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySpecSecurityConfigArrayOutput)
}

type SecuritySpecSecurityConfigOutput struct{ *pulumi.OutputState }

func (SecuritySpecSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySpecSecurityConfig)(nil)).Elem()
}

func (o SecuritySpecSecurityConfigOutput) ToSecuritySpecSecurityConfigOutput() SecuritySpecSecurityConfigOutput {
	return o
}

func (o SecuritySpecSecurityConfigOutput) ToSecuritySpecSecurityConfigOutputWithContext(ctx context.Context) SecuritySpecSecurityConfigOutput {
	return o
}

func (o SecuritySpecSecurityConfigOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

func (o SecuritySpecSecurityConfigOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SecuritySpecSecurityConfigOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o SecuritySpecSecurityConfigOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

func (o SecuritySpecSecurityConfigOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

func (o SecuritySpecSecurityConfigOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o SecuritySpecSecurityConfigOutput) ValidateSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySpecSecurityConfig) *bool { return v.ValidateSubscription }).(pulumi.BoolPtrOutput)
}

type SecuritySpecSecurityConfigArrayOutput struct{ *pulumi.OutputState }

func (SecuritySpecSecurityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritySpecSecurityConfig)(nil)).Elem()
}

func (o SecuritySpecSecurityConfigArrayOutput) ToSecuritySpecSecurityConfigArrayOutput() SecuritySpecSecurityConfigArrayOutput {
	return o
}

func (o SecuritySpecSecurityConfigArrayOutput) ToSecuritySpecSecurityConfigArrayOutputWithContext(ctx context.Context) SecuritySpecSecurityConfigArrayOutput {
	return o
}

func (o SecuritySpecSecurityConfigArrayOutput) Index(i pulumi.IntInput) SecuritySpecSecurityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritySpecSecurityConfig {
		return vs[0].([]SecuritySpecSecurityConfig)[vs[1].(int)]
	}).(SecuritySpecSecurityConfigOutput)
}

type SecurityStatus struct {
}

// SecurityStatusInput is an input type that accepts SecurityStatusArgs and SecurityStatusOutput values.
// You can construct a concrete instance of `SecurityStatusInput` via:
//
//          SecurityStatusArgs{...}
type SecurityStatusInput interface {
	pulumi.Input

	ToSecurityStatusOutput() SecurityStatusOutput
	ToSecurityStatusOutputWithContext(context.Context) SecurityStatusOutput
}

type SecurityStatusArgs struct {
}

func (SecurityStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityStatus)(nil)).Elem()
}

func (i SecurityStatusArgs) ToSecurityStatusOutput() SecurityStatusOutput {
	return i.ToSecurityStatusOutputWithContext(context.Background())
}

func (i SecurityStatusArgs) ToSecurityStatusOutputWithContext(ctx context.Context) SecurityStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityStatusOutput)
}

type SecurityStatusOutput struct{ *pulumi.OutputState }

func (SecurityStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityStatus)(nil)).Elem()
}

func (o SecurityStatusOutput) ToSecurityStatusOutput() SecurityStatusOutput {
	return o
}

func (o SecurityStatusOutput) ToSecurityStatusOutputWithContext(ctx context.Context) SecurityStatusOutput {
	return o
}

type TargetEndpointType struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *TargetEndpointSpec    `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// TargetEndpointTypeInput is an input type that accepts TargetEndpointTypeArgs and TargetEndpointTypeOutput values.
// You can construct a concrete instance of `TargetEndpointTypeInput` via:
//
//          TargetEndpointTypeArgs{...}
type TargetEndpointTypeInput interface {
	pulumi.Input

	ToTargetEndpointTypeOutput() TargetEndpointTypeOutput
	ToTargetEndpointTypeOutputWithContext(context.Context) TargetEndpointTypeOutput
}

type TargetEndpointTypeArgs struct {
	ApiVersion pulumi.StringPtrInput      `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput      `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput  `pulumi:"metadata"`
	Spec       TargetEndpointSpecPtrInput `pulumi:"spec"`
	Status     pulumi.MapInput            `pulumi:"status"`
}

func (TargetEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointType)(nil)).Elem()
}

func (i TargetEndpointTypeArgs) ToTargetEndpointTypeOutput() TargetEndpointTypeOutput {
	return i.ToTargetEndpointTypeOutputWithContext(context.Background())
}

func (i TargetEndpointTypeArgs) ToTargetEndpointTypeOutputWithContext(ctx context.Context) TargetEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointTypeOutput)
}

type TargetEndpointTypeOutput struct{ *pulumi.OutputState }

func (TargetEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointType)(nil)).Elem()
}

func (o TargetEndpointTypeOutput) ToTargetEndpointTypeOutput() TargetEndpointTypeOutput {
	return o
}

func (o TargetEndpointTypeOutput) ToTargetEndpointTypeOutputWithContext(ctx context.Context) TargetEndpointTypeOutput {
	return o
}

func (o TargetEndpointTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v TargetEndpointType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o TargetEndpointTypeOutput) Spec() TargetEndpointSpecPtrOutput {
	return o.ApplyT(func(v TargetEndpointType) *TargetEndpointSpec { return v.Spec }).(TargetEndpointSpecPtrOutput)
}

func (o TargetEndpointTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v TargetEndpointType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type TargetEndpointMetadata struct {
}

// TargetEndpointMetadataInput is an input type that accepts TargetEndpointMetadataArgs and TargetEndpointMetadataOutput values.
// You can construct a concrete instance of `TargetEndpointMetadataInput` via:
//
//          TargetEndpointMetadataArgs{...}
type TargetEndpointMetadataInput interface {
	pulumi.Input

	ToTargetEndpointMetadataOutput() TargetEndpointMetadataOutput
	ToTargetEndpointMetadataOutputWithContext(context.Context) TargetEndpointMetadataOutput
}

type TargetEndpointMetadataArgs struct {
}

func (TargetEndpointMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointMetadata)(nil)).Elem()
}

func (i TargetEndpointMetadataArgs) ToTargetEndpointMetadataOutput() TargetEndpointMetadataOutput {
	return i.ToTargetEndpointMetadataOutputWithContext(context.Background())
}

func (i TargetEndpointMetadataArgs) ToTargetEndpointMetadataOutputWithContext(ctx context.Context) TargetEndpointMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointMetadataOutput)
}

type TargetEndpointMetadataOutput struct{ *pulumi.OutputState }

func (TargetEndpointMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointMetadata)(nil)).Elem()
}

func (o TargetEndpointMetadataOutput) ToTargetEndpointMetadataOutput() TargetEndpointMetadataOutput {
	return o
}

func (o TargetEndpointMetadataOutput) ToTargetEndpointMetadataOutputWithContext(ctx context.Context) TargetEndpointMetadataOutput {
	return o
}

type TargetEndpointSpec struct {
	Deploy           TargetEndpointSpecDeploy            `pulumi:"deploy"`
	EndpointName     *string                             `pulumi:"endpointName"`
	EndpointSecurity *TargetEndpointSpecEndpointSecurity `pulumi:"endpointSecurity"`
	Hostname         *string                             `pulumi:"hostname"`
	Mode             *string                             `pulumi:"mode"`
	Port             int                                 `pulumi:"port"`
	Protocol         string                              `pulumi:"protocol"`
	TargetPort       int                                 `pulumi:"targetPort"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
	Type *string `pulumi:"type"`
}

// TargetEndpointSpecInput is an input type that accepts TargetEndpointSpecArgs and TargetEndpointSpecOutput values.
// You can construct a concrete instance of `TargetEndpointSpecInput` via:
//
//          TargetEndpointSpecArgs{...}
type TargetEndpointSpecInput interface {
	pulumi.Input

	ToTargetEndpointSpecOutput() TargetEndpointSpecOutput
	ToTargetEndpointSpecOutputWithContext(context.Context) TargetEndpointSpecOutput
}

type TargetEndpointSpecArgs struct {
	Deploy           TargetEndpointSpecDeployInput              `pulumi:"deploy"`
	EndpointName     pulumi.StringPtrInput                      `pulumi:"endpointName"`
	EndpointSecurity TargetEndpointSpecEndpointSecurityPtrInput `pulumi:"endpointSecurity"`
	Hostname         pulumi.StringPtrInput                      `pulumi:"hostname"`
	Mode             pulumi.StringPtrInput                      `pulumi:"mode"`
	Port             pulumi.IntInput                            `pulumi:"port"`
	Protocol         pulumi.StringInput                         `pulumi:"protocol"`
	TargetPort       pulumi.IntInput                            `pulumi:"targetPort"`
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TargetEndpointSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointSpec)(nil)).Elem()
}

func (i TargetEndpointSpecArgs) ToTargetEndpointSpecOutput() TargetEndpointSpecOutput {
	return i.ToTargetEndpointSpecOutputWithContext(context.Background())
}

func (i TargetEndpointSpecArgs) ToTargetEndpointSpecOutputWithContext(ctx context.Context) TargetEndpointSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecOutput)
}

func (i TargetEndpointSpecArgs) ToTargetEndpointSpecPtrOutput() TargetEndpointSpecPtrOutput {
	return i.ToTargetEndpointSpecPtrOutputWithContext(context.Background())
}

func (i TargetEndpointSpecArgs) ToTargetEndpointSpecPtrOutputWithContext(ctx context.Context) TargetEndpointSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecOutput).ToTargetEndpointSpecPtrOutputWithContext(ctx)
}

// TargetEndpointSpecPtrInput is an input type that accepts TargetEndpointSpecArgs, TargetEndpointSpecPtr and TargetEndpointSpecPtrOutput values.
// You can construct a concrete instance of `TargetEndpointSpecPtrInput` via:
//
//          TargetEndpointSpecArgs{...}
//
//  or:
//
//          nil
type TargetEndpointSpecPtrInput interface {
	pulumi.Input

	ToTargetEndpointSpecPtrOutput() TargetEndpointSpecPtrOutput
	ToTargetEndpointSpecPtrOutputWithContext(context.Context) TargetEndpointSpecPtrOutput
}

type targetEndpointSpecPtrType TargetEndpointSpecArgs

func TargetEndpointSpecPtr(v *TargetEndpointSpecArgs) TargetEndpointSpecPtrInput {
	return (*targetEndpointSpecPtrType)(v)
}

func (*targetEndpointSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEndpointSpec)(nil)).Elem()
}

func (i *targetEndpointSpecPtrType) ToTargetEndpointSpecPtrOutput() TargetEndpointSpecPtrOutput {
	return i.ToTargetEndpointSpecPtrOutputWithContext(context.Background())
}

func (i *targetEndpointSpecPtrType) ToTargetEndpointSpecPtrOutputWithContext(ctx context.Context) TargetEndpointSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecPtrOutput)
}

type TargetEndpointSpecOutput struct{ *pulumi.OutputState }

func (TargetEndpointSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointSpec)(nil)).Elem()
}

func (o TargetEndpointSpecOutput) ToTargetEndpointSpecOutput() TargetEndpointSpecOutput {
	return o
}

func (o TargetEndpointSpecOutput) ToTargetEndpointSpecOutputWithContext(ctx context.Context) TargetEndpointSpecOutput {
	return o
}

func (o TargetEndpointSpecOutput) ToTargetEndpointSpecPtrOutput() TargetEndpointSpecPtrOutput {
	return o.ToTargetEndpointSpecPtrOutputWithContext(context.Background())
}

func (o TargetEndpointSpecOutput) ToTargetEndpointSpecPtrOutputWithContext(ctx context.Context) TargetEndpointSpecPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpec) *TargetEndpointSpec {
		return &v
	}).(TargetEndpointSpecPtrOutput)
}
func (o TargetEndpointSpecOutput) Deploy() TargetEndpointSpecDeployOutput {
	return o.ApplyT(func(v TargetEndpointSpec) TargetEndpointSpecDeploy { return v.Deploy }).(TargetEndpointSpecDeployOutput)
}

func (o TargetEndpointSpecOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpec) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecOutput) EndpointSecurity() TargetEndpointSpecEndpointSecurityPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpec) *TargetEndpointSpecEndpointSecurity { return v.EndpointSecurity }).(TargetEndpointSpecEndpointSecurityPtrOutput)
}

func (o TargetEndpointSpecOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpec) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpec) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TargetEndpointSpec) int { return v.Port }).(pulumi.IntOutput)
}

func (o TargetEndpointSpecOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TargetEndpointSpec) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o TargetEndpointSpecOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v TargetEndpointSpec) int { return v.TargetPort }).(pulumi.IntOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
func (o TargetEndpointSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TargetEndpointSpecPtrOutput struct{ *pulumi.OutputState }

func (TargetEndpointSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEndpointSpec)(nil)).Elem()
}

func (o TargetEndpointSpecPtrOutput) ToTargetEndpointSpecPtrOutput() TargetEndpointSpecPtrOutput {
	return o
}

func (o TargetEndpointSpecPtrOutput) ToTargetEndpointSpecPtrOutputWithContext(ctx context.Context) TargetEndpointSpecPtrOutput {
	return o
}

func (o TargetEndpointSpecPtrOutput) Elem() TargetEndpointSpecOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) TargetEndpointSpec { return *v }).(TargetEndpointSpecOutput)
}

func (o TargetEndpointSpecPtrOutput) Deploy() TargetEndpointSpecDeployPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *TargetEndpointSpecDeploy {
		if v == nil {
			return nil
		}
		return &v.Deploy
	}).(TargetEndpointSpecDeployPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *string {
		if v == nil {
			return nil
		}
		return v.EndpointName
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) EndpointSecurity() TargetEndpointSpecEndpointSecurityPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *TargetEndpointSpecEndpointSecurity {
		if v == nil {
			return nil
		}
		return v.EndpointSecurity
	}).(TargetEndpointSpecEndpointSecurityPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *int {
		if v == nil {
			return nil
		}
		return &v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
func (o TargetEndpointSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type TargetEndpointSpecDeploy struct {
	CpuLimit    *string `pulumi:"cpuLimit"`
	DockerImage string  `pulumi:"dockerImage"`
	MaxReplicas *int    `pulumi:"maxReplicas"`
	MemoryLimit *string `pulumi:"memoryLimit"`
	MinReplicas *int    `pulumi:"minReplicas"`
	Name        string  `pulumi:"name"`
	ReqMemory   *string `pulumi:"reqMemory"`
	RequestCPU  *string `pulumi:"requestCPU"`
}

// TargetEndpointSpecDeployInput is an input type that accepts TargetEndpointSpecDeployArgs and TargetEndpointSpecDeployOutput values.
// You can construct a concrete instance of `TargetEndpointSpecDeployInput` via:
//
//          TargetEndpointSpecDeployArgs{...}
type TargetEndpointSpecDeployInput interface {
	pulumi.Input

	ToTargetEndpointSpecDeployOutput() TargetEndpointSpecDeployOutput
	ToTargetEndpointSpecDeployOutputWithContext(context.Context) TargetEndpointSpecDeployOutput
}

type TargetEndpointSpecDeployArgs struct {
	CpuLimit    pulumi.StringPtrInput `pulumi:"cpuLimit"`
	DockerImage pulumi.StringInput    `pulumi:"dockerImage"`
	MaxReplicas pulumi.IntPtrInput    `pulumi:"maxReplicas"`
	MemoryLimit pulumi.StringPtrInput `pulumi:"memoryLimit"`
	MinReplicas pulumi.IntPtrInput    `pulumi:"minReplicas"`
	Name        pulumi.StringInput    `pulumi:"name"`
	ReqMemory   pulumi.StringPtrInput `pulumi:"reqMemory"`
	RequestCPU  pulumi.StringPtrInput `pulumi:"requestCPU"`
}

func (TargetEndpointSpecDeployArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointSpecDeploy)(nil)).Elem()
}

func (i TargetEndpointSpecDeployArgs) ToTargetEndpointSpecDeployOutput() TargetEndpointSpecDeployOutput {
	return i.ToTargetEndpointSpecDeployOutputWithContext(context.Background())
}

func (i TargetEndpointSpecDeployArgs) ToTargetEndpointSpecDeployOutputWithContext(ctx context.Context) TargetEndpointSpecDeployOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecDeployOutput)
}

func (i TargetEndpointSpecDeployArgs) ToTargetEndpointSpecDeployPtrOutput() TargetEndpointSpecDeployPtrOutput {
	return i.ToTargetEndpointSpecDeployPtrOutputWithContext(context.Background())
}

func (i TargetEndpointSpecDeployArgs) ToTargetEndpointSpecDeployPtrOutputWithContext(ctx context.Context) TargetEndpointSpecDeployPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecDeployOutput).ToTargetEndpointSpecDeployPtrOutputWithContext(ctx)
}

// TargetEndpointSpecDeployPtrInput is an input type that accepts TargetEndpointSpecDeployArgs, TargetEndpointSpecDeployPtr and TargetEndpointSpecDeployPtrOutput values.
// You can construct a concrete instance of `TargetEndpointSpecDeployPtrInput` via:
//
//          TargetEndpointSpecDeployArgs{...}
//
//  or:
//
//          nil
type TargetEndpointSpecDeployPtrInput interface {
	pulumi.Input

	ToTargetEndpointSpecDeployPtrOutput() TargetEndpointSpecDeployPtrOutput
	ToTargetEndpointSpecDeployPtrOutputWithContext(context.Context) TargetEndpointSpecDeployPtrOutput
}

type targetEndpointSpecDeployPtrType TargetEndpointSpecDeployArgs

func TargetEndpointSpecDeployPtr(v *TargetEndpointSpecDeployArgs) TargetEndpointSpecDeployPtrInput {
	return (*targetEndpointSpecDeployPtrType)(v)
}

func (*targetEndpointSpecDeployPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEndpointSpecDeploy)(nil)).Elem()
}

func (i *targetEndpointSpecDeployPtrType) ToTargetEndpointSpecDeployPtrOutput() TargetEndpointSpecDeployPtrOutput {
	return i.ToTargetEndpointSpecDeployPtrOutputWithContext(context.Background())
}

func (i *targetEndpointSpecDeployPtrType) ToTargetEndpointSpecDeployPtrOutputWithContext(ctx context.Context) TargetEndpointSpecDeployPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecDeployPtrOutput)
}

type TargetEndpointSpecDeployOutput struct{ *pulumi.OutputState }

func (TargetEndpointSpecDeployOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointSpecDeploy)(nil)).Elem()
}

func (o TargetEndpointSpecDeployOutput) ToTargetEndpointSpecDeployOutput() TargetEndpointSpecDeployOutput {
	return o
}

func (o TargetEndpointSpecDeployOutput) ToTargetEndpointSpecDeployOutputWithContext(ctx context.Context) TargetEndpointSpecDeployOutput {
	return o
}

func (o TargetEndpointSpecDeployOutput) ToTargetEndpointSpecDeployPtrOutput() TargetEndpointSpecDeployPtrOutput {
	return o.ToTargetEndpointSpecDeployPtrOutputWithContext(context.Background())
}

func (o TargetEndpointSpecDeployOutput) ToTargetEndpointSpecDeployPtrOutputWithContext(ctx context.Context) TargetEndpointSpecDeployPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *TargetEndpointSpecDeploy {
		return &v
	}).(TargetEndpointSpecDeployPtrOutput)
}
func (o TargetEndpointSpecDeployOutput) CpuLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *string { return v.CpuLimit }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) string { return v.DockerImage }).(pulumi.StringOutput)
}

func (o TargetEndpointSpecDeployOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

func (o TargetEndpointSpecDeployOutput) MemoryLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *string { return v.MemoryLimit }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

func (o TargetEndpointSpecDeployOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) string { return v.Name }).(pulumi.StringOutput)
}

func (o TargetEndpointSpecDeployOutput) ReqMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *string { return v.ReqMemory }).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployOutput) RequestCPU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecDeploy) *string { return v.RequestCPU }).(pulumi.StringPtrOutput)
}

type TargetEndpointSpecDeployPtrOutput struct{ *pulumi.OutputState }

func (TargetEndpointSpecDeployPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEndpointSpecDeploy)(nil)).Elem()
}

func (o TargetEndpointSpecDeployPtrOutput) ToTargetEndpointSpecDeployPtrOutput() TargetEndpointSpecDeployPtrOutput {
	return o
}

func (o TargetEndpointSpecDeployPtrOutput) ToTargetEndpointSpecDeployPtrOutputWithContext(ctx context.Context) TargetEndpointSpecDeployPtrOutput {
	return o
}

func (o TargetEndpointSpecDeployPtrOutput) Elem() TargetEndpointSpecDeployOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) TargetEndpointSpecDeploy { return *v }).(TargetEndpointSpecDeployOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) CpuLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *string {
		if v == nil {
			return nil
		}
		return v.CpuLimit
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *string {
		if v == nil {
			return nil
		}
		return &v.DockerImage
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) MemoryLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *string {
		if v == nil {
			return nil
		}
		return v.MemoryLimit
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) ReqMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *string {
		if v == nil {
			return nil
		}
		return v.ReqMemory
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecDeployPtrOutput) RequestCPU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecDeploy) *string {
		if v == nil {
			return nil
		}
		return v.RequestCPU
	}).(pulumi.StringPtrOutput)
}

type TargetEndpointSpecEndpointSecurity struct {
	Password string `pulumi:"password"`
	Type     string `pulumi:"type"`
	Username string `pulumi:"username"`
}

// TargetEndpointSpecEndpointSecurityInput is an input type that accepts TargetEndpointSpecEndpointSecurityArgs and TargetEndpointSpecEndpointSecurityOutput values.
// You can construct a concrete instance of `TargetEndpointSpecEndpointSecurityInput` via:
//
//          TargetEndpointSpecEndpointSecurityArgs{...}
type TargetEndpointSpecEndpointSecurityInput interface {
	pulumi.Input

	ToTargetEndpointSpecEndpointSecurityOutput() TargetEndpointSpecEndpointSecurityOutput
	ToTargetEndpointSpecEndpointSecurityOutputWithContext(context.Context) TargetEndpointSpecEndpointSecurityOutput
}

type TargetEndpointSpecEndpointSecurityArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	Type     pulumi.StringInput `pulumi:"type"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (TargetEndpointSpecEndpointSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointSpecEndpointSecurity)(nil)).Elem()
}

func (i TargetEndpointSpecEndpointSecurityArgs) ToTargetEndpointSpecEndpointSecurityOutput() TargetEndpointSpecEndpointSecurityOutput {
	return i.ToTargetEndpointSpecEndpointSecurityOutputWithContext(context.Background())
}

func (i TargetEndpointSpecEndpointSecurityArgs) ToTargetEndpointSpecEndpointSecurityOutputWithContext(ctx context.Context) TargetEndpointSpecEndpointSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecEndpointSecurityOutput)
}

func (i TargetEndpointSpecEndpointSecurityArgs) ToTargetEndpointSpecEndpointSecurityPtrOutput() TargetEndpointSpecEndpointSecurityPtrOutput {
	return i.ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(context.Background())
}

func (i TargetEndpointSpecEndpointSecurityArgs) ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(ctx context.Context) TargetEndpointSpecEndpointSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecEndpointSecurityOutput).ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(ctx)
}

// TargetEndpointSpecEndpointSecurityPtrInput is an input type that accepts TargetEndpointSpecEndpointSecurityArgs, TargetEndpointSpecEndpointSecurityPtr and TargetEndpointSpecEndpointSecurityPtrOutput values.
// You can construct a concrete instance of `TargetEndpointSpecEndpointSecurityPtrInput` via:
//
//          TargetEndpointSpecEndpointSecurityArgs{...}
//
//  or:
//
//          nil
type TargetEndpointSpecEndpointSecurityPtrInput interface {
	pulumi.Input

	ToTargetEndpointSpecEndpointSecurityPtrOutput() TargetEndpointSpecEndpointSecurityPtrOutput
	ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(context.Context) TargetEndpointSpecEndpointSecurityPtrOutput
}

type targetEndpointSpecEndpointSecurityPtrType TargetEndpointSpecEndpointSecurityArgs

func TargetEndpointSpecEndpointSecurityPtr(v *TargetEndpointSpecEndpointSecurityArgs) TargetEndpointSpecEndpointSecurityPtrInput {
	return (*targetEndpointSpecEndpointSecurityPtrType)(v)
}

func (*targetEndpointSpecEndpointSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEndpointSpecEndpointSecurity)(nil)).Elem()
}

func (i *targetEndpointSpecEndpointSecurityPtrType) ToTargetEndpointSpecEndpointSecurityPtrOutput() TargetEndpointSpecEndpointSecurityPtrOutput {
	return i.ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(context.Background())
}

func (i *targetEndpointSpecEndpointSecurityPtrType) ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(ctx context.Context) TargetEndpointSpecEndpointSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointSpecEndpointSecurityPtrOutput)
}

type TargetEndpointSpecEndpointSecurityOutput struct{ *pulumi.OutputState }

func (TargetEndpointSpecEndpointSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointSpecEndpointSecurity)(nil)).Elem()
}

func (o TargetEndpointSpecEndpointSecurityOutput) ToTargetEndpointSpecEndpointSecurityOutput() TargetEndpointSpecEndpointSecurityOutput {
	return o
}

func (o TargetEndpointSpecEndpointSecurityOutput) ToTargetEndpointSpecEndpointSecurityOutputWithContext(ctx context.Context) TargetEndpointSpecEndpointSecurityOutput {
	return o
}

func (o TargetEndpointSpecEndpointSecurityOutput) ToTargetEndpointSpecEndpointSecurityPtrOutput() TargetEndpointSpecEndpointSecurityPtrOutput {
	return o.ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(context.Background())
}

func (o TargetEndpointSpecEndpointSecurityOutput) ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(ctx context.Context) TargetEndpointSpecEndpointSecurityPtrOutput {
	return o.ApplyT(func(v TargetEndpointSpecEndpointSecurity) *TargetEndpointSpecEndpointSecurity {
		return &v
	}).(TargetEndpointSpecEndpointSecurityPtrOutput)
}
func (o TargetEndpointSpecEndpointSecurityOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v TargetEndpointSpecEndpointSecurity) string { return v.Password }).(pulumi.StringOutput)
}

func (o TargetEndpointSpecEndpointSecurityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TargetEndpointSpecEndpointSecurity) string { return v.Type }).(pulumi.StringOutput)
}

func (o TargetEndpointSpecEndpointSecurityOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v TargetEndpointSpecEndpointSecurity) string { return v.Username }).(pulumi.StringOutput)
}

type TargetEndpointSpecEndpointSecurityPtrOutput struct{ *pulumi.OutputState }

func (TargetEndpointSpecEndpointSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetEndpointSpecEndpointSecurity)(nil)).Elem()
}

func (o TargetEndpointSpecEndpointSecurityPtrOutput) ToTargetEndpointSpecEndpointSecurityPtrOutput() TargetEndpointSpecEndpointSecurityPtrOutput {
	return o
}

func (o TargetEndpointSpecEndpointSecurityPtrOutput) ToTargetEndpointSpecEndpointSecurityPtrOutputWithContext(ctx context.Context) TargetEndpointSpecEndpointSecurityPtrOutput {
	return o
}

func (o TargetEndpointSpecEndpointSecurityPtrOutput) Elem() TargetEndpointSpecEndpointSecurityOutput {
	return o.ApplyT(func(v *TargetEndpointSpecEndpointSecurity) TargetEndpointSpecEndpointSecurity { return *v }).(TargetEndpointSpecEndpointSecurityOutput)
}

func (o TargetEndpointSpecEndpointSecurityPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecEndpointSecurity) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecEndpointSecurityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecEndpointSecurity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o TargetEndpointSpecEndpointSecurityPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetEndpointSpecEndpointSecurity) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type TargetEndpointStatus struct {
}

// TargetEndpointStatusInput is an input type that accepts TargetEndpointStatusArgs and TargetEndpointStatusOutput values.
// You can construct a concrete instance of `TargetEndpointStatusInput` via:
//
//          TargetEndpointStatusArgs{...}
type TargetEndpointStatusInput interface {
	pulumi.Input

	ToTargetEndpointStatusOutput() TargetEndpointStatusOutput
	ToTargetEndpointStatusOutputWithContext(context.Context) TargetEndpointStatusOutput
}

type TargetEndpointStatusArgs struct {
}

func (TargetEndpointStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointStatus)(nil)).Elem()
}

func (i TargetEndpointStatusArgs) ToTargetEndpointStatusOutput() TargetEndpointStatusOutput {
	return i.ToTargetEndpointStatusOutputWithContext(context.Background())
}

func (i TargetEndpointStatusArgs) ToTargetEndpointStatusOutputWithContext(ctx context.Context) TargetEndpointStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetEndpointStatusOutput)
}

type TargetEndpointStatusOutput struct{ *pulumi.OutputState }

func (TargetEndpointStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetEndpointStatus)(nil)).Elem()
}

func (o TargetEndpointStatusOutput) ToTargetEndpointStatusOutput() TargetEndpointStatusOutput {
	return o
}

func (o TargetEndpointStatusOutput) ToTargetEndpointStatusOutputWithContext(ctx context.Context) TargetEndpointStatusOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(APITypeOutput{})
	pulumi.RegisterOutputType(APIMetadataOutput{})
	pulumi.RegisterOutputType(APISpecOutput{})
	pulumi.RegisterOutputType(APISpecPtrOutput{})
	pulumi.RegisterOutputType(APISpecDefinitionOutput{})
	pulumi.RegisterOutputType(APISpecDefinitionPtrOutput{})
	pulumi.RegisterOutputType(APISpecDefinitionInterceptorsOutput{})
	pulumi.RegisterOutputType(APISpecDefinitionInterceptorsPtrOutput{})
	pulumi.RegisterOutputType(APIStatusOutput{})
	pulumi.RegisterOutputType(RateLimitingTypeOutput{})
	pulumi.RegisterOutputType(RateLimitingMetadataOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecPtrOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecBandwidthOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecBandwidthPtrOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecConditionsOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecConditionsPtrOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecConditionsHeaderConditionOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecConditionsHeaderConditionPtrOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecConditionsIpConditionOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecConditionsIpConditionPtrOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecRequestCountOutput{})
	pulumi.RegisterOutputType(RateLimitingSpecRequestCountPtrOutput{})
	pulumi.RegisterOutputType(RateLimitingStatusOutput{})
	pulumi.RegisterOutputType(SecurityTypeOutput{})
	pulumi.RegisterOutputType(SecurityMetadataOutput{})
	pulumi.RegisterOutputType(SecuritySpecOutput{})
	pulumi.RegisterOutputType(SecuritySpecPtrOutput{})
	pulumi.RegisterOutputType(SecuritySpecSecurityConfigOutput{})
	pulumi.RegisterOutputType(SecuritySpecSecurityConfigArrayOutput{})
	pulumi.RegisterOutputType(SecurityStatusOutput{})
	pulumi.RegisterOutputType(TargetEndpointTypeOutput{})
	pulumi.RegisterOutputType(TargetEndpointMetadataOutput{})
	pulumi.RegisterOutputType(TargetEndpointSpecOutput{})
	pulumi.RegisterOutputType(TargetEndpointSpecPtrOutput{})
	pulumi.RegisterOutputType(TargetEndpointSpecDeployOutput{})
	pulumi.RegisterOutputType(TargetEndpointSpecDeployPtrOutput{})
	pulumi.RegisterOutputType(TargetEndpointSpecEndpointSecurityOutput{})
	pulumi.RegisterOutputType(TargetEndpointSpecEndpointSecurityPtrOutput{})
	pulumi.RegisterOutputType(TargetEndpointStatusOutput{})
}
