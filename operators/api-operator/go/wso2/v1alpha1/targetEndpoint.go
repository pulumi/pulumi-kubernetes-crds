// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TargetEndpoint struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput      `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput      `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput  `pulumi:"metadata"`
	Spec       TargetEndpointSpecPtrOutput `pulumi:"spec"`
	Status     pulumi.MapOutput            `pulumi:"status"`
}

// NewTargetEndpoint registers a new resource with the given unique name, arguments, and options.
func NewTargetEndpoint(ctx *pulumi.Context,
	name string, args *TargetEndpointArgs, opts ...pulumi.ResourceOption) (*TargetEndpoint, error) {
	if args == nil {
		args = &TargetEndpointArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("wso2.com/v1alpha1")
	args.Kind = pulumi.StringPtr("TargetEndpoint")
	var resource TargetEndpoint
	err := ctx.RegisterResource("kubernetes:wso2.com/v1alpha1:TargetEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetEndpoint gets an existing TargetEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetEndpointState, opts ...pulumi.ResourceOption) (*TargetEndpoint, error) {
	var resource TargetEndpoint
	err := ctx.ReadResource("kubernetes:wso2.com/v1alpha1:TargetEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetEndpoint resources.
type targetEndpointState struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *TargetEndpointSpec    `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

type TargetEndpointState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       TargetEndpointSpecPtrInput
	Status     pulumi.MapInput
}

func (TargetEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetEndpointState)(nil)).Elem()
}

type targetEndpointArgs struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *TargetEndpointSpec    `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// The set of arguments for constructing a TargetEndpoint resource.
type TargetEndpointArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       TargetEndpointSpecPtrInput
	Status     pulumi.MapInput
}

func (TargetEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetEndpointArgs)(nil)).Elem()
}
