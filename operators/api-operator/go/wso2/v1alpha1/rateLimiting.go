// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// RateLimiting is the Schema for the ratelimitings API
type RateLimiting struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// RateLimitingSpec defines the desired state of RateLimiting
	Spec RateLimitingSpecPtrOutput `pulumi:"spec"`
}

// NewRateLimiting registers a new resource with the given unique name, arguments, and options.
func NewRateLimiting(ctx *pulumi.Context,
	name string, args *RateLimitingArgs, opts ...pulumi.ResourceOption) (*RateLimiting, error) {
	if args == nil {
		args = &RateLimitingArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("wso2.com/v1alpha1")
	args.Kind = pulumi.StringPtr("RateLimiting")
	var resource RateLimiting
	err := ctx.RegisterResource("kubernetes:wso2.com/v1alpha1:RateLimiting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRateLimiting gets an existing RateLimiting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRateLimiting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RateLimitingState, opts ...pulumi.ResourceOption) (*RateLimiting, error) {
	var resource RateLimiting
	err := ctx.ReadResource("kubernetes:wso2.com/v1alpha1:RateLimiting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RateLimiting resources.
type rateLimitingState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// RateLimitingSpec defines the desired state of RateLimiting
	Spec *RateLimitingSpec `pulumi:"spec"`
}

type RateLimitingState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// RateLimitingSpec defines the desired state of RateLimiting
	Spec RateLimitingSpecPtrInput
}

func (RateLimitingState) ElementType() reflect.Type {
	return reflect.TypeOf((*rateLimitingState)(nil)).Elem()
}

type rateLimitingArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// RateLimitingSpec defines the desired state of RateLimiting
	Spec *RateLimitingSpec `pulumi:"spec"`
}

// The set of arguments for constructing a RateLimiting resource.
type RateLimitingArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// RateLimitingSpec defines the desired state of RateLimiting
	Spec RateLimitingSpecPtrInput
}

func (RateLimitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rateLimitingArgs)(nil)).Elem()
}
