// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// PrometheusRule defines alerting rules for a Prometheus instance
type PrometheusRule struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Specification of desired alerting rule definitions for Prometheus.
	Spec PrometheusRuleSpecOutput `pulumi:"spec"`
}

// NewPrometheusRule registers a new resource with the given unique name, arguments, and options.
func NewPrometheusRule(ctx *pulumi.Context,
	name string, args *PrometheusRuleArgs, opts ...pulumi.ResourceOption) (*PrometheusRule, error) {
	if args == nil {
		args = &PrometheusRuleArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1")
	args.Kind = pulumi.StringPtr("PrometheusRule")
	var resource PrometheusRule
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1:PrometheusRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrometheusRule gets an existing PrometheusRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrometheusRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrometheusRuleState, opts ...pulumi.ResourceOption) (*PrometheusRule, error) {
	var resource PrometheusRule
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1:PrometheusRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrometheusRule resources.
type prometheusRuleState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of desired alerting rule definitions for Prometheus.
	Spec *PrometheusRuleSpec `pulumi:"spec"`
}

type PrometheusRuleState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of desired alerting rule definitions for Prometheus.
	Spec PrometheusRuleSpecPtrInput
}

func (PrometheusRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*prometheusRuleState)(nil)).Elem()
}

type prometheusRuleArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of desired alerting rule definitions for Prometheus.
	Spec *PrometheusRuleSpec `pulumi:"spec"`
}

// The set of arguments for constructing a PrometheusRule resource.
type PrometheusRuleArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of desired alerting rule definitions for Prometheus.
	Spec PrometheusRuleSpecPtrInput
}

func (PrometheusRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*prometheusRuleArgs)(nil)).Elem()
}
