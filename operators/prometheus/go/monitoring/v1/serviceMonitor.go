// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ServiceMonitor defines monitoring for a set of services.
type ServiceMonitor struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Specification of desired Service selection for target discovery by Prometheus.
	Spec ServiceMonitorSpecOutput `pulumi:"spec"`
}

// NewServiceMonitor registers a new resource with the given unique name, arguments, and options.
func NewServiceMonitor(ctx *pulumi.Context,
	name string, args *ServiceMonitorArgs, opts ...pulumi.ResourceOption) (*ServiceMonitor, error) {
	if args == nil {
		args = &ServiceMonitorArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1")
	args.Kind = pulumi.StringPtr("ServiceMonitor")
	var resource ServiceMonitor
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1:ServiceMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceMonitor gets an existing ServiceMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceMonitorState, opts ...pulumi.ResourceOption) (*ServiceMonitor, error) {
	var resource ServiceMonitor
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1:ServiceMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceMonitor resources.
type serviceMonitorState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of desired Service selection for target discovery by Prometheus.
	Spec *ServiceMonitorSpec `pulumi:"spec"`
}

type ServiceMonitorState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of desired Service selection for target discovery by Prometheus.
	Spec ServiceMonitorSpecPtrInput
}

func (ServiceMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMonitorState)(nil)).Elem()
}

type serviceMonitorArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of desired Service selection for target discovery by Prometheus.
	Spec *ServiceMonitorSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ServiceMonitor resource.
type ServiceMonitorArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of desired Service selection for target discovery by Prometheus.
	Spec ServiceMonitorSpecPtrInput
}

func (ServiceMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMonitorArgs)(nil)).Elem()
}
