// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ThanosRuler defines a ThanosRuler deployment.
type ThanosRuler struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec ThanosRulerSpecOutput `pulumi:"spec"`
	// Most recent observed status of the ThanosRuler cluster. Read-only. Not included when requesting from the apiserver, only from the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status ThanosRulerStatusPtrOutput `pulumi:"status"`
}

// NewThanosRuler registers a new resource with the given unique name, arguments, and options.
func NewThanosRuler(ctx *pulumi.Context,
	name string, args *ThanosRulerArgs, opts ...pulumi.ResourceOption) (*ThanosRuler, error) {
	if args == nil {
		args = &ThanosRulerArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1")
	args.Kind = pulumi.StringPtr("ThanosRuler")
	var resource ThanosRuler
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1:ThanosRuler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThanosRuler gets an existing ThanosRuler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThanosRuler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThanosRulerState, opts ...pulumi.ResourceOption) (*ThanosRuler, error) {
	var resource ThanosRuler
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1:ThanosRuler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThanosRuler resources.
type thanosRulerState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *ThanosRulerSpec `pulumi:"spec"`
	// Most recent observed status of the ThanosRuler cluster. Read-only. Not included when requesting from the apiserver, only from the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status *ThanosRulerStatus `pulumi:"status"`
}

type ThanosRulerState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec ThanosRulerSpecPtrInput
	// Most recent observed status of the ThanosRuler cluster. Read-only. Not included when requesting from the apiserver, only from the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status ThanosRulerStatusPtrInput
}

func (ThanosRulerState) ElementType() reflect.Type {
	return reflect.TypeOf((*thanosRulerState)(nil)).Elem()
}

type thanosRulerArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *ThanosRulerSpec `pulumi:"spec"`
	// Most recent observed status of the ThanosRuler cluster. Read-only. Not included when requesting from the apiserver, only from the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status *ThanosRulerStatus `pulumi:"status"`
}

// The set of arguments for constructing a ThanosRuler resource.
type ThanosRulerArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec ThanosRulerSpecPtrInput
	// Most recent observed status of the ThanosRuler cluster. Read-only. Not included when requesting from the apiserver, only from the ThanosRuler Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status ThanosRulerStatusPtrInput
}

func (ThanosRulerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thanosRulerArgs)(nil)).Elem()
}
