// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Monitoring.V1
{

    /// <summary>
    /// QueueConfig allows tuning of the remote write queue parameters.
    /// </summary>
    public class PrometheusSpecRemoteWriteQueueConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// BatchSendDeadline is the maximum time a sample will wait in buffer.
        /// </summary>
        [Input("batchSendDeadline")]
        public Input<string>? BatchSendDeadline { get; set; }

        /// <summary>
        /// Capacity is the number of samples to buffer per shard before we start dropping them.
        /// </summary>
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// MaxBackoff is the maximum retry delay.
        /// </summary>
        [Input("maxBackoff")]
        public Input<string>? MaxBackoff { get; set; }

        /// <summary>
        /// MaxRetries is the maximum number of times to retry a batch on recoverable errors.
        /// </summary>
        [Input("maxRetries")]
        public Input<int>? MaxRetries { get; set; }

        /// <summary>
        /// MaxSamplesPerSend is the maximum number of samples per send.
        /// </summary>
        [Input("maxSamplesPerSend")]
        public Input<int>? MaxSamplesPerSend { get; set; }

        /// <summary>
        /// MaxShards is the maximum number of shards, i.e. amount of concurrency.
        /// </summary>
        [Input("maxShards")]
        public Input<int>? MaxShards { get; set; }

        /// <summary>
        /// MinBackoff is the initial retry delay. Gets doubled for every retry.
        /// </summary>
        [Input("minBackoff")]
        public Input<string>? MinBackoff { get; set; }

        /// <summary>
        /// MinShards is the minimum number of shards, i.e. amount of concurrency.
        /// </summary>
        [Input("minShards")]
        public Input<int>? MinShards { get; set; }

        public PrometheusSpecRemoteWriteQueueConfigArgs()
        {
        }
    }
}
