// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Monitoring.V1
{

    [OutputType]
    public sealed class PrometheusSpecQuery
    {
        /// <summary>
        /// The delta difference allowed for retrieving metrics during expression evaluations.
        /// </summary>
        public readonly string LookbackDelta;
        /// <summary>
        /// Number of concurrent queries that can be run at once.
        /// </summary>
        public readonly int MaxConcurrency;
        /// <summary>
        /// Maximum number of samples a single query can load into memory. Note that queries will fail if they would load more samples than this into memory, so this also limits the number of samples a query can return.
        /// </summary>
        public readonly int MaxSamples;
        /// <summary>
        /// Maximum time a query may take before being aborted.
        /// </summary>
        public readonly string Timeout;

        [OutputConstructor]
        private PrometheusSpecQuery(
            string lookbackDelta,

            int maxConcurrency,

            int maxSamples,

            string timeout)
        {
            LookbackDelta = lookbackDelta;
            MaxConcurrency = maxConcurrency;
            MaxSamples = maxSamples;
            Timeout = timeout;
        }
    }
}
