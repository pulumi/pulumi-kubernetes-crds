// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Monitoring.V1
{

    /// <summary>
    /// QuerySpec defines the query command line flags when starting Prometheus.
    /// </summary>
    public class PrometheusSpecQueryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The delta difference allowed for retrieving metrics during expression evaluations.
        /// </summary>
        [Input("lookbackDelta")]
        public Input<string>? LookbackDelta { get; set; }

        /// <summary>
        /// Number of concurrent queries that can be run at once.
        /// </summary>
        [Input("maxConcurrency")]
        public Input<int>? MaxConcurrency { get; set; }

        /// <summary>
        /// Maximum number of samples a single query can load into memory. Note that queries will fail if they would load more samples than this into memory, so this also limits the number of samples a query can return.
        /// </summary>
        [Input("maxSamples")]
        public Input<int>? MaxSamples { get; set; }

        /// <summary>
        /// Maximum time a query may take before being aborted.
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        public PrometheusSpecQueryArgs()
        {
        }
    }
}
