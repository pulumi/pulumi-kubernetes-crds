// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Monitoring.V1
{

    [OutputType]
    public sealed class PrometheusSpecRemoteWriteQueueConfig
    {
        /// <summary>
        /// BatchSendDeadline is the maximum time a sample will wait in buffer.
        /// </summary>
        public readonly string BatchSendDeadline;
        /// <summary>
        /// Capacity is the number of samples to buffer per shard before we start dropping them.
        /// </summary>
        public readonly int Capacity;
        /// <summary>
        /// MaxBackoff is the maximum retry delay.
        /// </summary>
        public readonly string MaxBackoff;
        /// <summary>
        /// MaxRetries is the maximum number of times to retry a batch on recoverable errors.
        /// </summary>
        public readonly int MaxRetries;
        /// <summary>
        /// MaxSamplesPerSend is the maximum number of samples per send.
        /// </summary>
        public readonly int MaxSamplesPerSend;
        /// <summary>
        /// MaxShards is the maximum number of shards, i.e. amount of concurrency.
        /// </summary>
        public readonly int MaxShards;
        /// <summary>
        /// MinBackoff is the initial retry delay. Gets doubled for every retry.
        /// </summary>
        public readonly string MinBackoff;
        /// <summary>
        /// MinShards is the minimum number of shards, i.e. amount of concurrency.
        /// </summary>
        public readonly int MinShards;

        [OutputConstructor]
        private PrometheusSpecRemoteWriteQueueConfig(
            string batchSendDeadline,

            int capacity,

            string maxBackoff,

            int maxRetries,

            int maxSamplesPerSend,

            int maxShards,

            string minBackoff,

            int minShards)
        {
            BatchSendDeadline = batchSendDeadline;
            Capacity = capacity;
            MaxBackoff = maxBackoff;
            MaxRetries = maxRetries;
            MaxSamplesPerSend = maxSamplesPerSend;
            MaxShards = maxShards;
            MinBackoff = minBackoff;
            MinShards = minShards;
        }
    }
}
