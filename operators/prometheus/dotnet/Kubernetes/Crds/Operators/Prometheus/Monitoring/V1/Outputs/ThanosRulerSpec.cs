// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Monitoring.V1
{

    [OutputType]
    public sealed class ThanosRulerSpec
    {
        /// <summary>
        /// If specified, the pod's scheduling constraints.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecAffinity Affinity;
        /// <summary>
        /// AlertDropLabels configure the label names which should be dropped in ThanosRuler alerts. If `labels` field is not provided, `thanos_ruler_replica` will be dropped in alerts by default.
        /// </summary>
        public readonly ImmutableArray<string> AlertDropLabels;
        /// <summary>
        /// Define configuration for connecting to alertmanager.  Only available with thanos v0.10.0 and higher.  Maps to the `alertmanagers.config` arg.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecAlertmanagersConfig AlertmanagersConfig;
        /// <summary>
        /// Define URL to send alerts to alertmanager.  For Thanos v0.10.0 and higher, AlertManagersConfig should be used instead. Maps to the `alertmanagers.url` arg.
        /// </summary>
        public readonly string AlertmanagersUrl;
        /// <summary>
        /// Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a ThanosRuler pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `thanos-ruler` and `rules-configmap-reloader`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecContainers> Containers;
        /// <summary>
        /// EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.
        /// </summary>
        public readonly string EnforcedNamespaceLabel;
        /// <summary>
        /// Interval between consecutive evaluations.
        /// </summary>
        public readonly string EvaluationInterval;
        /// <summary>
        /// The external URL the Thanos Ruler instances will be available under. This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name.
        /// </summary>
        public readonly string ExternalPrefix;
        /// <summary>
        /// Thanos container image URL.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// An optional list of references to secrets in the same namespace to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecImagePullSecrets> ImagePullSecrets;
        /// <summary>
        /// InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the ThanosRuler configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecInitContainers> InitContainers;
        /// <summary>
        /// Labels configure the external label pairs to ThanosRuler. If not provided, default replica label `thanos_ruler_replica` will be added as a label and be dropped in alerts.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// ListenLocal makes the Thanos ruler listen on loopback, so that it does not bind against the Pod IP.
        /// </summary>
        public readonly bool ListenLocal;
        /// <summary>
        /// Log format for ThanosRuler to be configured with.
        /// </summary>
        public readonly string LogFormat;
        /// <summary>
        /// Log level for ThanosRuler to be configured with.
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// Define which Nodes the Pods are scheduled on.
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// ObjectStorageConfig configures object storage in Thanos.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecObjectStorageConfig ObjectStorageConfig;
        /// <summary>
        /// When a ThanosRuler deployment is paused, no actions except for deletion will be performed on the underlying objects.
        /// </summary>
        public readonly bool Paused;
        /// <summary>
        /// PodMetadata contains Labels and Annotations gets propagated to the thanos ruler pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecPodMetadata PodMetadata;
        /// <summary>
        /// Port name used for the pods and governing service. This defaults to web
        /// </summary>
        public readonly string PortName;
        /// <summary>
        /// Priority class assigned to the Pods
        /// </summary>
        public readonly string PriorityClassName;
        /// <summary>
        /// Define configuration for connecting to thanos query instances. If this is defined, the QueryEndpoints field will be ignored. Maps to the `query.config` CLI argument. Only available with thanos v0.11.0 and higher.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecQueryConfig QueryConfig;
        /// <summary>
        /// QueryEndpoints defines Thanos querier endpoints from which to query metrics. Maps to the --query flag of thanos ruler.
        /// </summary>
        public readonly ImmutableArray<string> QueryEndpoints;
        /// <summary>
        /// Number of thanos ruler instances to deploy.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// Resources defines the resource requirements for single Pods. If not provided, no requests/limits will be set
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecResources Resources;
        /// <summary>
        /// Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// The route prefix ThanosRuler registers HTTP handlers for. This allows thanos UI to be served on a sub-path.
        /// </summary>
        public readonly string RoutePrefix;
        /// <summary>
        /// Namespaces to be selected for Rules discovery. If unspecified, only the same namespace as the ThanosRuler object is in is used.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecRuleNamespaceSelector RuleNamespaceSelector;
        /// <summary>
        /// A label selector to select which PrometheusRules to mount for alerting and recording.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecRuleSelector RuleSelector;
        /// <summary>
        /// SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecSecurityContext SecurityContext;
        /// <summary>
        /// ServiceAccountName is the name of the ServiceAccount to use to run the Thanos Ruler Pods.
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// Storage spec to specify how storage shall be used.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecStorage Storage;
        /// <summary>
        /// If specified, the pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecTolerations> Tolerations;
        /// <summary>
        /// TracingConfig configures tracing in Thanos. This is an experimental feature, it may change in any upcoming release in a breaking way.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecTracingConfig TracingConfig;
        /// <summary>
        /// Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecVolumes> Volumes;

        [OutputConstructor]
        private ThanosRulerSpec(
            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecAffinity affinity,

            ImmutableArray<string> alertDropLabels,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecAlertmanagersConfig alertmanagersConfig,

            string alertmanagersUrl,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecContainers> containers,

            string enforcedNamespaceLabel,

            string evaluationInterval,

            string externalPrefix,

            string image,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecImagePullSecrets> imagePullSecrets,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecInitContainers> initContainers,

            ImmutableDictionary<string, string> labels,

            bool listenLocal,

            string logFormat,

            string logLevel,

            ImmutableDictionary<string, string> nodeSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecObjectStorageConfig objectStorageConfig,

            bool paused,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecPodMetadata podMetadata,

            string portName,

            string priorityClassName,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecQueryConfig queryConfig,

            ImmutableArray<string> queryEndpoints,

            int replicas,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecResources resources,

            string retention,

            string routePrefix,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecRuleNamespaceSelector ruleNamespaceSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecRuleSelector ruleSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecSecurityContext securityContext,

            string serviceAccountName,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecStorage storage,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecTolerations> tolerations,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecTracingConfig tracingConfig,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.ThanosRulerSpecVolumes> volumes)
        {
            Affinity = affinity;
            AlertDropLabels = alertDropLabels;
            AlertmanagersConfig = alertmanagersConfig;
            AlertmanagersUrl = alertmanagersUrl;
            Containers = containers;
            EnforcedNamespaceLabel = enforcedNamespaceLabel;
            EvaluationInterval = evaluationInterval;
            ExternalPrefix = externalPrefix;
            Image = image;
            ImagePullSecrets = imagePullSecrets;
            InitContainers = initContainers;
            Labels = labels;
            ListenLocal = listenLocal;
            LogFormat = logFormat;
            LogLevel = logLevel;
            NodeSelector = nodeSelector;
            ObjectStorageConfig = objectStorageConfig;
            Paused = paused;
            PodMetadata = podMetadata;
            PortName = portName;
            PriorityClassName = priorityClassName;
            QueryConfig = queryConfig;
            QueryEndpoints = queryEndpoints;
            Replicas = replicas;
            Resources = resources;
            Retention = retention;
            RoutePrefix = routePrefix;
            RuleNamespaceSelector = ruleNamespaceSelector;
            RuleSelector = ruleSelector;
            SecurityContext = securityContext;
            ServiceAccountName = serviceAccountName;
            Storage = storage;
            Tolerations = tolerations;
            TracingConfig = tracingConfig;
            Volumes = volumes;
        }
    }
}
