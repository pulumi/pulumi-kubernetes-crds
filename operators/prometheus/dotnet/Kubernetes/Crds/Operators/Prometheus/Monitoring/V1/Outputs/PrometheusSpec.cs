// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Monitoring.V1
{

    [OutputType]
    public sealed class PrometheusSpec
    {
        /// <summary>
        /// AdditionalAlertManagerConfigs allows specifying a key of a Secret containing additional Prometheus AlertManager configurations. AlertManager configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config. As AlertManager configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAdditionalAlertManagerConfigs AdditionalAlertManagerConfigs;
        /// <summary>
        /// AdditionalAlertRelabelConfigs allows specifying a key of a Secret containing additional Prometheus alert relabel configurations. Alert relabel configurations specified are appended to the configurations generated by the Prometheus Operator. Alert relabel configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs. As alert relabel configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel configs are going to break Prometheus after the upgrade.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAdditionalAlertRelabelConfigs AdditionalAlertRelabelConfigs;
        /// <summary>
        /// AdditionalScrapeConfigs allows specifying a key of a Secret containing additional Prometheus scrape configurations. Scrape configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible scrape configs are going to break Prometheus after the upgrade.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAdditionalScrapeConfigs AdditionalScrapeConfigs;
        /// <summary>
        /// If specified, the pod's scheduling constraints.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAffinity Affinity;
        /// <summary>
        /// Define details regarding alerting.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAlerting Alerting;
        /// <summary>
        /// APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, Prometheus is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecApiserverConfig ApiserverConfig;
        /// <summary>
        /// ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files on the file system of the Prometheus container e.g. bearer token files.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecArbitraryFSAccessThroughSMs ArbitraryFSAccessThroughSMs;
        /// <summary>
        /// Base image to use for a Prometheus deployment.
        /// </summary>
        public readonly string BaseImage;
        /// <summary>
        /// ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/&lt;configmap-name&gt;.
        /// </summary>
        public readonly ImmutableArray<string> ConfigMaps;
        /// <summary>
        /// Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a Prometheus pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `prometheus`, `prometheus-config-reloader`, `rules-configmap-reloader`, and `thanos-sidecar`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecContainers> Containers;
        /// <summary>
        /// Disable prometheus compaction.
        /// </summary>
        public readonly bool DisableCompaction;
        /// <summary>
        /// Enable access to prometheus web admin API. Defaults to the value of `false`. WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis
        /// </summary>
        public readonly bool EnableAdminAPI;
        /// <summary>
        /// EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.
        /// </summary>
        public readonly string EnforcedNamespaceLabel;
        /// <summary>
        /// Interval between consecutive evaluations.
        /// </summary>
        public readonly string EvaluationInterval;
        /// <summary>
        /// The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager).
        /// </summary>
        public readonly ImmutableDictionary<string, string> ExternalLabels;
        /// <summary>
        /// The external URL the Prometheus instances will be available under. This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name.
        /// </summary>
        public readonly string ExternalUrl;
        /// <summary>
        /// IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from the podmonitor and servicemonitor configs, and they will only discover endpoints within their current namespace.  Defaults to false.
        /// </summary>
        public readonly bool IgnoreNamespaceSelectors;
        /// <summary>
        /// Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Prometheus is being configured.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecImagePullSecrets> ImagePullSecrets;
        /// <summary>
        /// InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecInitContainers> InitContainers;
        /// <summary>
        /// ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.
        /// </summary>
        public readonly bool ListenLocal;
        /// <summary>
        /// Log format for Prometheus to be configured with.
        /// </summary>
        public readonly string LogFormat;
        /// <summary>
        /// Log level for Prometheus to be configured with.
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// Define which Nodes the Pods are scheduled on.
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// OverrideHonorLabels if set to true overrides all user configured honor_labels. If HonorLabels is set in ServiceMonitor or PodMonitor to true, this overrides honor_labels to false.
        /// </summary>
        public readonly bool OverrideHonorLabels;
        /// <summary>
        /// OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.
        /// </summary>
        public readonly bool OverrideHonorTimestamps;
        /// <summary>
        /// When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.
        /// </summary>
        public readonly bool Paused;
        /// <summary>
        /// PodMetadata configures Labels and Annotations which are propagated to the prometheus pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecPodMetadata PodMetadata;
        /// <summary>
        /// Namespaces to be selected for PodMonitor discovery. If nil, only check own namespace.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecPodMonitorNamespaceSelector PodMonitorNamespaceSelector;
        /// <summary>
        /// *Experimental* PodMonitors to be selected for target discovery.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecPodMonitorSelector PodMonitorSelector;
        /// <summary>
        /// Port name used for the pods and governing service. This defaults to web
        /// </summary>
        public readonly string PortName;
        /// <summary>
        /// Priority class assigned to the Pods
        /// </summary>
        public readonly string PriorityClassName;
        /// <summary>
        /// Name of Prometheus external label used to denote Prometheus instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`""`).
        /// </summary>
        public readonly string PrometheusExternalLabelName;
        /// <summary>
        /// QuerySpec defines the query command line flags when starting Prometheus.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecQuery Query;
        /// <summary>
        /// If specified, the remote_read spec. This is an experimental feature, it may change in any upcoming release in a breaking way.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRemoteRead> RemoteRead;
        /// <summary>
        /// If specified, the remote_write spec. This is an experimental feature, it may change in any upcoming release in a breaking way.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRemoteWrite> RemoteWrite;
        /// <summary>
        /// Name of Prometheus external label used to denote replica name. Defaults to the value of `prometheus_replica`. External label will _not_ be added when value is set to empty string (`""`).
        /// </summary>
        public readonly string ReplicaExternalLabelName;
        /// <summary>
        /// Number of instances to deploy for a Prometheus deployment.
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// Define resources requests and limits for single Pods.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecResources Resources;
        /// <summary>
        /// Time duration Prometheus shall retain data for. Default is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// Maximum amount of disk space used by blocks.
        /// </summary>
        public readonly string RetentionSize;
        /// <summary>
        /// The route prefix Prometheus registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.
        /// </summary>
        public readonly string RoutePrefix;
        /// <summary>
        /// Namespaces to be selected for PrometheusRules discovery. If unspecified, only the same namespace as the Prometheus object is in is used.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRuleNamespaceSelector RuleNamespaceSelector;
        /// <summary>
        /// A selector to select which PrometheusRules to mount for loading alerting rules from. Until (excluding) Prometheus Operator v0.24.0 Prometheus Operator will migrate any legacy rule ConfigMaps to PrometheusRule custom resources selected by RuleSelector. Make sure it does not match any config maps that you do not want to be migrated.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRuleSelector RuleSelector;
        /// <summary>
        /// /--rules.*/ command-line arguments.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRules Rules;
        /// <summary>
        /// Interval between consecutive scrapes.
        /// </summary>
        public readonly string ScrapeInterval;
        /// <summary>
        /// Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The Secrets are mounted into /etc/prometheus/secrets/&lt;secret-name&gt;.
        /// </summary>
        public readonly ImmutableArray<string> Secrets;
        /// <summary>
        /// SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecSecurityContext SecurityContext;
        /// <summary>
        /// ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// Namespaces to be selected for ServiceMonitor discovery. If nil, only check own namespace.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecServiceMonitorNamespaceSelector ServiceMonitorNamespaceSelector;
        /// <summary>
        /// ServiceMonitors to be selected for target discovery.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecServiceMonitorSelector ServiceMonitorSelector;
        /// <summary>
        /// SHA of Prometheus container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set.
        /// </summary>
        public readonly string Sha;
        /// <summary>
        /// Storage spec to specify how storage shall be used.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecStorage Storage;
        /// <summary>
        /// Tag of Prometheus container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment. 
        ///  This section is experimental, it may change significantly without deprecation notice in any release. 
        ///  This is experimental and may change significantly without backward compatibility in any release.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecThanos Thanos;
        /// <summary>
        /// If specified, the pod's tolerations.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecTolerations> Tolerations;
        /// <summary>
        /// Version of Prometheus to be deployed.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecVolumes> Volumes;
        /// <summary>
        /// Enable compression of the write-ahead log using Snappy. This flag is only available in versions of Prometheus &gt;= 2.11.0.
        /// </summary>
        public readonly bool WalCompression;

        [OutputConstructor]
        private PrometheusSpec(
            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAdditionalAlertManagerConfigs additionalAlertManagerConfigs,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAdditionalAlertRelabelConfigs additionalAlertRelabelConfigs,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAdditionalScrapeConfigs additionalScrapeConfigs,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAffinity affinity,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecAlerting alerting,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecApiserverConfig apiserverConfig,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecArbitraryFSAccessThroughSMs arbitraryFSAccessThroughSMs,

            string baseImage,

            ImmutableArray<string> configMaps,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecContainers> containers,

            bool disableCompaction,

            bool enableAdminAPI,

            string enforcedNamespaceLabel,

            string evaluationInterval,

            ImmutableDictionary<string, string> externalLabels,

            string externalUrl,

            bool ignoreNamespaceSelectors,

            string image,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecImagePullSecrets> imagePullSecrets,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecInitContainers> initContainers,

            bool listenLocal,

            string logFormat,

            string logLevel,

            ImmutableDictionary<string, string> nodeSelector,

            bool overrideHonorLabels,

            bool overrideHonorTimestamps,

            bool paused,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecPodMetadata podMetadata,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecPodMonitorNamespaceSelector podMonitorNamespaceSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecPodMonitorSelector podMonitorSelector,

            string portName,

            string priorityClassName,

            string prometheusExternalLabelName,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecQuery query,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRemoteRead> remoteRead,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRemoteWrite> remoteWrite,

            string replicaExternalLabelName,

            int replicas,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecResources resources,

            string retention,

            string retentionSize,

            string routePrefix,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRuleNamespaceSelector ruleNamespaceSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRuleSelector ruleSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecRules rules,

            string scrapeInterval,

            ImmutableArray<string> secrets,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecSecurityContext securityContext,

            string serviceAccountName,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecServiceMonitorNamespaceSelector serviceMonitorNamespaceSelector,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecServiceMonitorSelector serviceMonitorSelector,

            string sha,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecStorage storage,

            string tag,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecThanos thanos,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecTolerations> tolerations,

            string version,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PrometheusSpecVolumes> volumes,

            bool walCompression)
        {
            AdditionalAlertManagerConfigs = additionalAlertManagerConfigs;
            AdditionalAlertRelabelConfigs = additionalAlertRelabelConfigs;
            AdditionalScrapeConfigs = additionalScrapeConfigs;
            Affinity = affinity;
            Alerting = alerting;
            ApiserverConfig = apiserverConfig;
            ArbitraryFSAccessThroughSMs = arbitraryFSAccessThroughSMs;
            BaseImage = baseImage;
            ConfigMaps = configMaps;
            Containers = containers;
            DisableCompaction = disableCompaction;
            EnableAdminAPI = enableAdminAPI;
            EnforcedNamespaceLabel = enforcedNamespaceLabel;
            EvaluationInterval = evaluationInterval;
            ExternalLabels = externalLabels;
            ExternalUrl = externalUrl;
            IgnoreNamespaceSelectors = ignoreNamespaceSelectors;
            Image = image;
            ImagePullSecrets = imagePullSecrets;
            InitContainers = initContainers;
            ListenLocal = listenLocal;
            LogFormat = logFormat;
            LogLevel = logLevel;
            NodeSelector = nodeSelector;
            OverrideHonorLabels = overrideHonorLabels;
            OverrideHonorTimestamps = overrideHonorTimestamps;
            Paused = paused;
            PodMetadata = podMetadata;
            PodMonitorNamespaceSelector = podMonitorNamespaceSelector;
            PodMonitorSelector = podMonitorSelector;
            PortName = portName;
            PriorityClassName = priorityClassName;
            PrometheusExternalLabelName = prometheusExternalLabelName;
            Query = query;
            RemoteRead = remoteRead;
            RemoteWrite = remoteWrite;
            ReplicaExternalLabelName = replicaExternalLabelName;
            Replicas = replicas;
            Resources = resources;
            Retention = retention;
            RetentionSize = retentionSize;
            RoutePrefix = routePrefix;
            RuleNamespaceSelector = ruleNamespaceSelector;
            RuleSelector = ruleSelector;
            Rules = rules;
            ScrapeInterval = scrapeInterval;
            Secrets = secrets;
            SecurityContext = securityContext;
            ServiceAccountName = serviceAccountName;
            ServiceMonitorNamespaceSelector = serviceMonitorNamespaceSelector;
            ServiceMonitorSelector = serviceMonitorSelector;
            Sha = sha;
            Storage = storage;
            Tag = tag;
            Thanos = thanos;
            Tolerations = tolerations;
            Version = version;
            Volumes = volumes;
            WalCompression = walCompression;
        }
    }
}
