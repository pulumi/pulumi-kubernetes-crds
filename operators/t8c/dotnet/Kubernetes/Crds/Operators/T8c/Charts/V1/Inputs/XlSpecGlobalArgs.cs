// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Charts.V1
{

    /// <summary>
    /// Platform configuration options
    /// </summary>
    public class XlSpecGlobalArgs : Pulumi.ResourceArgs
    {
        [Input("affinity")]
        private InputMap<object>? _affinity;

        /// <summary>
        /// Global pod affinity list
        /// </summary>
        public InputMap<object> Affinity
        {
            get => _affinity ?? (_affinity = new InputMap<object>());
            set => _affinity = value;
        }

        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Global pod annotations list
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// Certificate Manager configuration options
        /// </summary>
        [Input("certmanager")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Charts.V1.XlSpecGlobalCertmanagerArgs>? Certmanager { get; set; }

        /// <summary>
        /// Use custom image names
        /// </summary>
        [Input("customImageNames")]
        public Input<bool>? CustomImageNames { get; set; }

        /// <summary>
        /// Global debug
        /// </summary>
        [Input("debug")]
        public Input<bool>? Debug { get; set; }

        /// <summary>
        /// Install ELK stack
        /// </summary>
        [Input("elk")]
        public Input<bool>? Elk { get; set; }

        /// <summary>
        /// DNS name for external mysql compliant database server
        /// </summary>
        [Input("externalDBName")]
        public Input<string>? ExternalDBName { get; set; }

        /// <summary>
        /// IP address for external mysql compliant database server
        /// </summary>
        [Input("externalDbIP")]
        public Input<string>? ExternalDbIP { get; set; }

        /// <summary>
        /// Static external IP address for ingress LoadBalancer
        /// </summary>
        [Input("externalIP")]
        public Input<string>? ExternalIP { get; set; }

        /// <summary>
        /// Global image registry password for pull secret
        /// </summary>
        [Input("imagePassword")]
        public Input<string>? ImagePassword { get; set; }

        /// <summary>
        /// Global image registry pull secret instead of credentials
        /// </summary>
        [Input("imagePullSecret")]
        public Input<string>? ImagePullSecret { get; set; }

        /// <summary>
        /// Global image registry username for pull secret
        /// </summary>
        [Input("imageUsername")]
        public Input<string>? ImageUsername { get; set; }

        /// <summary>
        /// Certificate Manager configuration options
        /// </summary>
        [Input("ingress")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Charts.V1.XlSpecGlobalIngressArgs>? Ingress { get; set; }

        /// <summary>
        /// Global java options override
        /// </summary>
        [Input("javaBaseOptions")]
        public Input<string>? JavaBaseOptions { get; set; }

        /// <summary>
        /// Send logs to stdout of each microservices globally
        /// </summary>
        [Input("logtostdout")]
        public Input<bool>? Logtostdout { get; set; }

        [Input("nodeSelector")]
        private InputMap<object>? _nodeSelector;

        /// <summary>
        /// Global pod nodeSelector list
        /// </summary>
        public InputMap<object> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<object>());
            set => _nodeSelector = value;
        }

        /// <summary>
        /// Global image pull policy
        /// </summary>
        [Input("pullPolicy")]
        public Input<string>? PullPolicy { get; set; }

        /// <summary>
        /// Global pod readiness period in seconds
        /// </summary>
        [Input("readinessPeriodSecs")]
        public Input<int>? ReadinessPeriodSecs { get; set; }

        /// <summary>
        /// Global pod readiness timeout in seconds
        /// </summary>
        [Input("readinessTimeoutSecs")]
        public Input<int>? ReadinessTimeoutSecs { get; set; }

        /// <summary>
        /// Global image registry name for pull secret
        /// </summary>
        [Input("registry")]
        public Input<string>? Registry { get; set; }

        /// <summary>
        /// Global container registry and repository name
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Security Context for persistent volumes
        /// </summary>
        [Input("securityContext")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Charts.V1.XlSpecGlobalSecurityContextArgs>? SecurityContext { get; set; }

        /// <summary>
        /// Global serviceAccountName
        /// </summary>
        [Input("serviceAccountName")]
        public Input<string>? ServiceAccountName { get; set; }

        [Input("storageAnnotations")]
        private InputMap<object>? _storageAnnotations;

        /// <summary>
        /// Global pvc annotations list
        /// </summary>
        public InputMap<object> StorageAnnotations
        {
            get => _storageAnnotations ?? (_storageAnnotations = new InputMap<object>());
            set => _storageAnnotations = value;
        }

        /// <summary>
        /// StorageClassName to be used for all persistent volume claims
        /// </summary>
        [Input("storageClassName")]
        public Input<string>? StorageClassName { get; set; }

        /// <summary>
        /// Use StorageSelector for statically provisioned persistent volume
        /// </summary>
        [Input("storageSelector")]
        public Input<bool>? StorageSelector { get; set; }

        /// <summary>
        /// Global container tag
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        [Input("tolerations")]
        private InputList<ImmutableDictionary<string, object>>? _tolerations;

        /// <summary>
        /// Global pod tolerations array
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Tolerations
        {
            get => _tolerations ?? (_tolerations = new InputList<ImmutableDictionary<string, object>>());
            set => _tolerations = value;
        }

        public XlSpecGlobalArgs()
        {
        }
    }
}
