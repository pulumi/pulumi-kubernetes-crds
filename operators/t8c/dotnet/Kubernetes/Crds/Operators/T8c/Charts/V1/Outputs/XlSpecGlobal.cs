// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Charts.V1
{

    [OutputType]
    public sealed class XlSpecGlobal
    {
        /// <summary>
        /// Global pod affinity list
        /// </summary>
        public readonly ImmutableDictionary<string, object> Affinity;
        /// <summary>
        /// Global pod annotations list
        /// </summary>
        public readonly ImmutableDictionary<string, object> Annotations;
        /// <summary>
        /// Certificate Manager configuration options
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Charts.V1.XlSpecGlobalCertmanager Certmanager;
        /// <summary>
        /// Use custom image names
        /// </summary>
        public readonly bool CustomImageNames;
        /// <summary>
        /// Global debug
        /// </summary>
        public readonly bool Debug;
        /// <summary>
        /// Install ELK stack
        /// </summary>
        public readonly bool Elk;
        /// <summary>
        /// DNS name for external mysql compliant database server
        /// </summary>
        public readonly string ExternalDBName;
        /// <summary>
        /// IP address for external mysql compliant database server
        /// </summary>
        public readonly string ExternalDbIP;
        /// <summary>
        /// Static external IP address for ingress LoadBalancer
        /// </summary>
        public readonly string ExternalIP;
        /// <summary>
        /// Global image registry password for pull secret
        /// </summary>
        public readonly string ImagePassword;
        /// <summary>
        /// Global image registry pull secret instead of credentials
        /// </summary>
        public readonly string ImagePullSecret;
        /// <summary>
        /// Global image registry username for pull secret
        /// </summary>
        public readonly string ImageUsername;
        /// <summary>
        /// Certificate Manager configuration options
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Charts.V1.XlSpecGlobalIngress Ingress;
        /// <summary>
        /// Global java options override
        /// </summary>
        public readonly string JavaBaseOptions;
        /// <summary>
        /// Send logs to stdout of each microservices globally
        /// </summary>
        public readonly bool Logtostdout;
        /// <summary>
        /// Global pod nodeSelector list
        /// </summary>
        public readonly ImmutableDictionary<string, object> NodeSelector;
        /// <summary>
        /// Global image pull policy
        /// </summary>
        public readonly string PullPolicy;
        /// <summary>
        /// Global pod readiness period in seconds
        /// </summary>
        public readonly int ReadinessPeriodSecs;
        /// <summary>
        /// Global pod readiness timeout in seconds
        /// </summary>
        public readonly int ReadinessTimeoutSecs;
        /// <summary>
        /// Global image registry name for pull secret
        /// </summary>
        public readonly string Registry;
        /// <summary>
        /// Global container registry and repository name
        /// </summary>
        public readonly string Repository;
        /// <summary>
        /// Security Context for persistent volumes
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Charts.V1.XlSpecGlobalSecurityContext SecurityContext;
        /// <summary>
        /// Global serviceAccountName
        /// </summary>
        public readonly string ServiceAccountName;
        /// <summary>
        /// Global pvc annotations list
        /// </summary>
        public readonly ImmutableDictionary<string, object> StorageAnnotations;
        /// <summary>
        /// StorageClassName to be used for all persistent volume claims
        /// </summary>
        public readonly string StorageClassName;
        /// <summary>
        /// Use StorageSelector for statically provisioned persistent volume
        /// </summary>
        public readonly bool StorageSelector;
        /// <summary>
        /// Global container tag
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// Global pod tolerations array
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, object>> Tolerations;

        [OutputConstructor]
        private XlSpecGlobal(
            ImmutableDictionary<string, object> affinity,

            ImmutableDictionary<string, object> annotations,

            Pulumi.Kubernetes.Types.Outputs.Charts.V1.XlSpecGlobalCertmanager certmanager,

            bool customImageNames,

            bool debug,

            bool elk,

            string externalDBName,

            string externalDbIP,

            string externalIP,

            string imagePassword,

            string imagePullSecret,

            string imageUsername,

            Pulumi.Kubernetes.Types.Outputs.Charts.V1.XlSpecGlobalIngress ingress,

            string javaBaseOptions,

            bool logtostdout,

            ImmutableDictionary<string, object> nodeSelector,

            string pullPolicy,

            int readinessPeriodSecs,

            int readinessTimeoutSecs,

            string registry,

            string repository,

            Pulumi.Kubernetes.Types.Outputs.Charts.V1.XlSpecGlobalSecurityContext securityContext,

            string serviceAccountName,

            ImmutableDictionary<string, object> storageAnnotations,

            string storageClassName,

            bool storageSelector,

            string tag,

            ImmutableArray<ImmutableDictionary<string, object>> tolerations)
        {
            Affinity = affinity;
            Annotations = annotations;
            Certmanager = certmanager;
            CustomImageNames = customImageNames;
            Debug = debug;
            Elk = elk;
            ExternalDBName = externalDBName;
            ExternalDbIP = externalDbIP;
            ExternalIP = externalIP;
            ImagePassword = imagePassword;
            ImagePullSecret = imagePullSecret;
            ImageUsername = imageUsername;
            Ingress = ingress;
            JavaBaseOptions = javaBaseOptions;
            Logtostdout = logtostdout;
            NodeSelector = nodeSelector;
            PullPolicy = pullPolicy;
            ReadinessPeriodSecs = readinessPeriodSecs;
            ReadinessTimeoutSecs = readinessTimeoutSecs;
            Registry = registry;
            Repository = repository;
            SecurityContext = securityContext;
            ServiceAccountName = serviceAccountName;
            StorageAnnotations = storageAnnotations;
            StorageClassName = storageClassName;
            StorageSelector = storageSelector;
            Tag = tag;
            Tolerations = tolerations;
        }
    }
}
