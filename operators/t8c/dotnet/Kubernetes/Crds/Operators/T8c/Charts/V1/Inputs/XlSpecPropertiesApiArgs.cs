// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Charts.V1
{

    /// <summary>
    /// api property overrides
    /// </summary>
    public class XlSpecPropertiesApiArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// URI for the SSO provider Access Token endpoint
        /// </summary>
        [Input("openIdAccessTokenUri")]
        public Input<string>? OpenIdAccessTokenUri { get; set; }

        /// <summary>
        /// OpenID clientAuthentication such as “basic”, “post”, “none”
        /// </summary>
        [Input("openIdClientAuthentication")]
        public Input<string>? OpenIdClientAuthentication { get; set; }

        /// <summary>
        /// A unique string identifier for the SSO client
        /// </summary>
        [Input("openIdClientId")]
        public Input<string>? OpenIdClientId { get; set; }

        /// <summary>
        /// A secret string identifier for the SSO client
        /// </summary>
        [Input("openIdClientSecret")]
        public Input<string>? OpenIdClientSecret { get; set; }

        /// <summary>
        /// Array of OpenID clients such as “google”, “okta”, “ibm”
        /// </summary>
        [Input("openIdClients")]
        public Input<string>? OpenIdClients { get; set; }

        /// <summary>
        /// Enable OpenID SSO
        /// </summary>
        [Input("openIdEnabled")]
        public Input<bool>? OpenIdEnabled { get; set; }

        /// <summary>
        /// URI for the SSO provider JWK certificate endpoint
        /// </summary>
        [Input("openIdJwkSetUri")]
        public Input<string>? OpenIdJwkSetUri { get; set; }

        /// <summary>
        /// OpenID userAuthentication such as “header”, “form”, “query”
        /// </summary>
        [Input("openIdUserAuthentication")]
        public Input<string>? OpenIdUserAuthentication { get; set; }

        /// <summary>
        /// URI for the SSO provider Authorization endpoint
        /// </summary>
        [Input("openIdUserAuthorizationUri")]
        public Input<string>? OpenIdUserAuthorizationUri { get; set; }

        /// <summary>
        /// URI for the SSO provider UserInfo endpoint
        /// </summary>
        [Input("openIdUserInfoUri")]
        public Input<string>? OpenIdUserInfoUri { get; set; }

        /// <summary>
        /// Enable SAML SSO
        /// </summary>
        [Input("samlEnabled")]
        public Input<bool>? SamlEnabled { get; set; }

        /// <summary>
        /// The IDP entity ID, it can be found in IDP metadata
        /// </summary>
        [Input("samlEntityId")]
        public Input<string>? SamlEntityId { get; set; }

        /// <summary>
        /// The IDP X.509 certificate
        /// </summary>
        [Input("samlIdpCertificate")]
        public Input<string>? SamlIdpCertificate { get; set; }

        /// <summary>
        /// A unique string identifier for the SSO
        /// </summary>
        [Input("samlRegistrationId")]
        public Input<string>? SamlRegistrationId { get; set; }

        /// <summary>
        /// Audience URI (SP Entity ID)
        /// </summary>
        [Input("samlSpEntityId")]
        public Input<string>? SamlSpEntityId { get; set; }

        /// <summary>
        /// The IDP web sso HTTP POST endpoint, it can be found in IDP metadata
        /// </summary>
        [Input("samlWebSsoEndpoint")]
        public Input<string>? SamlWebSsoEndpoint { get; set; }

        public XlSpecPropertiesApiArgs()
        {
        }
    }
}
