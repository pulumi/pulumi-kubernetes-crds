// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace charts {
    export namespace v1 {
        export interface XlSpec {
            acims?: pulumi.Input<inputs.charts.v1.XlSpecAcims>;
            action-orchestrator?: pulumi.Input<inputs.charts.v1.XlSpecAction-Orchestrator>;
            actionscript?: pulumi.Input<inputs.charts.v1.XlSpecActionscript>;
            aix?: pulumi.Input<inputs.charts.v1.XlSpecAix>;
            api?: pulumi.Input<inputs.charts.v1.XlSpecApi>;
            apic?: pulumi.Input<inputs.charts.v1.XlSpecApic>;
            appdynamics?: pulumi.Input<inputs.charts.v1.XlSpecAppdynamics>;
            appinsights?: pulumi.Input<inputs.charts.v1.XlSpecAppinsights>;
            arangodb?: pulumi.Input<inputs.charts.v1.XlSpecArangodb>;
            auth?: pulumi.Input<inputs.charts.v1.XlSpecAuth>;
            aws?: pulumi.Input<inputs.charts.v1.XlSpecAws>;
            awslambda?: pulumi.Input<inputs.charts.v1.XlSpecAwslambda>;
            azure?: pulumi.Input<inputs.charts.v1.XlSpecAzure>;
            baremetal?: pulumi.Input<inputs.charts.v1.XlSpecBaremetal>;
            chronograf?: pulumi.Input<inputs.charts.v1.XlSpecChronograf>;
            cloudfoundry?: pulumi.Input<inputs.charts.v1.XlSpecCloudfoundry>;
            clustermgr?: pulumi.Input<inputs.charts.v1.XlSpecClustermgr>;
            compellent?: pulumi.Input<inputs.charts.v1.XlSpecCompellent>;
            consul?: pulumi.Input<inputs.charts.v1.XlSpecConsul>;
            control?: pulumi.Input<inputs.charts.v1.XlSpecControl>;
            cost?: pulumi.Input<inputs.charts.v1.XlSpecCost>;
            datacloud?: pulumi.Input<inputs.charts.v1.XlSpecDatacloud>;
            datadog?: pulumi.Input<inputs.charts.v1.XlSpecDatadog>;
            db?: pulumi.Input<inputs.charts.v1.XlSpecDb>;
            dynatrace?: pulumi.Input<inputs.charts.v1.XlSpecDynatrace>;
            fluent-bit?: pulumi.Input<inputs.charts.v1.XlSpecFluent-Bit>;
            gcp?: pulumi.Input<inputs.charts.v1.XlSpecGcp>;
            /**
             * Platform configuration options
             */
            global?: pulumi.Input<inputs.charts.v1.XlSpecGlobal>;
            grafana?: pulumi.Input<inputs.charts.v1.XlSpecGrafana>;
            group?: pulumi.Input<inputs.charts.v1.XlSpecGroup>;
            hds?: pulumi.Input<inputs.charts.v1.XlSpecHds>;
            history?: pulumi.Input<inputs.charts.v1.XlSpecHistory>;
            horizon?: pulumi.Input<inputs.charts.v1.XlSpecHorizon>;
            hpe3par?: pulumi.Input<inputs.charts.v1.XlSpecHpe3par>;
            hyperflex?: pulumi.Input<inputs.charts.v1.XlSpecHyperflex>;
            hyperv?: pulumi.Input<inputs.charts.v1.XlSpecHyperv>;
            influxdb?: pulumi.Input<inputs.charts.v1.XlSpecInfluxdb>;
            intersight?: pulumi.Input<inputs.charts.v1.XlSpecIntersight>;
            istio?: pulumi.Input<inputs.charts.v1.XlSpecIstio>;
            istioingress?: pulumi.Input<inputs.charts.v1.XlSpecIstioingress>;
            jaeger?: pulumi.Input<inputs.charts.v1.XlSpecJaeger>;
            kafka?: pulumi.Input<inputs.charts.v1.XlSpecKafka>;
            kubeturbo?: pulumi.Input<inputs.charts.v1.XlSpecKubeturbo>;
            loki?: pulumi.Input<inputs.charts.v1.XlSpecLoki>;
            market?: pulumi.Input<inputs.charts.v1.XlSpecMarket>;
            mediation-acims?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Acims>;
            mediation-actionscript?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Actionscript>;
            mediation-aix?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Aix>;
            mediation-apic?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Apic>;
            mediation-appdynamics?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Appdynamics>;
            mediation-appinsights?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Appinsights>;
            mediation-aws?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Aws>;
            mediation-awsbilling?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Awsbilling>;
            mediation-awscost?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Awscost>;
            mediation-awslambda?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Awslambda>;
            mediation-azure?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Azure>;
            mediation-azurecost?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Azurecost>;
            mediation-azureea?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Azureea>;
            mediation-azuresp?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Azuresp>;
            mediation-azurevolumes?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Azurevolumes>;
            mediation-baremetal?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Baremetal>;
            mediation-cloudfoundry?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Cloudfoundry>;
            mediation-compellent?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Compellent>;
            mediation-customdata?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Customdata>;
            mediation-datadog?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Datadog>;
            mediation-dynatrace?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Dynatrace>;
            mediation-gcp?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Gcp>;
            mediation-gcpcost?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Gcpcost>;
            mediation-hds?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hds>;
            mediation-horizon?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Horizon>;
            mediation-hpe3par?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hpe3par>;
            mediation-hyperflex?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hyperflex>;
            mediation-hyperv?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hyperv>;
            mediation-intersight?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Intersight>;
            mediation-intersighthyperflex?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Intersighthyperflex>;
            mediation-intersightucs?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Intersightucs>;
            mediation-istio?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Istio>;
            mediation-mssql?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Mssql>;
            mediation-mysql?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Mysql>;
            mediation-netapp?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Netapp>;
            mediation-netflow?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Netflow>;
            mediation-newrelic?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Newrelic>;
            mediation-nutanix?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Nutanix>;
            mediation-oneview?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Oneview>;
            mediation-openstack?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Openstack>;
            mediation-pivotal?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Pivotal>;
            mediation-pure?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Pure>;
            mediation-rhv?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Rhv>;
            mediation-scaleio?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Scaleio>;
            mediation-snmp?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Snmp>;
            mediation-terraform?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Terraform>;
            mediation-tetration?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Tetration>;
            mediation-tomcat?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Tomcat>;
            mediation-ucs?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Ucs>;
            mediation-ucsdirector?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Ucsdirector>;
            mediation-vcd?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Vcd>;
            mediation-vcenter?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Vcenter>;
            mediation-vcenterbrowsing?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Vcenterbrowsing>;
            mediation-vmax?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Vmax>;
            mediation-vmm?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Vmm>;
            mediation-vplex?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Vplex>;
            mediation-wmi?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Wmi>;
            mediation-xtremio?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Xtremio>;
            metron?: pulumi.Input<inputs.charts.v1.XlSpecMetron>;
            mssql?: pulumi.Input<inputs.charts.v1.XlSpecMssql>;
            mysql?: pulumi.Input<inputs.charts.v1.XlSpecMysql>;
            netapp?: pulumi.Input<inputs.charts.v1.XlSpecNetapp>;
            netflow?: pulumi.Input<inputs.charts.v1.XlSpecNetflow>;
            newrelic?: pulumi.Input<inputs.charts.v1.XlSpecNewrelic>;
            nginxingress?: pulumi.Input<inputs.charts.v1.XlSpecNginxingress>;
            nutanix?: pulumi.Input<inputs.charts.v1.XlSpecNutanix>;
            oneview?: pulumi.Input<inputs.charts.v1.XlSpecOneview>;
            openshiftingress?: pulumi.Input<inputs.charts.v1.XlSpecOpenshiftingress>;
            openstack?: pulumi.Input<inputs.charts.v1.XlSpecOpenstack>;
            pivotal?: pulumi.Input<inputs.charts.v1.XlSpecPivotal>;
            plan-orchestrator?: pulumi.Input<inputs.charts.v1.XlSpecPlan-Orchestrator>;
            platform?: pulumi.Input<inputs.charts.v1.XlSpecPlatform>;
            prometheus?: pulumi.Input<inputs.charts.v1.XlSpecPrometheus>;
            prometheus-mysql-exporter?: pulumi.Input<inputs.charts.v1.XlSpecPrometheus-Mysql-Exporter>;
            prometurbo?: pulumi.Input<inputs.charts.v1.XlSpecPrometurbo>;
            promtail?: pulumi.Input<inputs.charts.v1.XlSpecPromtail>;
            /**
             * Custom property overrides
             */
            properties?: pulumi.Input<inputs.charts.v1.XlSpecProperties>;
            pure?: pulumi.Input<inputs.charts.v1.XlSpecPure>;
            repository?: pulumi.Input<inputs.charts.v1.XlSpecRepository>;
            rhv?: pulumi.Input<inputs.charts.v1.XlSpecRhv>;
            rsyslog?: pulumi.Input<inputs.charts.v1.XlSpecRsyslog>;
            scaleio?: pulumi.Input<inputs.charts.v1.XlSpecScaleio>;
            snmp?: pulumi.Input<inputs.charts.v1.XlSpecSnmp>;
            terraform?: pulumi.Input<inputs.charts.v1.XlSpecTerraform>;
            tetration?: pulumi.Input<inputs.charts.v1.XlSpecTetration>;
            timescaledb?: pulumi.Input<inputs.charts.v1.XlSpecTimescaledb>;
            topology-processor?: pulumi.Input<inputs.charts.v1.XlSpecTopology-Processor>;
            ucs?: pulumi.Input<inputs.charts.v1.XlSpecUcs>;
            ucsdirector?: pulumi.Input<inputs.charts.v1.XlSpecUcsdirector>;
            ui?: pulumi.Input<inputs.charts.v1.XlSpecUi>;
            vcd?: pulumi.Input<inputs.charts.v1.XlSpecVcd>;
            vcenter?: pulumi.Input<inputs.charts.v1.XlSpecVcenter>;
            vmax?: pulumi.Input<inputs.charts.v1.XlSpecVmax>;
            vmm?: pulumi.Input<inputs.charts.v1.XlSpecVmm>;
            vplex?: pulumi.Input<inputs.charts.v1.XlSpecVplex>;
            wmi?: pulumi.Input<inputs.charts.v1.XlSpecWmi>;
            xtremio?: pulumi.Input<inputs.charts.v1.XlSpecXtremio>;
            zookeeper?: pulumi.Input<inputs.charts.v1.XlSpecZookeeper>;
        }

        export interface XlSpecAcims {
            /**
             * Enable Cisco APIC mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecAction-Orchestrator {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecAction-OrchestratorImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecAction-OrchestratorResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecAction-OrchestratorImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecAction-OrchestratorResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecAction-OrchestratorResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecAction-OrchestratorResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecActionscript {
            /**
             * Enable actionscript mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecAix {
            /**
             * Enable AIX mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecApi {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecApiImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecApiResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecApiImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecApiResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecApiResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecApiResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecApic {
            /**
             * Enable Cisco APIC mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecAppdynamics {
            /**
             * Enable AppDynamics mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecAppinsights {
            /**
             * Enable Azure App Insights mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecArangodb {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecArangodbImage>;
            /**
             * arangodb persistence options
             */
            persistence?: pulumi.Input<inputs.charts.v1.XlSpecArangodbPersistence>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecArangodbImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * arangodb persistence options
         */
        export interface XlSpecArangodbPersistence {
            /**
             * arangodb apps persistent volume size
             */
            apps?: pulumi.Input<string>;
            /**
             * arangodb persistent volume size
             */
            arangodb?: pulumi.Input<string>;
            /**
             * arangodb dump persistent volume size
             */
            dump?: pulumi.Input<string>;
        }

        export interface XlSpecAuth {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecAuthImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecAuthResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecAuthImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecAuthResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecAuthResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecAuthResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecAws {
            /**
             * Enable AWS mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecAwslambda {
            /**
             * Enable AWS Lambda mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecAzure {
            /**
             * Enable Azure mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecBaremetal {
            /**
             * Enable baremetal mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecChronograf {
            /**
             * Enable chronograf
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecCloudfoundry {
            /**
             * Enable Cloud Foundry mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecClustermgr {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecClustermgrImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecClustermgrResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecClustermgrImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecClustermgrResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecClustermgrResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecClustermgrResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecCompellent {
            /**
             * Enable Compellent mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecConsul {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecConsulImage>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecConsulImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        export interface XlSpecControl {
            /**
             * Enable platform licensed components
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecCost {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecCostImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecCostResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecCostImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecCostResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecCostResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecCostResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecDatacloud {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Enable datacloud collector
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecDatacloudImage>;
            sevone?: pulumi.Input<inputs.charts.v1.XlSpecDatacloudSevone>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecDatacloudImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        export interface XlSpecDatacloudSevone {
            /**
             * Sevone transport properties
             */
            transport?: pulumi.Input<inputs.charts.v1.XlSpecDatacloudSevoneTransport>;
        }

        /**
         * Sevone transport properties
         */
        export interface XlSpecDatacloudSevoneTransport {
            /**
             * Sevone transport settings properties
             */
            settings?: pulumi.Input<inputs.charts.v1.XlSpecDatacloudSevoneTransportSettings>;
        }

        /**
         * Sevone transport settings properties
         */
        export interface XlSpecDatacloudSevoneTransportSettings {
            /**
             * Sevone datacloud project id
             */
            DE_PROJECT_ID?: pulumi.Input<string>;
        }

        export interface XlSpecDatadog {
            /**
             * Enable Datadog mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecDb {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecDbImage>;
            /**
             * MariaDB persistence options
             */
            persistence?: pulumi.Input<inputs.charts.v1.XlSpecDbPersistence>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecDbImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * MariaDB persistence options
         */
        export interface XlSpecDbPersistence {
            /**
             * MariaDB persistent volume size
             */
            size?: pulumi.Input<string>;
        }

        export interface XlSpecDynatrace {
            /**
             * Enable Dynatrace mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecFluent-Bit {
            /**
             * Enable fluent log collection
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecGcp {
            /**
             * Enable GCP mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Platform configuration options
         */
        export interface XlSpecGlobal {
            /**
             * Global pod affinity list
             */
            affinity?: pulumi.Input<{[key: string]: any}>;
            /**
             * Global pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Certificate Manager configuration options
             */
            certmanager?: pulumi.Input<inputs.charts.v1.XlSpecGlobalCertmanager>;
            /**
             * Use custom image names
             */
            customImageNames?: pulumi.Input<boolean>;
            /**
             * Global debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * Install ELK stack
             */
            elk?: pulumi.Input<boolean>;
            /**
             * DNS name for external mysql compliant database server
             */
            externalDBName?: pulumi.Input<string>;
            /**
             * IP address for external mysql compliant database server
             */
            externalDbIP?: pulumi.Input<string>;
            /**
             * Static external IP address for ingress LoadBalancer
             */
            externalIP?: pulumi.Input<string>;
            /**
             * Global image registry password for pull secret
             */
            imagePassword?: pulumi.Input<string>;
            /**
             * Global image registry pull secret instead of credentials
             */
            imagePullSecret?: pulumi.Input<string>;
            /**
             * Global image registry username for pull secret
             */
            imageUsername?: pulumi.Input<string>;
            /**
             * Certificate Manager configuration options
             */
            ingress?: pulumi.Input<inputs.charts.v1.XlSpecGlobalIngress>;
            /**
             * Global java options override
             */
            javaBaseOptions?: pulumi.Input<string>;
            /**
             * Send logs to stdout of each microservices globally
             */
            logtostdout?: pulumi.Input<boolean>;
            /**
             * Global pod nodeSelector list
             */
            nodeSelector?: pulumi.Input<{[key: string]: any}>;
            /**
             * Global image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * Global pod readiness period in seconds
             */
            readinessPeriodSecs?: pulumi.Input<number>;
            /**
             * Global pod readiness timeout in seconds
             */
            readinessTimeoutSecs?: pulumi.Input<number>;
            /**
             * Global image registry name for pull secret
             */
            registry?: pulumi.Input<string>;
            /**
             * Global container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * Security Context for persistent volumes
             */
            securityContext?: pulumi.Input<inputs.charts.v1.XlSpecGlobalSecurityContext>;
            /**
             * Global serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * Global pvc annotations list
             */
            storageAnnotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * StorageClassName to be used for all persistent volume claims
             */
            storageClassName?: pulumi.Input<string>;
            /**
             * Use StorageSelector for statically provisioned persistent volume
             */
            storageSelector?: pulumi.Input<boolean>;
            /**
             * Global container tag
             */
            tag?: pulumi.Input<string>;
            /**
             * Global pod tolerations array
             */
            tolerations?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
        }

        /**
         * Certificate Manager configuration options
         */
        export interface XlSpecGlobalCertmanager {
            /**
             * If set to true, use cert-manager
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * The name of the certification issuer
             */
            issuer?: pulumi.Input<string>;
        }

        /**
         * Certificate Manager configuration options
         */
        export interface XlSpecGlobalIngress {
            /**
             * Ingress service annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Optional wildcard domain to accept ingress requests for
             */
            domain?: pulumi.Input<string>;
            /**
             * Array of certificates to be created for the ingress
             */
            secrets?: pulumi.Input<pulumi.Input<inputs.charts.v1.XlSpecGlobalIngressSecrets>[]>;
        }

        export interface XlSpecGlobalIngressSecrets {
            /**
             * The certificate in pem format
             */
            certificate?: pulumi.Input<string>;
            /**
             * The cert key in pem format
             */
            key?: pulumi.Input<string>;
            /**
             * The name of the certificate secret
             */
            name?: pulumi.Input<string>;
        }

        /**
         * Security Context for persistent volumes
         */
        export interface XlSpecGlobalSecurityContext {
            /**
             * Group ID used for persisent volumes globally.
             */
            fsGroup?: pulumi.Input<number>;
        }

        export interface XlSpecGrafana {
            /**
             * Configure grafana admin password
             */
            adminPassword?: pulumi.Input<string>;
            /**
             * Enable grafana
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecGroup {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecGroupImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecGroupResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecGroupImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecGroupResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecGroupResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecGroupResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecHds {
            /**
             * Enable Hitachi Data Systems mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecHistory {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecHistoryImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecHistoryResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecHistoryImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecHistoryResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecHistoryResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecHistoryResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecHorizon {
            /**
             * Enable VMware Horizon mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecHpe3par {
            /**
             * Enable HPE 3PAR mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecHyperflex {
            /**
             * Enable Hyperflex mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecHyperv {
            /**
             * Enable Microsoft HyperV mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecInfluxdb {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecInfluxdbImage>;
            /**
             * influxdb persistence options
             */
            persistence?: pulumi.Input<inputs.charts.v1.XlSpecInfluxdbPersistence>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecInfluxdbImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * influxdb persistence options
         */
        export interface XlSpecInfluxdbPersistence {
            /**
             * influxdb persistent volume size
             */
            size?: pulumi.Input<string>;
        }

        export interface XlSpecIntersight {
            /**
             * Enable Cisco Intersight mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecIstio {
            /**
             * Enable Istio mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecIstioingress {
            /**
             * Enable istio ingress
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * Additional istio routes
             */
            routes?: pulumi.Input<inputs.charts.v1.XlSpecIstioingressRoutes>;
        }

        /**
         * Additional istio routes
         */
        export interface XlSpecIstioingressRoutes {
            /**
             * Istio match statement
             */
            match?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            /**
             * Istio route statement
             */
            route?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
        }

        export interface XlSpecJaeger {
            /**
             * Enable jaeger tracing
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecKafka {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecKafkaImage>;
            /**
             * kafka java options
             */
            java?: pulumi.Input<inputs.charts.v1.XlSpecKafkaJava>;
            /**
             * kafka persistence options
             */
            persistence?: pulumi.Input<inputs.charts.v1.XlSpecKafkaPersistence>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecKafkaImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * kafka java options
         */
        export interface XlSpecKafkaJava {
            /**
             * kafka java options value
             */
            options?: pulumi.Input<string>;
        }

        /**
         * kafka persistence options
         */
        export interface XlSpecKafkaPersistence {
            /**
             * kafka persistent volume size
             */
            size?: pulumi.Input<string>;
        }

        export interface XlSpecKubeturbo {
            /**
             * Enable kubeturbo for the local k8s cluster
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecLoki {
            /**
             * Enable grafana loki
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecMarket {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMarketImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMarketResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMarketImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMarketResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMarketResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMarketResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Acims {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AcimsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AcimsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AcimsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AcimsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AcimsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AcimsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Actionscript {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ActionscriptImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ActionscriptResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-ActionscriptImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-ActionscriptResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ActionscriptResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-ActionscriptResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Aix {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AixImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AixResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AixImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AixResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AixResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AixResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Apic {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ApicImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ApicResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-ApicImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-ApicResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ApicResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-ApicResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Appdynamics {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AppdynamicsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AppdynamicsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AppdynamicsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AppdynamicsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AppdynamicsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AppdynamicsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Appinsights {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AppinsightsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AppinsightsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AppinsightsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AppinsightsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AppinsightsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AppinsightsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Aws {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AwsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AwsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AwsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Awsbilling {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwsbillingImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwsbillingResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AwsbillingImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AwsbillingResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwsbillingResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AwsbillingResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Awscost {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwscostImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwscostResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AwscostImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AwscostResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwscostResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AwscostResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Awslambda {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwslambdaImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwslambdaResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AwslambdaImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AwslambdaResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AwslambdaResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AwslambdaResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Azure {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzureImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzureResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AzureImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AzureResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzureResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AzureResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Azurecost {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurecostImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurecostResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AzurecostImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AzurecostResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurecostResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AzurecostResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Azureea {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzureeaImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzureeaResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AzureeaImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AzureeaResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzureeaResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AzureeaResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Azuresp {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurespImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurespResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AzurespImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AzurespResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurespResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AzurespResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Azurevolumes {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurevolumesImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurevolumesResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-AzurevolumesImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-AzurevolumesResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-AzurevolumesResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-AzurevolumesResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Baremetal {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-BaremetalImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-BaremetalResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-BaremetalImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-BaremetalResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-BaremetalResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-BaremetalResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Cloudfoundry {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CloudfoundryImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CloudfoundryResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-CloudfoundryImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-CloudfoundryResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CloudfoundryResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-CloudfoundryResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Compellent {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CompellentImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CompellentResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-CompellentImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-CompellentResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CompellentResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-CompellentResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Customdata {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CustomdataImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CustomdataResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-CustomdataImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-CustomdataResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-CustomdataResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-CustomdataResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Datadog {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-DatadogImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-DatadogResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-DatadogImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-DatadogResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-DatadogResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-DatadogResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Dynatrace {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-DynatraceImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-DynatraceResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-DynatraceImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-DynatraceResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-DynatraceResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-DynatraceResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Gcp {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-GcpImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-GcpResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-GcpImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-GcpResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-GcpResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-GcpResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Gcpcost {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-GcpcostImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-GcpcostResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-GcpcostImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-GcpcostResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-GcpcostResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-GcpcostResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Hds {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HdsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HdsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-HdsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-HdsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HdsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-HdsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Horizon {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HorizonImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HorizonResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-HorizonImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-HorizonResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HorizonResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-HorizonResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Hpe3par {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hpe3parImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hpe3parResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-Hpe3parImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-Hpe3parResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-Hpe3parResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-Hpe3parResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Hyperflex {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HyperflexImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HyperflexResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-HyperflexImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-HyperflexResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HyperflexResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-HyperflexResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Hyperv {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HypervImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HypervResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-HypervImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-HypervResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-HypervResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-HypervResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Intersight {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersightImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersightResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-IntersightImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-IntersightResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersightResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-IntersightResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Intersighthyperflex {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersighthyperflexImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersighthyperflexResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-IntersighthyperflexImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-IntersighthyperflexResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersighthyperflexResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-IntersighthyperflexResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Intersightucs {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersightucsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersightucsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-IntersightucsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-IntersightucsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IntersightucsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-IntersightucsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Istio {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IstioImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IstioResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-IstioImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-IstioResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-IstioResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-IstioResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Mssql {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-MssqlImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-MssqlResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-MssqlImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-MssqlResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-MssqlResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-MssqlResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Mysql {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-MysqlImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-MysqlResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-MysqlImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-MysqlResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-MysqlResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-MysqlResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Netapp {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NetappImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NetappResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-NetappImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-NetappResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NetappResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-NetappResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Netflow {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NetflowImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NetflowResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-NetflowImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-NetflowResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NetflowResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-NetflowResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Newrelic {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NewrelicImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NewrelicResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-NewrelicImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-NewrelicResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NewrelicResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-NewrelicResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Nutanix {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NutanixImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NutanixResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-NutanixImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-NutanixResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-NutanixResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-NutanixResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Oneview {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-OneviewImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-OneviewResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-OneviewImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-OneviewResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-OneviewResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-OneviewResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Openstack {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-OpenstackImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-OpenstackResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-OpenstackImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-OpenstackResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-OpenstackResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-OpenstackResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Pivotal {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-PivotalImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-PivotalResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-PivotalImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-PivotalResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-PivotalResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-PivotalResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Pure {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-PureImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-PureResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-PureImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-PureResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-PureResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-PureResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Rhv {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-RhvImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-RhvResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-RhvImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-RhvResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-RhvResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-RhvResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Scaleio {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ScaleioImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ScaleioResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-ScaleioImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-ScaleioResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-ScaleioResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-ScaleioResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Snmp {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-SnmpImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-SnmpResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-SnmpImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-SnmpResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-SnmpResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-SnmpResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Terraform {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TerraformImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TerraformResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-TerraformImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-TerraformResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TerraformResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-TerraformResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Tetration {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TetrationImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TetrationResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-TetrationImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-TetrationResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TetrationResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-TetrationResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Tomcat {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TomcatImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TomcatResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-TomcatImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-TomcatResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-TomcatResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-TomcatResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Ucs {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-UcsImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-UcsResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-UcsImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-UcsResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-UcsResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-UcsResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Ucsdirector {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-UcsdirectorImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-UcsdirectorResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-UcsdirectorImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-UcsdirectorResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-UcsdirectorResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-UcsdirectorResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Vcd {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcdImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcdResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-VcdImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-VcdResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcdResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-VcdResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Vcenter {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcenterImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcenterResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-VcenterImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-VcenterResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcenterResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-VcenterResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Vcenterbrowsing {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcenterbrowsingImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcenterbrowsingResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-VcenterbrowsingImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-VcenterbrowsingResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VcenterbrowsingResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-VcenterbrowsingResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Vmax {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VmaxImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VmaxResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-VmaxImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-VmaxResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VmaxResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-VmaxResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Vmm {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VmmImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VmmResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-VmmImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-VmmResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VmmResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-VmmResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Vplex {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VplexImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VplexResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-VplexImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-VplexResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-VplexResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-VplexResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Wmi {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-WmiImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-WmiResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-WmiImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-WmiResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-WmiResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-WmiResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMediation-Xtremio {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecMediation-XtremioImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecMediation-XtremioResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecMediation-XtremioImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecMediation-XtremioResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecMediation-XtremioResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecMediation-XtremioResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecMetron {
            /**
             * Enable experimental time series data collection.
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecMssql {
            /**
             * Enable Microsoft SQL Server mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecMysql {
            /**
             * Enable MySQL Server mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecNetapp {
            /**
             * Enable NetApp mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecNetflow {
            /**
             * Enable netflow mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecNewrelic {
            /**
             * Enable New Relic mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecNginxingress {
            /**
             * Enable nginx ingress
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecNutanix {
            /**
             * Enable Nutanix mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecOneview {
            /**
             * Enable HPE OneView mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecOpenshiftingress {
            /**
             * Enable Openshift routes
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecOpenstack {
            /**
             * Enable Openstack mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecPivotal {
            /**
             * Enable Pivotal mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecPlan-Orchestrator {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecPlan-OrchestratorImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecPlan-OrchestratorResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecPlan-OrchestratorImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecPlan-OrchestratorResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecPlan-OrchestratorResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecPlan-OrchestratorResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecPlatform {
            /**
             * Enable platform components
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecPrometheus {
            /**
             * Enable prometheus
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecPrometheus-Mysql-Exporter {
            /**
             * Enable prometheus mysql exporter
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * Enable prometheus mysql exporter
             */
            mysql?: pulumi.Input<inputs.charts.v1.XlSpecPrometheus-Mysql-ExporterMysql>;
        }

        /**
         * Enable prometheus mysql exporter
         */
        export interface XlSpecPrometheus-Mysql-ExporterMysql {
            /**
             * password for the mysql exporter
             */
            pass?: pulumi.Input<string>;
            /**
             * username for the mysql exporter
             */
            user?: pulumi.Input<string>;
        }

        export interface XlSpecPrometurbo {
            /**
             * Enable prometurbo for the local prometheus server
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecPromtail {
            /**
             * Enable promtail log collection
             */
            enabled?: pulumi.Input<boolean>;
        }

        /**
         * Custom property overrides
         */
        export interface XlSpecProperties {
            /**
             * action-orchestrator property overrides
             */
            action-orchestrator?: pulumi.Input<inputs.charts.v1.XlSpecPropertiesAction-Orchestrator>;
            /**
             * api property overrides
             */
            api?: pulumi.Input<inputs.charts.v1.XlSpecPropertiesApi>;
            /**
             * auth property overrides
             */
            auth?: pulumi.Input<{[key: string]: any}>;
            /**
             * cost property overrides
             */
            cost?: pulumi.Input<{[key: string]: any}>;
            /**
             * global property overrides
             */
            global?: pulumi.Input<inputs.charts.v1.XlSpecPropertiesGlobal>;
            /**
             * group property overrides
             */
            group?: pulumi.Input<{[key: string]: any}>;
            /**
             * history property overrides
             */
            history?: pulumi.Input<{[key: string]: any}>;
            /**
             * plan-orchestrator property overrides
             */
            plan-orchestrator?: pulumi.Input<{[key: string]: any}>;
            /**
             * repository property overrides
             */
            repository?: pulumi.Input<inputs.charts.v1.XlSpecPropertiesRepository>;
            /**
             * topology-processor property overrides
             */
            topology-processor?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * action-orchestrator property overrides
         */
        export interface XlSpecPropertiesAction-Orchestrator {
            /**
             * Enable risk propagation
             */
            riskPropagationEnabled?: pulumi.Input<boolean>;
        }

        /**
         * api property overrides
         */
        export interface XlSpecPropertiesApi {
            /**
             * URI for the SSO provider Access Token endpoint
             */
            openIdAccessTokenUri?: pulumi.Input<string>;
            /**
             * OpenID clientAuthentication such as “basic”, “post”, “none”
             */
            openIdClientAuthentication?: pulumi.Input<string>;
            /**
             * A unique string identifier for the SSO client
             */
            openIdClientId?: pulumi.Input<string>;
            /**
             * A secret string identifier for the SSO client
             */
            openIdClientSecret?: pulumi.Input<string>;
            /**
             * Array of OpenID clients such as “google”, “okta”, “ibm”
             */
            openIdClients?: pulumi.Input<string>;
            /**
             * Enable OpenID SSO
             */
            openIdEnabled?: pulumi.Input<boolean>;
            /**
             * URI for the SSO provider JWK certificate endpoint
             */
            openIdJwkSetUri?: pulumi.Input<string>;
            /**
             * OpenID userAuthentication such as “header”, “form”, “query”
             */
            openIdUserAuthentication?: pulumi.Input<string>;
            /**
             * URI for the SSO provider Authorization endpoint
             */
            openIdUserAuthorizationUri?: pulumi.Input<string>;
            /**
             * URI for the SSO provider UserInfo endpoint
             */
            openIdUserInfoUri?: pulumi.Input<string>;
            /**
             * Enable SAML SSO
             */
            samlEnabled?: pulumi.Input<boolean>;
            /**
             * The IDP entity ID, it can be found in IDP metadata
             */
            samlEntityId?: pulumi.Input<string>;
            /**
             * The IDP X.509 certificate
             */
            samlIdpCertificate?: pulumi.Input<string>;
            /**
             * A unique string identifier for the SSO
             */
            samlRegistrationId?: pulumi.Input<string>;
            /**
             * Audience URI (SP Entity ID)
             */
            samlSpEntityId?: pulumi.Input<string>;
            /**
             * The IDP web sso HTTP POST endpoint, it can be found in IDP metadata
             */
            samlWebSsoEndpoint?: pulumi.Input<string>;
        }

        /**
         * global property overrides
         */
        export interface XlSpecPropertiesGlobal {
            /**
             * Configure custom mysql database port
             */
            dbPort?: pulumi.Input<number>;
            /**
             * Enable SSL connection to the mysql database
             */
            enableSecureDBConnection?: pulumi.Input<boolean>;
        }

        /**
         * repository property overrides
         */
        export interface XlSpecPropertiesRepository {
            /**
             * Show GuestLoad entities
             */
            showGuestLoad?: pulumi.Input<boolean>;
            /**
             * Store plan data in MySQL instead of ArangoDB.
             */
            useSqlForPlans?: pulumi.Input<boolean>;
        }

        export interface XlSpecPure {
            /**
             * Enable Pure mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecRepository {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecRepositoryImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecRepositoryResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecRepositoryImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecRepositoryResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecRepositoryResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecRepositoryResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecRhv {
            /**
             * Enable Red Hat Virtualization mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecRsyslog {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * optional environment variables for syslog
             */
            env?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecRsyslogImage>;
            /**
             * rsyslog persistence options
             */
            persistence?: pulumi.Input<inputs.charts.v1.XlSpecRsyslogPersistence>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecRsyslogImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * rsyslog persistence options
         */
        export interface XlSpecRsyslogPersistence {
            /**
             * influxdb audit persistent volume size
             */
            auditsize?: pulumi.Input<string>;
            /**
             * influxdb log persistent volume size
             */
            logsize?: pulumi.Input<string>;
        }

        export interface XlSpecScaleio {
            /**
             * Enable EMC ScaleIO mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecSnmp {
            /**
             * Enable SNMP mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecTerraform {
            /**
             * Enable Terraform mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecTetration {
            /**
             * Enable Cisco Tetration mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecTimescaledb {
            /**
             * Enable timescaledb with postgress backend
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecTopology-Processor {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component debug
             */
            debug?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecTopology-ProcessorImage>;
            /**
             * component additional java options
             */
            javaComponentOptions?: pulumi.Input<string>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecTopology-ProcessorResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecTopology-ProcessorImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecTopology-ProcessorResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecTopology-ProcessorResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecTopology-ProcessorResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecUcs {
            /**
             * Enable Cisco UCS mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecUcsdirector {
            /**
             * Enable Cisco UCS Director mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecUi {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * Enable UI component
             */
            enabled?: pulumi.Input<boolean>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecUiImage>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecUiResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecUiImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecUiResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecUiResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecUiResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }

        export interface XlSpecVcd {
            /**
             * Enable VMware Cloud Director mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecVcenter {
            /**
             * Enable VMware vCenter mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecVmax {
            /**
             * Enable EMC VMAX mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecVmm {
            /**
             * Enable Microsoft VMM mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecVplex {
            /**
             * Enable EMC VPLEX mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecWmi {
            /**
             * Enable WMI mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecXtremio {
            /**
             * Enable EMC XtremIO mediation
             */
            enabled?: pulumi.Input<boolean>;
        }

        export interface XlSpecZookeeper {
            /**
             * component specific pod annotations list
             */
            annotations?: pulumi.Input<{[key: string]: any}>;
            /**
             * component specific image options
             */
            image?: pulumi.Input<inputs.charts.v1.XlSpecZookeeperImage>;
            /**
             * component resource configuration
             */
            resources?: pulumi.Input<inputs.charts.v1.XlSpecZookeeperResources>;
        }

        /**
         * component specific image options
         */
        export interface XlSpecZookeeperImage {
            /**
             * component image pull policy
             */
            pullPolicy?: pulumi.Input<string>;
            /**
             * component container registry and repository name
             */
            repository?: pulumi.Input<string>;
            /**
             * component serviceAccountName
             */
            serviceAccountName?: pulumi.Input<string>;
            /**
             * component container tag
             */
            tag?: pulumi.Input<string>;
        }

        /**
         * component resource configuration
         */
        export interface XlSpecZookeeperResources {
            /**
             * component limits
             */
            limits?: pulumi.Input<inputs.charts.v1.XlSpecZookeeperResourcesLimits>;
        }

        /**
         * component limits
         */
        export interface XlSpecZookeeperResourcesLimits {
            /**
             * component memory limits
             */
            memory?: pulumi.Input<string>;
        }
    }
}
