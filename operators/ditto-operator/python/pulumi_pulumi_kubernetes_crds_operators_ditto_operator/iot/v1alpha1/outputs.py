# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'DittoSpec',
]

@pulumi.output_type
class DittoSpec(dict):
    def __init__(__self__, *,
                 create_default_user: Optional[bool] = None,
                 devops_secure_status: Optional[bool] = None,
                 enable_dummy_auth: Optional[bool] = None,
                 version: Optional[str] = None):
        """
        :param bool create_default_user: Create the default "ditto" user when initially deploying.
        :param bool devops_secure_status: Secure the devops status information.
        :param bool enable_dummy_auth: Enable the "dummy authentication" mode.
        :param str version: Override the image version of the Ditto images.
        """
        if create_default_user is not None:
            pulumi.set(__self__, "create_default_user", create_default_user)
        if devops_secure_status is not None:
            pulumi.set(__self__, "devops_secure_status", devops_secure_status)
        if enable_dummy_auth is not None:
            pulumi.set(__self__, "enable_dummy_auth", enable_dummy_auth)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="createDefaultUser")
    def create_default_user(self) -> Optional[bool]:
        """
        Create the default "ditto" user when initially deploying.
        """
        return pulumi.get(self, "create_default_user")

    @property
    @pulumi.getter(name="devopsSecureStatus")
    def devops_secure_status(self) -> Optional[bool]:
        """
        Secure the devops status information.
        """
        return pulumi.get(self, "devops_secure_status")

    @property
    @pulumi.getter(name="enableDummyAuth")
    def enable_dummy_auth(self) -> Optional[bool]:
        """
        Enable the "dummy authentication" mode.
        """
        return pulumi.get(self, "enable_dummy_auth")

    @property
    @pulumi.getter
    def version(self) -> Optional[str]:
        """
        Override the image version of the Ditto images.
        """
        return pulumi.get(self, "version")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


