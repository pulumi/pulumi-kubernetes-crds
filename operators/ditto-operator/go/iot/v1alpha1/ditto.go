// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Ditto struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	Spec       DittoSpecPtrOutput         `pulumi:"spec"`
}

// NewDitto registers a new resource with the given unique name, arguments, and options.
func NewDitto(ctx *pulumi.Context,
	name string, args *DittoArgs, opts ...pulumi.ResourceOption) (*Ditto, error) {
	if args == nil {
		args = &DittoArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("iot.eclipse.org/v1alpha1")
	args.Kind = pulumi.StringPtr("Ditto")
	var resource Ditto
	err := ctx.RegisterResource("kubernetes:iot.eclipse.org/v1alpha1:Ditto", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDitto gets an existing Ditto resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDitto(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DittoState, opts ...pulumi.ResourceOption) (*Ditto, error) {
	var resource Ditto
	err := ctx.ReadResource("kubernetes:iot.eclipse.org/v1alpha1:Ditto", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ditto resources.
type dittoState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *DittoSpec         `pulumi:"spec"`
}

type DittoState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       DittoSpecPtrInput
}

func (DittoState) ElementType() reflect.Type {
	return reflect.TypeOf((*dittoState)(nil)).Elem()
}

type dittoArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *DittoSpec         `pulumi:"spec"`
}

// The set of arguments for constructing a Ditto resource.
type DittoArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       DittoSpecPtrInput
}

func (DittoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dittoArgs)(nil)).Elem()
}
