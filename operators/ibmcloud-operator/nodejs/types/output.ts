// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace ibmcloud {
    export namespace v1alpha1 {
        export interface BindingSpec {
            alias?: string;
            parameters?: outputs.ibmcloud.v1alpha1.BindingSpecParameters[];
            role?: string;
            secretName?: string;
            serviceName: string;
            serviceNamespace?: string;
        }

        export interface BindingSpecParameters {
            /**
             * A parameter may have attributes (e.g. message hub topic might have partitions)
             */
            attributes?: {[key: string]: any};
            /**
             * Name representing the key.
             */
            name: string;
            /**
             * Defaults to null.
             */
            value?: any;
            /**
             * Source for the value. Cannot be used if value is not empty.
             */
            valueFrom?: outputs.ibmcloud.v1alpha1.BindingSpecParametersValueFrom;
        }

        /**
         * Source for the value. Cannot be used if value is not empty.
         */
        export interface BindingSpecParametersValueFrom {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: {[key: string]: any};
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: {[key: string]: any};
        }

        export interface BindingStatus {
            generation?: number;
            instanceId?: string;
            keyInstanceId?: string;
            message?: string;
            secretName?: string;
            state?: string;
        }

        export interface ServiceSpec {
            context?: outputs.ibmcloud.v1alpha1.ServiceSpecContext;
            externalName?: string;
            parameters?: outputs.ibmcloud.v1alpha1.ServiceSpecParameters[];
            plan: string;
            serviceClass: string;
            serviceClassType?: string;
            tags?: string[];
        }

        export interface ServiceSpecContext {
            org?: string;
            region?: string;
            resourcegroup?: string;
            resourcegroupid?: string;
            resourcelocation?: string;
            space?: string;
            user?: string;
        }

        export interface ServiceSpecParameters {
            /**
             * A parameter may have attributes (e.g. message hub topic might have partitions)
             */
            attributes?: {[key: string]: any};
            /**
             * Name representing the key.
             */
            name: string;
            /**
             * Defaults to null.
             */
            value?: any;
            /**
             * Source for the value. Cannot be used if value is not empty.
             */
            valueFrom?: outputs.ibmcloud.v1alpha1.ServiceSpecParametersValueFrom;
        }

        /**
         * Source for the value. Cannot be used if value is not empty.
         */
        export interface ServiceSpecParametersValueFrom {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: {[key: string]: any};
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: {[key: string]: any};
        }

        export interface ServiceStatus {
            context?: outputs.ibmcloud.v1alpha1.ServiceStatusContext;
            dashboardURL?: string;
            externalName?: string;
            generation?: number;
            instanceId?: string;
            message?: string;
            parameters?: outputs.ibmcloud.v1alpha1.ServiceStatusParameters[];
            plan: string;
            serviceClass: string;
            serviceClassType: string;
            state?: string;
            tags?: string[];
        }

        export interface ServiceStatusContext {
            org?: string;
            region?: string;
            resourcegroup?: string;
            resourcegroupid?: string;
            resourcelocation?: string;
            space?: string;
            user?: string;
        }

        export interface ServiceStatusParameters {
            /**
             * A parameter may have attributes (e.g. message hub topic might have partitions)
             */
            attributes?: {[key: string]: any};
            /**
             * Name representing the key.
             */
            name: string;
            /**
             * Defaults to null.
             */
            value?: any;
            /**
             * Source for the value. Cannot be used if value is not empty.
             */
            valueFrom?: outputs.ibmcloud.v1alpha1.ServiceStatusParametersValueFrom;
        }

        /**
         * Source for the value. Cannot be used if value is not empty.
         */
        export interface ServiceStatusParametersValueFrom {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: {[key: string]: any};
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: {[key: string]: any};
        }

    }
}
