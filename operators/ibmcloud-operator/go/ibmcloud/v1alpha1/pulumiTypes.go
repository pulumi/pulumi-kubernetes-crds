// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Binding is the Schema for the bindings API
type BindingType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BindingSpec defines the desired state of Binding
	Spec *BindingSpec `pulumi:"spec"`
	// BindingStatus defines the observed state of Binding
	Status *BindingStatus `pulumi:"status"`
}

// BindingTypeInput is an input type that accepts BindingTypeArgs and BindingTypeOutput values.
// You can construct a concrete instance of `BindingTypeInput` via:
//
//          BindingTypeArgs{...}
type BindingTypeInput interface {
	pulumi.Input

	ToBindingTypeOutput() BindingTypeOutput
	ToBindingTypeOutputWithContext(context.Context) BindingTypeOutput
}

// Binding is the Schema for the bindings API
type BindingTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BindingSpec defines the desired state of Binding
	Spec BindingSpecPtrInput `pulumi:"spec"`
	// BindingStatus defines the observed state of Binding
	Status BindingStatusPtrInput `pulumi:"status"`
}

func (BindingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingType)(nil)).Elem()
}

func (i BindingTypeArgs) ToBindingTypeOutput() BindingTypeOutput {
	return i.ToBindingTypeOutputWithContext(context.Background())
}

func (i BindingTypeArgs) ToBindingTypeOutputWithContext(ctx context.Context) BindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingTypeOutput)
}

// Binding is the Schema for the bindings API
type BindingTypeOutput struct{ *pulumi.OutputState }

func (BindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingType)(nil)).Elem()
}

func (o BindingTypeOutput) ToBindingTypeOutput() BindingTypeOutput {
	return o
}

func (o BindingTypeOutput) ToBindingTypeOutputWithContext(ctx context.Context) BindingTypeOutput {
	return o
}

func (o BindingTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BindingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BindingTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BindingType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BindingSpec defines the desired state of Binding
func (o BindingTypeOutput) Spec() BindingSpecPtrOutput {
	return o.ApplyT(func(v BindingType) *BindingSpec { return v.Spec }).(BindingSpecPtrOutput)
}

// BindingStatus defines the observed state of Binding
func (o BindingTypeOutput) Status() BindingStatusPtrOutput {
	return o.ApplyT(func(v BindingType) *BindingStatus { return v.Status }).(BindingStatusPtrOutput)
}

type BindingMetadata struct {
}

// BindingMetadataInput is an input type that accepts BindingMetadataArgs and BindingMetadataOutput values.
// You can construct a concrete instance of `BindingMetadataInput` via:
//
//          BindingMetadataArgs{...}
type BindingMetadataInput interface {
	pulumi.Input

	ToBindingMetadataOutput() BindingMetadataOutput
	ToBindingMetadataOutputWithContext(context.Context) BindingMetadataOutput
}

type BindingMetadataArgs struct {
}

func (BindingMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingMetadata)(nil)).Elem()
}

func (i BindingMetadataArgs) ToBindingMetadataOutput() BindingMetadataOutput {
	return i.ToBindingMetadataOutputWithContext(context.Background())
}

func (i BindingMetadataArgs) ToBindingMetadataOutputWithContext(ctx context.Context) BindingMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingMetadataOutput)
}

type BindingMetadataOutput struct{ *pulumi.OutputState }

func (BindingMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingMetadata)(nil)).Elem()
}

func (o BindingMetadataOutput) ToBindingMetadataOutput() BindingMetadataOutput {
	return o
}

func (o BindingMetadataOutput) ToBindingMetadataOutputWithContext(ctx context.Context) BindingMetadataOutput {
	return o
}

// BindingSpec defines the desired state of Binding
type BindingSpec struct {
	Alias            *string                 `pulumi:"alias"`
	Parameters       []BindingSpecParameters `pulumi:"parameters"`
	Role             *string                 `pulumi:"role"`
	SecretName       *string                 `pulumi:"secretName"`
	ServiceName      string                  `pulumi:"serviceName"`
	ServiceNamespace *string                 `pulumi:"serviceNamespace"`
}

// BindingSpecInput is an input type that accepts BindingSpecArgs and BindingSpecOutput values.
// You can construct a concrete instance of `BindingSpecInput` via:
//
//          BindingSpecArgs{...}
type BindingSpecInput interface {
	pulumi.Input

	ToBindingSpecOutput() BindingSpecOutput
	ToBindingSpecOutputWithContext(context.Context) BindingSpecOutput
}

// BindingSpec defines the desired state of Binding
type BindingSpecArgs struct {
	Alias            pulumi.StringPtrInput           `pulumi:"alias"`
	Parameters       BindingSpecParametersArrayInput `pulumi:"parameters"`
	Role             pulumi.StringPtrInput           `pulumi:"role"`
	SecretName       pulumi.StringPtrInput           `pulumi:"secretName"`
	ServiceName      pulumi.StringInput              `pulumi:"serviceName"`
	ServiceNamespace pulumi.StringPtrInput           `pulumi:"serviceNamespace"`
}

func (BindingSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpec)(nil)).Elem()
}

func (i BindingSpecArgs) ToBindingSpecOutput() BindingSpecOutput {
	return i.ToBindingSpecOutputWithContext(context.Background())
}

func (i BindingSpecArgs) ToBindingSpecOutputWithContext(ctx context.Context) BindingSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecOutput)
}

func (i BindingSpecArgs) ToBindingSpecPtrOutput() BindingSpecPtrOutput {
	return i.ToBindingSpecPtrOutputWithContext(context.Background())
}

func (i BindingSpecArgs) ToBindingSpecPtrOutputWithContext(ctx context.Context) BindingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecOutput).ToBindingSpecPtrOutputWithContext(ctx)
}

// BindingSpecPtrInput is an input type that accepts BindingSpecArgs, BindingSpecPtr and BindingSpecPtrOutput values.
// You can construct a concrete instance of `BindingSpecPtrInput` via:
//
//          BindingSpecArgs{...}
//
//  or:
//
//          nil
type BindingSpecPtrInput interface {
	pulumi.Input

	ToBindingSpecPtrOutput() BindingSpecPtrOutput
	ToBindingSpecPtrOutputWithContext(context.Context) BindingSpecPtrOutput
}

type bindingSpecPtrType BindingSpecArgs

func BindingSpecPtr(v *BindingSpecArgs) BindingSpecPtrInput {
	return (*bindingSpecPtrType)(v)
}

func (*bindingSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpec)(nil)).Elem()
}

func (i *bindingSpecPtrType) ToBindingSpecPtrOutput() BindingSpecPtrOutput {
	return i.ToBindingSpecPtrOutputWithContext(context.Background())
}

func (i *bindingSpecPtrType) ToBindingSpecPtrOutputWithContext(ctx context.Context) BindingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecPtrOutput)
}

// BindingSpec defines the desired state of Binding
type BindingSpecOutput struct{ *pulumi.OutputState }

func (BindingSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpec)(nil)).Elem()
}

func (o BindingSpecOutput) ToBindingSpecOutput() BindingSpecOutput {
	return o
}

func (o BindingSpecOutput) ToBindingSpecOutputWithContext(ctx context.Context) BindingSpecOutput {
	return o
}

func (o BindingSpecOutput) ToBindingSpecPtrOutput() BindingSpecPtrOutput {
	return o.ToBindingSpecPtrOutputWithContext(context.Background())
}

func (o BindingSpecOutput) ToBindingSpecPtrOutputWithContext(ctx context.Context) BindingSpecPtrOutput {
	return o.ApplyT(func(v BindingSpec) *BindingSpec {
		return &v
	}).(BindingSpecPtrOutput)
}
func (o BindingSpecOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingSpec) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

func (o BindingSpecOutput) Parameters() BindingSpecParametersArrayOutput {
	return o.ApplyT(func(v BindingSpec) []BindingSpecParameters { return v.Parameters }).(BindingSpecParametersArrayOutput)
}

func (o BindingSpecOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingSpec) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o BindingSpecOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingSpec) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

func (o BindingSpecOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v BindingSpec) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o BindingSpecOutput) ServiceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingSpec) *string { return v.ServiceNamespace }).(pulumi.StringPtrOutput)
}

type BindingSpecPtrOutput struct{ *pulumi.OutputState }

func (BindingSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpec)(nil)).Elem()
}

func (o BindingSpecPtrOutput) ToBindingSpecPtrOutput() BindingSpecPtrOutput {
	return o
}

func (o BindingSpecPtrOutput) ToBindingSpecPtrOutputWithContext(ctx context.Context) BindingSpecPtrOutput {
	return o
}

func (o BindingSpecPtrOutput) Elem() BindingSpecOutput {
	return o.ApplyT(func(v *BindingSpec) BindingSpec { return *v }).(BindingSpecOutput)
}

func (o BindingSpecPtrOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Alias
	}).(pulumi.StringPtrOutput)
}

func (o BindingSpecPtrOutput) Parameters() BindingSpecParametersArrayOutput {
	return o.ApplyT(func(v *BindingSpec) []BindingSpecParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(BindingSpecParametersArrayOutput)
}

func (o BindingSpecPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o BindingSpecPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpec) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

func (o BindingSpecPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

func (o BindingSpecPtrOutput) ServiceNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNamespace
	}).(pulumi.StringPtrOutput)
}

// Param represents a key-value pair
type BindingSpecParameters struct {
	// A parameter may have attributes (e.g. message hub topic might have partitions)
	Attributes map[string]map[string]interface{} `pulumi:"attributes"`
	// Name representing the key.
	Name string `pulumi:"name"`
	// Defaults to null.
	Value interface{} `pulumi:"value"`
	// Source for the value. Cannot be used if value is not empty.
	ValueFrom *BindingSpecParametersValueFrom `pulumi:"valueFrom"`
}

// BindingSpecParametersInput is an input type that accepts BindingSpecParametersArgs and BindingSpecParametersOutput values.
// You can construct a concrete instance of `BindingSpecParametersInput` via:
//
//          BindingSpecParametersArgs{...}
type BindingSpecParametersInput interface {
	pulumi.Input

	ToBindingSpecParametersOutput() BindingSpecParametersOutput
	ToBindingSpecParametersOutputWithContext(context.Context) BindingSpecParametersOutput
}

// Param represents a key-value pair
type BindingSpecParametersArgs struct {
	// A parameter may have attributes (e.g. message hub topic might have partitions)
	Attributes pulumi.MapMapInput `pulumi:"attributes"`
	// Name representing the key.
	Name pulumi.StringInput `pulumi:"name"`
	// Defaults to null.
	Value pulumi.Input `pulumi:"value"`
	// Source for the value. Cannot be used if value is not empty.
	ValueFrom BindingSpecParametersValueFromPtrInput `pulumi:"valueFrom"`
}

func (BindingSpecParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParameters)(nil)).Elem()
}

func (i BindingSpecParametersArgs) ToBindingSpecParametersOutput() BindingSpecParametersOutput {
	return i.ToBindingSpecParametersOutputWithContext(context.Background())
}

func (i BindingSpecParametersArgs) ToBindingSpecParametersOutputWithContext(ctx context.Context) BindingSpecParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersOutput)
}

// BindingSpecParametersArrayInput is an input type that accepts BindingSpecParametersArray and BindingSpecParametersArrayOutput values.
// You can construct a concrete instance of `BindingSpecParametersArrayInput` via:
//
//          BindingSpecParametersArray{ BindingSpecParametersArgs{...} }
type BindingSpecParametersArrayInput interface {
	pulumi.Input

	ToBindingSpecParametersArrayOutput() BindingSpecParametersArrayOutput
	ToBindingSpecParametersArrayOutputWithContext(context.Context) BindingSpecParametersArrayOutput
}

type BindingSpecParametersArray []BindingSpecParametersInput

func (BindingSpecParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingSpecParameters)(nil)).Elem()
}

func (i BindingSpecParametersArray) ToBindingSpecParametersArrayOutput() BindingSpecParametersArrayOutput {
	return i.ToBindingSpecParametersArrayOutputWithContext(context.Background())
}

func (i BindingSpecParametersArray) ToBindingSpecParametersArrayOutputWithContext(ctx context.Context) BindingSpecParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersArrayOutput)
}

// Param represents a key-value pair
type BindingSpecParametersOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParameters)(nil)).Elem()
}

func (o BindingSpecParametersOutput) ToBindingSpecParametersOutput() BindingSpecParametersOutput {
	return o
}

func (o BindingSpecParametersOutput) ToBindingSpecParametersOutputWithContext(ctx context.Context) BindingSpecParametersOutput {
	return o
}

// A parameter may have attributes (e.g. message hub topic might have partitions)
func (o BindingSpecParametersOutput) Attributes() pulumi.MapMapOutput {
	return o.ApplyT(func(v BindingSpecParameters) map[string]map[string]interface{} { return v.Attributes }).(pulumi.MapMapOutput)
}

// Name representing the key.
func (o BindingSpecParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BindingSpecParameters) string { return v.Name }).(pulumi.StringOutput)
}

// Defaults to null.
func (o BindingSpecParametersOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v BindingSpecParameters) interface{} { return v.Value }).(pulumi.AnyOutput)
}

// Source for the value. Cannot be used if value is not empty.
func (o BindingSpecParametersOutput) ValueFrom() BindingSpecParametersValueFromPtrOutput {
	return o.ApplyT(func(v BindingSpecParameters) *BindingSpecParametersValueFrom { return v.ValueFrom }).(BindingSpecParametersValueFromPtrOutput)
}

type BindingSpecParametersArrayOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingSpecParameters)(nil)).Elem()
}

func (o BindingSpecParametersArrayOutput) ToBindingSpecParametersArrayOutput() BindingSpecParametersArrayOutput {
	return o
}

func (o BindingSpecParametersArrayOutput) ToBindingSpecParametersArrayOutputWithContext(ctx context.Context) BindingSpecParametersArrayOutput {
	return o
}

func (o BindingSpecParametersArrayOutput) Index(i pulumi.IntInput) BindingSpecParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingSpecParameters {
		return vs[0].([]BindingSpecParameters)[vs[1].(int)]
	}).(BindingSpecParametersOutput)
}

type BindingSpecParametersAttributes struct {
}

// BindingSpecParametersAttributesInput is an input type that accepts BindingSpecParametersAttributesArgs and BindingSpecParametersAttributesOutput values.
// You can construct a concrete instance of `BindingSpecParametersAttributesInput` via:
//
//          BindingSpecParametersAttributesArgs{...}
type BindingSpecParametersAttributesInput interface {
	pulumi.Input

	ToBindingSpecParametersAttributesOutput() BindingSpecParametersAttributesOutput
	ToBindingSpecParametersAttributesOutputWithContext(context.Context) BindingSpecParametersAttributesOutput
}

type BindingSpecParametersAttributesArgs struct {
}

func (BindingSpecParametersAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersAttributes)(nil)).Elem()
}

func (i BindingSpecParametersAttributesArgs) ToBindingSpecParametersAttributesOutput() BindingSpecParametersAttributesOutput {
	return i.ToBindingSpecParametersAttributesOutputWithContext(context.Background())
}

func (i BindingSpecParametersAttributesArgs) ToBindingSpecParametersAttributesOutputWithContext(ctx context.Context) BindingSpecParametersAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersAttributesOutput)
}

type BindingSpecParametersAttributesOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersAttributes)(nil)).Elem()
}

func (o BindingSpecParametersAttributesOutput) ToBindingSpecParametersAttributesOutput() BindingSpecParametersAttributesOutput {
	return o
}

func (o BindingSpecParametersAttributesOutput) ToBindingSpecParametersAttributesOutputWithContext(ctx context.Context) BindingSpecParametersAttributesOutput {
	return o
}

// Source for the value. Cannot be used if value is not empty.
type BindingSpecParametersValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *BindingSpecParametersValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a key of a secret in the resource namespace
	SecretKeyRef *BindingSpecParametersValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// BindingSpecParametersValueFromInput is an input type that accepts BindingSpecParametersValueFromArgs and BindingSpecParametersValueFromOutput values.
// You can construct a concrete instance of `BindingSpecParametersValueFromInput` via:
//
//          BindingSpecParametersValueFromArgs{...}
type BindingSpecParametersValueFromInput interface {
	pulumi.Input

	ToBindingSpecParametersValueFromOutput() BindingSpecParametersValueFromOutput
	ToBindingSpecParametersValueFromOutputWithContext(context.Context) BindingSpecParametersValueFromOutput
}

// Source for the value. Cannot be used if value is not empty.
type BindingSpecParametersValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef BindingSpecParametersValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a key of a secret in the resource namespace
	SecretKeyRef BindingSpecParametersValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (BindingSpecParametersValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersValueFrom)(nil)).Elem()
}

func (i BindingSpecParametersValueFromArgs) ToBindingSpecParametersValueFromOutput() BindingSpecParametersValueFromOutput {
	return i.ToBindingSpecParametersValueFromOutputWithContext(context.Background())
}

func (i BindingSpecParametersValueFromArgs) ToBindingSpecParametersValueFromOutputWithContext(ctx context.Context) BindingSpecParametersValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromOutput)
}

func (i BindingSpecParametersValueFromArgs) ToBindingSpecParametersValueFromPtrOutput() BindingSpecParametersValueFromPtrOutput {
	return i.ToBindingSpecParametersValueFromPtrOutputWithContext(context.Background())
}

func (i BindingSpecParametersValueFromArgs) ToBindingSpecParametersValueFromPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromOutput).ToBindingSpecParametersValueFromPtrOutputWithContext(ctx)
}

// BindingSpecParametersValueFromPtrInput is an input type that accepts BindingSpecParametersValueFromArgs, BindingSpecParametersValueFromPtr and BindingSpecParametersValueFromPtrOutput values.
// You can construct a concrete instance of `BindingSpecParametersValueFromPtrInput` via:
//
//          BindingSpecParametersValueFromArgs{...}
//
//  or:
//
//          nil
type BindingSpecParametersValueFromPtrInput interface {
	pulumi.Input

	ToBindingSpecParametersValueFromPtrOutput() BindingSpecParametersValueFromPtrOutput
	ToBindingSpecParametersValueFromPtrOutputWithContext(context.Context) BindingSpecParametersValueFromPtrOutput
}

type bindingSpecParametersValueFromPtrType BindingSpecParametersValueFromArgs

func BindingSpecParametersValueFromPtr(v *BindingSpecParametersValueFromArgs) BindingSpecParametersValueFromPtrInput {
	return (*bindingSpecParametersValueFromPtrType)(v)
}

func (*bindingSpecParametersValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpecParametersValueFrom)(nil)).Elem()
}

func (i *bindingSpecParametersValueFromPtrType) ToBindingSpecParametersValueFromPtrOutput() BindingSpecParametersValueFromPtrOutput {
	return i.ToBindingSpecParametersValueFromPtrOutputWithContext(context.Background())
}

func (i *bindingSpecParametersValueFromPtrType) ToBindingSpecParametersValueFromPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromPtrOutput)
}

// Source for the value. Cannot be used if value is not empty.
type BindingSpecParametersValueFromOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersValueFrom)(nil)).Elem()
}

func (o BindingSpecParametersValueFromOutput) ToBindingSpecParametersValueFromOutput() BindingSpecParametersValueFromOutput {
	return o
}

func (o BindingSpecParametersValueFromOutput) ToBindingSpecParametersValueFromOutputWithContext(ctx context.Context) BindingSpecParametersValueFromOutput {
	return o
}

func (o BindingSpecParametersValueFromOutput) ToBindingSpecParametersValueFromPtrOutput() BindingSpecParametersValueFromPtrOutput {
	return o.ToBindingSpecParametersValueFromPtrOutputWithContext(context.Background())
}

func (o BindingSpecParametersValueFromOutput) ToBindingSpecParametersValueFromPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFrom) *BindingSpecParametersValueFrom {
		return &v
	}).(BindingSpecParametersValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o BindingSpecParametersValueFromOutput) ConfigMapKeyRef() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFrom) *BindingSpecParametersValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(BindingSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
func (o BindingSpecParametersValueFromOutput) SecretKeyRef() BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFrom) *BindingSpecParametersValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(BindingSpecParametersValueFromSecretKeyRefPtrOutput)
}

type BindingSpecParametersValueFromPtrOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpecParametersValueFrom)(nil)).Elem()
}

func (o BindingSpecParametersValueFromPtrOutput) ToBindingSpecParametersValueFromPtrOutput() BindingSpecParametersValueFromPtrOutput {
	return o
}

func (o BindingSpecParametersValueFromPtrOutput) ToBindingSpecParametersValueFromPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromPtrOutput {
	return o
}

func (o BindingSpecParametersValueFromPtrOutput) Elem() BindingSpecParametersValueFromOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFrom) BindingSpecParametersValueFrom { return *v }).(BindingSpecParametersValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o BindingSpecParametersValueFromPtrOutput) ConfigMapKeyRef() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFrom) *BindingSpecParametersValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(BindingSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
func (o BindingSpecParametersValueFromPtrOutput) SecretKeyRef() BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFrom) *BindingSpecParametersValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(BindingSpecParametersValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BindingSpecParametersValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BindingSpecParametersValueFromConfigMapKeyRefInput is an input type that accepts BindingSpecParametersValueFromConfigMapKeyRefArgs and BindingSpecParametersValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `BindingSpecParametersValueFromConfigMapKeyRefInput` via:
//
//          BindingSpecParametersValueFromConfigMapKeyRefArgs{...}
type BindingSpecParametersValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToBindingSpecParametersValueFromConfigMapKeyRefOutput() BindingSpecParametersValueFromConfigMapKeyRefOutput
	ToBindingSpecParametersValueFromConfigMapKeyRefOutputWithContext(context.Context) BindingSpecParametersValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type BindingSpecParametersValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BindingSpecParametersValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i BindingSpecParametersValueFromConfigMapKeyRefArgs) ToBindingSpecParametersValueFromConfigMapKeyRefOutput() BindingSpecParametersValueFromConfigMapKeyRefOutput {
	return i.ToBindingSpecParametersValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i BindingSpecParametersValueFromConfigMapKeyRefArgs) ToBindingSpecParametersValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) BindingSpecParametersValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromConfigMapKeyRefOutput)
}

func (i BindingSpecParametersValueFromConfigMapKeyRefArgs) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutput() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return i.ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i BindingSpecParametersValueFromConfigMapKeyRefArgs) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromConfigMapKeyRefOutput).ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// BindingSpecParametersValueFromConfigMapKeyRefPtrInput is an input type that accepts BindingSpecParametersValueFromConfigMapKeyRefArgs, BindingSpecParametersValueFromConfigMapKeyRefPtr and BindingSpecParametersValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `BindingSpecParametersValueFromConfigMapKeyRefPtrInput` via:
//
//          BindingSpecParametersValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type BindingSpecParametersValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutput() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput
	ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) BindingSpecParametersValueFromConfigMapKeyRefPtrOutput
}

type bindingSpecParametersValueFromConfigMapKeyRefPtrType BindingSpecParametersValueFromConfigMapKeyRefArgs

func BindingSpecParametersValueFromConfigMapKeyRefPtr(v *BindingSpecParametersValueFromConfigMapKeyRefArgs) BindingSpecParametersValueFromConfigMapKeyRefPtrInput {
	return (*bindingSpecParametersValueFromConfigMapKeyRefPtrType)(v)
}

func (*bindingSpecParametersValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *bindingSpecParametersValueFromConfigMapKeyRefPtrType) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutput() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return i.ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *bindingSpecParametersValueFromConfigMapKeyRefPtrType) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BindingSpecParametersValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) ToBindingSpecParametersValueFromConfigMapKeyRefOutput() BindingSpecParametersValueFromConfigMapKeyRefOutput {
	return o
}

func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) ToBindingSpecParametersValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) BindingSpecParametersValueFromConfigMapKeyRefOutput {
	return o
}

func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutput() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromConfigMapKeyRef) *BindingSpecParametersValueFromConfigMapKeyRef {
		return &v
	}).(BindingSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BindingSpecParametersValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BindingSpecParametersValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutput() BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) ToBindingSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) Elem() BindingSpecParametersValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromConfigMapKeyRef) BindingSpecParametersValueFromConfigMapKeyRef {
		return *v
	}).(BindingSpecParametersValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BindingSpecParametersValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a key of a secret in the resource namespace
type BindingSpecParametersValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BindingSpecParametersValueFromSecretKeyRefInput is an input type that accepts BindingSpecParametersValueFromSecretKeyRefArgs and BindingSpecParametersValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `BindingSpecParametersValueFromSecretKeyRefInput` via:
//
//          BindingSpecParametersValueFromSecretKeyRefArgs{...}
type BindingSpecParametersValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToBindingSpecParametersValueFromSecretKeyRefOutput() BindingSpecParametersValueFromSecretKeyRefOutput
	ToBindingSpecParametersValueFromSecretKeyRefOutputWithContext(context.Context) BindingSpecParametersValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the resource namespace
type BindingSpecParametersValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BindingSpecParametersValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (i BindingSpecParametersValueFromSecretKeyRefArgs) ToBindingSpecParametersValueFromSecretKeyRefOutput() BindingSpecParametersValueFromSecretKeyRefOutput {
	return i.ToBindingSpecParametersValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i BindingSpecParametersValueFromSecretKeyRefArgs) ToBindingSpecParametersValueFromSecretKeyRefOutputWithContext(ctx context.Context) BindingSpecParametersValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromSecretKeyRefOutput)
}

func (i BindingSpecParametersValueFromSecretKeyRefArgs) ToBindingSpecParametersValueFromSecretKeyRefPtrOutput() BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return i.ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i BindingSpecParametersValueFromSecretKeyRefArgs) ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromSecretKeyRefOutput).ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// BindingSpecParametersValueFromSecretKeyRefPtrInput is an input type that accepts BindingSpecParametersValueFromSecretKeyRefArgs, BindingSpecParametersValueFromSecretKeyRefPtr and BindingSpecParametersValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `BindingSpecParametersValueFromSecretKeyRefPtrInput` via:
//
//          BindingSpecParametersValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type BindingSpecParametersValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToBindingSpecParametersValueFromSecretKeyRefPtrOutput() BindingSpecParametersValueFromSecretKeyRefPtrOutput
	ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Context) BindingSpecParametersValueFromSecretKeyRefPtrOutput
}

type bindingSpecParametersValueFromSecretKeyRefPtrType BindingSpecParametersValueFromSecretKeyRefArgs

func BindingSpecParametersValueFromSecretKeyRefPtr(v *BindingSpecParametersValueFromSecretKeyRefArgs) BindingSpecParametersValueFromSecretKeyRefPtrInput {
	return (*bindingSpecParametersValueFromSecretKeyRefPtrType)(v)
}

func (*bindingSpecParametersValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (i *bindingSpecParametersValueFromSecretKeyRefPtrType) ToBindingSpecParametersValueFromSecretKeyRefPtrOutput() BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return i.ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *bindingSpecParametersValueFromSecretKeyRefPtrType) ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingSpecParametersValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
type BindingSpecParametersValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (o BindingSpecParametersValueFromSecretKeyRefOutput) ToBindingSpecParametersValueFromSecretKeyRefOutput() BindingSpecParametersValueFromSecretKeyRefOutput {
	return o
}

func (o BindingSpecParametersValueFromSecretKeyRefOutput) ToBindingSpecParametersValueFromSecretKeyRefOutputWithContext(ctx context.Context) BindingSpecParametersValueFromSecretKeyRefOutput {
	return o
}

func (o BindingSpecParametersValueFromSecretKeyRefOutput) ToBindingSpecParametersValueFromSecretKeyRefPtrOutput() BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o BindingSpecParametersValueFromSecretKeyRefOutput) ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromSecretKeyRef) *BindingSpecParametersValueFromSecretKeyRef {
		return &v
	}).(BindingSpecParametersValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BindingSpecParametersValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BindingSpecParametersValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BindingSpecParametersValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BindingSpecParametersValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BindingSpecParametersValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BindingSpecParametersValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (o BindingSpecParametersValueFromSecretKeyRefPtrOutput) ToBindingSpecParametersValueFromSecretKeyRefPtrOutput() BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return o
}

func (o BindingSpecParametersValueFromSecretKeyRefPtrOutput) ToBindingSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BindingSpecParametersValueFromSecretKeyRefPtrOutput {
	return o
}

func (o BindingSpecParametersValueFromSecretKeyRefPtrOutput) Elem() BindingSpecParametersValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromSecretKeyRef) BindingSpecParametersValueFromSecretKeyRef {
		return *v
	}).(BindingSpecParametersValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BindingSpecParametersValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BindingSpecParametersValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BindingSpecParametersValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BindingSpecParametersValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// BindingStatus defines the observed state of Binding
type BindingStatus struct {
	Generation    *int    `pulumi:"generation"`
	InstanceId    *string `pulumi:"instanceId"`
	KeyInstanceId *string `pulumi:"keyInstanceId"`
	Message       *string `pulumi:"message"`
	SecretName    *string `pulumi:"secretName"`
	State         *string `pulumi:"state"`
}

// BindingStatusInput is an input type that accepts BindingStatusArgs and BindingStatusOutput values.
// You can construct a concrete instance of `BindingStatusInput` via:
//
//          BindingStatusArgs{...}
type BindingStatusInput interface {
	pulumi.Input

	ToBindingStatusOutput() BindingStatusOutput
	ToBindingStatusOutputWithContext(context.Context) BindingStatusOutput
}

// BindingStatus defines the observed state of Binding
type BindingStatusArgs struct {
	Generation    pulumi.IntPtrInput    `pulumi:"generation"`
	InstanceId    pulumi.StringPtrInput `pulumi:"instanceId"`
	KeyInstanceId pulumi.StringPtrInput `pulumi:"keyInstanceId"`
	Message       pulumi.StringPtrInput `pulumi:"message"`
	SecretName    pulumi.StringPtrInput `pulumi:"secretName"`
	State         pulumi.StringPtrInput `pulumi:"state"`
}

func (BindingStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingStatus)(nil)).Elem()
}

func (i BindingStatusArgs) ToBindingStatusOutput() BindingStatusOutput {
	return i.ToBindingStatusOutputWithContext(context.Background())
}

func (i BindingStatusArgs) ToBindingStatusOutputWithContext(ctx context.Context) BindingStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingStatusOutput)
}

func (i BindingStatusArgs) ToBindingStatusPtrOutput() BindingStatusPtrOutput {
	return i.ToBindingStatusPtrOutputWithContext(context.Background())
}

func (i BindingStatusArgs) ToBindingStatusPtrOutputWithContext(ctx context.Context) BindingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingStatusOutput).ToBindingStatusPtrOutputWithContext(ctx)
}

// BindingStatusPtrInput is an input type that accepts BindingStatusArgs, BindingStatusPtr and BindingStatusPtrOutput values.
// You can construct a concrete instance of `BindingStatusPtrInput` via:
//
//          BindingStatusArgs{...}
//
//  or:
//
//          nil
type BindingStatusPtrInput interface {
	pulumi.Input

	ToBindingStatusPtrOutput() BindingStatusPtrOutput
	ToBindingStatusPtrOutputWithContext(context.Context) BindingStatusPtrOutput
}

type bindingStatusPtrType BindingStatusArgs

func BindingStatusPtr(v *BindingStatusArgs) BindingStatusPtrInput {
	return (*bindingStatusPtrType)(v)
}

func (*bindingStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingStatus)(nil)).Elem()
}

func (i *bindingStatusPtrType) ToBindingStatusPtrOutput() BindingStatusPtrOutput {
	return i.ToBindingStatusPtrOutputWithContext(context.Background())
}

func (i *bindingStatusPtrType) ToBindingStatusPtrOutputWithContext(ctx context.Context) BindingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingStatusPtrOutput)
}

// BindingStatus defines the observed state of Binding
type BindingStatusOutput struct{ *pulumi.OutputState }

func (BindingStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingStatus)(nil)).Elem()
}

func (o BindingStatusOutput) ToBindingStatusOutput() BindingStatusOutput {
	return o
}

func (o BindingStatusOutput) ToBindingStatusOutputWithContext(ctx context.Context) BindingStatusOutput {
	return o
}

func (o BindingStatusOutput) ToBindingStatusPtrOutput() BindingStatusPtrOutput {
	return o.ToBindingStatusPtrOutputWithContext(context.Background())
}

func (o BindingStatusOutput) ToBindingStatusPtrOutputWithContext(ctx context.Context) BindingStatusPtrOutput {
	return o.ApplyT(func(v BindingStatus) *BindingStatus {
		return &v
	}).(BindingStatusPtrOutput)
}
func (o BindingStatusOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BindingStatus) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

func (o BindingStatusOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingStatus) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o BindingStatusOutput) KeyInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingStatus) *string { return v.KeyInstanceId }).(pulumi.StringPtrOutput)
}

func (o BindingStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o BindingStatusOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingStatus) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

func (o BindingStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type BindingStatusPtrOutput struct{ *pulumi.OutputState }

func (BindingStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindingStatus)(nil)).Elem()
}

func (o BindingStatusPtrOutput) ToBindingStatusPtrOutput() BindingStatusPtrOutput {
	return o
}

func (o BindingStatusPtrOutput) ToBindingStatusPtrOutputWithContext(ctx context.Context) BindingStatusPtrOutput {
	return o
}

func (o BindingStatusPtrOutput) Elem() BindingStatusOutput {
	return o.ApplyT(func(v *BindingStatus) BindingStatus { return *v }).(BindingStatusOutput)
}

func (o BindingStatusPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BindingStatus) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

func (o BindingStatusPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingStatus) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o BindingStatusPtrOutput) KeyInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingStatus) *string {
		if v == nil {
			return nil
		}
		return v.KeyInstanceId
	}).(pulumi.StringPtrOutput)
}

func (o BindingStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o BindingStatusPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingStatus) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

func (o BindingStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindingStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Service is the Schema for the services API
type ServiceType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ServiceSpec defines the desired state of Service
	Spec *ServiceSpec `pulumi:"spec"`
	// ServiceStatus defines the observed state of Service
	Status *ServiceStatus `pulumi:"status"`
}

// ServiceTypeInput is an input type that accepts ServiceTypeArgs and ServiceTypeOutput values.
// You can construct a concrete instance of `ServiceTypeInput` via:
//
//          ServiceTypeArgs{...}
type ServiceTypeInput interface {
	pulumi.Input

	ToServiceTypeOutput() ServiceTypeOutput
	ToServiceTypeOutputWithContext(context.Context) ServiceTypeOutput
}

// Service is the Schema for the services API
type ServiceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ServiceSpec defines the desired state of Service
	Spec ServiceSpecPtrInput `pulumi:"spec"`
	// ServiceStatus defines the observed state of Service
	Status ServiceStatusPtrInput `pulumi:"status"`
}

func (ServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceType)(nil)).Elem()
}

func (i ServiceTypeArgs) ToServiceTypeOutput() ServiceTypeOutput {
	return i.ToServiceTypeOutputWithContext(context.Background())
}

func (i ServiceTypeArgs) ToServiceTypeOutputWithContext(ctx context.Context) ServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTypeOutput)
}

// Service is the Schema for the services API
type ServiceTypeOutput struct{ *pulumi.OutputState }

func (ServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceType)(nil)).Elem()
}

func (o ServiceTypeOutput) ToServiceTypeOutput() ServiceTypeOutput {
	return o
}

func (o ServiceTypeOutput) ToServiceTypeOutputWithContext(ctx context.Context) ServiceTypeOutput {
	return o
}

func (o ServiceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ServiceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ServiceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ServiceSpec defines the desired state of Service
func (o ServiceTypeOutput) Spec() ServiceSpecPtrOutput {
	return o.ApplyT(func(v ServiceType) *ServiceSpec { return v.Spec }).(ServiceSpecPtrOutput)
}

// ServiceStatus defines the observed state of Service
func (o ServiceTypeOutput) Status() ServiceStatusPtrOutput {
	return o.ApplyT(func(v ServiceType) *ServiceStatus { return v.Status }).(ServiceStatusPtrOutput)
}

type ServiceMetadata struct {
}

// ServiceMetadataInput is an input type that accepts ServiceMetadataArgs and ServiceMetadataOutput values.
// You can construct a concrete instance of `ServiceMetadataInput` via:
//
//          ServiceMetadataArgs{...}
type ServiceMetadataInput interface {
	pulumi.Input

	ToServiceMetadataOutput() ServiceMetadataOutput
	ToServiceMetadataOutputWithContext(context.Context) ServiceMetadataOutput
}

type ServiceMetadataArgs struct {
}

func (ServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMetadata)(nil)).Elem()
}

func (i ServiceMetadataArgs) ToServiceMetadataOutput() ServiceMetadataOutput {
	return i.ToServiceMetadataOutputWithContext(context.Background())
}

func (i ServiceMetadataArgs) ToServiceMetadataOutputWithContext(ctx context.Context) ServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMetadataOutput)
}

type ServiceMetadataOutput struct{ *pulumi.OutputState }

func (ServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMetadata)(nil)).Elem()
}

func (o ServiceMetadataOutput) ToServiceMetadataOutput() ServiceMetadataOutput {
	return o
}

func (o ServiceMetadataOutput) ToServiceMetadataOutputWithContext(ctx context.Context) ServiceMetadataOutput {
	return o
}

// ServiceSpec defines the desired state of Service
type ServiceSpec struct {
	// ResourceContext defines the CloudFoundry context and resource group
	Context          *ServiceSpecContext     `pulumi:"context"`
	ExternalName     *string                 `pulumi:"externalName"`
	Parameters       []ServiceSpecParameters `pulumi:"parameters"`
	Plan             string                  `pulumi:"plan"`
	ServiceClass     string                  `pulumi:"serviceClass"`
	ServiceClassType *string                 `pulumi:"serviceClassType"`
	Tags             []string                `pulumi:"tags"`
}

// ServiceSpecInput is an input type that accepts ServiceSpecArgs and ServiceSpecOutput values.
// You can construct a concrete instance of `ServiceSpecInput` via:
//
//          ServiceSpecArgs{...}
type ServiceSpecInput interface {
	pulumi.Input

	ToServiceSpecOutput() ServiceSpecOutput
	ToServiceSpecOutputWithContext(context.Context) ServiceSpecOutput
}

// ServiceSpec defines the desired state of Service
type ServiceSpecArgs struct {
	// ResourceContext defines the CloudFoundry context and resource group
	Context          ServiceSpecContextPtrInput      `pulumi:"context"`
	ExternalName     pulumi.StringPtrInput           `pulumi:"externalName"`
	Parameters       ServiceSpecParametersArrayInput `pulumi:"parameters"`
	Plan             pulumi.StringInput              `pulumi:"plan"`
	ServiceClass     pulumi.StringInput              `pulumi:"serviceClass"`
	ServiceClassType pulumi.StringPtrInput           `pulumi:"serviceClassType"`
	Tags             pulumi.StringArrayInput         `pulumi:"tags"`
}

func (ServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpec)(nil)).Elem()
}

func (i ServiceSpecArgs) ToServiceSpecOutput() ServiceSpecOutput {
	return i.ToServiceSpecOutputWithContext(context.Background())
}

func (i ServiceSpecArgs) ToServiceSpecOutputWithContext(ctx context.Context) ServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecOutput)
}

func (i ServiceSpecArgs) ToServiceSpecPtrOutput() ServiceSpecPtrOutput {
	return i.ToServiceSpecPtrOutputWithContext(context.Background())
}

func (i ServiceSpecArgs) ToServiceSpecPtrOutputWithContext(ctx context.Context) ServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecOutput).ToServiceSpecPtrOutputWithContext(ctx)
}

// ServiceSpecPtrInput is an input type that accepts ServiceSpecArgs, ServiceSpecPtr and ServiceSpecPtrOutput values.
// You can construct a concrete instance of `ServiceSpecPtrInput` via:
//
//          ServiceSpecArgs{...}
//
//  or:
//
//          nil
type ServiceSpecPtrInput interface {
	pulumi.Input

	ToServiceSpecPtrOutput() ServiceSpecPtrOutput
	ToServiceSpecPtrOutputWithContext(context.Context) ServiceSpecPtrOutput
}

type serviceSpecPtrType ServiceSpecArgs

func ServiceSpecPtr(v *ServiceSpecArgs) ServiceSpecPtrInput {
	return (*serviceSpecPtrType)(v)
}

func (*serviceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpec)(nil)).Elem()
}

func (i *serviceSpecPtrType) ToServiceSpecPtrOutput() ServiceSpecPtrOutput {
	return i.ToServiceSpecPtrOutputWithContext(context.Background())
}

func (i *serviceSpecPtrType) ToServiceSpecPtrOutputWithContext(ctx context.Context) ServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecPtrOutput)
}

// ServiceSpec defines the desired state of Service
type ServiceSpecOutput struct{ *pulumi.OutputState }

func (ServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpec)(nil)).Elem()
}

func (o ServiceSpecOutput) ToServiceSpecOutput() ServiceSpecOutput {
	return o
}

func (o ServiceSpecOutput) ToServiceSpecOutputWithContext(ctx context.Context) ServiceSpecOutput {
	return o
}

func (o ServiceSpecOutput) ToServiceSpecPtrOutput() ServiceSpecPtrOutput {
	return o.ToServiceSpecPtrOutputWithContext(context.Background())
}

func (o ServiceSpecOutput) ToServiceSpecPtrOutputWithContext(ctx context.Context) ServiceSpecPtrOutput {
	return o.ApplyT(func(v ServiceSpec) *ServiceSpec {
		return &v
	}).(ServiceSpecPtrOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
func (o ServiceSpecOutput) Context() ServiceSpecContextPtrOutput {
	return o.ApplyT(func(v ServiceSpec) *ServiceSpecContext { return v.Context }).(ServiceSpecContextPtrOutput)
}

func (o ServiceSpecOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpec) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecOutput) Parameters() ServiceSpecParametersArrayOutput {
	return o.ApplyT(func(v ServiceSpec) []ServiceSpecParameters { return v.Parameters }).(ServiceSpecParametersArrayOutput)
}

func (o ServiceSpecOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSpec) string { return v.Plan }).(pulumi.StringOutput)
}

func (o ServiceSpecOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSpec) string { return v.ServiceClass }).(pulumi.StringOutput)
}

func (o ServiceSpecOutput) ServiceClassType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpec) *string { return v.ServiceClassType }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceSpec) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type ServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpec)(nil)).Elem()
}

func (o ServiceSpecPtrOutput) ToServiceSpecPtrOutput() ServiceSpecPtrOutput {
	return o
}

func (o ServiceSpecPtrOutput) ToServiceSpecPtrOutputWithContext(ctx context.Context) ServiceSpecPtrOutput {
	return o
}

func (o ServiceSpecPtrOutput) Elem() ServiceSpecOutput {
	return o.ApplyT(func(v *ServiceSpec) ServiceSpec { return *v }).(ServiceSpecOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
func (o ServiceSpecPtrOutput) Context() ServiceSpecContextPtrOutput {
	return o.ApplyT(func(v *ServiceSpec) *ServiceSpecContext {
		if v == nil {
			return nil
		}
		return v.Context
	}).(ServiceSpecContextPtrOutput)
}

func (o ServiceSpecPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecPtrOutput) Parameters() ServiceSpecParametersArrayOutput {
	return o.ApplyT(func(v *ServiceSpec) []ServiceSpecParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ServiceSpecParametersArrayOutput)
}

func (o ServiceSpecPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecPtrOutput) ServiceClassType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClassType
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
type ServiceSpecContext struct {
	Org              *string `pulumi:"org"`
	Region           *string `pulumi:"region"`
	Resourcegroup    *string `pulumi:"resourcegroup"`
	Resourcegroupid  *string `pulumi:"resourcegroupid"`
	Resourcelocation *string `pulumi:"resourcelocation"`
	Space            *string `pulumi:"space"`
	User             *string `pulumi:"user"`
}

// ServiceSpecContextInput is an input type that accepts ServiceSpecContextArgs and ServiceSpecContextOutput values.
// You can construct a concrete instance of `ServiceSpecContextInput` via:
//
//          ServiceSpecContextArgs{...}
type ServiceSpecContextInput interface {
	pulumi.Input

	ToServiceSpecContextOutput() ServiceSpecContextOutput
	ToServiceSpecContextOutputWithContext(context.Context) ServiceSpecContextOutput
}

// ResourceContext defines the CloudFoundry context and resource group
type ServiceSpecContextArgs struct {
	Org              pulumi.StringPtrInput `pulumi:"org"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	Resourcegroup    pulumi.StringPtrInput `pulumi:"resourcegroup"`
	Resourcegroupid  pulumi.StringPtrInput `pulumi:"resourcegroupid"`
	Resourcelocation pulumi.StringPtrInput `pulumi:"resourcelocation"`
	Space            pulumi.StringPtrInput `pulumi:"space"`
	User             pulumi.StringPtrInput `pulumi:"user"`
}

func (ServiceSpecContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecContext)(nil)).Elem()
}

func (i ServiceSpecContextArgs) ToServiceSpecContextOutput() ServiceSpecContextOutput {
	return i.ToServiceSpecContextOutputWithContext(context.Background())
}

func (i ServiceSpecContextArgs) ToServiceSpecContextOutputWithContext(ctx context.Context) ServiceSpecContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecContextOutput)
}

func (i ServiceSpecContextArgs) ToServiceSpecContextPtrOutput() ServiceSpecContextPtrOutput {
	return i.ToServiceSpecContextPtrOutputWithContext(context.Background())
}

func (i ServiceSpecContextArgs) ToServiceSpecContextPtrOutputWithContext(ctx context.Context) ServiceSpecContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecContextOutput).ToServiceSpecContextPtrOutputWithContext(ctx)
}

// ServiceSpecContextPtrInput is an input type that accepts ServiceSpecContextArgs, ServiceSpecContextPtr and ServiceSpecContextPtrOutput values.
// You can construct a concrete instance of `ServiceSpecContextPtrInput` via:
//
//          ServiceSpecContextArgs{...}
//
//  or:
//
//          nil
type ServiceSpecContextPtrInput interface {
	pulumi.Input

	ToServiceSpecContextPtrOutput() ServiceSpecContextPtrOutput
	ToServiceSpecContextPtrOutputWithContext(context.Context) ServiceSpecContextPtrOutput
}

type serviceSpecContextPtrType ServiceSpecContextArgs

func ServiceSpecContextPtr(v *ServiceSpecContextArgs) ServiceSpecContextPtrInput {
	return (*serviceSpecContextPtrType)(v)
}

func (*serviceSpecContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecContext)(nil)).Elem()
}

func (i *serviceSpecContextPtrType) ToServiceSpecContextPtrOutput() ServiceSpecContextPtrOutput {
	return i.ToServiceSpecContextPtrOutputWithContext(context.Background())
}

func (i *serviceSpecContextPtrType) ToServiceSpecContextPtrOutputWithContext(ctx context.Context) ServiceSpecContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecContextPtrOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
type ServiceSpecContextOutput struct{ *pulumi.OutputState }

func (ServiceSpecContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecContext)(nil)).Elem()
}

func (o ServiceSpecContextOutput) ToServiceSpecContextOutput() ServiceSpecContextOutput {
	return o
}

func (o ServiceSpecContextOutput) ToServiceSpecContextOutputWithContext(ctx context.Context) ServiceSpecContextOutput {
	return o
}

func (o ServiceSpecContextOutput) ToServiceSpecContextPtrOutput() ServiceSpecContextPtrOutput {
	return o.ToServiceSpecContextPtrOutputWithContext(context.Background())
}

func (o ServiceSpecContextOutput) ToServiceSpecContextPtrOutputWithContext(ctx context.Context) ServiceSpecContextPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *ServiceSpecContext {
		return &v
	}).(ServiceSpecContextPtrOutput)
}
func (o ServiceSpecContextOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextOutput) Resourcegroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.Resourcegroup }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextOutput) Resourcegroupid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.Resourcegroupid }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextOutput) Resourcelocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.Resourcelocation }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextOutput) Space() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.Space }).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecContext) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServiceSpecContextPtrOutput struct{ *pulumi.OutputState }

func (ServiceSpecContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecContext)(nil)).Elem()
}

func (o ServiceSpecContextPtrOutput) ToServiceSpecContextPtrOutput() ServiceSpecContextPtrOutput {
	return o
}

func (o ServiceSpecContextPtrOutput) ToServiceSpecContextPtrOutputWithContext(ctx context.Context) ServiceSpecContextPtrOutput {
	return o
}

func (o ServiceSpecContextPtrOutput) Elem() ServiceSpecContextOutput {
	return o.ApplyT(func(v *ServiceSpecContext) ServiceSpecContext { return *v }).(ServiceSpecContextOutput)
}

func (o ServiceSpecContextPtrOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.Org
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextPtrOutput) Resourcegroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.Resourcegroup
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextPtrOutput) Resourcegroupid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.Resourcegroupid
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextPtrOutput) Resourcelocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.Resourcelocation
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextPtrOutput) Space() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.Space
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSpecContextPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecContext) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Param represents a key-value pair
type ServiceSpecParameters struct {
	// A parameter may have attributes (e.g. message hub topic might have partitions)
	Attributes map[string]map[string]interface{} `pulumi:"attributes"`
	// Name representing the key.
	Name string `pulumi:"name"`
	// Defaults to null.
	Value interface{} `pulumi:"value"`
	// Source for the value. Cannot be used if value is not empty.
	ValueFrom *ServiceSpecParametersValueFrom `pulumi:"valueFrom"`
}

// ServiceSpecParametersInput is an input type that accepts ServiceSpecParametersArgs and ServiceSpecParametersOutput values.
// You can construct a concrete instance of `ServiceSpecParametersInput` via:
//
//          ServiceSpecParametersArgs{...}
type ServiceSpecParametersInput interface {
	pulumi.Input

	ToServiceSpecParametersOutput() ServiceSpecParametersOutput
	ToServiceSpecParametersOutputWithContext(context.Context) ServiceSpecParametersOutput
}

// Param represents a key-value pair
type ServiceSpecParametersArgs struct {
	// A parameter may have attributes (e.g. message hub topic might have partitions)
	Attributes pulumi.MapMapInput `pulumi:"attributes"`
	// Name representing the key.
	Name pulumi.StringInput `pulumi:"name"`
	// Defaults to null.
	Value pulumi.Input `pulumi:"value"`
	// Source for the value. Cannot be used if value is not empty.
	ValueFrom ServiceSpecParametersValueFromPtrInput `pulumi:"valueFrom"`
}

func (ServiceSpecParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParameters)(nil)).Elem()
}

func (i ServiceSpecParametersArgs) ToServiceSpecParametersOutput() ServiceSpecParametersOutput {
	return i.ToServiceSpecParametersOutputWithContext(context.Background())
}

func (i ServiceSpecParametersArgs) ToServiceSpecParametersOutputWithContext(ctx context.Context) ServiceSpecParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersOutput)
}

// ServiceSpecParametersArrayInput is an input type that accepts ServiceSpecParametersArray and ServiceSpecParametersArrayOutput values.
// You can construct a concrete instance of `ServiceSpecParametersArrayInput` via:
//
//          ServiceSpecParametersArray{ ServiceSpecParametersArgs{...} }
type ServiceSpecParametersArrayInput interface {
	pulumi.Input

	ToServiceSpecParametersArrayOutput() ServiceSpecParametersArrayOutput
	ToServiceSpecParametersArrayOutputWithContext(context.Context) ServiceSpecParametersArrayOutput
}

type ServiceSpecParametersArray []ServiceSpecParametersInput

func (ServiceSpecParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceSpecParameters)(nil)).Elem()
}

func (i ServiceSpecParametersArray) ToServiceSpecParametersArrayOutput() ServiceSpecParametersArrayOutput {
	return i.ToServiceSpecParametersArrayOutputWithContext(context.Background())
}

func (i ServiceSpecParametersArray) ToServiceSpecParametersArrayOutputWithContext(ctx context.Context) ServiceSpecParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersArrayOutput)
}

// Param represents a key-value pair
type ServiceSpecParametersOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParameters)(nil)).Elem()
}

func (o ServiceSpecParametersOutput) ToServiceSpecParametersOutput() ServiceSpecParametersOutput {
	return o
}

func (o ServiceSpecParametersOutput) ToServiceSpecParametersOutputWithContext(ctx context.Context) ServiceSpecParametersOutput {
	return o
}

// A parameter may have attributes (e.g. message hub topic might have partitions)
func (o ServiceSpecParametersOutput) Attributes() pulumi.MapMapOutput {
	return o.ApplyT(func(v ServiceSpecParameters) map[string]map[string]interface{} { return v.Attributes }).(pulumi.MapMapOutput)
}

// Name representing the key.
func (o ServiceSpecParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSpecParameters) string { return v.Name }).(pulumi.StringOutput)
}

// Defaults to null.
func (o ServiceSpecParametersOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceSpecParameters) interface{} { return v.Value }).(pulumi.AnyOutput)
}

// Source for the value. Cannot be used if value is not empty.
func (o ServiceSpecParametersOutput) ValueFrom() ServiceSpecParametersValueFromPtrOutput {
	return o.ApplyT(func(v ServiceSpecParameters) *ServiceSpecParametersValueFrom { return v.ValueFrom }).(ServiceSpecParametersValueFromPtrOutput)
}

type ServiceSpecParametersArrayOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceSpecParameters)(nil)).Elem()
}

func (o ServiceSpecParametersArrayOutput) ToServiceSpecParametersArrayOutput() ServiceSpecParametersArrayOutput {
	return o
}

func (o ServiceSpecParametersArrayOutput) ToServiceSpecParametersArrayOutputWithContext(ctx context.Context) ServiceSpecParametersArrayOutput {
	return o
}

func (o ServiceSpecParametersArrayOutput) Index(i pulumi.IntInput) ServiceSpecParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceSpecParameters {
		return vs[0].([]ServiceSpecParameters)[vs[1].(int)]
	}).(ServiceSpecParametersOutput)
}

type ServiceSpecParametersAttributes struct {
}

// ServiceSpecParametersAttributesInput is an input type that accepts ServiceSpecParametersAttributesArgs and ServiceSpecParametersAttributesOutput values.
// You can construct a concrete instance of `ServiceSpecParametersAttributesInput` via:
//
//          ServiceSpecParametersAttributesArgs{...}
type ServiceSpecParametersAttributesInput interface {
	pulumi.Input

	ToServiceSpecParametersAttributesOutput() ServiceSpecParametersAttributesOutput
	ToServiceSpecParametersAttributesOutputWithContext(context.Context) ServiceSpecParametersAttributesOutput
}

type ServiceSpecParametersAttributesArgs struct {
}

func (ServiceSpecParametersAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersAttributes)(nil)).Elem()
}

func (i ServiceSpecParametersAttributesArgs) ToServiceSpecParametersAttributesOutput() ServiceSpecParametersAttributesOutput {
	return i.ToServiceSpecParametersAttributesOutputWithContext(context.Background())
}

func (i ServiceSpecParametersAttributesArgs) ToServiceSpecParametersAttributesOutputWithContext(ctx context.Context) ServiceSpecParametersAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersAttributesOutput)
}

type ServiceSpecParametersAttributesOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersAttributes)(nil)).Elem()
}

func (o ServiceSpecParametersAttributesOutput) ToServiceSpecParametersAttributesOutput() ServiceSpecParametersAttributesOutput {
	return o
}

func (o ServiceSpecParametersAttributesOutput) ToServiceSpecParametersAttributesOutputWithContext(ctx context.Context) ServiceSpecParametersAttributesOutput {
	return o
}

// Source for the value. Cannot be used if value is not empty.
type ServiceSpecParametersValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *ServiceSpecParametersValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a key of a secret in the resource namespace
	SecretKeyRef *ServiceSpecParametersValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// ServiceSpecParametersValueFromInput is an input type that accepts ServiceSpecParametersValueFromArgs and ServiceSpecParametersValueFromOutput values.
// You can construct a concrete instance of `ServiceSpecParametersValueFromInput` via:
//
//          ServiceSpecParametersValueFromArgs{...}
type ServiceSpecParametersValueFromInput interface {
	pulumi.Input

	ToServiceSpecParametersValueFromOutput() ServiceSpecParametersValueFromOutput
	ToServiceSpecParametersValueFromOutputWithContext(context.Context) ServiceSpecParametersValueFromOutput
}

// Source for the value. Cannot be used if value is not empty.
type ServiceSpecParametersValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef ServiceSpecParametersValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a key of a secret in the resource namespace
	SecretKeyRef ServiceSpecParametersValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (ServiceSpecParametersValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersValueFrom)(nil)).Elem()
}

func (i ServiceSpecParametersValueFromArgs) ToServiceSpecParametersValueFromOutput() ServiceSpecParametersValueFromOutput {
	return i.ToServiceSpecParametersValueFromOutputWithContext(context.Background())
}

func (i ServiceSpecParametersValueFromArgs) ToServiceSpecParametersValueFromOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromOutput)
}

func (i ServiceSpecParametersValueFromArgs) ToServiceSpecParametersValueFromPtrOutput() ServiceSpecParametersValueFromPtrOutput {
	return i.ToServiceSpecParametersValueFromPtrOutputWithContext(context.Background())
}

func (i ServiceSpecParametersValueFromArgs) ToServiceSpecParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromOutput).ToServiceSpecParametersValueFromPtrOutputWithContext(ctx)
}

// ServiceSpecParametersValueFromPtrInput is an input type that accepts ServiceSpecParametersValueFromArgs, ServiceSpecParametersValueFromPtr and ServiceSpecParametersValueFromPtrOutput values.
// You can construct a concrete instance of `ServiceSpecParametersValueFromPtrInput` via:
//
//          ServiceSpecParametersValueFromArgs{...}
//
//  or:
//
//          nil
type ServiceSpecParametersValueFromPtrInput interface {
	pulumi.Input

	ToServiceSpecParametersValueFromPtrOutput() ServiceSpecParametersValueFromPtrOutput
	ToServiceSpecParametersValueFromPtrOutputWithContext(context.Context) ServiceSpecParametersValueFromPtrOutput
}

type serviceSpecParametersValueFromPtrType ServiceSpecParametersValueFromArgs

func ServiceSpecParametersValueFromPtr(v *ServiceSpecParametersValueFromArgs) ServiceSpecParametersValueFromPtrInput {
	return (*serviceSpecParametersValueFromPtrType)(v)
}

func (*serviceSpecParametersValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecParametersValueFrom)(nil)).Elem()
}

func (i *serviceSpecParametersValueFromPtrType) ToServiceSpecParametersValueFromPtrOutput() ServiceSpecParametersValueFromPtrOutput {
	return i.ToServiceSpecParametersValueFromPtrOutputWithContext(context.Background())
}

func (i *serviceSpecParametersValueFromPtrType) ToServiceSpecParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromPtrOutput)
}

// Source for the value. Cannot be used if value is not empty.
type ServiceSpecParametersValueFromOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersValueFrom)(nil)).Elem()
}

func (o ServiceSpecParametersValueFromOutput) ToServiceSpecParametersValueFromOutput() ServiceSpecParametersValueFromOutput {
	return o
}

func (o ServiceSpecParametersValueFromOutput) ToServiceSpecParametersValueFromOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromOutput {
	return o
}

func (o ServiceSpecParametersValueFromOutput) ToServiceSpecParametersValueFromPtrOutput() ServiceSpecParametersValueFromPtrOutput {
	return o.ToServiceSpecParametersValueFromPtrOutputWithContext(context.Background())
}

func (o ServiceSpecParametersValueFromOutput) ToServiceSpecParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFrom) *ServiceSpecParametersValueFrom {
		return &v
	}).(ServiceSpecParametersValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o ServiceSpecParametersValueFromOutput) ConfigMapKeyRef() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFrom) *ServiceSpecParametersValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
func (o ServiceSpecParametersValueFromOutput) SecretKeyRef() ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFrom) *ServiceSpecParametersValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(ServiceSpecParametersValueFromSecretKeyRefPtrOutput)
}

type ServiceSpecParametersValueFromPtrOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecParametersValueFrom)(nil)).Elem()
}

func (o ServiceSpecParametersValueFromPtrOutput) ToServiceSpecParametersValueFromPtrOutput() ServiceSpecParametersValueFromPtrOutput {
	return o
}

func (o ServiceSpecParametersValueFromPtrOutput) ToServiceSpecParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromPtrOutput {
	return o
}

func (o ServiceSpecParametersValueFromPtrOutput) Elem() ServiceSpecParametersValueFromOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFrom) ServiceSpecParametersValueFrom { return *v }).(ServiceSpecParametersValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o ServiceSpecParametersValueFromPtrOutput) ConfigMapKeyRef() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFrom) *ServiceSpecParametersValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
func (o ServiceSpecParametersValueFromPtrOutput) SecretKeyRef() ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFrom) *ServiceSpecParametersValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(ServiceSpecParametersValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ServiceSpecParametersValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceSpecParametersValueFromConfigMapKeyRefInput is an input type that accepts ServiceSpecParametersValueFromConfigMapKeyRefArgs and ServiceSpecParametersValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `ServiceSpecParametersValueFromConfigMapKeyRefInput` via:
//
//          ServiceSpecParametersValueFromConfigMapKeyRefArgs{...}
type ServiceSpecParametersValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToServiceSpecParametersValueFromConfigMapKeyRefOutput() ServiceSpecParametersValueFromConfigMapKeyRefOutput
	ToServiceSpecParametersValueFromConfigMapKeyRefOutputWithContext(context.Context) ServiceSpecParametersValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type ServiceSpecParametersValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceSpecParametersValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i ServiceSpecParametersValueFromConfigMapKeyRefArgs) ToServiceSpecParametersValueFromConfigMapKeyRefOutput() ServiceSpecParametersValueFromConfigMapKeyRefOutput {
	return i.ToServiceSpecParametersValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i ServiceSpecParametersValueFromConfigMapKeyRefArgs) ToServiceSpecParametersValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromConfigMapKeyRefOutput)
}

func (i ServiceSpecParametersValueFromConfigMapKeyRefArgs) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutput() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return i.ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i ServiceSpecParametersValueFromConfigMapKeyRefArgs) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromConfigMapKeyRefOutput).ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// ServiceSpecParametersValueFromConfigMapKeyRefPtrInput is an input type that accepts ServiceSpecParametersValueFromConfigMapKeyRefArgs, ServiceSpecParametersValueFromConfigMapKeyRefPtr and ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `ServiceSpecParametersValueFromConfigMapKeyRefPtrInput` via:
//
//          ServiceSpecParametersValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type ServiceSpecParametersValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutput() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput
	ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput
}

type serviceSpecParametersValueFromConfigMapKeyRefPtrType ServiceSpecParametersValueFromConfigMapKeyRefArgs

func ServiceSpecParametersValueFromConfigMapKeyRefPtr(v *ServiceSpecParametersValueFromConfigMapKeyRefArgs) ServiceSpecParametersValueFromConfigMapKeyRefPtrInput {
	return (*serviceSpecParametersValueFromConfigMapKeyRefPtrType)(v)
}

func (*serviceSpecParametersValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *serviceSpecParametersValueFromConfigMapKeyRefPtrType) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutput() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return i.ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *serviceSpecParametersValueFromConfigMapKeyRefPtrType) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ServiceSpecParametersValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) ToServiceSpecParametersValueFromConfigMapKeyRefOutput() ServiceSpecParametersValueFromConfigMapKeyRefOutput {
	return o
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) ToServiceSpecParametersValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromConfigMapKeyRefOutput {
	return o
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutput() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromConfigMapKeyRef) *ServiceSpecParametersValueFromConfigMapKeyRef {
		return &v
	}).(ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ServiceSpecParametersValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutput() ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) ToServiceSpecParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) Elem() ServiceSpecParametersValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromConfigMapKeyRef) ServiceSpecParametersValueFromConfigMapKeyRef {
		return *v
	}).(ServiceSpecParametersValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a key of a secret in the resource namespace
type ServiceSpecParametersValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceSpecParametersValueFromSecretKeyRefInput is an input type that accepts ServiceSpecParametersValueFromSecretKeyRefArgs and ServiceSpecParametersValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `ServiceSpecParametersValueFromSecretKeyRefInput` via:
//
//          ServiceSpecParametersValueFromSecretKeyRefArgs{...}
type ServiceSpecParametersValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToServiceSpecParametersValueFromSecretKeyRefOutput() ServiceSpecParametersValueFromSecretKeyRefOutput
	ToServiceSpecParametersValueFromSecretKeyRefOutputWithContext(context.Context) ServiceSpecParametersValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the resource namespace
type ServiceSpecParametersValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceSpecParametersValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (i ServiceSpecParametersValueFromSecretKeyRefArgs) ToServiceSpecParametersValueFromSecretKeyRefOutput() ServiceSpecParametersValueFromSecretKeyRefOutput {
	return i.ToServiceSpecParametersValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i ServiceSpecParametersValueFromSecretKeyRefArgs) ToServiceSpecParametersValueFromSecretKeyRefOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromSecretKeyRefOutput)
}

func (i ServiceSpecParametersValueFromSecretKeyRefArgs) ToServiceSpecParametersValueFromSecretKeyRefPtrOutput() ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return i.ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i ServiceSpecParametersValueFromSecretKeyRefArgs) ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromSecretKeyRefOutput).ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// ServiceSpecParametersValueFromSecretKeyRefPtrInput is an input type that accepts ServiceSpecParametersValueFromSecretKeyRefArgs, ServiceSpecParametersValueFromSecretKeyRefPtr and ServiceSpecParametersValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `ServiceSpecParametersValueFromSecretKeyRefPtrInput` via:
//
//          ServiceSpecParametersValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type ServiceSpecParametersValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToServiceSpecParametersValueFromSecretKeyRefPtrOutput() ServiceSpecParametersValueFromSecretKeyRefPtrOutput
	ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Context) ServiceSpecParametersValueFromSecretKeyRefPtrOutput
}

type serviceSpecParametersValueFromSecretKeyRefPtrType ServiceSpecParametersValueFromSecretKeyRefArgs

func ServiceSpecParametersValueFromSecretKeyRefPtr(v *ServiceSpecParametersValueFromSecretKeyRefArgs) ServiceSpecParametersValueFromSecretKeyRefPtrInput {
	return (*serviceSpecParametersValueFromSecretKeyRefPtrType)(v)
}

func (*serviceSpecParametersValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (i *serviceSpecParametersValueFromSecretKeyRefPtrType) ToServiceSpecParametersValueFromSecretKeyRefPtrOutput() ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return i.ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *serviceSpecParametersValueFromSecretKeyRefPtrType) ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSpecParametersValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
type ServiceSpecParametersValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (o ServiceSpecParametersValueFromSecretKeyRefOutput) ToServiceSpecParametersValueFromSecretKeyRefOutput() ServiceSpecParametersValueFromSecretKeyRefOutput {
	return o
}

func (o ServiceSpecParametersValueFromSecretKeyRefOutput) ToServiceSpecParametersValueFromSecretKeyRefOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromSecretKeyRefOutput {
	return o
}

func (o ServiceSpecParametersValueFromSecretKeyRefOutput) ToServiceSpecParametersValueFromSecretKeyRefPtrOutput() ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o ServiceSpecParametersValueFromSecretKeyRefOutput) ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromSecretKeyRef) *ServiceSpecParametersValueFromSecretKeyRef {
		return &v
	}).(ServiceSpecParametersValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ServiceSpecParametersValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceSpecParametersValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ServiceSpecParametersValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSpecParametersValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceSpecParametersValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceSpecParametersValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSpecParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (o ServiceSpecParametersValueFromSecretKeyRefPtrOutput) ToServiceSpecParametersValueFromSecretKeyRefPtrOutput() ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ServiceSpecParametersValueFromSecretKeyRefPtrOutput) ToServiceSpecParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceSpecParametersValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ServiceSpecParametersValueFromSecretKeyRefPtrOutput) Elem() ServiceSpecParametersValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromSecretKeyRef) ServiceSpecParametersValueFromSecretKeyRef {
		return *v
	}).(ServiceSpecParametersValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ServiceSpecParametersValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceSpecParametersValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ServiceSpecParametersValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSpecParametersValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ServiceStatus defines the observed state of Service
type ServiceStatus struct {
	// ResourceContext defines the CloudFoundry context and resource group
	Context          *ServiceStatusContext     `pulumi:"context"`
	DashboardURL     *string                   `pulumi:"dashboardURL"`
	ExternalName     *string                   `pulumi:"externalName"`
	Generation       *int                      `pulumi:"generation"`
	InstanceId       *string                   `pulumi:"instanceId"`
	Message          *string                   `pulumi:"message"`
	Parameters       []ServiceStatusParameters `pulumi:"parameters"`
	Plan             string                    `pulumi:"plan"`
	ServiceClass     string                    `pulumi:"serviceClass"`
	ServiceClassType string                    `pulumi:"serviceClassType"`
	State            *string                   `pulumi:"state"`
	Tags             []string                  `pulumi:"tags"`
}

// ServiceStatusInput is an input type that accepts ServiceStatusArgs and ServiceStatusOutput values.
// You can construct a concrete instance of `ServiceStatusInput` via:
//
//          ServiceStatusArgs{...}
type ServiceStatusInput interface {
	pulumi.Input

	ToServiceStatusOutput() ServiceStatusOutput
	ToServiceStatusOutputWithContext(context.Context) ServiceStatusOutput
}

// ServiceStatus defines the observed state of Service
type ServiceStatusArgs struct {
	// ResourceContext defines the CloudFoundry context and resource group
	Context          ServiceStatusContextPtrInput      `pulumi:"context"`
	DashboardURL     pulumi.StringPtrInput             `pulumi:"dashboardURL"`
	ExternalName     pulumi.StringPtrInput             `pulumi:"externalName"`
	Generation       pulumi.IntPtrInput                `pulumi:"generation"`
	InstanceId       pulumi.StringPtrInput             `pulumi:"instanceId"`
	Message          pulumi.StringPtrInput             `pulumi:"message"`
	Parameters       ServiceStatusParametersArrayInput `pulumi:"parameters"`
	Plan             pulumi.StringInput                `pulumi:"plan"`
	ServiceClass     pulumi.StringInput                `pulumi:"serviceClass"`
	ServiceClassType pulumi.StringInput                `pulumi:"serviceClassType"`
	State            pulumi.StringPtrInput             `pulumi:"state"`
	Tags             pulumi.StringArrayInput           `pulumi:"tags"`
}

func (ServiceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatus)(nil)).Elem()
}

func (i ServiceStatusArgs) ToServiceStatusOutput() ServiceStatusOutput {
	return i.ToServiceStatusOutputWithContext(context.Background())
}

func (i ServiceStatusArgs) ToServiceStatusOutputWithContext(ctx context.Context) ServiceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusOutput)
}

func (i ServiceStatusArgs) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return i.ToServiceStatusPtrOutputWithContext(context.Background())
}

func (i ServiceStatusArgs) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusOutput).ToServiceStatusPtrOutputWithContext(ctx)
}

// ServiceStatusPtrInput is an input type that accepts ServiceStatusArgs, ServiceStatusPtr and ServiceStatusPtrOutput values.
// You can construct a concrete instance of `ServiceStatusPtrInput` via:
//
//          ServiceStatusArgs{...}
//
//  or:
//
//          nil
type ServiceStatusPtrInput interface {
	pulumi.Input

	ToServiceStatusPtrOutput() ServiceStatusPtrOutput
	ToServiceStatusPtrOutputWithContext(context.Context) ServiceStatusPtrOutput
}

type serviceStatusPtrType ServiceStatusArgs

func ServiceStatusPtr(v *ServiceStatusArgs) ServiceStatusPtrInput {
	return (*serviceStatusPtrType)(v)
}

func (*serviceStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatus)(nil)).Elem()
}

func (i *serviceStatusPtrType) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return i.ToServiceStatusPtrOutputWithContext(context.Background())
}

func (i *serviceStatusPtrType) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusPtrOutput)
}

// ServiceStatus defines the observed state of Service
type ServiceStatusOutput struct{ *pulumi.OutputState }

func (ServiceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatus)(nil)).Elem()
}

func (o ServiceStatusOutput) ToServiceStatusOutput() ServiceStatusOutput {
	return o
}

func (o ServiceStatusOutput) ToServiceStatusOutputWithContext(ctx context.Context) ServiceStatusOutput {
	return o
}

func (o ServiceStatusOutput) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return o.ToServiceStatusPtrOutputWithContext(context.Background())
}

func (o ServiceStatusOutput) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *ServiceStatus {
		return &v
	}).(ServiceStatusPtrOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
func (o ServiceStatusOutput) Context() ServiceStatusContextPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *ServiceStatusContext { return v.Context }).(ServiceStatusContextPtrOutput)
}

func (o ServiceStatusOutput) DashboardURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.DashboardURL }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

func (o ServiceStatusOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) Parameters() ServiceStatusParametersArrayOutput {
	return o.ApplyT(func(v ServiceStatus) []ServiceStatusParameters { return v.Parameters }).(ServiceStatusParametersArrayOutput)
}

func (o ServiceStatusOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceStatus) string { return v.Plan }).(pulumi.StringOutput)
}

func (o ServiceStatusOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceStatus) string { return v.ServiceClass }).(pulumi.StringOutput)
}

func (o ServiceStatusOutput) ServiceClassType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceStatus) string { return v.ServiceClassType }).(pulumi.StringOutput)
}

func (o ServiceStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceStatus) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type ServiceStatusPtrOutput struct{ *pulumi.OutputState }

func (ServiceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatus)(nil)).Elem()
}

func (o ServiceStatusPtrOutput) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return o
}

func (o ServiceStatusPtrOutput) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return o
}

func (o ServiceStatusPtrOutput) Elem() ServiceStatusOutput {
	return o.ApplyT(func(v *ServiceStatus) ServiceStatus { return *v }).(ServiceStatusOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
func (o ServiceStatusPtrOutput) Context() ServiceStatusContextPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *ServiceStatusContext {
		if v == nil {
			return nil
		}
		return v.Context
	}).(ServiceStatusContextPtrOutput)
}

func (o ServiceStatusPtrOutput) DashboardURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.DashboardURL
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

func (o ServiceStatusPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) Parameters() ServiceStatusParametersArrayOutput {
	return o.ApplyT(func(v *ServiceStatus) []ServiceStatusParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ServiceStatusParametersArrayOutput)
}

func (o ServiceStatusPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) ServiceClassType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClassType
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceStatus) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
type ServiceStatusContext struct {
	Org              *string `pulumi:"org"`
	Region           *string `pulumi:"region"`
	Resourcegroup    *string `pulumi:"resourcegroup"`
	Resourcegroupid  *string `pulumi:"resourcegroupid"`
	Resourcelocation *string `pulumi:"resourcelocation"`
	Space            *string `pulumi:"space"`
	User             *string `pulumi:"user"`
}

// ServiceStatusContextInput is an input type that accepts ServiceStatusContextArgs and ServiceStatusContextOutput values.
// You can construct a concrete instance of `ServiceStatusContextInput` via:
//
//          ServiceStatusContextArgs{...}
type ServiceStatusContextInput interface {
	pulumi.Input

	ToServiceStatusContextOutput() ServiceStatusContextOutput
	ToServiceStatusContextOutputWithContext(context.Context) ServiceStatusContextOutput
}

// ResourceContext defines the CloudFoundry context and resource group
type ServiceStatusContextArgs struct {
	Org              pulumi.StringPtrInput `pulumi:"org"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	Resourcegroup    pulumi.StringPtrInput `pulumi:"resourcegroup"`
	Resourcegroupid  pulumi.StringPtrInput `pulumi:"resourcegroupid"`
	Resourcelocation pulumi.StringPtrInput `pulumi:"resourcelocation"`
	Space            pulumi.StringPtrInput `pulumi:"space"`
	User             pulumi.StringPtrInput `pulumi:"user"`
}

func (ServiceStatusContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusContext)(nil)).Elem()
}

func (i ServiceStatusContextArgs) ToServiceStatusContextOutput() ServiceStatusContextOutput {
	return i.ToServiceStatusContextOutputWithContext(context.Background())
}

func (i ServiceStatusContextArgs) ToServiceStatusContextOutputWithContext(ctx context.Context) ServiceStatusContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusContextOutput)
}

func (i ServiceStatusContextArgs) ToServiceStatusContextPtrOutput() ServiceStatusContextPtrOutput {
	return i.ToServiceStatusContextPtrOutputWithContext(context.Background())
}

func (i ServiceStatusContextArgs) ToServiceStatusContextPtrOutputWithContext(ctx context.Context) ServiceStatusContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusContextOutput).ToServiceStatusContextPtrOutputWithContext(ctx)
}

// ServiceStatusContextPtrInput is an input type that accepts ServiceStatusContextArgs, ServiceStatusContextPtr and ServiceStatusContextPtrOutput values.
// You can construct a concrete instance of `ServiceStatusContextPtrInput` via:
//
//          ServiceStatusContextArgs{...}
//
//  or:
//
//          nil
type ServiceStatusContextPtrInput interface {
	pulumi.Input

	ToServiceStatusContextPtrOutput() ServiceStatusContextPtrOutput
	ToServiceStatusContextPtrOutputWithContext(context.Context) ServiceStatusContextPtrOutput
}

type serviceStatusContextPtrType ServiceStatusContextArgs

func ServiceStatusContextPtr(v *ServiceStatusContextArgs) ServiceStatusContextPtrInput {
	return (*serviceStatusContextPtrType)(v)
}

func (*serviceStatusContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusContext)(nil)).Elem()
}

func (i *serviceStatusContextPtrType) ToServiceStatusContextPtrOutput() ServiceStatusContextPtrOutput {
	return i.ToServiceStatusContextPtrOutputWithContext(context.Background())
}

func (i *serviceStatusContextPtrType) ToServiceStatusContextPtrOutputWithContext(ctx context.Context) ServiceStatusContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusContextPtrOutput)
}

// ResourceContext defines the CloudFoundry context and resource group
type ServiceStatusContextOutput struct{ *pulumi.OutputState }

func (ServiceStatusContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusContext)(nil)).Elem()
}

func (o ServiceStatusContextOutput) ToServiceStatusContextOutput() ServiceStatusContextOutput {
	return o
}

func (o ServiceStatusContextOutput) ToServiceStatusContextOutputWithContext(ctx context.Context) ServiceStatusContextOutput {
	return o
}

func (o ServiceStatusContextOutput) ToServiceStatusContextPtrOutput() ServiceStatusContextPtrOutput {
	return o.ToServiceStatusContextPtrOutputWithContext(context.Background())
}

func (o ServiceStatusContextOutput) ToServiceStatusContextPtrOutputWithContext(ctx context.Context) ServiceStatusContextPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *ServiceStatusContext {
		return &v
	}).(ServiceStatusContextPtrOutput)
}
func (o ServiceStatusContextOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextOutput) Resourcegroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.Resourcegroup }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextOutput) Resourcegroupid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.Resourcegroupid }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextOutput) Resourcelocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.Resourcelocation }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextOutput) Space() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.Space }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusContext) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServiceStatusContextPtrOutput struct{ *pulumi.OutputState }

func (ServiceStatusContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusContext)(nil)).Elem()
}

func (o ServiceStatusContextPtrOutput) ToServiceStatusContextPtrOutput() ServiceStatusContextPtrOutput {
	return o
}

func (o ServiceStatusContextPtrOutput) ToServiceStatusContextPtrOutputWithContext(ctx context.Context) ServiceStatusContextPtrOutput {
	return o
}

func (o ServiceStatusContextPtrOutput) Elem() ServiceStatusContextOutput {
	return o.ApplyT(func(v *ServiceStatusContext) ServiceStatusContext { return *v }).(ServiceStatusContextOutput)
}

func (o ServiceStatusContextPtrOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.Org
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextPtrOutput) Resourcegroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.Resourcegroup
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextPtrOutput) Resourcegroupid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.Resourcegroupid
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextPtrOutput) Resourcelocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.Resourcelocation
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextPtrOutput) Space() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.Space
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusContextPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusContext) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Param represents a key-value pair
type ServiceStatusParameters struct {
	// A parameter may have attributes (e.g. message hub topic might have partitions)
	Attributes map[string]map[string]interface{} `pulumi:"attributes"`
	// Name representing the key.
	Name string `pulumi:"name"`
	// Defaults to null.
	Value interface{} `pulumi:"value"`
	// Source for the value. Cannot be used if value is not empty.
	ValueFrom *ServiceStatusParametersValueFrom `pulumi:"valueFrom"`
}

// ServiceStatusParametersInput is an input type that accepts ServiceStatusParametersArgs and ServiceStatusParametersOutput values.
// You can construct a concrete instance of `ServiceStatusParametersInput` via:
//
//          ServiceStatusParametersArgs{...}
type ServiceStatusParametersInput interface {
	pulumi.Input

	ToServiceStatusParametersOutput() ServiceStatusParametersOutput
	ToServiceStatusParametersOutputWithContext(context.Context) ServiceStatusParametersOutput
}

// Param represents a key-value pair
type ServiceStatusParametersArgs struct {
	// A parameter may have attributes (e.g. message hub topic might have partitions)
	Attributes pulumi.MapMapInput `pulumi:"attributes"`
	// Name representing the key.
	Name pulumi.StringInput `pulumi:"name"`
	// Defaults to null.
	Value pulumi.Input `pulumi:"value"`
	// Source for the value. Cannot be used if value is not empty.
	ValueFrom ServiceStatusParametersValueFromPtrInput `pulumi:"valueFrom"`
}

func (ServiceStatusParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParameters)(nil)).Elem()
}

func (i ServiceStatusParametersArgs) ToServiceStatusParametersOutput() ServiceStatusParametersOutput {
	return i.ToServiceStatusParametersOutputWithContext(context.Background())
}

func (i ServiceStatusParametersArgs) ToServiceStatusParametersOutputWithContext(ctx context.Context) ServiceStatusParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersOutput)
}

// ServiceStatusParametersArrayInput is an input type that accepts ServiceStatusParametersArray and ServiceStatusParametersArrayOutput values.
// You can construct a concrete instance of `ServiceStatusParametersArrayInput` via:
//
//          ServiceStatusParametersArray{ ServiceStatusParametersArgs{...} }
type ServiceStatusParametersArrayInput interface {
	pulumi.Input

	ToServiceStatusParametersArrayOutput() ServiceStatusParametersArrayOutput
	ToServiceStatusParametersArrayOutputWithContext(context.Context) ServiceStatusParametersArrayOutput
}

type ServiceStatusParametersArray []ServiceStatusParametersInput

func (ServiceStatusParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceStatusParameters)(nil)).Elem()
}

func (i ServiceStatusParametersArray) ToServiceStatusParametersArrayOutput() ServiceStatusParametersArrayOutput {
	return i.ToServiceStatusParametersArrayOutputWithContext(context.Background())
}

func (i ServiceStatusParametersArray) ToServiceStatusParametersArrayOutputWithContext(ctx context.Context) ServiceStatusParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersArrayOutput)
}

// Param represents a key-value pair
type ServiceStatusParametersOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParameters)(nil)).Elem()
}

func (o ServiceStatusParametersOutput) ToServiceStatusParametersOutput() ServiceStatusParametersOutput {
	return o
}

func (o ServiceStatusParametersOutput) ToServiceStatusParametersOutputWithContext(ctx context.Context) ServiceStatusParametersOutput {
	return o
}

// A parameter may have attributes (e.g. message hub topic might have partitions)
func (o ServiceStatusParametersOutput) Attributes() pulumi.MapMapOutput {
	return o.ApplyT(func(v ServiceStatusParameters) map[string]map[string]interface{} { return v.Attributes }).(pulumi.MapMapOutput)
}

// Name representing the key.
func (o ServiceStatusParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceStatusParameters) string { return v.Name }).(pulumi.StringOutput)
}

// Defaults to null.
func (o ServiceStatusParametersOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ServiceStatusParameters) interface{} { return v.Value }).(pulumi.AnyOutput)
}

// Source for the value. Cannot be used if value is not empty.
func (o ServiceStatusParametersOutput) ValueFrom() ServiceStatusParametersValueFromPtrOutput {
	return o.ApplyT(func(v ServiceStatusParameters) *ServiceStatusParametersValueFrom { return v.ValueFrom }).(ServiceStatusParametersValueFromPtrOutput)
}

type ServiceStatusParametersArrayOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceStatusParameters)(nil)).Elem()
}

func (o ServiceStatusParametersArrayOutput) ToServiceStatusParametersArrayOutput() ServiceStatusParametersArrayOutput {
	return o
}

func (o ServiceStatusParametersArrayOutput) ToServiceStatusParametersArrayOutputWithContext(ctx context.Context) ServiceStatusParametersArrayOutput {
	return o
}

func (o ServiceStatusParametersArrayOutput) Index(i pulumi.IntInput) ServiceStatusParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceStatusParameters {
		return vs[0].([]ServiceStatusParameters)[vs[1].(int)]
	}).(ServiceStatusParametersOutput)
}

type ServiceStatusParametersAttributes struct {
}

// ServiceStatusParametersAttributesInput is an input type that accepts ServiceStatusParametersAttributesArgs and ServiceStatusParametersAttributesOutput values.
// You can construct a concrete instance of `ServiceStatusParametersAttributesInput` via:
//
//          ServiceStatusParametersAttributesArgs{...}
type ServiceStatusParametersAttributesInput interface {
	pulumi.Input

	ToServiceStatusParametersAttributesOutput() ServiceStatusParametersAttributesOutput
	ToServiceStatusParametersAttributesOutputWithContext(context.Context) ServiceStatusParametersAttributesOutput
}

type ServiceStatusParametersAttributesArgs struct {
}

func (ServiceStatusParametersAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersAttributes)(nil)).Elem()
}

func (i ServiceStatusParametersAttributesArgs) ToServiceStatusParametersAttributesOutput() ServiceStatusParametersAttributesOutput {
	return i.ToServiceStatusParametersAttributesOutputWithContext(context.Background())
}

func (i ServiceStatusParametersAttributesArgs) ToServiceStatusParametersAttributesOutputWithContext(ctx context.Context) ServiceStatusParametersAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersAttributesOutput)
}

type ServiceStatusParametersAttributesOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersAttributes)(nil)).Elem()
}

func (o ServiceStatusParametersAttributesOutput) ToServiceStatusParametersAttributesOutput() ServiceStatusParametersAttributesOutput {
	return o
}

func (o ServiceStatusParametersAttributesOutput) ToServiceStatusParametersAttributesOutputWithContext(ctx context.Context) ServiceStatusParametersAttributesOutput {
	return o
}

// Source for the value. Cannot be used if value is not empty.
type ServiceStatusParametersValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *ServiceStatusParametersValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a key of a secret in the resource namespace
	SecretKeyRef *ServiceStatusParametersValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// ServiceStatusParametersValueFromInput is an input type that accepts ServiceStatusParametersValueFromArgs and ServiceStatusParametersValueFromOutput values.
// You can construct a concrete instance of `ServiceStatusParametersValueFromInput` via:
//
//          ServiceStatusParametersValueFromArgs{...}
type ServiceStatusParametersValueFromInput interface {
	pulumi.Input

	ToServiceStatusParametersValueFromOutput() ServiceStatusParametersValueFromOutput
	ToServiceStatusParametersValueFromOutputWithContext(context.Context) ServiceStatusParametersValueFromOutput
}

// Source for the value. Cannot be used if value is not empty.
type ServiceStatusParametersValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef ServiceStatusParametersValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a key of a secret in the resource namespace
	SecretKeyRef ServiceStatusParametersValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (ServiceStatusParametersValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersValueFrom)(nil)).Elem()
}

func (i ServiceStatusParametersValueFromArgs) ToServiceStatusParametersValueFromOutput() ServiceStatusParametersValueFromOutput {
	return i.ToServiceStatusParametersValueFromOutputWithContext(context.Background())
}

func (i ServiceStatusParametersValueFromArgs) ToServiceStatusParametersValueFromOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromOutput)
}

func (i ServiceStatusParametersValueFromArgs) ToServiceStatusParametersValueFromPtrOutput() ServiceStatusParametersValueFromPtrOutput {
	return i.ToServiceStatusParametersValueFromPtrOutputWithContext(context.Background())
}

func (i ServiceStatusParametersValueFromArgs) ToServiceStatusParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromOutput).ToServiceStatusParametersValueFromPtrOutputWithContext(ctx)
}

// ServiceStatusParametersValueFromPtrInput is an input type that accepts ServiceStatusParametersValueFromArgs, ServiceStatusParametersValueFromPtr and ServiceStatusParametersValueFromPtrOutput values.
// You can construct a concrete instance of `ServiceStatusParametersValueFromPtrInput` via:
//
//          ServiceStatusParametersValueFromArgs{...}
//
//  or:
//
//          nil
type ServiceStatusParametersValueFromPtrInput interface {
	pulumi.Input

	ToServiceStatusParametersValueFromPtrOutput() ServiceStatusParametersValueFromPtrOutput
	ToServiceStatusParametersValueFromPtrOutputWithContext(context.Context) ServiceStatusParametersValueFromPtrOutput
}

type serviceStatusParametersValueFromPtrType ServiceStatusParametersValueFromArgs

func ServiceStatusParametersValueFromPtr(v *ServiceStatusParametersValueFromArgs) ServiceStatusParametersValueFromPtrInput {
	return (*serviceStatusParametersValueFromPtrType)(v)
}

func (*serviceStatusParametersValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusParametersValueFrom)(nil)).Elem()
}

func (i *serviceStatusParametersValueFromPtrType) ToServiceStatusParametersValueFromPtrOutput() ServiceStatusParametersValueFromPtrOutput {
	return i.ToServiceStatusParametersValueFromPtrOutputWithContext(context.Background())
}

func (i *serviceStatusParametersValueFromPtrType) ToServiceStatusParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromPtrOutput)
}

// Source for the value. Cannot be used if value is not empty.
type ServiceStatusParametersValueFromOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersValueFrom)(nil)).Elem()
}

func (o ServiceStatusParametersValueFromOutput) ToServiceStatusParametersValueFromOutput() ServiceStatusParametersValueFromOutput {
	return o
}

func (o ServiceStatusParametersValueFromOutput) ToServiceStatusParametersValueFromOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromOutput {
	return o
}

func (o ServiceStatusParametersValueFromOutput) ToServiceStatusParametersValueFromPtrOutput() ServiceStatusParametersValueFromPtrOutput {
	return o.ToServiceStatusParametersValueFromPtrOutputWithContext(context.Background())
}

func (o ServiceStatusParametersValueFromOutput) ToServiceStatusParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFrom) *ServiceStatusParametersValueFrom {
		return &v
	}).(ServiceStatusParametersValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o ServiceStatusParametersValueFromOutput) ConfigMapKeyRef() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFrom) *ServiceStatusParametersValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
func (o ServiceStatusParametersValueFromOutput) SecretKeyRef() ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFrom) *ServiceStatusParametersValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(ServiceStatusParametersValueFromSecretKeyRefPtrOutput)
}

type ServiceStatusParametersValueFromPtrOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusParametersValueFrom)(nil)).Elem()
}

func (o ServiceStatusParametersValueFromPtrOutput) ToServiceStatusParametersValueFromPtrOutput() ServiceStatusParametersValueFromPtrOutput {
	return o
}

func (o ServiceStatusParametersValueFromPtrOutput) ToServiceStatusParametersValueFromPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromPtrOutput {
	return o
}

func (o ServiceStatusParametersValueFromPtrOutput) Elem() ServiceStatusParametersValueFromOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFrom) ServiceStatusParametersValueFrom { return *v }).(ServiceStatusParametersValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o ServiceStatusParametersValueFromPtrOutput) ConfigMapKeyRef() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFrom) *ServiceStatusParametersValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
func (o ServiceStatusParametersValueFromPtrOutput) SecretKeyRef() ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFrom) *ServiceStatusParametersValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(ServiceStatusParametersValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ServiceStatusParametersValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceStatusParametersValueFromConfigMapKeyRefInput is an input type that accepts ServiceStatusParametersValueFromConfigMapKeyRefArgs and ServiceStatusParametersValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `ServiceStatusParametersValueFromConfigMapKeyRefInput` via:
//
//          ServiceStatusParametersValueFromConfigMapKeyRefArgs{...}
type ServiceStatusParametersValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToServiceStatusParametersValueFromConfigMapKeyRefOutput() ServiceStatusParametersValueFromConfigMapKeyRefOutput
	ToServiceStatusParametersValueFromConfigMapKeyRefOutputWithContext(context.Context) ServiceStatusParametersValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type ServiceStatusParametersValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceStatusParametersValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i ServiceStatusParametersValueFromConfigMapKeyRefArgs) ToServiceStatusParametersValueFromConfigMapKeyRefOutput() ServiceStatusParametersValueFromConfigMapKeyRefOutput {
	return i.ToServiceStatusParametersValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i ServiceStatusParametersValueFromConfigMapKeyRefArgs) ToServiceStatusParametersValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromConfigMapKeyRefOutput)
}

func (i ServiceStatusParametersValueFromConfigMapKeyRefArgs) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutput() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return i.ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i ServiceStatusParametersValueFromConfigMapKeyRefArgs) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromConfigMapKeyRefOutput).ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// ServiceStatusParametersValueFromConfigMapKeyRefPtrInput is an input type that accepts ServiceStatusParametersValueFromConfigMapKeyRefArgs, ServiceStatusParametersValueFromConfigMapKeyRefPtr and ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `ServiceStatusParametersValueFromConfigMapKeyRefPtrInput` via:
//
//          ServiceStatusParametersValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type ServiceStatusParametersValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutput() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput
	ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput
}

type serviceStatusParametersValueFromConfigMapKeyRefPtrType ServiceStatusParametersValueFromConfigMapKeyRefArgs

func ServiceStatusParametersValueFromConfigMapKeyRefPtr(v *ServiceStatusParametersValueFromConfigMapKeyRefArgs) ServiceStatusParametersValueFromConfigMapKeyRefPtrInput {
	return (*serviceStatusParametersValueFromConfigMapKeyRefPtrType)(v)
}

func (*serviceStatusParametersValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *serviceStatusParametersValueFromConfigMapKeyRefPtrType) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutput() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return i.ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *serviceStatusParametersValueFromConfigMapKeyRefPtrType) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ServiceStatusParametersValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) ToServiceStatusParametersValueFromConfigMapKeyRefOutput() ServiceStatusParametersValueFromConfigMapKeyRefOutput {
	return o
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) ToServiceStatusParametersValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromConfigMapKeyRefOutput {
	return o
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutput() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromConfigMapKeyRef) *ServiceStatusParametersValueFromConfigMapKeyRef {
		return &v
	}).(ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ServiceStatusParametersValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusParametersValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutput() ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) ToServiceStatusParametersValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) Elem() ServiceStatusParametersValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromConfigMapKeyRef) ServiceStatusParametersValueFromConfigMapKeyRef {
		return *v
	}).(ServiceStatusParametersValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a key of a secret in the resource namespace
type ServiceStatusParametersValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceStatusParametersValueFromSecretKeyRefInput is an input type that accepts ServiceStatusParametersValueFromSecretKeyRefArgs and ServiceStatusParametersValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `ServiceStatusParametersValueFromSecretKeyRefInput` via:
//
//          ServiceStatusParametersValueFromSecretKeyRefArgs{...}
type ServiceStatusParametersValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToServiceStatusParametersValueFromSecretKeyRefOutput() ServiceStatusParametersValueFromSecretKeyRefOutput
	ToServiceStatusParametersValueFromSecretKeyRefOutputWithContext(context.Context) ServiceStatusParametersValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the resource namespace
type ServiceStatusParametersValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceStatusParametersValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (i ServiceStatusParametersValueFromSecretKeyRefArgs) ToServiceStatusParametersValueFromSecretKeyRefOutput() ServiceStatusParametersValueFromSecretKeyRefOutput {
	return i.ToServiceStatusParametersValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i ServiceStatusParametersValueFromSecretKeyRefArgs) ToServiceStatusParametersValueFromSecretKeyRefOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromSecretKeyRefOutput)
}

func (i ServiceStatusParametersValueFromSecretKeyRefArgs) ToServiceStatusParametersValueFromSecretKeyRefPtrOutput() ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return i.ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i ServiceStatusParametersValueFromSecretKeyRefArgs) ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromSecretKeyRefOutput).ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// ServiceStatusParametersValueFromSecretKeyRefPtrInput is an input type that accepts ServiceStatusParametersValueFromSecretKeyRefArgs, ServiceStatusParametersValueFromSecretKeyRefPtr and ServiceStatusParametersValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `ServiceStatusParametersValueFromSecretKeyRefPtrInput` via:
//
//          ServiceStatusParametersValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type ServiceStatusParametersValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToServiceStatusParametersValueFromSecretKeyRefPtrOutput() ServiceStatusParametersValueFromSecretKeyRefPtrOutput
	ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(context.Context) ServiceStatusParametersValueFromSecretKeyRefPtrOutput
}

type serviceStatusParametersValueFromSecretKeyRefPtrType ServiceStatusParametersValueFromSecretKeyRefArgs

func ServiceStatusParametersValueFromSecretKeyRefPtr(v *ServiceStatusParametersValueFromSecretKeyRefArgs) ServiceStatusParametersValueFromSecretKeyRefPtrInput {
	return (*serviceStatusParametersValueFromSecretKeyRefPtrType)(v)
}

func (*serviceStatusParametersValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (i *serviceStatusParametersValueFromSecretKeyRefPtrType) ToServiceStatusParametersValueFromSecretKeyRefPtrOutput() ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return i.ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *serviceStatusParametersValueFromSecretKeyRefPtrType) ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusParametersValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the resource namespace
type ServiceStatusParametersValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (o ServiceStatusParametersValueFromSecretKeyRefOutput) ToServiceStatusParametersValueFromSecretKeyRefOutput() ServiceStatusParametersValueFromSecretKeyRefOutput {
	return o
}

func (o ServiceStatusParametersValueFromSecretKeyRefOutput) ToServiceStatusParametersValueFromSecretKeyRefOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromSecretKeyRefOutput {
	return o
}

func (o ServiceStatusParametersValueFromSecretKeyRefOutput) ToServiceStatusParametersValueFromSecretKeyRefPtrOutput() ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return o.ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o ServiceStatusParametersValueFromSecretKeyRefOutput) ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromSecretKeyRef) *ServiceStatusParametersValueFromSecretKeyRef {
		return &v
	}).(ServiceStatusParametersValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ServiceStatusParametersValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceStatusParametersValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ServiceStatusParametersValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceStatusParametersValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceStatusParametersValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceStatusParametersValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatusParametersValueFromSecretKeyRef)(nil)).Elem()
}

func (o ServiceStatusParametersValueFromSecretKeyRefPtrOutput) ToServiceStatusParametersValueFromSecretKeyRefPtrOutput() ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ServiceStatusParametersValueFromSecretKeyRefPtrOutput) ToServiceStatusParametersValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ServiceStatusParametersValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ServiceStatusParametersValueFromSecretKeyRefPtrOutput) Elem() ServiceStatusParametersValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromSecretKeyRef) ServiceStatusParametersValueFromSecretKeyRef {
		return *v
	}).(ServiceStatusParametersValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ServiceStatusParametersValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ServiceStatusParametersValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ServiceStatusParametersValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceStatusParametersValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BindingTypeOutput{})
	pulumi.RegisterOutputType(BindingMetadataOutput{})
	pulumi.RegisterOutputType(BindingSpecOutput{})
	pulumi.RegisterOutputType(BindingSpecPtrOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersArrayOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersAttributesOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersValueFromOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersValueFromPtrOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(BindingSpecParametersValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BindingStatusOutput{})
	pulumi.RegisterOutputType(BindingStatusPtrOutput{})
	pulumi.RegisterOutputType(ServiceTypeOutput{})
	pulumi.RegisterOutputType(ServiceMetadataOutput{})
	pulumi.RegisterOutputType(ServiceSpecOutput{})
	pulumi.RegisterOutputType(ServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceSpecContextOutput{})
	pulumi.RegisterOutputType(ServiceSpecContextPtrOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersArrayOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersAttributesOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersValueFromOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersValueFromPtrOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(ServiceSpecParametersValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusOutput{})
	pulumi.RegisterOutputType(ServiceStatusPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusContextOutput{})
	pulumi.RegisterOutputType(ServiceStatusContextPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersArrayOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersAttributesOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersValueFromOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersValueFromPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(ServiceStatusParametersValueFromSecretKeyRefPtrOutput{})
}
