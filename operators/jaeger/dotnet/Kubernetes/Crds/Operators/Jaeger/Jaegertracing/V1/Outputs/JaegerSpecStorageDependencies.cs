// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1
{

    [OutputType]
    public sealed class JaegerSpecStorageDependencies
    {
        public readonly Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesAffinity Affinity;
        public readonly ImmutableDictionary<string, string> Annotations;
        public readonly bool CassandraClientAuthEnabled;
        public readonly bool ElasticsearchClientNodeOnly;
        public readonly bool ElasticsearchNodesWanOnly;
        public readonly bool Enabled;
        public readonly string Image;
        public readonly string JavaOpts;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesResources Resources;
        public readonly string Schedule;
        public readonly Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesSecurityContext SecurityContext;
        public readonly string ServiceAccount;
        public readonly string SparkMaster;
        public readonly int SuccessfulJobsHistoryLimit;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesTolerations> Tolerations;
        public readonly int TtlSecondsAfterFinished;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesVolumeMounts> VolumeMounts;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesVolumes> Volumes;

        [OutputConstructor]
        private JaegerSpecStorageDependencies(
            Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesAffinity affinity,

            ImmutableDictionary<string, string> annotations,

            bool cassandraClientAuthEnabled,

            bool elasticsearchClientNodeOnly,

            bool elasticsearchNodesWanOnly,

            bool enabled,

            string image,

            string javaOpts,

            ImmutableDictionary<string, string> labels,

            Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesResources resources,

            string schedule,

            Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesSecurityContext securityContext,

            string serviceAccount,

            string sparkMaster,

            int successfulJobsHistoryLimit,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesTolerations> tolerations,

            int ttlSecondsAfterFinished,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesVolumeMounts> volumeMounts,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Jaegertracing.V1.JaegerSpecStorageDependenciesVolumes> volumes)
        {
            Affinity = affinity;
            Annotations = annotations;
            CassandraClientAuthEnabled = cassandraClientAuthEnabled;
            ElasticsearchClientNodeOnly = elasticsearchClientNodeOnly;
            ElasticsearchNodesWanOnly = elasticsearchNodesWanOnly;
            Enabled = enabled;
            Image = image;
            JavaOpts = javaOpts;
            Labels = labels;
            Resources = resources;
            Schedule = schedule;
            SecurityContext = securityContext;
            ServiceAccount = serviceAccount;
            SparkMaster = sparkMaster;
            SuccessfulJobsHistoryLimit = successfulJobsHistoryLimit;
            Tolerations = tolerations;
            TtlSecondsAfterFinished = ttlSecondsAfterFinished;
            VolumeMounts = volumeMounts;
            Volumes = volumes;
        }
    }
}
