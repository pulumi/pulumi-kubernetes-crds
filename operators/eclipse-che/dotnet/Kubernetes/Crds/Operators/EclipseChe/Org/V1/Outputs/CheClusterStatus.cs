// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Org.V1
{

    [OutputType]
    public sealed class CheClusterStatus
    {
        /// <summary>
        /// Status of a Che installation. Can be `Available`, `Unavailable`, or `Available, Rolling Update in Progress`
        /// </summary>
        public readonly string CheClusterRunning;
        /// <summary>
        /// Public URL to the Che server
        /// </summary>
        public readonly string CheURL;
        /// <summary>
        /// Current installed Che version
        /// </summary>
        public readonly string CheVersion;
        /// <summary>
        /// Indicates if or not a Postgres instance has been correctly provisioned
        /// </summary>
        public readonly bool DbProvisioned;
        /// <summary>
        /// Public URL to the Devfile registry
        /// </summary>
        public readonly string DevfileRegistryURL;
        /// <summary>
        /// A URL that can point to some URL where to find help related to the current Operator status.
        /// </summary>
        public readonly string HelpLink;
        /// <summary>
        /// Indicates whether an Identity Provider instance (Keycloak / RH SSO) has been provisioned with realm, client and user
        /// </summary>
        public readonly bool KeycloakProvisioned;
        /// <summary>
        /// Public URL to the Identity Provider server (Keycloak / RH SSO).
        /// </summary>
        public readonly string KeycloakURL;
        /// <summary>
        /// A human readable message indicating details about why the pod is in this condition.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// Indicates whether an Identity Provider instance (Keycloak / RH SSO) has been configured to integrate with the OpenShift OAuth.
        /// </summary>
        public readonly bool OpenShiftoAuthProvisioned;
        /// <summary>
        /// Public URL to the Plugin registry
        /// </summary>
        public readonly string PluginRegistryURL;
        /// <summary>
        /// A brief CamelCase message indicating details about why the pod is in this state.
        /// </summary>
        public readonly string Reason;

        [OutputConstructor]
        private CheClusterStatus(
            string cheClusterRunning,

            string cheURL,

            string cheVersion,

            bool dbProvisioned,

            string devfileRegistryURL,

            string helpLink,

            bool keycloakProvisioned,

            string keycloakURL,

            string message,

            bool openShiftoAuthProvisioned,

            string pluginRegistryURL,

            string reason)
        {
            CheClusterRunning = cheClusterRunning;
            CheURL = cheURL;
            CheVersion = cheVersion;
            DbProvisioned = dbProvisioned;
            DevfileRegistryURL = devfileRegistryURL;
            HelpLink = helpLink;
            KeycloakProvisioned = keycloakProvisioned;
            KeycloakURL = keycloakURL;
            Message = message;
            OpenShiftoAuthProvisioned = openShiftoAuthProvisioned;
            PluginRegistryURL = pluginRegistryURL;
            Reason = reason;
        }
    }
}
