// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Org.V1
{

    /// <summary>
    /// CheClusterStatus defines the observed state of Che installation
    /// </summary>
    public class CheClusterStatusArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Status of a Che installation. Can be `Available`, `Unavailable`, or `Available, Rolling Update in Progress`
        /// </summary>
        [Input("cheClusterRunning")]
        public Input<string>? CheClusterRunning { get; set; }

        /// <summary>
        /// Public URL to the Che server
        /// </summary>
        [Input("cheURL")]
        public Input<string>? CheURL { get; set; }

        /// <summary>
        /// Current installed Che version
        /// </summary>
        [Input("cheVersion")]
        public Input<string>? CheVersion { get; set; }

        /// <summary>
        /// Indicates if or not a Postgres instance has been correctly provisioned
        /// </summary>
        [Input("dbProvisioned")]
        public Input<bool>? DbProvisioned { get; set; }

        /// <summary>
        /// Public URL to the Devfile registry
        /// </summary>
        [Input("devfileRegistryURL")]
        public Input<string>? DevfileRegistryURL { get; set; }

        /// <summary>
        /// A URL that can point to some URL where to find help related to the current Operator status.
        /// </summary>
        [Input("helpLink")]
        public Input<string>? HelpLink { get; set; }

        /// <summary>
        /// Indicates whether an Identity Provider instance (Keycloak / RH SSO) has been provisioned with realm, client and user
        /// </summary>
        [Input("keycloakProvisioned")]
        public Input<bool>? KeycloakProvisioned { get; set; }

        /// <summary>
        /// Public URL to the Identity Provider server (Keycloak / RH SSO).
        /// </summary>
        [Input("keycloakURL")]
        public Input<string>? KeycloakURL { get; set; }

        /// <summary>
        /// A human readable message indicating details about why the pod is in this condition.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// Indicates whether an Identity Provider instance (Keycloak / RH SSO) has been configured to integrate with the OpenShift OAuth.
        /// </summary>
        [Input("openShiftoAuthProvisioned")]
        public Input<bool>? OpenShiftoAuthProvisioned { get; set; }

        /// <summary>
        /// Public URL to the Plugin registry
        /// </summary>
        [Input("pluginRegistryURL")]
        public Input<string>? PluginRegistryURL { get; set; }

        /// <summary>
        /// A brief CamelCase message indicating details about why the pod is in this state.
        /// </summary>
        [Input("reason")]
        public Input<string>? Reason { get; set; }

        public CheClusterStatusArgs()
        {
        }
    }
}
