// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace redhatcop {
    export namespace v1alpha1 {
        /**
         * EgressIPAMSpec defines the desired state of EgressIPAM
         */
        export interface EgressIPAMSpec {
            /**
             * CIDRAssignments is a set of CIDRs. Namespaces will receive one available IP from each of this CIDRs.
             */
            cidrAssignments?: pulumi.Input<pulumi.Input<inputs.redhatcop.v1alpha1.EgressIPAMSpecCidrAssignments>[]>;
            /**
             * NodeSelector is a selector that allows to subset which nodes will be managed by this EgressIPAM
             */
            nodeSelector?: pulumi.Input<inputs.redhatcop.v1alpha1.EgressIPAMSpecNodeSelector>;
            /**
             * TopologyLabel is the label that needs to identified nodes that will carry egressIPs in the CIDRAssignments. Each label value should map to a CIDR in the CIDRAssignments.
             */
            topologyLabel: pulumi.Input<string>;
        }

        export interface EgressIPAMSpecCidrAssignments {
            /**
             * kubebuilder:validation:Pattern=^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/(3[0-2]|2[0-9]|1[0-9]|[0-9]))?$ CIDR a CIDR. IPs in this CIDR will be added to the nodes selected by the topology label and value. These IPs must be routable when attached to the selected nodes
             */
            CIDR: pulumi.Input<string>;
            /**
             * LabelValue the label value, which together with the TopologyLabel select the nodes that will carry the IPs from this CIDR
             */
            labelValue: pulumi.Input<string>;
            /**
             * This does not work kubebuilder:validation:Pattern=`^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$` ReservedIPs a set of IPs in the CIDR that are reserved for other purposes and cannot be assigned.
             */
            reservedIPs?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * NodeSelector is a selector that allows to subset which nodes will be managed by this EgressIPAM
         */
        export interface EgressIPAMSpecNodeSelector {
            /**
             * matchExpressions is a list of label selector requirements. The requirements are ANDed.
             */
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.redhatcop.v1alpha1.EgressIPAMSpecNodeSelectorMatchExpressions>[]>;
            /**
             * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
             */
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
         */
        export interface EgressIPAMSpecNodeSelectorMatchExpressions {
            /**
             * key is the label key that the selector applies to.
             */
            key: pulumi.Input<string>;
            /**
             * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
             */
            operator: pulumi.Input<string>;
            /**
             * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
             */
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * EgressIPAMStatus defines the observed state of EgressIPAM
         */
        export interface EgressIPAMStatus {
            lastUpdate?: pulumi.Input<string>;
            reason?: pulumi.Input<string>;
            status?: pulumi.Input<string>;
        }
    }
}
