// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1
{

    [OutputType]
    public sealed class EgressIPAMSpec
    {
        /// <summary>
        /// CIDRAssignments is a set of CIDRs. Namespaces will receive one available IP from each of this CIDRs.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.EgressIPAMSpecCidrAssignments> CidrAssignments;
        /// <summary>
        /// NodeSelector is a selector that allows to subset which nodes will be managed by this EgressIPAM
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.EgressIPAMSpecNodeSelector NodeSelector;
        /// <summary>
        /// TopologyLabel is the label that needs to identified nodes that will carry egressIPs in the CIDRAssignments. Each label value should map to a CIDR in the CIDRAssignments.
        /// </summary>
        public readonly string TopologyLabel;

        [OutputConstructor]
        private EgressIPAMSpec(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.EgressIPAMSpecCidrAssignments> cidrAssignments,

            Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.EgressIPAMSpecNodeSelector nodeSelector,

            string topologyLabel)
        {
            CidrAssignments = cidrAssignments;
            NodeSelector = nodeSelector;
            TopologyLabel = topologyLabel;
        }
    }
}
