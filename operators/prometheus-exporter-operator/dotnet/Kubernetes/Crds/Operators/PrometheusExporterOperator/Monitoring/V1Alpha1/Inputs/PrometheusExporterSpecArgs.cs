// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1
{

    /// <summary>
    /// PrometheusExporterSpec defines the desired state of PrometheusExporter
    /// </summary>
    public class PrometheusExporterSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// For cloudwatch exporter, the Secret name containing AWS IAM credentials (AWS_ACCESS_KEY_ID / AWS_SECRET_ACCESS_KEY)
        /// </summary>
        [Input("awsCredentialsSecretName")]
        public Input<string>? AwsCredentialsSecretName { get; set; }

        /// <summary>
        /// For cloudwatch exporter, the ConfigMap name containing Cloudwatch config.yml (Services, Dimensions, Tags used for autodiscovery...)
        /// </summary>
        [Input("configurationConfigmapName")]
        public Input<string>? ConfigurationConfigmapName { get; set; }

        /// <summary>
        /// For redis exporter, the optional redis keys to monitor (example: resque:queue:stats,resque:queue:priority,resque:queue:main,resque:failed)
        /// </summary>
        [Input("dbCheckKeys")]
        public Input<string>? DbCheckKeys { get; set; }

        /// <summary>
        /// For mysql and postgresql exporters, the Secret name containing connection string definition (DSN)
        /// </summary>
        [Input("dbConnectionStringSecretName")]
        public Input<string>? DbConnectionStringSecretName { get; set; }

        /// <summary>
        /// For redis, memcached, sphinx and es exporters, the db host to monitor
        /// </summary>
        [Input("dbHost")]
        public Input<string>? DbHost { get; set; }

        /// <summary>
        /// For redis, memcached, sphinx and es exporters, the db port to monitor
        /// </summary>
        [Input("dbPort")]
        public Input<int>? DbPort { get; set; }

        [Input("extraLabel")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecExtraLabelArgs>? ExtraLabel { get; set; }

        [Input("grafanaDashboard")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecGrafanaDashboardArgs>? GrafanaDashboard { get; set; }

        [Input("image")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecImageArgs>? Image { get; set; }

        [Input("livenessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecLivenessProbeArgs>? LivenessProbe { get; set; }

        /// <summary>
        /// Prometheus exporter port where metrics are available (example 9150)
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("readinessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecReadinessProbeArgs>? ReadinessProbe { get; set; }

        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecResourcesArgs>? Resources { get; set; }

        [Input("serviceMonitor")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1Alpha1.PrometheusExporterSpecServiceMonitorArgs>? ServiceMonitor { get; set; }

        /// <summary>
        /// Supported prometheus-exporter types: memcached, redis, mysql, postgresql, sphinx, es, cloudwatch
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public PrometheusExporterSpecArgs()
        {
        }
    }
}
