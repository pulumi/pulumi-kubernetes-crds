// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ClusterInstallationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
	Spec ClusterInstallationSpec `pulumi:"spec"`
	// Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
	Status *ClusterInstallationStatus `pulumi:"status"`
}

// ClusterInstallationTypeInput is an input type that accepts ClusterInstallationTypeArgs and ClusterInstallationTypeOutput values.
// You can construct a concrete instance of `ClusterInstallationTypeInput` via:
//
//          ClusterInstallationTypeArgs{...}
type ClusterInstallationTypeInput interface {
	pulumi.Input

	ToClusterInstallationTypeOutput() ClusterInstallationTypeOutput
	ToClusterInstallationTypeOutputWithContext(context.Context) ClusterInstallationTypeOutput
}

type ClusterInstallationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
	Spec ClusterInstallationSpecInput `pulumi:"spec"`
	// Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
	Status ClusterInstallationStatusPtrInput `pulumi:"status"`
}

func (ClusterInstallationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationType)(nil)).Elem()
}

func (i ClusterInstallationTypeArgs) ToClusterInstallationTypeOutput() ClusterInstallationTypeOutput {
	return i.ToClusterInstallationTypeOutputWithContext(context.Background())
}

func (i ClusterInstallationTypeArgs) ToClusterInstallationTypeOutputWithContext(ctx context.Context) ClusterInstallationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationTypeOutput)
}

type ClusterInstallationTypeOutput struct{ *pulumi.OutputState }

func (ClusterInstallationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationType)(nil)).Elem()
}

func (o ClusterInstallationTypeOutput) ToClusterInstallationTypeOutput() ClusterInstallationTypeOutput {
	return o
}

func (o ClusterInstallationTypeOutput) ToClusterInstallationTypeOutputWithContext(ctx context.Context) ClusterInstallationTypeOutput {
	return o
}

func (o ClusterInstallationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ClusterInstallationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
func (o ClusterInstallationTypeOutput) Spec() ClusterInstallationSpecOutput {
	return o.ApplyT(func(v ClusterInstallationType) ClusterInstallationSpec { return v.Spec }).(ClusterInstallationSpecOutput)
}

// Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
func (o ClusterInstallationTypeOutput) Status() ClusterInstallationStatusPtrOutput {
	return o.ApplyT(func(v ClusterInstallationType) *ClusterInstallationStatus { return v.Status }).(ClusterInstallationStatusPtrOutput)
}

// Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata +k8s:openapi-gen=false
type ClusterInstallationMetadata struct {
}

// ClusterInstallationMetadataInput is an input type that accepts ClusterInstallationMetadataArgs and ClusterInstallationMetadataOutput values.
// You can construct a concrete instance of `ClusterInstallationMetadataInput` via:
//
//          ClusterInstallationMetadataArgs{...}
type ClusterInstallationMetadataInput interface {
	pulumi.Input

	ToClusterInstallationMetadataOutput() ClusterInstallationMetadataOutput
	ToClusterInstallationMetadataOutputWithContext(context.Context) ClusterInstallationMetadataOutput
}

// Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata +k8s:openapi-gen=false
type ClusterInstallationMetadataArgs struct {
}

func (ClusterInstallationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationMetadata)(nil)).Elem()
}

func (i ClusterInstallationMetadataArgs) ToClusterInstallationMetadataOutput() ClusterInstallationMetadataOutput {
	return i.ToClusterInstallationMetadataOutputWithContext(context.Background())
}

func (i ClusterInstallationMetadataArgs) ToClusterInstallationMetadataOutputWithContext(ctx context.Context) ClusterInstallationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationMetadataOutput)
}

// Standard objectâ€™s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata +k8s:openapi-gen=false
type ClusterInstallationMetadataOutput struct{ *pulumi.OutputState }

func (ClusterInstallationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationMetadata)(nil)).Elem()
}

func (o ClusterInstallationMetadataOutput) ToClusterInstallationMetadataOutput() ClusterInstallationMetadataOutput {
	return o
}

func (o ClusterInstallationMetadataOutput) ToClusterInstallationMetadataOutputWithContext(ctx context.Context) ClusterInstallationMetadataOutput {
	return o
}

// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
type ClusterInstallationSpec struct {
	// If specified, affinity will define the pod's scheduling constraints
	Affinity      map[string]interface{}                `pulumi:"affinity"`
	Database      *ClusterInstallationSpecDatabase      `pulumi:"database"`
	ElasticSearch *ClusterInstallationSpecElasticSearch `pulumi:"elasticSearch"`
	// Image defines the ClusterInstallation Docker image.
	Image              *string           `pulumi:"image"`
	IngressAnnotations map[string]string `pulumi:"ingressAnnotations"`
	// IngressName defines the name to be used when creating the ingress rules
	IngressName string `pulumi:"ingressName"`
	// Secret that contains the mattermost license
	MattermostLicenseSecret *string                       `pulumi:"mattermostLicenseSecret"`
	Minio                   *ClusterInstallationSpecMinio `pulumi:"minio"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// Replicas defines the number of replicas to use for the Mattermost app servers. Setting this will override the number of replicas set by 'Size'.
	Replicas *int `pulumi:"replicas"`
	// Defines the resource requests and limits for the Mattermost app server pods.
	Resources          map[string]interface{} `pulumi:"resources"`
	ServiceAnnotations map[string]string      `pulumi:"serviceAnnotations"`
	// Size defines the size of the ClusterInstallation. This is typically specified in number of users. This will set replica and resource requests/limits appropriately for the provided number of users. Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. Defaults to 5000users. Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas', or 'Database.Resources' will override the values set by Size.
	Size                   *string `pulumi:"size"`
	UseServiceLoadBalancer *bool   `pulumi:"useServiceLoadBalancer"`
	// Version defines the ClusterInstallation Docker image version.
	Version *string `pulumi:"version"`
}

// ClusterInstallationSpecInput is an input type that accepts ClusterInstallationSpecArgs and ClusterInstallationSpecOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecInput` via:
//
//          ClusterInstallationSpecArgs{...}
type ClusterInstallationSpecInput interface {
	pulumi.Input

	ToClusterInstallationSpecOutput() ClusterInstallationSpecOutput
	ToClusterInstallationSpecOutputWithContext(context.Context) ClusterInstallationSpecOutput
}

// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
type ClusterInstallationSpecArgs struct {
	// If specified, affinity will define the pod's scheduling constraints
	Affinity      pulumi.MapInput                              `pulumi:"affinity"`
	Database      ClusterInstallationSpecDatabasePtrInput      `pulumi:"database"`
	ElasticSearch ClusterInstallationSpecElasticSearchPtrInput `pulumi:"elasticSearch"`
	// Image defines the ClusterInstallation Docker image.
	Image              pulumi.StringPtrInput `pulumi:"image"`
	IngressAnnotations pulumi.StringMapInput `pulumi:"ingressAnnotations"`
	// IngressName defines the name to be used when creating the ingress rules
	IngressName pulumi.StringInput `pulumi:"ingressName"`
	// Secret that contains the mattermost license
	MattermostLicenseSecret pulumi.StringPtrInput                `pulumi:"mattermostLicenseSecret"`
	Minio                   ClusterInstallationSpecMinioPtrInput `pulumi:"minio"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// Replicas defines the number of replicas to use for the Mattermost app servers. Setting this will override the number of replicas set by 'Size'.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Defines the resource requests and limits for the Mattermost app server pods.
	Resources          pulumi.MapInput       `pulumi:"resources"`
	ServiceAnnotations pulumi.StringMapInput `pulumi:"serviceAnnotations"`
	// Size defines the size of the ClusterInstallation. This is typically specified in number of users. This will set replica and resource requests/limits appropriately for the provided number of users. Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. Defaults to 5000users. Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas', or 'Database.Resources' will override the values set by Size.
	Size                   pulumi.StringPtrInput `pulumi:"size"`
	UseServiceLoadBalancer pulumi.BoolPtrInput   `pulumi:"useServiceLoadBalancer"`
	// Version defines the ClusterInstallation Docker image version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ClusterInstallationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpec)(nil)).Elem()
}

func (i ClusterInstallationSpecArgs) ToClusterInstallationSpecOutput() ClusterInstallationSpecOutput {
	return i.ToClusterInstallationSpecOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecArgs) ToClusterInstallationSpecOutputWithContext(ctx context.Context) ClusterInstallationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecOutput)
}

func (i ClusterInstallationSpecArgs) ToClusterInstallationSpecPtrOutput() ClusterInstallationSpecPtrOutput {
	return i.ToClusterInstallationSpecPtrOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecArgs) ToClusterInstallationSpecPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecOutput).ToClusterInstallationSpecPtrOutputWithContext(ctx)
}

// ClusterInstallationSpecPtrInput is an input type that accepts ClusterInstallationSpecArgs, ClusterInstallationSpecPtr and ClusterInstallationSpecPtrOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecPtrInput` via:
//
//          ClusterInstallationSpecArgs{...}
//
//  or:
//
//          nil
type ClusterInstallationSpecPtrInput interface {
	pulumi.Input

	ToClusterInstallationSpecPtrOutput() ClusterInstallationSpecPtrOutput
	ToClusterInstallationSpecPtrOutputWithContext(context.Context) ClusterInstallationSpecPtrOutput
}

type clusterInstallationSpecPtrType ClusterInstallationSpecArgs

func ClusterInstallationSpecPtr(v *ClusterInstallationSpecArgs) ClusterInstallationSpecPtrInput {
	return (*clusterInstallationSpecPtrType)(v)
}

func (*clusterInstallationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpec)(nil)).Elem()
}

func (i *clusterInstallationSpecPtrType) ToClusterInstallationSpecPtrOutput() ClusterInstallationSpecPtrOutput {
	return i.ToClusterInstallationSpecPtrOutputWithContext(context.Background())
}

func (i *clusterInstallationSpecPtrType) ToClusterInstallationSpecPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecPtrOutput)
}

// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
type ClusterInstallationSpecOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpec)(nil)).Elem()
}

func (o ClusterInstallationSpecOutput) ToClusterInstallationSpecOutput() ClusterInstallationSpecOutput {
	return o
}

func (o ClusterInstallationSpecOutput) ToClusterInstallationSpecOutputWithContext(ctx context.Context) ClusterInstallationSpecOutput {
	return o
}

func (o ClusterInstallationSpecOutput) ToClusterInstallationSpecPtrOutput() ClusterInstallationSpecPtrOutput {
	return o.ToClusterInstallationSpecPtrOutputWithContext(context.Background())
}

func (o ClusterInstallationSpecOutput) ToClusterInstallationSpecPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *ClusterInstallationSpec {
		return &v
	}).(ClusterInstallationSpecPtrOutput)
}

// If specified, affinity will define the pod's scheduling constraints
func (o ClusterInstallationSpecOutput) Affinity() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) map[string]interface{} { return v.Affinity }).(pulumi.MapOutput)
}

func (o ClusterInstallationSpecOutput) Database() ClusterInstallationSpecDatabasePtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *ClusterInstallationSpecDatabase { return v.Database }).(ClusterInstallationSpecDatabasePtrOutput)
}

func (o ClusterInstallationSpecOutput) ElasticSearch() ClusterInstallationSpecElasticSearchPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *ClusterInstallationSpecElasticSearch { return v.ElasticSearch }).(ClusterInstallationSpecElasticSearchPtrOutput)
}

// Image defines the ClusterInstallation Docker image.
func (o ClusterInstallationSpecOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecOutput) IngressAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) map[string]string { return v.IngressAnnotations }).(pulumi.StringMapOutput)
}

// IngressName defines the name to be used when creating the ingress rules
func (o ClusterInstallationSpecOutput) IngressName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) string { return v.IngressName }).(pulumi.StringOutput)
}

// Secret that contains the mattermost license
func (o ClusterInstallationSpecOutput) MattermostLicenseSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *string { return v.MattermostLicenseSecret }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecOutput) Minio() ClusterInstallationSpecMinioPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *ClusterInstallationSpecMinio { return v.Minio }).(ClusterInstallationSpecMinioPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o ClusterInstallationSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// Replicas defines the number of replicas to use for the Mattermost app servers. Setting this will override the number of replicas set by 'Size'.
func (o ClusterInstallationSpecOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Defines the resource requests and limits for the Mattermost app server pods.
func (o ClusterInstallationSpecOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) map[string]interface{} { return v.Resources }).(pulumi.MapOutput)
}

func (o ClusterInstallationSpecOutput) ServiceAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) map[string]string { return v.ServiceAnnotations }).(pulumi.StringMapOutput)
}

// Size defines the size of the ClusterInstallation. This is typically specified in number of users. This will set replica and resource requests/limits appropriately for the provided number of users. Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. Defaults to 5000users. Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas', or 'Database.Resources' will override the values set by Size.
func (o ClusterInstallationSpecOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *string { return v.Size }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecOutput) UseServiceLoadBalancer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *bool { return v.UseServiceLoadBalancer }).(pulumi.BoolPtrOutput)
}

// Version defines the ClusterInstallation Docker image version.
func (o ClusterInstallationSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterInstallationSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpec)(nil)).Elem()
}

func (o ClusterInstallationSpecPtrOutput) ToClusterInstallationSpecPtrOutput() ClusterInstallationSpecPtrOutput {
	return o
}

func (o ClusterInstallationSpecPtrOutput) ToClusterInstallationSpecPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecPtrOutput {
	return o
}

func (o ClusterInstallationSpecPtrOutput) Elem() ClusterInstallationSpecOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) ClusterInstallationSpec { return *v }).(ClusterInstallationSpecOutput)
}

// If specified, affinity will define the pod's scheduling constraints
func (o ClusterInstallationSpecPtrOutput) Affinity() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(pulumi.MapOutput)
}

func (o ClusterInstallationSpecPtrOutput) Database() ClusterInstallationSpecDatabasePtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *ClusterInstallationSpecDatabase {
		if v == nil {
			return nil
		}
		return v.Database
	}).(ClusterInstallationSpecDatabasePtrOutput)
}

func (o ClusterInstallationSpecPtrOutput) ElasticSearch() ClusterInstallationSpecElasticSearchPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *ClusterInstallationSpecElasticSearch {
		if v == nil {
			return nil
		}
		return v.ElasticSearch
	}).(ClusterInstallationSpecElasticSearchPtrOutput)
}

// Image defines the ClusterInstallation Docker image.
func (o ClusterInstallationSpecPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecPtrOutput) IngressAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.IngressAnnotations
	}).(pulumi.StringMapOutput)
}

// IngressName defines the name to be used when creating the ingress rules
func (o ClusterInstallationSpecPtrOutput) IngressName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return &v.IngressName
	}).(pulumi.StringPtrOutput)
}

// Secret that contains the mattermost license
func (o ClusterInstallationSpecPtrOutput) MattermostLicenseSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.MattermostLicenseSecret
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecPtrOutput) Minio() ClusterInstallationSpecMinioPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *ClusterInstallationSpecMinio {
		if v == nil {
			return nil
		}
		return v.Minio
	}).(ClusterInstallationSpecMinioPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o ClusterInstallationSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// Replicas defines the number of replicas to use for the Mattermost app servers. Setting this will override the number of replicas set by 'Size'.
func (o ClusterInstallationSpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Defines the resource requests and limits for the Mattermost app server pods.
func (o ClusterInstallationSpecPtrOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.MapOutput)
}

func (o ClusterInstallationSpecPtrOutput) ServiceAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceAnnotations
	}).(pulumi.StringMapOutput)
}

// Size defines the size of the ClusterInstallation. This is typically specified in number of users. This will set replica and resource requests/limits appropriately for the provided number of users. Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. Defaults to 5000users. Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas', or 'Database.Resources' will override the values set by Size.
func (o ClusterInstallationSpecPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecPtrOutput) UseServiceLoadBalancer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *bool {
		if v == nil {
			return nil
		}
		return v.UseServiceLoadBalancer
	}).(pulumi.BoolPtrOutput)
}

// Version defines the ClusterInstallation Docker image version.
func (o ClusterInstallationSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// If specified, affinity will define the pod's scheduling constraints
type ClusterInstallationSpecAffinity struct {
}

// ClusterInstallationSpecAffinityInput is an input type that accepts ClusterInstallationSpecAffinityArgs and ClusterInstallationSpecAffinityOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecAffinityInput` via:
//
//          ClusterInstallationSpecAffinityArgs{...}
type ClusterInstallationSpecAffinityInput interface {
	pulumi.Input

	ToClusterInstallationSpecAffinityOutput() ClusterInstallationSpecAffinityOutput
	ToClusterInstallationSpecAffinityOutputWithContext(context.Context) ClusterInstallationSpecAffinityOutput
}

// If specified, affinity will define the pod's scheduling constraints
type ClusterInstallationSpecAffinityArgs struct {
}

func (ClusterInstallationSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecAffinity)(nil)).Elem()
}

func (i ClusterInstallationSpecAffinityArgs) ToClusterInstallationSpecAffinityOutput() ClusterInstallationSpecAffinityOutput {
	return i.ToClusterInstallationSpecAffinityOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecAffinityArgs) ToClusterInstallationSpecAffinityOutputWithContext(ctx context.Context) ClusterInstallationSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecAffinityOutput)
}

// If specified, affinity will define the pod's scheduling constraints
type ClusterInstallationSpecAffinityOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecAffinity)(nil)).Elem()
}

func (o ClusterInstallationSpecAffinityOutput) ToClusterInstallationSpecAffinityOutput() ClusterInstallationSpecAffinityOutput {
	return o
}

func (o ClusterInstallationSpecAffinityOutput) ToClusterInstallationSpecAffinityOutputWithContext(ctx context.Context) ClusterInstallationSpecAffinityOutput {
	return o
}

type ClusterInstallationSpecDatabase struct {
	// If the user want to use an external DB. This can be inside the same k8s cluster or outside like AWS RDS.
	ExternalSecret *string `pulumi:"externalSecret"`
	// Defines the number of database replicas. For redundancy use at least 2 replicas. Setting this will override the number of replicas set by 'Size'.
	Replicas *int `pulumi:"replicas"`
	// Defines the resource requests and limits for the database pods.
	Resources map[string]interface{} `pulumi:"resources"`
	// Defines the storage size for the database. ie 50Gi
	StorageSize *string `pulumi:"storageSize"`
	Type        *string `pulumi:"type"`
}

// ClusterInstallationSpecDatabaseInput is an input type that accepts ClusterInstallationSpecDatabaseArgs and ClusterInstallationSpecDatabaseOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecDatabaseInput` via:
//
//          ClusterInstallationSpecDatabaseArgs{...}
type ClusterInstallationSpecDatabaseInput interface {
	pulumi.Input

	ToClusterInstallationSpecDatabaseOutput() ClusterInstallationSpecDatabaseOutput
	ToClusterInstallationSpecDatabaseOutputWithContext(context.Context) ClusterInstallationSpecDatabaseOutput
}

type ClusterInstallationSpecDatabaseArgs struct {
	// If the user want to use an external DB. This can be inside the same k8s cluster or outside like AWS RDS.
	ExternalSecret pulumi.StringPtrInput `pulumi:"externalSecret"`
	// Defines the number of database replicas. For redundancy use at least 2 replicas. Setting this will override the number of replicas set by 'Size'.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Defines the resource requests and limits for the database pods.
	Resources pulumi.MapInput `pulumi:"resources"`
	// Defines the storage size for the database. ie 50Gi
	StorageSize pulumi.StringPtrInput `pulumi:"storageSize"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterInstallationSpecDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecDatabase)(nil)).Elem()
}

func (i ClusterInstallationSpecDatabaseArgs) ToClusterInstallationSpecDatabaseOutput() ClusterInstallationSpecDatabaseOutput {
	return i.ToClusterInstallationSpecDatabaseOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecDatabaseArgs) ToClusterInstallationSpecDatabaseOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecDatabaseOutput)
}

func (i ClusterInstallationSpecDatabaseArgs) ToClusterInstallationSpecDatabasePtrOutput() ClusterInstallationSpecDatabasePtrOutput {
	return i.ToClusterInstallationSpecDatabasePtrOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecDatabaseArgs) ToClusterInstallationSpecDatabasePtrOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecDatabaseOutput).ToClusterInstallationSpecDatabasePtrOutputWithContext(ctx)
}

// ClusterInstallationSpecDatabasePtrInput is an input type that accepts ClusterInstallationSpecDatabaseArgs, ClusterInstallationSpecDatabasePtr and ClusterInstallationSpecDatabasePtrOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecDatabasePtrInput` via:
//
//          ClusterInstallationSpecDatabaseArgs{...}
//
//  or:
//
//          nil
type ClusterInstallationSpecDatabasePtrInput interface {
	pulumi.Input

	ToClusterInstallationSpecDatabasePtrOutput() ClusterInstallationSpecDatabasePtrOutput
	ToClusterInstallationSpecDatabasePtrOutputWithContext(context.Context) ClusterInstallationSpecDatabasePtrOutput
}

type clusterInstallationSpecDatabasePtrType ClusterInstallationSpecDatabaseArgs

func ClusterInstallationSpecDatabasePtr(v *ClusterInstallationSpecDatabaseArgs) ClusterInstallationSpecDatabasePtrInput {
	return (*clusterInstallationSpecDatabasePtrType)(v)
}

func (*clusterInstallationSpecDatabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpecDatabase)(nil)).Elem()
}

func (i *clusterInstallationSpecDatabasePtrType) ToClusterInstallationSpecDatabasePtrOutput() ClusterInstallationSpecDatabasePtrOutput {
	return i.ToClusterInstallationSpecDatabasePtrOutputWithContext(context.Background())
}

func (i *clusterInstallationSpecDatabasePtrType) ToClusterInstallationSpecDatabasePtrOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecDatabasePtrOutput)
}

type ClusterInstallationSpecDatabaseOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecDatabase)(nil)).Elem()
}

func (o ClusterInstallationSpecDatabaseOutput) ToClusterInstallationSpecDatabaseOutput() ClusterInstallationSpecDatabaseOutput {
	return o
}

func (o ClusterInstallationSpecDatabaseOutput) ToClusterInstallationSpecDatabaseOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabaseOutput {
	return o
}

func (o ClusterInstallationSpecDatabaseOutput) ToClusterInstallationSpecDatabasePtrOutput() ClusterInstallationSpecDatabasePtrOutput {
	return o.ToClusterInstallationSpecDatabasePtrOutputWithContext(context.Background())
}

func (o ClusterInstallationSpecDatabaseOutput) ToClusterInstallationSpecDatabasePtrOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabasePtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecDatabase) *ClusterInstallationSpecDatabase {
		return &v
	}).(ClusterInstallationSpecDatabasePtrOutput)
}

// If the user want to use an external DB. This can be inside the same k8s cluster or outside like AWS RDS.
func (o ClusterInstallationSpecDatabaseOutput) ExternalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecDatabase) *string { return v.ExternalSecret }).(pulumi.StringPtrOutput)
}

// Defines the number of database replicas. For redundancy use at least 2 replicas. Setting this will override the number of replicas set by 'Size'.
func (o ClusterInstallationSpecDatabaseOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecDatabase) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Defines the resource requests and limits for the database pods.
func (o ClusterInstallationSpecDatabaseOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterInstallationSpecDatabase) map[string]interface{} { return v.Resources }).(pulumi.MapOutput)
}

// Defines the storage size for the database. ie 50Gi
func (o ClusterInstallationSpecDatabaseOutput) StorageSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecDatabase) *string { return v.StorageSize }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecDatabaseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecDatabase) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterInstallationSpecDatabasePtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecDatabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpecDatabase)(nil)).Elem()
}

func (o ClusterInstallationSpecDatabasePtrOutput) ToClusterInstallationSpecDatabasePtrOutput() ClusterInstallationSpecDatabasePtrOutput {
	return o
}

func (o ClusterInstallationSpecDatabasePtrOutput) ToClusterInstallationSpecDatabasePtrOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabasePtrOutput {
	return o
}

func (o ClusterInstallationSpecDatabasePtrOutput) Elem() ClusterInstallationSpecDatabaseOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecDatabase) ClusterInstallationSpecDatabase { return *v }).(ClusterInstallationSpecDatabaseOutput)
}

// If the user want to use an external DB. This can be inside the same k8s cluster or outside like AWS RDS.
func (o ClusterInstallationSpecDatabasePtrOutput) ExternalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecDatabase) *string {
		if v == nil {
			return nil
		}
		return v.ExternalSecret
	}).(pulumi.StringPtrOutput)
}

// Defines the number of database replicas. For redundancy use at least 2 replicas. Setting this will override the number of replicas set by 'Size'.
func (o ClusterInstallationSpecDatabasePtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecDatabase) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Defines the resource requests and limits for the database pods.
func (o ClusterInstallationSpecDatabasePtrOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecDatabase) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.MapOutput)
}

// Defines the storage size for the database. ie 50Gi
func (o ClusterInstallationSpecDatabasePtrOutput) StorageSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecDatabase) *string {
		if v == nil {
			return nil
		}
		return v.StorageSize
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecDatabasePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecDatabase) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines the resource requests and limits for the database pods.
type ClusterInstallationSpecDatabaseResources struct {
}

// ClusterInstallationSpecDatabaseResourcesInput is an input type that accepts ClusterInstallationSpecDatabaseResourcesArgs and ClusterInstallationSpecDatabaseResourcesOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecDatabaseResourcesInput` via:
//
//          ClusterInstallationSpecDatabaseResourcesArgs{...}
type ClusterInstallationSpecDatabaseResourcesInput interface {
	pulumi.Input

	ToClusterInstallationSpecDatabaseResourcesOutput() ClusterInstallationSpecDatabaseResourcesOutput
	ToClusterInstallationSpecDatabaseResourcesOutputWithContext(context.Context) ClusterInstallationSpecDatabaseResourcesOutput
}

// Defines the resource requests and limits for the database pods.
type ClusterInstallationSpecDatabaseResourcesArgs struct {
}

func (ClusterInstallationSpecDatabaseResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecDatabaseResources)(nil)).Elem()
}

func (i ClusterInstallationSpecDatabaseResourcesArgs) ToClusterInstallationSpecDatabaseResourcesOutput() ClusterInstallationSpecDatabaseResourcesOutput {
	return i.ToClusterInstallationSpecDatabaseResourcesOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecDatabaseResourcesArgs) ToClusterInstallationSpecDatabaseResourcesOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabaseResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecDatabaseResourcesOutput)
}

// Defines the resource requests and limits for the database pods.
type ClusterInstallationSpecDatabaseResourcesOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecDatabaseResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecDatabaseResources)(nil)).Elem()
}

func (o ClusterInstallationSpecDatabaseResourcesOutput) ToClusterInstallationSpecDatabaseResourcesOutput() ClusterInstallationSpecDatabaseResourcesOutput {
	return o
}

func (o ClusterInstallationSpecDatabaseResourcesOutput) ToClusterInstallationSpecDatabaseResourcesOutputWithContext(ctx context.Context) ClusterInstallationSpecDatabaseResourcesOutput {
	return o
}

type ClusterInstallationSpecElasticSearch struct {
	Host     *string `pulumi:"host"`
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

// ClusterInstallationSpecElasticSearchInput is an input type that accepts ClusterInstallationSpecElasticSearchArgs and ClusterInstallationSpecElasticSearchOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecElasticSearchInput` via:
//
//          ClusterInstallationSpecElasticSearchArgs{...}
type ClusterInstallationSpecElasticSearchInput interface {
	pulumi.Input

	ToClusterInstallationSpecElasticSearchOutput() ClusterInstallationSpecElasticSearchOutput
	ToClusterInstallationSpecElasticSearchOutputWithContext(context.Context) ClusterInstallationSpecElasticSearchOutput
}

type ClusterInstallationSpecElasticSearchArgs struct {
	Host     pulumi.StringPtrInput `pulumi:"host"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterInstallationSpecElasticSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecElasticSearch)(nil)).Elem()
}

func (i ClusterInstallationSpecElasticSearchArgs) ToClusterInstallationSpecElasticSearchOutput() ClusterInstallationSpecElasticSearchOutput {
	return i.ToClusterInstallationSpecElasticSearchOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecElasticSearchArgs) ToClusterInstallationSpecElasticSearchOutputWithContext(ctx context.Context) ClusterInstallationSpecElasticSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecElasticSearchOutput)
}

func (i ClusterInstallationSpecElasticSearchArgs) ToClusterInstallationSpecElasticSearchPtrOutput() ClusterInstallationSpecElasticSearchPtrOutput {
	return i.ToClusterInstallationSpecElasticSearchPtrOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecElasticSearchArgs) ToClusterInstallationSpecElasticSearchPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecElasticSearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecElasticSearchOutput).ToClusterInstallationSpecElasticSearchPtrOutputWithContext(ctx)
}

// ClusterInstallationSpecElasticSearchPtrInput is an input type that accepts ClusterInstallationSpecElasticSearchArgs, ClusterInstallationSpecElasticSearchPtr and ClusterInstallationSpecElasticSearchPtrOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecElasticSearchPtrInput` via:
//
//          ClusterInstallationSpecElasticSearchArgs{...}
//
//  or:
//
//          nil
type ClusterInstallationSpecElasticSearchPtrInput interface {
	pulumi.Input

	ToClusterInstallationSpecElasticSearchPtrOutput() ClusterInstallationSpecElasticSearchPtrOutput
	ToClusterInstallationSpecElasticSearchPtrOutputWithContext(context.Context) ClusterInstallationSpecElasticSearchPtrOutput
}

type clusterInstallationSpecElasticSearchPtrType ClusterInstallationSpecElasticSearchArgs

func ClusterInstallationSpecElasticSearchPtr(v *ClusterInstallationSpecElasticSearchArgs) ClusterInstallationSpecElasticSearchPtrInput {
	return (*clusterInstallationSpecElasticSearchPtrType)(v)
}

func (*clusterInstallationSpecElasticSearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpecElasticSearch)(nil)).Elem()
}

func (i *clusterInstallationSpecElasticSearchPtrType) ToClusterInstallationSpecElasticSearchPtrOutput() ClusterInstallationSpecElasticSearchPtrOutput {
	return i.ToClusterInstallationSpecElasticSearchPtrOutputWithContext(context.Background())
}

func (i *clusterInstallationSpecElasticSearchPtrType) ToClusterInstallationSpecElasticSearchPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecElasticSearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecElasticSearchPtrOutput)
}

type ClusterInstallationSpecElasticSearchOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecElasticSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecElasticSearch)(nil)).Elem()
}

func (o ClusterInstallationSpecElasticSearchOutput) ToClusterInstallationSpecElasticSearchOutput() ClusterInstallationSpecElasticSearchOutput {
	return o
}

func (o ClusterInstallationSpecElasticSearchOutput) ToClusterInstallationSpecElasticSearchOutputWithContext(ctx context.Context) ClusterInstallationSpecElasticSearchOutput {
	return o
}

func (o ClusterInstallationSpecElasticSearchOutput) ToClusterInstallationSpecElasticSearchPtrOutput() ClusterInstallationSpecElasticSearchPtrOutput {
	return o.ToClusterInstallationSpecElasticSearchPtrOutputWithContext(context.Background())
}

func (o ClusterInstallationSpecElasticSearchOutput) ToClusterInstallationSpecElasticSearchPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecElasticSearchPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecElasticSearch) *ClusterInstallationSpecElasticSearch {
		return &v
	}).(ClusterInstallationSpecElasticSearchPtrOutput)
}
func (o ClusterInstallationSpecElasticSearchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecElasticSearch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecElasticSearchOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecElasticSearch) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecElasticSearchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecElasticSearch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterInstallationSpecElasticSearchPtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecElasticSearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpecElasticSearch)(nil)).Elem()
}

func (o ClusterInstallationSpecElasticSearchPtrOutput) ToClusterInstallationSpecElasticSearchPtrOutput() ClusterInstallationSpecElasticSearchPtrOutput {
	return o
}

func (o ClusterInstallationSpecElasticSearchPtrOutput) ToClusterInstallationSpecElasticSearchPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecElasticSearchPtrOutput {
	return o
}

func (o ClusterInstallationSpecElasticSearchPtrOutput) Elem() ClusterInstallationSpecElasticSearchOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecElasticSearch) ClusterInstallationSpecElasticSearch { return *v }).(ClusterInstallationSpecElasticSearchOutput)
}

func (o ClusterInstallationSpecElasticSearchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecElasticSearch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecElasticSearchPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecElasticSearch) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallationSpecElasticSearchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecElasticSearch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ClusterInstallationSpecIngressAnnotations struct {
}

// ClusterInstallationSpecIngressAnnotationsInput is an input type that accepts ClusterInstallationSpecIngressAnnotationsArgs and ClusterInstallationSpecIngressAnnotationsOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecIngressAnnotationsInput` via:
//
//          ClusterInstallationSpecIngressAnnotationsArgs{...}
type ClusterInstallationSpecIngressAnnotationsInput interface {
	pulumi.Input

	ToClusterInstallationSpecIngressAnnotationsOutput() ClusterInstallationSpecIngressAnnotationsOutput
	ToClusterInstallationSpecIngressAnnotationsOutputWithContext(context.Context) ClusterInstallationSpecIngressAnnotationsOutput
}

type ClusterInstallationSpecIngressAnnotationsArgs struct {
}

func (ClusterInstallationSpecIngressAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecIngressAnnotations)(nil)).Elem()
}

func (i ClusterInstallationSpecIngressAnnotationsArgs) ToClusterInstallationSpecIngressAnnotationsOutput() ClusterInstallationSpecIngressAnnotationsOutput {
	return i.ToClusterInstallationSpecIngressAnnotationsOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecIngressAnnotationsArgs) ToClusterInstallationSpecIngressAnnotationsOutputWithContext(ctx context.Context) ClusterInstallationSpecIngressAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecIngressAnnotationsOutput)
}

type ClusterInstallationSpecIngressAnnotationsOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecIngressAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecIngressAnnotations)(nil)).Elem()
}

func (o ClusterInstallationSpecIngressAnnotationsOutput) ToClusterInstallationSpecIngressAnnotationsOutput() ClusterInstallationSpecIngressAnnotationsOutput {
	return o
}

func (o ClusterInstallationSpecIngressAnnotationsOutput) ToClusterInstallationSpecIngressAnnotationsOutputWithContext(ctx context.Context) ClusterInstallationSpecIngressAnnotationsOutput {
	return o
}

type ClusterInstallationSpecMinio struct {
	// Defines the number of Minio replicas. Supply 1 to run Minio in standalone mode with no redundancy. Supply 4 or more to run Minio in distributed mode. Note that it is not possible to upgrade Minio from standalone to distributed mode. Setting this will override the number of replicas set by 'Size'. More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
	Replicas *int `pulumi:"replicas"`
	// Defines the resource requests and limits for the Minio pods.
	Resources map[string]interface{} `pulumi:"resources"`
	// Defines the storage size for Minio. ie 50Gi
	StorageSize *string `pulumi:"storageSize"`
}

// ClusterInstallationSpecMinioInput is an input type that accepts ClusterInstallationSpecMinioArgs and ClusterInstallationSpecMinioOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecMinioInput` via:
//
//          ClusterInstallationSpecMinioArgs{...}
type ClusterInstallationSpecMinioInput interface {
	pulumi.Input

	ToClusterInstallationSpecMinioOutput() ClusterInstallationSpecMinioOutput
	ToClusterInstallationSpecMinioOutputWithContext(context.Context) ClusterInstallationSpecMinioOutput
}

type ClusterInstallationSpecMinioArgs struct {
	// Defines the number of Minio replicas. Supply 1 to run Minio in standalone mode with no redundancy. Supply 4 or more to run Minio in distributed mode. Note that it is not possible to upgrade Minio from standalone to distributed mode. Setting this will override the number of replicas set by 'Size'. More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Defines the resource requests and limits for the Minio pods.
	Resources pulumi.MapInput `pulumi:"resources"`
	// Defines the storage size for Minio. ie 50Gi
	StorageSize pulumi.StringPtrInput `pulumi:"storageSize"`
}

func (ClusterInstallationSpecMinioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecMinio)(nil)).Elem()
}

func (i ClusterInstallationSpecMinioArgs) ToClusterInstallationSpecMinioOutput() ClusterInstallationSpecMinioOutput {
	return i.ToClusterInstallationSpecMinioOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecMinioArgs) ToClusterInstallationSpecMinioOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecMinioOutput)
}

func (i ClusterInstallationSpecMinioArgs) ToClusterInstallationSpecMinioPtrOutput() ClusterInstallationSpecMinioPtrOutput {
	return i.ToClusterInstallationSpecMinioPtrOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecMinioArgs) ToClusterInstallationSpecMinioPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecMinioOutput).ToClusterInstallationSpecMinioPtrOutputWithContext(ctx)
}

// ClusterInstallationSpecMinioPtrInput is an input type that accepts ClusterInstallationSpecMinioArgs, ClusterInstallationSpecMinioPtr and ClusterInstallationSpecMinioPtrOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecMinioPtrInput` via:
//
//          ClusterInstallationSpecMinioArgs{...}
//
//  or:
//
//          nil
type ClusterInstallationSpecMinioPtrInput interface {
	pulumi.Input

	ToClusterInstallationSpecMinioPtrOutput() ClusterInstallationSpecMinioPtrOutput
	ToClusterInstallationSpecMinioPtrOutputWithContext(context.Context) ClusterInstallationSpecMinioPtrOutput
}

type clusterInstallationSpecMinioPtrType ClusterInstallationSpecMinioArgs

func ClusterInstallationSpecMinioPtr(v *ClusterInstallationSpecMinioArgs) ClusterInstallationSpecMinioPtrInput {
	return (*clusterInstallationSpecMinioPtrType)(v)
}

func (*clusterInstallationSpecMinioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpecMinio)(nil)).Elem()
}

func (i *clusterInstallationSpecMinioPtrType) ToClusterInstallationSpecMinioPtrOutput() ClusterInstallationSpecMinioPtrOutput {
	return i.ToClusterInstallationSpecMinioPtrOutputWithContext(context.Background())
}

func (i *clusterInstallationSpecMinioPtrType) ToClusterInstallationSpecMinioPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecMinioPtrOutput)
}

type ClusterInstallationSpecMinioOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecMinioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecMinio)(nil)).Elem()
}

func (o ClusterInstallationSpecMinioOutput) ToClusterInstallationSpecMinioOutput() ClusterInstallationSpecMinioOutput {
	return o
}

func (o ClusterInstallationSpecMinioOutput) ToClusterInstallationSpecMinioOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioOutput {
	return o
}

func (o ClusterInstallationSpecMinioOutput) ToClusterInstallationSpecMinioPtrOutput() ClusterInstallationSpecMinioPtrOutput {
	return o.ToClusterInstallationSpecMinioPtrOutputWithContext(context.Background())
}

func (o ClusterInstallationSpecMinioOutput) ToClusterInstallationSpecMinioPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecMinio) *ClusterInstallationSpecMinio {
		return &v
	}).(ClusterInstallationSpecMinioPtrOutput)
}

// Defines the number of Minio replicas. Supply 1 to run Minio in standalone mode with no redundancy. Supply 4 or more to run Minio in distributed mode. Note that it is not possible to upgrade Minio from standalone to distributed mode. Setting this will override the number of replicas set by 'Size'. More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
func (o ClusterInstallationSpecMinioOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecMinio) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Defines the resource requests and limits for the Minio pods.
func (o ClusterInstallationSpecMinioOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterInstallationSpecMinio) map[string]interface{} { return v.Resources }).(pulumi.MapOutput)
}

// Defines the storage size for Minio. ie 50Gi
func (o ClusterInstallationSpecMinioOutput) StorageSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationSpecMinio) *string { return v.StorageSize }).(pulumi.StringPtrOutput)
}

type ClusterInstallationSpecMinioPtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecMinioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationSpecMinio)(nil)).Elem()
}

func (o ClusterInstallationSpecMinioPtrOutput) ToClusterInstallationSpecMinioPtrOutput() ClusterInstallationSpecMinioPtrOutput {
	return o
}

func (o ClusterInstallationSpecMinioPtrOutput) ToClusterInstallationSpecMinioPtrOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioPtrOutput {
	return o
}

func (o ClusterInstallationSpecMinioPtrOutput) Elem() ClusterInstallationSpecMinioOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecMinio) ClusterInstallationSpecMinio { return *v }).(ClusterInstallationSpecMinioOutput)
}

// Defines the number of Minio replicas. Supply 1 to run Minio in standalone mode with no redundancy. Supply 4 or more to run Minio in distributed mode. Note that it is not possible to upgrade Minio from standalone to distributed mode. Setting this will override the number of replicas set by 'Size'. More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
func (o ClusterInstallationSpecMinioPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecMinio) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Defines the resource requests and limits for the Minio pods.
func (o ClusterInstallationSpecMinioPtrOutput) Resources() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecMinio) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.MapOutput)
}

// Defines the storage size for Minio. ie 50Gi
func (o ClusterInstallationSpecMinioPtrOutput) StorageSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationSpecMinio) *string {
		if v == nil {
			return nil
		}
		return v.StorageSize
	}).(pulumi.StringPtrOutput)
}

// Defines the resource requests and limits for the Minio pods.
type ClusterInstallationSpecMinioResources struct {
}

// ClusterInstallationSpecMinioResourcesInput is an input type that accepts ClusterInstallationSpecMinioResourcesArgs and ClusterInstallationSpecMinioResourcesOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecMinioResourcesInput` via:
//
//          ClusterInstallationSpecMinioResourcesArgs{...}
type ClusterInstallationSpecMinioResourcesInput interface {
	pulumi.Input

	ToClusterInstallationSpecMinioResourcesOutput() ClusterInstallationSpecMinioResourcesOutput
	ToClusterInstallationSpecMinioResourcesOutputWithContext(context.Context) ClusterInstallationSpecMinioResourcesOutput
}

// Defines the resource requests and limits for the Minio pods.
type ClusterInstallationSpecMinioResourcesArgs struct {
}

func (ClusterInstallationSpecMinioResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecMinioResources)(nil)).Elem()
}

func (i ClusterInstallationSpecMinioResourcesArgs) ToClusterInstallationSpecMinioResourcesOutput() ClusterInstallationSpecMinioResourcesOutput {
	return i.ToClusterInstallationSpecMinioResourcesOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecMinioResourcesArgs) ToClusterInstallationSpecMinioResourcesOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecMinioResourcesOutput)
}

// Defines the resource requests and limits for the Minio pods.
type ClusterInstallationSpecMinioResourcesOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecMinioResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecMinioResources)(nil)).Elem()
}

func (o ClusterInstallationSpecMinioResourcesOutput) ToClusterInstallationSpecMinioResourcesOutput() ClusterInstallationSpecMinioResourcesOutput {
	return o
}

func (o ClusterInstallationSpecMinioResourcesOutput) ToClusterInstallationSpecMinioResourcesOutputWithContext(ctx context.Context) ClusterInstallationSpecMinioResourcesOutput {
	return o
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type ClusterInstallationSpecNodeSelector struct {
}

// ClusterInstallationSpecNodeSelectorInput is an input type that accepts ClusterInstallationSpecNodeSelectorArgs and ClusterInstallationSpecNodeSelectorOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecNodeSelectorInput` via:
//
//          ClusterInstallationSpecNodeSelectorArgs{...}
type ClusterInstallationSpecNodeSelectorInput interface {
	pulumi.Input

	ToClusterInstallationSpecNodeSelectorOutput() ClusterInstallationSpecNodeSelectorOutput
	ToClusterInstallationSpecNodeSelectorOutputWithContext(context.Context) ClusterInstallationSpecNodeSelectorOutput
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type ClusterInstallationSpecNodeSelectorArgs struct {
}

func (ClusterInstallationSpecNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecNodeSelector)(nil)).Elem()
}

func (i ClusterInstallationSpecNodeSelectorArgs) ToClusterInstallationSpecNodeSelectorOutput() ClusterInstallationSpecNodeSelectorOutput {
	return i.ToClusterInstallationSpecNodeSelectorOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecNodeSelectorArgs) ToClusterInstallationSpecNodeSelectorOutputWithContext(ctx context.Context) ClusterInstallationSpecNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecNodeSelectorOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type ClusterInstallationSpecNodeSelectorOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecNodeSelector)(nil)).Elem()
}

func (o ClusterInstallationSpecNodeSelectorOutput) ToClusterInstallationSpecNodeSelectorOutput() ClusterInstallationSpecNodeSelectorOutput {
	return o
}

func (o ClusterInstallationSpecNodeSelectorOutput) ToClusterInstallationSpecNodeSelectorOutputWithContext(ctx context.Context) ClusterInstallationSpecNodeSelectorOutput {
	return o
}

// Defines the resource requests and limits for the Mattermost app server pods.
type ClusterInstallationSpecResources struct {
}

// ClusterInstallationSpecResourcesInput is an input type that accepts ClusterInstallationSpecResourcesArgs and ClusterInstallationSpecResourcesOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecResourcesInput` via:
//
//          ClusterInstallationSpecResourcesArgs{...}
type ClusterInstallationSpecResourcesInput interface {
	pulumi.Input

	ToClusterInstallationSpecResourcesOutput() ClusterInstallationSpecResourcesOutput
	ToClusterInstallationSpecResourcesOutputWithContext(context.Context) ClusterInstallationSpecResourcesOutput
}

// Defines the resource requests and limits for the Mattermost app server pods.
type ClusterInstallationSpecResourcesArgs struct {
}

func (ClusterInstallationSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecResources)(nil)).Elem()
}

func (i ClusterInstallationSpecResourcesArgs) ToClusterInstallationSpecResourcesOutput() ClusterInstallationSpecResourcesOutput {
	return i.ToClusterInstallationSpecResourcesOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecResourcesArgs) ToClusterInstallationSpecResourcesOutputWithContext(ctx context.Context) ClusterInstallationSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecResourcesOutput)
}

// Defines the resource requests and limits for the Mattermost app server pods.
type ClusterInstallationSpecResourcesOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecResources)(nil)).Elem()
}

func (o ClusterInstallationSpecResourcesOutput) ToClusterInstallationSpecResourcesOutput() ClusterInstallationSpecResourcesOutput {
	return o
}

func (o ClusterInstallationSpecResourcesOutput) ToClusterInstallationSpecResourcesOutputWithContext(ctx context.Context) ClusterInstallationSpecResourcesOutput {
	return o
}

type ClusterInstallationSpecServiceAnnotations struct {
}

// ClusterInstallationSpecServiceAnnotationsInput is an input type that accepts ClusterInstallationSpecServiceAnnotationsArgs and ClusterInstallationSpecServiceAnnotationsOutput values.
// You can construct a concrete instance of `ClusterInstallationSpecServiceAnnotationsInput` via:
//
//          ClusterInstallationSpecServiceAnnotationsArgs{...}
type ClusterInstallationSpecServiceAnnotationsInput interface {
	pulumi.Input

	ToClusterInstallationSpecServiceAnnotationsOutput() ClusterInstallationSpecServiceAnnotationsOutput
	ToClusterInstallationSpecServiceAnnotationsOutputWithContext(context.Context) ClusterInstallationSpecServiceAnnotationsOutput
}

type ClusterInstallationSpecServiceAnnotationsArgs struct {
}

func (ClusterInstallationSpecServiceAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecServiceAnnotations)(nil)).Elem()
}

func (i ClusterInstallationSpecServiceAnnotationsArgs) ToClusterInstallationSpecServiceAnnotationsOutput() ClusterInstallationSpecServiceAnnotationsOutput {
	return i.ToClusterInstallationSpecServiceAnnotationsOutputWithContext(context.Background())
}

func (i ClusterInstallationSpecServiceAnnotationsArgs) ToClusterInstallationSpecServiceAnnotationsOutputWithContext(ctx context.Context) ClusterInstallationSpecServiceAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationSpecServiceAnnotationsOutput)
}

type ClusterInstallationSpecServiceAnnotationsOutput struct{ *pulumi.OutputState }

func (ClusterInstallationSpecServiceAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationSpecServiceAnnotations)(nil)).Elem()
}

func (o ClusterInstallationSpecServiceAnnotationsOutput) ToClusterInstallationSpecServiceAnnotationsOutput() ClusterInstallationSpecServiceAnnotationsOutput {
	return o
}

func (o ClusterInstallationSpecServiceAnnotationsOutput) ToClusterInstallationSpecServiceAnnotationsOutputWithContext(ctx context.Context) ClusterInstallationSpecServiceAnnotationsOutput {
	return o
}

// Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
type ClusterInstallationStatus struct {
	// The endpoint to access the Mattermost instance
	Endpoint *string `pulumi:"endpoint"`
	// The image running on the pods in the Mattermost instance
	Image *string `pulumi:"image"`
	// Total number of non-terminated pods targeted by this Mattermost deployment
	Replicas *int `pulumi:"replicas"`
	// Represents the running state of the Mattermost instance
	State *string `pulumi:"state"`
	// Total number of non-terminated pods targeted by this Mattermost deployment that are running with the desired image.
	UpdatedReplicas *int `pulumi:"updatedReplicas"`
	// The version currently running in the Mattermost instance
	Version *string `pulumi:"version"`
}

// ClusterInstallationStatusInput is an input type that accepts ClusterInstallationStatusArgs and ClusterInstallationStatusOutput values.
// You can construct a concrete instance of `ClusterInstallationStatusInput` via:
//
//          ClusterInstallationStatusArgs{...}
type ClusterInstallationStatusInput interface {
	pulumi.Input

	ToClusterInstallationStatusOutput() ClusterInstallationStatusOutput
	ToClusterInstallationStatusOutputWithContext(context.Context) ClusterInstallationStatusOutput
}

// Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
type ClusterInstallationStatusArgs struct {
	// The endpoint to access the Mattermost instance
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The image running on the pods in the Mattermost instance
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Total number of non-terminated pods targeted by this Mattermost deployment
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Represents the running state of the Mattermost instance
	State pulumi.StringPtrInput `pulumi:"state"`
	// Total number of non-terminated pods targeted by this Mattermost deployment that are running with the desired image.
	UpdatedReplicas pulumi.IntPtrInput `pulumi:"updatedReplicas"`
	// The version currently running in the Mattermost instance
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ClusterInstallationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationStatus)(nil)).Elem()
}

func (i ClusterInstallationStatusArgs) ToClusterInstallationStatusOutput() ClusterInstallationStatusOutput {
	return i.ToClusterInstallationStatusOutputWithContext(context.Background())
}

func (i ClusterInstallationStatusArgs) ToClusterInstallationStatusOutputWithContext(ctx context.Context) ClusterInstallationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationStatusOutput)
}

func (i ClusterInstallationStatusArgs) ToClusterInstallationStatusPtrOutput() ClusterInstallationStatusPtrOutput {
	return i.ToClusterInstallationStatusPtrOutputWithContext(context.Background())
}

func (i ClusterInstallationStatusArgs) ToClusterInstallationStatusPtrOutputWithContext(ctx context.Context) ClusterInstallationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationStatusOutput).ToClusterInstallationStatusPtrOutputWithContext(ctx)
}

// ClusterInstallationStatusPtrInput is an input type that accepts ClusterInstallationStatusArgs, ClusterInstallationStatusPtr and ClusterInstallationStatusPtrOutput values.
// You can construct a concrete instance of `ClusterInstallationStatusPtrInput` via:
//
//          ClusterInstallationStatusArgs{...}
//
//  or:
//
//          nil
type ClusterInstallationStatusPtrInput interface {
	pulumi.Input

	ToClusterInstallationStatusPtrOutput() ClusterInstallationStatusPtrOutput
	ToClusterInstallationStatusPtrOutputWithContext(context.Context) ClusterInstallationStatusPtrOutput
}

type clusterInstallationStatusPtrType ClusterInstallationStatusArgs

func ClusterInstallationStatusPtr(v *ClusterInstallationStatusArgs) ClusterInstallationStatusPtrInput {
	return (*clusterInstallationStatusPtrType)(v)
}

func (*clusterInstallationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationStatus)(nil)).Elem()
}

func (i *clusterInstallationStatusPtrType) ToClusterInstallationStatusPtrOutput() ClusterInstallationStatusPtrOutput {
	return i.ToClusterInstallationStatusPtrOutputWithContext(context.Background())
}

func (i *clusterInstallationStatusPtrType) ToClusterInstallationStatusPtrOutputWithContext(ctx context.Context) ClusterInstallationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallationStatusPtrOutput)
}

// Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
type ClusterInstallationStatusOutput struct{ *pulumi.OutputState }

func (ClusterInstallationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallationStatus)(nil)).Elem()
}

func (o ClusterInstallationStatusOutput) ToClusterInstallationStatusOutput() ClusterInstallationStatusOutput {
	return o
}

func (o ClusterInstallationStatusOutput) ToClusterInstallationStatusOutputWithContext(ctx context.Context) ClusterInstallationStatusOutput {
	return o
}

func (o ClusterInstallationStatusOutput) ToClusterInstallationStatusPtrOutput() ClusterInstallationStatusPtrOutput {
	return o.ToClusterInstallationStatusPtrOutputWithContext(context.Background())
}

func (o ClusterInstallationStatusOutput) ToClusterInstallationStatusPtrOutputWithContext(ctx context.Context) ClusterInstallationStatusPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *ClusterInstallationStatus {
		return &v
	}).(ClusterInstallationStatusPtrOutput)
}

// The endpoint to access the Mattermost instance
func (o ClusterInstallationStatusOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The image running on the pods in the Mattermost instance
func (o ClusterInstallationStatusOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Total number of non-terminated pods targeted by this Mattermost deployment
func (o ClusterInstallationStatusOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Represents the running state of the Mattermost instance
func (o ClusterInstallationStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Total number of non-terminated pods targeted by this Mattermost deployment that are running with the desired image.
func (o ClusterInstallationStatusOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *int { return v.UpdatedReplicas }).(pulumi.IntPtrOutput)
}

// The version currently running in the Mattermost instance
func (o ClusterInstallationStatusOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallationStatus) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterInstallationStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallationStatus)(nil)).Elem()
}

func (o ClusterInstallationStatusPtrOutput) ToClusterInstallationStatusPtrOutput() ClusterInstallationStatusPtrOutput {
	return o
}

func (o ClusterInstallationStatusPtrOutput) ToClusterInstallationStatusPtrOutputWithContext(ctx context.Context) ClusterInstallationStatusPtrOutput {
	return o
}

func (o ClusterInstallationStatusPtrOutput) Elem() ClusterInstallationStatusOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) ClusterInstallationStatus { return *v }).(ClusterInstallationStatusOutput)
}

// The endpoint to access the Mattermost instance
func (o ClusterInstallationStatusPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The image running on the pods in the Mattermost instance
func (o ClusterInstallationStatusPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Total number of non-terminated pods targeted by this Mattermost deployment
func (o ClusterInstallationStatusPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Represents the running state of the Mattermost instance
func (o ClusterInstallationStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Total number of non-terminated pods targeted by this Mattermost deployment that are running with the desired image.
func (o ClusterInstallationStatusPtrOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedReplicas
	}).(pulumi.IntPtrOutput)
}

// The version currently running in the Mattermost instance
func (o ClusterInstallationStatusPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterInstallationTypeOutput{})
	pulumi.RegisterOutputType(ClusterInstallationMetadataOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecAffinityOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecDatabaseOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecDatabasePtrOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecDatabaseResourcesOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecElasticSearchOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecElasticSearchPtrOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecIngressAnnotationsOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecMinioOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecMinioPtrOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecMinioResourcesOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecNodeSelectorOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecResourcesOutput{})
	pulumi.RegisterOutputType(ClusterInstallationSpecServiceAnnotationsOutput{})
	pulumi.RegisterOutputType(ClusterInstallationStatusOutput{})
	pulumi.RegisterOutputType(ClusterInstallationStatusPtrOutput{})
}
