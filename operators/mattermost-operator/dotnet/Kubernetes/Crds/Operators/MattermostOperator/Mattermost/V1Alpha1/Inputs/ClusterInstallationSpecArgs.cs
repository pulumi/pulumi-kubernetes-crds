// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Mattermost.V1Alpha1
{

    /// <summary>
    /// Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
    /// </summary>
    public class ClusterInstallationSpecArgs : Pulumi.ResourceArgs
    {
        [Input("affinity")]
        private InputMap<object>? _affinity;

        /// <summary>
        /// If specified, affinity will define the pod's scheduling constraints
        /// </summary>
        public InputMap<object> Affinity
        {
            get => _affinity ?? (_affinity = new InputMap<object>());
            set => _affinity = value;
        }

        [Input("database")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Mattermost.V1Alpha1.ClusterInstallationSpecDatabaseArgs>? Database { get; set; }

        [Input("elasticSearch")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Mattermost.V1Alpha1.ClusterInstallationSpecElasticSearchArgs>? ElasticSearch { get; set; }

        /// <summary>
        /// Image defines the ClusterInstallation Docker image.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("ingressAnnotations")]
        private InputMap<string>? _ingressAnnotations;
        public InputMap<string> IngressAnnotations
        {
            get => _ingressAnnotations ?? (_ingressAnnotations = new InputMap<string>());
            set => _ingressAnnotations = value;
        }

        /// <summary>
        /// IngressName defines the name to be used when creating the ingress rules
        /// </summary>
        [Input("ingressName", required: true)]
        public Input<string> IngressName { get; set; } = null!;

        /// <summary>
        /// Secret that contains the mattermost license
        /// </summary>
        [Input("mattermostLicenseSecret")]
        public Input<string>? MattermostLicenseSecret { get; set; }

        [Input("minio")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Mattermost.V1Alpha1.ClusterInstallationSpecMinioArgs>? Minio { get; set; }

        [Input("nodeSelector")]
        private InputMap<string>? _nodeSelector;

        /// <summary>
        /// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
        /// </summary>
        public InputMap<string> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<string>());
            set => _nodeSelector = value;
        }

        /// <summary>
        /// Replicas defines the number of replicas to use for the Mattermost app servers. Setting this will override the number of replicas set by 'Size'.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        [Input("resources")]
        private InputMap<object>? _resources;

        /// <summary>
        /// Defines the resource requests and limits for the Mattermost app server pods.
        /// </summary>
        public InputMap<object> Resources
        {
            get => _resources ?? (_resources = new InputMap<object>());
            set => _resources = value;
        }

        [Input("serviceAnnotations")]
        private InputMap<string>? _serviceAnnotations;
        public InputMap<string> ServiceAnnotations
        {
            get => _serviceAnnotations ?? (_serviceAnnotations = new InputMap<string>());
            set => _serviceAnnotations = value;
        }

        /// <summary>
        /// Size defines the size of the ClusterInstallation. This is typically specified in number of users. This will set replica and resource requests/limits appropriately for the provided number of users. Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. Defaults to 5000users. Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas', or 'Database.Resources' will override the values set by Size.
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        [Input("useServiceLoadBalancer")]
        public Input<bool>? UseServiceLoadBalancer { get; set; }

        /// <summary>
        /// Version defines the ClusterInstallation Docker image version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ClusterInstallationSpecArgs()
        {
        }
    }
}
