// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace mattermost {
    export namespace v1alpha1 {
        /**
         * Specification of the desired behavior of the Mattermost cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
         */
        export interface ClusterInstallationSpec {
            /**
             * If specified, affinity will define the pod's scheduling constraints
             */
            affinity?: pulumi.Input<{[key: string]: any}>;
            database?: pulumi.Input<inputs.mattermost.v1alpha1.ClusterInstallationSpecDatabase>;
            elasticSearch?: pulumi.Input<inputs.mattermost.v1alpha1.ClusterInstallationSpecElasticSearch>;
            /**
             * Image defines the ClusterInstallation Docker image.
             */
            image?: pulumi.Input<string>;
            ingressAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * IngressName defines the name to be used when creating the ingress rules
             */
            ingressName: pulumi.Input<string>;
            /**
             * Secret that contains the mattermost license
             */
            mattermostLicenseSecret?: pulumi.Input<string>;
            minio?: pulumi.Input<inputs.mattermost.v1alpha1.ClusterInstallationSpecMinio>;
            /**
             * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
             */
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Replicas defines the number of replicas to use for the Mattermost app servers. Setting this will override the number of replicas set by 'Size'.
             */
            replicas?: pulumi.Input<number>;
            /**
             * Defines the resource requests and limits for the Mattermost app server pods.
             */
            resources?: pulumi.Input<{[key: string]: any}>;
            serviceAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Size defines the size of the ClusterInstallation. This is typically specified in number of users. This will set replica and resource requests/limits appropriately for the provided number of users. Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. Defaults to 5000users. Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas', or 'Database.Resources' will override the values set by Size.
             */
            size?: pulumi.Input<string>;
            useServiceLoadBalancer?: pulumi.Input<boolean>;
            /**
             * Version defines the ClusterInstallation Docker image version.
             */
            version?: pulumi.Input<string>;
        }

        export interface ClusterInstallationSpecDatabase {
            /**
             * If the user want to use an external DB. This can be inside the same k8s cluster or outside like AWS RDS.
             */
            externalSecret?: pulumi.Input<string>;
            /**
             * Defines the number of database replicas. For redundancy use at least 2 replicas. Setting this will override the number of replicas set by 'Size'.
             */
            replicas?: pulumi.Input<number>;
            /**
             * Defines the resource requests and limits for the database pods.
             */
            resources?: pulumi.Input<{[key: string]: any}>;
            /**
             * Defines the storage size for the database. ie 50Gi
             */
            storageSize?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface ClusterInstallationSpecElasticSearch {
            host?: pulumi.Input<string>;
            password?: pulumi.Input<string>;
            username?: pulumi.Input<string>;
        }

        export interface ClusterInstallationSpecMinio {
            /**
             * Defines the number of Minio replicas. Supply 1 to run Minio in standalone mode with no redundancy. Supply 4 or more to run Minio in distributed mode. Note that it is not possible to upgrade Minio from standalone to distributed mode. Setting this will override the number of replicas set by 'Size'. More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
             */
            replicas?: pulumi.Input<number>;
            /**
             * Defines the resource requests and limits for the Minio pods.
             */
            resources?: pulumi.Input<{[key: string]: any}>;
            /**
             * Defines the storage size for Minio. ie 50Gi
             */
            storageSize?: pulumi.Input<string>;
        }

        /**
         * Most recent observed status of the Mattermost cluster. Read-only. Not included when requesting from the apiserver, only from the Mattermost Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
         */
        export interface ClusterInstallationStatus {
            /**
             * The endpoint to access the Mattermost instance
             */
            endpoint?: pulumi.Input<string>;
            /**
             * The image running on the pods in the Mattermost instance
             */
            image?: pulumi.Input<string>;
            /**
             * Total number of non-terminated pods targeted by this Mattermost deployment
             */
            replicas?: pulumi.Input<number>;
            /**
             * Represents the running state of the Mattermost instance
             */
            state?: pulumi.Input<string>;
            /**
             * Total number of non-terminated pods targeted by this Mattermost deployment that are running with the desired image.
             */
            updatedReplicas?: pulumi.Input<number>;
            /**
             * The version currently running in the Mattermost instance
             */
            version?: pulumi.Input<string>;
        }
    }
}
