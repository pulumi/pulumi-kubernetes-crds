# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from . import outputs

__all__ = [
    'MustGatherSpec',
    'MustGatherSpecCaseManagementAccountSecretRef',
    'MustGatherSpecProxyConfig',
    'MustGatherSpecServiceAccountRef',
    'MustGatherStatus',
]

@pulumi.output_type
class MustGatherSpec(dict):
    """
    MustGatherSpec defines the desired state of MustGather
    """
    def __init__(__self__, *,
                 case_id: str,
                 case_management_account_secret_ref: 'outputs.MustGatherSpecCaseManagementAccountSecretRef',
                 must_gather_images: Optional[Sequence[str]] = None,
                 proxy_config: Optional['outputs.MustGatherSpecProxyConfig'] = None,
                 service_account_ref: Optional['outputs.MustGatherSpecServiceAccountRef'] = None):
        """
        MustGatherSpec defines the desired state of MustGather
        :param str case_id: The is of the case this must gather will be uploaded to
        :param 'MustGatherSpecCaseManagementAccountSecretRefArgs' case_management_account_secret_ref: the secret container a username and password field to be used to authenticate with red hat case management systems
        :param Sequence[str] must_gather_images: The list of must gather images to run, optional, it will default to: $DEFAULT_MUST_GATHER_IMAGE
        :param 'MustGatherSpecProxyConfigArgs' proxy_config: This represents the proxy configuration to be used. If left empty it will default to the cluster-level proxy configuration.
        :param 'MustGatherSpecServiceAccountRefArgs' service_account_ref: the service account to use to run the must gather job pod, defaults to default  +kubebuilder:default:="{Name:default}"
        """
        pulumi.set(__self__, "case_id", case_id)
        pulumi.set(__self__, "case_management_account_secret_ref", case_management_account_secret_ref)
        if must_gather_images is not None:
            pulumi.set(__self__, "must_gather_images", must_gather_images)
        if proxy_config is not None:
            pulumi.set(__self__, "proxy_config", proxy_config)
        if service_account_ref is not None:
            pulumi.set(__self__, "service_account_ref", service_account_ref)

    @property
    @pulumi.getter(name="caseID")
    def case_id(self) -> str:
        """
        The is of the case this must gather will be uploaded to
        """
        return pulumi.get(self, "case_id")

    @property
    @pulumi.getter(name="caseManagementAccountSecretRef")
    def case_management_account_secret_ref(self) -> 'outputs.MustGatherSpecCaseManagementAccountSecretRef':
        """
        the secret container a username and password field to be used to authenticate with red hat case management systems
        """
        return pulumi.get(self, "case_management_account_secret_ref")

    @property
    @pulumi.getter(name="mustGatherImages")
    def must_gather_images(self) -> Optional[Sequence[str]]:
        """
        The list of must gather images to run, optional, it will default to: $DEFAULT_MUST_GATHER_IMAGE
        """
        return pulumi.get(self, "must_gather_images")

    @property
    @pulumi.getter(name="proxyConfig")
    def proxy_config(self) -> Optional['outputs.MustGatherSpecProxyConfig']:
        """
        This represents the proxy configuration to be used. If left empty it will default to the cluster-level proxy configuration.
        """
        return pulumi.get(self, "proxy_config")

    @property
    @pulumi.getter(name="serviceAccountRef")
    def service_account_ref(self) -> Optional['outputs.MustGatherSpecServiceAccountRef']:
        """
        the service account to use to run the must gather job pod, defaults to default  +kubebuilder:default:="{Name:default}"
        """
        return pulumi.get(self, "service_account_ref")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class MustGatherSpecCaseManagementAccountSecretRef(dict):
    """
    the secret container a username and password field to be used to authenticate with red hat case management systems
    """
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        the secret container a username and password field to be used to authenticate with red hat case management systems
        :param str name: Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
        """
        return pulumi.get(self, "name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class MustGatherSpecProxyConfig(dict):
    """
    This represents the proxy configuration to be used. If left empty it will default to the cluster-level proxy configuration.
    """
    def __init__(__self__, *,
                 http_proxy: Optional[str] = None,
                 https_proxy: Optional[str] = None,
                 no_proxy: Optional[str] = None):
        """
        This represents the proxy configuration to be used. If left empty it will default to the cluster-level proxy configuration.
        :param str http_proxy: httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.
        :param str https_proxy: httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.
        :param str no_proxy: noProxy is the list of domains for which the proxy should not be used.  Empty means unset and will not result in an env var.
        """
        if http_proxy is not None:
            pulumi.set(__self__, "http_proxy", http_proxy)
        if https_proxy is not None:
            pulumi.set(__self__, "https_proxy", https_proxy)
        if no_proxy is not None:
            pulumi.set(__self__, "no_proxy", no_proxy)

    @property
    @pulumi.getter(name="httpProxy")
    def http_proxy(self) -> Optional[str]:
        """
        httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.
        """
        return pulumi.get(self, "http_proxy")

    @property
    @pulumi.getter(name="httpsProxy")
    def https_proxy(self) -> Optional[str]:
        """
        httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.
        """
        return pulumi.get(self, "https_proxy")

    @property
    @pulumi.getter(name="noProxy")
    def no_proxy(self) -> Optional[str]:
        """
        noProxy is the list of domains for which the proxy should not be used.  Empty means unset and will not result in an env var.
        """
        return pulumi.get(self, "no_proxy")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class MustGatherSpecServiceAccountRef(dict):
    """
    the service account to use to run the must gather job pod, defaults to default  +kubebuilder:default:="{Name:default}"
    """
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        the service account to use to run the must gather job pod, defaults to default  +kubebuilder:default:="{Name:default}"
        :param str name: Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
        """
        return pulumi.get(self, "name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class MustGatherStatus(dict):
    """
    MustGatherStatus defines the observed state of MustGather
    """
    def __init__(__self__, *,
                 completed: bool,
                 last_update: Optional[str] = None,
                 reason: Optional[str] = None,
                 status: Optional[str] = None):
        """
        MustGatherStatus defines the observed state of MustGather
        """
        pulumi.set(__self__, "completed", completed)
        if last_update is not None:
            pulumi.set(__self__, "last_update", last_update)
        if reason is not None:
            pulumi.set(__self__, "reason", reason)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def completed(self) -> bool:
        return pulumi.get(self, "completed")

    @property
    @pulumi.getter(name="lastUpdate")
    def last_update(self) -> Optional[str]:
        return pulumi.get(self, "last_update")

    @property
    @pulumi.getter
    def reason(self) -> Optional[str]:
        return pulumi.get(self, "reason")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        return pulumi.get(self, "status")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


