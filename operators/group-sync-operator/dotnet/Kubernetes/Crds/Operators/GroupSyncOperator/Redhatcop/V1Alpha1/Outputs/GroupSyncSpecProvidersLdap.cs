// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1
{

    [OutputType]
    public sealed class GroupSyncSpecProvidersLdap
    {
        /// <summary>
        /// ActiveDirectoryConfig represents the configuration for Active Directory
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapActiveDirectory ActiveDirectory;
        /// <summary>
        /// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapAugmentedActiveDirectory AugmentedActiveDirectory;
        /// <summary>
        /// Black represents a list of groups to not synchronize
        /// </summary>
        public readonly ImmutableArray<string> Blacklist;
        /// <summary>
        /// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapCaSecret CaSecret;
        /// <summary>
        /// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapCredentialsSecret CredentialsSecret;
        /// <summary>
        /// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
        /// </summary>
        public readonly ImmutableDictionary<string, string> GroupUIDNameMapping;
        /// <summary>
        /// Insecure specifies whether to allow for unverified certificates to be used when communicating to LDAP
        /// </summary>
        public readonly bool Insecure;
        /// <summary>
        /// RFC2307Config represents the configuration for a RFC2307 schema
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapRfc2307 Rfc2307;
        /// <summary>
        /// URL is the location of the LDAP Server
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// Whitelist represents a list of groups to synchronize
        /// </summary>
        public readonly ImmutableArray<string> Whitelist;

        [OutputConstructor]
        private GroupSyncSpecProvidersLdap(
            Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapActiveDirectory activeDirectory,

            Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapAugmentedActiveDirectory augmentedActiveDirectory,

            ImmutableArray<string> blacklist,

            Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapCaSecret caSecret,

            Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapCredentialsSecret credentialsSecret,

            ImmutableDictionary<string, string> groupUIDNameMapping,

            bool insecure,

            Pulumi.Kubernetes.Types.Outputs.Redhatcop.V1Alpha1.GroupSyncSpecProvidersLdapRfc2307 rfc2307,

            string url,

            ImmutableArray<string> whitelist)
        {
            ActiveDirectory = activeDirectory;
            AugmentedActiveDirectory = augmentedActiveDirectory;
            Blacklist = blacklist;
            CaSecret = caSecret;
            CredentialsSecret = credentialsSecret;
            GroupUIDNameMapping = groupUIDNameMapping;
            Insecure = insecure;
            Rfc2307 = rfc2307;
            Url = url;
            Whitelist = whitelist;
        }
    }
}
