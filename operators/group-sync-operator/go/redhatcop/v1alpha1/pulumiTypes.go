// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// GroupSync is the Schema for the groupsyncs API
type GroupSyncType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// GroupSyncSpec defines the desired state of GroupSync
	Spec *GroupSyncSpec `pulumi:"spec"`
	// GroupSyncStatus defines the observed state of GroupSync
	Status *GroupSyncStatus `pulumi:"status"`
}

// GroupSyncTypeInput is an input type that accepts GroupSyncTypeArgs and GroupSyncTypeOutput values.
// You can construct a concrete instance of `GroupSyncTypeInput` via:
//
//          GroupSyncTypeArgs{...}
type GroupSyncTypeInput interface {
	pulumi.Input

	ToGroupSyncTypeOutput() GroupSyncTypeOutput
	ToGroupSyncTypeOutputWithContext(context.Context) GroupSyncTypeOutput
}

// GroupSync is the Schema for the groupsyncs API
type GroupSyncTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// GroupSyncSpec defines the desired state of GroupSync
	Spec GroupSyncSpecPtrInput `pulumi:"spec"`
	// GroupSyncStatus defines the observed state of GroupSync
	Status GroupSyncStatusPtrInput `pulumi:"status"`
}

func (GroupSyncTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncType)(nil)).Elem()
}

func (i GroupSyncTypeArgs) ToGroupSyncTypeOutput() GroupSyncTypeOutput {
	return i.ToGroupSyncTypeOutputWithContext(context.Background())
}

func (i GroupSyncTypeArgs) ToGroupSyncTypeOutputWithContext(ctx context.Context) GroupSyncTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncTypeOutput)
}

// GroupSync is the Schema for the groupsyncs API
type GroupSyncTypeOutput struct{ *pulumi.OutputState }

func (GroupSyncTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncType)(nil)).Elem()
}

func (o GroupSyncTypeOutput) ToGroupSyncTypeOutput() GroupSyncTypeOutput {
	return o
}

func (o GroupSyncTypeOutput) ToGroupSyncTypeOutputWithContext(ctx context.Context) GroupSyncTypeOutput {
	return o
}

func (o GroupSyncTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GroupSyncTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GroupSyncTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v GroupSyncType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// GroupSyncSpec defines the desired state of GroupSync
func (o GroupSyncTypeOutput) Spec() GroupSyncSpecPtrOutput {
	return o.ApplyT(func(v GroupSyncType) *GroupSyncSpec { return v.Spec }).(GroupSyncSpecPtrOutput)
}

// GroupSyncStatus defines the observed state of GroupSync
func (o GroupSyncTypeOutput) Status() GroupSyncStatusPtrOutput {
	return o.ApplyT(func(v GroupSyncType) *GroupSyncStatus { return v.Status }).(GroupSyncStatusPtrOutput)
}

type GroupSyncMetadata struct {
}

// GroupSyncMetadataInput is an input type that accepts GroupSyncMetadataArgs and GroupSyncMetadataOutput values.
// You can construct a concrete instance of `GroupSyncMetadataInput` via:
//
//          GroupSyncMetadataArgs{...}
type GroupSyncMetadataInput interface {
	pulumi.Input

	ToGroupSyncMetadataOutput() GroupSyncMetadataOutput
	ToGroupSyncMetadataOutputWithContext(context.Context) GroupSyncMetadataOutput
}

type GroupSyncMetadataArgs struct {
}

func (GroupSyncMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncMetadata)(nil)).Elem()
}

func (i GroupSyncMetadataArgs) ToGroupSyncMetadataOutput() GroupSyncMetadataOutput {
	return i.ToGroupSyncMetadataOutputWithContext(context.Background())
}

func (i GroupSyncMetadataArgs) ToGroupSyncMetadataOutputWithContext(ctx context.Context) GroupSyncMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncMetadataOutput)
}

type GroupSyncMetadataOutput struct{ *pulumi.OutputState }

func (GroupSyncMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncMetadata)(nil)).Elem()
}

func (o GroupSyncMetadataOutput) ToGroupSyncMetadataOutput() GroupSyncMetadataOutput {
	return o
}

func (o GroupSyncMetadataOutput) ToGroupSyncMetadataOutputWithContext(ctx context.Context) GroupSyncMetadataOutput {
	return o
}

// GroupSyncSpec defines the desired state of GroupSync
type GroupSyncSpec struct {
	// List of Providers that can be mounted by containers belonging to the pod.
	Providers []GroupSyncSpecProviders `pulumi:"providers"`
	Schedule  *string                  `pulumi:"schedule"`
}

// GroupSyncSpecInput is an input type that accepts GroupSyncSpecArgs and GroupSyncSpecOutput values.
// You can construct a concrete instance of `GroupSyncSpecInput` via:
//
//          GroupSyncSpecArgs{...}
type GroupSyncSpecInput interface {
	pulumi.Input

	ToGroupSyncSpecOutput() GroupSyncSpecOutput
	ToGroupSyncSpecOutputWithContext(context.Context) GroupSyncSpecOutput
}

// GroupSyncSpec defines the desired state of GroupSync
type GroupSyncSpecArgs struct {
	// List of Providers that can be mounted by containers belonging to the pod.
	Providers GroupSyncSpecProvidersArrayInput `pulumi:"providers"`
	Schedule  pulumi.StringPtrInput            `pulumi:"schedule"`
}

func (GroupSyncSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpec)(nil)).Elem()
}

func (i GroupSyncSpecArgs) ToGroupSyncSpecOutput() GroupSyncSpecOutput {
	return i.ToGroupSyncSpecOutputWithContext(context.Background())
}

func (i GroupSyncSpecArgs) ToGroupSyncSpecOutputWithContext(ctx context.Context) GroupSyncSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecOutput)
}

func (i GroupSyncSpecArgs) ToGroupSyncSpecPtrOutput() GroupSyncSpecPtrOutput {
	return i.ToGroupSyncSpecPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecArgs) ToGroupSyncSpecPtrOutputWithContext(ctx context.Context) GroupSyncSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecOutput).ToGroupSyncSpecPtrOutputWithContext(ctx)
}

// GroupSyncSpecPtrInput is an input type that accepts GroupSyncSpecArgs, GroupSyncSpecPtr and GroupSyncSpecPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecPtrInput` via:
//
//          GroupSyncSpecArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecPtrOutput() GroupSyncSpecPtrOutput
	ToGroupSyncSpecPtrOutputWithContext(context.Context) GroupSyncSpecPtrOutput
}

type groupSyncSpecPtrType GroupSyncSpecArgs

func GroupSyncSpecPtr(v *GroupSyncSpecArgs) GroupSyncSpecPtrInput {
	return (*groupSyncSpecPtrType)(v)
}

func (*groupSyncSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpec)(nil)).Elem()
}

func (i *groupSyncSpecPtrType) ToGroupSyncSpecPtrOutput() GroupSyncSpecPtrOutput {
	return i.ToGroupSyncSpecPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecPtrType) ToGroupSyncSpecPtrOutputWithContext(ctx context.Context) GroupSyncSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecPtrOutput)
}

// GroupSyncSpec defines the desired state of GroupSync
type GroupSyncSpecOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpec)(nil)).Elem()
}

func (o GroupSyncSpecOutput) ToGroupSyncSpecOutput() GroupSyncSpecOutput {
	return o
}

func (o GroupSyncSpecOutput) ToGroupSyncSpecOutputWithContext(ctx context.Context) GroupSyncSpecOutput {
	return o
}

func (o GroupSyncSpecOutput) ToGroupSyncSpecPtrOutput() GroupSyncSpecPtrOutput {
	return o.ToGroupSyncSpecPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecOutput) ToGroupSyncSpecPtrOutputWithContext(ctx context.Context) GroupSyncSpecPtrOutput {
	return o.ApplyT(func(v GroupSyncSpec) *GroupSyncSpec {
		return &v
	}).(GroupSyncSpecPtrOutput)
}

// List of Providers that can be mounted by containers belonging to the pod.
func (o GroupSyncSpecOutput) Providers() GroupSyncSpecProvidersArrayOutput {
	return o.ApplyT(func(v GroupSyncSpec) []GroupSyncSpecProviders { return v.Providers }).(GroupSyncSpecProvidersArrayOutput)
}

func (o GroupSyncSpecOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpec) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type GroupSyncSpecPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpec)(nil)).Elem()
}

func (o GroupSyncSpecPtrOutput) ToGroupSyncSpecPtrOutput() GroupSyncSpecPtrOutput {
	return o
}

func (o GroupSyncSpecPtrOutput) ToGroupSyncSpecPtrOutputWithContext(ctx context.Context) GroupSyncSpecPtrOutput {
	return o
}

func (o GroupSyncSpecPtrOutput) Elem() GroupSyncSpecOutput {
	return o.ApplyT(func(v *GroupSyncSpec) GroupSyncSpec { return *v }).(GroupSyncSpecOutput)
}

// List of Providers that can be mounted by containers belonging to the pod.
func (o GroupSyncSpecPtrOutput) Providers() GroupSyncSpecProvidersArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpec) []GroupSyncSpecProviders {
		if v == nil {
			return nil
		}
		return v.Providers
	}).(GroupSyncSpecProvidersArrayOutput)
}

func (o GroupSyncSpecPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpec) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Provider represents the container for a single provider
type GroupSyncSpecProviders struct {
	// Azure represents the Azure provider
	Azure *GroupSyncSpecProvidersAzure `pulumi:"azure"`
	// GitHub represents the GitHub provider
	Github *GroupSyncSpecProvidersGithub `pulumi:"github"`
	// GitLab represents the GitLab provider
	Gitlab *GroupSyncSpecProvidersGitlab `pulumi:"gitlab"`
	// Keycloak represents the Keycloak provider
	Keycloak *GroupSyncSpecProvidersKeycloak `pulumi:"keycloak"`
	// Ldap represents the LDAP provider
	Ldap *GroupSyncSpecProvidersLdap `pulumi:"ldap"`
	// Name represents the name of the provider
	Name *string `pulumi:"name"`
}

// GroupSyncSpecProvidersInput is an input type that accepts GroupSyncSpecProvidersArgs and GroupSyncSpecProvidersOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersInput` via:
//
//          GroupSyncSpecProvidersArgs{...}
type GroupSyncSpecProvidersInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersOutput() GroupSyncSpecProvidersOutput
	ToGroupSyncSpecProvidersOutputWithContext(context.Context) GroupSyncSpecProvidersOutput
}

// Provider represents the container for a single provider
type GroupSyncSpecProvidersArgs struct {
	// Azure represents the Azure provider
	Azure GroupSyncSpecProvidersAzurePtrInput `pulumi:"azure"`
	// GitHub represents the GitHub provider
	Github GroupSyncSpecProvidersGithubPtrInput `pulumi:"github"`
	// GitLab represents the GitLab provider
	Gitlab GroupSyncSpecProvidersGitlabPtrInput `pulumi:"gitlab"`
	// Keycloak represents the Keycloak provider
	Keycloak GroupSyncSpecProvidersKeycloakPtrInput `pulumi:"keycloak"`
	// Ldap represents the LDAP provider
	Ldap GroupSyncSpecProvidersLdapPtrInput `pulumi:"ldap"`
	// Name represents the name of the provider
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GroupSyncSpecProvidersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProviders)(nil)).Elem()
}

func (i GroupSyncSpecProvidersArgs) ToGroupSyncSpecProvidersOutput() GroupSyncSpecProvidersOutput {
	return i.ToGroupSyncSpecProvidersOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersArgs) ToGroupSyncSpecProvidersOutputWithContext(ctx context.Context) GroupSyncSpecProvidersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersOutput)
}

// GroupSyncSpecProvidersArrayInput is an input type that accepts GroupSyncSpecProvidersArray and GroupSyncSpecProvidersArrayOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersArrayInput` via:
//
//          GroupSyncSpecProvidersArray{ GroupSyncSpecProvidersArgs{...} }
type GroupSyncSpecProvidersArrayInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersArrayOutput() GroupSyncSpecProvidersArrayOutput
	ToGroupSyncSpecProvidersArrayOutputWithContext(context.Context) GroupSyncSpecProvidersArrayOutput
}

type GroupSyncSpecProvidersArray []GroupSyncSpecProvidersInput

func (GroupSyncSpecProvidersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSyncSpecProviders)(nil)).Elem()
}

func (i GroupSyncSpecProvidersArray) ToGroupSyncSpecProvidersArrayOutput() GroupSyncSpecProvidersArrayOutput {
	return i.ToGroupSyncSpecProvidersArrayOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersArray) ToGroupSyncSpecProvidersArrayOutputWithContext(ctx context.Context) GroupSyncSpecProvidersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersArrayOutput)
}

// Provider represents the container for a single provider
type GroupSyncSpecProvidersOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProviders)(nil)).Elem()
}

func (o GroupSyncSpecProvidersOutput) ToGroupSyncSpecProvidersOutput() GroupSyncSpecProvidersOutput {
	return o
}

func (o GroupSyncSpecProvidersOutput) ToGroupSyncSpecProvidersOutputWithContext(ctx context.Context) GroupSyncSpecProvidersOutput {
	return o
}

// Azure represents the Azure provider
func (o GroupSyncSpecProvidersOutput) Azure() GroupSyncSpecProvidersAzurePtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProviders) *GroupSyncSpecProvidersAzure { return v.Azure }).(GroupSyncSpecProvidersAzurePtrOutput)
}

// GitHub represents the GitHub provider
func (o GroupSyncSpecProvidersOutput) Github() GroupSyncSpecProvidersGithubPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProviders) *GroupSyncSpecProvidersGithub { return v.Github }).(GroupSyncSpecProvidersGithubPtrOutput)
}

// GitLab represents the GitLab provider
func (o GroupSyncSpecProvidersOutput) Gitlab() GroupSyncSpecProvidersGitlabPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProviders) *GroupSyncSpecProvidersGitlab { return v.Gitlab }).(GroupSyncSpecProvidersGitlabPtrOutput)
}

// Keycloak represents the Keycloak provider
func (o GroupSyncSpecProvidersOutput) Keycloak() GroupSyncSpecProvidersKeycloakPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProviders) *GroupSyncSpecProvidersKeycloak { return v.Keycloak }).(GroupSyncSpecProvidersKeycloakPtrOutput)
}

// Ldap represents the LDAP provider
func (o GroupSyncSpecProvidersOutput) Ldap() GroupSyncSpecProvidersLdapPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProviders) *GroupSyncSpecProvidersLdap { return v.Ldap }).(GroupSyncSpecProvidersLdapPtrOutput)
}

// Name represents the name of the provider
func (o GroupSyncSpecProvidersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProviders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GroupSyncSpecProvidersArrayOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSyncSpecProviders)(nil)).Elem()
}

func (o GroupSyncSpecProvidersArrayOutput) ToGroupSyncSpecProvidersArrayOutput() GroupSyncSpecProvidersArrayOutput {
	return o
}

func (o GroupSyncSpecProvidersArrayOutput) ToGroupSyncSpecProvidersArrayOutputWithContext(ctx context.Context) GroupSyncSpecProvidersArrayOutput {
	return o
}

func (o GroupSyncSpecProvidersArrayOutput) Index(i pulumi.IntInput) GroupSyncSpecProvidersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupSyncSpecProviders {
		return vs[0].([]GroupSyncSpecProviders)[vs[1].(int)]
	}).(GroupSyncSpecProvidersOutput)
}

// Azure represents the Azure provider
type GroupSyncSpecProvidersAzure struct {
	// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
	CredentialsSecret GroupSyncSpecProvidersAzureCredentialsSecret `pulumi:"credentialsSecret"`
	// Groups represents a filtered list of groups to synchronize
	Groups []string `pulumi:"groups"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to Azure
	Insecure *bool `pulumi:"insecure"`
	// URL is the location of the Azure platform
	Url *string `pulumi:"url"`
}

// GroupSyncSpecProvidersAzureInput is an input type that accepts GroupSyncSpecProvidersAzureArgs and GroupSyncSpecProvidersAzureOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersAzureInput` via:
//
//          GroupSyncSpecProvidersAzureArgs{...}
type GroupSyncSpecProvidersAzureInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersAzureOutput() GroupSyncSpecProvidersAzureOutput
	ToGroupSyncSpecProvidersAzureOutputWithContext(context.Context) GroupSyncSpecProvidersAzureOutput
}

// Azure represents the Azure provider
type GroupSyncSpecProvidersAzureArgs struct {
	// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
	CredentialsSecret GroupSyncSpecProvidersAzureCredentialsSecretInput `pulumi:"credentialsSecret"`
	// Groups represents a filtered list of groups to synchronize
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to Azure
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// URL is the location of the Azure platform
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GroupSyncSpecProvidersAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersAzure)(nil)).Elem()
}

func (i GroupSyncSpecProvidersAzureArgs) ToGroupSyncSpecProvidersAzureOutput() GroupSyncSpecProvidersAzureOutput {
	return i.ToGroupSyncSpecProvidersAzureOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersAzureArgs) ToGroupSyncSpecProvidersAzureOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersAzureOutput)
}

func (i GroupSyncSpecProvidersAzureArgs) ToGroupSyncSpecProvidersAzurePtrOutput() GroupSyncSpecProvidersAzurePtrOutput {
	return i.ToGroupSyncSpecProvidersAzurePtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersAzureArgs) ToGroupSyncSpecProvidersAzurePtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersAzureOutput).ToGroupSyncSpecProvidersAzurePtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersAzurePtrInput is an input type that accepts GroupSyncSpecProvidersAzureArgs, GroupSyncSpecProvidersAzurePtr and GroupSyncSpecProvidersAzurePtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersAzurePtrInput` via:
//
//          GroupSyncSpecProvidersAzureArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersAzurePtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersAzurePtrOutput() GroupSyncSpecProvidersAzurePtrOutput
	ToGroupSyncSpecProvidersAzurePtrOutputWithContext(context.Context) GroupSyncSpecProvidersAzurePtrOutput
}

type groupSyncSpecProvidersAzurePtrType GroupSyncSpecProvidersAzureArgs

func GroupSyncSpecProvidersAzurePtr(v *GroupSyncSpecProvidersAzureArgs) GroupSyncSpecProvidersAzurePtrInput {
	return (*groupSyncSpecProvidersAzurePtrType)(v)
}

func (*groupSyncSpecProvidersAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersAzure)(nil)).Elem()
}

func (i *groupSyncSpecProvidersAzurePtrType) ToGroupSyncSpecProvidersAzurePtrOutput() GroupSyncSpecProvidersAzurePtrOutput {
	return i.ToGroupSyncSpecProvidersAzurePtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersAzurePtrType) ToGroupSyncSpecProvidersAzurePtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersAzurePtrOutput)
}

// Azure represents the Azure provider
type GroupSyncSpecProvidersAzureOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersAzure)(nil)).Elem()
}

func (o GroupSyncSpecProvidersAzureOutput) ToGroupSyncSpecProvidersAzureOutput() GroupSyncSpecProvidersAzureOutput {
	return o
}

func (o GroupSyncSpecProvidersAzureOutput) ToGroupSyncSpecProvidersAzureOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureOutput {
	return o
}

func (o GroupSyncSpecProvidersAzureOutput) ToGroupSyncSpecProvidersAzurePtrOutput() GroupSyncSpecProvidersAzurePtrOutput {
	return o.ToGroupSyncSpecProvidersAzurePtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersAzureOutput) ToGroupSyncSpecProvidersAzurePtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzurePtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzure) *GroupSyncSpecProvidersAzure {
		return &v
	}).(GroupSyncSpecProvidersAzurePtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
func (o GroupSyncSpecProvidersAzureOutput) CredentialsSecret() GroupSyncSpecProvidersAzureCredentialsSecretOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzure) GroupSyncSpecProvidersAzureCredentialsSecret {
		return v.CredentialsSecret
	}).(GroupSyncSpecProvidersAzureCredentialsSecretOutput)
}

// Groups represents a filtered list of groups to synchronize
func (o GroupSyncSpecProvidersAzureOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzure) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to Azure
func (o GroupSyncSpecProvidersAzureOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzure) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// URL is the location of the Azure platform
func (o GroupSyncSpecProvidersAzureOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzure) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GroupSyncSpecProvidersAzurePtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersAzure)(nil)).Elem()
}

func (o GroupSyncSpecProvidersAzurePtrOutput) ToGroupSyncSpecProvidersAzurePtrOutput() GroupSyncSpecProvidersAzurePtrOutput {
	return o
}

func (o GroupSyncSpecProvidersAzurePtrOutput) ToGroupSyncSpecProvidersAzurePtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzurePtrOutput {
	return o
}

func (o GroupSyncSpecProvidersAzurePtrOutput) Elem() GroupSyncSpecProvidersAzureOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzure) GroupSyncSpecProvidersAzure { return *v }).(GroupSyncSpecProvidersAzureOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
func (o GroupSyncSpecProvidersAzurePtrOutput) CredentialsSecret() GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzure) *GroupSyncSpecProvidersAzureCredentialsSecret {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecret
	}).(GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput)
}

// Groups represents a filtered list of groups to synchronize
func (o GroupSyncSpecProvidersAzurePtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzure) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to Azure
func (o GroupSyncSpecProvidersAzurePtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzure) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// URL is the location of the Azure platform
func (o GroupSyncSpecProvidersAzurePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzure) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
type GroupSyncSpecProvidersAzureCredentialsSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersAzureCredentialsSecretInput is an input type that accepts GroupSyncSpecProvidersAzureCredentialsSecretArgs and GroupSyncSpecProvidersAzureCredentialsSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersAzureCredentialsSecretInput` via:
//
//          GroupSyncSpecProvidersAzureCredentialsSecretArgs{...}
type GroupSyncSpecProvidersAzureCredentialsSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersAzureCredentialsSecretOutput() GroupSyncSpecProvidersAzureCredentialsSecretOutput
	ToGroupSyncSpecProvidersAzureCredentialsSecretOutputWithContext(context.Context) GroupSyncSpecProvidersAzureCredentialsSecretOutput
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
type GroupSyncSpecProvidersAzureCredentialsSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersAzureCredentialsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersAzureCredentialsSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersAzureCredentialsSecretArgs) ToGroupSyncSpecProvidersAzureCredentialsSecretOutput() GroupSyncSpecProvidersAzureCredentialsSecretOutput {
	return i.ToGroupSyncSpecProvidersAzureCredentialsSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersAzureCredentialsSecretArgs) ToGroupSyncSpecProvidersAzureCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureCredentialsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersAzureCredentialsSecretOutput)
}

func (i GroupSyncSpecProvidersAzureCredentialsSecretArgs) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutput() GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersAzureCredentialsSecretArgs) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersAzureCredentialsSecretOutput).ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersAzureCredentialsSecretPtrInput is an input type that accepts GroupSyncSpecProvidersAzureCredentialsSecretArgs, GroupSyncSpecProvidersAzureCredentialsSecretPtr and GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersAzureCredentialsSecretPtrInput` via:
//
//          GroupSyncSpecProvidersAzureCredentialsSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersAzureCredentialsSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutput() GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput
	ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput
}

type groupSyncSpecProvidersAzureCredentialsSecretPtrType GroupSyncSpecProvidersAzureCredentialsSecretArgs

func GroupSyncSpecProvidersAzureCredentialsSecretPtr(v *GroupSyncSpecProvidersAzureCredentialsSecretArgs) GroupSyncSpecProvidersAzureCredentialsSecretPtrInput {
	return (*groupSyncSpecProvidersAzureCredentialsSecretPtrType)(v)
}

func (*groupSyncSpecProvidersAzureCredentialsSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersAzureCredentialsSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersAzureCredentialsSecretPtrType) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutput() GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersAzureCredentialsSecretPtrType) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to Azure
type GroupSyncSpecProvidersAzureCredentialsSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersAzureCredentialsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersAzureCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) ToGroupSyncSpecProvidersAzureCredentialsSecretOutput() GroupSyncSpecProvidersAzureCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) ToGroupSyncSpecProvidersAzureCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutput() GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzureCredentialsSecret) *GroupSyncSpecProvidersAzureCredentialsSecret {
		return &v
	}).(GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzureCredentialsSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzureCredentialsSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersAzureCredentialsSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersAzureCredentialsSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersAzureCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutput() GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersAzureCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) Elem() GroupSyncSpecProvidersAzureCredentialsSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzureCredentialsSecret) GroupSyncSpecProvidersAzureCredentialsSecret {
		return *v
	}).(GroupSyncSpecProvidersAzureCredentialsSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzureCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzureCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersAzureCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// GitHub represents the GitHub provider
type GroupSyncSpecProvidersGithub struct {
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
	CaSecret *GroupSyncSpecProvidersGithubCaSecret `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
	CredentialsSecret GroupSyncSpecProvidersGithubCredentialsSecret `pulumi:"credentialsSecret"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitHab
	Insecure *bool `pulumi:"insecure"`
	// Organization represents the location to source teams to synchronize
	Organization *string `pulumi:"organization"`
	// Teams represents a filtered list of teams to synchronize
	Teams []string `pulumi:"teams"`
	// URL is the location of the GitHub server
	Url *string `pulumi:"url"`
}

// GroupSyncSpecProvidersGithubInput is an input type that accepts GroupSyncSpecProvidersGithubArgs and GroupSyncSpecProvidersGithubOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGithubInput` via:
//
//          GroupSyncSpecProvidersGithubArgs{...}
type GroupSyncSpecProvidersGithubInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGithubOutput() GroupSyncSpecProvidersGithubOutput
	ToGroupSyncSpecProvidersGithubOutputWithContext(context.Context) GroupSyncSpecProvidersGithubOutput
}

// GitHub represents the GitHub provider
type GroupSyncSpecProvidersGithubArgs struct {
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
	CaSecret GroupSyncSpecProvidersGithubCaSecretPtrInput `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
	CredentialsSecret GroupSyncSpecProvidersGithubCredentialsSecretInput `pulumi:"credentialsSecret"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitHab
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// Organization represents the location to source teams to synchronize
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Teams represents a filtered list of teams to synchronize
	Teams pulumi.StringArrayInput `pulumi:"teams"`
	// URL is the location of the GitHub server
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GroupSyncSpecProvidersGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGithub)(nil)).Elem()
}

func (i GroupSyncSpecProvidersGithubArgs) ToGroupSyncSpecProvidersGithubOutput() GroupSyncSpecProvidersGithubOutput {
	return i.ToGroupSyncSpecProvidersGithubOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGithubArgs) ToGroupSyncSpecProvidersGithubOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubOutput)
}

func (i GroupSyncSpecProvidersGithubArgs) ToGroupSyncSpecProvidersGithubPtrOutput() GroupSyncSpecProvidersGithubPtrOutput {
	return i.ToGroupSyncSpecProvidersGithubPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGithubArgs) ToGroupSyncSpecProvidersGithubPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubOutput).ToGroupSyncSpecProvidersGithubPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersGithubPtrInput is an input type that accepts GroupSyncSpecProvidersGithubArgs, GroupSyncSpecProvidersGithubPtr and GroupSyncSpecProvidersGithubPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGithubPtrInput` via:
//
//          GroupSyncSpecProvidersGithubArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersGithubPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGithubPtrOutput() GroupSyncSpecProvidersGithubPtrOutput
	ToGroupSyncSpecProvidersGithubPtrOutputWithContext(context.Context) GroupSyncSpecProvidersGithubPtrOutput
}

type groupSyncSpecProvidersGithubPtrType GroupSyncSpecProvidersGithubArgs

func GroupSyncSpecProvidersGithubPtr(v *GroupSyncSpecProvidersGithubArgs) GroupSyncSpecProvidersGithubPtrInput {
	return (*groupSyncSpecProvidersGithubPtrType)(v)
}

func (*groupSyncSpecProvidersGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGithub)(nil)).Elem()
}

func (i *groupSyncSpecProvidersGithubPtrType) ToGroupSyncSpecProvidersGithubPtrOutput() GroupSyncSpecProvidersGithubPtrOutput {
	return i.ToGroupSyncSpecProvidersGithubPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersGithubPtrType) ToGroupSyncSpecProvidersGithubPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubPtrOutput)
}

// GitHub represents the GitHub provider
type GroupSyncSpecProvidersGithubOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGithub)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGithubOutput) ToGroupSyncSpecProvidersGithubOutput() GroupSyncSpecProvidersGithubOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubOutput) ToGroupSyncSpecProvidersGithubOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubOutput) ToGroupSyncSpecProvidersGithubPtrOutput() GroupSyncSpecProvidersGithubPtrOutput {
	return o.ToGroupSyncSpecProvidersGithubPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersGithubOutput) ToGroupSyncSpecProvidersGithubPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) *GroupSyncSpecProvidersGithub {
		return &v
	}).(GroupSyncSpecProvidersGithubPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
func (o GroupSyncSpecProvidersGithubOutput) CaSecret() GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) *GroupSyncSpecProvidersGithubCaSecret { return v.CaSecret }).(GroupSyncSpecProvidersGithubCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
func (o GroupSyncSpecProvidersGithubOutput) CredentialsSecret() GroupSyncSpecProvidersGithubCredentialsSecretOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) GroupSyncSpecProvidersGithubCredentialsSecret {
		return v.CredentialsSecret
	}).(GroupSyncSpecProvidersGithubCredentialsSecretOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitHab
func (o GroupSyncSpecProvidersGithubOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// Organization represents the location to source teams to synchronize
func (o GroupSyncSpecProvidersGithubOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Teams represents a filtered list of teams to synchronize
func (o GroupSyncSpecProvidersGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

// URL is the location of the GitHub server
func (o GroupSyncSpecProvidersGithubOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithub) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GroupSyncSpecProvidersGithubPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGithub)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGithubPtrOutput) ToGroupSyncSpecProvidersGithubPtrOutput() GroupSyncSpecProvidersGithubPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubPtrOutput) ToGroupSyncSpecProvidersGithubPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubPtrOutput) Elem() GroupSyncSpecProvidersGithubOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) GroupSyncSpecProvidersGithub { return *v }).(GroupSyncSpecProvidersGithubOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
func (o GroupSyncSpecProvidersGithubPtrOutput) CaSecret() GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) *GroupSyncSpecProvidersGithubCaSecret {
		if v == nil {
			return nil
		}
		return v.CaSecret
	}).(GroupSyncSpecProvidersGithubCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
func (o GroupSyncSpecProvidersGithubPtrOutput) CredentialsSecret() GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) *GroupSyncSpecProvidersGithubCredentialsSecret {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecret
	}).(GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitHab
func (o GroupSyncSpecProvidersGithubPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// Organization represents the location to source teams to synchronize
func (o GroupSyncSpecProvidersGithubPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// Teams represents a filtered list of teams to synchronize
func (o GroupSyncSpecProvidersGithubPtrOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) []string {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(pulumi.StringArrayOutput)
}

// URL is the location of the GitHub server
func (o GroupSyncSpecProvidersGithubPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithub) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
type GroupSyncSpecProvidersGithubCaSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersGithubCaSecretInput is an input type that accepts GroupSyncSpecProvidersGithubCaSecretArgs and GroupSyncSpecProvidersGithubCaSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGithubCaSecretInput` via:
//
//          GroupSyncSpecProvidersGithubCaSecretArgs{...}
type GroupSyncSpecProvidersGithubCaSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGithubCaSecretOutput() GroupSyncSpecProvidersGithubCaSecretOutput
	ToGroupSyncSpecProvidersGithubCaSecretOutputWithContext(context.Context) GroupSyncSpecProvidersGithubCaSecretOutput
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
type GroupSyncSpecProvidersGithubCaSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersGithubCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGithubCaSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersGithubCaSecretArgs) ToGroupSyncSpecProvidersGithubCaSecretOutput() GroupSyncSpecProvidersGithubCaSecretOutput {
	return i.ToGroupSyncSpecProvidersGithubCaSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGithubCaSecretArgs) ToGroupSyncSpecProvidersGithubCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubCaSecretOutput)
}

func (i GroupSyncSpecProvidersGithubCaSecretArgs) ToGroupSyncSpecProvidersGithubCaSecretPtrOutput() GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGithubCaSecretArgs) ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubCaSecretOutput).ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersGithubCaSecretPtrInput is an input type that accepts GroupSyncSpecProvidersGithubCaSecretArgs, GroupSyncSpecProvidersGithubCaSecretPtr and GroupSyncSpecProvidersGithubCaSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGithubCaSecretPtrInput` via:
//
//          GroupSyncSpecProvidersGithubCaSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersGithubCaSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGithubCaSecretPtrOutput() GroupSyncSpecProvidersGithubCaSecretPtrOutput
	ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersGithubCaSecretPtrOutput
}

type groupSyncSpecProvidersGithubCaSecretPtrType GroupSyncSpecProvidersGithubCaSecretArgs

func GroupSyncSpecProvidersGithubCaSecretPtr(v *GroupSyncSpecProvidersGithubCaSecretArgs) GroupSyncSpecProvidersGithubCaSecretPtrInput {
	return (*groupSyncSpecProvidersGithubCaSecretPtrType)(v)
}

func (*groupSyncSpecProvidersGithubCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGithubCaSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersGithubCaSecretPtrType) ToGroupSyncSpecProvidersGithubCaSecretPtrOutput() GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersGithubCaSecretPtrType) ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubCaSecretPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitHub server
type GroupSyncSpecProvidersGithubCaSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGithubCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGithubCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGithubCaSecretOutput) ToGroupSyncSpecProvidersGithubCaSecretOutput() GroupSyncSpecProvidersGithubCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCaSecretOutput) ToGroupSyncSpecProvidersGithubCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCaSecretOutput) ToGroupSyncSpecProvidersGithubCaSecretPtrOutput() GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersGithubCaSecretOutput) ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCaSecret) *GroupSyncSpecProvidersGithubCaSecret {
		return &v
	}).(GroupSyncSpecProvidersGithubCaSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGithubCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCaSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGithubCaSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCaSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGithubCaSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCaSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersGithubCaSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGithubCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGithubCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGithubCaSecretPtrOutput) ToGroupSyncSpecProvidersGithubCaSecretPtrOutput() GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCaSecretPtrOutput) ToGroupSyncSpecProvidersGithubCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCaSecretPtrOutput) Elem() GroupSyncSpecProvidersGithubCaSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCaSecret) GroupSyncSpecProvidersGithubCaSecret { return *v }).(GroupSyncSpecProvidersGithubCaSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGithubCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGithubCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGithubCaSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
type GroupSyncSpecProvidersGithubCredentialsSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersGithubCredentialsSecretInput is an input type that accepts GroupSyncSpecProvidersGithubCredentialsSecretArgs and GroupSyncSpecProvidersGithubCredentialsSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGithubCredentialsSecretInput` via:
//
//          GroupSyncSpecProvidersGithubCredentialsSecretArgs{...}
type GroupSyncSpecProvidersGithubCredentialsSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGithubCredentialsSecretOutput() GroupSyncSpecProvidersGithubCredentialsSecretOutput
	ToGroupSyncSpecProvidersGithubCredentialsSecretOutputWithContext(context.Context) GroupSyncSpecProvidersGithubCredentialsSecretOutput
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
type GroupSyncSpecProvidersGithubCredentialsSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersGithubCredentialsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGithubCredentialsSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersGithubCredentialsSecretArgs) ToGroupSyncSpecProvidersGithubCredentialsSecretOutput() GroupSyncSpecProvidersGithubCredentialsSecretOutput {
	return i.ToGroupSyncSpecProvidersGithubCredentialsSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGithubCredentialsSecretArgs) ToGroupSyncSpecProvidersGithubCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCredentialsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubCredentialsSecretOutput)
}

func (i GroupSyncSpecProvidersGithubCredentialsSecretArgs) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutput() GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGithubCredentialsSecretArgs) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubCredentialsSecretOutput).ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersGithubCredentialsSecretPtrInput is an input type that accepts GroupSyncSpecProvidersGithubCredentialsSecretArgs, GroupSyncSpecProvidersGithubCredentialsSecretPtr and GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGithubCredentialsSecretPtrInput` via:
//
//          GroupSyncSpecProvidersGithubCredentialsSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersGithubCredentialsSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutput() GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput
	ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput
}

type groupSyncSpecProvidersGithubCredentialsSecretPtrType GroupSyncSpecProvidersGithubCredentialsSecretArgs

func GroupSyncSpecProvidersGithubCredentialsSecretPtr(v *GroupSyncSpecProvidersGithubCredentialsSecretArgs) GroupSyncSpecProvidersGithubCredentialsSecretPtrInput {
	return (*groupSyncSpecProvidersGithubCredentialsSecretPtrType)(v)
}

func (*groupSyncSpecProvidersGithubCredentialsSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGithubCredentialsSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersGithubCredentialsSecretPtrType) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutput() GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersGithubCredentialsSecretPtrType) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitHub server
type GroupSyncSpecProvidersGithubCredentialsSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGithubCredentialsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGithubCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) ToGroupSyncSpecProvidersGithubCredentialsSecretOutput() GroupSyncSpecProvidersGithubCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) ToGroupSyncSpecProvidersGithubCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutput() GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCredentialsSecret) *GroupSyncSpecProvidersGithubCredentialsSecret {
		return &v
	}).(GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCredentialsSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCredentialsSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGithubCredentialsSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGithubCredentialsSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGithubCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutput() GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersGithubCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) Elem() GroupSyncSpecProvidersGithubCredentialsSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCredentialsSecret) GroupSyncSpecProvidersGithubCredentialsSecret {
		return *v
	}).(GroupSyncSpecProvidersGithubCredentialsSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGithubCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// GitLab represents the GitLab provider
type GroupSyncSpecProvidersGitlab struct {
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
	CaSecret *GroupSyncSpecProvidersGitlabCaSecret `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
	CredentialsSecret GroupSyncSpecProvidersGitlabCredentialsSecret `pulumi:"credentialsSecret"`
	// Groups represents a filtered list of groups to synchronize
	Groups []string `pulumi:"groups"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitLab
	Insecure *bool `pulumi:"insecure"`
	// URL is the location of the GitLub server
	Url *string `pulumi:"url"`
}

// GroupSyncSpecProvidersGitlabInput is an input type that accepts GroupSyncSpecProvidersGitlabArgs and GroupSyncSpecProvidersGitlabOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGitlabInput` via:
//
//          GroupSyncSpecProvidersGitlabArgs{...}
type GroupSyncSpecProvidersGitlabInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGitlabOutput() GroupSyncSpecProvidersGitlabOutput
	ToGroupSyncSpecProvidersGitlabOutputWithContext(context.Context) GroupSyncSpecProvidersGitlabOutput
}

// GitLab represents the GitLab provider
type GroupSyncSpecProvidersGitlabArgs struct {
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
	CaSecret GroupSyncSpecProvidersGitlabCaSecretPtrInput `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
	CredentialsSecret GroupSyncSpecProvidersGitlabCredentialsSecretInput `pulumi:"credentialsSecret"`
	// Groups represents a filtered list of groups to synchronize
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitLab
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// URL is the location of the GitLub server
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GroupSyncSpecProvidersGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGitlab)(nil)).Elem()
}

func (i GroupSyncSpecProvidersGitlabArgs) ToGroupSyncSpecProvidersGitlabOutput() GroupSyncSpecProvidersGitlabOutput {
	return i.ToGroupSyncSpecProvidersGitlabOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGitlabArgs) ToGroupSyncSpecProvidersGitlabOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabOutput)
}

func (i GroupSyncSpecProvidersGitlabArgs) ToGroupSyncSpecProvidersGitlabPtrOutput() GroupSyncSpecProvidersGitlabPtrOutput {
	return i.ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGitlabArgs) ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabOutput).ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersGitlabPtrInput is an input type that accepts GroupSyncSpecProvidersGitlabArgs, GroupSyncSpecProvidersGitlabPtr and GroupSyncSpecProvidersGitlabPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGitlabPtrInput` via:
//
//          GroupSyncSpecProvidersGitlabArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersGitlabPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGitlabPtrOutput() GroupSyncSpecProvidersGitlabPtrOutput
	ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(context.Context) GroupSyncSpecProvidersGitlabPtrOutput
}

type groupSyncSpecProvidersGitlabPtrType GroupSyncSpecProvidersGitlabArgs

func GroupSyncSpecProvidersGitlabPtr(v *GroupSyncSpecProvidersGitlabArgs) GroupSyncSpecProvidersGitlabPtrInput {
	return (*groupSyncSpecProvidersGitlabPtrType)(v)
}

func (*groupSyncSpecProvidersGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGitlab)(nil)).Elem()
}

func (i *groupSyncSpecProvidersGitlabPtrType) ToGroupSyncSpecProvidersGitlabPtrOutput() GroupSyncSpecProvidersGitlabPtrOutput {
	return i.ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersGitlabPtrType) ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabPtrOutput)
}

// GitLab represents the GitLab provider
type GroupSyncSpecProvidersGitlabOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGitlab)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGitlabOutput) ToGroupSyncSpecProvidersGitlabOutput() GroupSyncSpecProvidersGitlabOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabOutput) ToGroupSyncSpecProvidersGitlabOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabOutput) ToGroupSyncSpecProvidersGitlabPtrOutput() GroupSyncSpecProvidersGitlabPtrOutput {
	return o.ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersGitlabOutput) ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlab) *GroupSyncSpecProvidersGitlab {
		return &v
	}).(GroupSyncSpecProvidersGitlabPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
func (o GroupSyncSpecProvidersGitlabOutput) CaSecret() GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlab) *GroupSyncSpecProvidersGitlabCaSecret { return v.CaSecret }).(GroupSyncSpecProvidersGitlabCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
func (o GroupSyncSpecProvidersGitlabOutput) CredentialsSecret() GroupSyncSpecProvidersGitlabCredentialsSecretOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlab) GroupSyncSpecProvidersGitlabCredentialsSecret {
		return v.CredentialsSecret
	}).(GroupSyncSpecProvidersGitlabCredentialsSecretOutput)
}

// Groups represents a filtered list of groups to synchronize
func (o GroupSyncSpecProvidersGitlabOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlab) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitLab
func (o GroupSyncSpecProvidersGitlabOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlab) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// URL is the location of the GitLub server
func (o GroupSyncSpecProvidersGitlabOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlab) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GroupSyncSpecProvidersGitlabPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGitlab)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGitlabPtrOutput) ToGroupSyncSpecProvidersGitlabPtrOutput() GroupSyncSpecProvidersGitlabPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabPtrOutput) ToGroupSyncSpecProvidersGitlabPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabPtrOutput) Elem() GroupSyncSpecProvidersGitlabOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlab) GroupSyncSpecProvidersGitlab { return *v }).(GroupSyncSpecProvidersGitlabOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
func (o GroupSyncSpecProvidersGitlabPtrOutput) CaSecret() GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlab) *GroupSyncSpecProvidersGitlabCaSecret {
		if v == nil {
			return nil
		}
		return v.CaSecret
	}).(GroupSyncSpecProvidersGitlabCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
func (o GroupSyncSpecProvidersGitlabPtrOutput) CredentialsSecret() GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlab) *GroupSyncSpecProvidersGitlabCredentialsSecret {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecret
	}).(GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput)
}

// Groups represents a filtered list of groups to synchronize
func (o GroupSyncSpecProvidersGitlabPtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlab) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to GitLab
func (o GroupSyncSpecProvidersGitlabPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// URL is the location of the GitLub server
func (o GroupSyncSpecProvidersGitlabPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
type GroupSyncSpecProvidersGitlabCaSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersGitlabCaSecretInput is an input type that accepts GroupSyncSpecProvidersGitlabCaSecretArgs and GroupSyncSpecProvidersGitlabCaSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGitlabCaSecretInput` via:
//
//          GroupSyncSpecProvidersGitlabCaSecretArgs{...}
type GroupSyncSpecProvidersGitlabCaSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGitlabCaSecretOutput() GroupSyncSpecProvidersGitlabCaSecretOutput
	ToGroupSyncSpecProvidersGitlabCaSecretOutputWithContext(context.Context) GroupSyncSpecProvidersGitlabCaSecretOutput
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
type GroupSyncSpecProvidersGitlabCaSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersGitlabCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGitlabCaSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersGitlabCaSecretArgs) ToGroupSyncSpecProvidersGitlabCaSecretOutput() GroupSyncSpecProvidersGitlabCaSecretOutput {
	return i.ToGroupSyncSpecProvidersGitlabCaSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGitlabCaSecretArgs) ToGroupSyncSpecProvidersGitlabCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabCaSecretOutput)
}

func (i GroupSyncSpecProvidersGitlabCaSecretArgs) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutput() GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGitlabCaSecretArgs) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabCaSecretOutput).ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersGitlabCaSecretPtrInput is an input type that accepts GroupSyncSpecProvidersGitlabCaSecretArgs, GroupSyncSpecProvidersGitlabCaSecretPtr and GroupSyncSpecProvidersGitlabCaSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGitlabCaSecretPtrInput` via:
//
//          GroupSyncSpecProvidersGitlabCaSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersGitlabCaSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGitlabCaSecretPtrOutput() GroupSyncSpecProvidersGitlabCaSecretPtrOutput
	ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersGitlabCaSecretPtrOutput
}

type groupSyncSpecProvidersGitlabCaSecretPtrType GroupSyncSpecProvidersGitlabCaSecretArgs

func GroupSyncSpecProvidersGitlabCaSecretPtr(v *GroupSyncSpecProvidersGitlabCaSecretArgs) GroupSyncSpecProvidersGitlabCaSecretPtrInput {
	return (*groupSyncSpecProvidersGitlabCaSecretPtrType)(v)
}

func (*groupSyncSpecProvidersGitlabCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGitlabCaSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersGitlabCaSecretPtrType) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutput() GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersGitlabCaSecretPtrType) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabCaSecretPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
type GroupSyncSpecProvidersGitlabCaSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGitlabCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGitlabCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGitlabCaSecretOutput) ToGroupSyncSpecProvidersGitlabCaSecretOutput() GroupSyncSpecProvidersGitlabCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCaSecretOutput) ToGroupSyncSpecProvidersGitlabCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCaSecretOutput) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutput() GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersGitlabCaSecretOutput) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCaSecret) *GroupSyncSpecProvidersGitlabCaSecret {
		return &v
	}).(GroupSyncSpecProvidersGitlabCaSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGitlabCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCaSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGitlabCaSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCaSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGitlabCaSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCaSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersGitlabCaSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGitlabCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGitlabCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGitlabCaSecretPtrOutput) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutput() GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCaSecretPtrOutput) ToGroupSyncSpecProvidersGitlabCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCaSecretPtrOutput) Elem() GroupSyncSpecProvidersGitlabCaSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCaSecret) GroupSyncSpecProvidersGitlabCaSecret { return *v }).(GroupSyncSpecProvidersGitlabCaSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGitlabCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGitlabCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGitlabCaSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
type GroupSyncSpecProvidersGitlabCredentialsSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersGitlabCredentialsSecretInput is an input type that accepts GroupSyncSpecProvidersGitlabCredentialsSecretArgs and GroupSyncSpecProvidersGitlabCredentialsSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGitlabCredentialsSecretInput` via:
//
//          GroupSyncSpecProvidersGitlabCredentialsSecretArgs{...}
type GroupSyncSpecProvidersGitlabCredentialsSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGitlabCredentialsSecretOutput() GroupSyncSpecProvidersGitlabCredentialsSecretOutput
	ToGroupSyncSpecProvidersGitlabCredentialsSecretOutputWithContext(context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretOutput
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
type GroupSyncSpecProvidersGitlabCredentialsSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersGitlabCredentialsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGitlabCredentialsSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersGitlabCredentialsSecretArgs) ToGroupSyncSpecProvidersGitlabCredentialsSecretOutput() GroupSyncSpecProvidersGitlabCredentialsSecretOutput {
	return i.ToGroupSyncSpecProvidersGitlabCredentialsSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGitlabCredentialsSecretArgs) ToGroupSyncSpecProvidersGitlabCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabCredentialsSecretOutput)
}

func (i GroupSyncSpecProvidersGitlabCredentialsSecretArgs) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput() GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersGitlabCredentialsSecretArgs) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabCredentialsSecretOutput).ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersGitlabCredentialsSecretPtrInput is an input type that accepts GroupSyncSpecProvidersGitlabCredentialsSecretArgs, GroupSyncSpecProvidersGitlabCredentialsSecretPtr and GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersGitlabCredentialsSecretPtrInput` via:
//
//          GroupSyncSpecProvidersGitlabCredentialsSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersGitlabCredentialsSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput() GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput
	ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput
}

type groupSyncSpecProvidersGitlabCredentialsSecretPtrType GroupSyncSpecProvidersGitlabCredentialsSecretArgs

func GroupSyncSpecProvidersGitlabCredentialsSecretPtr(v *GroupSyncSpecProvidersGitlabCredentialsSecretArgs) GroupSyncSpecProvidersGitlabCredentialsSecretPtrInput {
	return (*groupSyncSpecProvidersGitlabCredentialsSecretPtrType)(v)
}

func (*groupSyncSpecProvidersGitlabCredentialsSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGitlabCredentialsSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersGitlabCredentialsSecretPtrType) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput() GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersGitlabCredentialsSecretPtrType) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the GitLab server
type GroupSyncSpecProvidersGitlabCredentialsSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGitlabCredentialsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersGitlabCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) ToGroupSyncSpecProvidersGitlabCredentialsSecretOutput() GroupSyncSpecProvidersGitlabCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) ToGroupSyncSpecProvidersGitlabCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput() GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCredentialsSecret) *GroupSyncSpecProvidersGitlabCredentialsSecret {
		return &v
	}).(GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCredentialsSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCredentialsSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGitlabCredentialsSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersGitlabCredentialsSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersGitlabCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput() GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersGitlabCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) Elem() GroupSyncSpecProvidersGitlabCredentialsSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCredentialsSecret) GroupSyncSpecProvidersGitlabCredentialsSecret {
		return *v
	}).(GroupSyncSpecProvidersGitlabCredentialsSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersGitlabCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Keycloak represents the Keycloak provider
type GroupSyncSpecProvidersKeycloak struct {
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
	CaSecret *GroupSyncSpecProvidersKeycloakCaSecret `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
	CredentialsSecret GroupSyncSpecProvidersKeycloakCredentialsSecret `pulumi:"credentialsSecret"`
	// Groups represents a filtered list of groups to synchronize
	Groups []string `pulumi:"groups"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to Keycloak
	Insecure *bool `pulumi:"insecure"`
	// LoginRealm is the Keycloak realm to authenticate against
	LoginRealm *string `pulumi:"loginRealm"`
	// Realm is the realm containing the groups to synchronize against
	Realm string `pulumi:"realm"`
	// Scope represents the depth for which groups will be synchronized
	Scope *string `pulumi:"scope"`
	// URL is the location of the Keycloak server
	Url string `pulumi:"url"`
}

// GroupSyncSpecProvidersKeycloakInput is an input type that accepts GroupSyncSpecProvidersKeycloakArgs and GroupSyncSpecProvidersKeycloakOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersKeycloakInput` via:
//
//          GroupSyncSpecProvidersKeycloakArgs{...}
type GroupSyncSpecProvidersKeycloakInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersKeycloakOutput() GroupSyncSpecProvidersKeycloakOutput
	ToGroupSyncSpecProvidersKeycloakOutputWithContext(context.Context) GroupSyncSpecProvidersKeycloakOutput
}

// Keycloak represents the Keycloak provider
type GroupSyncSpecProvidersKeycloakArgs struct {
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
	CaSecret GroupSyncSpecProvidersKeycloakCaSecretPtrInput `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
	CredentialsSecret GroupSyncSpecProvidersKeycloakCredentialsSecretInput `pulumi:"credentialsSecret"`
	// Groups represents a filtered list of groups to synchronize
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to Keycloak
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// LoginRealm is the Keycloak realm to authenticate against
	LoginRealm pulumi.StringPtrInput `pulumi:"loginRealm"`
	// Realm is the realm containing the groups to synchronize against
	Realm pulumi.StringInput `pulumi:"realm"`
	// Scope represents the depth for which groups will be synchronized
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// URL is the location of the Keycloak server
	Url pulumi.StringInput `pulumi:"url"`
}

func (GroupSyncSpecProvidersKeycloakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersKeycloak)(nil)).Elem()
}

func (i GroupSyncSpecProvidersKeycloakArgs) ToGroupSyncSpecProvidersKeycloakOutput() GroupSyncSpecProvidersKeycloakOutput {
	return i.ToGroupSyncSpecProvidersKeycloakOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersKeycloakArgs) ToGroupSyncSpecProvidersKeycloakOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakOutput)
}

func (i GroupSyncSpecProvidersKeycloakArgs) ToGroupSyncSpecProvidersKeycloakPtrOutput() GroupSyncSpecProvidersKeycloakPtrOutput {
	return i.ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersKeycloakArgs) ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakOutput).ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersKeycloakPtrInput is an input type that accepts GroupSyncSpecProvidersKeycloakArgs, GroupSyncSpecProvidersKeycloakPtr and GroupSyncSpecProvidersKeycloakPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersKeycloakPtrInput` via:
//
//          GroupSyncSpecProvidersKeycloakArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersKeycloakPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersKeycloakPtrOutput() GroupSyncSpecProvidersKeycloakPtrOutput
	ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(context.Context) GroupSyncSpecProvidersKeycloakPtrOutput
}

type groupSyncSpecProvidersKeycloakPtrType GroupSyncSpecProvidersKeycloakArgs

func GroupSyncSpecProvidersKeycloakPtr(v *GroupSyncSpecProvidersKeycloakArgs) GroupSyncSpecProvidersKeycloakPtrInput {
	return (*groupSyncSpecProvidersKeycloakPtrType)(v)
}

func (*groupSyncSpecProvidersKeycloakPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersKeycloak)(nil)).Elem()
}

func (i *groupSyncSpecProvidersKeycloakPtrType) ToGroupSyncSpecProvidersKeycloakPtrOutput() GroupSyncSpecProvidersKeycloakPtrOutput {
	return i.ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersKeycloakPtrType) ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakPtrOutput)
}

// Keycloak represents the Keycloak provider
type GroupSyncSpecProvidersKeycloakOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersKeycloakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersKeycloak)(nil)).Elem()
}

func (o GroupSyncSpecProvidersKeycloakOutput) ToGroupSyncSpecProvidersKeycloakOutput() GroupSyncSpecProvidersKeycloakOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakOutput) ToGroupSyncSpecProvidersKeycloakOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakOutput) ToGroupSyncSpecProvidersKeycloakPtrOutput() GroupSyncSpecProvidersKeycloakPtrOutput {
	return o.ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersKeycloakOutput) ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) *GroupSyncSpecProvidersKeycloak {
		return &v
	}).(GroupSyncSpecProvidersKeycloakPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
func (o GroupSyncSpecProvidersKeycloakOutput) CaSecret() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) *GroupSyncSpecProvidersKeycloakCaSecret { return v.CaSecret }).(GroupSyncSpecProvidersKeycloakCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
func (o GroupSyncSpecProvidersKeycloakOutput) CredentialsSecret() GroupSyncSpecProvidersKeycloakCredentialsSecretOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) GroupSyncSpecProvidersKeycloakCredentialsSecret {
		return v.CredentialsSecret
	}).(GroupSyncSpecProvidersKeycloakCredentialsSecretOutput)
}

// Groups represents a filtered list of groups to synchronize
func (o GroupSyncSpecProvidersKeycloakOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to Keycloak
func (o GroupSyncSpecProvidersKeycloakOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// LoginRealm is the Keycloak realm to authenticate against
func (o GroupSyncSpecProvidersKeycloakOutput) LoginRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) *string { return v.LoginRealm }).(pulumi.StringPtrOutput)
}

// Realm is the realm containing the groups to synchronize against
func (o GroupSyncSpecProvidersKeycloakOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) string { return v.Realm }).(pulumi.StringOutput)
}

// Scope represents the depth for which groups will be synchronized
func (o GroupSyncSpecProvidersKeycloakOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// URL is the location of the Keycloak server
func (o GroupSyncSpecProvidersKeycloakOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloak) string { return v.Url }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersKeycloakPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersKeycloakPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersKeycloak)(nil)).Elem()
}

func (o GroupSyncSpecProvidersKeycloakPtrOutput) ToGroupSyncSpecProvidersKeycloakPtrOutput() GroupSyncSpecProvidersKeycloakPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakPtrOutput) ToGroupSyncSpecProvidersKeycloakPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakPtrOutput) Elem() GroupSyncSpecProvidersKeycloakOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) GroupSyncSpecProvidersKeycloak { return *v }).(GroupSyncSpecProvidersKeycloakOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
func (o GroupSyncSpecProvidersKeycloakPtrOutput) CaSecret() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *GroupSyncSpecProvidersKeycloakCaSecret {
		if v == nil {
			return nil
		}
		return v.CaSecret
	}).(GroupSyncSpecProvidersKeycloakCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
func (o GroupSyncSpecProvidersKeycloakPtrOutput) CredentialsSecret() GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *GroupSyncSpecProvidersKeycloakCredentialsSecret {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecret
	}).(GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput)
}

// Groups represents a filtered list of groups to synchronize
func (o GroupSyncSpecProvidersKeycloakPtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to Keycloak
func (o GroupSyncSpecProvidersKeycloakPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// LoginRealm is the Keycloak realm to authenticate against
func (o GroupSyncSpecProvidersKeycloakPtrOutput) LoginRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *string {
		if v == nil {
			return nil
		}
		return v.LoginRealm
	}).(pulumi.StringPtrOutput)
}

// Realm is the realm containing the groups to synchronize against
func (o GroupSyncSpecProvidersKeycloakPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

// Scope represents the depth for which groups will be synchronized
func (o GroupSyncSpecProvidersKeycloakPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// URL is the location of the Keycloak server
func (o GroupSyncSpecProvidersKeycloakPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloak) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
type GroupSyncSpecProvidersKeycloakCaSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersKeycloakCaSecretInput is an input type that accepts GroupSyncSpecProvidersKeycloakCaSecretArgs and GroupSyncSpecProvidersKeycloakCaSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersKeycloakCaSecretInput` via:
//
//          GroupSyncSpecProvidersKeycloakCaSecretArgs{...}
type GroupSyncSpecProvidersKeycloakCaSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersKeycloakCaSecretOutput() GroupSyncSpecProvidersKeycloakCaSecretOutput
	ToGroupSyncSpecProvidersKeycloakCaSecretOutputWithContext(context.Context) GroupSyncSpecProvidersKeycloakCaSecretOutput
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
type GroupSyncSpecProvidersKeycloakCaSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersKeycloakCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersKeycloakCaSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersKeycloakCaSecretArgs) ToGroupSyncSpecProvidersKeycloakCaSecretOutput() GroupSyncSpecProvidersKeycloakCaSecretOutput {
	return i.ToGroupSyncSpecProvidersKeycloakCaSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersKeycloakCaSecretArgs) ToGroupSyncSpecProvidersKeycloakCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakCaSecretOutput)
}

func (i GroupSyncSpecProvidersKeycloakCaSecretArgs) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutput() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersKeycloakCaSecretArgs) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakCaSecretOutput).ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersKeycloakCaSecretPtrInput is an input type that accepts GroupSyncSpecProvidersKeycloakCaSecretArgs, GroupSyncSpecProvidersKeycloakCaSecretPtr and GroupSyncSpecProvidersKeycloakCaSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersKeycloakCaSecretPtrInput` via:
//
//          GroupSyncSpecProvidersKeycloakCaSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersKeycloakCaSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutput() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput
	ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersKeycloakCaSecretPtrOutput
}

type groupSyncSpecProvidersKeycloakCaSecretPtrType GroupSyncSpecProvidersKeycloakCaSecretArgs

func GroupSyncSpecProvidersKeycloakCaSecretPtr(v *GroupSyncSpecProvidersKeycloakCaSecretArgs) GroupSyncSpecProvidersKeycloakCaSecretPtrInput {
	return (*groupSyncSpecProvidersKeycloakCaSecretPtrType)(v)
}

func (*groupSyncSpecProvidersKeycloakCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersKeycloakCaSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersKeycloakCaSecretPtrType) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutput() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersKeycloakCaSecretPtrType) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakCaSecretPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the Keycloak server
type GroupSyncSpecProvidersKeycloakCaSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersKeycloakCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersKeycloakCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) ToGroupSyncSpecProvidersKeycloakCaSecretOutput() GroupSyncSpecProvidersKeycloakCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) ToGroupSyncSpecProvidersKeycloakCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutput() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCaSecret) *GroupSyncSpecProvidersKeycloakCaSecret {
		return &v
	}).(GroupSyncSpecProvidersKeycloakCaSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCaSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCaSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersKeycloakCaSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCaSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersKeycloakCaSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersKeycloakCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutput() GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) ToGroupSyncSpecProvidersKeycloakCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) Elem() GroupSyncSpecProvidersKeycloakCaSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCaSecret) GroupSyncSpecProvidersKeycloakCaSecret { return *v }).(GroupSyncSpecProvidersKeycloakCaSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersKeycloakCaSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
type GroupSyncSpecProvidersKeycloakCredentialsSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersKeycloakCredentialsSecretInput is an input type that accepts GroupSyncSpecProvidersKeycloakCredentialsSecretArgs and GroupSyncSpecProvidersKeycloakCredentialsSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersKeycloakCredentialsSecretInput` via:
//
//          GroupSyncSpecProvidersKeycloakCredentialsSecretArgs{...}
type GroupSyncSpecProvidersKeycloakCredentialsSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretOutput
	ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutputWithContext(context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretOutput
}

// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
type GroupSyncSpecProvidersKeycloakCredentialsSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersKeycloakCredentialsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersKeycloakCredentialsSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersKeycloakCredentialsSecretArgs) ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretOutput {
	return i.ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersKeycloakCredentialsSecretArgs) ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakCredentialsSecretOutput)
}

func (i GroupSyncSpecProvidersKeycloakCredentialsSecretArgs) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersKeycloakCredentialsSecretArgs) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakCredentialsSecretOutput).ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersKeycloakCredentialsSecretPtrInput is an input type that accepts GroupSyncSpecProvidersKeycloakCredentialsSecretArgs, GroupSyncSpecProvidersKeycloakCredentialsSecretPtr and GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersKeycloakCredentialsSecretPtrInput` via:
//
//          GroupSyncSpecProvidersKeycloakCredentialsSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersKeycloakCredentialsSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput
	ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput
}

type groupSyncSpecProvidersKeycloakCredentialsSecretPtrType GroupSyncSpecProvidersKeycloakCredentialsSecretArgs

func GroupSyncSpecProvidersKeycloakCredentialsSecretPtr(v *GroupSyncSpecProvidersKeycloakCredentialsSecretArgs) GroupSyncSpecProvidersKeycloakCredentialsSecretPtrInput {
	return (*groupSyncSpecProvidersKeycloakCredentialsSecretPtrType)(v)
}

func (*groupSyncSpecProvidersKeycloakCredentialsSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersKeycloakCredentialsSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersKeycloakCredentialsSecretPtrType) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersKeycloakCredentialsSecretPtrType) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for the Keycloak server
type GroupSyncSpecProvidersKeycloakCredentialsSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersKeycloakCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) ToGroupSyncSpecProvidersKeycloakCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCredentialsSecret) *GroupSyncSpecProvidersKeycloakCredentialsSecret {
		return &v
	}).(GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCredentialsSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCredentialsSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersKeycloakCredentialsSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersKeycloakCredentialsSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersKeycloakCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput() GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) Elem() GroupSyncSpecProvidersKeycloakCredentialsSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCredentialsSecret) GroupSyncSpecProvidersKeycloakCredentialsSecret {
		return *v
	}).(GroupSyncSpecProvidersKeycloakCredentialsSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersKeycloakCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Ldap represents the LDAP provider
type GroupSyncSpecProvidersLdap struct {
	// ActiveDirectoryConfig represents the configuration for Active Directory
	ActiveDirectory *GroupSyncSpecProvidersLdapActiveDirectory `pulumi:"activeDirectory"`
	// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
	AugmentedActiveDirectory *GroupSyncSpecProvidersLdapAugmentedActiveDirectory `pulumi:"augmentedActiveDirectory"`
	// Black represents a list of groups to not synchronize
	Blacklist []string `pulumi:"blacklist"`
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
	CaSecret *GroupSyncSpecProvidersLdapCaSecret `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
	CredentialsSecret *GroupSyncSpecProvidersLdapCredentialsSecret `pulumi:"credentialsSecret"`
	// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
	GroupUIDNameMapping map[string]string `pulumi:"groupUIDNameMapping"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to LDAP
	Insecure *bool `pulumi:"insecure"`
	// RFC2307Config represents the configuration for a RFC2307 schema
	Rfc2307 *GroupSyncSpecProvidersLdapRfc2307 `pulumi:"rfc2307"`
	// URL is the location of the LDAP Server
	Url string `pulumi:"url"`
	// Whitelist represents a list of groups to synchronize
	Whitelist []string `pulumi:"whitelist"`
}

// GroupSyncSpecProvidersLdapInput is an input type that accepts GroupSyncSpecProvidersLdapArgs and GroupSyncSpecProvidersLdapOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapInput` via:
//
//          GroupSyncSpecProvidersLdapArgs{...}
type GroupSyncSpecProvidersLdapInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapOutput() GroupSyncSpecProvidersLdapOutput
	ToGroupSyncSpecProvidersLdapOutputWithContext(context.Context) GroupSyncSpecProvidersLdapOutput
}

// Ldap represents the LDAP provider
type GroupSyncSpecProvidersLdapArgs struct {
	// ActiveDirectoryConfig represents the configuration for Active Directory
	ActiveDirectory GroupSyncSpecProvidersLdapActiveDirectoryPtrInput `pulumi:"activeDirectory"`
	// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
	AugmentedActiveDirectory GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrInput `pulumi:"augmentedActiveDirectory"`
	// Black represents a list of groups to not synchronize
	Blacklist pulumi.StringArrayInput `pulumi:"blacklist"`
	// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
	CaSecret GroupSyncSpecProvidersLdapCaSecretPtrInput `pulumi:"caSecret"`
	// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
	CredentialsSecret GroupSyncSpecProvidersLdapCredentialsSecretPtrInput `pulumi:"credentialsSecret"`
	// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
	GroupUIDNameMapping pulumi.StringMapInput `pulumi:"groupUIDNameMapping"`
	// Insecure specifies whether to allow for unverified certificates to be used when communicating to LDAP
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// RFC2307Config represents the configuration for a RFC2307 schema
	Rfc2307 GroupSyncSpecProvidersLdapRfc2307PtrInput `pulumi:"rfc2307"`
	// URL is the location of the LDAP Server
	Url pulumi.StringInput `pulumi:"url"`
	// Whitelist represents a list of groups to synchronize
	Whitelist pulumi.StringArrayInput `pulumi:"whitelist"`
}

func (GroupSyncSpecProvidersLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdap)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapArgs) ToGroupSyncSpecProvidersLdapOutput() GroupSyncSpecProvidersLdapOutput {
	return i.ToGroupSyncSpecProvidersLdapOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapArgs) ToGroupSyncSpecProvidersLdapOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapOutput)
}

func (i GroupSyncSpecProvidersLdapArgs) ToGroupSyncSpecProvidersLdapPtrOutput() GroupSyncSpecProvidersLdapPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapArgs) ToGroupSyncSpecProvidersLdapPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapOutput).ToGroupSyncSpecProvidersLdapPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapPtrInput is an input type that accepts GroupSyncSpecProvidersLdapArgs, GroupSyncSpecProvidersLdapPtr and GroupSyncSpecProvidersLdapPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapPtrInput` via:
//
//          GroupSyncSpecProvidersLdapArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapPtrOutput() GroupSyncSpecProvidersLdapPtrOutput
	ToGroupSyncSpecProvidersLdapPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapPtrOutput
}

type groupSyncSpecProvidersLdapPtrType GroupSyncSpecProvidersLdapArgs

func GroupSyncSpecProvidersLdapPtr(v *GroupSyncSpecProvidersLdapArgs) GroupSyncSpecProvidersLdapPtrInput {
	return (*groupSyncSpecProvidersLdapPtrType)(v)
}

func (*groupSyncSpecProvidersLdapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdap)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapPtrType) ToGroupSyncSpecProvidersLdapPtrOutput() GroupSyncSpecProvidersLdapPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapPtrType) ToGroupSyncSpecProvidersLdapPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapPtrOutput)
}

// Ldap represents the LDAP provider
type GroupSyncSpecProvidersLdapOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdap)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapOutput) ToGroupSyncSpecProvidersLdapOutput() GroupSyncSpecProvidersLdapOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapOutput) ToGroupSyncSpecProvidersLdapOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapOutput) ToGroupSyncSpecProvidersLdapPtrOutput() GroupSyncSpecProvidersLdapPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapOutput) ToGroupSyncSpecProvidersLdapPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdap {
		return &v
	}).(GroupSyncSpecProvidersLdapPtrOutput)
}

// ActiveDirectoryConfig represents the configuration for Active Directory
func (o GroupSyncSpecProvidersLdapOutput) ActiveDirectory() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapActiveDirectory {
		return v.ActiveDirectory
	}).(GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput)
}

// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
func (o GroupSyncSpecProvidersLdapOutput) AugmentedActiveDirectory() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapAugmentedActiveDirectory {
		return v.AugmentedActiveDirectory
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput)
}

// Black represents a list of groups to not synchronize
func (o GroupSyncSpecProvidersLdapOutput) Blacklist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) []string { return v.Blacklist }).(pulumi.StringArrayOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
func (o GroupSyncSpecProvidersLdapOutput) CaSecret() GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapCaSecret { return v.CaSecret }).(GroupSyncSpecProvidersLdapCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
func (o GroupSyncSpecProvidersLdapOutput) CredentialsSecret() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapCredentialsSecret {
		return v.CredentialsSecret
	}).(GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput)
}

// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
func (o GroupSyncSpecProvidersLdapOutput) GroupUIDNameMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) map[string]string { return v.GroupUIDNameMapping }).(pulumi.StringMapOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to LDAP
func (o GroupSyncSpecProvidersLdapOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// RFC2307Config represents the configuration for a RFC2307 schema
func (o GroupSyncSpecProvidersLdapOutput) Rfc2307() GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapRfc2307 { return v.Rfc2307 }).(GroupSyncSpecProvidersLdapRfc2307PtrOutput)
}

// URL is the location of the LDAP Server
func (o GroupSyncSpecProvidersLdapOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) string { return v.Url }).(pulumi.StringOutput)
}

// Whitelist represents a list of groups to synchronize
func (o GroupSyncSpecProvidersLdapOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdap) []string { return v.Whitelist }).(pulumi.StringArrayOutput)
}

type GroupSyncSpecProvidersLdapPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdap)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapPtrOutput) ToGroupSyncSpecProvidersLdapPtrOutput() GroupSyncSpecProvidersLdapPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapPtrOutput) ToGroupSyncSpecProvidersLdapPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapPtrOutput) Elem() GroupSyncSpecProvidersLdapOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) GroupSyncSpecProvidersLdap { return *v }).(GroupSyncSpecProvidersLdapOutput)
}

// ActiveDirectoryConfig represents the configuration for Active Directory
func (o GroupSyncSpecProvidersLdapPtrOutput) ActiveDirectory() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput)
}

// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
func (o GroupSyncSpecProvidersLdapPtrOutput) AugmentedActiveDirectory() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapAugmentedActiveDirectory {
		if v == nil {
			return nil
		}
		return v.AugmentedActiveDirectory
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput)
}

// Black represents a list of groups to not synchronize
func (o GroupSyncSpecProvidersLdapPtrOutput) Blacklist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) []string {
		if v == nil {
			return nil
		}
		return v.Blacklist
	}).(pulumi.StringArrayOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
func (o GroupSyncSpecProvidersLdapPtrOutput) CaSecret() GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapCaSecret {
		if v == nil {
			return nil
		}
		return v.CaSecret
	}).(GroupSyncSpecProvidersLdapCaSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
func (o GroupSyncSpecProvidersLdapPtrOutput) CredentialsSecret() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapCredentialsSecret {
		if v == nil {
			return nil
		}
		return v.CredentialsSecret
	}).(GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput)
}

// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
func (o GroupSyncSpecProvidersLdapPtrOutput) GroupUIDNameMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) map[string]string {
		if v == nil {
			return nil
		}
		return v.GroupUIDNameMapping
	}).(pulumi.StringMapOutput)
}

// Insecure specifies whether to allow for unverified certificates to be used when communicating to LDAP
func (o GroupSyncSpecProvidersLdapPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// RFC2307Config represents the configuration for a RFC2307 schema
func (o GroupSyncSpecProvidersLdapPtrOutput) Rfc2307() GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *GroupSyncSpecProvidersLdapRfc2307 {
		if v == nil {
			return nil
		}
		return v.Rfc2307
	}).(GroupSyncSpecProvidersLdapRfc2307PtrOutput)
}

// URL is the location of the LDAP Server
func (o GroupSyncSpecProvidersLdapPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Whitelist represents a list of groups to synchronize
func (o GroupSyncSpecProvidersLdapPtrOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdap) []string {
		if v == nil {
			return nil
		}
		return v.Whitelist
	}).(pulumi.StringArrayOutput)
}

// ActiveDirectoryConfig represents the configuration for Active Directory
type GroupSyncSpecProvidersLdapActiveDirectory struct {
	// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
	GroupMembershipAttributes []string `pulumi:"groupMembershipAttributes"`
	// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
	UserNameAttributes []string `pulumi:"userNameAttributes"`
	// AllUsersQuery holds the template for an LDAP query that returns user entries.
	UsersQuery GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery `pulumi:"usersQuery"`
}

// GroupSyncSpecProvidersLdapActiveDirectoryInput is an input type that accepts GroupSyncSpecProvidersLdapActiveDirectoryArgs and GroupSyncSpecProvidersLdapActiveDirectoryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapActiveDirectoryInput` via:
//
//          GroupSyncSpecProvidersLdapActiveDirectoryArgs{...}
type GroupSyncSpecProvidersLdapActiveDirectoryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapActiveDirectoryOutput() GroupSyncSpecProvidersLdapActiveDirectoryOutput
	ToGroupSyncSpecProvidersLdapActiveDirectoryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapActiveDirectoryOutput
}

// ActiveDirectoryConfig represents the configuration for Active Directory
type GroupSyncSpecProvidersLdapActiveDirectoryArgs struct {
	// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
	GroupMembershipAttributes pulumi.StringArrayInput `pulumi:"groupMembershipAttributes"`
	// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
	UserNameAttributes pulumi.StringArrayInput `pulumi:"userNameAttributes"`
	// AllUsersQuery holds the template for an LDAP query that returns user entries.
	UsersQuery GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryInput `pulumi:"usersQuery"`
}

func (GroupSyncSpecProvidersLdapActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapActiveDirectory)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryOutput() GroupSyncSpecProvidersLdapActiveDirectoryOutput {
	return i.ToGroupSyncSpecProvidersLdapActiveDirectoryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapActiveDirectoryOutput)
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapActiveDirectoryOutput).ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapActiveDirectoryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapActiveDirectoryArgs, GroupSyncSpecProvidersLdapActiveDirectoryPtr and GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapActiveDirectoryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapActiveDirectoryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput
	ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput
}

type groupSyncSpecProvidersLdapActiveDirectoryPtrType GroupSyncSpecProvidersLdapActiveDirectoryArgs

func GroupSyncSpecProvidersLdapActiveDirectoryPtr(v *GroupSyncSpecProvidersLdapActiveDirectoryArgs) GroupSyncSpecProvidersLdapActiveDirectoryPtrInput {
	return (*groupSyncSpecProvidersLdapActiveDirectoryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapActiveDirectory)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapActiveDirectoryPtrType) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapActiveDirectoryPtrType) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput)
}

// ActiveDirectoryConfig represents the configuration for Active Directory
type GroupSyncSpecProvidersLdapActiveDirectoryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapActiveDirectory)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryOutput() GroupSyncSpecProvidersLdapActiveDirectoryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectory) *GroupSyncSpecProvidersLdapActiveDirectory {
		return &v
	}).(GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput)
}

// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) GroupMembershipAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectory) []string { return v.GroupMembershipAttributes }).(pulumi.StringArrayOutput)
}

// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) UserNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectory) []string { return v.UserNameAttributes }).(pulumi.StringArrayOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
func (o GroupSyncSpecProvidersLdapActiveDirectoryOutput) UsersQuery() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectory) GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery {
		return v.UsersQuery
	}).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput)
}

type GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapActiveDirectory)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) Elem() GroupSyncSpecProvidersLdapActiveDirectoryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectory) GroupSyncSpecProvidersLdapActiveDirectory {
		return *v
	}).(GroupSyncSpecProvidersLdapActiveDirectoryOutput)
}

// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
func (o GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) GroupMembershipAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.GroupMembershipAttributes
	}).(pulumi.StringArrayOutput)
}

// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
func (o GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) UserNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.UserNameAttributes
	}).(pulumi.StringArrayOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
func (o GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput) UsersQuery() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectory) *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery {
		if v == nil {
			return nil
		}
		return &v.UsersQuery
	}).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN string `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases *string `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter *string `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize *int `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope *string `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout *int `pulumi:"timeout"`
}

// GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryInput is an input type that accepts GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs and GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryInput` via:
//
//          GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs{...}
type GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput
	ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN pulumi.StringInput `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases pulumi.StringPtrInput `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput {
	return i.ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput)
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput).ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs, GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtr and GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput
	ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput
}

type groupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrType GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs

func GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtr(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryArgs) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrInput {
	return (*groupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrType) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrType) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery {
		return &v
	}).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) BaseDN() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) string { return v.BaseDN }).(pulumi.StringOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string { return v.DerefAliases }).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) ToGroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) Elem() GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery {
		return *v
	}).(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) BaseDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return &v.BaseDN
	}).(pulumi.StringPtrOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.DerefAliases
	}).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapActiveDirectoryUsersQuery) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
type GroupSyncSpecProvidersLdapAugmentedActiveDirectory struct {
	// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
	GroupMembershipAttributes []string `pulumi:"groupMembershipAttributes"`
	// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
	GroupNameAttributes []string `pulumi:"groupNameAttributes"`
	// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
	GroupUIDAttribute string `pulumi:"groupUIDAttribute"`
	// AllGroupsQuery holds the template for an LDAP query that returns group entries.
	GroupsQuery GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery `pulumi:"groupsQuery"`
	// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
	UserNameAttributes []string `pulumi:"userNameAttributes"`
	// AllUsersQuery holds the template for an LDAP query that returns user entries.
	UsersQuery GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery `pulumi:"usersQuery"`
}

// GroupSyncSpecProvidersLdapAugmentedActiveDirectoryInput is an input type that accepts GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs and GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapAugmentedActiveDirectoryInput` via:
//
//          GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs{...}
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput
	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput
}

// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs struct {
	// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
	GroupMembershipAttributes pulumi.StringArrayInput `pulumi:"groupMembershipAttributes"`
	// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
	GroupNameAttributes pulumi.StringArrayInput `pulumi:"groupNameAttributes"`
	// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
	GroupUIDAttribute pulumi.StringInput `pulumi:"groupUIDAttribute"`
	// AllGroupsQuery holds the template for an LDAP query that returns group entries.
	GroupsQuery GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryInput `pulumi:"groupsQuery"`
	// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
	UserNameAttributes pulumi.StringArrayInput `pulumi:"userNameAttributes"`
	// AllUsersQuery holds the template for an LDAP query that returns user entries.
	UsersQuery GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryInput `pulumi:"usersQuery"`
}

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapAugmentedActiveDirectory)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput)
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput).ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs, GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtr and GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput
	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput
}

type groupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrType GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs

func GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtr(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryArgs) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrInput {
	return (*groupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapAugmentedActiveDirectory)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrType) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrType) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput)
}

// ActiveDirectoryConfig represents the configuration for Augmented Active Directory
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapAugmentedActiveDirectory)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) *GroupSyncSpecProvidersLdapAugmentedActiveDirectory {
		return &v
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput)
}

// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) GroupMembershipAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) []string {
		return v.GroupMembershipAttributes
	}).(pulumi.StringArrayOutput)
}

// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) GroupNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) []string { return v.GroupNameAttributes }).(pulumi.StringArrayOutput)
}

// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) GroupUIDAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) string { return v.GroupUIDAttribute }).(pulumi.StringOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) GroupsQuery() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery {
		return v.GroupsQuery
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput)
}

// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) UserNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) []string { return v.UserNameAttributes }).(pulumi.StringArrayOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput) UsersQuery() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectory) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery {
		return v.UsersQuery
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput)
}

type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapAugmentedActiveDirectory)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) Elem() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) GroupSyncSpecProvidersLdapAugmentedActiveDirectory {
		return *v
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput)
}

// GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) GroupMembershipAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.GroupMembershipAttributes
	}).(pulumi.StringArrayOutput)
}

// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) GroupNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.GroupNameAttributes
	}).(pulumi.StringArrayOutput)
}

// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) GroupUIDAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.GroupUIDAttribute
	}).(pulumi.StringPtrOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) GroupsQuery() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery {
		if v == nil {
			return nil
		}
		return &v.GroupsQuery
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput)
}

// UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) UserNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.UserNameAttributes
	}).(pulumi.StringArrayOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput) UsersQuery() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectory) *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery {
		if v == nil {
			return nil
		}
		return &v.UsersQuery
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN string `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases *string `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter *string `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize *int `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope *string `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout *int `pulumi:"timeout"`
}

// GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryInput is an input type that accepts GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs and GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryInput` via:
//
//          GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs{...}
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput
	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN pulumi.StringInput `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases pulumi.StringPtrInput `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput)
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput).ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs, GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtr and GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput
	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput
}

type groupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrType GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs

func GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtr(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryArgs) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrInput {
	return (*groupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrType) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrType) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery {
		return &v
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) BaseDN() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) string { return v.BaseDN }).(pulumi.StringOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string { return v.DerefAliases }).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) Elem() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery {
		return *v
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) BaseDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.BaseDN
	}).(pulumi.StringPtrOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string {
		if v == nil {
			return nil
		}
		return v.DerefAliases
	}).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQuery) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN string `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases *string `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter *string `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize *int `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope *string `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout *int `pulumi:"timeout"`
}

// GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryInput is an input type that accepts GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs and GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryInput` via:
//
//          GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs{...}
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput
	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN pulumi.StringInput `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases pulumi.StringPtrInput `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput)
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput).ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs, GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtr and GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput
	ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput
}

type groupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrType GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs

func GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtr(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryArgs) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrInput {
	return (*groupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrType) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrType) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery {
		return &v
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) BaseDN() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) string { return v.BaseDN }).(pulumi.StringOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string { return v.DerefAliases }).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) ToGroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) Elem() GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery {
		return *v
	}).(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) BaseDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return &v.BaseDN
	}).(pulumi.StringPtrOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.DerefAliases
	}).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQuery) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
type GroupSyncSpecProvidersLdapCaSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersLdapCaSecretInput is an input type that accepts GroupSyncSpecProvidersLdapCaSecretArgs and GroupSyncSpecProvidersLdapCaSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapCaSecretInput` via:
//
//          GroupSyncSpecProvidersLdapCaSecretArgs{...}
type GroupSyncSpecProvidersLdapCaSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapCaSecretOutput() GroupSyncSpecProvidersLdapCaSecretOutput
	ToGroupSyncSpecProvidersLdapCaSecretOutputWithContext(context.Context) GroupSyncSpecProvidersLdapCaSecretOutput
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
type GroupSyncSpecProvidersLdapCaSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersLdapCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapCaSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapCaSecretArgs) ToGroupSyncSpecProvidersLdapCaSecretOutput() GroupSyncSpecProvidersLdapCaSecretOutput {
	return i.ToGroupSyncSpecProvidersLdapCaSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapCaSecretArgs) ToGroupSyncSpecProvidersLdapCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapCaSecretOutput)
}

func (i GroupSyncSpecProvidersLdapCaSecretArgs) ToGroupSyncSpecProvidersLdapCaSecretPtrOutput() GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapCaSecretArgs) ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapCaSecretOutput).ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapCaSecretPtrInput is an input type that accepts GroupSyncSpecProvidersLdapCaSecretArgs, GroupSyncSpecProvidersLdapCaSecretPtr and GroupSyncSpecProvidersLdapCaSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapCaSecretPtrInput` via:
//
//          GroupSyncSpecProvidersLdapCaSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapCaSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapCaSecretPtrOutput() GroupSyncSpecProvidersLdapCaSecretPtrOutput
	ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapCaSecretPtrOutput
}

type groupSyncSpecProvidersLdapCaSecretPtrType GroupSyncSpecProvidersLdapCaSecretArgs

func GroupSyncSpecProvidersLdapCaSecretPtr(v *GroupSyncSpecProvidersLdapCaSecretArgs) GroupSyncSpecProvidersLdapCaSecretPtrInput {
	return (*groupSyncSpecProvidersLdapCaSecretPtrType)(v)
}

func (*groupSyncSpecProvidersLdapCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapCaSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapCaSecretPtrType) ToGroupSyncSpecProvidersLdapCaSecretPtrOutput() GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapCaSecretPtrType) ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapCaSecretPtrOutput)
}

// CaSecret is a reference to a secret containing a CA certificate to communicate to the GitLab server
type GroupSyncSpecProvidersLdapCaSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapCaSecretOutput) ToGroupSyncSpecProvidersLdapCaSecretOutput() GroupSyncSpecProvidersLdapCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCaSecretOutput) ToGroupSyncSpecProvidersLdapCaSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCaSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCaSecretOutput) ToGroupSyncSpecProvidersLdapCaSecretPtrOutput() GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapCaSecretOutput) ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCaSecret) *GroupSyncSpecProvidersLdapCaSecret {
		return &v
	}).(GroupSyncSpecProvidersLdapCaSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersLdapCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCaSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersLdapCaSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCaSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersLdapCaSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCaSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersLdapCaSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapCaSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapCaSecretPtrOutput) ToGroupSyncSpecProvidersLdapCaSecretPtrOutput() GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCaSecretPtrOutput) ToGroupSyncSpecProvidersLdapCaSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCaSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCaSecretPtrOutput) Elem() GroupSyncSpecProvidersLdapCaSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCaSecret) GroupSyncSpecProvidersLdapCaSecret { return *v }).(GroupSyncSpecProvidersLdapCaSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersLdapCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersLdapCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersLdapCaSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCaSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
type GroupSyncSpecProvidersLdapCredentialsSecret struct {
	// Key represents the specific key to reference from the secret
	Key *string `pulumi:"key"`
	// Name represents the name of the secret
	Name string `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// GroupSyncSpecProvidersLdapCredentialsSecretInput is an input type that accepts GroupSyncSpecProvidersLdapCredentialsSecretArgs and GroupSyncSpecProvidersLdapCredentialsSecretOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapCredentialsSecretInput` via:
//
//          GroupSyncSpecProvidersLdapCredentialsSecretArgs{...}
type GroupSyncSpecProvidersLdapCredentialsSecretInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapCredentialsSecretOutput() GroupSyncSpecProvidersLdapCredentialsSecretOutput
	ToGroupSyncSpecProvidersLdapCredentialsSecretOutputWithContext(context.Context) GroupSyncSpecProvidersLdapCredentialsSecretOutput
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
type GroupSyncSpecProvidersLdapCredentialsSecretArgs struct {
	// Key represents the specific key to reference from the secret
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name represents the name of the secret
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace represents the namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GroupSyncSpecProvidersLdapCredentialsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapCredentialsSecret)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapCredentialsSecretArgs) ToGroupSyncSpecProvidersLdapCredentialsSecretOutput() GroupSyncSpecProvidersLdapCredentialsSecretOutput {
	return i.ToGroupSyncSpecProvidersLdapCredentialsSecretOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapCredentialsSecretArgs) ToGroupSyncSpecProvidersLdapCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCredentialsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapCredentialsSecretOutput)
}

func (i GroupSyncSpecProvidersLdapCredentialsSecretArgs) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutput() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapCredentialsSecretArgs) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapCredentialsSecretOutput).ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapCredentialsSecretPtrInput is an input type that accepts GroupSyncSpecProvidersLdapCredentialsSecretArgs, GroupSyncSpecProvidersLdapCredentialsSecretPtr and GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapCredentialsSecretPtrInput` via:
//
//          GroupSyncSpecProvidersLdapCredentialsSecretArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapCredentialsSecretPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutput() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput
	ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput
}

type groupSyncSpecProvidersLdapCredentialsSecretPtrType GroupSyncSpecProvidersLdapCredentialsSecretArgs

func GroupSyncSpecProvidersLdapCredentialsSecretPtr(v *GroupSyncSpecProvidersLdapCredentialsSecretArgs) GroupSyncSpecProvidersLdapCredentialsSecretPtrInput {
	return (*groupSyncSpecProvidersLdapCredentialsSecretPtrType)(v)
}

func (*groupSyncSpecProvidersLdapCredentialsSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapCredentialsSecret)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapCredentialsSecretPtrType) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutput() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapCredentialsSecretPtrType) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput)
}

// CredentialsSecret is a reference to a secret containing authentication details for communicating to LDAP
type GroupSyncSpecProvidersLdapCredentialsSecretOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapCredentialsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) ToGroupSyncSpecProvidersLdapCredentialsSecretOutput() GroupSyncSpecProvidersLdapCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) ToGroupSyncSpecProvidersLdapCredentialsSecretOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCredentialsSecretOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutput() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCredentialsSecret) *GroupSyncSpecProvidersLdapCredentialsSecret {
		return &v
	}).(GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCredentialsSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCredentialsSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersLdapCredentialsSecretOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapCredentialsSecret) string { return v.Namespace }).(pulumi.StringOutput)
}

type GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapCredentialsSecret)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutput() GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) ToGroupSyncSpecProvidersLdapCredentialsSecretPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) Elem() GroupSyncSpecProvidersLdapCredentialsSecretOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCredentialsSecret) GroupSyncSpecProvidersLdapCredentialsSecret {
		return *v
	}).(GroupSyncSpecProvidersLdapCredentialsSecretOutput)
}

// Key represents the specific key to reference from the secret
func (o GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name represents the name of the secret
func (o GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace represents the namespace containing the secret
func (o GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapCredentialsSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
type GroupSyncSpecProvidersLdapGroupUIDNameMapping struct {
}

// GroupSyncSpecProvidersLdapGroupUIDNameMappingInput is an input type that accepts GroupSyncSpecProvidersLdapGroupUIDNameMappingArgs and GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapGroupUIDNameMappingInput` via:
//
//          GroupSyncSpecProvidersLdapGroupUIDNameMappingArgs{...}
type GroupSyncSpecProvidersLdapGroupUIDNameMappingInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutput() GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput
	ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutputWithContext(context.Context) GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput
}

// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
type GroupSyncSpecProvidersLdapGroupUIDNameMappingArgs struct {
}

func (GroupSyncSpecProvidersLdapGroupUIDNameMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapGroupUIDNameMapping)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapGroupUIDNameMappingArgs) ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutput() GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput {
	return i.ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapGroupUIDNameMappingArgs) ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput)
}

// / LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift group names
type GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapGroupUIDNameMapping)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput) ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutput() GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput) ToGroupSyncSpecProvidersLdapGroupUIDNameMappingOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput {
	return o
}

// RFC2307Config represents the configuration for a RFC2307 schema
type GroupSyncSpecProvidersLdapRfc2307 struct {
	// GroupMembershipAttributes defines which attributes on an LDAP group entry will be interpreted  as its members. The values contained in those attributes must be queryable by your UserUIDAttribute
	GroupMembershipAttributes []string `pulumi:"groupMembershipAttributes"`
	// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
	GroupNameAttributes []string `pulumi:"groupNameAttributes"`
	// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
	GroupUIDAttribute string `pulumi:"groupUIDAttribute"`
	// AllGroupsQuery holds the template for an LDAP query that returns group entries.
	GroupsQuery GroupSyncSpecProvidersLdapRfc2307GroupsQuery `pulumi:"groupsQuery"`
	// TolerateMemberNotFoundErrors determines the behavior of the LDAP sync job when missing user entries are encountered. If 'true', an LDAP query for users that doesn't find any will be tolerated and an only and error will be logged. If 'false', the LDAP sync job will fail if a query for users doesn't find any. The default value is 'false'. Misconfigured LDAP sync jobs with this flag set to 'true' can cause group membership to be removed, so it is recommended to use this flag with caution.
	TolerateMemberNotFoundErrors *bool `pulumi:"tolerateMemberNotFoundErrors"`
	// TolerateMemberOutOfScopeErrors determines the behavior of the LDAP sync job when out-of-scope user entries are encountered. If 'true', an LDAP query for a user that falls outside of the base DN given for the all user query will be tolerated and only an error will be logged. If 'false', the LDAP sync job will fail if a user query would search outside of the base DN specified by the all user query. Misconfigured LDAP sync jobs with this flag set to 'true' can result in groups missing users, so it is recommended to use this flag with caution.
	TolerateMemberOutOfScopeErrors *bool `pulumi:"tolerateMemberOutOfScopeErrors"`
	// UserNameAttributes defines which attributes on an LDAP user entry will be used, in order, as its OpenShift user name. The first attribute with a non-empty value is used. This should match your PreferredUsername setting for your LDAPPasswordIdentityProvider
	UserNameAttributes []string `pulumi:"userNameAttributes"`
	// UserUIDAttribute defines which attribute on an LDAP user entry will be interpreted as its unique identifier. It must correspond to values that will be found from the GroupMembershipAttributes
	UserUIDAttribute string `pulumi:"userUIDAttribute"`
	// AllUsersQuery holds the template for an LDAP query that returns user entries.
	UsersQuery GroupSyncSpecProvidersLdapRfc2307UsersQuery `pulumi:"usersQuery"`
}

// GroupSyncSpecProvidersLdapRfc2307Input is an input type that accepts GroupSyncSpecProvidersLdapRfc2307Args and GroupSyncSpecProvidersLdapRfc2307Output values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapRfc2307Input` via:
//
//          GroupSyncSpecProvidersLdapRfc2307Args{...}
type GroupSyncSpecProvidersLdapRfc2307Input interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapRfc2307Output() GroupSyncSpecProvidersLdapRfc2307Output
	ToGroupSyncSpecProvidersLdapRfc2307OutputWithContext(context.Context) GroupSyncSpecProvidersLdapRfc2307Output
}

// RFC2307Config represents the configuration for a RFC2307 schema
type GroupSyncSpecProvidersLdapRfc2307Args struct {
	// GroupMembershipAttributes defines which attributes on an LDAP group entry will be interpreted  as its members. The values contained in those attributes must be queryable by your UserUIDAttribute
	GroupMembershipAttributes pulumi.StringArrayInput `pulumi:"groupMembershipAttributes"`
	// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
	GroupNameAttributes pulumi.StringArrayInput `pulumi:"groupNameAttributes"`
	// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
	GroupUIDAttribute pulumi.StringInput `pulumi:"groupUIDAttribute"`
	// AllGroupsQuery holds the template for an LDAP query that returns group entries.
	GroupsQuery GroupSyncSpecProvidersLdapRfc2307GroupsQueryInput `pulumi:"groupsQuery"`
	// TolerateMemberNotFoundErrors determines the behavior of the LDAP sync job when missing user entries are encountered. If 'true', an LDAP query for users that doesn't find any will be tolerated and an only and error will be logged. If 'false', the LDAP sync job will fail if a query for users doesn't find any. The default value is 'false'. Misconfigured LDAP sync jobs with this flag set to 'true' can cause group membership to be removed, so it is recommended to use this flag with caution.
	TolerateMemberNotFoundErrors pulumi.BoolPtrInput `pulumi:"tolerateMemberNotFoundErrors"`
	// TolerateMemberOutOfScopeErrors determines the behavior of the LDAP sync job when out-of-scope user entries are encountered. If 'true', an LDAP query for a user that falls outside of the base DN given for the all user query will be tolerated and only an error will be logged. If 'false', the LDAP sync job will fail if a user query would search outside of the base DN specified by the all user query. Misconfigured LDAP sync jobs with this flag set to 'true' can result in groups missing users, so it is recommended to use this flag with caution.
	TolerateMemberOutOfScopeErrors pulumi.BoolPtrInput `pulumi:"tolerateMemberOutOfScopeErrors"`
	// UserNameAttributes defines which attributes on an LDAP user entry will be used, in order, as its OpenShift user name. The first attribute with a non-empty value is used. This should match your PreferredUsername setting for your LDAPPasswordIdentityProvider
	UserNameAttributes pulumi.StringArrayInput `pulumi:"userNameAttributes"`
	// UserUIDAttribute defines which attribute on an LDAP user entry will be interpreted as its unique identifier. It must correspond to values that will be found from the GroupMembershipAttributes
	UserUIDAttribute pulumi.StringInput `pulumi:"userUIDAttribute"`
	// AllUsersQuery holds the template for an LDAP query that returns user entries.
	UsersQuery GroupSyncSpecProvidersLdapRfc2307UsersQueryInput `pulumi:"usersQuery"`
}

func (GroupSyncSpecProvidersLdapRfc2307Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapRfc2307)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapRfc2307Args) ToGroupSyncSpecProvidersLdapRfc2307Output() GroupSyncSpecProvidersLdapRfc2307Output {
	return i.ToGroupSyncSpecProvidersLdapRfc2307OutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapRfc2307Args) ToGroupSyncSpecProvidersLdapRfc2307OutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307Output {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307Output)
}

func (i GroupSyncSpecProvidersLdapRfc2307Args) ToGroupSyncSpecProvidersLdapRfc2307PtrOutput() GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapRfc2307Args) ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307Output).ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapRfc2307PtrInput is an input type that accepts GroupSyncSpecProvidersLdapRfc2307Args, GroupSyncSpecProvidersLdapRfc2307Ptr and GroupSyncSpecProvidersLdapRfc2307PtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapRfc2307PtrInput` via:
//
//          GroupSyncSpecProvidersLdapRfc2307Args{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapRfc2307PtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapRfc2307PtrOutput() GroupSyncSpecProvidersLdapRfc2307PtrOutput
	ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapRfc2307PtrOutput
}

type groupSyncSpecProvidersLdapRfc2307PtrType GroupSyncSpecProvidersLdapRfc2307Args

func GroupSyncSpecProvidersLdapRfc2307Ptr(v *GroupSyncSpecProvidersLdapRfc2307Args) GroupSyncSpecProvidersLdapRfc2307PtrInput {
	return (*groupSyncSpecProvidersLdapRfc2307PtrType)(v)
}

func (*groupSyncSpecProvidersLdapRfc2307PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapRfc2307)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapRfc2307PtrType) ToGroupSyncSpecProvidersLdapRfc2307PtrOutput() GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapRfc2307PtrType) ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307PtrOutput)
}

// RFC2307Config represents the configuration for a RFC2307 schema
type GroupSyncSpecProvidersLdapRfc2307Output struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapRfc2307Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapRfc2307)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapRfc2307Output) ToGroupSyncSpecProvidersLdapRfc2307Output() GroupSyncSpecProvidersLdapRfc2307Output {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307Output) ToGroupSyncSpecProvidersLdapRfc2307OutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307Output {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307Output) ToGroupSyncSpecProvidersLdapRfc2307PtrOutput() GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return o.ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapRfc2307Output) ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) *GroupSyncSpecProvidersLdapRfc2307 {
		return &v
	}).(GroupSyncSpecProvidersLdapRfc2307PtrOutput)
}

// GroupMembershipAttributes defines which attributes on an LDAP group entry will be interpreted  as its members. The values contained in those attributes must be queryable by your UserUIDAttribute
func (o GroupSyncSpecProvidersLdapRfc2307Output) GroupMembershipAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) []string { return v.GroupMembershipAttributes }).(pulumi.StringArrayOutput)
}

// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
func (o GroupSyncSpecProvidersLdapRfc2307Output) GroupNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) []string { return v.GroupNameAttributes }).(pulumi.StringArrayOutput)
}

// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
func (o GroupSyncSpecProvidersLdapRfc2307Output) GroupUIDAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) string { return v.GroupUIDAttribute }).(pulumi.StringOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
func (o GroupSyncSpecProvidersLdapRfc2307Output) GroupsQuery() GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) GroupSyncSpecProvidersLdapRfc2307GroupsQuery {
		return v.GroupsQuery
	}).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput)
}

// TolerateMemberNotFoundErrors determines the behavior of the LDAP sync job when missing user entries are encountered. If 'true', an LDAP query for users that doesn't find any will be tolerated and an only and error will be logged. If 'false', the LDAP sync job will fail if a query for users doesn't find any. The default value is 'false'. Misconfigured LDAP sync jobs with this flag set to 'true' can cause group membership to be removed, so it is recommended to use this flag with caution.
func (o GroupSyncSpecProvidersLdapRfc2307Output) TolerateMemberNotFoundErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) *bool { return v.TolerateMemberNotFoundErrors }).(pulumi.BoolPtrOutput)
}

// TolerateMemberOutOfScopeErrors determines the behavior of the LDAP sync job when out-of-scope user entries are encountered. If 'true', an LDAP query for a user that falls outside of the base DN given for the all user query will be tolerated and only an error will be logged. If 'false', the LDAP sync job will fail if a user query would search outside of the base DN specified by the all user query. Misconfigured LDAP sync jobs with this flag set to 'true' can result in groups missing users, so it is recommended to use this flag with caution.
func (o GroupSyncSpecProvidersLdapRfc2307Output) TolerateMemberOutOfScopeErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) *bool { return v.TolerateMemberOutOfScopeErrors }).(pulumi.BoolPtrOutput)
}

// UserNameAttributes defines which attributes on an LDAP user entry will be used, in order, as its OpenShift user name. The first attribute with a non-empty value is used. This should match your PreferredUsername setting for your LDAPPasswordIdentityProvider
func (o GroupSyncSpecProvidersLdapRfc2307Output) UserNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) []string { return v.UserNameAttributes }).(pulumi.StringArrayOutput)
}

// UserUIDAttribute defines which attribute on an LDAP user entry will be interpreted as its unique identifier. It must correspond to values that will be found from the GroupMembershipAttributes
func (o GroupSyncSpecProvidersLdapRfc2307Output) UserUIDAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) string { return v.UserUIDAttribute }).(pulumi.StringOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
func (o GroupSyncSpecProvidersLdapRfc2307Output) UsersQuery() GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307) GroupSyncSpecProvidersLdapRfc2307UsersQuery {
		return v.UsersQuery
	}).(GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput)
}

type GroupSyncSpecProvidersLdapRfc2307PtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapRfc2307PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapRfc2307)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) ToGroupSyncSpecProvidersLdapRfc2307PtrOutput() GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) ToGroupSyncSpecProvidersLdapRfc2307PtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307PtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) Elem() GroupSyncSpecProvidersLdapRfc2307Output {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) GroupSyncSpecProvidersLdapRfc2307 { return *v }).(GroupSyncSpecProvidersLdapRfc2307Output)
}

// GroupMembershipAttributes defines which attributes on an LDAP group entry will be interpreted  as its members. The values contained in those attributes must be queryable by your UserUIDAttribute
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) GroupMembershipAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) []string {
		if v == nil {
			return nil
		}
		return v.GroupMembershipAttributes
	}).(pulumi.StringArrayOutput)
}

// GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) GroupNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) []string {
		if v == nil {
			return nil
		}
		return v.GroupNameAttributes
	}).(pulumi.StringArrayOutput)
}

// GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) GroupUIDAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) *string {
		if v == nil {
			return nil
		}
		return &v.GroupUIDAttribute
	}).(pulumi.StringPtrOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) GroupsQuery() GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) *GroupSyncSpecProvidersLdapRfc2307GroupsQuery {
		if v == nil {
			return nil
		}
		return &v.GroupsQuery
	}).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput)
}

// TolerateMemberNotFoundErrors determines the behavior of the LDAP sync job when missing user entries are encountered. If 'true', an LDAP query for users that doesn't find any will be tolerated and an only and error will be logged. If 'false', the LDAP sync job will fail if a query for users doesn't find any. The default value is 'false'. Misconfigured LDAP sync jobs with this flag set to 'true' can cause group membership to be removed, so it is recommended to use this flag with caution.
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) TolerateMemberNotFoundErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) *bool {
		if v == nil {
			return nil
		}
		return v.TolerateMemberNotFoundErrors
	}).(pulumi.BoolPtrOutput)
}

// TolerateMemberOutOfScopeErrors determines the behavior of the LDAP sync job when out-of-scope user entries are encountered. If 'true', an LDAP query for a user that falls outside of the base DN given for the all user query will be tolerated and only an error will be logged. If 'false', the LDAP sync job will fail if a user query would search outside of the base DN specified by the all user query. Misconfigured LDAP sync jobs with this flag set to 'true' can result in groups missing users, so it is recommended to use this flag with caution.
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) TolerateMemberOutOfScopeErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) *bool {
		if v == nil {
			return nil
		}
		return v.TolerateMemberOutOfScopeErrors
	}).(pulumi.BoolPtrOutput)
}

// UserNameAttributes defines which attributes on an LDAP user entry will be used, in order, as its OpenShift user name. The first attribute with a non-empty value is used. This should match your PreferredUsername setting for your LDAPPasswordIdentityProvider
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) UserNameAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) []string {
		if v == nil {
			return nil
		}
		return v.UserNameAttributes
	}).(pulumi.StringArrayOutput)
}

// UserUIDAttribute defines which attribute on an LDAP user entry will be interpreted as its unique identifier. It must correspond to values that will be found from the GroupMembershipAttributes
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) UserUIDAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) *string {
		if v == nil {
			return nil
		}
		return &v.UserUIDAttribute
	}).(pulumi.StringPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
func (o GroupSyncSpecProvidersLdapRfc2307PtrOutput) UsersQuery() GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307) *GroupSyncSpecProvidersLdapRfc2307UsersQuery {
		if v == nil {
			return nil
		}
		return &v.UsersQuery
	}).(GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
type GroupSyncSpecProvidersLdapRfc2307GroupsQuery struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN string `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases *string `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter *string `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize *int `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope *string `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout *int `pulumi:"timeout"`
}

// GroupSyncSpecProvidersLdapRfc2307GroupsQueryInput is an input type that accepts GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs and GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapRfc2307GroupsQueryInput` via:
//
//          GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs{...}
type GroupSyncSpecProvidersLdapRfc2307GroupsQueryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput
	ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
type GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN pulumi.StringInput `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases pulumi.StringPtrInput `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapRfc2307GroupsQuery)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput)
}

func (i GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput).ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs, GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtr and GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput
	ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput
}

type groupSyncSpecProvidersLdapRfc2307GroupsQueryPtrType GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs

func GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtr(v *GroupSyncSpecProvidersLdapRfc2307GroupsQueryArgs) GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrInput {
	return (*groupSyncSpecProvidersLdapRfc2307GroupsQueryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapRfc2307GroupsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapRfc2307GroupsQuery)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapRfc2307GroupsQueryPtrType) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapRfc2307GroupsQueryPtrType) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput)
}

// AllGroupsQuery holds the template for an LDAP query that returns group entries.
type GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapRfc2307GroupsQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *GroupSyncSpecProvidersLdapRfc2307GroupsQuery {
		return &v
	}).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) BaseDN() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) string { return v.BaseDN }).(pulumi.StringOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string { return v.DerefAliases }).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapRfc2307GroupsQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) ToGroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) Elem() GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) GroupSyncSpecProvidersLdapRfc2307GroupsQuery {
		return *v
	}).(GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) BaseDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.BaseDN
	}).(pulumi.StringPtrOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string {
		if v == nil {
			return nil
		}
		return v.DerefAliases
	}).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307GroupsQuery) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapRfc2307UsersQuery struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN string `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases *string `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter *string `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize *int `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope *string `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout *int `pulumi:"timeout"`
}

// GroupSyncSpecProvidersLdapRfc2307UsersQueryInput is an input type that accepts GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs and GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapRfc2307UsersQueryInput` via:
//
//          GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs{...}
type GroupSyncSpecProvidersLdapRfc2307UsersQueryInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput
	ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutputWithContext(context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs struct {
	// The DN of the branch of the directory where all searches should start from
	BaseDN pulumi.StringInput `pulumi:"baseDN"`
	// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
	DerefAliases pulumi.StringPtrInput `pulumi:"derefAliases"`
	// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapRfc2307UsersQuery)(nil)).Elem()
}

func (i GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput)
}

func (i GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(context.Background())
}

func (i GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput).ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(ctx)
}

// GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrInput is an input type that accepts GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs, GroupSyncSpecProvidersLdapRfc2307UsersQueryPtr and GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput values.
// You can construct a concrete instance of `GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrInput` via:
//
//          GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs{...}
//
//  or:
//
//          nil
type GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrInput interface {
	pulumi.Input

	ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput
	ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput
}

type groupSyncSpecProvidersLdapRfc2307UsersQueryPtrType GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs

func GroupSyncSpecProvidersLdapRfc2307UsersQueryPtr(v *GroupSyncSpecProvidersLdapRfc2307UsersQueryArgs) GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrInput {
	return (*groupSyncSpecProvidersLdapRfc2307UsersQueryPtrType)(v)
}

func (*groupSyncSpecProvidersLdapRfc2307UsersQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapRfc2307UsersQuery)(nil)).Elem()
}

func (i *groupSyncSpecProvidersLdapRfc2307UsersQueryPtrType) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return i.ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(context.Background())
}

func (i *groupSyncSpecProvidersLdapRfc2307UsersQueryPtrType) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput)
}

// AllUsersQuery holds the template for an LDAP query that returns user entries.
type GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncSpecProvidersLdapRfc2307UsersQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return o.ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(context.Background())
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) *GroupSyncSpecProvidersLdapRfc2307UsersQuery {
		return &v
	}).(GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) BaseDN() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) string { return v.BaseDN }).(pulumi.StringOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string { return v.DerefAliases }).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupSyncSpecProvidersLdapRfc2307UsersQuery) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncSpecProvidersLdapRfc2307UsersQuery)(nil)).Elem()
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput() GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) ToGroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutputWithContext(ctx context.Context) GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput {
	return o
}

func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) Elem() GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) GroupSyncSpecProvidersLdapRfc2307UsersQuery {
		return *v
	}).(GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput)
}

// The DN of the branch of the directory where all searches should start from
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) BaseDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string {
		if v == nil {
			return nil
		}
		return &v.BaseDN
	}).(pulumi.StringPtrOutput)
}

// The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) DerefAliases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.DerefAliases
	}).(pulumi.StringPtrOutput)
}

// Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed
func (o GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupSyncSpecProvidersLdapRfc2307UsersQuery) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// GroupSyncStatus defines the observed state of GroupSync
type GroupSyncStatus struct {
	// Conditions is a set of Condition instances.
	Conditions []GroupSyncStatusConditions `pulumi:"conditions"`
	// LastSyncSuccessTime represents the time last synchronization completed successfully
	LastSyncSuccessTime *string `pulumi:"lastSyncSuccessTime"`
}

// GroupSyncStatusInput is an input type that accepts GroupSyncStatusArgs and GroupSyncStatusOutput values.
// You can construct a concrete instance of `GroupSyncStatusInput` via:
//
//          GroupSyncStatusArgs{...}
type GroupSyncStatusInput interface {
	pulumi.Input

	ToGroupSyncStatusOutput() GroupSyncStatusOutput
	ToGroupSyncStatusOutputWithContext(context.Context) GroupSyncStatusOutput
}

// GroupSyncStatus defines the observed state of GroupSync
type GroupSyncStatusArgs struct {
	// Conditions is a set of Condition instances.
	Conditions GroupSyncStatusConditionsArrayInput `pulumi:"conditions"`
	// LastSyncSuccessTime represents the time last synchronization completed successfully
	LastSyncSuccessTime pulumi.StringPtrInput `pulumi:"lastSyncSuccessTime"`
}

func (GroupSyncStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncStatus)(nil)).Elem()
}

func (i GroupSyncStatusArgs) ToGroupSyncStatusOutput() GroupSyncStatusOutput {
	return i.ToGroupSyncStatusOutputWithContext(context.Background())
}

func (i GroupSyncStatusArgs) ToGroupSyncStatusOutputWithContext(ctx context.Context) GroupSyncStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncStatusOutput)
}

func (i GroupSyncStatusArgs) ToGroupSyncStatusPtrOutput() GroupSyncStatusPtrOutput {
	return i.ToGroupSyncStatusPtrOutputWithContext(context.Background())
}

func (i GroupSyncStatusArgs) ToGroupSyncStatusPtrOutputWithContext(ctx context.Context) GroupSyncStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncStatusOutput).ToGroupSyncStatusPtrOutputWithContext(ctx)
}

// GroupSyncStatusPtrInput is an input type that accepts GroupSyncStatusArgs, GroupSyncStatusPtr and GroupSyncStatusPtrOutput values.
// You can construct a concrete instance of `GroupSyncStatusPtrInput` via:
//
//          GroupSyncStatusArgs{...}
//
//  or:
//
//          nil
type GroupSyncStatusPtrInput interface {
	pulumi.Input

	ToGroupSyncStatusPtrOutput() GroupSyncStatusPtrOutput
	ToGroupSyncStatusPtrOutputWithContext(context.Context) GroupSyncStatusPtrOutput
}

type groupSyncStatusPtrType GroupSyncStatusArgs

func GroupSyncStatusPtr(v *GroupSyncStatusArgs) GroupSyncStatusPtrInput {
	return (*groupSyncStatusPtrType)(v)
}

func (*groupSyncStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncStatus)(nil)).Elem()
}

func (i *groupSyncStatusPtrType) ToGroupSyncStatusPtrOutput() GroupSyncStatusPtrOutput {
	return i.ToGroupSyncStatusPtrOutputWithContext(context.Background())
}

func (i *groupSyncStatusPtrType) ToGroupSyncStatusPtrOutputWithContext(ctx context.Context) GroupSyncStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncStatusPtrOutput)
}

// GroupSyncStatus defines the observed state of GroupSync
type GroupSyncStatusOutput struct{ *pulumi.OutputState }

func (GroupSyncStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncStatus)(nil)).Elem()
}

func (o GroupSyncStatusOutput) ToGroupSyncStatusOutput() GroupSyncStatusOutput {
	return o
}

func (o GroupSyncStatusOutput) ToGroupSyncStatusOutputWithContext(ctx context.Context) GroupSyncStatusOutput {
	return o
}

func (o GroupSyncStatusOutput) ToGroupSyncStatusPtrOutput() GroupSyncStatusPtrOutput {
	return o.ToGroupSyncStatusPtrOutputWithContext(context.Background())
}

func (o GroupSyncStatusOutput) ToGroupSyncStatusPtrOutputWithContext(ctx context.Context) GroupSyncStatusPtrOutput {
	return o.ApplyT(func(v GroupSyncStatus) *GroupSyncStatus {
		return &v
	}).(GroupSyncStatusPtrOutput)
}

// Conditions is a set of Condition instances.
func (o GroupSyncStatusOutput) Conditions() GroupSyncStatusConditionsArrayOutput {
	return o.ApplyT(func(v GroupSyncStatus) []GroupSyncStatusConditions { return v.Conditions }).(GroupSyncStatusConditionsArrayOutput)
}

// LastSyncSuccessTime represents the time last synchronization completed successfully
func (o GroupSyncStatusOutput) LastSyncSuccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncStatus) *string { return v.LastSyncSuccessTime }).(pulumi.StringPtrOutput)
}

type GroupSyncStatusPtrOutput struct{ *pulumi.OutputState }

func (GroupSyncStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupSyncStatus)(nil)).Elem()
}

func (o GroupSyncStatusPtrOutput) ToGroupSyncStatusPtrOutput() GroupSyncStatusPtrOutput {
	return o
}

func (o GroupSyncStatusPtrOutput) ToGroupSyncStatusPtrOutputWithContext(ctx context.Context) GroupSyncStatusPtrOutput {
	return o
}

func (o GroupSyncStatusPtrOutput) Elem() GroupSyncStatusOutput {
	return o.ApplyT(func(v *GroupSyncStatus) GroupSyncStatus { return *v }).(GroupSyncStatusOutput)
}

// Conditions is a set of Condition instances.
func (o GroupSyncStatusPtrOutput) Conditions() GroupSyncStatusConditionsArrayOutput {
	return o.ApplyT(func(v *GroupSyncStatus) []GroupSyncStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(GroupSyncStatusConditionsArrayOutput)
}

// LastSyncSuccessTime represents the time last synchronization completed successfully
func (o GroupSyncStatusPtrOutput) LastSyncSuccessTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupSyncStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastSyncSuccessTime
	}).(pulumi.StringPtrOutput)
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type GroupSyncStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
	Reason *string `pulumi:"reason"`
	Status string  `pulumi:"status"`
	// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
	//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
	Type string `pulumi:"type"`
}

// GroupSyncStatusConditionsInput is an input type that accepts GroupSyncStatusConditionsArgs and GroupSyncStatusConditionsOutput values.
// You can construct a concrete instance of `GroupSyncStatusConditionsInput` via:
//
//          GroupSyncStatusConditionsArgs{...}
type GroupSyncStatusConditionsInput interface {
	pulumi.Input

	ToGroupSyncStatusConditionsOutput() GroupSyncStatusConditionsOutput
	ToGroupSyncStatusConditionsOutputWithContext(context.Context) GroupSyncStatusConditionsOutput
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type GroupSyncStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Status pulumi.StringInput    `pulumi:"status"`
	// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
	//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
	Type pulumi.StringInput `pulumi:"type"`
}

func (GroupSyncStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncStatusConditions)(nil)).Elem()
}

func (i GroupSyncStatusConditionsArgs) ToGroupSyncStatusConditionsOutput() GroupSyncStatusConditionsOutput {
	return i.ToGroupSyncStatusConditionsOutputWithContext(context.Background())
}

func (i GroupSyncStatusConditionsArgs) ToGroupSyncStatusConditionsOutputWithContext(ctx context.Context) GroupSyncStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncStatusConditionsOutput)
}

// GroupSyncStatusConditionsArrayInput is an input type that accepts GroupSyncStatusConditionsArray and GroupSyncStatusConditionsArrayOutput values.
// You can construct a concrete instance of `GroupSyncStatusConditionsArrayInput` via:
//
//          GroupSyncStatusConditionsArray{ GroupSyncStatusConditionsArgs{...} }
type GroupSyncStatusConditionsArrayInput interface {
	pulumi.Input

	ToGroupSyncStatusConditionsArrayOutput() GroupSyncStatusConditionsArrayOutput
	ToGroupSyncStatusConditionsArrayOutputWithContext(context.Context) GroupSyncStatusConditionsArrayOutput
}

type GroupSyncStatusConditionsArray []GroupSyncStatusConditionsInput

func (GroupSyncStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSyncStatusConditions)(nil)).Elem()
}

func (i GroupSyncStatusConditionsArray) ToGroupSyncStatusConditionsArrayOutput() GroupSyncStatusConditionsArrayOutput {
	return i.ToGroupSyncStatusConditionsArrayOutputWithContext(context.Background())
}

func (i GroupSyncStatusConditionsArray) ToGroupSyncStatusConditionsArrayOutputWithContext(ctx context.Context) GroupSyncStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSyncStatusConditionsArrayOutput)
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type GroupSyncStatusConditionsOutput struct{ *pulumi.OutputState }

func (GroupSyncStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSyncStatusConditions)(nil)).Elem()
}

func (o GroupSyncStatusConditionsOutput) ToGroupSyncStatusConditionsOutput() GroupSyncStatusConditionsOutput {
	return o
}

func (o GroupSyncStatusConditionsOutput) ToGroupSyncStatusConditionsOutputWithContext(ctx context.Context) GroupSyncStatusConditionsOutput {
	return o
}

func (o GroupSyncStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o GroupSyncStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
func (o GroupSyncStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupSyncStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o GroupSyncStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
func (o GroupSyncStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSyncStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type GroupSyncStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (GroupSyncStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSyncStatusConditions)(nil)).Elem()
}

func (o GroupSyncStatusConditionsArrayOutput) ToGroupSyncStatusConditionsArrayOutput() GroupSyncStatusConditionsArrayOutput {
	return o
}

func (o GroupSyncStatusConditionsArrayOutput) ToGroupSyncStatusConditionsArrayOutputWithContext(ctx context.Context) GroupSyncStatusConditionsArrayOutput {
	return o
}

func (o GroupSyncStatusConditionsArrayOutput) Index(i pulumi.IntInput) GroupSyncStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupSyncStatusConditions {
		return vs[0].([]GroupSyncStatusConditions)[vs[1].(int)]
	}).(GroupSyncStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(GroupSyncTypeOutput{})
	pulumi.RegisterOutputType(GroupSyncMetadataOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersArrayOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersAzureOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersAzurePtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersAzureCredentialsSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersAzureCredentialsSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGithubOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGithubPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGithubCaSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGithubCaSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGithubCredentialsSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGithubCredentialsSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGitlabOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGitlabPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGitlabCaSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGitlabCaSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGitlabCredentialsSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersGitlabCredentialsSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersKeycloakOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersKeycloakPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersKeycloakCaSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersKeycloakCaSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersKeycloakCredentialsSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersKeycloakCredentialsSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapActiveDirectoryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapActiveDirectoryUsersQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryGroupsQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapAugmentedActiveDirectoryUsersQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapCaSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapCaSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapCredentialsSecretOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapCredentialsSecretPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapGroupUIDNameMappingOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapRfc2307Output{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapRfc2307PtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapRfc2307GroupsQueryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapRfc2307GroupsQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapRfc2307UsersQueryOutput{})
	pulumi.RegisterOutputType(GroupSyncSpecProvidersLdapRfc2307UsersQueryPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncStatusOutput{})
	pulumi.RegisterOutputType(GroupSyncStatusPtrOutput{})
	pulumi.RegisterOutputType(GroupSyncStatusConditionsOutput{})
	pulumi.RegisterOutputType(GroupSyncStatusConditionsArrayOutput{})
}
