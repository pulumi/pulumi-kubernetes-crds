// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Postgresql.V1Alpha1
{

    [OutputType]
    public sealed class DatabaseSpec
    {
        /// <summary>
        /// Name of the configMap key where the operator should looking for the value for the database name for its env var Default value: nil
        /// </summary>
        public readonly string ConfigMapDatabaseNameKey;
        /// <summary>
        /// Name of the configMap key where the operator should looking for the value for the database user for its env var Default value: nil
        /// </summary>
        public readonly string ConfigMapDatabasePasswordKey;
        /// <summary>
        /// Name of the configMap key where the operator should looking for the value for the database password for its env var Default value: nil
        /// </summary>
        public readonly string ConfigMapDatabaseUserKey;
        /// <summary>
        /// Name of the ConfigMap where the operator should looking for the EnvVars keys and/or values only Default value: nil
        /// </summary>
        public readonly string ConfigMapName;
        /// <summary>
        /// Policy definition to pull the Database Image More info: https://kubernetes.io/docs/concepts/containers/images/
        /// </summary>
        public readonly string ContainerImagePullPolicy;
        /// <summary>
        /// Name to create the Database container
        /// </summary>
        public readonly string ContainerName;
        /// <summary>
        /// CPU resource request which will be available for the database container Default value: 10Mi
        /// </summary>
        public readonly string DatabaseCpu;
        /// <summary>
        /// Limit of CPU request which will be available for the database container Default value: 20Mi
        /// </summary>
        public readonly string DatabaseCpuLimit;
        /// <summary>
        /// Limit of Memory which will be available for the database container Default value: 512Mi
        /// </summary>
        public readonly string DatabaseMemoryLimit;
        /// <summary>
        /// Limit of Memory Request which will be available for the database container Default value: 128Mi
        /// </summary>
        public readonly string DatabaseMemoryRequest;
        /// <summary>
        /// Value for the Database Environment Variable (spec.databaseNameKeyEnvVar). Default value: example
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// Key Value for the Database Environment Variable in order to inform the database mame Note that each database version/image can expected a different value for it. Default value: nil
        /// </summary>
        public readonly string DatabaseNameKeyEnvVar;
        /// <summary>
        /// Value for the Database Environment Variable (spec.databasePasswordKeyEnvVar). Default value: postgres
        /// </summary>
        public readonly string DatabasePassword;
        /// <summary>
        /// Key Value for the Database Environment Variable in order to inform the database password Note that each database version/image can expected a different value for it. Default value: nil
        /// </summary>
        public readonly string DatabasePasswordKeyEnvVar;
        /// <summary>
        /// Value for the Database Environment Variable in order to define the port which it should use. It will be used in its container as well
        /// </summary>
        public readonly int DatabasePort;
        /// <summary>
        /// Limit of Storage Request which will be available for the database container Default value: 1Gi
        /// </summary>
        public readonly string DatabaseStorageRequest;
        /// <summary>
        /// Value for the Database Environment Variable (spec.databaseUserKeyEnvVar). Default value: postgres
        /// </summary>
        public readonly string DatabaseUser;
        /// <summary>
        /// Key Value for the Database Environment Variable in order to inform the database user Note that each database version/image can expected a different value for it. Default value: nil
        /// </summary>
        public readonly string DatabaseUserKeyEnvVar;
        /// <summary>
        /// Database image:tag Default value: centos/postgresql-96-centos7
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Quantity of instances Default value: 1 +operator-sdk:gen-csv:customresourcedefinitions.specDescriptors=true
        /// </summary>
        public readonly int Size;

        [OutputConstructor]
        private DatabaseSpec(
            string configMapDatabaseNameKey,

            string configMapDatabasePasswordKey,

            string configMapDatabaseUserKey,

            string configMapName,

            string containerImagePullPolicy,

            string containerName,

            string databaseCpu,

            string databaseCpuLimit,

            string databaseMemoryLimit,

            string databaseMemoryRequest,

            string databaseName,

            string databaseNameKeyEnvVar,

            string databasePassword,

            string databasePasswordKeyEnvVar,

            int databasePort,

            string databaseStorageRequest,

            string databaseUser,

            string databaseUserKeyEnvVar,

            string image,

            int size)
        {
            ConfigMapDatabaseNameKey = configMapDatabaseNameKey;
            ConfigMapDatabasePasswordKey = configMapDatabasePasswordKey;
            ConfigMapDatabaseUserKey = configMapDatabaseUserKey;
            ConfigMapName = configMapName;
            ContainerImagePullPolicy = containerImagePullPolicy;
            ContainerName = containerName;
            DatabaseCpu = databaseCpu;
            DatabaseCpuLimit = databaseCpuLimit;
            DatabaseMemoryLimit = databaseMemoryLimit;
            DatabaseMemoryRequest = databaseMemoryRequest;
            DatabaseName = databaseName;
            DatabaseNameKeyEnvVar = databaseNameKeyEnvVar;
            DatabasePassword = databasePassword;
            DatabasePasswordKeyEnvVar = databasePasswordKeyEnvVar;
            DatabasePort = databasePort;
            DatabaseStorageRequest = databaseStorageRequest;
            DatabaseUser = databaseUser;
            DatabaseUserKeyEnvVar = databaseUserKeyEnvVar;
            Image = image;
            Size = size;
        }
    }
}
