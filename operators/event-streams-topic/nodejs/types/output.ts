// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace ibmcloud {
    export namespace v1alpha1 {
        export interface TopicSpec {
            apiKey?: outputs.ibmcloud.v1alpha1.TopicSpecApiKey;
            bindingFrom?: outputs.ibmcloud.v1alpha1.TopicSpecBindingFrom;
            configs?: outputs.ibmcloud.v1alpha1.TopicSpecConfigs[];
            kafkaAdminUrl?: outputs.ibmcloud.v1alpha1.TopicSpecKafkaAdminUrl;
            numPartitions?: number;
            replicationFactor?: number;
            topicName: string;
        }

        export interface TopicSpecApiKey {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: {[key: string]: any};
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: {[key: string]: any};
        }

        export interface TopicSpecBindingFrom {
            name: string;
            namespace?: string;
        }

        export interface TopicSpecConfigs {
            /**
             * A parameter may have attributes (e.g. message hub topic might have partitions)
             */
            attributes?: {[key: string]: any};
            /**
             * Name representing the key.
             */
            name: string;
            /**
             * Defaults to null.
             */
            value?: any;
            /**
             * Source for the value. Cannot be used if value is not empty.
             */
            valueFrom?: outputs.ibmcloud.v1alpha1.TopicSpecConfigsValueFrom;
        }

        /**
         * Source for the value. Cannot be used if value is not empty.
         */
        export interface TopicSpecConfigsValueFrom {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: {[key: string]: any};
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: {[key: string]: any};
        }

        export interface TopicSpecKafkaAdminUrl {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: {[key: string]: any};
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: {[key: string]: any};
        }

        export interface TopicStatus {
            message?: string;
            state?: string;
        }
    }
}
