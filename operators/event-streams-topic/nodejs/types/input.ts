// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace ibmcloud {
    export namespace v1alpha1 {
        export interface TopicSpec {
            apiKey?: pulumi.Input<inputs.ibmcloud.v1alpha1.TopicSpecApiKey>;
            bindingFrom?: pulumi.Input<inputs.ibmcloud.v1alpha1.TopicSpecBindingFrom>;
            configs?: pulumi.Input<pulumi.Input<inputs.ibmcloud.v1alpha1.TopicSpecConfigs>[]>;
            kafkaAdminUrl?: pulumi.Input<inputs.ibmcloud.v1alpha1.TopicSpecKafkaAdminUrl>;
            numPartitions?: pulumi.Input<number>;
            replicationFactor?: pulumi.Input<number>;
            topicName: pulumi.Input<string>;
        }

        export interface TopicSpecApiKey {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: pulumi.Input<{[key: string]: any}>;
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: pulumi.Input<{[key: string]: any}>;
        }

        export interface TopicSpecBindingFrom {
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TopicSpecConfigs {
            /**
             * A parameter may have attributes (e.g. message hub topic might have partitions)
             */
            attributes?: pulumi.Input<{[key: string]: any}>;
            /**
             * Name representing the key.
             */
            name: pulumi.Input<string>;
            /**
             * Defaults to null.
             */
            value?: any;
            /**
             * Source for the value. Cannot be used if value is not empty.
             */
            valueFrom?: pulumi.Input<inputs.ibmcloud.v1alpha1.TopicSpecConfigsValueFrom>;
        }

        /**
         * Source for the value. Cannot be used if value is not empty.
         */
        export interface TopicSpecConfigsValueFrom {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: pulumi.Input<{[key: string]: any}>;
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: pulumi.Input<{[key: string]: any}>;
        }

        export interface TopicSpecKafkaAdminUrl {
            /**
             * Selects a key of a ConfigMap.
             */
            configMapKeyRef?: pulumi.Input<{[key: string]: any}>;
            /**
             * Selects a key of a secret in the resource namespace
             */
            secretKeyRef?: pulumi.Input<{[key: string]: any}>;
        }

        export interface TopicStatus {
            message?: pulumi.Input<string>;
            state?: pulumi.Input<string>;
        }
    }
}
