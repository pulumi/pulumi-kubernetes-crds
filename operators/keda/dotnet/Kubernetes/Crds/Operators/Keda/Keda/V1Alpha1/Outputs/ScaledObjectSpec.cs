// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1
{

    [OutputType]
    public sealed class ScaledObjectSpec
    {
        public readonly int CooldownPeriod;
        /// <summary>
        /// JobSpec describes how the job execution will look like.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1.ScaledObjectSpecJobTargetRef JobTargetRef;
        public readonly int MaxReplicaCount;
        public readonly int MinReplicaCount;
        public readonly int PollingInterval;
        /// <summary>
        /// ObjectReference holds the a reference to the deployment this ScaledObject applies
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1.ScaledObjectSpecScaleTargetRef ScaleTargetRef;
        /// <summary>
        /// ScaledObjectScaleType distinguish between Deployment based and K8s Jobs
        /// </summary>
        public readonly string ScaleType;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1.ScaledObjectSpecTriggers> Triggers;

        [OutputConstructor]
        private ScaledObjectSpec(
            int cooldownPeriod,

            Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1.ScaledObjectSpecJobTargetRef jobTargetRef,

            int maxReplicaCount,

            int minReplicaCount,

            int pollingInterval,

            Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1.ScaledObjectSpecScaleTargetRef scaleTargetRef,

            string scaleType,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Keda.V1Alpha1.ScaledObjectSpecTriggers> triggers)
        {
            CooldownPeriod = cooldownPeriod;
            JobTargetRef = jobTargetRef;
            MaxReplicaCount = maxReplicaCount;
            MinReplicaCount = minReplicaCount;
            PollingInterval = pollingInterval;
            ScaleTargetRef = scaleTargetRef;
            ScaleType = scaleType;
            Triggers = triggers;
        }
    }
}
