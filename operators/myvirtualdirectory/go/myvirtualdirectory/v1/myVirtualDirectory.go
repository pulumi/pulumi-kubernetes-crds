// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MyVirtualDirectory struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	Spec       pulumi.AnyOutput           `pulumi:"spec"`
}

// NewMyVirtualDirectory registers a new resource with the given unique name, arguments, and options.
func NewMyVirtualDirectory(ctx *pulumi.Context,
	name string, args *MyVirtualDirectoryArgs, opts ...pulumi.ResourceOption) (*MyVirtualDirectory, error) {
	if args == nil {
		args = &MyVirtualDirectoryArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("myvirtualdirectory.tremolo.io/v1")
	args.Kind = pulumi.StringPtr("MyVirtualDirectory")
	var resource MyVirtualDirectory
	err := ctx.RegisterResource("kubernetes:myvirtualdirectory.tremolo.io/v1:MyVirtualDirectory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMyVirtualDirectory gets an existing MyVirtualDirectory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMyVirtualDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MyVirtualDirectoryState, opts ...pulumi.ResourceOption) (*MyVirtualDirectory, error) {
	var resource MyVirtualDirectory
	err := ctx.ReadResource("kubernetes:myvirtualdirectory.tremolo.io/v1:MyVirtualDirectory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MyVirtualDirectory resources.
type myVirtualDirectoryState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       interface{}        `pulumi:"spec"`
}

type MyVirtualDirectoryState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       pulumi.Input
}

func (MyVirtualDirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*myVirtualDirectoryState)(nil)).Elem()
}

type myVirtualDirectoryArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       interface{}        `pulumi:"spec"`
}

// The set of arguments for constructing a MyVirtualDirectory resource.
type MyVirtualDirectoryArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       pulumi.Input
}

func (MyVirtualDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*myVirtualDirectoryArgs)(nil)).Elem()
}
