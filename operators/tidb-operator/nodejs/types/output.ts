// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace pingcap {
    export namespace v1alpha1 {
        export interface BackupScheduleSpec {
            backupTemplate: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplate;
            imagePullSecrets?: outputs.pingcap.v1alpha1.BackupScheduleSpecImagePullSecrets[];
            maxBackups?: number;
            maxReservedTime?: string;
            pause?: boolean;
            schedule: string;
            storageClassName?: string;
            storageSize?: string;
        }

        export interface BackupScheduleSpecBackupTemplate {
            affinity?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinity;
            backupType?: string;
            br?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateBr;
            cleanData?: boolean;
            dumpling?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateDumpling;
            from?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateFrom;
            gcs?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateGcs;
            imagePullSecrets?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateImagePullSecrets[];
            resources?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateResources;
            s3?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateS3;
            serviceAccount?: string;
            storageClassName?: string;
            storageSize?: string;
            tikvGCLifeTime?: string;
            tolerations?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateTolerations[];
            useKMS?: boolean;
        }

        export interface BackupScheduleSpecBackupTemplateAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinity;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupScheduleSpecBackupTemplateAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateBr {
            checksum?: boolean;
            cluster: string;
            clusterNamespace?: string;
            concurrency?: number;
            db?: string;
            logLevel?: string;
            onLine?: boolean;
            rateLimit?: number;
            sendCredToTikv?: boolean;
            statusAddr?: string;
            table?: string;
            timeAgo?: string;
        }

        export interface BackupScheduleSpecBackupTemplateDumpling {
            options?: string[];
            tableFilter?: string[];
        }

        export interface BackupScheduleSpecBackupTemplateFrom {
            host: string;
            port?: number;
            secretName: string;
            tlsClientSecretName?: string;
            user?: string;
        }

        export interface BackupScheduleSpecBackupTemplateGcs {
            bucket?: string;
            bucketAcl?: string;
            location?: string;
            objectAcl?: string;
            path?: string;
            prefix?: string;
            projectId: string;
            secretName: string;
            storageClass?: string;
        }

        export interface BackupScheduleSpecBackupTemplateImagePullSecrets {
            name?: string;
        }

        export interface BackupScheduleSpecBackupTemplateResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface BackupScheduleSpecBackupTemplateS3 {
            acl?: string;
            bucket?: string;
            endpoint?: string;
            options?: string[];
            path?: string;
            prefix?: string;
            provider: string;
            region?: string;
            secretName?: string;
            sse?: string;
            storageClass?: string;
        }

        export interface BackupScheduleSpecBackupTemplateTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface BackupScheduleSpecImagePullSecrets {
            name?: string;
        }

        export interface BackupSpec {
            affinity?: outputs.pingcap.v1alpha1.BackupSpecAffinity;
            backupType?: string;
            br?: outputs.pingcap.v1alpha1.BackupSpecBr;
            cleanData?: boolean;
            dumpling?: outputs.pingcap.v1alpha1.BackupSpecDumpling;
            from?: outputs.pingcap.v1alpha1.BackupSpecFrom;
            gcs?: outputs.pingcap.v1alpha1.BackupSpecGcs;
            imagePullSecrets?: outputs.pingcap.v1alpha1.BackupSpecImagePullSecrets[];
            resources?: outputs.pingcap.v1alpha1.BackupSpecResources;
            s3?: outputs.pingcap.v1alpha1.BackupSpecS3;
            serviceAccount?: string;
            storageClassName?: string;
            storageSize?: string;
            tikvGCLifeTime?: string;
            tolerations?: outputs.pingcap.v1alpha1.BackupSpecTolerations[];
            useKMS?: boolean;
        }

        export interface BackupSpecAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinity;
        }

        export interface BackupSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface BackupSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface BackupSpecBr {
            checksum?: boolean;
            cluster: string;
            clusterNamespace?: string;
            concurrency?: number;
            db?: string;
            logLevel?: string;
            onLine?: boolean;
            rateLimit?: number;
            sendCredToTikv?: boolean;
            statusAddr?: string;
            table?: string;
            timeAgo?: string;
        }

        export interface BackupSpecDumpling {
            options?: string[];
            tableFilter?: string[];
        }

        export interface BackupSpecFrom {
            host: string;
            port?: number;
            secretName: string;
            tlsClientSecretName?: string;
            user?: string;
        }

        export interface BackupSpecGcs {
            bucket?: string;
            bucketAcl?: string;
            location?: string;
            objectAcl?: string;
            path?: string;
            prefix?: string;
            projectId: string;
            secretName: string;
            storageClass?: string;
        }

        export interface BackupSpecImagePullSecrets {
            name?: string;
        }

        export interface BackupSpecResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface BackupSpecS3 {
            acl?: string;
            bucket?: string;
            endpoint?: string;
            options?: string[];
            path?: string;
            prefix?: string;
            provider: string;
            region?: string;
            secretName?: string;
            sse?: string;
            storageClass?: string;
        }

        export interface BackupSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface RestoreSpec {
            affinity?: outputs.pingcap.v1alpha1.RestoreSpecAffinity;
            backupType?: string;
            br?: outputs.pingcap.v1alpha1.RestoreSpecBr;
            gcs?: outputs.pingcap.v1alpha1.RestoreSpecGcs;
            imagePullSecrets?: outputs.pingcap.v1alpha1.RestoreSpecImagePullSecrets[];
            resources?: outputs.pingcap.v1alpha1.RestoreSpecResources;
            s3?: outputs.pingcap.v1alpha1.RestoreSpecS3;
            serviceAccount?: string;
            storageClassName?: string;
            storageSize?: string;
            tikvGCLifeTime?: string;
            to?: outputs.pingcap.v1alpha1.RestoreSpecTo;
            tolerations?: outputs.pingcap.v1alpha1.RestoreSpecTolerations[];
            useKMS?: boolean;
        }

        export interface RestoreSpecAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinity;
        }

        export interface RestoreSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface RestoreSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RestoreSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface RestoreSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface RestoreSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RestoreSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.RestoreSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface RestoreSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RestoreSpecBr {
            checksum?: boolean;
            cluster: string;
            clusterNamespace?: string;
            concurrency?: number;
            db?: string;
            logLevel?: string;
            onLine?: boolean;
            rateLimit?: number;
            sendCredToTikv?: boolean;
            statusAddr?: string;
            table?: string;
            timeAgo?: string;
        }

        export interface RestoreSpecGcs {
            bucket?: string;
            bucketAcl?: string;
            location?: string;
            objectAcl?: string;
            path?: string;
            prefix?: string;
            projectId: string;
            secretName: string;
            storageClass?: string;
        }

        export interface RestoreSpecImagePullSecrets {
            name?: string;
        }

        export interface RestoreSpecResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface RestoreSpecS3 {
            acl?: string;
            bucket?: string;
            endpoint?: string;
            options?: string[];
            path?: string;
            prefix?: string;
            provider: string;
            region?: string;
            secretName?: string;
            sse?: string;
            storageClass?: string;
        }

        export interface RestoreSpecTo {
            host: string;
            port?: number;
            secretName: string;
            tlsClientSecretName?: string;
            user?: string;
        }

        export interface RestoreSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterAutoScalerSpec {
            cluster: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecCluster;
            metricsUrl?: string;
            monitor?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecMonitor;
            tidb?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidb;
            tikv?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikv;
        }

        export interface TidbClusterAutoScalerSpecCluster {
            name: string;
            namespace?: string;
        }

        export interface TidbClusterAutoScalerSpecMonitor {
            grafanaEnabled?: boolean;
            name: string;
            namespace?: string;
        }

        export interface TidbClusterAutoScalerSpecTidb {
            externalEndpoint?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbExternalEndpoint;
            maxReplicas: number;
            metrics?: any[];
            metricsTimeDuration?: string;
            minReplicas?: number;
            scaleInIntervalSeconds?: number;
            scaleOutIntervalSeconds?: number;
        }

        export interface TidbClusterAutoScalerSpecTidbExternalEndpoint {
            host: string;
            path: string;
            port: number;
            tlsSecret?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTidbExternalEndpointTlsSecret;
        }

        export interface TidbClusterAutoScalerSpecTidbExternalEndpointTlsSecret {
            name: string;
            namespace: string;
        }

        export interface TidbClusterAutoScalerSpecTikv {
            externalEndpoint?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvExternalEndpoint;
            maxReplicas: number;
            metrics?: any[];
            metricsTimeDuration?: string;
            minReplicas?: number;
            scaleInIntervalSeconds?: number;
            scaleOutIntervalSeconds?: number;
        }

        export interface TidbClusterAutoScalerSpecTikvExternalEndpoint {
            host: string;
            path: string;
            port: number;
            tlsSecret?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerSpecTikvExternalEndpointTlsSecret;
        }

        export interface TidbClusterAutoScalerSpecTikvExternalEndpointTlsSecret {
            name: string;
            namespace: string;
        }

        export interface TidbClusterAutoScalerStatus {
            tidb?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerStatusTidb;
            tikv?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerStatusTikv;
        }

        export interface TidbClusterAutoScalerStatusTidb {
            currentReplicas: number;
            lastAutoScalingTimestamp?: string;
            metrics?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerStatusTidbMetrics[];
            recommendedReplicas?: number;
        }

        export interface TidbClusterAutoScalerStatusTidbMetrics {
            availableStorage?: string;
            baselineAvailableStorage?: string;
            capacityStorage?: string;
            currentValue?: string;
            name: string;
            storagePressure?: boolean;
            storagePressureStartTime?: string;
            thresholdValue?: string;
        }

        export interface TidbClusterAutoScalerStatusTikv {
            currentReplicas: number;
            lastAutoScalingTimestamp?: string;
            metrics?: outputs.pingcap.v1alpha1.TidbClusterAutoScalerStatusTikvMetrics[];
            recommendedReplicas?: number;
        }

        export interface TidbClusterAutoScalerStatusTikvMetrics {
            availableStorage?: string;
            baselineAvailableStorage?: string;
            capacityStorage?: string;
            currentValue?: string;
            name: string;
            storagePressure?: boolean;
            storagePressureStartTime?: string;
            thresholdValue?: string;
        }

        export interface TidbClusterSpec {
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinity;
            annotations?: {[key: string]: any};
            configUpdateStrategy?: string;
            discovery?: outputs.pingcap.v1alpha1.TidbClusterSpecDiscovery;
            enableDynamicConfiguration?: boolean;
            enablePVReclaim?: boolean;
            helper?: outputs.pingcap.v1alpha1.TidbClusterSpecHelper;
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecImagePullSecrets[];
            nodeSelector?: {[key: string]: any};
            paused?: boolean;
            pd: outputs.pingcap.v1alpha1.TidbClusterSpecPd;
            priorityClassName?: string;
            pump?: outputs.pingcap.v1alpha1.TidbClusterSpecPump;
            pvReclaimPolicy?: string;
            schedulerName?: string;
            ticdc?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdc;
            tidb: outputs.pingcap.v1alpha1.TidbClusterSpecTidb;
            tiflash?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflash;
            tikv: outputs.pingcap.v1alpha1.TidbClusterSpecTikv;
            timezone?: string;
            tlsCluster?: any;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecDiscovery {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecHelper {
            image?: string;
            imagePullPolicy?: string;
        }

        export interface TidbClusterSpecImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecPd {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainers[];
            additionalVolumes?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumes[];
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinity;
            annotations?: {[key: string]: any};
            baseImage?: string;
            config?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfig;
            configUpdateStrategy?: string;
            dataSubDir?: string;
            enableDashboardInternalProxy?: boolean;
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecPdEnv[];
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecPdImagePullSecrets[];
            limits?: {[key: string]: any};
            maxFailoverCount?: number;
            nodeSelector?: {[key: string]: any};
            podSecurityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecPdPodSecurityContext;
            priorityClassName?: string;
            replicas: number;
            requests?: {[key: string]: any};
            schedulerName?: string;
            service?: outputs.pingcap.v1alpha1.TidbClusterSpecPdService;
            storageClassName?: string;
            terminationGracePeriodSeconds?: number;
            tlsClientSecretName?: string;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecPdTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvValueFrom;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStop;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecPdAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecPdAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecPdAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecPdAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecPdAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbClusterSpecPdAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbClusterSpecPdAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbClusterSpecPdAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbClusterSpecPdAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumes {
            awsElasticBlockStore?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesAwsElasticBlockStore;
            azureDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesAzureDisk;
            azureFile?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesAzureFile;
            cephfs?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesCephfs;
            cinder?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesCinder;
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesConfigMap;
            csi?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesCsi;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesDownwardAPI;
            emptyDir?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesEmptyDir;
            fc?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesFc;
            flexVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesFlexVolume;
            flocker?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesFlocker;
            gcePersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesGcePersistentDisk;
            gitRepo?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesGitRepo;
            glusterfs?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesGlusterfs;
            hostPath?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesHostPath;
            iscsi?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesIscsi;
            name: string;
            nfs?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesNfs;
            persistentVolumeClaim?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesPortworxVolume;
            projected?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjected;
            quobyte?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesQuobyte;
            rbd?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesRbd;
            scaleIO?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesScaleIO;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesSecret;
            storageos?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesStorageos;
            vsphereVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesVsphereVolume;
        }

        export interface TidbClusterSpecPdAdditionalVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesCephfsSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesCephfsSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesCinderSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: any};
        }

        export interface TidbClusterSpecPdAdditionalVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesDownwardAPIItems[];
        }

        export interface TidbClusterSpecPdAdditionalVolumesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecPdAdditionalVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesEmptyDir {
            medium?: string;
            sizeLimit?: any;
        }

        export interface TidbClusterSpecPdAdditionalVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface TidbClusterSpecPdAdditionalVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: any};
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesFlexVolumeSecretRef;
        }

        export interface TidbClusterSpecPdAdditionalVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesIscsiSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjected {
            defaultMode?: number;
            sources: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSources[];
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSources {
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesServiceAccountToken;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesConfigMap {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPI {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesSecret {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesRbdSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesRbdSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesSecret {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAdditionalVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesStorageosSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPdAdditionalVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface TidbClusterSpecPdAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecPdAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPdAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPdAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPdAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPdAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPdConfig {
            auto-compaction-mode?: string;
            auto-compaction-retention-v2?: string;
            cluster-version?: string;
            dashboard?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigDashboard;
            election-interval?: string;
            enable-grpc-gateway?: boolean;
            enable-prevote?: boolean;
            force-new-cluster?: boolean;
            label-property?: {[key: string]: any};
            lease?: number;
            log?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigLog;
            log-file?: string;
            log-level?: string;
            metric?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigMetric;
            namespace?: {[key: string]: any};
            namespace-classifier?: string;
            pd-server?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigPd-Server;
            quota-backend-bytes?: string;
            replication?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigReplication;
            schedule?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigSchedule;
            security?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigSecurity;
            tikv-interval?: string;
            tso-save-interval?: string;
        }

        export interface TidbClusterSpecPdConfigDashboard {
            disable-telemetry?: boolean;
            internal-proxy?: boolean;
            public-path-prefix?: string;
            tidb-cacert-path?: string;
            tidb-cert-path?: string;
            tidb-key-path?: string;
        }

        export interface TidbClusterSpecPdConfigLog {
            development?: boolean;
            disable-caller?: boolean;
            disable-error-verbose?: boolean;
            disable-stacktrace?: boolean;
            disable-timestamp?: boolean;
            file?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigLogFile;
            format?: string;
            level?: string;
        }

        export interface TidbClusterSpecPdConfigLogFile {
            filename?: string;
            log-rotate?: boolean;
            max-backups?: number;
            max-days?: number;
            max-size?: number;
        }

        export interface TidbClusterSpecPdConfigMetric {
            address?: string;
            interval?: string;
            job?: string;
        }

        export interface TidbClusterSpecPdConfigPd-Server {
            metric-storage?: string;
            use-region-storage?: string;
        }

        export interface TidbClusterSpecPdConfigReplication {
            enable-placement-rules?: string;
            max-replicas?: number;
            strictly-match-label?: string;
        }

        export interface TidbClusterSpecPdConfigSchedule {
            disable-location-replacement?: string;
            disable-make-up-replica?: string;
            disable-namespace-relocation?: string;
            disable-raft-learner?: string;
            disable-remove-down-replica?: string;
            disable-remove-extra-replica?: string;
            disable-replace-offline-replica?: string;
            enable-cross-table-merge?: string;
            enable-one-way-merge?: string;
            high-space-ratio?: number;
            hot-region-cache-hits-threshold?: number;
            hot-region-schedule-limit?: number;
            leader-schedule-limit?: number;
            low-space-ratio?: number;
            max-merge-region-keys?: number;
            max-merge-region-size?: number;
            max-pending-peer-count?: number;
            max-snapshot-count?: number;
            max-store-down-time?: string;
            merge-schedule-limit?: number;
            patrol-region-interval?: string;
            region-schedule-limit?: number;
            replica-schedule-limit?: number;
            schedulers-payload?: {[key: string]: any};
            schedulers-v2?: outputs.pingcap.v1alpha1.TidbClusterSpecPdConfigScheduleSchedulers-V2[];
            split-merge-interval?: string;
            tolerant-size-ratio?: number;
        }

        export interface TidbClusterSpecPdConfigScheduleSchedulers-V2 {
            args?: string[];
            disable?: boolean;
            type?: string;
        }

        export interface TidbClusterSpecPdConfigSecurity {
            cacert-path?: string;
            cert-path?: string;
            key-path?: string;
        }

        export interface TidbClusterSpecPdEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValueFrom;
        }

        export interface TidbClusterSpecPdEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPdEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecPdEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPdEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPdEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPdImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecPdPodSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdPodSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.pingcap.v1alpha1.TidbClusterSpecPdPodSecurityContextSysctls[];
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPdPodSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecPdPodSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecPdPodSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPdPodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecPdService {
            annotations?: {[key: string]: any};
            clusterIP?: string;
            loadBalancerIP?: string;
            loadBalancerSourceRanges?: string[];
            portName?: string;
            type?: string;
        }

        export interface TidbClusterSpecPdTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterSpecPump {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainers[];
            additionalVolumes?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumes[];
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinity;
            annotations?: {[key: string]: any};
            baseImage?: string;
            config?: {[key: string]: any};
            configUpdateStrategy?: string;
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpEnv[];
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpImagePullSecrets[];
            limits?: {[key: string]: any};
            nodeSelector?: {[key: string]: any};
            podSecurityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpPodSecurityContext;
            priorityClassName?: string;
            replicas: number;
            requests?: {[key: string]: any};
            schedulerName?: string;
            storageClassName?: string;
            terminationGracePeriodSeconds?: number;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvValueFrom;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStop;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecPumpAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecPumpAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecPumpAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecPumpAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbClusterSpecPumpAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbClusterSpecPumpAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbClusterSpecPumpAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumes {
            awsElasticBlockStore?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesAwsElasticBlockStore;
            azureDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesAzureDisk;
            azureFile?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesAzureFile;
            cephfs?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesCephfs;
            cinder?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesCinder;
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesConfigMap;
            csi?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesCsi;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesDownwardAPI;
            emptyDir?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesEmptyDir;
            fc?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesFc;
            flexVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesFlexVolume;
            flocker?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesFlocker;
            gcePersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesGcePersistentDisk;
            gitRepo?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesGitRepo;
            glusterfs?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesGlusterfs;
            hostPath?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesHostPath;
            iscsi?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesIscsi;
            name: string;
            nfs?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesNfs;
            persistentVolumeClaim?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesPortworxVolume;
            projected?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjected;
            quobyte?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesQuobyte;
            rbd?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesRbd;
            scaleIO?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesScaleIO;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesSecret;
            storageos?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesStorageos;
            vsphereVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesVsphereVolume;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesCephfsSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesCephfsSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesCinderSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: any};
        }

        export interface TidbClusterSpecPumpAdditionalVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesDownwardAPIItems[];
        }

        export interface TidbClusterSpecPumpAdditionalVolumesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesEmptyDir {
            medium?: string;
            sizeLimit?: any;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface TidbClusterSpecPumpAdditionalVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: any};
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesFlexVolumeSecretRef;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesIscsiSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjected {
            defaultMode?: number;
            sources: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSources[];
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSources {
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesServiceAccountToken;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesConfigMap {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPI {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesSecret {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesRbdSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesRbdSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesSecret {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAdditionalVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesStorageosSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecPumpAdditionalVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface TidbClusterSpecPumpAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPumpAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecPumpAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecPumpEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValueFrom;
        }

        export interface TidbClusterSpecPumpEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecPumpEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecPumpEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecPumpEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecPumpImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecPumpPodSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpPodSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpPodSecurityContextSysctls[];
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecPumpPodSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecPumpPodSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecPumpPodSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecPumpPodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecPumpTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterSpecTicdc {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainers[];
            additionalVolumes?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumes[];
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinity;
            annotations?: {[key: string]: any};
            baseImage?: string;
            config?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcConfig;
            configUpdateStrategy?: string;
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnv[];
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcImagePullSecrets[];
            limits?: {[key: string]: any};
            nodeSelector?: {[key: string]: any};
            podSecurityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodSecurityContext;
            priorityClassName?: string;
            replicas: number;
            requests?: {[key: string]: any};
            schedulerName?: string;
            serviceAccount?: string;
            terminationGracePeriodSeconds?: number;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvValueFrom;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStop;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTicdcAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTicdcAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbClusterSpecTicdcAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumes {
            awsElasticBlockStore?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesAwsElasticBlockStore;
            azureDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesAzureDisk;
            azureFile?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesAzureFile;
            cephfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesCephfs;
            cinder?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesCinder;
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesConfigMap;
            csi?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesCsi;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesDownwardAPI;
            emptyDir?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesEmptyDir;
            fc?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesFc;
            flexVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesFlexVolume;
            flocker?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesFlocker;
            gcePersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesGcePersistentDisk;
            gitRepo?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesGitRepo;
            glusterfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesGlusterfs;
            hostPath?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesHostPath;
            iscsi?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesIscsi;
            name: string;
            nfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesNfs;
            persistentVolumeClaim?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesPortworxVolume;
            projected?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjected;
            quobyte?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesQuobyte;
            rbd?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesRbd;
            scaleIO?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesScaleIO;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesSecret;
            storageos?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesStorageos;
            vsphereVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesVsphereVolume;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesCephfsSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesCephfsSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesCinderSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: any};
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesEmptyDir {
            medium?: string;
            sizeLimit?: any;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: any};
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesFlexVolumeSecretRef;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesIscsiSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjected {
            defaultMode?: number;
            sources: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSources[];
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSources {
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesServiceAccountToken;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesConfigMap {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPI {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesSecret {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesRbdSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesRbdSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesSecret {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAdditionalVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesStorageosSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTicdcAdditionalVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface TidbClusterSpecTicdcAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTicdcAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTicdcAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTicdcConfig {
            gcTTL?: number;
            logFile?: string;
            logLevel?: string;
            timezone?: string;
        }

        export interface TidbClusterSpecTicdcEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValueFrom;
        }

        export interface TidbClusterSpecTicdcEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTicdcEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTicdcEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTicdcEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTicdcImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecTicdcPodSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodSecurityContextSysctls[];
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTicdcPodSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTicdcPodSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTicdcPodSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTicdcPodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTicdcTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterSpecTidb {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainers[];
            additionalVolumes?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumes[];
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinity;
            annotations?: {[key: string]: any};
            baseImage?: string;
            binlogEnabled?: boolean;
            config?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfig;
            configUpdateStrategy?: string;
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbEnv[];
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbImagePullSecrets[];
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecycle;
            limits?: {[key: string]: any};
            maxFailoverCount?: number;
            nodeSelector?: {[key: string]: any};
            plugins?: string[];
            podSecurityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbPodSecurityContext;
            priorityClassName?: string;
            replicas: number;
            requests?: {[key: string]: any};
            schedulerName?: string;
            separateSlowLog?: boolean;
            service?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbService;
            slowLogTailer?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbSlowLogTailer;
            terminationGracePeriodSeconds?: number;
            tlsClient?: any;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvValueFrom;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStop;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTidbAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTidbAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTidbAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTidbAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTidbAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbClusterSpecTidbAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumes {
            awsElasticBlockStore?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesAwsElasticBlockStore;
            azureDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesAzureDisk;
            azureFile?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesAzureFile;
            cephfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesCephfs;
            cinder?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesCinder;
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesConfigMap;
            csi?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesCsi;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesDownwardAPI;
            emptyDir?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesEmptyDir;
            fc?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesFc;
            flexVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesFlexVolume;
            flocker?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesFlocker;
            gcePersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesGcePersistentDisk;
            gitRepo?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesGitRepo;
            glusterfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesGlusterfs;
            hostPath?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesHostPath;
            iscsi?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesIscsi;
            name: string;
            nfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesNfs;
            persistentVolumeClaim?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesPortworxVolume;
            projected?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjected;
            quobyte?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesQuobyte;
            rbd?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesRbd;
            scaleIO?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesScaleIO;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesSecret;
            storageos?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesStorageos;
            vsphereVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesVsphereVolume;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesCephfsSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesCephfsSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesCinderSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbAdditionalVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTidbAdditionalVolumesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesEmptyDir {
            medium?: string;
            sizeLimit?: any;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface TidbClusterSpecTidbAdditionalVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: any};
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesFlexVolumeSecretRef;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesIscsiSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjected {
            defaultMode?: number;
            sources: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSources[];
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSources {
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesServiceAccountToken;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesConfigMap {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPI {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesSecret {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesRbdSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesRbdSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesSecret {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAdditionalVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesStorageosSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTidbAdditionalVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface TidbClusterSpecTidbAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTidbConfig {
            alter-primary-key?: boolean;
            binlog?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigBinlog;
            check-mb4-value-in-utf8?: boolean;
            compatible-kill-query?: boolean;
            cors?: string;
            delay-clean-table-lock?: number;
            enable-batch-dml?: boolean;
            enable-dynamic-config?: boolean;
            enable-streaming?: boolean;
            enable-table-lock?: boolean;
            enable-telemetry?: boolean;
            experimental?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigExperimental;
            isolation-read?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigIsolation-Read;
            lease?: string;
            log?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigLog;
            lower-case-table-names?: number;
            max-server-connections?: number;
            mem-quota-query?: number;
            new_collations_enabled_on_first_bootstrap?: boolean;
            oom-action?: string;
            oom-use-tmp-storage?: boolean;
            opentracing?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigOpentracing;
            performance?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigPerformance;
            pessimistic-txn?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigPessimistic-Txn;
            plugin?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigPlugin;
            prepared-plan-cache?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigPrepared-Plan-Cache;
            proxy-protocol?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigProxy-Protocol;
            repair-mode?: boolean;
            repair-table-list?: string[];
            run-ddl?: boolean;
            security?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigSecurity;
            socket?: string;
            split-region-max-num?: number;
            split-table?: boolean;
            status?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigStatus;
            stmt-summary?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigStmt-Summary;
            tikv-client?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigTikv-Client;
            tmp-storage-path?: string;
            tmp-storage-quota?: number;
            token-limit?: number;
            treat-old-version-utf8-as-utf8mb4?: boolean;
            txn-local-latches?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigTxn-Local-Latches;
        }

        export interface TidbClusterSpecTidbConfigBinlog {
            binlog-socket?: string;
            enable?: boolean;
            ignore-error?: boolean;
            strategy?: string;
            write-timeout?: string;
        }

        export interface TidbClusterSpecTidbConfigExperimental {
            allow-auto-random?: boolean;
            allow-expression-index?: boolean;
        }

        export interface TidbClusterSpecTidbConfigIsolation-Read {
            engines?: string[];
        }

        export interface TidbClusterSpecTidbConfigLog {
            disable-timestamp?: boolean;
            enable-error-stack?: boolean;
            enable-slow-log?: boolean;
            enable-timestamp?: boolean;
            expensive-threshold?: number;
            file?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigLogFile;
            format?: string;
            level?: string;
            query-log-max-len?: number;
            record-plan-in-slow-log?: number;
            slow-query-file?: string;
            slow-threshold?: number;
        }

        export interface TidbClusterSpecTidbConfigLogFile {
            filename?: string;
            log-rotate?: boolean;
            max-backups?: number;
            max-days?: number;
            max-size?: number;
        }

        export interface TidbClusterSpecTidbConfigOpentracing {
            enable?: boolean;
            reporter?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigOpentracingReporter;
            rpc-metrics?: boolean;
            sampler?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbConfigOpentracingSampler;
        }

        export interface TidbClusterSpecTidbConfigOpentracingReporter {
            buffer-flush-interval?: number;
            local-agent-host-port?: string;
            log-spans?: boolean;
            queue-size?: number;
        }

        export interface TidbClusterSpecTidbConfigOpentracingSampler {
            max-operations?: number;
            param?: number;
            sampling-refresh-interval?: number;
            sampling-server-url?: string;
            type?: string;
        }

        export interface TidbClusterSpecTidbConfigPerformance {
            agg-push-down-join?: boolean;
            bind-info-lease?: string;
            committer-concurrency?: number;
            cross-join?: boolean;
            feedback-probability?: number;
            force-priority?: string;
            max-memory?: number;
            max-procs?: number;
            max-txn-ttl?: number;
            pseudo-estimate-ratio?: number;
            query-feedback-limit?: number;
            run-auto-analyze?: boolean;
            stats-lease?: string;
            stmt-count-limit?: number;
            tcp-keep-alive?: boolean;
            txn-entry-count-limit?: number;
            txn-total-size-limit?: number;
        }

        export interface TidbClusterSpecTidbConfigPessimistic-Txn {
            enable?: boolean;
            max-retry-count?: number;
        }

        export interface TidbClusterSpecTidbConfigPlugin {
            dir?: string;
            load?: string;
        }

        export interface TidbClusterSpecTidbConfigPrepared-Plan-Cache {
            capacity?: number;
            enabled?: boolean;
            memory-guard-ratio?: number;
        }

        export interface TidbClusterSpecTidbConfigProxy-Protocol {
            header-timeout?: number;
            networks?: string;
        }

        export interface TidbClusterSpecTidbConfigSecurity {
            cluster-ssl-ca?: string;
            cluster-ssl-cert?: string;
            cluster-ssl-key?: string;
            skip-grant-table?: boolean;
            ssl-ca?: string;
            ssl-cert?: string;
            ssl-key?: string;
        }

        export interface TidbClusterSpecTidbConfigStatus {
            metrics-addr?: string;
            metrics-interval?: number;
            record-db-qps?: boolean;
            report-status?: boolean;
        }

        export interface TidbClusterSpecTidbConfigStmt-Summary {
            enable?: boolean;
            enable-internal-query?: boolean;
            history-size?: number;
            max-sql-length?: number;
            max-stmt-count?: number;
            refresh-interval?: number;
        }

        export interface TidbClusterSpecTidbConfigTikv-Client {
            batch-wait-size?: number;
            commit-timeout?: string;
            copr-cache?: any;
            grpc-connection-count?: number;
            grpc-keepalive-time?: number;
            grpc-keepalive-timeout?: number;
            max-batch-size?: number;
            max-batch-wait-time?: number;
            max-txn-time-use?: number;
            overload-threshold?: number;
            region-cache-ttl?: number;
            store-limit?: number;
            store-liveness-timeout?: string;
        }

        export interface TidbClusterSpecTidbConfigTxn-Local-Latches {
            capacity?: number;
            enabled?: boolean;
        }

        export interface TidbClusterSpecTidbEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValueFrom;
        }

        export interface TidbClusterSpecTidbEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTidbEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTidbEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTidbEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTidbImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecTidbLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStop;
        }

        export interface TidbClusterSpecTidbLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecTidbLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecTidbLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecTidbLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecTidbLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecTidbLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecTidbLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTidbLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecTidbLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTidbLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecTidbLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecTidbPodSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbPodSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbPodSecurityContextSysctls[];
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTidbPodSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTidbPodSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTidbPodSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTidbPodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTidbService {
            exposeStatus?: boolean;
            externalTrafficPolicy?: string;
        }

        export interface TidbClusterSpecTidbSlowLogTailer {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTidbTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterSpecTiflash {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainers[];
            additionalVolumes?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumes[];
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinity;
            annotations?: {[key: string]: any};
            baseImage?: string;
            config?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashConfig;
            configUpdateStrategy?: string;
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnv[];
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashImagePullSecrets[];
            limits?: {[key: string]: any};
            logTailer?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashLogTailer;
            maxFailoverCount?: number;
            nodeSelector?: {[key: string]: any};
            podSecurityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodSecurityContext;
            priorityClassName?: string;
            privileged?: boolean;
            replicas: number;
            requests?: {[key: string]: any};
            schedulerName?: string;
            serviceAccount?: string;
            storageClaims: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashStorageClaims[];
            terminationGracePeriodSeconds?: number;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvValueFrom;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStop;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTiflashAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbClusterSpecTiflashAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumes {
            awsElasticBlockStore?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesAwsElasticBlockStore;
            azureDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesAzureDisk;
            azureFile?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesAzureFile;
            cephfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesCephfs;
            cinder?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesCinder;
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesConfigMap;
            csi?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesCsi;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesDownwardAPI;
            emptyDir?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesEmptyDir;
            fc?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesFc;
            flexVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesFlexVolume;
            flocker?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesFlocker;
            gcePersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesGcePersistentDisk;
            gitRepo?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesGitRepo;
            glusterfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesGlusterfs;
            hostPath?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesHostPath;
            iscsi?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesIscsi;
            name: string;
            nfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesNfs;
            persistentVolumeClaim?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesPortworxVolume;
            projected?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjected;
            quobyte?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesQuobyte;
            rbd?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesRbd;
            scaleIO?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesScaleIO;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesSecret;
            storageos?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesStorageos;
            vsphereVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesVsphereVolume;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesCephfsSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesCephfsSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesCinderSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesEmptyDir {
            medium?: string;
            sizeLimit?: any;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: any};
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesFlexVolumeSecretRef;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesIscsiSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjected {
            defaultMode?: number;
            sources: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSources[];
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSources {
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesServiceAccountToken;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesConfigMap {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPI {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesSecret {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesRbdSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesRbdSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesSecret {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAdditionalVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesStorageosSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTiflashAdditionalVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface TidbClusterSpecTiflashAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTiflashConfig {
            config?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashConfigConfig;
        }

        export interface TidbClusterSpecTiflashConfigConfig {
            flash?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashConfigConfigFlash;
            logger?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashConfigConfigLogger;
            mark_cache_size?: number;
            minmax_index_cache_size?: number;
            path_realtime_mode?: boolean;
        }

        export interface TidbClusterSpecTiflashConfigConfigFlash {
            compact_log_min_period?: number;
            flash_cluster?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashConfigConfigFlashFlash_cluster;
            overlap_threshold?: number;
        }

        export interface TidbClusterSpecTiflashConfigConfigFlashFlash_cluster {
            master_ttl?: number;
            refresh_interval?: number;
            update_rule_interval?: number;
        }

        export interface TidbClusterSpecTiflashConfigConfigLogger {
            count?: number;
            level?: string;
            size?: string;
        }

        export interface TidbClusterSpecTiflashEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValueFrom;
        }

        export interface TidbClusterSpecTiflashEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTiflashEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTiflashEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTiflashEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTiflashImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecTiflashLogTailer {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashPodSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodSecurityContextSysctls[];
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashPodSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTiflashPodSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTiflashPodSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTiflashPodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTiflashStorageClaims {
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecTiflashStorageClaimsResources;
            storageClassName?: string;
        }

        export interface TidbClusterSpecTiflashStorageClaimsResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTiflashTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterSpecTikv {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainers[];
            additionalVolumes?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumes[];
            affinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinity;
            annotations?: {[key: string]: any};
            baseImage?: string;
            config?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfig;
            configUpdateStrategy?: string;
            dataSubDir?: string;
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvEnv[];
            hostNetwork?: boolean;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvImagePullSecrets[];
            limits?: {[key: string]: any};
            maxFailoverCount?: number;
            nodeSelector?: {[key: string]: any};
            podSecurityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvPodSecurityContext;
            priorityClassName?: string;
            privileged?: boolean;
            replicas: number;
            requests?: {[key: string]: any};
            schedulerName?: string;
            serviceAccount?: string;
            storageClassName?: string;
            terminationGracePeriodSeconds?: number;
            tolerations?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvTolerations[];
            version?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvValueFrom;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStop;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTikvAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTikvAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbClusterSpecTikvAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTikvAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbClusterSpecTikvAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbClusterSpecTikvAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbClusterSpecTikvAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumes {
            awsElasticBlockStore?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesAwsElasticBlockStore;
            azureDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesAzureDisk;
            azureFile?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesAzureFile;
            cephfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesCephfs;
            cinder?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesCinder;
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesConfigMap;
            csi?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesCsi;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesDownwardAPI;
            emptyDir?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesEmptyDir;
            fc?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesFc;
            flexVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesFlexVolume;
            flocker?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesFlocker;
            gcePersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesGcePersistentDisk;
            gitRepo?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesGitRepo;
            glusterfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesGlusterfs;
            hostPath?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesHostPath;
            iscsi?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesIscsi;
            name: string;
            nfs?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesNfs;
            persistentVolumeClaim?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesPortworxVolume;
            projected?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjected;
            quobyte?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesQuobyte;
            rbd?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesRbd;
            scaleIO?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesScaleIO;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesSecret;
            storageos?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesStorageos;
            vsphereVolume?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesVsphereVolume;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesCephfsSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesCephfsSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesCinderSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesConfigMap {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: any};
        }

        export interface TidbClusterSpecTikvAdditionalVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesDownwardAPI {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTikvAdditionalVolumesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesEmptyDir {
            medium?: string;
            sizeLimit?: any;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface TidbClusterSpecTikvAdditionalVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: any};
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesFlexVolumeSecretRef;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesIscsiSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjected {
            defaultMode?: number;
            sources: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSources[];
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSources {
            configMap?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesConfigMap;
            downwardAPI?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPI;
            secret?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesSecret;
            serviceAccountToken?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesServiceAccountToken;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesConfigMap {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesConfigMapItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesConfigMapItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPI {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPIItems[];
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPIItems {
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef;
            mode?: number;
            path: string;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPIItemsFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesDownwardAPIItemsResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesSecret {
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesProjectedSourcesSecretItems[];
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesRbdSecretRef;
            user?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesRbdSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesSecret {
            defaultMode?: number;
            items?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesSecretItems[];
            optional?: boolean;
            secretName?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesSecretItems {
            key: string;
            mode?: number;
            path: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAdditionalVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesStorageosSecretRef {
            name?: string;
        }

        export interface TidbClusterSpecTikvAdditionalVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface TidbClusterSpecTikvAffinity {
            nodeAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinity;
            podAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinity;
            podAntiAffinity?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinity;
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTikvAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: any};
        }

        export interface TidbClusterSpecTikvAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface TidbClusterSpecTikvConfig {
            coprocessor?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigCoprocessor;
            gc?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigGc;
            import?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigImport;
            log-file?: string;
            log-level?: string;
            log-rotation-size?: string;
            log-rotation-timespan?: string;
            panic-when-unexpected-key-or-data?: boolean;
            pd?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigPd;
            pessimistic-txn?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigPessimistic-Txn;
            raftdb?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRaftdb;
            raftstore?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRaftstore;
            readpool?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigReadpool;
            refresh-config-interval?: string;
            rocksdb?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdb;
            security?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigSecurity;
            server?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigServer;
            slow-log-file?: string;
            slow-log-threshold?: string;
            storage?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigStorage;
        }

        export interface TidbClusterSpecTikvConfigCoprocessor {
            batch-split-limit?: number;
            region-max-keys?: number;
            region-max-size?: string;
            region-split-keys?: number;
            region-split-size?: string;
            split-region-on-table?: boolean;
        }

        export interface TidbClusterSpecTikvConfigGc {
            	batch-keys?: number;
            	max-write-bytes-per-sec?: string;
        }

        export interface TidbClusterSpecTikvConfigImport {
            import-dir?: string;
            max-open-engines?: number;
            max-prepare-duration?: string;
            num-import-jobs?: number;
            num-import-sst-jobs?: number;
            num-threads?: number;
            region-split-size?: string;
            stream-channel-window?: number;
            upload-speed-limit?: string;
        }

        export interface TidbClusterSpecTikvConfigPd {
            endpoints?: string[];
            retry-interval?: string;
            retry-log-every?: number;
            retry-max-count?: number;
        }

        export interface TidbClusterSpecTikvConfigPessimistic-Txn {
            enabled?: boolean;
            pipelined?: boolean;
            wait-for-lock-timeout?: string;
            wake-up-delay-duration?: string;
        }

        export interface TidbClusterSpecTikvConfigRaftdb {
            allow-concurrent-memtable-write?: boolean;
            bytes-per-sync?: string;
            compaction-readahead-size?: string;
            create-if-missing?: boolean;
            defaultcf?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRaftdbDefaultcf;
            enable-pipelined-write?: boolean;
            enable-statistics?: boolean;
            info-log-dir?: string;
            info-log-keep-log-file-num?: number;
            info-log-max-size?: string;
            info-log-roll-time?: string;
            max-background-jobs?: number;
            max-manifest-file-size?: string;
            max-open-files?: number;
            max-sub-compactions?: number;
            max-total-wal-size?: string;
            stats-dump-period?: string;
            use-direct-io-for-flush-and-compaction?: boolean;
            wal-bytes-per-sync?: string;
            wal-dir?: string;
            wal-recovery-mode?: string;
            wal-size-limit?: string;
            wal-ttl-seconds?: number;
            writable-file-max-buffer-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRaftdbDefaultcf {
            block-based-bloom-filter?: boolean;
            block-cache-size?: string;
            block-size?: string;
            bloom-filter-bits-per-key?: number;
            cache-index-and-filter-blocks?: boolean;
            compaction-pri?: number;
            compaction-style?: number;
            compression-per-level?: string[];
            disable-auto-compactions?: boolean;
            disable-block-cache?: boolean;
            dynamic-level-bytes?: boolean;
            enable-doubly-skiplist?: boolean;
            force-consistency-checks?: boolean;
            hard-pending-compaction-bytes-limit?: string;
            level0-file-num-compaction-trigger?: number;
            level0-slowdown-writes-trigger?: number;
            level0-stop-writes-trigger?: number;
            max-bytes-for-level-base?: string;
            max-bytes-for-level-multiplier?: number;
            max-compaction-bytes?: string;
            max-write-buffer-number?: number;
            min-write-buffer-number-to-merge?: number;
            num-levels?: number;
            optimize-filters-for-hits?: boolean;
            pin-l0-filter-and-index-blocks?: boolean;
            prop-keys-index-distance?: number;
            prop-size-index-distance?: number;
            read-amp-bytes-per-bit?: number;
            soft-pending-compaction-bytes-limit?: string;
            target-file-size-base?: string;
            titan?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRaftdbDefaultcfTitan;
            use-bloom-filter?: boolean;
            whole-key-filtering?: boolean;
            write-buffer-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRaftdbDefaultcfTitan {
            blob-cache-size?: string;
            blob-file-compression?: string;
            blob-run-mode?: string;
            discardable-ratio?: number;
            gc-merge-rewrite?: boolean;
            level_merge?: boolean;
            max-gc-batch-size?: string;
            merge-small-file-threshold?: string;
            min-blob-size?: string;
            min-gc-batch-size?: string;
            sample-ratio?: number;
        }

        export interface TidbClusterSpecTikvConfigRaftstore {
            abnormal-leader-missing-duration?: string;
            allow-remove-leader?: boolean;
            apply-early?: boolean;
            apply-max-batch-size?: number;
            apply-pool-size?: number;
            apply-yield-duration?: string;
            clean-stale-peer-delay?: string;
            cleanup-import-sst-interval?: string;
            consistency-check-interval?: string;
            dev-assert?: boolean;
            hibernate-regions?: boolean;
            leader-transfer-max-log-lag?: number;
            lock-cf-compact-bytes-threshold?: string;
            lock-cf-compact-interval?: string;
            max-leader-missing-duration?: string;
            max-peer-down-duration?: string;
            merge-check-tick-interval?: string;
            merge-max-log-gap?: number;
            messages-per-tick?: number;
            notify-capacity?: number;
            pd-heartbeat-tick-interval?: string;
            pd-store-heartbeat-tick-interval?: string;
            peer-stale-state-check-interval?: string;
            perf-level?: number;
            prevote?: boolean;
            raft-base-tick-interval?: string;
            raft-election-timeout-ticks?: number;
            raft-entry-cache-life-time?: string;
            raft-entry-max-size?: string;
            raft-heartbeat-ticks?: number;
            raft-log-gc-count-limit?: number;
            raft-log-gc-size-limit?: string;
            raft-log-gc-threshold?: number;
            raft-log-gc-tick-interval?: string;
            raft-max-inflight-msgs?: number;
            raft-max-size-per-msg?: string;
            raft-reject-transfer-leader-duration?: string;
            raft-store-max-leader-lease?: string;
            region-compact-check-interval?: string;
            region-compact-check-step?: number;
            region-compact-min-tombstones?: number;
            region-compact-tombstones-percent?: number;
            region-split-check-diff?: string;
            report-region-flow-interval?: string;
            right-derive-when-split?: boolean;
            snap-apply-batch-size?: string;
            snap-gc-timeout?: string;
            snap-mgr-gc-tick-interval?: string;
            split-region-check-tick-interval?: string;
            store-max-batch-size?: number;
            store-pool-size?: number;
            store-reschedule-duration?: string;
            sync-log?: boolean;
            use-delete-range?: boolean;
        }

        export interface TidbClusterSpecTikvConfigReadpool {
            coprocessor?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigReadpoolCoprocessor;
            storage?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigReadpoolStorage;
            unified?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigReadpoolUnified;
        }

        export interface TidbClusterSpecTikvConfigReadpoolCoprocessor {
            high-concurrency?: number;
            low-concurrency?: number;
            max-tasks-per-worker-high?: number;
            max-tasks-per-worker-low?: number;
            max-tasks-per-worker-normal?: number;
            normal-concurrency?: number;
            stack-size?: string;
            use-unified-pool?: boolean;
        }

        export interface TidbClusterSpecTikvConfigReadpoolStorage {
            high-concurrency?: number;
            low-concurrency?: number;
            max-tasks-per-worker-high?: number;
            max-tasks-per-worker-low?: number;
            max-tasks-per-worker-normal?: number;
            normal-concurrency?: number;
            stack-size?: string;
            use-unified-pool?: boolean;
        }

        export interface TidbClusterSpecTikvConfigReadpoolUnified {
            max-tasks-per-worker?: number;
            max-thread-count?: number;
            min-thread-count?: number;
            stack-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRocksdb {
            auto-tuned?: boolean;
            bytes-per-sync?: string;
            compaction-readahead-size?: string;
            create-if-missing?: boolean;
            defaultcf?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbDefaultcf;
            enable-pipelined-write?: boolean;
            enable-statistics?: boolean;
            info-log-dir?: string;
            info-log-keep-log-file-num?: number;
            info-log-max-size?: string;
            info-log-roll-time?: string;
            lockcf?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbLockcf;
            max-background-jobs?: number;
            max-manifest-file-size?: string;
            max-open-files?: number;
            max-sub-compactions?: number;
            max-total-wal-size?: string;
            raftcf?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbRaftcf;
            rate-bytes-per-sec?: string;
            rate-limiter-mode?: number;
            stats-dump-period?: string;
            titan?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbTitan;
            use-direct-io-for-flush-and-compaction?: boolean;
            wal-bytes-per-sync?: string;
            wal-recovery-mode?: number;
            wal-size-limit?: string;
            wal-ttl-seconds?: number;
            writable-file-max-buffer-size?: string;
            writecf?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbWritecf;
        }

        export interface TidbClusterSpecTikvConfigRocksdbDefaultcf {
            block-based-bloom-filter?: boolean;
            block-cache-size?: string;
            block-size?: string;
            bloom-filter-bits-per-key?: number;
            cache-index-and-filter-blocks?: boolean;
            compaction-pri?: number;
            compaction-style?: number;
            compression-per-level?: string[];
            disable-auto-compactions?: boolean;
            disable-block-cache?: boolean;
            dynamic-level-bytes?: boolean;
            enable-doubly-skiplist?: boolean;
            force-consistency-checks?: boolean;
            hard-pending-compaction-bytes-limit?: string;
            level0-file-num-compaction-trigger?: number;
            level0-slowdown-writes-trigger?: number;
            level0-stop-writes-trigger?: number;
            max-bytes-for-level-base?: string;
            max-bytes-for-level-multiplier?: number;
            max-compaction-bytes?: string;
            max-write-buffer-number?: number;
            min-write-buffer-number-to-merge?: number;
            num-levels?: number;
            optimize-filters-for-hits?: boolean;
            pin-l0-filter-and-index-blocks?: boolean;
            prop-keys-index-distance?: number;
            prop-size-index-distance?: number;
            read-amp-bytes-per-bit?: number;
            soft-pending-compaction-bytes-limit?: string;
            target-file-size-base?: string;
            titan?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbDefaultcfTitan;
            use-bloom-filter?: boolean;
            whole-key-filtering?: boolean;
            write-buffer-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRocksdbDefaultcfTitan {
            blob-cache-size?: string;
            blob-file-compression?: string;
            blob-run-mode?: string;
            discardable-ratio?: number;
            gc-merge-rewrite?: boolean;
            level_merge?: boolean;
            max-gc-batch-size?: string;
            merge-small-file-threshold?: string;
            min-blob-size?: string;
            min-gc-batch-size?: string;
            sample-ratio?: number;
        }

        export interface TidbClusterSpecTikvConfigRocksdbLockcf {
            block-based-bloom-filter?: boolean;
            block-cache-size?: string;
            block-size?: string;
            bloom-filter-bits-per-key?: number;
            cache-index-and-filter-blocks?: boolean;
            compaction-pri?: number;
            compaction-style?: number;
            compression-per-level?: string[];
            disable-auto-compactions?: boolean;
            disable-block-cache?: boolean;
            dynamic-level-bytes?: boolean;
            enable-doubly-skiplist?: boolean;
            force-consistency-checks?: boolean;
            hard-pending-compaction-bytes-limit?: string;
            level0-file-num-compaction-trigger?: number;
            level0-slowdown-writes-trigger?: number;
            level0-stop-writes-trigger?: number;
            max-bytes-for-level-base?: string;
            max-bytes-for-level-multiplier?: number;
            max-compaction-bytes?: string;
            max-write-buffer-number?: number;
            min-write-buffer-number-to-merge?: number;
            num-levels?: number;
            optimize-filters-for-hits?: boolean;
            pin-l0-filter-and-index-blocks?: boolean;
            prop-keys-index-distance?: number;
            prop-size-index-distance?: number;
            read-amp-bytes-per-bit?: number;
            soft-pending-compaction-bytes-limit?: string;
            target-file-size-base?: string;
            titan?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbLockcfTitan;
            use-bloom-filter?: boolean;
            whole-key-filtering?: boolean;
            write-buffer-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRocksdbLockcfTitan {
            blob-cache-size?: string;
            blob-file-compression?: string;
            blob-run-mode?: string;
            discardable-ratio?: number;
            gc-merge-rewrite?: boolean;
            level_merge?: boolean;
            max-gc-batch-size?: string;
            merge-small-file-threshold?: string;
            min-blob-size?: string;
            min-gc-batch-size?: string;
            sample-ratio?: number;
        }

        export interface TidbClusterSpecTikvConfigRocksdbRaftcf {
            block-based-bloom-filter?: boolean;
            block-cache-size?: string;
            block-size?: string;
            bloom-filter-bits-per-key?: number;
            cache-index-and-filter-blocks?: boolean;
            compaction-pri?: number;
            compaction-style?: number;
            compression-per-level?: string[];
            disable-auto-compactions?: boolean;
            disable-block-cache?: boolean;
            dynamic-level-bytes?: boolean;
            enable-doubly-skiplist?: boolean;
            force-consistency-checks?: boolean;
            hard-pending-compaction-bytes-limit?: string;
            level0-file-num-compaction-trigger?: number;
            level0-slowdown-writes-trigger?: number;
            level0-stop-writes-trigger?: number;
            max-bytes-for-level-base?: string;
            max-bytes-for-level-multiplier?: number;
            max-compaction-bytes?: string;
            max-write-buffer-number?: number;
            min-write-buffer-number-to-merge?: number;
            num-levels?: number;
            optimize-filters-for-hits?: boolean;
            pin-l0-filter-and-index-blocks?: boolean;
            prop-keys-index-distance?: number;
            prop-size-index-distance?: number;
            read-amp-bytes-per-bit?: number;
            soft-pending-compaction-bytes-limit?: string;
            target-file-size-base?: string;
            titan?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbRaftcfTitan;
            use-bloom-filter?: boolean;
            whole-key-filtering?: boolean;
            write-buffer-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRocksdbRaftcfTitan {
            blob-cache-size?: string;
            blob-file-compression?: string;
            blob-run-mode?: string;
            discardable-ratio?: number;
            gc-merge-rewrite?: boolean;
            level_merge?: boolean;
            max-gc-batch-size?: string;
            merge-small-file-threshold?: string;
            min-blob-size?: string;
            min-gc-batch-size?: string;
            sample-ratio?: number;
        }

        export interface TidbClusterSpecTikvConfigRocksdbTitan {
            dirname?: string;
            disable-gc?: boolean;
            enabled?: boolean;
            max-background-gc?: number;
            purge-obsolete-files-period?: string;
        }

        export interface TidbClusterSpecTikvConfigRocksdbWritecf {
            block-based-bloom-filter?: boolean;
            block-cache-size?: string;
            block-size?: string;
            bloom-filter-bits-per-key?: number;
            cache-index-and-filter-blocks?: boolean;
            compaction-pri?: number;
            compaction-style?: number;
            compression-per-level?: string[];
            disable-auto-compactions?: boolean;
            disable-block-cache?: boolean;
            dynamic-level-bytes?: boolean;
            enable-doubly-skiplist?: boolean;
            force-consistency-checks?: boolean;
            hard-pending-compaction-bytes-limit?: string;
            level0-file-num-compaction-trigger?: number;
            level0-slowdown-writes-trigger?: number;
            level0-stop-writes-trigger?: number;
            max-bytes-for-level-base?: string;
            max-bytes-for-level-multiplier?: number;
            max-compaction-bytes?: string;
            max-write-buffer-number?: number;
            min-write-buffer-number-to-merge?: number;
            num-levels?: number;
            optimize-filters-for-hits?: boolean;
            pin-l0-filter-and-index-blocks?: boolean;
            prop-keys-index-distance?: number;
            prop-size-index-distance?: number;
            read-amp-bytes-per-bit?: number;
            soft-pending-compaction-bytes-limit?: string;
            target-file-size-base?: string;
            titan?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigRocksdbWritecfTitan;
            use-bloom-filter?: boolean;
            whole-key-filtering?: boolean;
            write-buffer-size?: string;
        }

        export interface TidbClusterSpecTikvConfigRocksdbWritecfTitan {
            blob-cache-size?: string;
            blob-file-compression?: string;
            blob-run-mode?: string;
            discardable-ratio?: number;
            gc-merge-rewrite?: boolean;
            level_merge?: boolean;
            max-gc-batch-size?: string;
            merge-small-file-threshold?: string;
            min-blob-size?: string;
            min-gc-batch-size?: string;
            sample-ratio?: number;
        }

        export interface TidbClusterSpecTikvConfigSecurity {
            ca-path?: string;
            cert-path?: string;
            cipher-file?: string;
            encryption?: any;
            key-path?: string;
            override-ssl-target?: string;
        }

        export interface TidbClusterSpecTikvConfigServer {
            concurrent-recv-snap-limit?: number;
            concurrent-send-snap-limit?: number;
            enable-request-batch?: boolean;
            end-point-batch-row-limit?: number;
            end-point-enable-batch-if-possible?: number;
            end-point-recursion-limit?: number;
            end-point-request-max-handle-duration?: string;
            end-point-stream-batch-row-limit?: number;
            end-point-stream-channel-size?: number;
            grpc-compression-type?: string;
            grpc-concurrency?: number;
            grpc-concurrent-stream?: number;
            grpc-keepalive-time?: string;
            grpc-keepalive-timeout?: string;
            grpc-memory-pool-quota?: string;
            grpc-raft-conn-num?: number;
            grpc-stream-initial-window-size?: string;
            heavy-load-threshold?: number;
            heavy-load-wait-duration?: string;
            labels?: {[key: string]: any};
            request-batch-enable-cross-command?: boolean;
            request-batch-wait-duration?: string;
            snap-max-total-size?: string;
            snap-max-write-bytes-per-sec?: string;
            stats-concurrency?: number;
            status-thread-pool-size?: string;
        }

        export interface TidbClusterSpecTikvConfigStorage {
            block-cache?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvConfigStorageBlock-Cache;
            max-key-size?: number;
            reserve-space?: string;
            scheduler-concurrency?: number;
            scheduler-notify-capacity?: number;
            scheduler-pending-write-threshold?: string;
            scheduler-worker-pool-size?: number;
        }

        export interface TidbClusterSpecTikvConfigStorageBlock-Cache {
            capacity?: string;
            high-pri-pool-ratio?: number;
            memory-allocator?: string;
            num-shard-bits?: number;
            shared?: boolean;
            strict-capacity-limit?: boolean;
        }

        export interface TidbClusterSpecTikvEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValueFrom;
        }

        export interface TidbClusterSpecTikvEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvEnvValueFromSecretKeyRef;
        }

        export interface TidbClusterSpecTikvEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbClusterSpecTikvEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbClusterSpecTikvEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbClusterSpecTikvImagePullSecrets {
            name?: string;
        }

        export interface TidbClusterSpecTikvPodSecurityContext {
            fsGroup?: number;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvPodSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvPodSecurityContextSysctls[];
            windowsOptions?: outputs.pingcap.v1alpha1.TidbClusterSpecTikvPodSecurityContextWindowsOptions;
        }

        export interface TidbClusterSpecTikvPodSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbClusterSpecTikvPodSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface TidbClusterSpecTikvPodSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbClusterSpecTikvTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbClusterSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface TidbInitializerSpec {
            cluster: outputs.pingcap.v1alpha1.TidbInitializerSpecCluster;
            image: string;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbInitializerSpecImagePullSecrets[];
            initSql?: string;
            initSqlConfigMap?: string;
            passwordSecret?: string;
            permitHost?: string;
            resources?: outputs.pingcap.v1alpha1.TidbInitializerSpecResources;
            timezone?: string;
            tlsClientSecretName?: string;
        }

        export interface TidbInitializerSpecCluster {
            name: string;
            namespace?: string;
        }

        export interface TidbInitializerSpecImagePullSecrets {
            name?: string;
        }

        export interface TidbInitializerSpecResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbMonitorSpec {
            additionalContainers?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainers[];
            alertManagerRulesVersion?: string;
            alertmanagerURL?: string;
            annotations?: {[key: string]: any};
            clusters: outputs.pingcap.v1alpha1.TidbMonitorSpecClusters[];
            grafana?: any;
            imagePullPolicy?: string;
            imagePullSecrets?: outputs.pingcap.v1alpha1.TidbMonitorSpecImagePullSecrets[];
            initializer: any;
            kubePrometheusURL?: string;
            nodeSelector?: {[key: string]: any};
            persistent?: boolean;
            prometheus: any;
            pvReclaimPolicy?: string;
            reloader: any;
            storage?: string;
            storageClassName?: string;
            tolerations?: outputs.pingcap.v1alpha1.TidbMonitorSpecTolerations[];
        }

        export interface TidbMonitorSpecAdditionalContainers {
            args?: string[];
            command?: string[];
            env?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnv[];
            envFrom?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecycle;
            livenessProbe?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbe;
            name: string;
            ports?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersPorts[];
            readinessProbe?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbe;
            resources?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersResources;
            securityContext?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersSecurityContext;
            startupProbe?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersVolumeDevices[];
            volumeMounts?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvValueFrom;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvFrom {
            configMapRef?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvFromSecretRef;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvValueFrom {
            configMapKeyRef?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersEnvValueFromSecretKeyRef;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: any;
            resource: string;
        }

        export interface TidbMonitorSpecAdditionalContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecycle {
            postStart?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStart;
            preStop?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStop;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStart {
            exec?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStartExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStartTcpSocket;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStartHttpGetPort {
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePostStartTcpSocketPort;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePostStartTcpSocketPort {
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStop {
            exec?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStopExec;
            httpGet?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStopTcpSocket;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStopHttpGetPort {
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLifecyclePreStopTcpSocketPort;
        }

        export interface TidbMonitorSpecAdditionalContainersLifecyclePreStopTcpSocketPort {
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbeExec {
            command?: string[];
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbeHttpGetPort {
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersLivenessProbeTcpSocketPort;
        }

        export interface TidbMonitorSpecAdditionalContainersLivenessProbeTcpSocketPort {
        }

        export interface TidbMonitorSpecAdditionalContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbe {
            exec?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbeExec {
            command?: string[];
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbeHttpGetPort {
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersReadinessProbeTcpSocketPort;
        }

        export interface TidbMonitorSpecAdditionalContainersReadinessProbeTcpSocketPort {
        }

        export interface TidbMonitorSpecAdditionalContainersResources {
            limits?: {[key: string]: any};
            requests?: {[key: string]: any};
        }

        export interface TidbMonitorSpecAdditionalContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersSecurityContextWindowsOptions;
        }

        export interface TidbMonitorSpecAdditionalContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface TidbMonitorSpecAdditionalContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbe {
            exec?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbeExec {
            command?: string[];
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbeHttpGetPort {
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.pingcap.v1alpha1.TidbMonitorSpecAdditionalContainersStartupProbeTcpSocketPort;
        }

        export interface TidbMonitorSpecAdditionalContainersStartupProbeTcpSocketPort {
        }

        export interface TidbMonitorSpecAdditionalContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface TidbMonitorSpecAdditionalContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface TidbMonitorSpecClusters {
            name: string;
            namespace?: string;
        }

        export interface TidbMonitorSpecImagePullSecrets {
            name?: string;
        }

        export interface TidbMonitorSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }
    }
}
