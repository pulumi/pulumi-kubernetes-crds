// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1
{

    [OutputType]
    public sealed class TidbClusterSpecTikvConfigRocksdbLockcf
    {
        public readonly bool Block-based-bloom-filter;
        public readonly string Block-cache-size;
        public readonly string Block-size;
        public readonly int Bloom-filter-bits-per-key;
        public readonly bool Cache-index-and-filter-blocks;
        public readonly int Compaction-pri;
        public readonly int Compaction-style;
        public readonly ImmutableArray<string> Compression-per-level;
        public readonly bool Disable-auto-compactions;
        public readonly bool Disable-block-cache;
        public readonly bool Dynamic-level-bytes;
        public readonly bool Enable-doubly-skiplist;
        public readonly bool Force-consistency-checks;
        public readonly string Hard-pending-compaction-bytes-limit;
        public readonly int Level0-file-num-compaction-trigger;
        public readonly int Level0-slowdown-writes-trigger;
        public readonly int Level0-stop-writes-trigger;
        public readonly string Max-bytes-for-level-base;
        public readonly int Max-bytes-for-level-multiplier;
        public readonly string Max-compaction-bytes;
        public readonly int Max-write-buffer-number;
        public readonly int Min-write-buffer-number-to-merge;
        public readonly int Num-levels;
        public readonly bool Optimize-filters-for-hits;
        public readonly bool Pin-l0-filter-and-index-blocks;
        public readonly int Prop-keys-index-distance;
        public readonly int Prop-size-index-distance;
        public readonly int Read-amp-bytes-per-bit;
        public readonly string Soft-pending-compaction-bytes-limit;
        public readonly string Target-file-size-base;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecTikvConfigRocksdbLockcfTitan Titan;
        public readonly bool Use-bloom-filter;
        public readonly bool Whole-key-filtering;
        public readonly string Write-buffer-size;

        [OutputConstructor]
        private TidbClusterSpecTikvConfigRocksdbLockcf(
            bool block-based-bloom-filter,

            string block-cache-size,

            string block-size,

            int bloom-filter-bits-per-key,

            bool cache-index-and-filter-blocks,

            int compaction-pri,

            int compaction-style,

            ImmutableArray<string> compression-per-level,

            bool disable-auto-compactions,

            bool disable-block-cache,

            bool dynamic-level-bytes,

            bool enable-doubly-skiplist,

            bool force-consistency-checks,

            string hard-pending-compaction-bytes-limit,

            int level0-file-num-compaction-trigger,

            int level0-slowdown-writes-trigger,

            int level0-stop-writes-trigger,

            string max-bytes-for-level-base,

            int max-bytes-for-level-multiplier,

            string max-compaction-bytes,

            int max-write-buffer-number,

            int min-write-buffer-number-to-merge,

            int num-levels,

            bool optimize-filters-for-hits,

            bool pin-l0-filter-and-index-blocks,

            int prop-keys-index-distance,

            int prop-size-index-distance,

            int read-amp-bytes-per-bit,

            string soft-pending-compaction-bytes-limit,

            string target-file-size-base,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecTikvConfigRocksdbLockcfTitan titan,

            bool use-bloom-filter,

            bool whole-key-filtering,

            string write-buffer-size)
        {
            Block-based-bloom-filter = block-based-bloom-filter;
            Block-cache-size = block-cache-size;
            Block-size = block-size;
            Bloom-filter-bits-per-key = bloom-filter-bits-per-key;
            Cache-index-and-filter-blocks = cache-index-and-filter-blocks;
            Compaction-pri = compaction-pri;
            Compaction-style = compaction-style;
            Compression-per-level = compression-per-level;
            Disable-auto-compactions = disable-auto-compactions;
            Disable-block-cache = disable-block-cache;
            Dynamic-level-bytes = dynamic-level-bytes;
            Enable-doubly-skiplist = enable-doubly-skiplist;
            Force-consistency-checks = force-consistency-checks;
            Hard-pending-compaction-bytes-limit = hard-pending-compaction-bytes-limit;
            Level0-file-num-compaction-trigger = level0-file-num-compaction-trigger;
            Level0-slowdown-writes-trigger = level0-slowdown-writes-trigger;
            Level0-stop-writes-trigger = level0-stop-writes-trigger;
            Max-bytes-for-level-base = max-bytes-for-level-base;
            Max-bytes-for-level-multiplier = max-bytes-for-level-multiplier;
            Max-compaction-bytes = max-compaction-bytes;
            Max-write-buffer-number = max-write-buffer-number;
            Min-write-buffer-number-to-merge = min-write-buffer-number-to-merge;
            Num-levels = num-levels;
            Optimize-filters-for-hits = optimize-filters-for-hits;
            Pin-l0-filter-and-index-blocks = pin-l0-filter-and-index-blocks;
            Prop-keys-index-distance = prop-keys-index-distance;
            Prop-size-index-distance = prop-size-index-distance;
            Read-amp-bytes-per-bit = read-amp-bytes-per-bit;
            Soft-pending-compaction-bytes-limit = soft-pending-compaction-bytes-limit;
            Target-file-size-base = target-file-size-base;
            Titan = titan;
            Use-bloom-filter = use-bloom-filter;
            Whole-key-filtering = whole-key-filtering;
            Write-buffer-size = write-buffer-size;
        }
    }
}
