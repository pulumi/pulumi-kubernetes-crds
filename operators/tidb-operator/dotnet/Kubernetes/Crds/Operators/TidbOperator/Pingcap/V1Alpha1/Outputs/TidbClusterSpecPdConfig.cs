// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1
{

    [OutputType]
    public sealed class TidbClusterSpecPdConfig
    {
        public readonly string Auto-compaction-mode;
        public readonly string Auto-compaction-retention-v2;
        public readonly string Cluster-version;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigDashboard Dashboard;
        public readonly string Election-interval;
        public readonly bool Enable-grpc-gateway;
        public readonly bool Enable-prevote;
        public readonly bool Force-new-cluster;
        public readonly ImmutableDictionary<string, object> Label-property;
        public readonly int Lease;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigLog Log;
        public readonly string Log-file;
        public readonly string Log-level;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigMetric Metric;
        public readonly ImmutableDictionary<string, object> Namespace;
        public readonly string Namespace-classifier;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigPd-Server Pd-server;
        public readonly string Quota-backend-bytes;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigReplication Replication;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigSchedule Schedule;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigSecurity Security;
        public readonly string Tikv-interval;
        public readonly string Tso-save-interval;

        [OutputConstructor]
        private TidbClusterSpecPdConfig(
            string auto-compaction-mode,

            string auto-compaction-retention-v2,

            string cluster-version,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigDashboard dashboard,

            string election-interval,

            bool enable-grpc-gateway,

            bool enable-prevote,

            bool force-new-cluster,

            ImmutableDictionary<string, object> label-property,

            int lease,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigLog log,

            string log-file,

            string log-level,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigMetric metric,

            ImmutableDictionary<string, object> @namespace,

            string namespace-classifier,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigPd-Server pd-server,

            string quota-backend-bytes,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigReplication replication,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigSchedule schedule,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbClusterSpecPdConfigSecurity security,

            string tikv-interval,

            string tso-save-interval)
        {
            Auto-compaction-mode = auto-compaction-mode;
            Auto-compaction-retention-v2 = auto-compaction-retention-v2;
            Cluster-version = cluster-version;
            Dashboard = dashboard;
            Election-interval = election-interval;
            Enable-grpc-gateway = enable-grpc-gateway;
            Enable-prevote = enable-prevote;
            Force-new-cluster = force-new-cluster;
            Label-property = label-property;
            Lease = lease;
            Log = log;
            Log-file = log-file;
            Log-level = log-level;
            Metric = metric;
            Namespace = @namespace;
            Namespace-classifier = namespace-classifier;
            Pd-server = pd-server;
            Quota-backend-bytes = quota-backend-bytes;
            Replication = replication;
            Schedule = schedule;
            Security = security;
            Tikv-interval = tikv-interval;
            Tso-save-interval = tso-save-interval;
        }
    }
}
