// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Pingcap.V1Alpha1
{

    public class TidbClusterSpecTikvConfigServerArgs : Pulumi.ResourceArgs
    {
        [Input("concurrent-recv-snap-limit")]
        public Input<int>? Concurrent-recv-snap-limit { get; set; }

        [Input("concurrent-send-snap-limit")]
        public Input<int>? Concurrent-send-snap-limit { get; set; }

        [Input("enable-request-batch")]
        public Input<bool>? Enable-request-batch { get; set; }

        [Input("end-point-batch-row-limit")]
        public Input<int>? End-point-batch-row-limit { get; set; }

        [Input("end-point-enable-batch-if-possible")]
        public Input<int>? End-point-enable-batch-if-possible { get; set; }

        [Input("end-point-recursion-limit")]
        public Input<int>? End-point-recursion-limit { get; set; }

        [Input("end-point-request-max-handle-duration")]
        public Input<string>? End-point-request-max-handle-duration { get; set; }

        [Input("end-point-stream-batch-row-limit")]
        public Input<int>? End-point-stream-batch-row-limit { get; set; }

        [Input("end-point-stream-channel-size")]
        public Input<int>? End-point-stream-channel-size { get; set; }

        [Input("grpc-compression-type")]
        public Input<string>? Grpc-compression-type { get; set; }

        [Input("grpc-concurrency")]
        public Input<int>? Grpc-concurrency { get; set; }

        [Input("grpc-concurrent-stream")]
        public Input<int>? Grpc-concurrent-stream { get; set; }

        [Input("grpc-keepalive-time")]
        public Input<string>? Grpc-keepalive-time { get; set; }

        [Input("grpc-keepalive-timeout")]
        public Input<string>? Grpc-keepalive-timeout { get; set; }

        [Input("grpc-memory-pool-quota")]
        public Input<string>? Grpc-memory-pool-quota { get; set; }

        [Input("grpc-raft-conn-num")]
        public Input<int>? Grpc-raft-conn-num { get; set; }

        [Input("grpc-stream-initial-window-size")]
        public Input<string>? Grpc-stream-initial-window-size { get; set; }

        [Input("heavy-load-threshold")]
        public Input<int>? Heavy-load-threshold { get; set; }

        [Input("heavy-load-wait-duration")]
        public Input<string>? Heavy-load-wait-duration { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("request-batch-enable-cross-command")]
        public Input<bool>? Request-batch-enable-cross-command { get; set; }

        [Input("request-batch-wait-duration")]
        public Input<string>? Request-batch-wait-duration { get; set; }

        [Input("snap-max-total-size")]
        public Input<string>? Snap-max-total-size { get; set; }

        [Input("snap-max-write-bytes-per-sec")]
        public Input<string>? Snap-max-write-bytes-per-sec { get; set; }

        [Input("stats-concurrency")]
        public Input<int>? Stats-concurrency { get; set; }

        [Input("status-thread-pool-size")]
        public Input<string>? Status-thread-pool-size { get; set; }

        public TidbClusterSpecTikvConfigServerArgs()
        {
        }
    }
}
