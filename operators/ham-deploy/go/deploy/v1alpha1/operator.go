// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Operator is the Schema for the operators API
type Operator struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// OperatorSpec defines the desired state of Operator
	Spec OperatorSpecPtrOutput `pulumi:"spec"`
	// OperatorStatus defines the observed state of Operator
	Status OperatorStatusPtrOutput `pulumi:"status"`
}

// NewOperator registers a new resource with the given unique name, arguments, and options.
func NewOperator(ctx *pulumi.Context,
	name string, args *OperatorArgs, opts ...pulumi.ResourceOption) (*Operator, error) {
	if args == nil {
		args = &OperatorArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("deploy.hybridapp.io/v1alpha1")
	args.Kind = pulumi.StringPtr("Operator")
	var resource Operator
	err := ctx.RegisterResource("kubernetes:deploy.hybridapp.io/v1alpha1:Operator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOperator gets an existing Operator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOperator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OperatorState, opts ...pulumi.ResourceOption) (*Operator, error) {
	var resource Operator
	err := ctx.ReadResource("kubernetes:deploy.hybridapp.io/v1alpha1:Operator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Operator resources.
type operatorState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// OperatorSpec defines the desired state of Operator
	Spec *OperatorSpec `pulumi:"spec"`
	// OperatorStatus defines the observed state of Operator
	Status *OperatorStatus `pulumi:"status"`
}

type OperatorState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// OperatorSpec defines the desired state of Operator
	Spec OperatorSpecPtrInput
	// OperatorStatus defines the observed state of Operator
	Status OperatorStatusPtrInput
}

func (OperatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorState)(nil)).Elem()
}

type operatorArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// OperatorSpec defines the desired state of Operator
	Spec *OperatorSpec `pulumi:"spec"`
	// OperatorStatus defines the observed state of Operator
	Status *OperatorStatus `pulumi:"status"`
}

// The set of arguments for constructing a Operator resource.
type OperatorArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// OperatorSpec defines the desired state of Operator
	Spec OperatorSpecPtrInput
	// OperatorStatus defines the observed state of Operator
	Status OperatorStatusPtrInput
}

func (OperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorArgs)(nil)).Elem()
}
