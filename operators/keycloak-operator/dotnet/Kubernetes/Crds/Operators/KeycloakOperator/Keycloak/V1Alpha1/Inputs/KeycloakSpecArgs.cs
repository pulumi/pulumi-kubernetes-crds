// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1
{

    /// <summary>
    /// KeycloakSpec defines the desired state of Keycloak.
    /// </summary>
    public class KeycloakSpecArgs : Pulumi.ResourceArgs
    {
        [Input("extensions")]
        private InputList<string>? _extensions;

        /// <summary>
        /// A list of extensions, where each one is a URL to a JAR files that will be deployed in Keycloak.
        /// </summary>
        public InputList<string> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<string>());
            set => _extensions = value;
        }

        /// <summary>
        /// Controls external Ingress/Route settings.
        /// </summary>
        [Input("externalAccess")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1.KeycloakSpecExternalAccessArgs>? ExternalAccess { get; set; }

        /// <summary>
        /// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret: 
        ///      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: &lt;Database Name&gt;         POSTGRES_EXTERNAL_ADDRESS: &lt;External Database IP or URL (resolvable by K8s)&gt;         POSTGRES_EXTERNAL_PORT: &lt;External Database Port&gt;         # Strongly recommended to use &lt;'Keycloak CR Name'-postgresql&gt;         POSTGRES_HOST: &lt;Database Service Name&gt;         POSTGRES_PASSWORD: &lt;Database Password&gt;         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: &lt;Database Username&gt;      type: Opaque 
        ///  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       &lt;Custom Resource Name&gt;-db-secret 
        ///  For more information, please refer to the Operator documentation.
        /// </summary>
        [Input("externalDatabase")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1.KeycloakSpecExternalDatabaseArgs>? ExternalDatabase { get; set; }

        /// <summary>
        /// Number of Keycloak instances in HA mode. Default is 1.
        /// </summary>
        [Input("instances")]
        public Input<int>? Instances { get; set; }

        /// <summary>
        /// Resources (Requests and Limits) for KeycloakDeployment.
        /// </summary>
        [Input("keycloakDeploymentSpec")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1.KeycloakSpecKeycloakDeploymentSpecArgs>? KeycloakDeploymentSpec { get; set; }

        /// <summary>
        /// Specify Migration configuration
        /// </summary>
        [Input("migration")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1.KeycloakSpecMigrationArgs>? Migration { get; set; }

        /// <summary>
        /// Specify PodDisruptionBudget configuration.
        /// </summary>
        [Input("podDisruptionBudget")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1.KeycloakSpecPodDisruptionBudgetArgs>? PodDisruptionBudget { get; set; }

        /// <summary>
        /// Resources (Requests and Limits) for PostgresDeployment.
        /// </summary>
        [Input("postgresDeploymentSpec")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Keycloak.V1Alpha1.KeycloakSpecPostgresDeploymentSpecArgs>? PostgresDeploymentSpec { get; set; }

        /// <summary>
        /// Profile used for controlling Operator behavior. Default is empty.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// Name of the StorageClass for Postgresql Persistent Volume Claim
        /// </summary>
        [Input("storageClassName")]
        public Input<string>? StorageClassName { get; set; }

        public KeycloakSpecArgs()
        {
        }
    }
}
