// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Keycloak.V1Alpha1
{

    [OutputType]
    public sealed class KeycloakSpecExternalAccess
    {
        /// <summary>
        /// If set to true, the Operator will create an Ingress or a Route pointing to Keycloak.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// TLS Termination type for the external access. Setting this field to "reencrypt" will terminate TLS on the Ingress/Route level. Setting this field to "passthrough" will send encrypted traffic to the Pod. If unspecified, defaults to "reencrypt". Note, that this setting has no effect on Ingress as Ingress TLS settings are not reconciled by this operator. In other words, Ingress TLS configuration is the same in both cases and it is up to the user to configure TLS section of the Ingress.
        /// </summary>
        public readonly string TlsTermination;

        [OutputConstructor]
        private KeycloakSpecExternalAccess(
            bool enabled,

            string tlsTermination)
        {
            Enabled = enabled;
            TlsTermination = tlsTermination;
        }
    }
}
