// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Keycloak is the Schema for the keycloaks API.
type KeycloakType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakSpec defines the desired state of Keycloak.
	Spec *KeycloakSpec `pulumi:"spec"`
	// KeycloakStatus defines the observed state of Keycloak.
	Status *KeycloakStatus `pulumi:"status"`
}

// KeycloakTypeInput is an input type that accepts KeycloakTypeArgs and KeycloakTypeOutput values.
// You can construct a concrete instance of `KeycloakTypeInput` via:
//
//          KeycloakTypeArgs{...}
type KeycloakTypeInput interface {
	pulumi.Input

	ToKeycloakTypeOutput() KeycloakTypeOutput
	ToKeycloakTypeOutputWithContext(context.Context) KeycloakTypeOutput
}

// Keycloak is the Schema for the keycloaks API.
type KeycloakTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KeycloakSpec defines the desired state of Keycloak.
	Spec KeycloakSpecPtrInput `pulumi:"spec"`
	// KeycloakStatus defines the observed state of Keycloak.
	Status KeycloakStatusPtrInput `pulumi:"status"`
}

func (KeycloakTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakType)(nil)).Elem()
}

func (i KeycloakTypeArgs) ToKeycloakTypeOutput() KeycloakTypeOutput {
	return i.ToKeycloakTypeOutputWithContext(context.Background())
}

func (i KeycloakTypeArgs) ToKeycloakTypeOutputWithContext(ctx context.Context) KeycloakTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakTypeOutput)
}

// Keycloak is the Schema for the keycloaks API.
type KeycloakTypeOutput struct{ *pulumi.OutputState }

func (KeycloakTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakType)(nil)).Elem()
}

func (o KeycloakTypeOutput) ToKeycloakTypeOutput() KeycloakTypeOutput {
	return o
}

func (o KeycloakTypeOutput) ToKeycloakTypeOutputWithContext(ctx context.Context) KeycloakTypeOutput {
	return o
}

func (o KeycloakTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KeycloakTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KeycloakTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KeycloakType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KeycloakSpec defines the desired state of Keycloak.
func (o KeycloakTypeOutput) Spec() KeycloakSpecPtrOutput {
	return o.ApplyT(func(v KeycloakType) *KeycloakSpec { return v.Spec }).(KeycloakSpecPtrOutput)
}

// KeycloakStatus defines the observed state of Keycloak.
func (o KeycloakTypeOutput) Status() KeycloakStatusPtrOutput {
	return o.ApplyT(func(v KeycloakType) *KeycloakStatus { return v.Status }).(KeycloakStatusPtrOutput)
}

// KeycloakBackup is the Schema for the keycloakbackups API.
type KeycloakBackupType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakBackupSpec defines the desired state of KeycloakBackup.
	Spec *KeycloakBackupSpec `pulumi:"spec"`
	// KeycloakBackupStatus defines the observed state of KeycloakBackup.
	Status *KeycloakBackupStatus `pulumi:"status"`
}

// KeycloakBackupTypeInput is an input type that accepts KeycloakBackupTypeArgs and KeycloakBackupTypeOutput values.
// You can construct a concrete instance of `KeycloakBackupTypeInput` via:
//
//          KeycloakBackupTypeArgs{...}
type KeycloakBackupTypeInput interface {
	pulumi.Input

	ToKeycloakBackupTypeOutput() KeycloakBackupTypeOutput
	ToKeycloakBackupTypeOutputWithContext(context.Context) KeycloakBackupTypeOutput
}

// KeycloakBackup is the Schema for the keycloakbackups API.
type KeycloakBackupTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KeycloakBackupSpec defines the desired state of KeycloakBackup.
	Spec KeycloakBackupSpecPtrInput `pulumi:"spec"`
	// KeycloakBackupStatus defines the observed state of KeycloakBackup.
	Status KeycloakBackupStatusPtrInput `pulumi:"status"`
}

func (KeycloakBackupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupType)(nil)).Elem()
}

func (i KeycloakBackupTypeArgs) ToKeycloakBackupTypeOutput() KeycloakBackupTypeOutput {
	return i.ToKeycloakBackupTypeOutputWithContext(context.Background())
}

func (i KeycloakBackupTypeArgs) ToKeycloakBackupTypeOutputWithContext(ctx context.Context) KeycloakBackupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupTypeOutput)
}

// KeycloakBackup is the Schema for the keycloakbackups API.
type KeycloakBackupTypeOutput struct{ *pulumi.OutputState }

func (KeycloakBackupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupType)(nil)).Elem()
}

func (o KeycloakBackupTypeOutput) ToKeycloakBackupTypeOutput() KeycloakBackupTypeOutput {
	return o
}

func (o KeycloakBackupTypeOutput) ToKeycloakBackupTypeOutputWithContext(ctx context.Context) KeycloakBackupTypeOutput {
	return o
}

func (o KeycloakBackupTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakBackupType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KeycloakBackupTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakBackupType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KeycloakBackupTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KeycloakBackupType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KeycloakBackupSpec defines the desired state of KeycloakBackup.
func (o KeycloakBackupTypeOutput) Spec() KeycloakBackupSpecPtrOutput {
	return o.ApplyT(func(v KeycloakBackupType) *KeycloakBackupSpec { return v.Spec }).(KeycloakBackupSpecPtrOutput)
}

// KeycloakBackupStatus defines the observed state of KeycloakBackup.
func (o KeycloakBackupTypeOutput) Status() KeycloakBackupStatusPtrOutput {
	return o.ApplyT(func(v KeycloakBackupType) *KeycloakBackupStatus { return v.Status }).(KeycloakBackupStatusPtrOutput)
}

type KeycloakBackupMetadata struct {
}

// KeycloakBackupMetadataInput is an input type that accepts KeycloakBackupMetadataArgs and KeycloakBackupMetadataOutput values.
// You can construct a concrete instance of `KeycloakBackupMetadataInput` via:
//
//          KeycloakBackupMetadataArgs{...}
type KeycloakBackupMetadataInput interface {
	pulumi.Input

	ToKeycloakBackupMetadataOutput() KeycloakBackupMetadataOutput
	ToKeycloakBackupMetadataOutputWithContext(context.Context) KeycloakBackupMetadataOutput
}

type KeycloakBackupMetadataArgs struct {
}

func (KeycloakBackupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupMetadata)(nil)).Elem()
}

func (i KeycloakBackupMetadataArgs) ToKeycloakBackupMetadataOutput() KeycloakBackupMetadataOutput {
	return i.ToKeycloakBackupMetadataOutputWithContext(context.Background())
}

func (i KeycloakBackupMetadataArgs) ToKeycloakBackupMetadataOutputWithContext(ctx context.Context) KeycloakBackupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupMetadataOutput)
}

type KeycloakBackupMetadataOutput struct{ *pulumi.OutputState }

func (KeycloakBackupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupMetadata)(nil)).Elem()
}

func (o KeycloakBackupMetadataOutput) ToKeycloakBackupMetadataOutput() KeycloakBackupMetadataOutput {
	return o
}

func (o KeycloakBackupMetadataOutput) ToKeycloakBackupMetadataOutputWithContext(ctx context.Context) KeycloakBackupMetadataOutput {
	return o
}

// KeycloakBackupSpec defines the desired state of KeycloakBackup.
type KeycloakBackupSpec struct {
	// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
	Aws *KeycloakBackupSpecAws `pulumi:"aws"`
	// Selector for looking up Keycloak Custom Resources.
	InstanceSelector *KeycloakBackupSpecInstanceSelector `pulumi:"instanceSelector"`
	// Controls automatic restore behavior. Currently not implemented.
	//  In the future this will be used to trigger automatic restore for a given KeycloakBackup. Each backup will correspond to a single snapshot of the database (stored either in a Persistent Volume or AWS). If a user wants to restore it, all he/she needs to do is to change this flag to true. Potentially, it will be possible to restore a single backup multiple times.
	Restore *bool `pulumi:"restore"`
	// Name of the StorageClass for Postgresql Backup Persistent Volume Claim
	StorageClassName *string `pulumi:"storageClassName"`
}

// KeycloakBackupSpecInput is an input type that accepts KeycloakBackupSpecArgs and KeycloakBackupSpecOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecInput` via:
//
//          KeycloakBackupSpecArgs{...}
type KeycloakBackupSpecInput interface {
	pulumi.Input

	ToKeycloakBackupSpecOutput() KeycloakBackupSpecOutput
	ToKeycloakBackupSpecOutputWithContext(context.Context) KeycloakBackupSpecOutput
}

// KeycloakBackupSpec defines the desired state of KeycloakBackup.
type KeycloakBackupSpecArgs struct {
	// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
	Aws KeycloakBackupSpecAwsPtrInput `pulumi:"aws"`
	// Selector for looking up Keycloak Custom Resources.
	InstanceSelector KeycloakBackupSpecInstanceSelectorPtrInput `pulumi:"instanceSelector"`
	// Controls automatic restore behavior. Currently not implemented.
	//  In the future this will be used to trigger automatic restore for a given KeycloakBackup. Each backup will correspond to a single snapshot of the database (stored either in a Persistent Volume or AWS). If a user wants to restore it, all he/she needs to do is to change this flag to true. Potentially, it will be possible to restore a single backup multiple times.
	Restore pulumi.BoolPtrInput `pulumi:"restore"`
	// Name of the StorageClass for Postgresql Backup Persistent Volume Claim
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
}

func (KeycloakBackupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpec)(nil)).Elem()
}

func (i KeycloakBackupSpecArgs) ToKeycloakBackupSpecOutput() KeycloakBackupSpecOutput {
	return i.ToKeycloakBackupSpecOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecArgs) ToKeycloakBackupSpecOutputWithContext(ctx context.Context) KeycloakBackupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecOutput)
}

func (i KeycloakBackupSpecArgs) ToKeycloakBackupSpecPtrOutput() KeycloakBackupSpecPtrOutput {
	return i.ToKeycloakBackupSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecArgs) ToKeycloakBackupSpecPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecOutput).ToKeycloakBackupSpecPtrOutputWithContext(ctx)
}

// KeycloakBackupSpecPtrInput is an input type that accepts KeycloakBackupSpecArgs, KeycloakBackupSpecPtr and KeycloakBackupSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecPtrInput` via:
//
//          KeycloakBackupSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakBackupSpecPtrInput interface {
	pulumi.Input

	ToKeycloakBackupSpecPtrOutput() KeycloakBackupSpecPtrOutput
	ToKeycloakBackupSpecPtrOutputWithContext(context.Context) KeycloakBackupSpecPtrOutput
}

type keycloakBackupSpecPtrType KeycloakBackupSpecArgs

func KeycloakBackupSpecPtr(v *KeycloakBackupSpecArgs) KeycloakBackupSpecPtrInput {
	return (*keycloakBackupSpecPtrType)(v)
}

func (*keycloakBackupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupSpec)(nil)).Elem()
}

func (i *keycloakBackupSpecPtrType) ToKeycloakBackupSpecPtrOutput() KeycloakBackupSpecPtrOutput {
	return i.ToKeycloakBackupSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakBackupSpecPtrType) ToKeycloakBackupSpecPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecPtrOutput)
}

// KeycloakBackupSpec defines the desired state of KeycloakBackup.
type KeycloakBackupSpecOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpec)(nil)).Elem()
}

func (o KeycloakBackupSpecOutput) ToKeycloakBackupSpecOutput() KeycloakBackupSpecOutput {
	return o
}

func (o KeycloakBackupSpecOutput) ToKeycloakBackupSpecOutputWithContext(ctx context.Context) KeycloakBackupSpecOutput {
	return o
}

func (o KeycloakBackupSpecOutput) ToKeycloakBackupSpecPtrOutput() KeycloakBackupSpecPtrOutput {
	return o.ToKeycloakBackupSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakBackupSpecOutput) ToKeycloakBackupSpecPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpec) *KeycloakBackupSpec {
		return &v
	}).(KeycloakBackupSpecPtrOutput)
}

// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
func (o KeycloakBackupSpecOutput) Aws() KeycloakBackupSpecAwsPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpec) *KeycloakBackupSpecAws { return v.Aws }).(KeycloakBackupSpecAwsPtrOutput)
}

// Selector for looking up Keycloak Custom Resources.
func (o KeycloakBackupSpecOutput) InstanceSelector() KeycloakBackupSpecInstanceSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpec) *KeycloakBackupSpecInstanceSelector { return v.InstanceSelector }).(KeycloakBackupSpecInstanceSelectorPtrOutput)
}

// Controls automatic restore behavior. Currently not implemented.
//  In the future this will be used to trigger automatic restore for a given KeycloakBackup. Each backup will correspond to a single snapshot of the database (stored either in a Persistent Volume or AWS). If a user wants to restore it, all he/she needs to do is to change this flag to true. Potentially, it will be possible to restore a single backup multiple times.
func (o KeycloakBackupSpecOutput) Restore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpec) *bool { return v.Restore }).(pulumi.BoolPtrOutput)
}

// Name of the StorageClass for Postgresql Backup Persistent Volume Claim
func (o KeycloakBackupSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpec) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

type KeycloakBackupSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupSpec)(nil)).Elem()
}

func (o KeycloakBackupSpecPtrOutput) ToKeycloakBackupSpecPtrOutput() KeycloakBackupSpecPtrOutput {
	return o
}

func (o KeycloakBackupSpecPtrOutput) ToKeycloakBackupSpecPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecPtrOutput {
	return o
}

func (o KeycloakBackupSpecPtrOutput) Elem() KeycloakBackupSpecOutput {
	return o.ApplyT(func(v *KeycloakBackupSpec) KeycloakBackupSpec { return *v }).(KeycloakBackupSpecOutput)
}

// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
func (o KeycloakBackupSpecPtrOutput) Aws() KeycloakBackupSpecAwsPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpec) *KeycloakBackupSpecAws {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(KeycloakBackupSpecAwsPtrOutput)
}

// Selector for looking up Keycloak Custom Resources.
func (o KeycloakBackupSpecPtrOutput) InstanceSelector() KeycloakBackupSpecInstanceSelectorPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpec) *KeycloakBackupSpecInstanceSelector {
		if v == nil {
			return nil
		}
		return v.InstanceSelector
	}).(KeycloakBackupSpecInstanceSelectorPtrOutput)
}

// Controls automatic restore behavior. Currently not implemented.
//  In the future this will be used to trigger automatic restore for a given KeycloakBackup. Each backup will correspond to a single snapshot of the database (stored either in a Persistent Volume or AWS). If a user wants to restore it, all he/she needs to do is to change this flag to true. Potentially, it will be possible to restore a single backup multiple times.
func (o KeycloakBackupSpecPtrOutput) Restore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Restore
	}).(pulumi.BoolPtrOutput)
}

// Name of the StorageClass for Postgresql Backup Persistent Volume Claim
func (o KeycloakBackupSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
type KeycloakBackupSpecAws struct {
	// Provides a secret name used for connecting to AWS S3 Service. The secret needs to be in the following form:
	//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       AWS_S3_BUCKET_NAME: <S3 Bucket Name>       AWS_ACCESS_KEY_ID: <AWS Access Key ID>       AWS_SECRET_ACCESS_KEY: <AWS Secret Key>
	//  For more information, please refer to the Operator documentation.
	CredentialsSecretName *string `pulumi:"credentialsSecretName"`
	// If provided, the database backup will be encrypted. Provides a secret name used for encrypting database data. The secret needs to be in the following form:
	//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       GPG_PUBLIC_KEY: <GPG Public Key>       GPG_TRUST_MODEL: <GPG Trust Model>       GPG_RECIPIENT: <GPG Recipient>
	//  For more information, please refer to the Operator documentation.
	EncryptionKeySecretName *string `pulumi:"encryptionKeySecretName"`
	// If specified, it will be used as a schedule for creating a CronJob.
	Schedule *string `pulumi:"schedule"`
}

// KeycloakBackupSpecAwsInput is an input type that accepts KeycloakBackupSpecAwsArgs and KeycloakBackupSpecAwsOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecAwsInput` via:
//
//          KeycloakBackupSpecAwsArgs{...}
type KeycloakBackupSpecAwsInput interface {
	pulumi.Input

	ToKeycloakBackupSpecAwsOutput() KeycloakBackupSpecAwsOutput
	ToKeycloakBackupSpecAwsOutputWithContext(context.Context) KeycloakBackupSpecAwsOutput
}

// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
type KeycloakBackupSpecAwsArgs struct {
	// Provides a secret name used for connecting to AWS S3 Service. The secret needs to be in the following form:
	//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       AWS_S3_BUCKET_NAME: <S3 Bucket Name>       AWS_ACCESS_KEY_ID: <AWS Access Key ID>       AWS_SECRET_ACCESS_KEY: <AWS Secret Key>
	//  For more information, please refer to the Operator documentation.
	CredentialsSecretName pulumi.StringPtrInput `pulumi:"credentialsSecretName"`
	// If provided, the database backup will be encrypted. Provides a secret name used for encrypting database data. The secret needs to be in the following form:
	//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       GPG_PUBLIC_KEY: <GPG Public Key>       GPG_TRUST_MODEL: <GPG Trust Model>       GPG_RECIPIENT: <GPG Recipient>
	//  For more information, please refer to the Operator documentation.
	EncryptionKeySecretName pulumi.StringPtrInput `pulumi:"encryptionKeySecretName"`
	// If specified, it will be used as a schedule for creating a CronJob.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
}

func (KeycloakBackupSpecAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecAws)(nil)).Elem()
}

func (i KeycloakBackupSpecAwsArgs) ToKeycloakBackupSpecAwsOutput() KeycloakBackupSpecAwsOutput {
	return i.ToKeycloakBackupSpecAwsOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecAwsArgs) ToKeycloakBackupSpecAwsOutputWithContext(ctx context.Context) KeycloakBackupSpecAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecAwsOutput)
}

func (i KeycloakBackupSpecAwsArgs) ToKeycloakBackupSpecAwsPtrOutput() KeycloakBackupSpecAwsPtrOutput {
	return i.ToKeycloakBackupSpecAwsPtrOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecAwsArgs) ToKeycloakBackupSpecAwsPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecAwsOutput).ToKeycloakBackupSpecAwsPtrOutputWithContext(ctx)
}

// KeycloakBackupSpecAwsPtrInput is an input type that accepts KeycloakBackupSpecAwsArgs, KeycloakBackupSpecAwsPtr and KeycloakBackupSpecAwsPtrOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecAwsPtrInput` via:
//
//          KeycloakBackupSpecAwsArgs{...}
//
//  or:
//
//          nil
type KeycloakBackupSpecAwsPtrInput interface {
	pulumi.Input

	ToKeycloakBackupSpecAwsPtrOutput() KeycloakBackupSpecAwsPtrOutput
	ToKeycloakBackupSpecAwsPtrOutputWithContext(context.Context) KeycloakBackupSpecAwsPtrOutput
}

type keycloakBackupSpecAwsPtrType KeycloakBackupSpecAwsArgs

func KeycloakBackupSpecAwsPtr(v *KeycloakBackupSpecAwsArgs) KeycloakBackupSpecAwsPtrInput {
	return (*keycloakBackupSpecAwsPtrType)(v)
}

func (*keycloakBackupSpecAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupSpecAws)(nil)).Elem()
}

func (i *keycloakBackupSpecAwsPtrType) ToKeycloakBackupSpecAwsPtrOutput() KeycloakBackupSpecAwsPtrOutput {
	return i.ToKeycloakBackupSpecAwsPtrOutputWithContext(context.Background())
}

func (i *keycloakBackupSpecAwsPtrType) ToKeycloakBackupSpecAwsPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecAwsPtrOutput)
}

// If provided, an automatic database backup will be created on AWS S3 instead of a local Persistent Volume. If this property is not provided - a local Persistent Volume backup will be chosen.
type KeycloakBackupSpecAwsOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecAws)(nil)).Elem()
}

func (o KeycloakBackupSpecAwsOutput) ToKeycloakBackupSpecAwsOutput() KeycloakBackupSpecAwsOutput {
	return o
}

func (o KeycloakBackupSpecAwsOutput) ToKeycloakBackupSpecAwsOutputWithContext(ctx context.Context) KeycloakBackupSpecAwsOutput {
	return o
}

func (o KeycloakBackupSpecAwsOutput) ToKeycloakBackupSpecAwsPtrOutput() KeycloakBackupSpecAwsPtrOutput {
	return o.ToKeycloakBackupSpecAwsPtrOutputWithContext(context.Background())
}

func (o KeycloakBackupSpecAwsOutput) ToKeycloakBackupSpecAwsPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecAwsPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpecAws) *KeycloakBackupSpecAws {
		return &v
	}).(KeycloakBackupSpecAwsPtrOutput)
}

// Provides a secret name used for connecting to AWS S3 Service. The secret needs to be in the following form:
//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       AWS_S3_BUCKET_NAME: <S3 Bucket Name>       AWS_ACCESS_KEY_ID: <AWS Access Key ID>       AWS_SECRET_ACCESS_KEY: <AWS Secret Key>
//  For more information, please refer to the Operator documentation.
func (o KeycloakBackupSpecAwsOutput) CredentialsSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpecAws) *string { return v.CredentialsSecretName }).(pulumi.StringPtrOutput)
}

// If provided, the database backup will be encrypted. Provides a secret name used for encrypting database data. The secret needs to be in the following form:
//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       GPG_PUBLIC_KEY: <GPG Public Key>       GPG_TRUST_MODEL: <GPG Trust Model>       GPG_RECIPIENT: <GPG Recipient>
//  For more information, please refer to the Operator documentation.
func (o KeycloakBackupSpecAwsOutput) EncryptionKeySecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpecAws) *string { return v.EncryptionKeySecretName }).(pulumi.StringPtrOutput)
}

// If specified, it will be used as a schedule for creating a CronJob.
func (o KeycloakBackupSpecAwsOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpecAws) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type KeycloakBackupSpecAwsPtrOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupSpecAws)(nil)).Elem()
}

func (o KeycloakBackupSpecAwsPtrOutput) ToKeycloakBackupSpecAwsPtrOutput() KeycloakBackupSpecAwsPtrOutput {
	return o
}

func (o KeycloakBackupSpecAwsPtrOutput) ToKeycloakBackupSpecAwsPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecAwsPtrOutput {
	return o
}

func (o KeycloakBackupSpecAwsPtrOutput) Elem() KeycloakBackupSpecAwsOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecAws) KeycloakBackupSpecAws { return *v }).(KeycloakBackupSpecAwsOutput)
}

// Provides a secret name used for connecting to AWS S3 Service. The secret needs to be in the following form:
//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       AWS_S3_BUCKET_NAME: <S3 Bucket Name>       AWS_ACCESS_KEY_ID: <AWS Access Key ID>       AWS_SECRET_ACCESS_KEY: <AWS Secret Key>
//  For more information, please refer to the Operator documentation.
func (o KeycloakBackupSpecAwsPtrOutput) CredentialsSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecAws) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsSecretName
	}).(pulumi.StringPtrOutput)
}

// If provided, the database backup will be encrypted. Provides a secret name used for encrypting database data. The secret needs to be in the following form:
//      apiVersion: v1     kind: Secret     metadata:       name: <Secret name>     type: Opaque     stringData:       GPG_PUBLIC_KEY: <GPG Public Key>       GPG_TRUST_MODEL: <GPG Trust Model>       GPG_RECIPIENT: <GPG Recipient>
//  For more information, please refer to the Operator documentation.
func (o KeycloakBackupSpecAwsPtrOutput) EncryptionKeySecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecAws) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKeySecretName
	}).(pulumi.StringPtrOutput)
}

// If specified, it will be used as a schedule for creating a CronJob.
func (o KeycloakBackupSpecAwsPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecAws) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Selector for looking up Keycloak Custom Resources.
type KeycloakBackupSpecInstanceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []KeycloakBackupSpecInstanceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// KeycloakBackupSpecInstanceSelectorInput is an input type that accepts KeycloakBackupSpecInstanceSelectorArgs and KeycloakBackupSpecInstanceSelectorOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecInstanceSelectorInput` via:
//
//          KeycloakBackupSpecInstanceSelectorArgs{...}
type KeycloakBackupSpecInstanceSelectorInput interface {
	pulumi.Input

	ToKeycloakBackupSpecInstanceSelectorOutput() KeycloakBackupSpecInstanceSelectorOutput
	ToKeycloakBackupSpecInstanceSelectorOutputWithContext(context.Context) KeycloakBackupSpecInstanceSelectorOutput
}

// Selector for looking up Keycloak Custom Resources.
type KeycloakBackupSpecInstanceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (KeycloakBackupSpecInstanceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecInstanceSelector)(nil)).Elem()
}

func (i KeycloakBackupSpecInstanceSelectorArgs) ToKeycloakBackupSpecInstanceSelectorOutput() KeycloakBackupSpecInstanceSelectorOutput {
	return i.ToKeycloakBackupSpecInstanceSelectorOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecInstanceSelectorArgs) ToKeycloakBackupSpecInstanceSelectorOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecInstanceSelectorOutput)
}

func (i KeycloakBackupSpecInstanceSelectorArgs) ToKeycloakBackupSpecInstanceSelectorPtrOutput() KeycloakBackupSpecInstanceSelectorPtrOutput {
	return i.ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecInstanceSelectorArgs) ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecInstanceSelectorOutput).ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(ctx)
}

// KeycloakBackupSpecInstanceSelectorPtrInput is an input type that accepts KeycloakBackupSpecInstanceSelectorArgs, KeycloakBackupSpecInstanceSelectorPtr and KeycloakBackupSpecInstanceSelectorPtrOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecInstanceSelectorPtrInput` via:
//
//          KeycloakBackupSpecInstanceSelectorArgs{...}
//
//  or:
//
//          nil
type KeycloakBackupSpecInstanceSelectorPtrInput interface {
	pulumi.Input

	ToKeycloakBackupSpecInstanceSelectorPtrOutput() KeycloakBackupSpecInstanceSelectorPtrOutput
	ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(context.Context) KeycloakBackupSpecInstanceSelectorPtrOutput
}

type keycloakBackupSpecInstanceSelectorPtrType KeycloakBackupSpecInstanceSelectorArgs

func KeycloakBackupSpecInstanceSelectorPtr(v *KeycloakBackupSpecInstanceSelectorArgs) KeycloakBackupSpecInstanceSelectorPtrInput {
	return (*keycloakBackupSpecInstanceSelectorPtrType)(v)
}

func (*keycloakBackupSpecInstanceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupSpecInstanceSelector)(nil)).Elem()
}

func (i *keycloakBackupSpecInstanceSelectorPtrType) ToKeycloakBackupSpecInstanceSelectorPtrOutput() KeycloakBackupSpecInstanceSelectorPtrOutput {
	return i.ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(context.Background())
}

func (i *keycloakBackupSpecInstanceSelectorPtrType) ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecInstanceSelectorPtrOutput)
}

// Selector for looking up Keycloak Custom Resources.
type KeycloakBackupSpecInstanceSelectorOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecInstanceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecInstanceSelector)(nil)).Elem()
}

func (o KeycloakBackupSpecInstanceSelectorOutput) ToKeycloakBackupSpecInstanceSelectorOutput() KeycloakBackupSpecInstanceSelectorOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorOutput) ToKeycloakBackupSpecInstanceSelectorOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorOutput) ToKeycloakBackupSpecInstanceSelectorPtrOutput() KeycloakBackupSpecInstanceSelectorPtrOutput {
	return o.ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(context.Background())
}

func (o KeycloakBackupSpecInstanceSelectorOutput) ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakBackupSpecInstanceSelector) *KeycloakBackupSpecInstanceSelector {
		return &v
	}).(KeycloakBackupSpecInstanceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakBackupSpecInstanceSelectorOutput) MatchExpressions() KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KeycloakBackupSpecInstanceSelector) []KeycloakBackupSpecInstanceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakBackupSpecInstanceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakBackupSpecInstanceSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type KeycloakBackupSpecInstanceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecInstanceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupSpecInstanceSelector)(nil)).Elem()
}

func (o KeycloakBackupSpecInstanceSelectorPtrOutput) ToKeycloakBackupSpecInstanceSelectorPtrOutput() KeycloakBackupSpecInstanceSelectorPtrOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorPtrOutput) ToKeycloakBackupSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorPtrOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorPtrOutput) Elem() KeycloakBackupSpecInstanceSelectorOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecInstanceSelector) KeycloakBackupSpecInstanceSelector { return *v }).(KeycloakBackupSpecInstanceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakBackupSpecInstanceSelectorPtrOutput) MatchExpressions() KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecInstanceSelector) []KeycloakBackupSpecInstanceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakBackupSpecInstanceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakBackupSpecInstanceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakBackupSpecInstanceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// KeycloakBackupSpecInstanceSelectorMatchExpressionsInput is an input type that accepts KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs and KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecInstanceSelectorMatchExpressionsInput` via:
//
//          KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs{...}
type KeycloakBackupSpecInstanceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutput() KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput
	ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutputWithContext(context.Context) KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutput() KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput {
	return i.ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput)
}

// KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayInput is an input type that accepts KeycloakBackupSpecInstanceSelectorMatchExpressionsArray and KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayInput` via:
//
//          KeycloakBackupSpecInstanceSelectorMatchExpressionsArray{ KeycloakBackupSpecInstanceSelectorMatchExpressionsArgs{...} }
type KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput() KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput
	ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput
}

type KeycloakBackupSpecInstanceSelectorMatchExpressionsArray []KeycloakBackupSpecInstanceSelectorMatchExpressionsInput

func (KeycloakBackupSpecInstanceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakBackupSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakBackupSpecInstanceSelectorMatchExpressionsArray) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput() KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput {
	return i.ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecInstanceSelectorMatchExpressionsArray) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutput() KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakBackupSpecInstanceSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakBackupSpecInstanceSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakBackupSpecInstanceSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakBackupSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput() KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput) ToKeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakBackupSpecInstanceSelectorMatchExpressions {
		return vs[0].([]KeycloakBackupSpecInstanceSelectorMatchExpressions)[vs[1].(int)]
	}).(KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakBackupSpecInstanceSelectorMatchLabels struct {
}

// KeycloakBackupSpecInstanceSelectorMatchLabelsInput is an input type that accepts KeycloakBackupSpecInstanceSelectorMatchLabelsArgs and KeycloakBackupSpecInstanceSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `KeycloakBackupSpecInstanceSelectorMatchLabelsInput` via:
//
//          KeycloakBackupSpecInstanceSelectorMatchLabelsArgs{...}
type KeycloakBackupSpecInstanceSelectorMatchLabelsInput interface {
	pulumi.Input

	ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutput() KeycloakBackupSpecInstanceSelectorMatchLabelsOutput
	ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutputWithContext(context.Context) KeycloakBackupSpecInstanceSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakBackupSpecInstanceSelectorMatchLabelsArgs struct {
}

func (KeycloakBackupSpecInstanceSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecInstanceSelectorMatchLabels)(nil)).Elem()
}

func (i KeycloakBackupSpecInstanceSelectorMatchLabelsArgs) ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutput() KeycloakBackupSpecInstanceSelectorMatchLabelsOutput {
	return i.ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i KeycloakBackupSpecInstanceSelectorMatchLabelsArgs) ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupSpecInstanceSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakBackupSpecInstanceSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (KeycloakBackupSpecInstanceSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupSpecInstanceSelectorMatchLabels)(nil)).Elem()
}

func (o KeycloakBackupSpecInstanceSelectorMatchLabelsOutput) ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutput() KeycloakBackupSpecInstanceSelectorMatchLabelsOutput {
	return o
}

func (o KeycloakBackupSpecInstanceSelectorMatchLabelsOutput) ToKeycloakBackupSpecInstanceSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakBackupSpecInstanceSelectorMatchLabelsOutput {
	return o
}

// KeycloakBackupStatus defines the observed state of KeycloakBackup.
type KeycloakBackupStatus struct {
	// Human-readable message indicating details about current operator phase or error.
	Message string `pulumi:"message"`
	// Current phase of the operator.
	Phase string `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready bool `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
	SecondaryResources map[string][]string `pulumi:"secondaryResources"`
}

// KeycloakBackupStatusInput is an input type that accepts KeycloakBackupStatusArgs and KeycloakBackupStatusOutput values.
// You can construct a concrete instance of `KeycloakBackupStatusInput` via:
//
//          KeycloakBackupStatusArgs{...}
type KeycloakBackupStatusInput interface {
	pulumi.Input

	ToKeycloakBackupStatusOutput() KeycloakBackupStatusOutput
	ToKeycloakBackupStatusOutputWithContext(context.Context) KeycloakBackupStatusOutput
}

// KeycloakBackupStatus defines the observed state of KeycloakBackup.
type KeycloakBackupStatusArgs struct {
	// Human-readable message indicating details about current operator phase or error.
	Message pulumi.StringInput `pulumi:"message"`
	// Current phase of the operator.
	Phase pulumi.StringInput `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
	SecondaryResources pulumi.StringArrayMapInput `pulumi:"secondaryResources"`
}

func (KeycloakBackupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupStatus)(nil)).Elem()
}

func (i KeycloakBackupStatusArgs) ToKeycloakBackupStatusOutput() KeycloakBackupStatusOutput {
	return i.ToKeycloakBackupStatusOutputWithContext(context.Background())
}

func (i KeycloakBackupStatusArgs) ToKeycloakBackupStatusOutputWithContext(ctx context.Context) KeycloakBackupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupStatusOutput)
}

func (i KeycloakBackupStatusArgs) ToKeycloakBackupStatusPtrOutput() KeycloakBackupStatusPtrOutput {
	return i.ToKeycloakBackupStatusPtrOutputWithContext(context.Background())
}

func (i KeycloakBackupStatusArgs) ToKeycloakBackupStatusPtrOutputWithContext(ctx context.Context) KeycloakBackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupStatusOutput).ToKeycloakBackupStatusPtrOutputWithContext(ctx)
}

// KeycloakBackupStatusPtrInput is an input type that accepts KeycloakBackupStatusArgs, KeycloakBackupStatusPtr and KeycloakBackupStatusPtrOutput values.
// You can construct a concrete instance of `KeycloakBackupStatusPtrInput` via:
//
//          KeycloakBackupStatusArgs{...}
//
//  or:
//
//          nil
type KeycloakBackupStatusPtrInput interface {
	pulumi.Input

	ToKeycloakBackupStatusPtrOutput() KeycloakBackupStatusPtrOutput
	ToKeycloakBackupStatusPtrOutputWithContext(context.Context) KeycloakBackupStatusPtrOutput
}

type keycloakBackupStatusPtrType KeycloakBackupStatusArgs

func KeycloakBackupStatusPtr(v *KeycloakBackupStatusArgs) KeycloakBackupStatusPtrInput {
	return (*keycloakBackupStatusPtrType)(v)
}

func (*keycloakBackupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupStatus)(nil)).Elem()
}

func (i *keycloakBackupStatusPtrType) ToKeycloakBackupStatusPtrOutput() KeycloakBackupStatusPtrOutput {
	return i.ToKeycloakBackupStatusPtrOutputWithContext(context.Background())
}

func (i *keycloakBackupStatusPtrType) ToKeycloakBackupStatusPtrOutputWithContext(ctx context.Context) KeycloakBackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupStatusPtrOutput)
}

// KeycloakBackupStatus defines the observed state of KeycloakBackup.
type KeycloakBackupStatusOutput struct{ *pulumi.OutputState }

func (KeycloakBackupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupStatus)(nil)).Elem()
}

func (o KeycloakBackupStatusOutput) ToKeycloakBackupStatusOutput() KeycloakBackupStatusOutput {
	return o
}

func (o KeycloakBackupStatusOutput) ToKeycloakBackupStatusOutputWithContext(ctx context.Context) KeycloakBackupStatusOutput {
	return o
}

func (o KeycloakBackupStatusOutput) ToKeycloakBackupStatusPtrOutput() KeycloakBackupStatusPtrOutput {
	return o.ToKeycloakBackupStatusPtrOutputWithContext(context.Background())
}

func (o KeycloakBackupStatusOutput) ToKeycloakBackupStatusPtrOutputWithContext(ctx context.Context) KeycloakBackupStatusPtrOutput {
	return o.ApplyT(func(v KeycloakBackupStatus) *KeycloakBackupStatus {
		return &v
	}).(KeycloakBackupStatusPtrOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakBackupStatusOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakBackupStatus) string { return v.Message }).(pulumi.StringOutput)
}

// Current phase of the operator.
func (o KeycloakBackupStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakBackupStatus) string { return v.Phase }).(pulumi.StringOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakBackupStatusOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v KeycloakBackupStatus) bool { return v.Ready }).(pulumi.BoolOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
func (o KeycloakBackupStatusOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakBackupStatus) map[string][]string { return v.SecondaryResources }).(pulumi.StringArrayMapOutput)
}

type KeycloakBackupStatusPtrOutput struct{ *pulumi.OutputState }

func (KeycloakBackupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakBackupStatus)(nil)).Elem()
}

func (o KeycloakBackupStatusPtrOutput) ToKeycloakBackupStatusPtrOutput() KeycloakBackupStatusPtrOutput {
	return o
}

func (o KeycloakBackupStatusPtrOutput) ToKeycloakBackupStatusPtrOutputWithContext(ctx context.Context) KeycloakBackupStatusPtrOutput {
	return o
}

func (o KeycloakBackupStatusPtrOutput) Elem() KeycloakBackupStatusOutput {
	return o.ApplyT(func(v *KeycloakBackupStatus) KeycloakBackupStatus { return *v }).(KeycloakBackupStatusOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakBackupStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Current phase of the operator.
func (o KeycloakBackupStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakBackupStatusPtrOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakBackupStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.Ready
	}).(pulumi.BoolPtrOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
func (o KeycloakBackupStatusPtrOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KeycloakBackupStatus) map[string][]string {
		if v == nil {
			return nil
		}
		return v.SecondaryResources
	}).(pulumi.StringArrayMapOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakBackupStatusSecondaryResources struct {
}

// KeycloakBackupStatusSecondaryResourcesInput is an input type that accepts KeycloakBackupStatusSecondaryResourcesArgs and KeycloakBackupStatusSecondaryResourcesOutput values.
// You can construct a concrete instance of `KeycloakBackupStatusSecondaryResourcesInput` via:
//
//          KeycloakBackupStatusSecondaryResourcesArgs{...}
type KeycloakBackupStatusSecondaryResourcesInput interface {
	pulumi.Input

	ToKeycloakBackupStatusSecondaryResourcesOutput() KeycloakBackupStatusSecondaryResourcesOutput
	ToKeycloakBackupStatusSecondaryResourcesOutputWithContext(context.Context) KeycloakBackupStatusSecondaryResourcesOutput
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakBackupStatusSecondaryResourcesArgs struct {
}

func (KeycloakBackupStatusSecondaryResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupStatusSecondaryResources)(nil)).Elem()
}

func (i KeycloakBackupStatusSecondaryResourcesArgs) ToKeycloakBackupStatusSecondaryResourcesOutput() KeycloakBackupStatusSecondaryResourcesOutput {
	return i.ToKeycloakBackupStatusSecondaryResourcesOutputWithContext(context.Background())
}

func (i KeycloakBackupStatusSecondaryResourcesArgs) ToKeycloakBackupStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakBackupStatusSecondaryResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakBackupStatusSecondaryResourcesOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakBackupStatusSecondaryResourcesOutput struct{ *pulumi.OutputState }

func (KeycloakBackupStatusSecondaryResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakBackupStatusSecondaryResources)(nil)).Elem()
}

func (o KeycloakBackupStatusSecondaryResourcesOutput) ToKeycloakBackupStatusSecondaryResourcesOutput() KeycloakBackupStatusSecondaryResourcesOutput {
	return o
}

func (o KeycloakBackupStatusSecondaryResourcesOutput) ToKeycloakBackupStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakBackupStatusSecondaryResourcesOutput {
	return o
}

// KeycloakClient is the Schema for the keycloakclients API.
type KeycloakClientType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakClientSpec defines the desired state of KeycloakClient.
	Spec *KeycloakClientSpec `pulumi:"spec"`
	// KeycloakClientStatus defines the observed state of KeycloakClient
	Status *KeycloakClientStatus `pulumi:"status"`
}

// KeycloakClientTypeInput is an input type that accepts KeycloakClientTypeArgs and KeycloakClientTypeOutput values.
// You can construct a concrete instance of `KeycloakClientTypeInput` via:
//
//          KeycloakClientTypeArgs{...}
type KeycloakClientTypeInput interface {
	pulumi.Input

	ToKeycloakClientTypeOutput() KeycloakClientTypeOutput
	ToKeycloakClientTypeOutputWithContext(context.Context) KeycloakClientTypeOutput
}

// KeycloakClient is the Schema for the keycloakclients API.
type KeycloakClientTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KeycloakClientSpec defines the desired state of KeycloakClient.
	Spec KeycloakClientSpecPtrInput `pulumi:"spec"`
	// KeycloakClientStatus defines the observed state of KeycloakClient
	Status KeycloakClientStatusPtrInput `pulumi:"status"`
}

func (KeycloakClientTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientType)(nil)).Elem()
}

func (i KeycloakClientTypeArgs) ToKeycloakClientTypeOutput() KeycloakClientTypeOutput {
	return i.ToKeycloakClientTypeOutputWithContext(context.Background())
}

func (i KeycloakClientTypeArgs) ToKeycloakClientTypeOutputWithContext(ctx context.Context) KeycloakClientTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientTypeOutput)
}

// KeycloakClient is the Schema for the keycloakclients API.
type KeycloakClientTypeOutput struct{ *pulumi.OutputState }

func (KeycloakClientTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientType)(nil)).Elem()
}

func (o KeycloakClientTypeOutput) ToKeycloakClientTypeOutput() KeycloakClientTypeOutput {
	return o
}

func (o KeycloakClientTypeOutput) ToKeycloakClientTypeOutputWithContext(ctx context.Context) KeycloakClientTypeOutput {
	return o
}

func (o KeycloakClientTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KeycloakClientTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KeycloakClientTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KeycloakClientType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KeycloakClientSpec defines the desired state of KeycloakClient.
func (o KeycloakClientTypeOutput) Spec() KeycloakClientSpecPtrOutput {
	return o.ApplyT(func(v KeycloakClientType) *KeycloakClientSpec { return v.Spec }).(KeycloakClientSpecPtrOutput)
}

// KeycloakClientStatus defines the observed state of KeycloakClient
func (o KeycloakClientTypeOutput) Status() KeycloakClientStatusPtrOutput {
	return o.ApplyT(func(v KeycloakClientType) *KeycloakClientStatus { return v.Status }).(KeycloakClientStatusPtrOutput)
}

type KeycloakClientMetadata struct {
}

// KeycloakClientMetadataInput is an input type that accepts KeycloakClientMetadataArgs and KeycloakClientMetadataOutput values.
// You can construct a concrete instance of `KeycloakClientMetadataInput` via:
//
//          KeycloakClientMetadataArgs{...}
type KeycloakClientMetadataInput interface {
	pulumi.Input

	ToKeycloakClientMetadataOutput() KeycloakClientMetadataOutput
	ToKeycloakClientMetadataOutputWithContext(context.Context) KeycloakClientMetadataOutput
}

type KeycloakClientMetadataArgs struct {
}

func (KeycloakClientMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientMetadata)(nil)).Elem()
}

func (i KeycloakClientMetadataArgs) ToKeycloakClientMetadataOutput() KeycloakClientMetadataOutput {
	return i.ToKeycloakClientMetadataOutputWithContext(context.Background())
}

func (i KeycloakClientMetadataArgs) ToKeycloakClientMetadataOutputWithContext(ctx context.Context) KeycloakClientMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientMetadataOutput)
}

type KeycloakClientMetadataOutput struct{ *pulumi.OutputState }

func (KeycloakClientMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientMetadata)(nil)).Elem()
}

func (o KeycloakClientMetadataOutput) ToKeycloakClientMetadataOutput() KeycloakClientMetadataOutput {
	return o
}

func (o KeycloakClientMetadataOutput) ToKeycloakClientMetadataOutputWithContext(ctx context.Context) KeycloakClientMetadataOutput {
	return o
}

// KeycloakClientSpec defines the desired state of KeycloakClient.
type KeycloakClientSpec struct {
	// Keycloak Client REST object.
	Client KeycloakClientSpecClient `pulumi:"client"`
	// Selector for looking up KeycloakRealm Custom Resources.
	RealmSelector KeycloakClientSpecRealmSelector `pulumi:"realmSelector"`
}

// KeycloakClientSpecInput is an input type that accepts KeycloakClientSpecArgs and KeycloakClientSpecOutput values.
// You can construct a concrete instance of `KeycloakClientSpecInput` via:
//
//          KeycloakClientSpecArgs{...}
type KeycloakClientSpecInput interface {
	pulumi.Input

	ToKeycloakClientSpecOutput() KeycloakClientSpecOutput
	ToKeycloakClientSpecOutputWithContext(context.Context) KeycloakClientSpecOutput
}

// KeycloakClientSpec defines the desired state of KeycloakClient.
type KeycloakClientSpecArgs struct {
	// Keycloak Client REST object.
	Client KeycloakClientSpecClientInput `pulumi:"client"`
	// Selector for looking up KeycloakRealm Custom Resources.
	RealmSelector KeycloakClientSpecRealmSelectorInput `pulumi:"realmSelector"`
}

func (KeycloakClientSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpec)(nil)).Elem()
}

func (i KeycloakClientSpecArgs) ToKeycloakClientSpecOutput() KeycloakClientSpecOutput {
	return i.ToKeycloakClientSpecOutputWithContext(context.Background())
}

func (i KeycloakClientSpecArgs) ToKeycloakClientSpecOutputWithContext(ctx context.Context) KeycloakClientSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecOutput)
}

func (i KeycloakClientSpecArgs) ToKeycloakClientSpecPtrOutput() KeycloakClientSpecPtrOutput {
	return i.ToKeycloakClientSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakClientSpecArgs) ToKeycloakClientSpecPtrOutputWithContext(ctx context.Context) KeycloakClientSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecOutput).ToKeycloakClientSpecPtrOutputWithContext(ctx)
}

// KeycloakClientSpecPtrInput is an input type that accepts KeycloakClientSpecArgs, KeycloakClientSpecPtr and KeycloakClientSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakClientSpecPtrInput` via:
//
//          KeycloakClientSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakClientSpecPtrInput interface {
	pulumi.Input

	ToKeycloakClientSpecPtrOutput() KeycloakClientSpecPtrOutput
	ToKeycloakClientSpecPtrOutputWithContext(context.Context) KeycloakClientSpecPtrOutput
}

type keycloakClientSpecPtrType KeycloakClientSpecArgs

func KeycloakClientSpecPtr(v *KeycloakClientSpecArgs) KeycloakClientSpecPtrInput {
	return (*keycloakClientSpecPtrType)(v)
}

func (*keycloakClientSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientSpec)(nil)).Elem()
}

func (i *keycloakClientSpecPtrType) ToKeycloakClientSpecPtrOutput() KeycloakClientSpecPtrOutput {
	return i.ToKeycloakClientSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakClientSpecPtrType) ToKeycloakClientSpecPtrOutputWithContext(ctx context.Context) KeycloakClientSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecPtrOutput)
}

// KeycloakClientSpec defines the desired state of KeycloakClient.
type KeycloakClientSpecOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpec)(nil)).Elem()
}

func (o KeycloakClientSpecOutput) ToKeycloakClientSpecOutput() KeycloakClientSpecOutput {
	return o
}

func (o KeycloakClientSpecOutput) ToKeycloakClientSpecOutputWithContext(ctx context.Context) KeycloakClientSpecOutput {
	return o
}

func (o KeycloakClientSpecOutput) ToKeycloakClientSpecPtrOutput() KeycloakClientSpecPtrOutput {
	return o.ToKeycloakClientSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakClientSpecOutput) ToKeycloakClientSpecPtrOutputWithContext(ctx context.Context) KeycloakClientSpecPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpec) *KeycloakClientSpec {
		return &v
	}).(KeycloakClientSpecPtrOutput)
}

// Keycloak Client REST object.
func (o KeycloakClientSpecOutput) Client() KeycloakClientSpecClientOutput {
	return o.ApplyT(func(v KeycloakClientSpec) KeycloakClientSpecClient { return v.Client }).(KeycloakClientSpecClientOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
func (o KeycloakClientSpecOutput) RealmSelector() KeycloakClientSpecRealmSelectorOutput {
	return o.ApplyT(func(v KeycloakClientSpec) KeycloakClientSpecRealmSelector { return v.RealmSelector }).(KeycloakClientSpecRealmSelectorOutput)
}

type KeycloakClientSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientSpec)(nil)).Elem()
}

func (o KeycloakClientSpecPtrOutput) ToKeycloakClientSpecPtrOutput() KeycloakClientSpecPtrOutput {
	return o
}

func (o KeycloakClientSpecPtrOutput) ToKeycloakClientSpecPtrOutputWithContext(ctx context.Context) KeycloakClientSpecPtrOutput {
	return o
}

func (o KeycloakClientSpecPtrOutput) Elem() KeycloakClientSpecOutput {
	return o.ApplyT(func(v *KeycloakClientSpec) KeycloakClientSpec { return *v }).(KeycloakClientSpecOutput)
}

// Keycloak Client REST object.
func (o KeycloakClientSpecPtrOutput) Client() KeycloakClientSpecClientPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpec) *KeycloakClientSpecClient {
		if v == nil {
			return nil
		}
		return &v.Client
	}).(KeycloakClientSpecClientPtrOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
func (o KeycloakClientSpecPtrOutput) RealmSelector() KeycloakClientSpecRealmSelectorPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpec) *KeycloakClientSpecRealmSelector {
		if v == nil {
			return nil
		}
		return &v.RealmSelector
	}).(KeycloakClientSpecRealmSelectorPtrOutput)
}

// Keycloak Client REST object.
type KeycloakClientSpecClient struct {
	// Access options.
	Access map[string]bool `pulumi:"access"`
	// Application Admin URL.
	AdminUrl *string `pulumi:"adminUrl"`
	// Client Attributes.
	Attributes map[string]string `pulumi:"attributes"`
	// Application base URL.
	BaseUrl *string `pulumi:"baseUrl"`
	// True if a client supports only Bearer Tokens.
	BearerOnly *bool `pulumi:"bearerOnly"`
	// What Client authentication type to use.
	ClientAuthenticatorType *string `pulumi:"clientAuthenticatorType"`
	// Client ID.
	ClientId string `pulumi:"clientId"`
	// True if Consent Screen is required.
	ConsentRequired *bool `pulumi:"consentRequired"`
	// Default Client roles.
	DefaultRoles []string `pulumi:"defaultRoles"`
	// Client description.
	Description *string `pulumi:"description"`
	// True if Direct Grant is enabled.
	DirectAccessGrantsEnabled *bool `pulumi:"directAccessGrantsEnabled"`
	// Client enabled flag.
	Enabled *bool `pulumi:"enabled"`
	// True if this client supports Front Channel logout.
	FrontchannelLogout *bool `pulumi:"frontchannelLogout"`
	// True if Full Scope is allowed.
	FullScopeAllowed *bool `pulumi:"fullScopeAllowed"`
	// Client ID. If not specified, automatically generated.
	Id *string `pulumi:"id"`
	// True if Implicit flow is enabled.
	ImplicitFlowEnabled *bool `pulumi:"implicitFlowEnabled"`
	// Client name.
	Name *string `pulumi:"name"`
	// Node registration timeout.
	NodeReRegistrationTimeout *int `pulumi:"nodeReRegistrationTimeout"`
	// Not Before setting.
	NotBefore *int `pulumi:"notBefore"`
	// Protocol used for this Client.
	Protocol *string `pulumi:"protocol"`
	// Protocol Mappers.
	ProtocolMappers []KeycloakClientSpecClientProtocolMappers `pulumi:"protocolMappers"`
	// True if this is a public Client.
	PublicClient *bool `pulumi:"publicClient"`
	// A list of valid Redirection URLs.
	RedirectUris []string `pulumi:"redirectUris"`
	// Application root URL.
	RootUrl *string `pulumi:"rootUrl"`
	// Client Secret. The Operator will automatically create a Secret based on this value.
	Secret *string `pulumi:"secret"`
	// True if Service Accounts are enabled.
	ServiceAccountsEnabled *bool `pulumi:"serviceAccountsEnabled"`
	// True if Standard flow is enabled.
	StandardFlowEnabled *bool `pulumi:"standardFlowEnabled"`
	// Surrogate Authentication Required option.
	SurrogateAuthRequired *bool `pulumi:"surrogateAuthRequired"`
	// True to use a Template Config.
	UseTemplateConfig *bool `pulumi:"useTemplateConfig"`
	// True to use Template Mappers.
	UseTemplateMappers *bool `pulumi:"useTemplateMappers"`
	// True to use Template Scope.
	UseTemplateScope *bool `pulumi:"useTemplateScope"`
	// A list of valid Web Origins.
	WebOrigins []string `pulumi:"webOrigins"`
}

// KeycloakClientSpecClientInput is an input type that accepts KeycloakClientSpecClientArgs and KeycloakClientSpecClientOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientInput` via:
//
//          KeycloakClientSpecClientArgs{...}
type KeycloakClientSpecClientInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientOutput() KeycloakClientSpecClientOutput
	ToKeycloakClientSpecClientOutputWithContext(context.Context) KeycloakClientSpecClientOutput
}

// Keycloak Client REST object.
type KeycloakClientSpecClientArgs struct {
	// Access options.
	Access pulumi.BoolMapInput `pulumi:"access"`
	// Application Admin URL.
	AdminUrl pulumi.StringPtrInput `pulumi:"adminUrl"`
	// Client Attributes.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// Application base URL.
	BaseUrl pulumi.StringPtrInput `pulumi:"baseUrl"`
	// True if a client supports only Bearer Tokens.
	BearerOnly pulumi.BoolPtrInput `pulumi:"bearerOnly"`
	// What Client authentication type to use.
	ClientAuthenticatorType pulumi.StringPtrInput `pulumi:"clientAuthenticatorType"`
	// Client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// True if Consent Screen is required.
	ConsentRequired pulumi.BoolPtrInput `pulumi:"consentRequired"`
	// Default Client roles.
	DefaultRoles pulumi.StringArrayInput `pulumi:"defaultRoles"`
	// Client description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// True if Direct Grant is enabled.
	DirectAccessGrantsEnabled pulumi.BoolPtrInput `pulumi:"directAccessGrantsEnabled"`
	// Client enabled flag.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// True if this client supports Front Channel logout.
	FrontchannelLogout pulumi.BoolPtrInput `pulumi:"frontchannelLogout"`
	// True if Full Scope is allowed.
	FullScopeAllowed pulumi.BoolPtrInput `pulumi:"fullScopeAllowed"`
	// Client ID. If not specified, automatically generated.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// True if Implicit flow is enabled.
	ImplicitFlowEnabled pulumi.BoolPtrInput `pulumi:"implicitFlowEnabled"`
	// Client name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Node registration timeout.
	NodeReRegistrationTimeout pulumi.IntPtrInput `pulumi:"nodeReRegistrationTimeout"`
	// Not Before setting.
	NotBefore pulumi.IntPtrInput `pulumi:"notBefore"`
	// Protocol used for this Client.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Protocol Mappers.
	ProtocolMappers KeycloakClientSpecClientProtocolMappersArrayInput `pulumi:"protocolMappers"`
	// True if this is a public Client.
	PublicClient pulumi.BoolPtrInput `pulumi:"publicClient"`
	// A list of valid Redirection URLs.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
	// Application root URL.
	RootUrl pulumi.StringPtrInput `pulumi:"rootUrl"`
	// Client Secret. The Operator will automatically create a Secret based on this value.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// True if Service Accounts are enabled.
	ServiceAccountsEnabled pulumi.BoolPtrInput `pulumi:"serviceAccountsEnabled"`
	// True if Standard flow is enabled.
	StandardFlowEnabled pulumi.BoolPtrInput `pulumi:"standardFlowEnabled"`
	// Surrogate Authentication Required option.
	SurrogateAuthRequired pulumi.BoolPtrInput `pulumi:"surrogateAuthRequired"`
	// True to use a Template Config.
	UseTemplateConfig pulumi.BoolPtrInput `pulumi:"useTemplateConfig"`
	// True to use Template Mappers.
	UseTemplateMappers pulumi.BoolPtrInput `pulumi:"useTemplateMappers"`
	// True to use Template Scope.
	UseTemplateScope pulumi.BoolPtrInput `pulumi:"useTemplateScope"`
	// A list of valid Web Origins.
	WebOrigins pulumi.StringArrayInput `pulumi:"webOrigins"`
}

func (KeycloakClientSpecClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClient)(nil)).Elem()
}

func (i KeycloakClientSpecClientArgs) ToKeycloakClientSpecClientOutput() KeycloakClientSpecClientOutput {
	return i.ToKeycloakClientSpecClientOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientArgs) ToKeycloakClientSpecClientOutputWithContext(ctx context.Context) KeycloakClientSpecClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientOutput)
}

func (i KeycloakClientSpecClientArgs) ToKeycloakClientSpecClientPtrOutput() KeycloakClientSpecClientPtrOutput {
	return i.ToKeycloakClientSpecClientPtrOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientArgs) ToKeycloakClientSpecClientPtrOutputWithContext(ctx context.Context) KeycloakClientSpecClientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientOutput).ToKeycloakClientSpecClientPtrOutputWithContext(ctx)
}

// KeycloakClientSpecClientPtrInput is an input type that accepts KeycloakClientSpecClientArgs, KeycloakClientSpecClientPtr and KeycloakClientSpecClientPtrOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientPtrInput` via:
//
//          KeycloakClientSpecClientArgs{...}
//
//  or:
//
//          nil
type KeycloakClientSpecClientPtrInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientPtrOutput() KeycloakClientSpecClientPtrOutput
	ToKeycloakClientSpecClientPtrOutputWithContext(context.Context) KeycloakClientSpecClientPtrOutput
}

type keycloakClientSpecClientPtrType KeycloakClientSpecClientArgs

func KeycloakClientSpecClientPtr(v *KeycloakClientSpecClientArgs) KeycloakClientSpecClientPtrInput {
	return (*keycloakClientSpecClientPtrType)(v)
}

func (*keycloakClientSpecClientPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientSpecClient)(nil)).Elem()
}

func (i *keycloakClientSpecClientPtrType) ToKeycloakClientSpecClientPtrOutput() KeycloakClientSpecClientPtrOutput {
	return i.ToKeycloakClientSpecClientPtrOutputWithContext(context.Background())
}

func (i *keycloakClientSpecClientPtrType) ToKeycloakClientSpecClientPtrOutputWithContext(ctx context.Context) KeycloakClientSpecClientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientPtrOutput)
}

// Keycloak Client REST object.
type KeycloakClientSpecClientOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClient)(nil)).Elem()
}

func (o KeycloakClientSpecClientOutput) ToKeycloakClientSpecClientOutput() KeycloakClientSpecClientOutput {
	return o
}

func (o KeycloakClientSpecClientOutput) ToKeycloakClientSpecClientOutputWithContext(ctx context.Context) KeycloakClientSpecClientOutput {
	return o
}

func (o KeycloakClientSpecClientOutput) ToKeycloakClientSpecClientPtrOutput() KeycloakClientSpecClientPtrOutput {
	return o.ToKeycloakClientSpecClientPtrOutputWithContext(context.Background())
}

func (o KeycloakClientSpecClientOutput) ToKeycloakClientSpecClientPtrOutputWithContext(ctx context.Context) KeycloakClientSpecClientPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *KeycloakClientSpecClient {
		return &v
	}).(KeycloakClientSpecClientPtrOutput)
}

// Access options.
func (o KeycloakClientSpecClientOutput) Access() pulumi.BoolMapOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) map[string]bool { return v.Access }).(pulumi.BoolMapOutput)
}

// Application Admin URL.
func (o KeycloakClientSpecClientOutput) AdminUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.AdminUrl }).(pulumi.StringPtrOutput)
}

// Client Attributes.
func (o KeycloakClientSpecClientOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// Application base URL.
func (o KeycloakClientSpecClientOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.BaseUrl }).(pulumi.StringPtrOutput)
}

// True if a client supports only Bearer Tokens.
func (o KeycloakClientSpecClientOutput) BearerOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.BearerOnly }).(pulumi.BoolPtrOutput)
}

// What Client authentication type to use.
func (o KeycloakClientSpecClientOutput) ClientAuthenticatorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.ClientAuthenticatorType }).(pulumi.StringPtrOutput)
}

// Client ID.
func (o KeycloakClientSpecClientOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) string { return v.ClientId }).(pulumi.StringOutput)
}

// True if Consent Screen is required.
func (o KeycloakClientSpecClientOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.ConsentRequired }).(pulumi.BoolPtrOutput)
}

// Default Client roles.
func (o KeycloakClientSpecClientOutput) DefaultRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) []string { return v.DefaultRoles }).(pulumi.StringArrayOutput)
}

// Client description.
func (o KeycloakClientSpecClientOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// True if Direct Grant is enabled.
func (o KeycloakClientSpecClientOutput) DirectAccessGrantsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.DirectAccessGrantsEnabled }).(pulumi.BoolPtrOutput)
}

// Client enabled flag.
func (o KeycloakClientSpecClientOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// True if this client supports Front Channel logout.
func (o KeycloakClientSpecClientOutput) FrontchannelLogout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.FrontchannelLogout }).(pulumi.BoolPtrOutput)
}

// True if Full Scope is allowed.
func (o KeycloakClientSpecClientOutput) FullScopeAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.FullScopeAllowed }).(pulumi.BoolPtrOutput)
}

// Client ID. If not specified, automatically generated.
func (o KeycloakClientSpecClientOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// True if Implicit flow is enabled.
func (o KeycloakClientSpecClientOutput) ImplicitFlowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.ImplicitFlowEnabled }).(pulumi.BoolPtrOutput)
}

// Client name.
func (o KeycloakClientSpecClientOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Node registration timeout.
func (o KeycloakClientSpecClientOutput) NodeReRegistrationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *int { return v.NodeReRegistrationTimeout }).(pulumi.IntPtrOutput)
}

// Not Before setting.
func (o KeycloakClientSpecClientOutput) NotBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *int { return v.NotBefore }).(pulumi.IntPtrOutput)
}

// Protocol used for this Client.
func (o KeycloakClientSpecClientOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Protocol Mappers.
func (o KeycloakClientSpecClientOutput) ProtocolMappers() KeycloakClientSpecClientProtocolMappersArrayOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) []KeycloakClientSpecClientProtocolMappers { return v.ProtocolMappers }).(KeycloakClientSpecClientProtocolMappersArrayOutput)
}

// True if this is a public Client.
func (o KeycloakClientSpecClientOutput) PublicClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.PublicClient }).(pulumi.BoolPtrOutput)
}

// A list of valid Redirection URLs.
func (o KeycloakClientSpecClientOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

// Application root URL.
func (o KeycloakClientSpecClientOutput) RootUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.RootUrl }).(pulumi.StringPtrOutput)
}

// Client Secret. The Operator will automatically create a Secret based on this value.
func (o KeycloakClientSpecClientOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// True if Service Accounts are enabled.
func (o KeycloakClientSpecClientOutput) ServiceAccountsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.ServiceAccountsEnabled }).(pulumi.BoolPtrOutput)
}

// True if Standard flow is enabled.
func (o KeycloakClientSpecClientOutput) StandardFlowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.StandardFlowEnabled }).(pulumi.BoolPtrOutput)
}

// Surrogate Authentication Required option.
func (o KeycloakClientSpecClientOutput) SurrogateAuthRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.SurrogateAuthRequired }).(pulumi.BoolPtrOutput)
}

// True to use a Template Config.
func (o KeycloakClientSpecClientOutput) UseTemplateConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.UseTemplateConfig }).(pulumi.BoolPtrOutput)
}

// True to use Template Mappers.
func (o KeycloakClientSpecClientOutput) UseTemplateMappers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.UseTemplateMappers }).(pulumi.BoolPtrOutput)
}

// True to use Template Scope.
func (o KeycloakClientSpecClientOutput) UseTemplateScope() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) *bool { return v.UseTemplateScope }).(pulumi.BoolPtrOutput)
}

// A list of valid Web Origins.
func (o KeycloakClientSpecClientOutput) WebOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakClientSpecClient) []string { return v.WebOrigins }).(pulumi.StringArrayOutput)
}

type KeycloakClientSpecClientPtrOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientSpecClient)(nil)).Elem()
}

func (o KeycloakClientSpecClientPtrOutput) ToKeycloakClientSpecClientPtrOutput() KeycloakClientSpecClientPtrOutput {
	return o
}

func (o KeycloakClientSpecClientPtrOutput) ToKeycloakClientSpecClientPtrOutputWithContext(ctx context.Context) KeycloakClientSpecClientPtrOutput {
	return o
}

func (o KeycloakClientSpecClientPtrOutput) Elem() KeycloakClientSpecClientOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) KeycloakClientSpecClient { return *v }).(KeycloakClientSpecClientOutput)
}

// Access options.
func (o KeycloakClientSpecClientPtrOutput) Access() pulumi.BoolMapOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) map[string]bool {
		if v == nil {
			return nil
		}
		return v.Access
	}).(pulumi.BoolMapOutput)
}

// Application Admin URL.
func (o KeycloakClientSpecClientPtrOutput) AdminUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.AdminUrl
	}).(pulumi.StringPtrOutput)
}

// Client Attributes.
func (o KeycloakClientSpecClientPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

// Application base URL.
func (o KeycloakClientSpecClientPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// True if a client supports only Bearer Tokens.
func (o KeycloakClientSpecClientPtrOutput) BearerOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.BearerOnly
	}).(pulumi.BoolPtrOutput)
}

// What Client authentication type to use.
func (o KeycloakClientSpecClientPtrOutput) ClientAuthenticatorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.ClientAuthenticatorType
	}).(pulumi.StringPtrOutput)
}

// Client ID.
func (o KeycloakClientSpecClientPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// True if Consent Screen is required.
func (o KeycloakClientSpecClientPtrOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.ConsentRequired
	}).(pulumi.BoolPtrOutput)
}

// Default Client roles.
func (o KeycloakClientSpecClientPtrOutput) DefaultRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) []string {
		if v == nil {
			return nil
		}
		return v.DefaultRoles
	}).(pulumi.StringArrayOutput)
}

// Client description.
func (o KeycloakClientSpecClientPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// True if Direct Grant is enabled.
func (o KeycloakClientSpecClientPtrOutput) DirectAccessGrantsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.DirectAccessGrantsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Client enabled flag.
func (o KeycloakClientSpecClientPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// True if this client supports Front Channel logout.
func (o KeycloakClientSpecClientPtrOutput) FrontchannelLogout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.FrontchannelLogout
	}).(pulumi.BoolPtrOutput)
}

// True if Full Scope is allowed.
func (o KeycloakClientSpecClientPtrOutput) FullScopeAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.FullScopeAllowed
	}).(pulumi.BoolPtrOutput)
}

// Client ID. If not specified, automatically generated.
func (o KeycloakClientSpecClientPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// True if Implicit flow is enabled.
func (o KeycloakClientSpecClientPtrOutput) ImplicitFlowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.ImplicitFlowEnabled
	}).(pulumi.BoolPtrOutput)
}

// Client name.
func (o KeycloakClientSpecClientPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Node registration timeout.
func (o KeycloakClientSpecClientPtrOutput) NodeReRegistrationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *int {
		if v == nil {
			return nil
		}
		return v.NodeReRegistrationTimeout
	}).(pulumi.IntPtrOutput)
}

// Not Before setting.
func (o KeycloakClientSpecClientPtrOutput) NotBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *int {
		if v == nil {
			return nil
		}
		return v.NotBefore
	}).(pulumi.IntPtrOutput)
}

// Protocol used for this Client.
func (o KeycloakClientSpecClientPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Protocol Mappers.
func (o KeycloakClientSpecClientPtrOutput) ProtocolMappers() KeycloakClientSpecClientProtocolMappersArrayOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) []KeycloakClientSpecClientProtocolMappers {
		if v == nil {
			return nil
		}
		return v.ProtocolMappers
	}).(KeycloakClientSpecClientProtocolMappersArrayOutput)
}

// True if this is a public Client.
func (o KeycloakClientSpecClientPtrOutput) PublicClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.PublicClient
	}).(pulumi.BoolPtrOutput)
}

// A list of valid Redirection URLs.
func (o KeycloakClientSpecClientPtrOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) []string {
		if v == nil {
			return nil
		}
		return v.RedirectUris
	}).(pulumi.StringArrayOutput)
}

// Application root URL.
func (o KeycloakClientSpecClientPtrOutput) RootUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.RootUrl
	}).(pulumi.StringPtrOutput)
}

// Client Secret. The Operator will automatically create a Secret based on this value.
func (o KeycloakClientSpecClientPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// True if Service Accounts are enabled.
func (o KeycloakClientSpecClientPtrOutput) ServiceAccountsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceAccountsEnabled
	}).(pulumi.BoolPtrOutput)
}

// True if Standard flow is enabled.
func (o KeycloakClientSpecClientPtrOutput) StandardFlowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.StandardFlowEnabled
	}).(pulumi.BoolPtrOutput)
}

// Surrogate Authentication Required option.
func (o KeycloakClientSpecClientPtrOutput) SurrogateAuthRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.SurrogateAuthRequired
	}).(pulumi.BoolPtrOutput)
}

// True to use a Template Config.
func (o KeycloakClientSpecClientPtrOutput) UseTemplateConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.UseTemplateConfig
	}).(pulumi.BoolPtrOutput)
}

// True to use Template Mappers.
func (o KeycloakClientSpecClientPtrOutput) UseTemplateMappers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.UseTemplateMappers
	}).(pulumi.BoolPtrOutput)
}

// True to use Template Scope.
func (o KeycloakClientSpecClientPtrOutput) UseTemplateScope() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) *bool {
		if v == nil {
			return nil
		}
		return v.UseTemplateScope
	}).(pulumi.BoolPtrOutput)
}

// A list of valid Web Origins.
func (o KeycloakClientSpecClientPtrOutput) WebOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakClientSpecClient) []string {
		if v == nil {
			return nil
		}
		return v.WebOrigins
	}).(pulumi.StringArrayOutput)
}

// Access options.
type KeycloakClientSpecClientAccess struct {
}

// KeycloakClientSpecClientAccessInput is an input type that accepts KeycloakClientSpecClientAccessArgs and KeycloakClientSpecClientAccessOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientAccessInput` via:
//
//          KeycloakClientSpecClientAccessArgs{...}
type KeycloakClientSpecClientAccessInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientAccessOutput() KeycloakClientSpecClientAccessOutput
	ToKeycloakClientSpecClientAccessOutputWithContext(context.Context) KeycloakClientSpecClientAccessOutput
}

// Access options.
type KeycloakClientSpecClientAccessArgs struct {
}

func (KeycloakClientSpecClientAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientAccess)(nil)).Elem()
}

func (i KeycloakClientSpecClientAccessArgs) ToKeycloakClientSpecClientAccessOutput() KeycloakClientSpecClientAccessOutput {
	return i.ToKeycloakClientSpecClientAccessOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientAccessArgs) ToKeycloakClientSpecClientAccessOutputWithContext(ctx context.Context) KeycloakClientSpecClientAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientAccessOutput)
}

// Access options.
type KeycloakClientSpecClientAccessOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientAccess)(nil)).Elem()
}

func (o KeycloakClientSpecClientAccessOutput) ToKeycloakClientSpecClientAccessOutput() KeycloakClientSpecClientAccessOutput {
	return o
}

func (o KeycloakClientSpecClientAccessOutput) ToKeycloakClientSpecClientAccessOutputWithContext(ctx context.Context) KeycloakClientSpecClientAccessOutput {
	return o
}

// Client Attributes.
type KeycloakClientSpecClientAttributes struct {
}

// KeycloakClientSpecClientAttributesInput is an input type that accepts KeycloakClientSpecClientAttributesArgs and KeycloakClientSpecClientAttributesOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientAttributesInput` via:
//
//          KeycloakClientSpecClientAttributesArgs{...}
type KeycloakClientSpecClientAttributesInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientAttributesOutput() KeycloakClientSpecClientAttributesOutput
	ToKeycloakClientSpecClientAttributesOutputWithContext(context.Context) KeycloakClientSpecClientAttributesOutput
}

// Client Attributes.
type KeycloakClientSpecClientAttributesArgs struct {
}

func (KeycloakClientSpecClientAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientAttributes)(nil)).Elem()
}

func (i KeycloakClientSpecClientAttributesArgs) ToKeycloakClientSpecClientAttributesOutput() KeycloakClientSpecClientAttributesOutput {
	return i.ToKeycloakClientSpecClientAttributesOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientAttributesArgs) ToKeycloakClientSpecClientAttributesOutputWithContext(ctx context.Context) KeycloakClientSpecClientAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientAttributesOutput)
}

// Client Attributes.
type KeycloakClientSpecClientAttributesOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientAttributes)(nil)).Elem()
}

func (o KeycloakClientSpecClientAttributesOutput) ToKeycloakClientSpecClientAttributesOutput() KeycloakClientSpecClientAttributesOutput {
	return o
}

func (o KeycloakClientSpecClientAttributesOutput) ToKeycloakClientSpecClientAttributesOutputWithContext(ctx context.Context) KeycloakClientSpecClientAttributesOutput {
	return o
}

type KeycloakClientSpecClientProtocolMappers struct {
	// Config options.
	Config map[string]string `pulumi:"config"`
	// True if Consent Screen is required.
	ConsentRequired *bool `pulumi:"consentRequired"`
	// Text to use for displaying Consent Screen.
	ConsentText *string `pulumi:"consentText"`
	// Protocol Mapper ID.
	Id *string `pulumi:"id"`
	// Protocol Mapper Name.
	Name *string `pulumi:"name"`
	// Protocol to use.
	Protocol *string `pulumi:"protocol"`
	// Protocol Mapper to use
	ProtocolMapper *string `pulumi:"protocolMapper"`
}

// KeycloakClientSpecClientProtocolMappersInput is an input type that accepts KeycloakClientSpecClientProtocolMappersArgs and KeycloakClientSpecClientProtocolMappersOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientProtocolMappersInput` via:
//
//          KeycloakClientSpecClientProtocolMappersArgs{...}
type KeycloakClientSpecClientProtocolMappersInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientProtocolMappersOutput() KeycloakClientSpecClientProtocolMappersOutput
	ToKeycloakClientSpecClientProtocolMappersOutputWithContext(context.Context) KeycloakClientSpecClientProtocolMappersOutput
}

type KeycloakClientSpecClientProtocolMappersArgs struct {
	// Config options.
	Config pulumi.StringMapInput `pulumi:"config"`
	// True if Consent Screen is required.
	ConsentRequired pulumi.BoolPtrInput `pulumi:"consentRequired"`
	// Text to use for displaying Consent Screen.
	ConsentText pulumi.StringPtrInput `pulumi:"consentText"`
	// Protocol Mapper ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Protocol Mapper Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol to use.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Protocol Mapper to use
	ProtocolMapper pulumi.StringPtrInput `pulumi:"protocolMapper"`
}

func (KeycloakClientSpecClientProtocolMappersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientProtocolMappers)(nil)).Elem()
}

func (i KeycloakClientSpecClientProtocolMappersArgs) ToKeycloakClientSpecClientProtocolMappersOutput() KeycloakClientSpecClientProtocolMappersOutput {
	return i.ToKeycloakClientSpecClientProtocolMappersOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientProtocolMappersArgs) ToKeycloakClientSpecClientProtocolMappersOutputWithContext(ctx context.Context) KeycloakClientSpecClientProtocolMappersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientProtocolMappersOutput)
}

// KeycloakClientSpecClientProtocolMappersArrayInput is an input type that accepts KeycloakClientSpecClientProtocolMappersArray and KeycloakClientSpecClientProtocolMappersArrayOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientProtocolMappersArrayInput` via:
//
//          KeycloakClientSpecClientProtocolMappersArray{ KeycloakClientSpecClientProtocolMappersArgs{...} }
type KeycloakClientSpecClientProtocolMappersArrayInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientProtocolMappersArrayOutput() KeycloakClientSpecClientProtocolMappersArrayOutput
	ToKeycloakClientSpecClientProtocolMappersArrayOutputWithContext(context.Context) KeycloakClientSpecClientProtocolMappersArrayOutput
}

type KeycloakClientSpecClientProtocolMappersArray []KeycloakClientSpecClientProtocolMappersInput

func (KeycloakClientSpecClientProtocolMappersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakClientSpecClientProtocolMappers)(nil)).Elem()
}

func (i KeycloakClientSpecClientProtocolMappersArray) ToKeycloakClientSpecClientProtocolMappersArrayOutput() KeycloakClientSpecClientProtocolMappersArrayOutput {
	return i.ToKeycloakClientSpecClientProtocolMappersArrayOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientProtocolMappersArray) ToKeycloakClientSpecClientProtocolMappersArrayOutputWithContext(ctx context.Context) KeycloakClientSpecClientProtocolMappersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientProtocolMappersArrayOutput)
}

type KeycloakClientSpecClientProtocolMappersOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientProtocolMappersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientProtocolMappers)(nil)).Elem()
}

func (o KeycloakClientSpecClientProtocolMappersOutput) ToKeycloakClientSpecClientProtocolMappersOutput() KeycloakClientSpecClientProtocolMappersOutput {
	return o
}

func (o KeycloakClientSpecClientProtocolMappersOutput) ToKeycloakClientSpecClientProtocolMappersOutputWithContext(ctx context.Context) KeycloakClientSpecClientProtocolMappersOutput {
	return o
}

// Config options.
func (o KeycloakClientSpecClientProtocolMappersOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// True if Consent Screen is required.
func (o KeycloakClientSpecClientProtocolMappersOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) *bool { return v.ConsentRequired }).(pulumi.BoolPtrOutput)
}

// Text to use for displaying Consent Screen.
func (o KeycloakClientSpecClientProtocolMappersOutput) ConsentText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) *string { return v.ConsentText }).(pulumi.StringPtrOutput)
}

// Protocol Mapper ID.
func (o KeycloakClientSpecClientProtocolMappersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Protocol Mapper Name.
func (o KeycloakClientSpecClientProtocolMappersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol to use.
func (o KeycloakClientSpecClientProtocolMappersOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Protocol Mapper to use
func (o KeycloakClientSpecClientProtocolMappersOutput) ProtocolMapper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecClientProtocolMappers) *string { return v.ProtocolMapper }).(pulumi.StringPtrOutput)
}

type KeycloakClientSpecClientProtocolMappersArrayOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientProtocolMappersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakClientSpecClientProtocolMappers)(nil)).Elem()
}

func (o KeycloakClientSpecClientProtocolMappersArrayOutput) ToKeycloakClientSpecClientProtocolMappersArrayOutput() KeycloakClientSpecClientProtocolMappersArrayOutput {
	return o
}

func (o KeycloakClientSpecClientProtocolMappersArrayOutput) ToKeycloakClientSpecClientProtocolMappersArrayOutputWithContext(ctx context.Context) KeycloakClientSpecClientProtocolMappersArrayOutput {
	return o
}

func (o KeycloakClientSpecClientProtocolMappersArrayOutput) Index(i pulumi.IntInput) KeycloakClientSpecClientProtocolMappersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakClientSpecClientProtocolMappers {
		return vs[0].([]KeycloakClientSpecClientProtocolMappers)[vs[1].(int)]
	}).(KeycloakClientSpecClientProtocolMappersOutput)
}

// Config options.
type KeycloakClientSpecClientProtocolMappersConfig struct {
}

// KeycloakClientSpecClientProtocolMappersConfigInput is an input type that accepts KeycloakClientSpecClientProtocolMappersConfigArgs and KeycloakClientSpecClientProtocolMappersConfigOutput values.
// You can construct a concrete instance of `KeycloakClientSpecClientProtocolMappersConfigInput` via:
//
//          KeycloakClientSpecClientProtocolMappersConfigArgs{...}
type KeycloakClientSpecClientProtocolMappersConfigInput interface {
	pulumi.Input

	ToKeycloakClientSpecClientProtocolMappersConfigOutput() KeycloakClientSpecClientProtocolMappersConfigOutput
	ToKeycloakClientSpecClientProtocolMappersConfigOutputWithContext(context.Context) KeycloakClientSpecClientProtocolMappersConfigOutput
}

// Config options.
type KeycloakClientSpecClientProtocolMappersConfigArgs struct {
}

func (KeycloakClientSpecClientProtocolMappersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientProtocolMappersConfig)(nil)).Elem()
}

func (i KeycloakClientSpecClientProtocolMappersConfigArgs) ToKeycloakClientSpecClientProtocolMappersConfigOutput() KeycloakClientSpecClientProtocolMappersConfigOutput {
	return i.ToKeycloakClientSpecClientProtocolMappersConfigOutputWithContext(context.Background())
}

func (i KeycloakClientSpecClientProtocolMappersConfigArgs) ToKeycloakClientSpecClientProtocolMappersConfigOutputWithContext(ctx context.Context) KeycloakClientSpecClientProtocolMappersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecClientProtocolMappersConfigOutput)
}

// Config options.
type KeycloakClientSpecClientProtocolMappersConfigOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecClientProtocolMappersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecClientProtocolMappersConfig)(nil)).Elem()
}

func (o KeycloakClientSpecClientProtocolMappersConfigOutput) ToKeycloakClientSpecClientProtocolMappersConfigOutput() KeycloakClientSpecClientProtocolMappersConfigOutput {
	return o
}

func (o KeycloakClientSpecClientProtocolMappersConfigOutput) ToKeycloakClientSpecClientProtocolMappersConfigOutputWithContext(ctx context.Context) KeycloakClientSpecClientProtocolMappersConfigOutput {
	return o
}

// Selector for looking up KeycloakRealm Custom Resources.
type KeycloakClientSpecRealmSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []KeycloakClientSpecRealmSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// KeycloakClientSpecRealmSelectorInput is an input type that accepts KeycloakClientSpecRealmSelectorArgs and KeycloakClientSpecRealmSelectorOutput values.
// You can construct a concrete instance of `KeycloakClientSpecRealmSelectorInput` via:
//
//          KeycloakClientSpecRealmSelectorArgs{...}
type KeycloakClientSpecRealmSelectorInput interface {
	pulumi.Input

	ToKeycloakClientSpecRealmSelectorOutput() KeycloakClientSpecRealmSelectorOutput
	ToKeycloakClientSpecRealmSelectorOutputWithContext(context.Context) KeycloakClientSpecRealmSelectorOutput
}

// Selector for looking up KeycloakRealm Custom Resources.
type KeycloakClientSpecRealmSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions KeycloakClientSpecRealmSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (KeycloakClientSpecRealmSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecRealmSelector)(nil)).Elem()
}

func (i KeycloakClientSpecRealmSelectorArgs) ToKeycloakClientSpecRealmSelectorOutput() KeycloakClientSpecRealmSelectorOutput {
	return i.ToKeycloakClientSpecRealmSelectorOutputWithContext(context.Background())
}

func (i KeycloakClientSpecRealmSelectorArgs) ToKeycloakClientSpecRealmSelectorOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecRealmSelectorOutput)
}

func (i KeycloakClientSpecRealmSelectorArgs) ToKeycloakClientSpecRealmSelectorPtrOutput() KeycloakClientSpecRealmSelectorPtrOutput {
	return i.ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(context.Background())
}

func (i KeycloakClientSpecRealmSelectorArgs) ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecRealmSelectorOutput).ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(ctx)
}

// KeycloakClientSpecRealmSelectorPtrInput is an input type that accepts KeycloakClientSpecRealmSelectorArgs, KeycloakClientSpecRealmSelectorPtr and KeycloakClientSpecRealmSelectorPtrOutput values.
// You can construct a concrete instance of `KeycloakClientSpecRealmSelectorPtrInput` via:
//
//          KeycloakClientSpecRealmSelectorArgs{...}
//
//  or:
//
//          nil
type KeycloakClientSpecRealmSelectorPtrInput interface {
	pulumi.Input

	ToKeycloakClientSpecRealmSelectorPtrOutput() KeycloakClientSpecRealmSelectorPtrOutput
	ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(context.Context) KeycloakClientSpecRealmSelectorPtrOutput
}

type keycloakClientSpecRealmSelectorPtrType KeycloakClientSpecRealmSelectorArgs

func KeycloakClientSpecRealmSelectorPtr(v *KeycloakClientSpecRealmSelectorArgs) KeycloakClientSpecRealmSelectorPtrInput {
	return (*keycloakClientSpecRealmSelectorPtrType)(v)
}

func (*keycloakClientSpecRealmSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientSpecRealmSelector)(nil)).Elem()
}

func (i *keycloakClientSpecRealmSelectorPtrType) ToKeycloakClientSpecRealmSelectorPtrOutput() KeycloakClientSpecRealmSelectorPtrOutput {
	return i.ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(context.Background())
}

func (i *keycloakClientSpecRealmSelectorPtrType) ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecRealmSelectorPtrOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
type KeycloakClientSpecRealmSelectorOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecRealmSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecRealmSelector)(nil)).Elem()
}

func (o KeycloakClientSpecRealmSelectorOutput) ToKeycloakClientSpecRealmSelectorOutput() KeycloakClientSpecRealmSelectorOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorOutput) ToKeycloakClientSpecRealmSelectorOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorOutput) ToKeycloakClientSpecRealmSelectorPtrOutput() KeycloakClientSpecRealmSelectorPtrOutput {
	return o.ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(context.Background())
}

func (o KeycloakClientSpecRealmSelectorOutput) ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakClientSpecRealmSelector) *KeycloakClientSpecRealmSelector {
		return &v
	}).(KeycloakClientSpecRealmSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakClientSpecRealmSelectorOutput) MatchExpressions() KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KeycloakClientSpecRealmSelector) []KeycloakClientSpecRealmSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakClientSpecRealmSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakClientSpecRealmSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type KeycloakClientSpecRealmSelectorPtrOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecRealmSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientSpecRealmSelector)(nil)).Elem()
}

func (o KeycloakClientSpecRealmSelectorPtrOutput) ToKeycloakClientSpecRealmSelectorPtrOutput() KeycloakClientSpecRealmSelectorPtrOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorPtrOutput) ToKeycloakClientSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorPtrOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorPtrOutput) Elem() KeycloakClientSpecRealmSelectorOutput {
	return o.ApplyT(func(v *KeycloakClientSpecRealmSelector) KeycloakClientSpecRealmSelector { return *v }).(KeycloakClientSpecRealmSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakClientSpecRealmSelectorPtrOutput) MatchExpressions() KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KeycloakClientSpecRealmSelector) []KeycloakClientSpecRealmSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakClientSpecRealmSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakClientSpecRealmSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakClientSpecRealmSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// KeycloakClientSpecRealmSelectorMatchExpressionsInput is an input type that accepts KeycloakClientSpecRealmSelectorMatchExpressionsArgs and KeycloakClientSpecRealmSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KeycloakClientSpecRealmSelectorMatchExpressionsInput` via:
//
//          KeycloakClientSpecRealmSelectorMatchExpressionsArgs{...}
type KeycloakClientSpecRealmSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKeycloakClientSpecRealmSelectorMatchExpressionsOutput() KeycloakClientSpecRealmSelectorMatchExpressionsOutput
	ToKeycloakClientSpecRealmSelectorMatchExpressionsOutputWithContext(context.Context) KeycloakClientSpecRealmSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakClientSpecRealmSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (KeycloakClientSpecRealmSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakClientSpecRealmSelectorMatchExpressionsArgs) ToKeycloakClientSpecRealmSelectorMatchExpressionsOutput() KeycloakClientSpecRealmSelectorMatchExpressionsOutput {
	return i.ToKeycloakClientSpecRealmSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KeycloakClientSpecRealmSelectorMatchExpressionsArgs) ToKeycloakClientSpecRealmSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecRealmSelectorMatchExpressionsOutput)
}

// KeycloakClientSpecRealmSelectorMatchExpressionsArrayInput is an input type that accepts KeycloakClientSpecRealmSelectorMatchExpressionsArray and KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KeycloakClientSpecRealmSelectorMatchExpressionsArrayInput` via:
//
//          KeycloakClientSpecRealmSelectorMatchExpressionsArray{ KeycloakClientSpecRealmSelectorMatchExpressionsArgs{...} }
type KeycloakClientSpecRealmSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput() KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput
	ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutputWithContext(context.Context) KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput
}

type KeycloakClientSpecRealmSelectorMatchExpressionsArray []KeycloakClientSpecRealmSelectorMatchExpressionsInput

func (KeycloakClientSpecRealmSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakClientSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakClientSpecRealmSelectorMatchExpressionsArray) ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput() KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput {
	return i.ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KeycloakClientSpecRealmSelectorMatchExpressionsArray) ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakClientSpecRealmSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecRealmSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakClientSpecRealmSelectorMatchExpressionsOutput) ToKeycloakClientSpecRealmSelectorMatchExpressionsOutput() KeycloakClientSpecRealmSelectorMatchExpressionsOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorMatchExpressionsOutput) ToKeycloakClientSpecRealmSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o KeycloakClientSpecRealmSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakClientSpecRealmSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o KeycloakClientSpecRealmSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakClientSpecRealmSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o KeycloakClientSpecRealmSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakClientSpecRealmSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakClientSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput) ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput() KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput) ToKeycloakClientSpecRealmSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KeycloakClientSpecRealmSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakClientSpecRealmSelectorMatchExpressions {
		return vs[0].([]KeycloakClientSpecRealmSelectorMatchExpressions)[vs[1].(int)]
	}).(KeycloakClientSpecRealmSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakClientSpecRealmSelectorMatchLabels struct {
}

// KeycloakClientSpecRealmSelectorMatchLabelsInput is an input type that accepts KeycloakClientSpecRealmSelectorMatchLabelsArgs and KeycloakClientSpecRealmSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `KeycloakClientSpecRealmSelectorMatchLabelsInput` via:
//
//          KeycloakClientSpecRealmSelectorMatchLabelsArgs{...}
type KeycloakClientSpecRealmSelectorMatchLabelsInput interface {
	pulumi.Input

	ToKeycloakClientSpecRealmSelectorMatchLabelsOutput() KeycloakClientSpecRealmSelectorMatchLabelsOutput
	ToKeycloakClientSpecRealmSelectorMatchLabelsOutputWithContext(context.Context) KeycloakClientSpecRealmSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakClientSpecRealmSelectorMatchLabelsArgs struct {
}

func (KeycloakClientSpecRealmSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecRealmSelectorMatchLabels)(nil)).Elem()
}

func (i KeycloakClientSpecRealmSelectorMatchLabelsArgs) ToKeycloakClientSpecRealmSelectorMatchLabelsOutput() KeycloakClientSpecRealmSelectorMatchLabelsOutput {
	return i.ToKeycloakClientSpecRealmSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i KeycloakClientSpecRealmSelectorMatchLabelsArgs) ToKeycloakClientSpecRealmSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientSpecRealmSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakClientSpecRealmSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (KeycloakClientSpecRealmSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientSpecRealmSelectorMatchLabels)(nil)).Elem()
}

func (o KeycloakClientSpecRealmSelectorMatchLabelsOutput) ToKeycloakClientSpecRealmSelectorMatchLabelsOutput() KeycloakClientSpecRealmSelectorMatchLabelsOutput {
	return o
}

func (o KeycloakClientSpecRealmSelectorMatchLabelsOutput) ToKeycloakClientSpecRealmSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakClientSpecRealmSelectorMatchLabelsOutput {
	return o
}

// KeycloakClientStatus defines the observed state of KeycloakClient
type KeycloakClientStatus struct {
	// Human-readable message indicating details about current operator phase or error.
	Message string `pulumi:"message"`
	// Current phase of the operator.
	Phase string `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready bool `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
	SecondaryResources map[string][]string `pulumi:"secondaryResources"`
}

// KeycloakClientStatusInput is an input type that accepts KeycloakClientStatusArgs and KeycloakClientStatusOutput values.
// You can construct a concrete instance of `KeycloakClientStatusInput` via:
//
//          KeycloakClientStatusArgs{...}
type KeycloakClientStatusInput interface {
	pulumi.Input

	ToKeycloakClientStatusOutput() KeycloakClientStatusOutput
	ToKeycloakClientStatusOutputWithContext(context.Context) KeycloakClientStatusOutput
}

// KeycloakClientStatus defines the observed state of KeycloakClient
type KeycloakClientStatusArgs struct {
	// Human-readable message indicating details about current operator phase or error.
	Message pulumi.StringInput `pulumi:"message"`
	// Current phase of the operator.
	Phase pulumi.StringInput `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
	SecondaryResources pulumi.StringArrayMapInput `pulumi:"secondaryResources"`
}

func (KeycloakClientStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientStatus)(nil)).Elem()
}

func (i KeycloakClientStatusArgs) ToKeycloakClientStatusOutput() KeycloakClientStatusOutput {
	return i.ToKeycloakClientStatusOutputWithContext(context.Background())
}

func (i KeycloakClientStatusArgs) ToKeycloakClientStatusOutputWithContext(ctx context.Context) KeycloakClientStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientStatusOutput)
}

func (i KeycloakClientStatusArgs) ToKeycloakClientStatusPtrOutput() KeycloakClientStatusPtrOutput {
	return i.ToKeycloakClientStatusPtrOutputWithContext(context.Background())
}

func (i KeycloakClientStatusArgs) ToKeycloakClientStatusPtrOutputWithContext(ctx context.Context) KeycloakClientStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientStatusOutput).ToKeycloakClientStatusPtrOutputWithContext(ctx)
}

// KeycloakClientStatusPtrInput is an input type that accepts KeycloakClientStatusArgs, KeycloakClientStatusPtr and KeycloakClientStatusPtrOutput values.
// You can construct a concrete instance of `KeycloakClientStatusPtrInput` via:
//
//          KeycloakClientStatusArgs{...}
//
//  or:
//
//          nil
type KeycloakClientStatusPtrInput interface {
	pulumi.Input

	ToKeycloakClientStatusPtrOutput() KeycloakClientStatusPtrOutput
	ToKeycloakClientStatusPtrOutputWithContext(context.Context) KeycloakClientStatusPtrOutput
}

type keycloakClientStatusPtrType KeycloakClientStatusArgs

func KeycloakClientStatusPtr(v *KeycloakClientStatusArgs) KeycloakClientStatusPtrInput {
	return (*keycloakClientStatusPtrType)(v)
}

func (*keycloakClientStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientStatus)(nil)).Elem()
}

func (i *keycloakClientStatusPtrType) ToKeycloakClientStatusPtrOutput() KeycloakClientStatusPtrOutput {
	return i.ToKeycloakClientStatusPtrOutputWithContext(context.Background())
}

func (i *keycloakClientStatusPtrType) ToKeycloakClientStatusPtrOutputWithContext(ctx context.Context) KeycloakClientStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientStatusPtrOutput)
}

// KeycloakClientStatus defines the observed state of KeycloakClient
type KeycloakClientStatusOutput struct{ *pulumi.OutputState }

func (KeycloakClientStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientStatus)(nil)).Elem()
}

func (o KeycloakClientStatusOutput) ToKeycloakClientStatusOutput() KeycloakClientStatusOutput {
	return o
}

func (o KeycloakClientStatusOutput) ToKeycloakClientStatusOutputWithContext(ctx context.Context) KeycloakClientStatusOutput {
	return o
}

func (o KeycloakClientStatusOutput) ToKeycloakClientStatusPtrOutput() KeycloakClientStatusPtrOutput {
	return o.ToKeycloakClientStatusPtrOutputWithContext(context.Background())
}

func (o KeycloakClientStatusOutput) ToKeycloakClientStatusPtrOutputWithContext(ctx context.Context) KeycloakClientStatusPtrOutput {
	return o.ApplyT(func(v KeycloakClientStatus) *KeycloakClientStatus {
		return &v
	}).(KeycloakClientStatusPtrOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakClientStatusOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakClientStatus) string { return v.Message }).(pulumi.StringOutput)
}

// Current phase of the operator.
func (o KeycloakClientStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakClientStatus) string { return v.Phase }).(pulumi.StringOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakClientStatusOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v KeycloakClientStatus) bool { return v.Ready }).(pulumi.BoolOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
func (o KeycloakClientStatusOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakClientStatus) map[string][]string { return v.SecondaryResources }).(pulumi.StringArrayMapOutput)
}

type KeycloakClientStatusPtrOutput struct{ *pulumi.OutputState }

func (KeycloakClientStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakClientStatus)(nil)).Elem()
}

func (o KeycloakClientStatusPtrOutput) ToKeycloakClientStatusPtrOutput() KeycloakClientStatusPtrOutput {
	return o
}

func (o KeycloakClientStatusPtrOutput) ToKeycloakClientStatusPtrOutputWithContext(ctx context.Context) KeycloakClientStatusPtrOutput {
	return o
}

func (o KeycloakClientStatusPtrOutput) Elem() KeycloakClientStatusOutput {
	return o.ApplyT(func(v *KeycloakClientStatus) KeycloakClientStatus { return *v }).(KeycloakClientStatusOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakClientStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Current phase of the operator.
func (o KeycloakClientStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakClientStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakClientStatusPtrOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakClientStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.Ready
	}).(pulumi.BoolPtrOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
func (o KeycloakClientStatusPtrOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KeycloakClientStatus) map[string][]string {
		if v == nil {
			return nil
		}
		return v.SecondaryResources
	}).(pulumi.StringArrayMapOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakClientStatusSecondaryResources struct {
}

// KeycloakClientStatusSecondaryResourcesInput is an input type that accepts KeycloakClientStatusSecondaryResourcesArgs and KeycloakClientStatusSecondaryResourcesOutput values.
// You can construct a concrete instance of `KeycloakClientStatusSecondaryResourcesInput` via:
//
//          KeycloakClientStatusSecondaryResourcesArgs{...}
type KeycloakClientStatusSecondaryResourcesInput interface {
	pulumi.Input

	ToKeycloakClientStatusSecondaryResourcesOutput() KeycloakClientStatusSecondaryResourcesOutput
	ToKeycloakClientStatusSecondaryResourcesOutputWithContext(context.Context) KeycloakClientStatusSecondaryResourcesOutput
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakClientStatusSecondaryResourcesArgs struct {
}

func (KeycloakClientStatusSecondaryResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientStatusSecondaryResources)(nil)).Elem()
}

func (i KeycloakClientStatusSecondaryResourcesArgs) ToKeycloakClientStatusSecondaryResourcesOutput() KeycloakClientStatusSecondaryResourcesOutput {
	return i.ToKeycloakClientStatusSecondaryResourcesOutputWithContext(context.Background())
}

func (i KeycloakClientStatusSecondaryResourcesArgs) ToKeycloakClientStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakClientStatusSecondaryResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakClientStatusSecondaryResourcesOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakClientStatusSecondaryResourcesOutput struct{ *pulumi.OutputState }

func (KeycloakClientStatusSecondaryResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakClientStatusSecondaryResources)(nil)).Elem()
}

func (o KeycloakClientStatusSecondaryResourcesOutput) ToKeycloakClientStatusSecondaryResourcesOutput() KeycloakClientStatusSecondaryResourcesOutput {
	return o
}

func (o KeycloakClientStatusSecondaryResourcesOutput) ToKeycloakClientStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakClientStatusSecondaryResourcesOutput {
	return o
}

type KeycloakMetadata struct {
}

// KeycloakMetadataInput is an input type that accepts KeycloakMetadataArgs and KeycloakMetadataOutput values.
// You can construct a concrete instance of `KeycloakMetadataInput` via:
//
//          KeycloakMetadataArgs{...}
type KeycloakMetadataInput interface {
	pulumi.Input

	ToKeycloakMetadataOutput() KeycloakMetadataOutput
	ToKeycloakMetadataOutputWithContext(context.Context) KeycloakMetadataOutput
}

type KeycloakMetadataArgs struct {
}

func (KeycloakMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakMetadata)(nil)).Elem()
}

func (i KeycloakMetadataArgs) ToKeycloakMetadataOutput() KeycloakMetadataOutput {
	return i.ToKeycloakMetadataOutputWithContext(context.Background())
}

func (i KeycloakMetadataArgs) ToKeycloakMetadataOutputWithContext(ctx context.Context) KeycloakMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakMetadataOutput)
}

type KeycloakMetadataOutput struct{ *pulumi.OutputState }

func (KeycloakMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakMetadata)(nil)).Elem()
}

func (o KeycloakMetadataOutput) ToKeycloakMetadataOutput() KeycloakMetadataOutput {
	return o
}

func (o KeycloakMetadataOutput) ToKeycloakMetadataOutputWithContext(ctx context.Context) KeycloakMetadataOutput {
	return o
}

// KeycloakRealm is the Schema for the keycloakrealms API
type KeycloakRealmType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakRealmSpec defines the desired state of KeycloakRealm.
	Spec *KeycloakRealmSpec `pulumi:"spec"`
	// KeycloakRealmStatus defines the observed state of KeycloakRealm
	Status *KeycloakRealmStatus `pulumi:"status"`
}

// KeycloakRealmTypeInput is an input type that accepts KeycloakRealmTypeArgs and KeycloakRealmTypeOutput values.
// You can construct a concrete instance of `KeycloakRealmTypeInput` via:
//
//          KeycloakRealmTypeArgs{...}
type KeycloakRealmTypeInput interface {
	pulumi.Input

	ToKeycloakRealmTypeOutput() KeycloakRealmTypeOutput
	ToKeycloakRealmTypeOutputWithContext(context.Context) KeycloakRealmTypeOutput
}

// KeycloakRealm is the Schema for the keycloakrealms API
type KeycloakRealmTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KeycloakRealmSpec defines the desired state of KeycloakRealm.
	Spec KeycloakRealmSpecPtrInput `pulumi:"spec"`
	// KeycloakRealmStatus defines the observed state of KeycloakRealm
	Status KeycloakRealmStatusPtrInput `pulumi:"status"`
}

func (KeycloakRealmTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmType)(nil)).Elem()
}

func (i KeycloakRealmTypeArgs) ToKeycloakRealmTypeOutput() KeycloakRealmTypeOutput {
	return i.ToKeycloakRealmTypeOutputWithContext(context.Background())
}

func (i KeycloakRealmTypeArgs) ToKeycloakRealmTypeOutputWithContext(ctx context.Context) KeycloakRealmTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmTypeOutput)
}

// KeycloakRealm is the Schema for the keycloakrealms API
type KeycloakRealmTypeOutput struct{ *pulumi.OutputState }

func (KeycloakRealmTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmType)(nil)).Elem()
}

func (o KeycloakRealmTypeOutput) ToKeycloakRealmTypeOutput() KeycloakRealmTypeOutput {
	return o
}

func (o KeycloakRealmTypeOutput) ToKeycloakRealmTypeOutputWithContext(ctx context.Context) KeycloakRealmTypeOutput {
	return o
}

func (o KeycloakRealmTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KeycloakRealmTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KeycloakRealmTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KeycloakRealmType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KeycloakRealmSpec defines the desired state of KeycloakRealm.
func (o KeycloakRealmTypeOutput) Spec() KeycloakRealmSpecPtrOutput {
	return o.ApplyT(func(v KeycloakRealmType) *KeycloakRealmSpec { return v.Spec }).(KeycloakRealmSpecPtrOutput)
}

// KeycloakRealmStatus defines the observed state of KeycloakRealm
func (o KeycloakRealmTypeOutput) Status() KeycloakRealmStatusPtrOutput {
	return o.ApplyT(func(v KeycloakRealmType) *KeycloakRealmStatus { return v.Status }).(KeycloakRealmStatusPtrOutput)
}

type KeycloakRealmMetadata struct {
}

// KeycloakRealmMetadataInput is an input type that accepts KeycloakRealmMetadataArgs and KeycloakRealmMetadataOutput values.
// You can construct a concrete instance of `KeycloakRealmMetadataInput` via:
//
//          KeycloakRealmMetadataArgs{...}
type KeycloakRealmMetadataInput interface {
	pulumi.Input

	ToKeycloakRealmMetadataOutput() KeycloakRealmMetadataOutput
	ToKeycloakRealmMetadataOutputWithContext(context.Context) KeycloakRealmMetadataOutput
}

type KeycloakRealmMetadataArgs struct {
}

func (KeycloakRealmMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmMetadata)(nil)).Elem()
}

func (i KeycloakRealmMetadataArgs) ToKeycloakRealmMetadataOutput() KeycloakRealmMetadataOutput {
	return i.ToKeycloakRealmMetadataOutputWithContext(context.Background())
}

func (i KeycloakRealmMetadataArgs) ToKeycloakRealmMetadataOutputWithContext(ctx context.Context) KeycloakRealmMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmMetadataOutput)
}

type KeycloakRealmMetadataOutput struct{ *pulumi.OutputState }

func (KeycloakRealmMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmMetadata)(nil)).Elem()
}

func (o KeycloakRealmMetadataOutput) ToKeycloakRealmMetadataOutput() KeycloakRealmMetadataOutput {
	return o
}

func (o KeycloakRealmMetadataOutput) ToKeycloakRealmMetadataOutputWithContext(ctx context.Context) KeycloakRealmMetadataOutput {
	return o
}

// KeycloakRealmSpec defines the desired state of KeycloakRealm.
type KeycloakRealmSpec struct {
	// Selector for looking up Keycloak Custom Resources.
	InstanceSelector *KeycloakRealmSpecInstanceSelector `pulumi:"instanceSelector"`
	// Keycloak Realm REST object.
	Realm KeycloakRealmSpecRealm `pulumi:"realm"`
	// A list of overrides to the default Realm behavior.
	RealmOverrides []KeycloakRealmSpecRealmOverrides `pulumi:"realmOverrides"`
}

// KeycloakRealmSpecInput is an input type that accepts KeycloakRealmSpecArgs and KeycloakRealmSpecOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecInput` via:
//
//          KeycloakRealmSpecArgs{...}
type KeycloakRealmSpecInput interface {
	pulumi.Input

	ToKeycloakRealmSpecOutput() KeycloakRealmSpecOutput
	ToKeycloakRealmSpecOutputWithContext(context.Context) KeycloakRealmSpecOutput
}

// KeycloakRealmSpec defines the desired state of KeycloakRealm.
type KeycloakRealmSpecArgs struct {
	// Selector for looking up Keycloak Custom Resources.
	InstanceSelector KeycloakRealmSpecInstanceSelectorPtrInput `pulumi:"instanceSelector"`
	// Keycloak Realm REST object.
	Realm KeycloakRealmSpecRealmInput `pulumi:"realm"`
	// A list of overrides to the default Realm behavior.
	RealmOverrides KeycloakRealmSpecRealmOverridesArrayInput `pulumi:"realmOverrides"`
}

func (KeycloakRealmSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpec)(nil)).Elem()
}

func (i KeycloakRealmSpecArgs) ToKeycloakRealmSpecOutput() KeycloakRealmSpecOutput {
	return i.ToKeycloakRealmSpecOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecArgs) ToKeycloakRealmSpecOutputWithContext(ctx context.Context) KeycloakRealmSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecOutput)
}

func (i KeycloakRealmSpecArgs) ToKeycloakRealmSpecPtrOutput() KeycloakRealmSpecPtrOutput {
	return i.ToKeycloakRealmSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecArgs) ToKeycloakRealmSpecPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecOutput).ToKeycloakRealmSpecPtrOutputWithContext(ctx)
}

// KeycloakRealmSpecPtrInput is an input type that accepts KeycloakRealmSpecArgs, KeycloakRealmSpecPtr and KeycloakRealmSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecPtrInput` via:
//
//          KeycloakRealmSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakRealmSpecPtrInput interface {
	pulumi.Input

	ToKeycloakRealmSpecPtrOutput() KeycloakRealmSpecPtrOutput
	ToKeycloakRealmSpecPtrOutputWithContext(context.Context) KeycloakRealmSpecPtrOutput
}

type keycloakRealmSpecPtrType KeycloakRealmSpecArgs

func KeycloakRealmSpecPtr(v *KeycloakRealmSpecArgs) KeycloakRealmSpecPtrInput {
	return (*keycloakRealmSpecPtrType)(v)
}

func (*keycloakRealmSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmSpec)(nil)).Elem()
}

func (i *keycloakRealmSpecPtrType) ToKeycloakRealmSpecPtrOutput() KeycloakRealmSpecPtrOutput {
	return i.ToKeycloakRealmSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakRealmSpecPtrType) ToKeycloakRealmSpecPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecPtrOutput)
}

// KeycloakRealmSpec defines the desired state of KeycloakRealm.
type KeycloakRealmSpecOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpec)(nil)).Elem()
}

func (o KeycloakRealmSpecOutput) ToKeycloakRealmSpecOutput() KeycloakRealmSpecOutput {
	return o
}

func (o KeycloakRealmSpecOutput) ToKeycloakRealmSpecOutputWithContext(ctx context.Context) KeycloakRealmSpecOutput {
	return o
}

func (o KeycloakRealmSpecOutput) ToKeycloakRealmSpecPtrOutput() KeycloakRealmSpecPtrOutput {
	return o.ToKeycloakRealmSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakRealmSpecOutput) ToKeycloakRealmSpecPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpec) *KeycloakRealmSpec {
		return &v
	}).(KeycloakRealmSpecPtrOutput)
}

// Selector for looking up Keycloak Custom Resources.
func (o KeycloakRealmSpecOutput) InstanceSelector() KeycloakRealmSpecInstanceSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpec) *KeycloakRealmSpecInstanceSelector { return v.InstanceSelector }).(KeycloakRealmSpecInstanceSelectorPtrOutput)
}

// Keycloak Realm REST object.
func (o KeycloakRealmSpecOutput) Realm() KeycloakRealmSpecRealmOutput {
	return o.ApplyT(func(v KeycloakRealmSpec) KeycloakRealmSpecRealm { return v.Realm }).(KeycloakRealmSpecRealmOutput)
}

// A list of overrides to the default Realm behavior.
func (o KeycloakRealmSpecOutput) RealmOverrides() KeycloakRealmSpecRealmOverridesArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpec) []KeycloakRealmSpecRealmOverrides { return v.RealmOverrides }).(KeycloakRealmSpecRealmOverridesArrayOutput)
}

type KeycloakRealmSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmSpec)(nil)).Elem()
}

func (o KeycloakRealmSpecPtrOutput) ToKeycloakRealmSpecPtrOutput() KeycloakRealmSpecPtrOutput {
	return o
}

func (o KeycloakRealmSpecPtrOutput) ToKeycloakRealmSpecPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecPtrOutput {
	return o
}

func (o KeycloakRealmSpecPtrOutput) Elem() KeycloakRealmSpecOutput {
	return o.ApplyT(func(v *KeycloakRealmSpec) KeycloakRealmSpec { return *v }).(KeycloakRealmSpecOutput)
}

// Selector for looking up Keycloak Custom Resources.
func (o KeycloakRealmSpecPtrOutput) InstanceSelector() KeycloakRealmSpecInstanceSelectorPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpec) *KeycloakRealmSpecInstanceSelector {
		if v == nil {
			return nil
		}
		return v.InstanceSelector
	}).(KeycloakRealmSpecInstanceSelectorPtrOutput)
}

// Keycloak Realm REST object.
func (o KeycloakRealmSpecPtrOutput) Realm() KeycloakRealmSpecRealmPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpec) *KeycloakRealmSpecRealm {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(KeycloakRealmSpecRealmPtrOutput)
}

// A list of overrides to the default Realm behavior.
func (o KeycloakRealmSpecPtrOutput) RealmOverrides() KeycloakRealmSpecRealmOverridesArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmSpec) []KeycloakRealmSpecRealmOverrides {
		if v == nil {
			return nil
		}
		return v.RealmOverrides
	}).(KeycloakRealmSpecRealmOverridesArrayOutput)
}

// Selector for looking up Keycloak Custom Resources.
type KeycloakRealmSpecInstanceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []KeycloakRealmSpecInstanceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// KeycloakRealmSpecInstanceSelectorInput is an input type that accepts KeycloakRealmSpecInstanceSelectorArgs and KeycloakRealmSpecInstanceSelectorOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecInstanceSelectorInput` via:
//
//          KeycloakRealmSpecInstanceSelectorArgs{...}
type KeycloakRealmSpecInstanceSelectorInput interface {
	pulumi.Input

	ToKeycloakRealmSpecInstanceSelectorOutput() KeycloakRealmSpecInstanceSelectorOutput
	ToKeycloakRealmSpecInstanceSelectorOutputWithContext(context.Context) KeycloakRealmSpecInstanceSelectorOutput
}

// Selector for looking up Keycloak Custom Resources.
type KeycloakRealmSpecInstanceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (KeycloakRealmSpecInstanceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecInstanceSelector)(nil)).Elem()
}

func (i KeycloakRealmSpecInstanceSelectorArgs) ToKeycloakRealmSpecInstanceSelectorOutput() KeycloakRealmSpecInstanceSelectorOutput {
	return i.ToKeycloakRealmSpecInstanceSelectorOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecInstanceSelectorArgs) ToKeycloakRealmSpecInstanceSelectorOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecInstanceSelectorOutput)
}

func (i KeycloakRealmSpecInstanceSelectorArgs) ToKeycloakRealmSpecInstanceSelectorPtrOutput() KeycloakRealmSpecInstanceSelectorPtrOutput {
	return i.ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecInstanceSelectorArgs) ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecInstanceSelectorOutput).ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(ctx)
}

// KeycloakRealmSpecInstanceSelectorPtrInput is an input type that accepts KeycloakRealmSpecInstanceSelectorArgs, KeycloakRealmSpecInstanceSelectorPtr and KeycloakRealmSpecInstanceSelectorPtrOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecInstanceSelectorPtrInput` via:
//
//          KeycloakRealmSpecInstanceSelectorArgs{...}
//
//  or:
//
//          nil
type KeycloakRealmSpecInstanceSelectorPtrInput interface {
	pulumi.Input

	ToKeycloakRealmSpecInstanceSelectorPtrOutput() KeycloakRealmSpecInstanceSelectorPtrOutput
	ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(context.Context) KeycloakRealmSpecInstanceSelectorPtrOutput
}

type keycloakRealmSpecInstanceSelectorPtrType KeycloakRealmSpecInstanceSelectorArgs

func KeycloakRealmSpecInstanceSelectorPtr(v *KeycloakRealmSpecInstanceSelectorArgs) KeycloakRealmSpecInstanceSelectorPtrInput {
	return (*keycloakRealmSpecInstanceSelectorPtrType)(v)
}

func (*keycloakRealmSpecInstanceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmSpecInstanceSelector)(nil)).Elem()
}

func (i *keycloakRealmSpecInstanceSelectorPtrType) ToKeycloakRealmSpecInstanceSelectorPtrOutput() KeycloakRealmSpecInstanceSelectorPtrOutput {
	return i.ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(context.Background())
}

func (i *keycloakRealmSpecInstanceSelectorPtrType) ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecInstanceSelectorPtrOutput)
}

// Selector for looking up Keycloak Custom Resources.
type KeycloakRealmSpecInstanceSelectorOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecInstanceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecInstanceSelector)(nil)).Elem()
}

func (o KeycloakRealmSpecInstanceSelectorOutput) ToKeycloakRealmSpecInstanceSelectorOutput() KeycloakRealmSpecInstanceSelectorOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorOutput) ToKeycloakRealmSpecInstanceSelectorOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorOutput) ToKeycloakRealmSpecInstanceSelectorPtrOutput() KeycloakRealmSpecInstanceSelectorPtrOutput {
	return o.ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(context.Background())
}

func (o KeycloakRealmSpecInstanceSelectorOutput) ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecInstanceSelector) *KeycloakRealmSpecInstanceSelector {
		return &v
	}).(KeycloakRealmSpecInstanceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakRealmSpecInstanceSelectorOutput) MatchExpressions() KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecInstanceSelector) []KeycloakRealmSpecInstanceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakRealmSpecInstanceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecInstanceSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type KeycloakRealmSpecInstanceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecInstanceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmSpecInstanceSelector)(nil)).Elem()
}

func (o KeycloakRealmSpecInstanceSelectorPtrOutput) ToKeycloakRealmSpecInstanceSelectorPtrOutput() KeycloakRealmSpecInstanceSelectorPtrOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorPtrOutput) ToKeycloakRealmSpecInstanceSelectorPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorPtrOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorPtrOutput) Elem() KeycloakRealmSpecInstanceSelectorOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecInstanceSelector) KeycloakRealmSpecInstanceSelector { return *v }).(KeycloakRealmSpecInstanceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakRealmSpecInstanceSelectorPtrOutput) MatchExpressions() KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecInstanceSelector) []KeycloakRealmSpecInstanceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakRealmSpecInstanceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecInstanceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakRealmSpecInstanceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// KeycloakRealmSpecInstanceSelectorMatchExpressionsInput is an input type that accepts KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs and KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecInstanceSelectorMatchExpressionsInput` via:
//
//          KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs{...}
type KeycloakRealmSpecInstanceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutput() KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput
	ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutputWithContext(context.Context) KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutput() KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput {
	return i.ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput)
}

// KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayInput is an input type that accepts KeycloakRealmSpecInstanceSelectorMatchExpressionsArray and KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayInput` via:
//
//          KeycloakRealmSpecInstanceSelectorMatchExpressionsArray{ KeycloakRealmSpecInstanceSelectorMatchExpressionsArgs{...} }
type KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput() KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput
	ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput
}

type KeycloakRealmSpecInstanceSelectorMatchExpressionsArray []KeycloakRealmSpecInstanceSelectorMatchExpressionsInput

func (KeycloakRealmSpecInstanceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakRealmSpecInstanceSelectorMatchExpressionsArray) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput() KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput {
	return i.ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecInstanceSelectorMatchExpressionsArray) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutput() KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmSpecInstanceSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmSpecInstanceSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecInstanceSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecInstanceSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput() KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput) ToKeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecInstanceSelectorMatchExpressions {
		return vs[0].([]KeycloakRealmSpecInstanceSelectorMatchExpressions)[vs[1].(int)]
	}).(KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakRealmSpecInstanceSelectorMatchLabels struct {
}

// KeycloakRealmSpecInstanceSelectorMatchLabelsInput is an input type that accepts KeycloakRealmSpecInstanceSelectorMatchLabelsArgs and KeycloakRealmSpecInstanceSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecInstanceSelectorMatchLabelsInput` via:
//
//          KeycloakRealmSpecInstanceSelectorMatchLabelsArgs{...}
type KeycloakRealmSpecInstanceSelectorMatchLabelsInput interface {
	pulumi.Input

	ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutput() KeycloakRealmSpecInstanceSelectorMatchLabelsOutput
	ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutputWithContext(context.Context) KeycloakRealmSpecInstanceSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakRealmSpecInstanceSelectorMatchLabelsArgs struct {
}

func (KeycloakRealmSpecInstanceSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecInstanceSelectorMatchLabels)(nil)).Elem()
}

func (i KeycloakRealmSpecInstanceSelectorMatchLabelsArgs) ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutput() KeycloakRealmSpecInstanceSelectorMatchLabelsOutput {
	return i.ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecInstanceSelectorMatchLabelsArgs) ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecInstanceSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakRealmSpecInstanceSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecInstanceSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecInstanceSelectorMatchLabels)(nil)).Elem()
}

func (o KeycloakRealmSpecInstanceSelectorMatchLabelsOutput) ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutput() KeycloakRealmSpecInstanceSelectorMatchLabelsOutput {
	return o
}

func (o KeycloakRealmSpecInstanceSelectorMatchLabelsOutput) ToKeycloakRealmSpecInstanceSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakRealmSpecInstanceSelectorMatchLabelsOutput {
	return o
}

// Keycloak Realm REST object.
type KeycloakRealmSpecRealm struct {
	// Enable admin events details TODO: change to values and use kubebuilder default annotation once supported
	AdminEventsDetailsEnabled *bool `pulumi:"adminEventsDetailsEnabled"`
	// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
	AdminEventsEnabled *bool `pulumi:"adminEventsEnabled"`
	// A set of Keycloak Clients.
	Clients []KeycloakRealmSpecRealmClients `pulumi:"clients"`
	// Realm display name.
	DisplayName *string `pulumi:"displayName"`
	// Realm enabled flag.
	Enabled *bool `pulumi:"enabled"`
	// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
	EventsEnabled *bool `pulumi:"eventsEnabled"`
	// A set of Event Listeners.
	EventsListeners []string `pulumi:"eventsListeners"`
	Id              *string  `pulumi:"id"`
	// A set of Identity Providers.
	IdentityProviders []KeycloakRealmSpecRealmIdentityProviders `pulumi:"identityProviders"`
	// Realm name.
	Realm string `pulumi:"realm"`
	// A set of Keycloak Users.
	Users []KeycloakRealmSpecRealmUsers `pulumi:"users"`
}

// KeycloakRealmSpecRealmInput is an input type that accepts KeycloakRealmSpecRealmArgs and KeycloakRealmSpecRealmOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmInput` via:
//
//          KeycloakRealmSpecRealmArgs{...}
type KeycloakRealmSpecRealmInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmOutput() KeycloakRealmSpecRealmOutput
	ToKeycloakRealmSpecRealmOutputWithContext(context.Context) KeycloakRealmSpecRealmOutput
}

// Keycloak Realm REST object.
type KeycloakRealmSpecRealmArgs struct {
	// Enable admin events details TODO: change to values and use kubebuilder default annotation once supported
	AdminEventsDetailsEnabled pulumi.BoolPtrInput `pulumi:"adminEventsDetailsEnabled"`
	// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
	AdminEventsEnabled pulumi.BoolPtrInput `pulumi:"adminEventsEnabled"`
	// A set of Keycloak Clients.
	Clients KeycloakRealmSpecRealmClientsArrayInput `pulumi:"clients"`
	// Realm display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Realm enabled flag.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
	EventsEnabled pulumi.BoolPtrInput `pulumi:"eventsEnabled"`
	// A set of Event Listeners.
	EventsListeners pulumi.StringArrayInput `pulumi:"eventsListeners"`
	Id              pulumi.StringPtrInput   `pulumi:"id"`
	// A set of Identity Providers.
	IdentityProviders KeycloakRealmSpecRealmIdentityProvidersArrayInput `pulumi:"identityProviders"`
	// Realm name.
	Realm pulumi.StringInput `pulumi:"realm"`
	// A set of Keycloak Users.
	Users KeycloakRealmSpecRealmUsersArrayInput `pulumi:"users"`
}

func (KeycloakRealmSpecRealmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealm)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmArgs) ToKeycloakRealmSpecRealmOutput() KeycloakRealmSpecRealmOutput {
	return i.ToKeycloakRealmSpecRealmOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmArgs) ToKeycloakRealmSpecRealmOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmOutput)
}

func (i KeycloakRealmSpecRealmArgs) ToKeycloakRealmSpecRealmPtrOutput() KeycloakRealmSpecRealmPtrOutput {
	return i.ToKeycloakRealmSpecRealmPtrOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmArgs) ToKeycloakRealmSpecRealmPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmOutput).ToKeycloakRealmSpecRealmPtrOutputWithContext(ctx)
}

// KeycloakRealmSpecRealmPtrInput is an input type that accepts KeycloakRealmSpecRealmArgs, KeycloakRealmSpecRealmPtr and KeycloakRealmSpecRealmPtrOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmPtrInput` via:
//
//          KeycloakRealmSpecRealmArgs{...}
//
//  or:
//
//          nil
type KeycloakRealmSpecRealmPtrInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmPtrOutput() KeycloakRealmSpecRealmPtrOutput
	ToKeycloakRealmSpecRealmPtrOutputWithContext(context.Context) KeycloakRealmSpecRealmPtrOutput
}

type keycloakRealmSpecRealmPtrType KeycloakRealmSpecRealmArgs

func KeycloakRealmSpecRealmPtr(v *KeycloakRealmSpecRealmArgs) KeycloakRealmSpecRealmPtrInput {
	return (*keycloakRealmSpecRealmPtrType)(v)
}

func (*keycloakRealmSpecRealmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmSpecRealm)(nil)).Elem()
}

func (i *keycloakRealmSpecRealmPtrType) ToKeycloakRealmSpecRealmPtrOutput() KeycloakRealmSpecRealmPtrOutput {
	return i.ToKeycloakRealmSpecRealmPtrOutputWithContext(context.Background())
}

func (i *keycloakRealmSpecRealmPtrType) ToKeycloakRealmSpecRealmPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmPtrOutput)
}

// Keycloak Realm REST object.
type KeycloakRealmSpecRealmOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealm)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmOutput) ToKeycloakRealmSpecRealmOutput() KeycloakRealmSpecRealmOutput {
	return o
}

func (o KeycloakRealmSpecRealmOutput) ToKeycloakRealmSpecRealmOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmOutput {
	return o
}

func (o KeycloakRealmSpecRealmOutput) ToKeycloakRealmSpecRealmPtrOutput() KeycloakRealmSpecRealmPtrOutput {
	return o.ToKeycloakRealmSpecRealmPtrOutputWithContext(context.Background())
}

func (o KeycloakRealmSpecRealmOutput) ToKeycloakRealmSpecRealmPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *KeycloakRealmSpecRealm {
		return &v
	}).(KeycloakRealmSpecRealmPtrOutput)
}

// Enable admin events details TODO: change to values and use kubebuilder default annotation once supported
func (o KeycloakRealmSpecRealmOutput) AdminEventsDetailsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *bool { return v.AdminEventsDetailsEnabled }).(pulumi.BoolPtrOutput)
}

// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
func (o KeycloakRealmSpecRealmOutput) AdminEventsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *bool { return v.AdminEventsEnabled }).(pulumi.BoolPtrOutput)
}

// A set of Keycloak Clients.
func (o KeycloakRealmSpecRealmOutput) Clients() KeycloakRealmSpecRealmClientsArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) []KeycloakRealmSpecRealmClients { return v.Clients }).(KeycloakRealmSpecRealmClientsArrayOutput)
}

// Realm display name.
func (o KeycloakRealmSpecRealmOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Realm enabled flag.
func (o KeycloakRealmSpecRealmOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
func (o KeycloakRealmSpecRealmOutput) EventsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *bool { return v.EventsEnabled }).(pulumi.BoolPtrOutput)
}

// A set of Event Listeners.
func (o KeycloakRealmSpecRealmOutput) EventsListeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) []string { return v.EventsListeners }).(pulumi.StringArrayOutput)
}

func (o KeycloakRealmSpecRealmOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A set of Identity Providers.
func (o KeycloakRealmSpecRealmOutput) IdentityProviders() KeycloakRealmSpecRealmIdentityProvidersArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) []KeycloakRealmSpecRealmIdentityProviders { return v.IdentityProviders }).(KeycloakRealmSpecRealmIdentityProvidersArrayOutput)
}

// Realm name.
func (o KeycloakRealmSpecRealmOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) string { return v.Realm }).(pulumi.StringOutput)
}

// A set of Keycloak Users.
func (o KeycloakRealmSpecRealmOutput) Users() KeycloakRealmSpecRealmUsersArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealm) []KeycloakRealmSpecRealmUsers { return v.Users }).(KeycloakRealmSpecRealmUsersArrayOutput)
}

type KeycloakRealmSpecRealmPtrOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmSpecRealm)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmPtrOutput) ToKeycloakRealmSpecRealmPtrOutput() KeycloakRealmSpecRealmPtrOutput {
	return o
}

func (o KeycloakRealmSpecRealmPtrOutput) ToKeycloakRealmSpecRealmPtrOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmPtrOutput {
	return o
}

func (o KeycloakRealmSpecRealmPtrOutput) Elem() KeycloakRealmSpecRealmOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) KeycloakRealmSpecRealm { return *v }).(KeycloakRealmSpecRealmOutput)
}

// Enable admin events details TODO: change to values and use kubebuilder default annotation once supported
func (o KeycloakRealmSpecRealmPtrOutput) AdminEventsDetailsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *bool {
		if v == nil {
			return nil
		}
		return v.AdminEventsDetailsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
func (o KeycloakRealmSpecRealmPtrOutput) AdminEventsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *bool {
		if v == nil {
			return nil
		}
		return v.AdminEventsEnabled
	}).(pulumi.BoolPtrOutput)
}

// A set of Keycloak Clients.
func (o KeycloakRealmSpecRealmPtrOutput) Clients() KeycloakRealmSpecRealmClientsArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) []KeycloakRealmSpecRealmClients {
		if v == nil {
			return nil
		}
		return v.Clients
	}).(KeycloakRealmSpecRealmClientsArrayOutput)
}

// Realm display name.
func (o KeycloakRealmSpecRealmPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Realm enabled flag.
func (o KeycloakRealmSpecRealmPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enable events recording TODO: change to values and use kubebuilder default annotation once supported
func (o KeycloakRealmSpecRealmPtrOutput) EventsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *bool {
		if v == nil {
			return nil
		}
		return v.EventsEnabled
	}).(pulumi.BoolPtrOutput)
}

// A set of Event Listeners.
func (o KeycloakRealmSpecRealmPtrOutput) EventsListeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) []string {
		if v == nil {
			return nil
		}
		return v.EventsListeners
	}).(pulumi.StringArrayOutput)
}

func (o KeycloakRealmSpecRealmPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A set of Identity Providers.
func (o KeycloakRealmSpecRealmPtrOutput) IdentityProviders() KeycloakRealmSpecRealmIdentityProvidersArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) []KeycloakRealmSpecRealmIdentityProviders {
		if v == nil {
			return nil
		}
		return v.IdentityProviders
	}).(KeycloakRealmSpecRealmIdentityProvidersArrayOutput)
}

// Realm name.
func (o KeycloakRealmSpecRealmPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

// A set of Keycloak Users.
func (o KeycloakRealmSpecRealmPtrOutput) Users() KeycloakRealmSpecRealmUsersArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmSpecRealm) []KeycloakRealmSpecRealmUsers {
		if v == nil {
			return nil
		}
		return v.Users
	}).(KeycloakRealmSpecRealmUsersArrayOutput)
}

type KeycloakRealmSpecRealmClients struct {
	// Access options.
	Access map[string]bool `pulumi:"access"`
	// Application Admin URL.
	AdminUrl *string `pulumi:"adminUrl"`
	// Client Attributes.
	Attributes map[string]string `pulumi:"attributes"`
	// Application base URL.
	BaseUrl *string `pulumi:"baseUrl"`
	// True if a client supports only Bearer Tokens.
	BearerOnly *bool `pulumi:"bearerOnly"`
	// What Client authentication type to use.
	ClientAuthenticatorType *string `pulumi:"clientAuthenticatorType"`
	// Client ID.
	ClientId string `pulumi:"clientId"`
	// True if Consent Screen is required.
	ConsentRequired *bool `pulumi:"consentRequired"`
	// Default Client roles.
	DefaultRoles []string `pulumi:"defaultRoles"`
	// Client description.
	Description *string `pulumi:"description"`
	// True if Direct Grant is enabled.
	DirectAccessGrantsEnabled *bool `pulumi:"directAccessGrantsEnabled"`
	// Client enabled flag.
	Enabled *bool `pulumi:"enabled"`
	// True if this client supports Front Channel logout.
	FrontchannelLogout *bool `pulumi:"frontchannelLogout"`
	// True if Full Scope is allowed.
	FullScopeAllowed *bool `pulumi:"fullScopeAllowed"`
	// Client ID. If not specified, automatically generated.
	Id *string `pulumi:"id"`
	// True if Implicit flow is enabled.
	ImplicitFlowEnabled *bool `pulumi:"implicitFlowEnabled"`
	// Client name.
	Name *string `pulumi:"name"`
	// Node registration timeout.
	NodeReRegistrationTimeout *int `pulumi:"nodeReRegistrationTimeout"`
	// Not Before setting.
	NotBefore *int `pulumi:"notBefore"`
	// Protocol used for this Client.
	Protocol *string `pulumi:"protocol"`
	// Protocol Mappers.
	ProtocolMappers []KeycloakRealmSpecRealmClientsProtocolMappers `pulumi:"protocolMappers"`
	// True if this is a public Client.
	PublicClient *bool `pulumi:"publicClient"`
	// A list of valid Redirection URLs.
	RedirectUris []string `pulumi:"redirectUris"`
	// Application root URL.
	RootUrl *string `pulumi:"rootUrl"`
	// Client Secret. The Operator will automatically create a Secret based on this value.
	Secret *string `pulumi:"secret"`
	// True if Service Accounts are enabled.
	ServiceAccountsEnabled *bool `pulumi:"serviceAccountsEnabled"`
	// True if Standard flow is enabled.
	StandardFlowEnabled *bool `pulumi:"standardFlowEnabled"`
	// Surrogate Authentication Required option.
	SurrogateAuthRequired *bool `pulumi:"surrogateAuthRequired"`
	// True to use a Template Config.
	UseTemplateConfig *bool `pulumi:"useTemplateConfig"`
	// True to use Template Mappers.
	UseTemplateMappers *bool `pulumi:"useTemplateMappers"`
	// True to use Template Scope.
	UseTemplateScope *bool `pulumi:"useTemplateScope"`
	// A list of valid Web Origins.
	WebOrigins []string `pulumi:"webOrigins"`
}

// KeycloakRealmSpecRealmClientsInput is an input type that accepts KeycloakRealmSpecRealmClientsArgs and KeycloakRealmSpecRealmClientsOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsInput` via:
//
//          KeycloakRealmSpecRealmClientsArgs{...}
type KeycloakRealmSpecRealmClientsInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsOutput() KeycloakRealmSpecRealmClientsOutput
	ToKeycloakRealmSpecRealmClientsOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsOutput
}

type KeycloakRealmSpecRealmClientsArgs struct {
	// Access options.
	Access pulumi.BoolMapInput `pulumi:"access"`
	// Application Admin URL.
	AdminUrl pulumi.StringPtrInput `pulumi:"adminUrl"`
	// Client Attributes.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// Application base URL.
	BaseUrl pulumi.StringPtrInput `pulumi:"baseUrl"`
	// True if a client supports only Bearer Tokens.
	BearerOnly pulumi.BoolPtrInput `pulumi:"bearerOnly"`
	// What Client authentication type to use.
	ClientAuthenticatorType pulumi.StringPtrInput `pulumi:"clientAuthenticatorType"`
	// Client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// True if Consent Screen is required.
	ConsentRequired pulumi.BoolPtrInput `pulumi:"consentRequired"`
	// Default Client roles.
	DefaultRoles pulumi.StringArrayInput `pulumi:"defaultRoles"`
	// Client description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// True if Direct Grant is enabled.
	DirectAccessGrantsEnabled pulumi.BoolPtrInput `pulumi:"directAccessGrantsEnabled"`
	// Client enabled flag.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// True if this client supports Front Channel logout.
	FrontchannelLogout pulumi.BoolPtrInput `pulumi:"frontchannelLogout"`
	// True if Full Scope is allowed.
	FullScopeAllowed pulumi.BoolPtrInput `pulumi:"fullScopeAllowed"`
	// Client ID. If not specified, automatically generated.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// True if Implicit flow is enabled.
	ImplicitFlowEnabled pulumi.BoolPtrInput `pulumi:"implicitFlowEnabled"`
	// Client name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Node registration timeout.
	NodeReRegistrationTimeout pulumi.IntPtrInput `pulumi:"nodeReRegistrationTimeout"`
	// Not Before setting.
	NotBefore pulumi.IntPtrInput `pulumi:"notBefore"`
	// Protocol used for this Client.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Protocol Mappers.
	ProtocolMappers KeycloakRealmSpecRealmClientsProtocolMappersArrayInput `pulumi:"protocolMappers"`
	// True if this is a public Client.
	PublicClient pulumi.BoolPtrInput `pulumi:"publicClient"`
	// A list of valid Redirection URLs.
	RedirectUris pulumi.StringArrayInput `pulumi:"redirectUris"`
	// Application root URL.
	RootUrl pulumi.StringPtrInput `pulumi:"rootUrl"`
	// Client Secret. The Operator will automatically create a Secret based on this value.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// True if Service Accounts are enabled.
	ServiceAccountsEnabled pulumi.BoolPtrInput `pulumi:"serviceAccountsEnabled"`
	// True if Standard flow is enabled.
	StandardFlowEnabled pulumi.BoolPtrInput `pulumi:"standardFlowEnabled"`
	// Surrogate Authentication Required option.
	SurrogateAuthRequired pulumi.BoolPtrInput `pulumi:"surrogateAuthRequired"`
	// True to use a Template Config.
	UseTemplateConfig pulumi.BoolPtrInput `pulumi:"useTemplateConfig"`
	// True to use Template Mappers.
	UseTemplateMappers pulumi.BoolPtrInput `pulumi:"useTemplateMappers"`
	// True to use Template Scope.
	UseTemplateScope pulumi.BoolPtrInput `pulumi:"useTemplateScope"`
	// A list of valid Web Origins.
	WebOrigins pulumi.StringArrayInput `pulumi:"webOrigins"`
}

func (KeycloakRealmSpecRealmClientsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClients)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsArgs) ToKeycloakRealmSpecRealmClientsOutput() KeycloakRealmSpecRealmClientsOutput {
	return i.ToKeycloakRealmSpecRealmClientsOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsArgs) ToKeycloakRealmSpecRealmClientsOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsOutput)
}

// KeycloakRealmSpecRealmClientsArrayInput is an input type that accepts KeycloakRealmSpecRealmClientsArray and KeycloakRealmSpecRealmClientsArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsArrayInput` via:
//
//          KeycloakRealmSpecRealmClientsArray{ KeycloakRealmSpecRealmClientsArgs{...} }
type KeycloakRealmSpecRealmClientsArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsArrayOutput() KeycloakRealmSpecRealmClientsArrayOutput
	ToKeycloakRealmSpecRealmClientsArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsArrayOutput
}

type KeycloakRealmSpecRealmClientsArray []KeycloakRealmSpecRealmClientsInput

func (KeycloakRealmSpecRealmClientsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmClients)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsArray) ToKeycloakRealmSpecRealmClientsArrayOutput() KeycloakRealmSpecRealmClientsArrayOutput {
	return i.ToKeycloakRealmSpecRealmClientsArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsArray) ToKeycloakRealmSpecRealmClientsArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsArrayOutput)
}

type KeycloakRealmSpecRealmClientsOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClients)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsOutput) ToKeycloakRealmSpecRealmClientsOutput() KeycloakRealmSpecRealmClientsOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsOutput) ToKeycloakRealmSpecRealmClientsOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsOutput {
	return o
}

// Access options.
func (o KeycloakRealmSpecRealmClientsOutput) Access() pulumi.BoolMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) map[string]bool { return v.Access }).(pulumi.BoolMapOutput)
}

// Application Admin URL.
func (o KeycloakRealmSpecRealmClientsOutput) AdminUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.AdminUrl }).(pulumi.StringPtrOutput)
}

// Client Attributes.
func (o KeycloakRealmSpecRealmClientsOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// Application base URL.
func (o KeycloakRealmSpecRealmClientsOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.BaseUrl }).(pulumi.StringPtrOutput)
}

// True if a client supports only Bearer Tokens.
func (o KeycloakRealmSpecRealmClientsOutput) BearerOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.BearerOnly }).(pulumi.BoolPtrOutput)
}

// What Client authentication type to use.
func (o KeycloakRealmSpecRealmClientsOutput) ClientAuthenticatorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.ClientAuthenticatorType }).(pulumi.StringPtrOutput)
}

// Client ID.
func (o KeycloakRealmSpecRealmClientsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) string { return v.ClientId }).(pulumi.StringOutput)
}

// True if Consent Screen is required.
func (o KeycloakRealmSpecRealmClientsOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.ConsentRequired }).(pulumi.BoolPtrOutput)
}

// Default Client roles.
func (o KeycloakRealmSpecRealmClientsOutput) DefaultRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) []string { return v.DefaultRoles }).(pulumi.StringArrayOutput)
}

// Client description.
func (o KeycloakRealmSpecRealmClientsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// True if Direct Grant is enabled.
func (o KeycloakRealmSpecRealmClientsOutput) DirectAccessGrantsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.DirectAccessGrantsEnabled }).(pulumi.BoolPtrOutput)
}

// Client enabled flag.
func (o KeycloakRealmSpecRealmClientsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// True if this client supports Front Channel logout.
func (o KeycloakRealmSpecRealmClientsOutput) FrontchannelLogout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.FrontchannelLogout }).(pulumi.BoolPtrOutput)
}

// True if Full Scope is allowed.
func (o KeycloakRealmSpecRealmClientsOutput) FullScopeAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.FullScopeAllowed }).(pulumi.BoolPtrOutput)
}

// Client ID. If not specified, automatically generated.
func (o KeycloakRealmSpecRealmClientsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// True if Implicit flow is enabled.
func (o KeycloakRealmSpecRealmClientsOutput) ImplicitFlowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.ImplicitFlowEnabled }).(pulumi.BoolPtrOutput)
}

// Client name.
func (o KeycloakRealmSpecRealmClientsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Node registration timeout.
func (o KeycloakRealmSpecRealmClientsOutput) NodeReRegistrationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *int { return v.NodeReRegistrationTimeout }).(pulumi.IntPtrOutput)
}

// Not Before setting.
func (o KeycloakRealmSpecRealmClientsOutput) NotBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *int { return v.NotBefore }).(pulumi.IntPtrOutput)
}

// Protocol used for this Client.
func (o KeycloakRealmSpecRealmClientsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Protocol Mappers.
func (o KeycloakRealmSpecRealmClientsOutput) ProtocolMappers() KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) []KeycloakRealmSpecRealmClientsProtocolMappers {
		return v.ProtocolMappers
	}).(KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput)
}

// True if this is a public Client.
func (o KeycloakRealmSpecRealmClientsOutput) PublicClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.PublicClient }).(pulumi.BoolPtrOutput)
}

// A list of valid Redirection URLs.
func (o KeycloakRealmSpecRealmClientsOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

// Application root URL.
func (o KeycloakRealmSpecRealmClientsOutput) RootUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.RootUrl }).(pulumi.StringPtrOutput)
}

// Client Secret. The Operator will automatically create a Secret based on this value.
func (o KeycloakRealmSpecRealmClientsOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// True if Service Accounts are enabled.
func (o KeycloakRealmSpecRealmClientsOutput) ServiceAccountsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.ServiceAccountsEnabled }).(pulumi.BoolPtrOutput)
}

// True if Standard flow is enabled.
func (o KeycloakRealmSpecRealmClientsOutput) StandardFlowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.StandardFlowEnabled }).(pulumi.BoolPtrOutput)
}

// Surrogate Authentication Required option.
func (o KeycloakRealmSpecRealmClientsOutput) SurrogateAuthRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.SurrogateAuthRequired }).(pulumi.BoolPtrOutput)
}

// True to use a Template Config.
func (o KeycloakRealmSpecRealmClientsOutput) UseTemplateConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.UseTemplateConfig }).(pulumi.BoolPtrOutput)
}

// True to use Template Mappers.
func (o KeycloakRealmSpecRealmClientsOutput) UseTemplateMappers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.UseTemplateMappers }).(pulumi.BoolPtrOutput)
}

// True to use Template Scope.
func (o KeycloakRealmSpecRealmClientsOutput) UseTemplateScope() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) *bool { return v.UseTemplateScope }).(pulumi.BoolPtrOutput)
}

// A list of valid Web Origins.
func (o KeycloakRealmSpecRealmClientsOutput) WebOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClients) []string { return v.WebOrigins }).(pulumi.StringArrayOutput)
}

type KeycloakRealmSpecRealmClientsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmClients)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsArrayOutput) ToKeycloakRealmSpecRealmClientsArrayOutput() KeycloakRealmSpecRealmClientsArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsArrayOutput) ToKeycloakRealmSpecRealmClientsArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmClientsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmClients {
		return vs[0].([]KeycloakRealmSpecRealmClients)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmClientsOutput)
}

// Access options.
type KeycloakRealmSpecRealmClientsAccess struct {
}

// KeycloakRealmSpecRealmClientsAccessInput is an input type that accepts KeycloakRealmSpecRealmClientsAccessArgs and KeycloakRealmSpecRealmClientsAccessOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsAccessInput` via:
//
//          KeycloakRealmSpecRealmClientsAccessArgs{...}
type KeycloakRealmSpecRealmClientsAccessInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsAccessOutput() KeycloakRealmSpecRealmClientsAccessOutput
	ToKeycloakRealmSpecRealmClientsAccessOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsAccessOutput
}

// Access options.
type KeycloakRealmSpecRealmClientsAccessArgs struct {
}

func (KeycloakRealmSpecRealmClientsAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsAccess)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsAccessArgs) ToKeycloakRealmSpecRealmClientsAccessOutput() KeycloakRealmSpecRealmClientsAccessOutput {
	return i.ToKeycloakRealmSpecRealmClientsAccessOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsAccessArgs) ToKeycloakRealmSpecRealmClientsAccessOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsAccessOutput)
}

// Access options.
type KeycloakRealmSpecRealmClientsAccessOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsAccess)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsAccessOutput) ToKeycloakRealmSpecRealmClientsAccessOutput() KeycloakRealmSpecRealmClientsAccessOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsAccessOutput) ToKeycloakRealmSpecRealmClientsAccessOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsAccessOutput {
	return o
}

// Client Attributes.
type KeycloakRealmSpecRealmClientsAttributes struct {
}

// KeycloakRealmSpecRealmClientsAttributesInput is an input type that accepts KeycloakRealmSpecRealmClientsAttributesArgs and KeycloakRealmSpecRealmClientsAttributesOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsAttributesInput` via:
//
//          KeycloakRealmSpecRealmClientsAttributesArgs{...}
type KeycloakRealmSpecRealmClientsAttributesInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsAttributesOutput() KeycloakRealmSpecRealmClientsAttributesOutput
	ToKeycloakRealmSpecRealmClientsAttributesOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsAttributesOutput
}

// Client Attributes.
type KeycloakRealmSpecRealmClientsAttributesArgs struct {
}

func (KeycloakRealmSpecRealmClientsAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsAttributes)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsAttributesArgs) ToKeycloakRealmSpecRealmClientsAttributesOutput() KeycloakRealmSpecRealmClientsAttributesOutput {
	return i.ToKeycloakRealmSpecRealmClientsAttributesOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsAttributesArgs) ToKeycloakRealmSpecRealmClientsAttributesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsAttributesOutput)
}

// Client Attributes.
type KeycloakRealmSpecRealmClientsAttributesOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsAttributes)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsAttributesOutput) ToKeycloakRealmSpecRealmClientsAttributesOutput() KeycloakRealmSpecRealmClientsAttributesOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsAttributesOutput) ToKeycloakRealmSpecRealmClientsAttributesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsAttributesOutput {
	return o
}

type KeycloakRealmSpecRealmClientsProtocolMappers struct {
	// Config options.
	Config map[string]string `pulumi:"config"`
	// True if Consent Screen is required.
	ConsentRequired *bool `pulumi:"consentRequired"`
	// Text to use for displaying Consent Screen.
	ConsentText *string `pulumi:"consentText"`
	// Protocol Mapper ID.
	Id *string `pulumi:"id"`
	// Protocol Mapper Name.
	Name *string `pulumi:"name"`
	// Protocol to use.
	Protocol *string `pulumi:"protocol"`
	// Protocol Mapper to use
	ProtocolMapper *string `pulumi:"protocolMapper"`
}

// KeycloakRealmSpecRealmClientsProtocolMappersInput is an input type that accepts KeycloakRealmSpecRealmClientsProtocolMappersArgs and KeycloakRealmSpecRealmClientsProtocolMappersOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsProtocolMappersInput` via:
//
//          KeycloakRealmSpecRealmClientsProtocolMappersArgs{...}
type KeycloakRealmSpecRealmClientsProtocolMappersInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsProtocolMappersOutput() KeycloakRealmSpecRealmClientsProtocolMappersOutput
	ToKeycloakRealmSpecRealmClientsProtocolMappersOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsProtocolMappersOutput
}

type KeycloakRealmSpecRealmClientsProtocolMappersArgs struct {
	// Config options.
	Config pulumi.StringMapInput `pulumi:"config"`
	// True if Consent Screen is required.
	ConsentRequired pulumi.BoolPtrInput `pulumi:"consentRequired"`
	// Text to use for displaying Consent Screen.
	ConsentText pulumi.StringPtrInput `pulumi:"consentText"`
	// Protocol Mapper ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Protocol Mapper Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol to use.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Protocol Mapper to use
	ProtocolMapper pulumi.StringPtrInput `pulumi:"protocolMapper"`
}

func (KeycloakRealmSpecRealmClientsProtocolMappersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsProtocolMappers)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsProtocolMappersArgs) ToKeycloakRealmSpecRealmClientsProtocolMappersOutput() KeycloakRealmSpecRealmClientsProtocolMappersOutput {
	return i.ToKeycloakRealmSpecRealmClientsProtocolMappersOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsProtocolMappersArgs) ToKeycloakRealmSpecRealmClientsProtocolMappersOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsProtocolMappersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsProtocolMappersOutput)
}

// KeycloakRealmSpecRealmClientsProtocolMappersArrayInput is an input type that accepts KeycloakRealmSpecRealmClientsProtocolMappersArray and KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsProtocolMappersArrayInput` via:
//
//          KeycloakRealmSpecRealmClientsProtocolMappersArray{ KeycloakRealmSpecRealmClientsProtocolMappersArgs{...} }
type KeycloakRealmSpecRealmClientsProtocolMappersArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutput() KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput
	ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput
}

type KeycloakRealmSpecRealmClientsProtocolMappersArray []KeycloakRealmSpecRealmClientsProtocolMappersInput

func (KeycloakRealmSpecRealmClientsProtocolMappersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmClientsProtocolMappers)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsProtocolMappersArray) ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutput() KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput {
	return i.ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsProtocolMappersArray) ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput)
}

type KeycloakRealmSpecRealmClientsProtocolMappersOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsProtocolMappersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsProtocolMappers)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) ToKeycloakRealmSpecRealmClientsProtocolMappersOutput() KeycloakRealmSpecRealmClientsProtocolMappersOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) ToKeycloakRealmSpecRealmClientsProtocolMappersOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsProtocolMappersOutput {
	return o
}

// Config options.
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// True if Consent Screen is required.
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) *bool { return v.ConsentRequired }).(pulumi.BoolPtrOutput)
}

// Text to use for displaying Consent Screen.
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) ConsentText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) *string { return v.ConsentText }).(pulumi.StringPtrOutput)
}

// Protocol Mapper ID.
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Protocol Mapper Name.
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol to use.
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Protocol Mapper to use
func (o KeycloakRealmSpecRealmClientsProtocolMappersOutput) ProtocolMapper() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmClientsProtocolMappers) *string { return v.ProtocolMapper }).(pulumi.StringPtrOutput)
}

type KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmClientsProtocolMappers)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput) ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutput() KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput) ToKeycloakRealmSpecRealmClientsProtocolMappersArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmClientsProtocolMappersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmClientsProtocolMappers {
		return vs[0].([]KeycloakRealmSpecRealmClientsProtocolMappers)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmClientsProtocolMappersOutput)
}

// Config options.
type KeycloakRealmSpecRealmClientsProtocolMappersConfig struct {
}

// KeycloakRealmSpecRealmClientsProtocolMappersConfigInput is an input type that accepts KeycloakRealmSpecRealmClientsProtocolMappersConfigArgs and KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmClientsProtocolMappersConfigInput` via:
//
//          KeycloakRealmSpecRealmClientsProtocolMappersConfigArgs{...}
type KeycloakRealmSpecRealmClientsProtocolMappersConfigInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutput() KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput
	ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutputWithContext(context.Context) KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput
}

// Config options.
type KeycloakRealmSpecRealmClientsProtocolMappersConfigArgs struct {
}

func (KeycloakRealmSpecRealmClientsProtocolMappersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsProtocolMappersConfig)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmClientsProtocolMappersConfigArgs) ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutput() KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput {
	return i.ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmClientsProtocolMappersConfigArgs) ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput)
}

// Config options.
type KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmClientsProtocolMappersConfig)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput) ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutput() KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput {
	return o
}

func (o KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput) ToKeycloakRealmSpecRealmClientsProtocolMappersConfigOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput {
	return o
}

type KeycloakRealmSpecRealmIdentityProviders struct {
	// Adds Read Token role when creating this Identity Provider.
	AddReadTokenRoleOnCreate *bool `pulumi:"addReadTokenRoleOnCreate"`
	// Identity Provider Alias.
	Alias *string `pulumi:"alias"`
	// Identity Provider config.
	Config map[string]string `pulumi:"config"`
	// Identity Provider Display Name.
	DisplayName *string `pulumi:"displayName"`
	// Identity Provider enabled flag.
	Enabled *bool `pulumi:"enabled"`
	// Identity Provider First Broker Login Flow Alias.
	FirstBrokerLoginFlowAlias *string `pulumi:"firstBrokerLoginFlowAlias"`
	// Identity Provider Internal ID.
	InternalId *string `pulumi:"internalId"`
	// Identity Provider Link Only setting.
	LinkOnly *bool `pulumi:"linkOnly"`
	// Identity Provider Post Broker Login Flow Alias.
	PostBrokerLoginFlowAlias *string `pulumi:"postBrokerLoginFlowAlias"`
	// Identity Provider ID.
	ProviderId *string `pulumi:"providerId"`
	// Identity Provider Store to Token.
	StoreToken *bool `pulumi:"storeToken"`
	// Identity Provider Trust Email.
	TrustEmail *bool `pulumi:"trustEmail"`
}

// KeycloakRealmSpecRealmIdentityProvidersInput is an input type that accepts KeycloakRealmSpecRealmIdentityProvidersArgs and KeycloakRealmSpecRealmIdentityProvidersOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmIdentityProvidersInput` via:
//
//          KeycloakRealmSpecRealmIdentityProvidersArgs{...}
type KeycloakRealmSpecRealmIdentityProvidersInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmIdentityProvidersOutput() KeycloakRealmSpecRealmIdentityProvidersOutput
	ToKeycloakRealmSpecRealmIdentityProvidersOutputWithContext(context.Context) KeycloakRealmSpecRealmIdentityProvidersOutput
}

type KeycloakRealmSpecRealmIdentityProvidersArgs struct {
	// Adds Read Token role when creating this Identity Provider.
	AddReadTokenRoleOnCreate pulumi.BoolPtrInput `pulumi:"addReadTokenRoleOnCreate"`
	// Identity Provider Alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Identity Provider config.
	Config pulumi.StringMapInput `pulumi:"config"`
	// Identity Provider Display Name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Identity Provider enabled flag.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Identity Provider First Broker Login Flow Alias.
	FirstBrokerLoginFlowAlias pulumi.StringPtrInput `pulumi:"firstBrokerLoginFlowAlias"`
	// Identity Provider Internal ID.
	InternalId pulumi.StringPtrInput `pulumi:"internalId"`
	// Identity Provider Link Only setting.
	LinkOnly pulumi.BoolPtrInput `pulumi:"linkOnly"`
	// Identity Provider Post Broker Login Flow Alias.
	PostBrokerLoginFlowAlias pulumi.StringPtrInput `pulumi:"postBrokerLoginFlowAlias"`
	// Identity Provider ID.
	ProviderId pulumi.StringPtrInput `pulumi:"providerId"`
	// Identity Provider Store to Token.
	StoreToken pulumi.BoolPtrInput `pulumi:"storeToken"`
	// Identity Provider Trust Email.
	TrustEmail pulumi.BoolPtrInput `pulumi:"trustEmail"`
}

func (KeycloakRealmSpecRealmIdentityProvidersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmIdentityProviders)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmIdentityProvidersArgs) ToKeycloakRealmSpecRealmIdentityProvidersOutput() KeycloakRealmSpecRealmIdentityProvidersOutput {
	return i.ToKeycloakRealmSpecRealmIdentityProvidersOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmIdentityProvidersArgs) ToKeycloakRealmSpecRealmIdentityProvidersOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmIdentityProvidersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmIdentityProvidersOutput)
}

// KeycloakRealmSpecRealmIdentityProvidersArrayInput is an input type that accepts KeycloakRealmSpecRealmIdentityProvidersArray and KeycloakRealmSpecRealmIdentityProvidersArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmIdentityProvidersArrayInput` via:
//
//          KeycloakRealmSpecRealmIdentityProvidersArray{ KeycloakRealmSpecRealmIdentityProvidersArgs{...} }
type KeycloakRealmSpecRealmIdentityProvidersArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmIdentityProvidersArrayOutput() KeycloakRealmSpecRealmIdentityProvidersArrayOutput
	ToKeycloakRealmSpecRealmIdentityProvidersArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmIdentityProvidersArrayOutput
}

type KeycloakRealmSpecRealmIdentityProvidersArray []KeycloakRealmSpecRealmIdentityProvidersInput

func (KeycloakRealmSpecRealmIdentityProvidersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmIdentityProviders)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmIdentityProvidersArray) ToKeycloakRealmSpecRealmIdentityProvidersArrayOutput() KeycloakRealmSpecRealmIdentityProvidersArrayOutput {
	return i.ToKeycloakRealmSpecRealmIdentityProvidersArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmIdentityProvidersArray) ToKeycloakRealmSpecRealmIdentityProvidersArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmIdentityProvidersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmIdentityProvidersArrayOutput)
}

type KeycloakRealmSpecRealmIdentityProvidersOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmIdentityProvidersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmIdentityProviders)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmIdentityProvidersOutput) ToKeycloakRealmSpecRealmIdentityProvidersOutput() KeycloakRealmSpecRealmIdentityProvidersOutput {
	return o
}

func (o KeycloakRealmSpecRealmIdentityProvidersOutput) ToKeycloakRealmSpecRealmIdentityProvidersOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmIdentityProvidersOutput {
	return o
}

// Adds Read Token role when creating this Identity Provider.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) AddReadTokenRoleOnCreate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *bool { return v.AddReadTokenRoleOnCreate }).(pulumi.BoolPtrOutput)
}

// Identity Provider Alias.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Identity Provider config.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// Identity Provider Display Name.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Identity Provider enabled flag.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identity Provider First Broker Login Flow Alias.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) FirstBrokerLoginFlowAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *string { return v.FirstBrokerLoginFlowAlias }).(pulumi.StringPtrOutput)
}

// Identity Provider Internal ID.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *string { return v.InternalId }).(pulumi.StringPtrOutput)
}

// Identity Provider Link Only setting.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) LinkOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *bool { return v.LinkOnly }).(pulumi.BoolPtrOutput)
}

// Identity Provider Post Broker Login Flow Alias.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) PostBrokerLoginFlowAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *string { return v.PostBrokerLoginFlowAlias }).(pulumi.StringPtrOutput)
}

// Identity Provider ID.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) ProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *string { return v.ProviderId }).(pulumi.StringPtrOutput)
}

// Identity Provider Store to Token.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) StoreToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *bool { return v.StoreToken }).(pulumi.BoolPtrOutput)
}

// Identity Provider Trust Email.
func (o KeycloakRealmSpecRealmIdentityProvidersOutput) TrustEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmIdentityProviders) *bool { return v.TrustEmail }).(pulumi.BoolPtrOutput)
}

type KeycloakRealmSpecRealmIdentityProvidersArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmIdentityProvidersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmIdentityProviders)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmIdentityProvidersArrayOutput) ToKeycloakRealmSpecRealmIdentityProvidersArrayOutput() KeycloakRealmSpecRealmIdentityProvidersArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmIdentityProvidersArrayOutput) ToKeycloakRealmSpecRealmIdentityProvidersArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmIdentityProvidersArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmIdentityProvidersArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmIdentityProvidersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmIdentityProviders {
		return vs[0].([]KeycloakRealmSpecRealmIdentityProviders)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmIdentityProvidersOutput)
}

// Identity Provider config.
type KeycloakRealmSpecRealmIdentityProvidersConfig struct {
}

// KeycloakRealmSpecRealmIdentityProvidersConfigInput is an input type that accepts KeycloakRealmSpecRealmIdentityProvidersConfigArgs and KeycloakRealmSpecRealmIdentityProvidersConfigOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmIdentityProvidersConfigInput` via:
//
//          KeycloakRealmSpecRealmIdentityProvidersConfigArgs{...}
type KeycloakRealmSpecRealmIdentityProvidersConfigInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmIdentityProvidersConfigOutput() KeycloakRealmSpecRealmIdentityProvidersConfigOutput
	ToKeycloakRealmSpecRealmIdentityProvidersConfigOutputWithContext(context.Context) KeycloakRealmSpecRealmIdentityProvidersConfigOutput
}

// Identity Provider config.
type KeycloakRealmSpecRealmIdentityProvidersConfigArgs struct {
}

func (KeycloakRealmSpecRealmIdentityProvidersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmIdentityProvidersConfig)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmIdentityProvidersConfigArgs) ToKeycloakRealmSpecRealmIdentityProvidersConfigOutput() KeycloakRealmSpecRealmIdentityProvidersConfigOutput {
	return i.ToKeycloakRealmSpecRealmIdentityProvidersConfigOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmIdentityProvidersConfigArgs) ToKeycloakRealmSpecRealmIdentityProvidersConfigOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmIdentityProvidersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmIdentityProvidersConfigOutput)
}

// Identity Provider config.
type KeycloakRealmSpecRealmIdentityProvidersConfigOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmIdentityProvidersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmIdentityProvidersConfig)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmIdentityProvidersConfigOutput) ToKeycloakRealmSpecRealmIdentityProvidersConfigOutput() KeycloakRealmSpecRealmIdentityProvidersConfigOutput {
	return o
}

func (o KeycloakRealmSpecRealmIdentityProvidersConfigOutput) ToKeycloakRealmSpecRealmIdentityProvidersConfigOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmIdentityProvidersConfigOutput {
	return o
}

type KeycloakRealmSpecRealmOverrides struct {
	// Flow to be overridden.
	ForFlow *string `pulumi:"forFlow"`
	// Identity Provider to be overridden.
	IdentityProvider *string `pulumi:"identityProvider"`
}

// KeycloakRealmSpecRealmOverridesInput is an input type that accepts KeycloakRealmSpecRealmOverridesArgs and KeycloakRealmSpecRealmOverridesOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmOverridesInput` via:
//
//          KeycloakRealmSpecRealmOverridesArgs{...}
type KeycloakRealmSpecRealmOverridesInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmOverridesOutput() KeycloakRealmSpecRealmOverridesOutput
	ToKeycloakRealmSpecRealmOverridesOutputWithContext(context.Context) KeycloakRealmSpecRealmOverridesOutput
}

type KeycloakRealmSpecRealmOverridesArgs struct {
	// Flow to be overridden.
	ForFlow pulumi.StringPtrInput `pulumi:"forFlow"`
	// Identity Provider to be overridden.
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
}

func (KeycloakRealmSpecRealmOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmOverrides)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmOverridesArgs) ToKeycloakRealmSpecRealmOverridesOutput() KeycloakRealmSpecRealmOverridesOutput {
	return i.ToKeycloakRealmSpecRealmOverridesOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmOverridesArgs) ToKeycloakRealmSpecRealmOverridesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmOverridesOutput)
}

// KeycloakRealmSpecRealmOverridesArrayInput is an input type that accepts KeycloakRealmSpecRealmOverridesArray and KeycloakRealmSpecRealmOverridesArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmOverridesArrayInput` via:
//
//          KeycloakRealmSpecRealmOverridesArray{ KeycloakRealmSpecRealmOverridesArgs{...} }
type KeycloakRealmSpecRealmOverridesArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmOverridesArrayOutput() KeycloakRealmSpecRealmOverridesArrayOutput
	ToKeycloakRealmSpecRealmOverridesArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmOverridesArrayOutput
}

type KeycloakRealmSpecRealmOverridesArray []KeycloakRealmSpecRealmOverridesInput

func (KeycloakRealmSpecRealmOverridesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmOverrides)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmOverridesArray) ToKeycloakRealmSpecRealmOverridesArrayOutput() KeycloakRealmSpecRealmOverridesArrayOutput {
	return i.ToKeycloakRealmSpecRealmOverridesArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmOverridesArray) ToKeycloakRealmSpecRealmOverridesArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmOverridesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmOverridesArrayOutput)
}

type KeycloakRealmSpecRealmOverridesOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmOverrides)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmOverridesOutput) ToKeycloakRealmSpecRealmOverridesOutput() KeycloakRealmSpecRealmOverridesOutput {
	return o
}

func (o KeycloakRealmSpecRealmOverridesOutput) ToKeycloakRealmSpecRealmOverridesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmOverridesOutput {
	return o
}

// Flow to be overridden.
func (o KeycloakRealmSpecRealmOverridesOutput) ForFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmOverrides) *string { return v.ForFlow }).(pulumi.StringPtrOutput)
}

// Identity Provider to be overridden.
func (o KeycloakRealmSpecRealmOverridesOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmOverrides) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

type KeycloakRealmSpecRealmOverridesArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmOverridesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmOverrides)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmOverridesArrayOutput) ToKeycloakRealmSpecRealmOverridesArrayOutput() KeycloakRealmSpecRealmOverridesArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmOverridesArrayOutput) ToKeycloakRealmSpecRealmOverridesArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmOverridesArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmOverridesArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmOverridesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmOverrides {
		return vs[0].([]KeycloakRealmSpecRealmOverrides)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmOverridesOutput)
}

type KeycloakRealmSpecRealmUsers struct {
	// A set of Attributes.
	Attributes map[string][]string `pulumi:"attributes"`
	// A set of Client Roles.
	ClientRoles map[string][]string `pulumi:"clientRoles"`
	// A set of Credentials.
	Credentials []KeycloakRealmSpecRealmUsersCredentials `pulumi:"credentials"`
	// Email.
	Email *string `pulumi:"email"`
	// True if email has already been verified.
	EmailVerified *bool `pulumi:"emailVerified"`
	// User enabled flag.
	Enabled *bool `pulumi:"enabled"`
	// A set of Federated Identities.
	FederatedIdentities []KeycloakRealmSpecRealmUsersFederatedIdentities `pulumi:"federatedIdentities"`
	// First Name.
	FirstName *string `pulumi:"firstName"`
	// A set of Groups.
	Groups []string `pulumi:"groups"`
	// User ID.
	Id *string `pulumi:"id"`
	// Last Name.
	LastName *string `pulumi:"lastName"`
	// A set of Realm Roles.
	RealmRoles []string `pulumi:"realmRoles"`
	// A set of Required Actions.
	RequiredActions []string `pulumi:"requiredActions"`
	// User Name.
	Username *string `pulumi:"username"`
}

// KeycloakRealmSpecRealmUsersInput is an input type that accepts KeycloakRealmSpecRealmUsersArgs and KeycloakRealmSpecRealmUsersOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersInput` via:
//
//          KeycloakRealmSpecRealmUsersArgs{...}
type KeycloakRealmSpecRealmUsersInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersOutput() KeycloakRealmSpecRealmUsersOutput
	ToKeycloakRealmSpecRealmUsersOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersOutput
}

type KeycloakRealmSpecRealmUsersArgs struct {
	// A set of Attributes.
	Attributes pulumi.StringArrayMapInput `pulumi:"attributes"`
	// A set of Client Roles.
	ClientRoles pulumi.StringArrayMapInput `pulumi:"clientRoles"`
	// A set of Credentials.
	Credentials KeycloakRealmSpecRealmUsersCredentialsArrayInput `pulumi:"credentials"`
	// Email.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// True if email has already been verified.
	EmailVerified pulumi.BoolPtrInput `pulumi:"emailVerified"`
	// User enabled flag.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A set of Federated Identities.
	FederatedIdentities KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayInput `pulumi:"federatedIdentities"`
	// First Name.
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// A set of Groups.
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// User ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Last Name.
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
	// A set of Realm Roles.
	RealmRoles pulumi.StringArrayInput `pulumi:"realmRoles"`
	// A set of Required Actions.
	RequiredActions pulumi.StringArrayInput `pulumi:"requiredActions"`
	// User Name.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KeycloakRealmSpecRealmUsersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsers)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersArgs) ToKeycloakRealmSpecRealmUsersOutput() KeycloakRealmSpecRealmUsersOutput {
	return i.ToKeycloakRealmSpecRealmUsersOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersArgs) ToKeycloakRealmSpecRealmUsersOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersOutput)
}

// KeycloakRealmSpecRealmUsersArrayInput is an input type that accepts KeycloakRealmSpecRealmUsersArray and KeycloakRealmSpecRealmUsersArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersArrayInput` via:
//
//          KeycloakRealmSpecRealmUsersArray{ KeycloakRealmSpecRealmUsersArgs{...} }
type KeycloakRealmSpecRealmUsersArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersArrayOutput() KeycloakRealmSpecRealmUsersArrayOutput
	ToKeycloakRealmSpecRealmUsersArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersArrayOutput
}

type KeycloakRealmSpecRealmUsersArray []KeycloakRealmSpecRealmUsersInput

func (KeycloakRealmSpecRealmUsersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmUsers)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersArray) ToKeycloakRealmSpecRealmUsersArrayOutput() KeycloakRealmSpecRealmUsersArrayOutput {
	return i.ToKeycloakRealmSpecRealmUsersArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersArray) ToKeycloakRealmSpecRealmUsersArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersArrayOutput)
}

type KeycloakRealmSpecRealmUsersOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsers)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersOutput) ToKeycloakRealmSpecRealmUsersOutput() KeycloakRealmSpecRealmUsersOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersOutput) ToKeycloakRealmSpecRealmUsersOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersOutput {
	return o
}

// A set of Attributes.
func (o KeycloakRealmSpecRealmUsersOutput) Attributes() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) map[string][]string { return v.Attributes }).(pulumi.StringArrayMapOutput)
}

// A set of Client Roles.
func (o KeycloakRealmSpecRealmUsersOutput) ClientRoles() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) map[string][]string { return v.ClientRoles }).(pulumi.StringArrayMapOutput)
}

// A set of Credentials.
func (o KeycloakRealmSpecRealmUsersOutput) Credentials() KeycloakRealmSpecRealmUsersCredentialsArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) []KeycloakRealmSpecRealmUsersCredentials { return v.Credentials }).(KeycloakRealmSpecRealmUsersCredentialsArrayOutput)
}

// Email.
func (o KeycloakRealmSpecRealmUsersOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// True if email has already been verified.
func (o KeycloakRealmSpecRealmUsersOutput) EmailVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *bool { return v.EmailVerified }).(pulumi.BoolPtrOutput)
}

// User enabled flag.
func (o KeycloakRealmSpecRealmUsersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A set of Federated Identities.
func (o KeycloakRealmSpecRealmUsersOutput) FederatedIdentities() KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) []KeycloakRealmSpecRealmUsersFederatedIdentities {
		return v.FederatedIdentities
	}).(KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput)
}

// First Name.
func (o KeycloakRealmSpecRealmUsersOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// A set of Groups.
func (o KeycloakRealmSpecRealmUsersOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// User ID.
func (o KeycloakRealmSpecRealmUsersOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Last Name.
func (o KeycloakRealmSpecRealmUsersOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

// A set of Realm Roles.
func (o KeycloakRealmSpecRealmUsersOutput) RealmRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) []string { return v.RealmRoles }).(pulumi.StringArrayOutput)
}

// A set of Required Actions.
func (o KeycloakRealmSpecRealmUsersOutput) RequiredActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) []string { return v.RequiredActions }).(pulumi.StringArrayOutput)
}

// User Name.
func (o KeycloakRealmSpecRealmUsersOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsers) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KeycloakRealmSpecRealmUsersArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmUsers)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersArrayOutput) ToKeycloakRealmSpecRealmUsersArrayOutput() KeycloakRealmSpecRealmUsersArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersArrayOutput) ToKeycloakRealmSpecRealmUsersArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmUsersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmUsers {
		return vs[0].([]KeycloakRealmSpecRealmUsers)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmUsersOutput)
}

// A set of Attributes.
type KeycloakRealmSpecRealmUsersAttributes struct {
}

// KeycloakRealmSpecRealmUsersAttributesInput is an input type that accepts KeycloakRealmSpecRealmUsersAttributesArgs and KeycloakRealmSpecRealmUsersAttributesOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersAttributesInput` via:
//
//          KeycloakRealmSpecRealmUsersAttributesArgs{...}
type KeycloakRealmSpecRealmUsersAttributesInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersAttributesOutput() KeycloakRealmSpecRealmUsersAttributesOutput
	ToKeycloakRealmSpecRealmUsersAttributesOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersAttributesOutput
}

// A set of Attributes.
type KeycloakRealmSpecRealmUsersAttributesArgs struct {
}

func (KeycloakRealmSpecRealmUsersAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersAttributes)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersAttributesArgs) ToKeycloakRealmSpecRealmUsersAttributesOutput() KeycloakRealmSpecRealmUsersAttributesOutput {
	return i.ToKeycloakRealmSpecRealmUsersAttributesOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersAttributesArgs) ToKeycloakRealmSpecRealmUsersAttributesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersAttributesOutput)
}

// A set of Attributes.
type KeycloakRealmSpecRealmUsersAttributesOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersAttributes)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersAttributesOutput) ToKeycloakRealmSpecRealmUsersAttributesOutput() KeycloakRealmSpecRealmUsersAttributesOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersAttributesOutput) ToKeycloakRealmSpecRealmUsersAttributesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersAttributesOutput {
	return o
}

// A set of Client Roles.
type KeycloakRealmSpecRealmUsersClientRoles struct {
}

// KeycloakRealmSpecRealmUsersClientRolesInput is an input type that accepts KeycloakRealmSpecRealmUsersClientRolesArgs and KeycloakRealmSpecRealmUsersClientRolesOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersClientRolesInput` via:
//
//          KeycloakRealmSpecRealmUsersClientRolesArgs{...}
type KeycloakRealmSpecRealmUsersClientRolesInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersClientRolesOutput() KeycloakRealmSpecRealmUsersClientRolesOutput
	ToKeycloakRealmSpecRealmUsersClientRolesOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersClientRolesOutput
}

// A set of Client Roles.
type KeycloakRealmSpecRealmUsersClientRolesArgs struct {
}

func (KeycloakRealmSpecRealmUsersClientRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersClientRoles)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersClientRolesArgs) ToKeycloakRealmSpecRealmUsersClientRolesOutput() KeycloakRealmSpecRealmUsersClientRolesOutput {
	return i.ToKeycloakRealmSpecRealmUsersClientRolesOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersClientRolesArgs) ToKeycloakRealmSpecRealmUsersClientRolesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersClientRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersClientRolesOutput)
}

// A set of Client Roles.
type KeycloakRealmSpecRealmUsersClientRolesOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersClientRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersClientRoles)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersClientRolesOutput) ToKeycloakRealmSpecRealmUsersClientRolesOutput() KeycloakRealmSpecRealmUsersClientRolesOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersClientRolesOutput) ToKeycloakRealmSpecRealmUsersClientRolesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersClientRolesOutput {
	return o
}

type KeycloakRealmSpecRealmUsersCredentials struct {
	// True if this credential object is temporary.
	Temporary *bool `pulumi:"temporary"`
	// Credential Type.
	Type *string `pulumi:"type"`
	// Credential Value.
	Value *string `pulumi:"value"`
}

// KeycloakRealmSpecRealmUsersCredentialsInput is an input type that accepts KeycloakRealmSpecRealmUsersCredentialsArgs and KeycloakRealmSpecRealmUsersCredentialsOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersCredentialsInput` via:
//
//          KeycloakRealmSpecRealmUsersCredentialsArgs{...}
type KeycloakRealmSpecRealmUsersCredentialsInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersCredentialsOutput() KeycloakRealmSpecRealmUsersCredentialsOutput
	ToKeycloakRealmSpecRealmUsersCredentialsOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersCredentialsOutput
}

type KeycloakRealmSpecRealmUsersCredentialsArgs struct {
	// True if this credential object is temporary.
	Temporary pulumi.BoolPtrInput `pulumi:"temporary"`
	// Credential Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Credential Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KeycloakRealmSpecRealmUsersCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersCredentials)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersCredentialsArgs) ToKeycloakRealmSpecRealmUsersCredentialsOutput() KeycloakRealmSpecRealmUsersCredentialsOutput {
	return i.ToKeycloakRealmSpecRealmUsersCredentialsOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersCredentialsArgs) ToKeycloakRealmSpecRealmUsersCredentialsOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersCredentialsOutput)
}

// KeycloakRealmSpecRealmUsersCredentialsArrayInput is an input type that accepts KeycloakRealmSpecRealmUsersCredentialsArray and KeycloakRealmSpecRealmUsersCredentialsArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersCredentialsArrayInput` via:
//
//          KeycloakRealmSpecRealmUsersCredentialsArray{ KeycloakRealmSpecRealmUsersCredentialsArgs{...} }
type KeycloakRealmSpecRealmUsersCredentialsArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersCredentialsArrayOutput() KeycloakRealmSpecRealmUsersCredentialsArrayOutput
	ToKeycloakRealmSpecRealmUsersCredentialsArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersCredentialsArrayOutput
}

type KeycloakRealmSpecRealmUsersCredentialsArray []KeycloakRealmSpecRealmUsersCredentialsInput

func (KeycloakRealmSpecRealmUsersCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmUsersCredentials)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersCredentialsArray) ToKeycloakRealmSpecRealmUsersCredentialsArrayOutput() KeycloakRealmSpecRealmUsersCredentialsArrayOutput {
	return i.ToKeycloakRealmSpecRealmUsersCredentialsArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersCredentialsArray) ToKeycloakRealmSpecRealmUsersCredentialsArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersCredentialsArrayOutput)
}

type KeycloakRealmSpecRealmUsersCredentialsOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersCredentials)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersCredentialsOutput) ToKeycloakRealmSpecRealmUsersCredentialsOutput() KeycloakRealmSpecRealmUsersCredentialsOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersCredentialsOutput) ToKeycloakRealmSpecRealmUsersCredentialsOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersCredentialsOutput {
	return o
}

// True if this credential object is temporary.
func (o KeycloakRealmSpecRealmUsersCredentialsOutput) Temporary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsersCredentials) *bool { return v.Temporary }).(pulumi.BoolPtrOutput)
}

// Credential Type.
func (o KeycloakRealmSpecRealmUsersCredentialsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsersCredentials) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Credential Value.
func (o KeycloakRealmSpecRealmUsersCredentialsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsersCredentials) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KeycloakRealmSpecRealmUsersCredentialsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmUsersCredentials)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersCredentialsArrayOutput) ToKeycloakRealmSpecRealmUsersCredentialsArrayOutput() KeycloakRealmSpecRealmUsersCredentialsArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersCredentialsArrayOutput) ToKeycloakRealmSpecRealmUsersCredentialsArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersCredentialsArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersCredentialsArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmUsersCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmUsersCredentials {
		return vs[0].([]KeycloakRealmSpecRealmUsersCredentials)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmUsersCredentialsOutput)
}

type KeycloakRealmSpecRealmUsersFederatedIdentities struct {
	// Federated Identity Provider.
	IdentityProvider *string `pulumi:"identityProvider"`
	// Federated Identity User ID.
	UserId *string `pulumi:"userId"`
	// Federated Identity User Name.
	UserName *string `pulumi:"userName"`
}

// KeycloakRealmSpecRealmUsersFederatedIdentitiesInput is an input type that accepts KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs and KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersFederatedIdentitiesInput` via:
//
//          KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs{...}
type KeycloakRealmSpecRealmUsersFederatedIdentitiesInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutput() KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput
	ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput
}

type KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs struct {
	// Federated Identity Provider.
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// Federated Identity User ID.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// Federated Identity User Name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersFederatedIdentities)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutput() KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput {
	return i.ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput)
}

// KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayInput is an input type that accepts KeycloakRealmSpecRealmUsersFederatedIdentitiesArray and KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayInput` via:
//
//          KeycloakRealmSpecRealmUsersFederatedIdentitiesArray{ KeycloakRealmSpecRealmUsersFederatedIdentitiesArgs{...} }
type KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayInput interface {
	pulumi.Input

	ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput() KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput
	ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutputWithContext(context.Context) KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput
}

type KeycloakRealmSpecRealmUsersFederatedIdentitiesArray []KeycloakRealmSpecRealmUsersFederatedIdentitiesInput

func (KeycloakRealmSpecRealmUsersFederatedIdentitiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmUsersFederatedIdentities)(nil)).Elem()
}

func (i KeycloakRealmSpecRealmUsersFederatedIdentitiesArray) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput() KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput {
	return i.ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmSpecRealmUsersFederatedIdentitiesArray) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput)
}

type KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmSpecRealmUsersFederatedIdentities)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutput() KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput {
	return o
}

// Federated Identity Provider.
func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsersFederatedIdentities) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// Federated Identity User ID.
func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsersFederatedIdentities) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// Federated Identity User Name.
func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakRealmSpecRealmUsersFederatedIdentities) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakRealmSpecRealmUsersFederatedIdentities)(nil)).Elem()
}

func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput() KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput) ToKeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutputWithContext(ctx context.Context) KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput {
	return o
}

func (o KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput) Index(i pulumi.IntInput) KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakRealmSpecRealmUsersFederatedIdentities {
		return vs[0].([]KeycloakRealmSpecRealmUsersFederatedIdentities)[vs[1].(int)]
	}).(KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput)
}

// KeycloakRealmStatus defines the observed state of KeycloakRealm
type KeycloakRealmStatus struct {
	// TODO
	LoginURL string `pulumi:"loginURL"`
	// Human-readable message indicating details about current operator phase or error.
	Message string `pulumi:"message"`
	// Current phase of the operator.
	Phase string `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready bool `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
	SecondaryResources map[string][]string `pulumi:"secondaryResources"`
}

// KeycloakRealmStatusInput is an input type that accepts KeycloakRealmStatusArgs and KeycloakRealmStatusOutput values.
// You can construct a concrete instance of `KeycloakRealmStatusInput` via:
//
//          KeycloakRealmStatusArgs{...}
type KeycloakRealmStatusInput interface {
	pulumi.Input

	ToKeycloakRealmStatusOutput() KeycloakRealmStatusOutput
	ToKeycloakRealmStatusOutputWithContext(context.Context) KeycloakRealmStatusOutput
}

// KeycloakRealmStatus defines the observed state of KeycloakRealm
type KeycloakRealmStatusArgs struct {
	// TODO
	LoginURL pulumi.StringInput `pulumi:"loginURL"`
	// Human-readable message indicating details about current operator phase or error.
	Message pulumi.StringInput `pulumi:"message"`
	// Current phase of the operator.
	Phase pulumi.StringInput `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
	SecondaryResources pulumi.StringArrayMapInput `pulumi:"secondaryResources"`
}

func (KeycloakRealmStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmStatus)(nil)).Elem()
}

func (i KeycloakRealmStatusArgs) ToKeycloakRealmStatusOutput() KeycloakRealmStatusOutput {
	return i.ToKeycloakRealmStatusOutputWithContext(context.Background())
}

func (i KeycloakRealmStatusArgs) ToKeycloakRealmStatusOutputWithContext(ctx context.Context) KeycloakRealmStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmStatusOutput)
}

func (i KeycloakRealmStatusArgs) ToKeycloakRealmStatusPtrOutput() KeycloakRealmStatusPtrOutput {
	return i.ToKeycloakRealmStatusPtrOutputWithContext(context.Background())
}

func (i KeycloakRealmStatusArgs) ToKeycloakRealmStatusPtrOutputWithContext(ctx context.Context) KeycloakRealmStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmStatusOutput).ToKeycloakRealmStatusPtrOutputWithContext(ctx)
}

// KeycloakRealmStatusPtrInput is an input type that accepts KeycloakRealmStatusArgs, KeycloakRealmStatusPtr and KeycloakRealmStatusPtrOutput values.
// You can construct a concrete instance of `KeycloakRealmStatusPtrInput` via:
//
//          KeycloakRealmStatusArgs{...}
//
//  or:
//
//          nil
type KeycloakRealmStatusPtrInput interface {
	pulumi.Input

	ToKeycloakRealmStatusPtrOutput() KeycloakRealmStatusPtrOutput
	ToKeycloakRealmStatusPtrOutputWithContext(context.Context) KeycloakRealmStatusPtrOutput
}

type keycloakRealmStatusPtrType KeycloakRealmStatusArgs

func KeycloakRealmStatusPtr(v *KeycloakRealmStatusArgs) KeycloakRealmStatusPtrInput {
	return (*keycloakRealmStatusPtrType)(v)
}

func (*keycloakRealmStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmStatus)(nil)).Elem()
}

func (i *keycloakRealmStatusPtrType) ToKeycloakRealmStatusPtrOutput() KeycloakRealmStatusPtrOutput {
	return i.ToKeycloakRealmStatusPtrOutputWithContext(context.Background())
}

func (i *keycloakRealmStatusPtrType) ToKeycloakRealmStatusPtrOutputWithContext(ctx context.Context) KeycloakRealmStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmStatusPtrOutput)
}

// KeycloakRealmStatus defines the observed state of KeycloakRealm
type KeycloakRealmStatusOutput struct{ *pulumi.OutputState }

func (KeycloakRealmStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmStatus)(nil)).Elem()
}

func (o KeycloakRealmStatusOutput) ToKeycloakRealmStatusOutput() KeycloakRealmStatusOutput {
	return o
}

func (o KeycloakRealmStatusOutput) ToKeycloakRealmStatusOutputWithContext(ctx context.Context) KeycloakRealmStatusOutput {
	return o
}

func (o KeycloakRealmStatusOutput) ToKeycloakRealmStatusPtrOutput() KeycloakRealmStatusPtrOutput {
	return o.ToKeycloakRealmStatusPtrOutputWithContext(context.Background())
}

func (o KeycloakRealmStatusOutput) ToKeycloakRealmStatusPtrOutputWithContext(ctx context.Context) KeycloakRealmStatusPtrOutput {
	return o.ApplyT(func(v KeycloakRealmStatus) *KeycloakRealmStatus {
		return &v
	}).(KeycloakRealmStatusPtrOutput)
}

// TODO
func (o KeycloakRealmStatusOutput) LoginURL() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmStatus) string { return v.LoginURL }).(pulumi.StringOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakRealmStatusOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmStatus) string { return v.Message }).(pulumi.StringOutput)
}

// Current phase of the operator.
func (o KeycloakRealmStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakRealmStatus) string { return v.Phase }).(pulumi.StringOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakRealmStatusOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v KeycloakRealmStatus) bool { return v.Ready }).(pulumi.BoolOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
func (o KeycloakRealmStatusOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakRealmStatus) map[string][]string { return v.SecondaryResources }).(pulumi.StringArrayMapOutput)
}

type KeycloakRealmStatusPtrOutput struct{ *pulumi.OutputState }

func (KeycloakRealmStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmStatus)(nil)).Elem()
}

func (o KeycloakRealmStatusPtrOutput) ToKeycloakRealmStatusPtrOutput() KeycloakRealmStatusPtrOutput {
	return o
}

func (o KeycloakRealmStatusPtrOutput) ToKeycloakRealmStatusPtrOutputWithContext(ctx context.Context) KeycloakRealmStatusPtrOutput {
	return o
}

func (o KeycloakRealmStatusPtrOutput) Elem() KeycloakRealmStatusOutput {
	return o.ApplyT(func(v *KeycloakRealmStatus) KeycloakRealmStatus { return *v }).(KeycloakRealmStatusOutput)
}

// TODO
func (o KeycloakRealmStatusPtrOutput) LoginURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmStatus) *string {
		if v == nil {
			return nil
		}
		return &v.LoginURL
	}).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakRealmStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Current phase of the operator.
func (o KeycloakRealmStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakRealmStatusPtrOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.Ready
	}).(pulumi.BoolPtrOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
func (o KeycloakRealmStatusPtrOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KeycloakRealmStatus) map[string][]string {
		if v == nil {
			return nil
		}
		return v.SecondaryResources
	}).(pulumi.StringArrayMapOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakRealmStatusSecondaryResources struct {
}

// KeycloakRealmStatusSecondaryResourcesInput is an input type that accepts KeycloakRealmStatusSecondaryResourcesArgs and KeycloakRealmStatusSecondaryResourcesOutput values.
// You can construct a concrete instance of `KeycloakRealmStatusSecondaryResourcesInput` via:
//
//          KeycloakRealmStatusSecondaryResourcesArgs{...}
type KeycloakRealmStatusSecondaryResourcesInput interface {
	pulumi.Input

	ToKeycloakRealmStatusSecondaryResourcesOutput() KeycloakRealmStatusSecondaryResourcesOutput
	ToKeycloakRealmStatusSecondaryResourcesOutputWithContext(context.Context) KeycloakRealmStatusSecondaryResourcesOutput
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakRealmStatusSecondaryResourcesArgs struct {
}

func (KeycloakRealmStatusSecondaryResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmStatusSecondaryResources)(nil)).Elem()
}

func (i KeycloakRealmStatusSecondaryResourcesArgs) ToKeycloakRealmStatusSecondaryResourcesOutput() KeycloakRealmStatusSecondaryResourcesOutput {
	return i.ToKeycloakRealmStatusSecondaryResourcesOutputWithContext(context.Background())
}

func (i KeycloakRealmStatusSecondaryResourcesArgs) ToKeycloakRealmStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakRealmStatusSecondaryResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmStatusSecondaryResourcesOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ]
type KeycloakRealmStatusSecondaryResourcesOutput struct{ *pulumi.OutputState }

func (KeycloakRealmStatusSecondaryResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakRealmStatusSecondaryResources)(nil)).Elem()
}

func (o KeycloakRealmStatusSecondaryResourcesOutput) ToKeycloakRealmStatusSecondaryResourcesOutput() KeycloakRealmStatusSecondaryResourcesOutput {
	return o
}

func (o KeycloakRealmStatusSecondaryResourcesOutput) ToKeycloakRealmStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakRealmStatusSecondaryResourcesOutput {
	return o
}

// KeycloakSpec defines the desired state of Keycloak.
type KeycloakSpec struct {
	// A list of extensions, where each one is a URL to a JAR files that will be deployed in Keycloak.
	Extensions []string `pulumi:"extensions"`
	// Controls external Ingress/Route settings.
	ExternalAccess *KeycloakSpecExternalAccess `pulumi:"externalAccess"`
	// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
	//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
	//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
	//  For more information, please refer to the Operator documentation.
	ExternalDatabase *KeycloakSpecExternalDatabase `pulumi:"externalDatabase"`
	// Number of Keycloak instances in HA mode. Default is 1.
	Instances *int `pulumi:"instances"`
	// Resources (Requests and Limits) for KeycloakDeployment.
	KeycloakDeploymentSpec *KeycloakSpecKeycloakDeploymentSpec `pulumi:"keycloakDeploymentSpec"`
	// Specify Migration configuration
	Migration *KeycloakSpecMigration `pulumi:"migration"`
	// Specify PodDisruptionBudget configuration.
	PodDisruptionBudget *KeycloakSpecPodDisruptionBudget `pulumi:"podDisruptionBudget"`
	// Resources (Requests and Limits) for PostgresDeployment.
	PostgresDeploymentSpec *KeycloakSpecPostgresDeploymentSpec `pulumi:"postgresDeploymentSpec"`
	// Profile used for controlling Operator behavior. Default is empty.
	Profile *string `pulumi:"profile"`
	// Name of the StorageClass for Postgresql Persistent Volume Claim
	StorageClassName *string `pulumi:"storageClassName"`
}

// KeycloakSpecInput is an input type that accepts KeycloakSpecArgs and KeycloakSpecOutput values.
// You can construct a concrete instance of `KeycloakSpecInput` via:
//
//          KeycloakSpecArgs{...}
type KeycloakSpecInput interface {
	pulumi.Input

	ToKeycloakSpecOutput() KeycloakSpecOutput
	ToKeycloakSpecOutputWithContext(context.Context) KeycloakSpecOutput
}

// KeycloakSpec defines the desired state of Keycloak.
type KeycloakSpecArgs struct {
	// A list of extensions, where each one is a URL to a JAR files that will be deployed in Keycloak.
	Extensions pulumi.StringArrayInput `pulumi:"extensions"`
	// Controls external Ingress/Route settings.
	ExternalAccess KeycloakSpecExternalAccessPtrInput `pulumi:"externalAccess"`
	// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
	//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
	//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
	//  For more information, please refer to the Operator documentation.
	ExternalDatabase KeycloakSpecExternalDatabasePtrInput `pulumi:"externalDatabase"`
	// Number of Keycloak instances in HA mode. Default is 1.
	Instances pulumi.IntPtrInput `pulumi:"instances"`
	// Resources (Requests and Limits) for KeycloakDeployment.
	KeycloakDeploymentSpec KeycloakSpecKeycloakDeploymentSpecPtrInput `pulumi:"keycloakDeploymentSpec"`
	// Specify Migration configuration
	Migration KeycloakSpecMigrationPtrInput `pulumi:"migration"`
	// Specify PodDisruptionBudget configuration.
	PodDisruptionBudget KeycloakSpecPodDisruptionBudgetPtrInput `pulumi:"podDisruptionBudget"`
	// Resources (Requests and Limits) for PostgresDeployment.
	PostgresDeploymentSpec KeycloakSpecPostgresDeploymentSpecPtrInput `pulumi:"postgresDeploymentSpec"`
	// Profile used for controlling Operator behavior. Default is empty.
	Profile pulumi.StringPtrInput `pulumi:"profile"`
	// Name of the StorageClass for Postgresql Persistent Volume Claim
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
}

func (KeycloakSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpec)(nil)).Elem()
}

func (i KeycloakSpecArgs) ToKeycloakSpecOutput() KeycloakSpecOutput {
	return i.ToKeycloakSpecOutputWithContext(context.Background())
}

func (i KeycloakSpecArgs) ToKeycloakSpecOutputWithContext(ctx context.Context) KeycloakSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecOutput)
}

func (i KeycloakSpecArgs) ToKeycloakSpecPtrOutput() KeycloakSpecPtrOutput {
	return i.ToKeycloakSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecArgs) ToKeycloakSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecOutput).ToKeycloakSpecPtrOutputWithContext(ctx)
}

// KeycloakSpecPtrInput is an input type that accepts KeycloakSpecArgs, KeycloakSpecPtr and KeycloakSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecPtrInput` via:
//
//          KeycloakSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecPtrInput interface {
	pulumi.Input

	ToKeycloakSpecPtrOutput() KeycloakSpecPtrOutput
	ToKeycloakSpecPtrOutputWithContext(context.Context) KeycloakSpecPtrOutput
}

type keycloakSpecPtrType KeycloakSpecArgs

func KeycloakSpecPtr(v *KeycloakSpecArgs) KeycloakSpecPtrInput {
	return (*keycloakSpecPtrType)(v)
}

func (*keycloakSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpec)(nil)).Elem()
}

func (i *keycloakSpecPtrType) ToKeycloakSpecPtrOutput() KeycloakSpecPtrOutput {
	return i.ToKeycloakSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecPtrType) ToKeycloakSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPtrOutput)
}

// KeycloakSpec defines the desired state of Keycloak.
type KeycloakSpecOutput struct{ *pulumi.OutputState }

func (KeycloakSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpec)(nil)).Elem()
}

func (o KeycloakSpecOutput) ToKeycloakSpecOutput() KeycloakSpecOutput {
	return o
}

func (o KeycloakSpecOutput) ToKeycloakSpecOutputWithContext(ctx context.Context) KeycloakSpecOutput {
	return o
}

func (o KeycloakSpecOutput) ToKeycloakSpecPtrOutput() KeycloakSpecPtrOutput {
	return o.ToKeycloakSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecOutput) ToKeycloakSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpec {
		return &v
	}).(KeycloakSpecPtrOutput)
}

// A list of extensions, where each one is a URL to a JAR files that will be deployed in Keycloak.
func (o KeycloakSpecOutput) Extensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakSpec) []string { return v.Extensions }).(pulumi.StringArrayOutput)
}

// Controls external Ingress/Route settings.
func (o KeycloakSpecOutput) ExternalAccess() KeycloakSpecExternalAccessPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpecExternalAccess { return v.ExternalAccess }).(KeycloakSpecExternalAccessPtrOutput)
}

// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
//  For more information, please refer to the Operator documentation.
func (o KeycloakSpecOutput) ExternalDatabase() KeycloakSpecExternalDatabasePtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpecExternalDatabase { return v.ExternalDatabase }).(KeycloakSpecExternalDatabasePtrOutput)
}

// Number of Keycloak instances in HA mode. Default is 1.
func (o KeycloakSpecOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *int { return v.Instances }).(pulumi.IntPtrOutput)
}

// Resources (Requests and Limits) for KeycloakDeployment.
func (o KeycloakSpecOutput) KeycloakDeploymentSpec() KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpecKeycloakDeploymentSpec { return v.KeycloakDeploymentSpec }).(KeycloakSpecKeycloakDeploymentSpecPtrOutput)
}

// Specify Migration configuration
func (o KeycloakSpecOutput) Migration() KeycloakSpecMigrationPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpecMigration { return v.Migration }).(KeycloakSpecMigrationPtrOutput)
}

// Specify PodDisruptionBudget configuration.
func (o KeycloakSpecOutput) PodDisruptionBudget() KeycloakSpecPodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpecPodDisruptionBudget { return v.PodDisruptionBudget }).(KeycloakSpecPodDisruptionBudgetPtrOutput)
}

// Resources (Requests and Limits) for PostgresDeployment.
func (o KeycloakSpecOutput) PostgresDeploymentSpec() KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *KeycloakSpecPostgresDeploymentSpec { return v.PostgresDeploymentSpec }).(KeycloakSpecPostgresDeploymentSpecPtrOutput)
}

// Profile used for controlling Operator behavior. Default is empty.
func (o KeycloakSpecOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

// Name of the StorageClass for Postgresql Persistent Volume Claim
func (o KeycloakSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakSpec) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

type KeycloakSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpec)(nil)).Elem()
}

func (o KeycloakSpecPtrOutput) ToKeycloakSpecPtrOutput() KeycloakSpecPtrOutput {
	return o
}

func (o KeycloakSpecPtrOutput) ToKeycloakSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPtrOutput {
	return o
}

func (o KeycloakSpecPtrOutput) Elem() KeycloakSpecOutput {
	return o.ApplyT(func(v *KeycloakSpec) KeycloakSpec { return *v }).(KeycloakSpecOutput)
}

// A list of extensions, where each one is a URL to a JAR files that will be deployed in Keycloak.
func (o KeycloakSpecPtrOutput) Extensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakSpec) []string {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(pulumi.StringArrayOutput)
}

// Controls external Ingress/Route settings.
func (o KeycloakSpecPtrOutput) ExternalAccess() KeycloakSpecExternalAccessPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *KeycloakSpecExternalAccess {
		if v == nil {
			return nil
		}
		return v.ExternalAccess
	}).(KeycloakSpecExternalAccessPtrOutput)
}

// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
//  For more information, please refer to the Operator documentation.
func (o KeycloakSpecPtrOutput) ExternalDatabase() KeycloakSpecExternalDatabasePtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *KeycloakSpecExternalDatabase {
		if v == nil {
			return nil
		}
		return v.ExternalDatabase
	}).(KeycloakSpecExternalDatabasePtrOutput)
}

// Number of Keycloak instances in HA mode. Default is 1.
func (o KeycloakSpecPtrOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *int {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.IntPtrOutput)
}

// Resources (Requests and Limits) for KeycloakDeployment.
func (o KeycloakSpecPtrOutput) KeycloakDeploymentSpec() KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *KeycloakSpecKeycloakDeploymentSpec {
		if v == nil {
			return nil
		}
		return v.KeycloakDeploymentSpec
	}).(KeycloakSpecKeycloakDeploymentSpecPtrOutput)
}

// Specify Migration configuration
func (o KeycloakSpecPtrOutput) Migration() KeycloakSpecMigrationPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *KeycloakSpecMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(KeycloakSpecMigrationPtrOutput)
}

// Specify PodDisruptionBudget configuration.
func (o KeycloakSpecPtrOutput) PodDisruptionBudget() KeycloakSpecPodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *KeycloakSpecPodDisruptionBudget {
		if v == nil {
			return nil
		}
		return v.PodDisruptionBudget
	}).(KeycloakSpecPodDisruptionBudgetPtrOutput)
}

// Resources (Requests and Limits) for PostgresDeployment.
func (o KeycloakSpecPtrOutput) PostgresDeploymentSpec() KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *KeycloakSpecPostgresDeploymentSpec {
		if v == nil {
			return nil
		}
		return v.PostgresDeploymentSpec
	}).(KeycloakSpecPostgresDeploymentSpecPtrOutput)
}

// Profile used for controlling Operator behavior. Default is empty.
func (o KeycloakSpecPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// Name of the StorageClass for Postgresql Persistent Volume Claim
func (o KeycloakSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// Controls external Ingress/Route settings.
type KeycloakSpecExternalAccess struct {
	// If set to true, the Operator will create an Ingress or a Route pointing to Keycloak.
	Enabled *bool `pulumi:"enabled"`
	// TLS Termination type for the external access. Setting this field to "reencrypt" will terminate TLS on the Ingress/Route level. Setting this field to "passthrough" will send encrypted traffic to the Pod. If unspecified, defaults to "reencrypt". Note, that this setting has no effect on Ingress as Ingress TLS settings are not reconciled by this operator. In other words, Ingress TLS configuration is the same in both cases and it is up to the user to configure TLS section of the Ingress.
	TlsTermination *string `pulumi:"tlsTermination"`
}

// KeycloakSpecExternalAccessInput is an input type that accepts KeycloakSpecExternalAccessArgs and KeycloakSpecExternalAccessOutput values.
// You can construct a concrete instance of `KeycloakSpecExternalAccessInput` via:
//
//          KeycloakSpecExternalAccessArgs{...}
type KeycloakSpecExternalAccessInput interface {
	pulumi.Input

	ToKeycloakSpecExternalAccessOutput() KeycloakSpecExternalAccessOutput
	ToKeycloakSpecExternalAccessOutputWithContext(context.Context) KeycloakSpecExternalAccessOutput
}

// Controls external Ingress/Route settings.
type KeycloakSpecExternalAccessArgs struct {
	// If set to true, the Operator will create an Ingress or a Route pointing to Keycloak.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// TLS Termination type for the external access. Setting this field to "reencrypt" will terminate TLS on the Ingress/Route level. Setting this field to "passthrough" will send encrypted traffic to the Pod. If unspecified, defaults to "reencrypt". Note, that this setting has no effect on Ingress as Ingress TLS settings are not reconciled by this operator. In other words, Ingress TLS configuration is the same in both cases and it is up to the user to configure TLS section of the Ingress.
	TlsTermination pulumi.StringPtrInput `pulumi:"tlsTermination"`
}

func (KeycloakSpecExternalAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecExternalAccess)(nil)).Elem()
}

func (i KeycloakSpecExternalAccessArgs) ToKeycloakSpecExternalAccessOutput() KeycloakSpecExternalAccessOutput {
	return i.ToKeycloakSpecExternalAccessOutputWithContext(context.Background())
}

func (i KeycloakSpecExternalAccessArgs) ToKeycloakSpecExternalAccessOutputWithContext(ctx context.Context) KeycloakSpecExternalAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecExternalAccessOutput)
}

func (i KeycloakSpecExternalAccessArgs) ToKeycloakSpecExternalAccessPtrOutput() KeycloakSpecExternalAccessPtrOutput {
	return i.ToKeycloakSpecExternalAccessPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecExternalAccessArgs) ToKeycloakSpecExternalAccessPtrOutputWithContext(ctx context.Context) KeycloakSpecExternalAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecExternalAccessOutput).ToKeycloakSpecExternalAccessPtrOutputWithContext(ctx)
}

// KeycloakSpecExternalAccessPtrInput is an input type that accepts KeycloakSpecExternalAccessArgs, KeycloakSpecExternalAccessPtr and KeycloakSpecExternalAccessPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecExternalAccessPtrInput` via:
//
//          KeycloakSpecExternalAccessArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecExternalAccessPtrInput interface {
	pulumi.Input

	ToKeycloakSpecExternalAccessPtrOutput() KeycloakSpecExternalAccessPtrOutput
	ToKeycloakSpecExternalAccessPtrOutputWithContext(context.Context) KeycloakSpecExternalAccessPtrOutput
}

type keycloakSpecExternalAccessPtrType KeycloakSpecExternalAccessArgs

func KeycloakSpecExternalAccessPtr(v *KeycloakSpecExternalAccessArgs) KeycloakSpecExternalAccessPtrInput {
	return (*keycloakSpecExternalAccessPtrType)(v)
}

func (*keycloakSpecExternalAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecExternalAccess)(nil)).Elem()
}

func (i *keycloakSpecExternalAccessPtrType) ToKeycloakSpecExternalAccessPtrOutput() KeycloakSpecExternalAccessPtrOutput {
	return i.ToKeycloakSpecExternalAccessPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecExternalAccessPtrType) ToKeycloakSpecExternalAccessPtrOutputWithContext(ctx context.Context) KeycloakSpecExternalAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecExternalAccessPtrOutput)
}

// Controls external Ingress/Route settings.
type KeycloakSpecExternalAccessOutput struct{ *pulumi.OutputState }

func (KeycloakSpecExternalAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecExternalAccess)(nil)).Elem()
}

func (o KeycloakSpecExternalAccessOutput) ToKeycloakSpecExternalAccessOutput() KeycloakSpecExternalAccessOutput {
	return o
}

func (o KeycloakSpecExternalAccessOutput) ToKeycloakSpecExternalAccessOutputWithContext(ctx context.Context) KeycloakSpecExternalAccessOutput {
	return o
}

func (o KeycloakSpecExternalAccessOutput) ToKeycloakSpecExternalAccessPtrOutput() KeycloakSpecExternalAccessPtrOutput {
	return o.ToKeycloakSpecExternalAccessPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecExternalAccessOutput) ToKeycloakSpecExternalAccessPtrOutputWithContext(ctx context.Context) KeycloakSpecExternalAccessPtrOutput {
	return o.ApplyT(func(v KeycloakSpecExternalAccess) *KeycloakSpecExternalAccess {
		return &v
	}).(KeycloakSpecExternalAccessPtrOutput)
}

// If set to true, the Operator will create an Ingress or a Route pointing to Keycloak.
func (o KeycloakSpecExternalAccessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakSpecExternalAccess) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// TLS Termination type for the external access. Setting this field to "reencrypt" will terminate TLS on the Ingress/Route level. Setting this field to "passthrough" will send encrypted traffic to the Pod. If unspecified, defaults to "reencrypt". Note, that this setting has no effect on Ingress as Ingress TLS settings are not reconciled by this operator. In other words, Ingress TLS configuration is the same in both cases and it is up to the user to configure TLS section of the Ingress.
func (o KeycloakSpecExternalAccessOutput) TlsTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakSpecExternalAccess) *string { return v.TlsTermination }).(pulumi.StringPtrOutput)
}

type KeycloakSpecExternalAccessPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecExternalAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecExternalAccess)(nil)).Elem()
}

func (o KeycloakSpecExternalAccessPtrOutput) ToKeycloakSpecExternalAccessPtrOutput() KeycloakSpecExternalAccessPtrOutput {
	return o
}

func (o KeycloakSpecExternalAccessPtrOutput) ToKeycloakSpecExternalAccessPtrOutputWithContext(ctx context.Context) KeycloakSpecExternalAccessPtrOutput {
	return o
}

func (o KeycloakSpecExternalAccessPtrOutput) Elem() KeycloakSpecExternalAccessOutput {
	return o.ApplyT(func(v *KeycloakSpecExternalAccess) KeycloakSpecExternalAccess { return *v }).(KeycloakSpecExternalAccessOutput)
}

// If set to true, the Operator will create an Ingress or a Route pointing to Keycloak.
func (o KeycloakSpecExternalAccessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecExternalAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// TLS Termination type for the external access. Setting this field to "reencrypt" will terminate TLS on the Ingress/Route level. Setting this field to "passthrough" will send encrypted traffic to the Pod. If unspecified, defaults to "reencrypt". Note, that this setting has no effect on Ingress as Ingress TLS settings are not reconciled by this operator. In other words, Ingress TLS configuration is the same in both cases and it is up to the user to configure TLS section of the Ingress.
func (o KeycloakSpecExternalAccessPtrOutput) TlsTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecExternalAccess) *string {
		if v == nil {
			return nil
		}
		return v.TlsTermination
	}).(pulumi.StringPtrOutput)
}

// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
//  For more information, please refer to the Operator documentation.
type KeycloakSpecExternalDatabase struct {
	// If set to true, the Operator will use an external database. pointing to Keycloak.
	Enabled *bool `pulumi:"enabled"`
}

// KeycloakSpecExternalDatabaseInput is an input type that accepts KeycloakSpecExternalDatabaseArgs and KeycloakSpecExternalDatabaseOutput values.
// You can construct a concrete instance of `KeycloakSpecExternalDatabaseInput` via:
//
//          KeycloakSpecExternalDatabaseArgs{...}
type KeycloakSpecExternalDatabaseInput interface {
	pulumi.Input

	ToKeycloakSpecExternalDatabaseOutput() KeycloakSpecExternalDatabaseOutput
	ToKeycloakSpecExternalDatabaseOutputWithContext(context.Context) KeycloakSpecExternalDatabaseOutput
}

// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
//  For more information, please refer to the Operator documentation.
type KeycloakSpecExternalDatabaseArgs struct {
	// If set to true, the Operator will use an external database. pointing to Keycloak.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (KeycloakSpecExternalDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecExternalDatabase)(nil)).Elem()
}

func (i KeycloakSpecExternalDatabaseArgs) ToKeycloakSpecExternalDatabaseOutput() KeycloakSpecExternalDatabaseOutput {
	return i.ToKeycloakSpecExternalDatabaseOutputWithContext(context.Background())
}

func (i KeycloakSpecExternalDatabaseArgs) ToKeycloakSpecExternalDatabaseOutputWithContext(ctx context.Context) KeycloakSpecExternalDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecExternalDatabaseOutput)
}

func (i KeycloakSpecExternalDatabaseArgs) ToKeycloakSpecExternalDatabasePtrOutput() KeycloakSpecExternalDatabasePtrOutput {
	return i.ToKeycloakSpecExternalDatabasePtrOutputWithContext(context.Background())
}

func (i KeycloakSpecExternalDatabaseArgs) ToKeycloakSpecExternalDatabasePtrOutputWithContext(ctx context.Context) KeycloakSpecExternalDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecExternalDatabaseOutput).ToKeycloakSpecExternalDatabasePtrOutputWithContext(ctx)
}

// KeycloakSpecExternalDatabasePtrInput is an input type that accepts KeycloakSpecExternalDatabaseArgs, KeycloakSpecExternalDatabasePtr and KeycloakSpecExternalDatabasePtrOutput values.
// You can construct a concrete instance of `KeycloakSpecExternalDatabasePtrInput` via:
//
//          KeycloakSpecExternalDatabaseArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecExternalDatabasePtrInput interface {
	pulumi.Input

	ToKeycloakSpecExternalDatabasePtrOutput() KeycloakSpecExternalDatabasePtrOutput
	ToKeycloakSpecExternalDatabasePtrOutputWithContext(context.Context) KeycloakSpecExternalDatabasePtrOutput
}

type keycloakSpecExternalDatabasePtrType KeycloakSpecExternalDatabaseArgs

func KeycloakSpecExternalDatabasePtr(v *KeycloakSpecExternalDatabaseArgs) KeycloakSpecExternalDatabasePtrInput {
	return (*keycloakSpecExternalDatabasePtrType)(v)
}

func (*keycloakSpecExternalDatabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecExternalDatabase)(nil)).Elem()
}

func (i *keycloakSpecExternalDatabasePtrType) ToKeycloakSpecExternalDatabasePtrOutput() KeycloakSpecExternalDatabasePtrOutput {
	return i.ToKeycloakSpecExternalDatabasePtrOutputWithContext(context.Background())
}

func (i *keycloakSpecExternalDatabasePtrType) ToKeycloakSpecExternalDatabasePtrOutputWithContext(ctx context.Context) KeycloakSpecExternalDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecExternalDatabasePtrOutput)
}

// Controls external database settings. Using an external database requires providing a secret containing credentials as well as connection details. Here's an example of such secret:
//      apiVersion: v1     kind: Secret     metadata:         name: keycloak-db-secret         namespace: keycloak     stringData:         POSTGRES_DATABASE: <Database Name>         POSTGRES_EXTERNAL_ADDRESS: <External Database IP or URL (resolvable by K8s)>         POSTGRES_EXTERNAL_PORT: <External Database Port>         # Strongly recommended to use <'Keycloak CR Name'-postgresql>         POSTGRES_HOST: <Database Service Name>         POSTGRES_PASSWORD: <Database Password>         # Required for AWS Backup functionality         POSTGRES_SUPERUSER: true         POSTGRES_USERNAME: <Database Username>      type: Opaque
//  Both POSTGRES_EXTERNAL_ADDRESS and POSTGRES_EXTERNAL_PORT are specifically required for creating connection to the external database. The secret name is created using the following convention:       <Custom Resource Name>-db-secret
//  For more information, please refer to the Operator documentation.
type KeycloakSpecExternalDatabaseOutput struct{ *pulumi.OutputState }

func (KeycloakSpecExternalDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecExternalDatabase)(nil)).Elem()
}

func (o KeycloakSpecExternalDatabaseOutput) ToKeycloakSpecExternalDatabaseOutput() KeycloakSpecExternalDatabaseOutput {
	return o
}

func (o KeycloakSpecExternalDatabaseOutput) ToKeycloakSpecExternalDatabaseOutputWithContext(ctx context.Context) KeycloakSpecExternalDatabaseOutput {
	return o
}

func (o KeycloakSpecExternalDatabaseOutput) ToKeycloakSpecExternalDatabasePtrOutput() KeycloakSpecExternalDatabasePtrOutput {
	return o.ToKeycloakSpecExternalDatabasePtrOutputWithContext(context.Background())
}

func (o KeycloakSpecExternalDatabaseOutput) ToKeycloakSpecExternalDatabasePtrOutputWithContext(ctx context.Context) KeycloakSpecExternalDatabasePtrOutput {
	return o.ApplyT(func(v KeycloakSpecExternalDatabase) *KeycloakSpecExternalDatabase {
		return &v
	}).(KeycloakSpecExternalDatabasePtrOutput)
}

// If set to true, the Operator will use an external database. pointing to Keycloak.
func (o KeycloakSpecExternalDatabaseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakSpecExternalDatabase) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type KeycloakSpecExternalDatabasePtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecExternalDatabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecExternalDatabase)(nil)).Elem()
}

func (o KeycloakSpecExternalDatabasePtrOutput) ToKeycloakSpecExternalDatabasePtrOutput() KeycloakSpecExternalDatabasePtrOutput {
	return o
}

func (o KeycloakSpecExternalDatabasePtrOutput) ToKeycloakSpecExternalDatabasePtrOutputWithContext(ctx context.Context) KeycloakSpecExternalDatabasePtrOutput {
	return o
}

func (o KeycloakSpecExternalDatabasePtrOutput) Elem() KeycloakSpecExternalDatabaseOutput {
	return o.ApplyT(func(v *KeycloakSpecExternalDatabase) KeycloakSpecExternalDatabase { return *v }).(KeycloakSpecExternalDatabaseOutput)
}

// If set to true, the Operator will use an external database. pointing to Keycloak.
func (o KeycloakSpecExternalDatabasePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecExternalDatabase) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Resources (Requests and Limits) for KeycloakDeployment.
type KeycloakSpecKeycloakDeploymentSpec struct {
	// Resources (Requests and Limits) for the Pods.
	Resources *KeycloakSpecKeycloakDeploymentSpecResources `pulumi:"resources"`
}

// KeycloakSpecKeycloakDeploymentSpecInput is an input type that accepts KeycloakSpecKeycloakDeploymentSpecArgs and KeycloakSpecKeycloakDeploymentSpecOutput values.
// You can construct a concrete instance of `KeycloakSpecKeycloakDeploymentSpecInput` via:
//
//          KeycloakSpecKeycloakDeploymentSpecArgs{...}
type KeycloakSpecKeycloakDeploymentSpecInput interface {
	pulumi.Input

	ToKeycloakSpecKeycloakDeploymentSpecOutput() KeycloakSpecKeycloakDeploymentSpecOutput
	ToKeycloakSpecKeycloakDeploymentSpecOutputWithContext(context.Context) KeycloakSpecKeycloakDeploymentSpecOutput
}

// Resources (Requests and Limits) for KeycloakDeployment.
type KeycloakSpecKeycloakDeploymentSpecArgs struct {
	// Resources (Requests and Limits) for the Pods.
	Resources KeycloakSpecKeycloakDeploymentSpecResourcesPtrInput `pulumi:"resources"`
}

func (KeycloakSpecKeycloakDeploymentSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpec)(nil)).Elem()
}

func (i KeycloakSpecKeycloakDeploymentSpecArgs) ToKeycloakSpecKeycloakDeploymentSpecOutput() KeycloakSpecKeycloakDeploymentSpecOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecOutputWithContext(context.Background())
}

func (i KeycloakSpecKeycloakDeploymentSpecArgs) ToKeycloakSpecKeycloakDeploymentSpecOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecOutput)
}

func (i KeycloakSpecKeycloakDeploymentSpecArgs) ToKeycloakSpecKeycloakDeploymentSpecPtrOutput() KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecKeycloakDeploymentSpecArgs) ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecOutput).ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(ctx)
}

// KeycloakSpecKeycloakDeploymentSpecPtrInput is an input type that accepts KeycloakSpecKeycloakDeploymentSpecArgs, KeycloakSpecKeycloakDeploymentSpecPtr and KeycloakSpecKeycloakDeploymentSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecKeycloakDeploymentSpecPtrInput` via:
//
//          KeycloakSpecKeycloakDeploymentSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecKeycloakDeploymentSpecPtrInput interface {
	pulumi.Input

	ToKeycloakSpecKeycloakDeploymentSpecPtrOutput() KeycloakSpecKeycloakDeploymentSpecPtrOutput
	ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(context.Context) KeycloakSpecKeycloakDeploymentSpecPtrOutput
}

type keycloakSpecKeycloakDeploymentSpecPtrType KeycloakSpecKeycloakDeploymentSpecArgs

func KeycloakSpecKeycloakDeploymentSpecPtr(v *KeycloakSpecKeycloakDeploymentSpecArgs) KeycloakSpecKeycloakDeploymentSpecPtrInput {
	return (*keycloakSpecKeycloakDeploymentSpecPtrType)(v)
}

func (*keycloakSpecKeycloakDeploymentSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecKeycloakDeploymentSpec)(nil)).Elem()
}

func (i *keycloakSpecKeycloakDeploymentSpecPtrType) ToKeycloakSpecKeycloakDeploymentSpecPtrOutput() KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecKeycloakDeploymentSpecPtrType) ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecPtrOutput)
}

// Resources (Requests and Limits) for KeycloakDeployment.
type KeycloakSpecKeycloakDeploymentSpecOutput struct{ *pulumi.OutputState }

func (KeycloakSpecKeycloakDeploymentSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpec)(nil)).Elem()
}

func (o KeycloakSpecKeycloakDeploymentSpecOutput) ToKeycloakSpecKeycloakDeploymentSpecOutput() KeycloakSpecKeycloakDeploymentSpecOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecOutput) ToKeycloakSpecKeycloakDeploymentSpecOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecOutput) ToKeycloakSpecKeycloakDeploymentSpecPtrOutput() KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return o.ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecKeycloakDeploymentSpecOutput) ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return o.ApplyT(func(v KeycloakSpecKeycloakDeploymentSpec) *KeycloakSpecKeycloakDeploymentSpec {
		return &v
	}).(KeycloakSpecKeycloakDeploymentSpecPtrOutput)
}

// Resources (Requests and Limits) for the Pods.
func (o KeycloakSpecKeycloakDeploymentSpecOutput) Resources() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return o.ApplyT(func(v KeycloakSpecKeycloakDeploymentSpec) *KeycloakSpecKeycloakDeploymentSpecResources {
		return v.Resources
	}).(KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput)
}

type KeycloakSpecKeycloakDeploymentSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecKeycloakDeploymentSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecKeycloakDeploymentSpec)(nil)).Elem()
}

func (o KeycloakSpecKeycloakDeploymentSpecPtrOutput) ToKeycloakSpecKeycloakDeploymentSpecPtrOutput() KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecPtrOutput) ToKeycloakSpecKeycloakDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecPtrOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecPtrOutput) Elem() KeycloakSpecKeycloakDeploymentSpecOutput {
	return o.ApplyT(func(v *KeycloakSpecKeycloakDeploymentSpec) KeycloakSpecKeycloakDeploymentSpec { return *v }).(KeycloakSpecKeycloakDeploymentSpecOutput)
}

// Resources (Requests and Limits) for the Pods.
func (o KeycloakSpecKeycloakDeploymentSpecPtrOutput) Resources() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecKeycloakDeploymentSpec) *KeycloakSpecKeycloakDeploymentSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput)
}

// Resources (Requests and Limits) for the Pods.
type KeycloakSpecKeycloakDeploymentSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]string `pulumi:"requests"`
}

// KeycloakSpecKeycloakDeploymentSpecResourcesInput is an input type that accepts KeycloakSpecKeycloakDeploymentSpecResourcesArgs and KeycloakSpecKeycloakDeploymentSpecResourcesOutput values.
// You can construct a concrete instance of `KeycloakSpecKeycloakDeploymentSpecResourcesInput` via:
//
//          KeycloakSpecKeycloakDeploymentSpecResourcesArgs{...}
type KeycloakSpecKeycloakDeploymentSpecResourcesInput interface {
	pulumi.Input

	ToKeycloakSpecKeycloakDeploymentSpecResourcesOutput() KeycloakSpecKeycloakDeploymentSpecResourcesOutput
	ToKeycloakSpecKeycloakDeploymentSpecResourcesOutputWithContext(context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesOutput
}

// Resources (Requests and Limits) for the Pods.
type KeycloakSpecKeycloakDeploymentSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (KeycloakSpecKeycloakDeploymentSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpecResources)(nil)).Elem()
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesOutput() KeycloakSpecKeycloakDeploymentSpecResourcesOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecResourcesOutputWithContext(context.Background())
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecResourcesOutput)
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecResourcesOutput).ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(ctx)
}

// KeycloakSpecKeycloakDeploymentSpecResourcesPtrInput is an input type that accepts KeycloakSpecKeycloakDeploymentSpecResourcesArgs, KeycloakSpecKeycloakDeploymentSpecResourcesPtr and KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecKeycloakDeploymentSpecResourcesPtrInput` via:
//
//          KeycloakSpecKeycloakDeploymentSpecResourcesArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecKeycloakDeploymentSpecResourcesPtrInput interface {
	pulumi.Input

	ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput
	ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput
}

type keycloakSpecKeycloakDeploymentSpecResourcesPtrType KeycloakSpecKeycloakDeploymentSpecResourcesArgs

func KeycloakSpecKeycloakDeploymentSpecResourcesPtr(v *KeycloakSpecKeycloakDeploymentSpecResourcesArgs) KeycloakSpecKeycloakDeploymentSpecResourcesPtrInput {
	return (*keycloakSpecKeycloakDeploymentSpecResourcesPtrType)(v)
}

func (*keycloakSpecKeycloakDeploymentSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecKeycloakDeploymentSpecResources)(nil)).Elem()
}

func (i *keycloakSpecKeycloakDeploymentSpecResourcesPtrType) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecKeycloakDeploymentSpecResourcesPtrType) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput)
}

// Resources (Requests and Limits) for the Pods.
type KeycloakSpecKeycloakDeploymentSpecResourcesOutput struct{ *pulumi.OutputState }

func (KeycloakSpecKeycloakDeploymentSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpecResources)(nil)).Elem()
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesOutput() KeycloakSpecKeycloakDeploymentSpecResourcesOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return o.ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return o.ApplyT(func(v KeycloakSpecKeycloakDeploymentSpecResources) *KeycloakSpecKeycloakDeploymentSpecResources {
		return &v
	}).(KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecKeycloakDeploymentSpecResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakSpecKeycloakDeploymentSpecResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecKeycloakDeploymentSpecResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakSpecKeycloakDeploymentSpecResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecKeycloakDeploymentSpecResources)(nil)).Elem()
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput() KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput) Elem() KeycloakSpecKeycloakDeploymentSpecResourcesOutput {
	return o.ApplyT(func(v *KeycloakSpecKeycloakDeploymentSpecResources) KeycloakSpecKeycloakDeploymentSpecResources {
		return *v
	}).(KeycloakSpecKeycloakDeploymentSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakSpecKeycloakDeploymentSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakSpecKeycloakDeploymentSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecKeycloakDeploymentSpecResourcesLimits struct {
}

// KeycloakSpecKeycloakDeploymentSpecResourcesLimitsInput is an input type that accepts KeycloakSpecKeycloakDeploymentSpecResourcesLimitsArgs and KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput values.
// You can construct a concrete instance of `KeycloakSpecKeycloakDeploymentSpecResourcesLimitsInput` via:
//
//          KeycloakSpecKeycloakDeploymentSpecResourcesLimitsArgs{...}
type KeycloakSpecKeycloakDeploymentSpecResourcesLimitsInput interface {
	pulumi.Input

	ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput() KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput
	ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutputWithContext(context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecKeycloakDeploymentSpecResourcesLimitsArgs struct {
}

func (KeycloakSpecKeycloakDeploymentSpecResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpecResourcesLimits)(nil)).Elem()
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesLimitsArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput() KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutputWithContext(context.Background())
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesLimitsArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput struct{ *pulumi.OutputState }

func (KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpecResourcesLimits)(nil)).Elem()
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput() KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput {
	return o
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecKeycloakDeploymentSpecResourcesRequests struct {
}

// KeycloakSpecKeycloakDeploymentSpecResourcesRequestsInput is an input type that accepts KeycloakSpecKeycloakDeploymentSpecResourcesRequestsArgs and KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput values.
// You can construct a concrete instance of `KeycloakSpecKeycloakDeploymentSpecResourcesRequestsInput` via:
//
//          KeycloakSpecKeycloakDeploymentSpecResourcesRequestsArgs{...}
type KeycloakSpecKeycloakDeploymentSpecResourcesRequestsInput interface {
	pulumi.Input

	ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput() KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput
	ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutputWithContext(context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecKeycloakDeploymentSpecResourcesRequestsArgs struct {
}

func (KeycloakSpecKeycloakDeploymentSpecResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpecResourcesRequests)(nil)).Elem()
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesRequestsArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput() KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput {
	return i.ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutputWithContext(context.Background())
}

func (i KeycloakSpecKeycloakDeploymentSpecResourcesRequestsArgs) ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput struct{ *pulumi.OutputState }

func (KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecKeycloakDeploymentSpecResourcesRequests)(nil)).Elem()
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput() KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput {
	return o
}

func (o KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput) ToKeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutputWithContext(ctx context.Context) KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput {
	return o
}

// Specify Migration configuration
type KeycloakSpecMigration struct {
	// Set it to config backup policy for migration
	Backups *KeycloakSpecMigrationBackups `pulumi:"backups"`
}

// KeycloakSpecMigrationInput is an input type that accepts KeycloakSpecMigrationArgs and KeycloakSpecMigrationOutput values.
// You can construct a concrete instance of `KeycloakSpecMigrationInput` via:
//
//          KeycloakSpecMigrationArgs{...}
type KeycloakSpecMigrationInput interface {
	pulumi.Input

	ToKeycloakSpecMigrationOutput() KeycloakSpecMigrationOutput
	ToKeycloakSpecMigrationOutputWithContext(context.Context) KeycloakSpecMigrationOutput
}

// Specify Migration configuration
type KeycloakSpecMigrationArgs struct {
	// Set it to config backup policy for migration
	Backups KeycloakSpecMigrationBackupsPtrInput `pulumi:"backups"`
}

func (KeycloakSpecMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecMigration)(nil)).Elem()
}

func (i KeycloakSpecMigrationArgs) ToKeycloakSpecMigrationOutput() KeycloakSpecMigrationOutput {
	return i.ToKeycloakSpecMigrationOutputWithContext(context.Background())
}

func (i KeycloakSpecMigrationArgs) ToKeycloakSpecMigrationOutputWithContext(ctx context.Context) KeycloakSpecMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecMigrationOutput)
}

func (i KeycloakSpecMigrationArgs) ToKeycloakSpecMigrationPtrOutput() KeycloakSpecMigrationPtrOutput {
	return i.ToKeycloakSpecMigrationPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecMigrationArgs) ToKeycloakSpecMigrationPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecMigrationOutput).ToKeycloakSpecMigrationPtrOutputWithContext(ctx)
}

// KeycloakSpecMigrationPtrInput is an input type that accepts KeycloakSpecMigrationArgs, KeycloakSpecMigrationPtr and KeycloakSpecMigrationPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecMigrationPtrInput` via:
//
//          KeycloakSpecMigrationArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecMigrationPtrInput interface {
	pulumi.Input

	ToKeycloakSpecMigrationPtrOutput() KeycloakSpecMigrationPtrOutput
	ToKeycloakSpecMigrationPtrOutputWithContext(context.Context) KeycloakSpecMigrationPtrOutput
}

type keycloakSpecMigrationPtrType KeycloakSpecMigrationArgs

func KeycloakSpecMigrationPtr(v *KeycloakSpecMigrationArgs) KeycloakSpecMigrationPtrInput {
	return (*keycloakSpecMigrationPtrType)(v)
}

func (*keycloakSpecMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecMigration)(nil)).Elem()
}

func (i *keycloakSpecMigrationPtrType) ToKeycloakSpecMigrationPtrOutput() KeycloakSpecMigrationPtrOutput {
	return i.ToKeycloakSpecMigrationPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecMigrationPtrType) ToKeycloakSpecMigrationPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecMigrationPtrOutput)
}

// Specify Migration configuration
type KeycloakSpecMigrationOutput struct{ *pulumi.OutputState }

func (KeycloakSpecMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecMigration)(nil)).Elem()
}

func (o KeycloakSpecMigrationOutput) ToKeycloakSpecMigrationOutput() KeycloakSpecMigrationOutput {
	return o
}

func (o KeycloakSpecMigrationOutput) ToKeycloakSpecMigrationOutputWithContext(ctx context.Context) KeycloakSpecMigrationOutput {
	return o
}

func (o KeycloakSpecMigrationOutput) ToKeycloakSpecMigrationPtrOutput() KeycloakSpecMigrationPtrOutput {
	return o.ToKeycloakSpecMigrationPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecMigrationOutput) ToKeycloakSpecMigrationPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationPtrOutput {
	return o.ApplyT(func(v KeycloakSpecMigration) *KeycloakSpecMigration {
		return &v
	}).(KeycloakSpecMigrationPtrOutput)
}

// Set it to config backup policy for migration
func (o KeycloakSpecMigrationOutput) Backups() KeycloakSpecMigrationBackupsPtrOutput {
	return o.ApplyT(func(v KeycloakSpecMigration) *KeycloakSpecMigrationBackups { return v.Backups }).(KeycloakSpecMigrationBackupsPtrOutput)
}

type KeycloakSpecMigrationPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecMigration)(nil)).Elem()
}

func (o KeycloakSpecMigrationPtrOutput) ToKeycloakSpecMigrationPtrOutput() KeycloakSpecMigrationPtrOutput {
	return o
}

func (o KeycloakSpecMigrationPtrOutput) ToKeycloakSpecMigrationPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationPtrOutput {
	return o
}

func (o KeycloakSpecMigrationPtrOutput) Elem() KeycloakSpecMigrationOutput {
	return o.ApplyT(func(v *KeycloakSpecMigration) KeycloakSpecMigration { return *v }).(KeycloakSpecMigrationOutput)
}

// Set it to config backup policy for migration
func (o KeycloakSpecMigrationPtrOutput) Backups() KeycloakSpecMigrationBackupsPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecMigration) *KeycloakSpecMigrationBackups {
		if v == nil {
			return nil
		}
		return v.Backups
	}).(KeycloakSpecMigrationBackupsPtrOutput)
}

// Set it to config backup policy for migration
type KeycloakSpecMigrationBackups struct {
	// If set to true, the operator will do database backup before doing migration
	Enabled *bool `pulumi:"enabled"`
}

// KeycloakSpecMigrationBackupsInput is an input type that accepts KeycloakSpecMigrationBackupsArgs and KeycloakSpecMigrationBackupsOutput values.
// You can construct a concrete instance of `KeycloakSpecMigrationBackupsInput` via:
//
//          KeycloakSpecMigrationBackupsArgs{...}
type KeycloakSpecMigrationBackupsInput interface {
	pulumi.Input

	ToKeycloakSpecMigrationBackupsOutput() KeycloakSpecMigrationBackupsOutput
	ToKeycloakSpecMigrationBackupsOutputWithContext(context.Context) KeycloakSpecMigrationBackupsOutput
}

// Set it to config backup policy for migration
type KeycloakSpecMigrationBackupsArgs struct {
	// If set to true, the operator will do database backup before doing migration
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (KeycloakSpecMigrationBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecMigrationBackups)(nil)).Elem()
}

func (i KeycloakSpecMigrationBackupsArgs) ToKeycloakSpecMigrationBackupsOutput() KeycloakSpecMigrationBackupsOutput {
	return i.ToKeycloakSpecMigrationBackupsOutputWithContext(context.Background())
}

func (i KeycloakSpecMigrationBackupsArgs) ToKeycloakSpecMigrationBackupsOutputWithContext(ctx context.Context) KeycloakSpecMigrationBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecMigrationBackupsOutput)
}

func (i KeycloakSpecMigrationBackupsArgs) ToKeycloakSpecMigrationBackupsPtrOutput() KeycloakSpecMigrationBackupsPtrOutput {
	return i.ToKeycloakSpecMigrationBackupsPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecMigrationBackupsArgs) ToKeycloakSpecMigrationBackupsPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecMigrationBackupsOutput).ToKeycloakSpecMigrationBackupsPtrOutputWithContext(ctx)
}

// KeycloakSpecMigrationBackupsPtrInput is an input type that accepts KeycloakSpecMigrationBackupsArgs, KeycloakSpecMigrationBackupsPtr and KeycloakSpecMigrationBackupsPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecMigrationBackupsPtrInput` via:
//
//          KeycloakSpecMigrationBackupsArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecMigrationBackupsPtrInput interface {
	pulumi.Input

	ToKeycloakSpecMigrationBackupsPtrOutput() KeycloakSpecMigrationBackupsPtrOutput
	ToKeycloakSpecMigrationBackupsPtrOutputWithContext(context.Context) KeycloakSpecMigrationBackupsPtrOutput
}

type keycloakSpecMigrationBackupsPtrType KeycloakSpecMigrationBackupsArgs

func KeycloakSpecMigrationBackupsPtr(v *KeycloakSpecMigrationBackupsArgs) KeycloakSpecMigrationBackupsPtrInput {
	return (*keycloakSpecMigrationBackupsPtrType)(v)
}

func (*keycloakSpecMigrationBackupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecMigrationBackups)(nil)).Elem()
}

func (i *keycloakSpecMigrationBackupsPtrType) ToKeycloakSpecMigrationBackupsPtrOutput() KeycloakSpecMigrationBackupsPtrOutput {
	return i.ToKeycloakSpecMigrationBackupsPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecMigrationBackupsPtrType) ToKeycloakSpecMigrationBackupsPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecMigrationBackupsPtrOutput)
}

// Set it to config backup policy for migration
type KeycloakSpecMigrationBackupsOutput struct{ *pulumi.OutputState }

func (KeycloakSpecMigrationBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecMigrationBackups)(nil)).Elem()
}

func (o KeycloakSpecMigrationBackupsOutput) ToKeycloakSpecMigrationBackupsOutput() KeycloakSpecMigrationBackupsOutput {
	return o
}

func (o KeycloakSpecMigrationBackupsOutput) ToKeycloakSpecMigrationBackupsOutputWithContext(ctx context.Context) KeycloakSpecMigrationBackupsOutput {
	return o
}

func (o KeycloakSpecMigrationBackupsOutput) ToKeycloakSpecMigrationBackupsPtrOutput() KeycloakSpecMigrationBackupsPtrOutput {
	return o.ToKeycloakSpecMigrationBackupsPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecMigrationBackupsOutput) ToKeycloakSpecMigrationBackupsPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationBackupsPtrOutput {
	return o.ApplyT(func(v KeycloakSpecMigrationBackups) *KeycloakSpecMigrationBackups {
		return &v
	}).(KeycloakSpecMigrationBackupsPtrOutput)
}

// If set to true, the operator will do database backup before doing migration
func (o KeycloakSpecMigrationBackupsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakSpecMigrationBackups) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type KeycloakSpecMigrationBackupsPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecMigrationBackupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecMigrationBackups)(nil)).Elem()
}

func (o KeycloakSpecMigrationBackupsPtrOutput) ToKeycloakSpecMigrationBackupsPtrOutput() KeycloakSpecMigrationBackupsPtrOutput {
	return o
}

func (o KeycloakSpecMigrationBackupsPtrOutput) ToKeycloakSpecMigrationBackupsPtrOutputWithContext(ctx context.Context) KeycloakSpecMigrationBackupsPtrOutput {
	return o
}

func (o KeycloakSpecMigrationBackupsPtrOutput) Elem() KeycloakSpecMigrationBackupsOutput {
	return o.ApplyT(func(v *KeycloakSpecMigrationBackups) KeycloakSpecMigrationBackups { return *v }).(KeycloakSpecMigrationBackupsOutput)
}

// If set to true, the operator will do database backup before doing migration
func (o KeycloakSpecMigrationBackupsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecMigrationBackups) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify PodDisruptionBudget configuration.
type KeycloakSpecPodDisruptionBudget struct {
	// If set to true, the operator will create a PodDistruptionBudget for the Keycloak deployment and set its `maxUnavailable` value to 1.
	Enabled *bool `pulumi:"enabled"`
}

// KeycloakSpecPodDisruptionBudgetInput is an input type that accepts KeycloakSpecPodDisruptionBudgetArgs and KeycloakSpecPodDisruptionBudgetOutput values.
// You can construct a concrete instance of `KeycloakSpecPodDisruptionBudgetInput` via:
//
//          KeycloakSpecPodDisruptionBudgetArgs{...}
type KeycloakSpecPodDisruptionBudgetInput interface {
	pulumi.Input

	ToKeycloakSpecPodDisruptionBudgetOutput() KeycloakSpecPodDisruptionBudgetOutput
	ToKeycloakSpecPodDisruptionBudgetOutputWithContext(context.Context) KeycloakSpecPodDisruptionBudgetOutput
}

// Specify PodDisruptionBudget configuration.
type KeycloakSpecPodDisruptionBudgetArgs struct {
	// If set to true, the operator will create a PodDistruptionBudget for the Keycloak deployment and set its `maxUnavailable` value to 1.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (KeycloakSpecPodDisruptionBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPodDisruptionBudget)(nil)).Elem()
}

func (i KeycloakSpecPodDisruptionBudgetArgs) ToKeycloakSpecPodDisruptionBudgetOutput() KeycloakSpecPodDisruptionBudgetOutput {
	return i.ToKeycloakSpecPodDisruptionBudgetOutputWithContext(context.Background())
}

func (i KeycloakSpecPodDisruptionBudgetArgs) ToKeycloakSpecPodDisruptionBudgetOutputWithContext(ctx context.Context) KeycloakSpecPodDisruptionBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPodDisruptionBudgetOutput)
}

func (i KeycloakSpecPodDisruptionBudgetArgs) ToKeycloakSpecPodDisruptionBudgetPtrOutput() KeycloakSpecPodDisruptionBudgetPtrOutput {
	return i.ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecPodDisruptionBudgetArgs) ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KeycloakSpecPodDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPodDisruptionBudgetOutput).ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(ctx)
}

// KeycloakSpecPodDisruptionBudgetPtrInput is an input type that accepts KeycloakSpecPodDisruptionBudgetArgs, KeycloakSpecPodDisruptionBudgetPtr and KeycloakSpecPodDisruptionBudgetPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecPodDisruptionBudgetPtrInput` via:
//
//          KeycloakSpecPodDisruptionBudgetArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecPodDisruptionBudgetPtrInput interface {
	pulumi.Input

	ToKeycloakSpecPodDisruptionBudgetPtrOutput() KeycloakSpecPodDisruptionBudgetPtrOutput
	ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(context.Context) KeycloakSpecPodDisruptionBudgetPtrOutput
}

type keycloakSpecPodDisruptionBudgetPtrType KeycloakSpecPodDisruptionBudgetArgs

func KeycloakSpecPodDisruptionBudgetPtr(v *KeycloakSpecPodDisruptionBudgetArgs) KeycloakSpecPodDisruptionBudgetPtrInput {
	return (*keycloakSpecPodDisruptionBudgetPtrType)(v)
}

func (*keycloakSpecPodDisruptionBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecPodDisruptionBudget)(nil)).Elem()
}

func (i *keycloakSpecPodDisruptionBudgetPtrType) ToKeycloakSpecPodDisruptionBudgetPtrOutput() KeycloakSpecPodDisruptionBudgetPtrOutput {
	return i.ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecPodDisruptionBudgetPtrType) ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KeycloakSpecPodDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPodDisruptionBudgetPtrOutput)
}

// Specify PodDisruptionBudget configuration.
type KeycloakSpecPodDisruptionBudgetOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPodDisruptionBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPodDisruptionBudget)(nil)).Elem()
}

func (o KeycloakSpecPodDisruptionBudgetOutput) ToKeycloakSpecPodDisruptionBudgetOutput() KeycloakSpecPodDisruptionBudgetOutput {
	return o
}

func (o KeycloakSpecPodDisruptionBudgetOutput) ToKeycloakSpecPodDisruptionBudgetOutputWithContext(ctx context.Context) KeycloakSpecPodDisruptionBudgetOutput {
	return o
}

func (o KeycloakSpecPodDisruptionBudgetOutput) ToKeycloakSpecPodDisruptionBudgetPtrOutput() KeycloakSpecPodDisruptionBudgetPtrOutput {
	return o.ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecPodDisruptionBudgetOutput) ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KeycloakSpecPodDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v KeycloakSpecPodDisruptionBudget) *KeycloakSpecPodDisruptionBudget {
		return &v
	}).(KeycloakSpecPodDisruptionBudgetPtrOutput)
}

// If set to true, the operator will create a PodDistruptionBudget for the Keycloak deployment and set its `maxUnavailable` value to 1.
func (o KeycloakSpecPodDisruptionBudgetOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakSpecPodDisruptionBudget) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type KeycloakSpecPodDisruptionBudgetPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPodDisruptionBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecPodDisruptionBudget)(nil)).Elem()
}

func (o KeycloakSpecPodDisruptionBudgetPtrOutput) ToKeycloakSpecPodDisruptionBudgetPtrOutput() KeycloakSpecPodDisruptionBudgetPtrOutput {
	return o
}

func (o KeycloakSpecPodDisruptionBudgetPtrOutput) ToKeycloakSpecPodDisruptionBudgetPtrOutputWithContext(ctx context.Context) KeycloakSpecPodDisruptionBudgetPtrOutput {
	return o
}

func (o KeycloakSpecPodDisruptionBudgetPtrOutput) Elem() KeycloakSpecPodDisruptionBudgetOutput {
	return o.ApplyT(func(v *KeycloakSpecPodDisruptionBudget) KeycloakSpecPodDisruptionBudget { return *v }).(KeycloakSpecPodDisruptionBudgetOutput)
}

// If set to true, the operator will create a PodDistruptionBudget for the Keycloak deployment and set its `maxUnavailable` value to 1.
func (o KeycloakSpecPodDisruptionBudgetPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecPodDisruptionBudget) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Resources (Requests and Limits) for PostgresDeployment.
type KeycloakSpecPostgresDeploymentSpec struct {
	// Resources (Requests and Limits) for the Pods.
	Resources *KeycloakSpecPostgresDeploymentSpecResources `pulumi:"resources"`
}

// KeycloakSpecPostgresDeploymentSpecInput is an input type that accepts KeycloakSpecPostgresDeploymentSpecArgs and KeycloakSpecPostgresDeploymentSpecOutput values.
// You can construct a concrete instance of `KeycloakSpecPostgresDeploymentSpecInput` via:
//
//          KeycloakSpecPostgresDeploymentSpecArgs{...}
type KeycloakSpecPostgresDeploymentSpecInput interface {
	pulumi.Input

	ToKeycloakSpecPostgresDeploymentSpecOutput() KeycloakSpecPostgresDeploymentSpecOutput
	ToKeycloakSpecPostgresDeploymentSpecOutputWithContext(context.Context) KeycloakSpecPostgresDeploymentSpecOutput
}

// Resources (Requests and Limits) for PostgresDeployment.
type KeycloakSpecPostgresDeploymentSpecArgs struct {
	// Resources (Requests and Limits) for the Pods.
	Resources KeycloakSpecPostgresDeploymentSpecResourcesPtrInput `pulumi:"resources"`
}

func (KeycloakSpecPostgresDeploymentSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpec)(nil)).Elem()
}

func (i KeycloakSpecPostgresDeploymentSpecArgs) ToKeycloakSpecPostgresDeploymentSpecOutput() KeycloakSpecPostgresDeploymentSpecOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecOutputWithContext(context.Background())
}

func (i KeycloakSpecPostgresDeploymentSpecArgs) ToKeycloakSpecPostgresDeploymentSpecOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecOutput)
}

func (i KeycloakSpecPostgresDeploymentSpecArgs) ToKeycloakSpecPostgresDeploymentSpecPtrOutput() KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecPostgresDeploymentSpecArgs) ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecOutput).ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(ctx)
}

// KeycloakSpecPostgresDeploymentSpecPtrInput is an input type that accepts KeycloakSpecPostgresDeploymentSpecArgs, KeycloakSpecPostgresDeploymentSpecPtr and KeycloakSpecPostgresDeploymentSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecPostgresDeploymentSpecPtrInput` via:
//
//          KeycloakSpecPostgresDeploymentSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecPostgresDeploymentSpecPtrInput interface {
	pulumi.Input

	ToKeycloakSpecPostgresDeploymentSpecPtrOutput() KeycloakSpecPostgresDeploymentSpecPtrOutput
	ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(context.Context) KeycloakSpecPostgresDeploymentSpecPtrOutput
}

type keycloakSpecPostgresDeploymentSpecPtrType KeycloakSpecPostgresDeploymentSpecArgs

func KeycloakSpecPostgresDeploymentSpecPtr(v *KeycloakSpecPostgresDeploymentSpecArgs) KeycloakSpecPostgresDeploymentSpecPtrInput {
	return (*keycloakSpecPostgresDeploymentSpecPtrType)(v)
}

func (*keycloakSpecPostgresDeploymentSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecPostgresDeploymentSpec)(nil)).Elem()
}

func (i *keycloakSpecPostgresDeploymentSpecPtrType) ToKeycloakSpecPostgresDeploymentSpecPtrOutput() KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecPostgresDeploymentSpecPtrType) ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecPtrOutput)
}

// Resources (Requests and Limits) for PostgresDeployment.
type KeycloakSpecPostgresDeploymentSpecOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPostgresDeploymentSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpec)(nil)).Elem()
}

func (o KeycloakSpecPostgresDeploymentSpecOutput) ToKeycloakSpecPostgresDeploymentSpecOutput() KeycloakSpecPostgresDeploymentSpecOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecOutput) ToKeycloakSpecPostgresDeploymentSpecOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecOutput) ToKeycloakSpecPostgresDeploymentSpecPtrOutput() KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return o.ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecPostgresDeploymentSpecOutput) ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return o.ApplyT(func(v KeycloakSpecPostgresDeploymentSpec) *KeycloakSpecPostgresDeploymentSpec {
		return &v
	}).(KeycloakSpecPostgresDeploymentSpecPtrOutput)
}

// Resources (Requests and Limits) for the Pods.
func (o KeycloakSpecPostgresDeploymentSpecOutput) Resources() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return o.ApplyT(func(v KeycloakSpecPostgresDeploymentSpec) *KeycloakSpecPostgresDeploymentSpecResources {
		return v.Resources
	}).(KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput)
}

type KeycloakSpecPostgresDeploymentSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPostgresDeploymentSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecPostgresDeploymentSpec)(nil)).Elem()
}

func (o KeycloakSpecPostgresDeploymentSpecPtrOutput) ToKeycloakSpecPostgresDeploymentSpecPtrOutput() KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecPtrOutput) ToKeycloakSpecPostgresDeploymentSpecPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecPtrOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecPtrOutput) Elem() KeycloakSpecPostgresDeploymentSpecOutput {
	return o.ApplyT(func(v *KeycloakSpecPostgresDeploymentSpec) KeycloakSpecPostgresDeploymentSpec { return *v }).(KeycloakSpecPostgresDeploymentSpecOutput)
}

// Resources (Requests and Limits) for the Pods.
func (o KeycloakSpecPostgresDeploymentSpecPtrOutput) Resources() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return o.ApplyT(func(v *KeycloakSpecPostgresDeploymentSpec) *KeycloakSpecPostgresDeploymentSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput)
}

// Resources (Requests and Limits) for the Pods.
type KeycloakSpecPostgresDeploymentSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]string `pulumi:"requests"`
}

// KeycloakSpecPostgresDeploymentSpecResourcesInput is an input type that accepts KeycloakSpecPostgresDeploymentSpecResourcesArgs and KeycloakSpecPostgresDeploymentSpecResourcesOutput values.
// You can construct a concrete instance of `KeycloakSpecPostgresDeploymentSpecResourcesInput` via:
//
//          KeycloakSpecPostgresDeploymentSpecResourcesArgs{...}
type KeycloakSpecPostgresDeploymentSpecResourcesInput interface {
	pulumi.Input

	ToKeycloakSpecPostgresDeploymentSpecResourcesOutput() KeycloakSpecPostgresDeploymentSpecResourcesOutput
	ToKeycloakSpecPostgresDeploymentSpecResourcesOutputWithContext(context.Context) KeycloakSpecPostgresDeploymentSpecResourcesOutput
}

// Resources (Requests and Limits) for the Pods.
type KeycloakSpecPostgresDeploymentSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (KeycloakSpecPostgresDeploymentSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpecResources)(nil)).Elem()
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesOutput() KeycloakSpecPostgresDeploymentSpecResourcesOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecResourcesOutputWithContext(context.Background())
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecResourcesOutput)
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutput() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(context.Background())
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecResourcesOutput).ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(ctx)
}

// KeycloakSpecPostgresDeploymentSpecResourcesPtrInput is an input type that accepts KeycloakSpecPostgresDeploymentSpecResourcesArgs, KeycloakSpecPostgresDeploymentSpecResourcesPtr and KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput values.
// You can construct a concrete instance of `KeycloakSpecPostgresDeploymentSpecResourcesPtrInput` via:
//
//          KeycloakSpecPostgresDeploymentSpecResourcesArgs{...}
//
//  or:
//
//          nil
type KeycloakSpecPostgresDeploymentSpecResourcesPtrInput interface {
	pulumi.Input

	ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutput() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput
	ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(context.Context) KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput
}

type keycloakSpecPostgresDeploymentSpecResourcesPtrType KeycloakSpecPostgresDeploymentSpecResourcesArgs

func KeycloakSpecPostgresDeploymentSpecResourcesPtr(v *KeycloakSpecPostgresDeploymentSpecResourcesArgs) KeycloakSpecPostgresDeploymentSpecResourcesPtrInput {
	return (*keycloakSpecPostgresDeploymentSpecResourcesPtrType)(v)
}

func (*keycloakSpecPostgresDeploymentSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecPostgresDeploymentSpecResources)(nil)).Elem()
}

func (i *keycloakSpecPostgresDeploymentSpecResourcesPtrType) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutput() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *keycloakSpecPostgresDeploymentSpecResourcesPtrType) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput)
}

// Resources (Requests and Limits) for the Pods.
type KeycloakSpecPostgresDeploymentSpecResourcesOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPostgresDeploymentSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpecResources)(nil)).Elem()
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesOutput() KeycloakSpecPostgresDeploymentSpecResourcesOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutput() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return o.ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(context.Background())
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return o.ApplyT(func(v KeycloakSpecPostgresDeploymentSpecResources) *KeycloakSpecPostgresDeploymentSpecResources {
		return &v
	}).(KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecPostgresDeploymentSpecResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakSpecPostgresDeploymentSpecResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecPostgresDeploymentSpecResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakSpecPostgresDeploymentSpecResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakSpecPostgresDeploymentSpecResources)(nil)).Elem()
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutput() KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesPtrOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput) Elem() KeycloakSpecPostgresDeploymentSpecResourcesOutput {
	return o.ApplyT(func(v *KeycloakSpecPostgresDeploymentSpecResources) KeycloakSpecPostgresDeploymentSpecResources {
		return *v
	}).(KeycloakSpecPostgresDeploymentSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakSpecPostgresDeploymentSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakSpecPostgresDeploymentSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecPostgresDeploymentSpecResourcesLimits struct {
}

// KeycloakSpecPostgresDeploymentSpecResourcesLimitsInput is an input type that accepts KeycloakSpecPostgresDeploymentSpecResourcesLimitsArgs and KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput values.
// You can construct a concrete instance of `KeycloakSpecPostgresDeploymentSpecResourcesLimitsInput` via:
//
//          KeycloakSpecPostgresDeploymentSpecResourcesLimitsArgs{...}
type KeycloakSpecPostgresDeploymentSpecResourcesLimitsInput interface {
	pulumi.Input

	ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput() KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput
	ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutputWithContext(context.Context) KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecPostgresDeploymentSpecResourcesLimitsArgs struct {
}

func (KeycloakSpecPostgresDeploymentSpecResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpecResourcesLimits)(nil)).Elem()
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesLimitsArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput() KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutputWithContext(context.Background())
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesLimitsArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpecResourcesLimits)(nil)).Elem()
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput() KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesLimitsOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput {
	return o
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecPostgresDeploymentSpecResourcesRequests struct {
}

// KeycloakSpecPostgresDeploymentSpecResourcesRequestsInput is an input type that accepts KeycloakSpecPostgresDeploymentSpecResourcesRequestsArgs and KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput values.
// You can construct a concrete instance of `KeycloakSpecPostgresDeploymentSpecResourcesRequestsInput` via:
//
//          KeycloakSpecPostgresDeploymentSpecResourcesRequestsArgs{...}
type KeycloakSpecPostgresDeploymentSpecResourcesRequestsInput interface {
	pulumi.Input

	ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput() KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput
	ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutputWithContext(context.Context) KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecPostgresDeploymentSpecResourcesRequestsArgs struct {
}

func (KeycloakSpecPostgresDeploymentSpecResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpecResourcesRequests)(nil)).Elem()
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesRequestsArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput() KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput {
	return i.ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutputWithContext(context.Background())
}

func (i KeycloakSpecPostgresDeploymentSpecResourcesRequestsArgs) ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput struct{ *pulumi.OutputState }

func (KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakSpecPostgresDeploymentSpecResourcesRequests)(nil)).Elem()
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput() KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput {
	return o
}

func (o KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput) ToKeycloakSpecPostgresDeploymentSpecResourcesRequestsOutputWithContext(ctx context.Context) KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput {
	return o
}

// KeycloakStatus defines the observed state of Keycloak.
type KeycloakStatus struct {
	// The secret where the admin credentials are to be found.
	CredentialSecret string `pulumi:"credentialSecret"`
	// Service IP and Port for in-cluster access to the keycloak instance.
	InternalURL string `pulumi:"internalURL"`
	// Human-readable message indicating details about current operator phase or error.
	Message string `pulumi:"message"`
	// Current phase of the operator.
	Phase string `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready bool `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
	SecondaryResources map[string][]string `pulumi:"secondaryResources"`
	// Version of Keycloak or RHSSO running on the cluster.
	Version string `pulumi:"version"`
}

// KeycloakStatusInput is an input type that accepts KeycloakStatusArgs and KeycloakStatusOutput values.
// You can construct a concrete instance of `KeycloakStatusInput` via:
//
//          KeycloakStatusArgs{...}
type KeycloakStatusInput interface {
	pulumi.Input

	ToKeycloakStatusOutput() KeycloakStatusOutput
	ToKeycloakStatusOutputWithContext(context.Context) KeycloakStatusOutput
}

// KeycloakStatus defines the observed state of Keycloak.
type KeycloakStatusArgs struct {
	// The secret where the admin credentials are to be found.
	CredentialSecret pulumi.StringInput `pulumi:"credentialSecret"`
	// Service IP and Port for in-cluster access to the keycloak instance.
	InternalURL pulumi.StringInput `pulumi:"internalURL"`
	// Human-readable message indicating details about current operator phase or error.
	Message pulumi.StringInput `pulumi:"message"`
	// Current phase of the operator.
	Phase pulumi.StringInput `pulumi:"phase"`
	// True if all resources are in a ready state and all work is done.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
	SecondaryResources pulumi.StringArrayMapInput `pulumi:"secondaryResources"`
	// Version of Keycloak or RHSSO running on the cluster.
	Version pulumi.StringInput `pulumi:"version"`
}

func (KeycloakStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakStatus)(nil)).Elem()
}

func (i KeycloakStatusArgs) ToKeycloakStatusOutput() KeycloakStatusOutput {
	return i.ToKeycloakStatusOutputWithContext(context.Background())
}

func (i KeycloakStatusArgs) ToKeycloakStatusOutputWithContext(ctx context.Context) KeycloakStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakStatusOutput)
}

func (i KeycloakStatusArgs) ToKeycloakStatusPtrOutput() KeycloakStatusPtrOutput {
	return i.ToKeycloakStatusPtrOutputWithContext(context.Background())
}

func (i KeycloakStatusArgs) ToKeycloakStatusPtrOutputWithContext(ctx context.Context) KeycloakStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakStatusOutput).ToKeycloakStatusPtrOutputWithContext(ctx)
}

// KeycloakStatusPtrInput is an input type that accepts KeycloakStatusArgs, KeycloakStatusPtr and KeycloakStatusPtrOutput values.
// You can construct a concrete instance of `KeycloakStatusPtrInput` via:
//
//          KeycloakStatusArgs{...}
//
//  or:
//
//          nil
type KeycloakStatusPtrInput interface {
	pulumi.Input

	ToKeycloakStatusPtrOutput() KeycloakStatusPtrOutput
	ToKeycloakStatusPtrOutputWithContext(context.Context) KeycloakStatusPtrOutput
}

type keycloakStatusPtrType KeycloakStatusArgs

func KeycloakStatusPtr(v *KeycloakStatusArgs) KeycloakStatusPtrInput {
	return (*keycloakStatusPtrType)(v)
}

func (*keycloakStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakStatus)(nil)).Elem()
}

func (i *keycloakStatusPtrType) ToKeycloakStatusPtrOutput() KeycloakStatusPtrOutput {
	return i.ToKeycloakStatusPtrOutputWithContext(context.Background())
}

func (i *keycloakStatusPtrType) ToKeycloakStatusPtrOutputWithContext(ctx context.Context) KeycloakStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakStatusPtrOutput)
}

// KeycloakStatus defines the observed state of Keycloak.
type KeycloakStatusOutput struct{ *pulumi.OutputState }

func (KeycloakStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakStatus)(nil)).Elem()
}

func (o KeycloakStatusOutput) ToKeycloakStatusOutput() KeycloakStatusOutput {
	return o
}

func (o KeycloakStatusOutput) ToKeycloakStatusOutputWithContext(ctx context.Context) KeycloakStatusOutput {
	return o
}

func (o KeycloakStatusOutput) ToKeycloakStatusPtrOutput() KeycloakStatusPtrOutput {
	return o.ToKeycloakStatusPtrOutputWithContext(context.Background())
}

func (o KeycloakStatusOutput) ToKeycloakStatusPtrOutputWithContext(ctx context.Context) KeycloakStatusPtrOutput {
	return o.ApplyT(func(v KeycloakStatus) *KeycloakStatus {
		return &v
	}).(KeycloakStatusPtrOutput)
}

// The secret where the admin credentials are to be found.
func (o KeycloakStatusOutput) CredentialSecret() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakStatus) string { return v.CredentialSecret }).(pulumi.StringOutput)
}

// Service IP and Port for in-cluster access to the keycloak instance.
func (o KeycloakStatusOutput) InternalURL() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakStatus) string { return v.InternalURL }).(pulumi.StringOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakStatusOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakStatus) string { return v.Message }).(pulumi.StringOutput)
}

// Current phase of the operator.
func (o KeycloakStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakStatus) string { return v.Phase }).(pulumi.StringOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakStatusOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v KeycloakStatus) bool { return v.Ready }).(pulumi.BoolOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
func (o KeycloakStatusOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakStatus) map[string][]string { return v.SecondaryResources }).(pulumi.StringArrayMapOutput)
}

// Version of Keycloak or RHSSO running on the cluster.
func (o KeycloakStatusOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakStatus) string { return v.Version }).(pulumi.StringOutput)
}

type KeycloakStatusPtrOutput struct{ *pulumi.OutputState }

func (KeycloakStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakStatus)(nil)).Elem()
}

func (o KeycloakStatusPtrOutput) ToKeycloakStatusPtrOutput() KeycloakStatusPtrOutput {
	return o
}

func (o KeycloakStatusPtrOutput) ToKeycloakStatusPtrOutputWithContext(ctx context.Context) KeycloakStatusPtrOutput {
	return o
}

func (o KeycloakStatusPtrOutput) Elem() KeycloakStatusOutput {
	return o.ApplyT(func(v *KeycloakStatus) KeycloakStatus { return *v }).(KeycloakStatusOutput)
}

// The secret where the admin credentials are to be found.
func (o KeycloakStatusPtrOutput) CredentialSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakStatus) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialSecret
	}).(pulumi.StringPtrOutput)
}

// Service IP and Port for in-cluster access to the keycloak instance.
func (o KeycloakStatusPtrOutput) InternalURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakStatus) *string {
		if v == nil {
			return nil
		}
		return &v.InternalURL
	}).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Current phase of the operator.
func (o KeycloakStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// True if all resources are in a ready state and all work is done.
func (o KeycloakStatusPtrOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.Ready
	}).(pulumi.BoolPtrOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
func (o KeycloakStatusPtrOutput) SecondaryResources() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KeycloakStatus) map[string][]string {
		if v == nil {
			return nil
		}
		return v.SecondaryResources
	}).(pulumi.StringArrayMapOutput)
}

// Version of Keycloak or RHSSO running on the cluster.
func (o KeycloakStatusPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
type KeycloakStatusSecondaryResources struct {
}

// KeycloakStatusSecondaryResourcesInput is an input type that accepts KeycloakStatusSecondaryResourcesArgs and KeycloakStatusSecondaryResourcesOutput values.
// You can construct a concrete instance of `KeycloakStatusSecondaryResourcesInput` via:
//
//          KeycloakStatusSecondaryResourcesArgs{...}
type KeycloakStatusSecondaryResourcesInput interface {
	pulumi.Input

	ToKeycloakStatusSecondaryResourcesOutput() KeycloakStatusSecondaryResourcesOutput
	ToKeycloakStatusSecondaryResourcesOutputWithContext(context.Context) KeycloakStatusSecondaryResourcesOutput
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
type KeycloakStatusSecondaryResourcesArgs struct {
}

func (KeycloakStatusSecondaryResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakStatusSecondaryResources)(nil)).Elem()
}

func (i KeycloakStatusSecondaryResourcesArgs) ToKeycloakStatusSecondaryResourcesOutput() KeycloakStatusSecondaryResourcesOutput {
	return i.ToKeycloakStatusSecondaryResourcesOutputWithContext(context.Background())
}

func (i KeycloakStatusSecondaryResourcesArgs) ToKeycloakStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakStatusSecondaryResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakStatusSecondaryResourcesOutput)
}

// A map of all the secondary resources types and names created for this CR. e.g "Deployment": [ "DeploymentName1", "DeploymentName2" ].
type KeycloakStatusSecondaryResourcesOutput struct{ *pulumi.OutputState }

func (KeycloakStatusSecondaryResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakStatusSecondaryResources)(nil)).Elem()
}

func (o KeycloakStatusSecondaryResourcesOutput) ToKeycloakStatusSecondaryResourcesOutput() KeycloakStatusSecondaryResourcesOutput {
	return o
}

func (o KeycloakStatusSecondaryResourcesOutput) ToKeycloakStatusSecondaryResourcesOutputWithContext(ctx context.Context) KeycloakStatusSecondaryResourcesOutput {
	return o
}

// KeycloakUser is the Schema for the keycloakusers API.
type KeycloakUserType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec *KeycloakUserSpec `pulumi:"spec"`
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status *KeycloakUserStatus `pulumi:"status"`
}

// KeycloakUserTypeInput is an input type that accepts KeycloakUserTypeArgs and KeycloakUserTypeOutput values.
// You can construct a concrete instance of `KeycloakUserTypeInput` via:
//
//          KeycloakUserTypeArgs{...}
type KeycloakUserTypeInput interface {
	pulumi.Input

	ToKeycloakUserTypeOutput() KeycloakUserTypeOutput
	ToKeycloakUserTypeOutputWithContext(context.Context) KeycloakUserTypeOutput
}

// KeycloakUser is the Schema for the keycloakusers API.
type KeycloakUserTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec KeycloakUserSpecPtrInput `pulumi:"spec"`
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status KeycloakUserStatusPtrInput `pulumi:"status"`
}

func (KeycloakUserTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserType)(nil)).Elem()
}

func (i KeycloakUserTypeArgs) ToKeycloakUserTypeOutput() KeycloakUserTypeOutput {
	return i.ToKeycloakUserTypeOutputWithContext(context.Background())
}

func (i KeycloakUserTypeArgs) ToKeycloakUserTypeOutputWithContext(ctx context.Context) KeycloakUserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserTypeOutput)
}

// KeycloakUser is the Schema for the keycloakusers API.
type KeycloakUserTypeOutput struct{ *pulumi.OutputState }

func (KeycloakUserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserType)(nil)).Elem()
}

func (o KeycloakUserTypeOutput) ToKeycloakUserTypeOutput() KeycloakUserTypeOutput {
	return o
}

func (o KeycloakUserTypeOutput) ToKeycloakUserTypeOutputWithContext(ctx context.Context) KeycloakUserTypeOutput {
	return o
}

func (o KeycloakUserTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KeycloakUserTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KeycloakUserTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KeycloakUserType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KeycloakUserSpec defines the desired state of KeycloakUser.
func (o KeycloakUserTypeOutput) Spec() KeycloakUserSpecPtrOutput {
	return o.ApplyT(func(v KeycloakUserType) *KeycloakUserSpec { return v.Spec }).(KeycloakUserSpecPtrOutput)
}

// KeycloakUserStatus defines the observed state of KeycloakUser.
func (o KeycloakUserTypeOutput) Status() KeycloakUserStatusPtrOutput {
	return o.ApplyT(func(v KeycloakUserType) *KeycloakUserStatus { return v.Status }).(KeycloakUserStatusPtrOutput)
}

type KeycloakUserMetadata struct {
}

// KeycloakUserMetadataInput is an input type that accepts KeycloakUserMetadataArgs and KeycloakUserMetadataOutput values.
// You can construct a concrete instance of `KeycloakUserMetadataInput` via:
//
//          KeycloakUserMetadataArgs{...}
type KeycloakUserMetadataInput interface {
	pulumi.Input

	ToKeycloakUserMetadataOutput() KeycloakUserMetadataOutput
	ToKeycloakUserMetadataOutputWithContext(context.Context) KeycloakUserMetadataOutput
}

type KeycloakUserMetadataArgs struct {
}

func (KeycloakUserMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserMetadata)(nil)).Elem()
}

func (i KeycloakUserMetadataArgs) ToKeycloakUserMetadataOutput() KeycloakUserMetadataOutput {
	return i.ToKeycloakUserMetadataOutputWithContext(context.Background())
}

func (i KeycloakUserMetadataArgs) ToKeycloakUserMetadataOutputWithContext(ctx context.Context) KeycloakUserMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserMetadataOutput)
}

type KeycloakUserMetadataOutput struct{ *pulumi.OutputState }

func (KeycloakUserMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserMetadata)(nil)).Elem()
}

func (o KeycloakUserMetadataOutput) ToKeycloakUserMetadataOutput() KeycloakUserMetadataOutput {
	return o
}

func (o KeycloakUserMetadataOutput) ToKeycloakUserMetadataOutputWithContext(ctx context.Context) KeycloakUserMetadataOutput {
	return o
}

// KeycloakUserSpec defines the desired state of KeycloakUser.
type KeycloakUserSpec struct {
	// Selector for looking up KeycloakRealm Custom Resources.
	RealmSelector *KeycloakUserSpecRealmSelector `pulumi:"realmSelector"`
	// Keycloak User REST object.
	User KeycloakUserSpecUser `pulumi:"user"`
}

// KeycloakUserSpecInput is an input type that accepts KeycloakUserSpecArgs and KeycloakUserSpecOutput values.
// You can construct a concrete instance of `KeycloakUserSpecInput` via:
//
//          KeycloakUserSpecArgs{...}
type KeycloakUserSpecInput interface {
	pulumi.Input

	ToKeycloakUserSpecOutput() KeycloakUserSpecOutput
	ToKeycloakUserSpecOutputWithContext(context.Context) KeycloakUserSpecOutput
}

// KeycloakUserSpec defines the desired state of KeycloakUser.
type KeycloakUserSpecArgs struct {
	// Selector for looking up KeycloakRealm Custom Resources.
	RealmSelector KeycloakUserSpecRealmSelectorPtrInput `pulumi:"realmSelector"`
	// Keycloak User REST object.
	User KeycloakUserSpecUserInput `pulumi:"user"`
}

func (KeycloakUserSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpec)(nil)).Elem()
}

func (i KeycloakUserSpecArgs) ToKeycloakUserSpecOutput() KeycloakUserSpecOutput {
	return i.ToKeycloakUserSpecOutputWithContext(context.Background())
}

func (i KeycloakUserSpecArgs) ToKeycloakUserSpecOutputWithContext(ctx context.Context) KeycloakUserSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecOutput)
}

func (i KeycloakUserSpecArgs) ToKeycloakUserSpecPtrOutput() KeycloakUserSpecPtrOutput {
	return i.ToKeycloakUserSpecPtrOutputWithContext(context.Background())
}

func (i KeycloakUserSpecArgs) ToKeycloakUserSpecPtrOutputWithContext(ctx context.Context) KeycloakUserSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecOutput).ToKeycloakUserSpecPtrOutputWithContext(ctx)
}

// KeycloakUserSpecPtrInput is an input type that accepts KeycloakUserSpecArgs, KeycloakUserSpecPtr and KeycloakUserSpecPtrOutput values.
// You can construct a concrete instance of `KeycloakUserSpecPtrInput` via:
//
//          KeycloakUserSpecArgs{...}
//
//  or:
//
//          nil
type KeycloakUserSpecPtrInput interface {
	pulumi.Input

	ToKeycloakUserSpecPtrOutput() KeycloakUserSpecPtrOutput
	ToKeycloakUserSpecPtrOutputWithContext(context.Context) KeycloakUserSpecPtrOutput
}

type keycloakUserSpecPtrType KeycloakUserSpecArgs

func KeycloakUserSpecPtr(v *KeycloakUserSpecArgs) KeycloakUserSpecPtrInput {
	return (*keycloakUserSpecPtrType)(v)
}

func (*keycloakUserSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserSpec)(nil)).Elem()
}

func (i *keycloakUserSpecPtrType) ToKeycloakUserSpecPtrOutput() KeycloakUserSpecPtrOutput {
	return i.ToKeycloakUserSpecPtrOutputWithContext(context.Background())
}

func (i *keycloakUserSpecPtrType) ToKeycloakUserSpecPtrOutputWithContext(ctx context.Context) KeycloakUserSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecPtrOutput)
}

// KeycloakUserSpec defines the desired state of KeycloakUser.
type KeycloakUserSpecOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpec)(nil)).Elem()
}

func (o KeycloakUserSpecOutput) ToKeycloakUserSpecOutput() KeycloakUserSpecOutput {
	return o
}

func (o KeycloakUserSpecOutput) ToKeycloakUserSpecOutputWithContext(ctx context.Context) KeycloakUserSpecOutput {
	return o
}

func (o KeycloakUserSpecOutput) ToKeycloakUserSpecPtrOutput() KeycloakUserSpecPtrOutput {
	return o.ToKeycloakUserSpecPtrOutputWithContext(context.Background())
}

func (o KeycloakUserSpecOutput) ToKeycloakUserSpecPtrOutputWithContext(ctx context.Context) KeycloakUserSpecPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpec) *KeycloakUserSpec {
		return &v
	}).(KeycloakUserSpecPtrOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
func (o KeycloakUserSpecOutput) RealmSelector() KeycloakUserSpecRealmSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpec) *KeycloakUserSpecRealmSelector { return v.RealmSelector }).(KeycloakUserSpecRealmSelectorPtrOutput)
}

// Keycloak User REST object.
func (o KeycloakUserSpecOutput) User() KeycloakUserSpecUserOutput {
	return o.ApplyT(func(v KeycloakUserSpec) KeycloakUserSpecUser { return v.User }).(KeycloakUserSpecUserOutput)
}

type KeycloakUserSpecPtrOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserSpec)(nil)).Elem()
}

func (o KeycloakUserSpecPtrOutput) ToKeycloakUserSpecPtrOutput() KeycloakUserSpecPtrOutput {
	return o
}

func (o KeycloakUserSpecPtrOutput) ToKeycloakUserSpecPtrOutputWithContext(ctx context.Context) KeycloakUserSpecPtrOutput {
	return o
}

func (o KeycloakUserSpecPtrOutput) Elem() KeycloakUserSpecOutput {
	return o.ApplyT(func(v *KeycloakUserSpec) KeycloakUserSpec { return *v }).(KeycloakUserSpecOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
func (o KeycloakUserSpecPtrOutput) RealmSelector() KeycloakUserSpecRealmSelectorPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpec) *KeycloakUserSpecRealmSelector {
		if v == nil {
			return nil
		}
		return v.RealmSelector
	}).(KeycloakUserSpecRealmSelectorPtrOutput)
}

// Keycloak User REST object.
func (o KeycloakUserSpecPtrOutput) User() KeycloakUserSpecUserPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpec) *KeycloakUserSpecUser {
		if v == nil {
			return nil
		}
		return &v.User
	}).(KeycloakUserSpecUserPtrOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
type KeycloakUserSpecRealmSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []KeycloakUserSpecRealmSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// KeycloakUserSpecRealmSelectorInput is an input type that accepts KeycloakUserSpecRealmSelectorArgs and KeycloakUserSpecRealmSelectorOutput values.
// You can construct a concrete instance of `KeycloakUserSpecRealmSelectorInput` via:
//
//          KeycloakUserSpecRealmSelectorArgs{...}
type KeycloakUserSpecRealmSelectorInput interface {
	pulumi.Input

	ToKeycloakUserSpecRealmSelectorOutput() KeycloakUserSpecRealmSelectorOutput
	ToKeycloakUserSpecRealmSelectorOutputWithContext(context.Context) KeycloakUserSpecRealmSelectorOutput
}

// Selector for looking up KeycloakRealm Custom Resources.
type KeycloakUserSpecRealmSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions KeycloakUserSpecRealmSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (KeycloakUserSpecRealmSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecRealmSelector)(nil)).Elem()
}

func (i KeycloakUserSpecRealmSelectorArgs) ToKeycloakUserSpecRealmSelectorOutput() KeycloakUserSpecRealmSelectorOutput {
	return i.ToKeycloakUserSpecRealmSelectorOutputWithContext(context.Background())
}

func (i KeycloakUserSpecRealmSelectorArgs) ToKeycloakUserSpecRealmSelectorOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecRealmSelectorOutput)
}

func (i KeycloakUserSpecRealmSelectorArgs) ToKeycloakUserSpecRealmSelectorPtrOutput() KeycloakUserSpecRealmSelectorPtrOutput {
	return i.ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(context.Background())
}

func (i KeycloakUserSpecRealmSelectorArgs) ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecRealmSelectorOutput).ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(ctx)
}

// KeycloakUserSpecRealmSelectorPtrInput is an input type that accepts KeycloakUserSpecRealmSelectorArgs, KeycloakUserSpecRealmSelectorPtr and KeycloakUserSpecRealmSelectorPtrOutput values.
// You can construct a concrete instance of `KeycloakUserSpecRealmSelectorPtrInput` via:
//
//          KeycloakUserSpecRealmSelectorArgs{...}
//
//  or:
//
//          nil
type KeycloakUserSpecRealmSelectorPtrInput interface {
	pulumi.Input

	ToKeycloakUserSpecRealmSelectorPtrOutput() KeycloakUserSpecRealmSelectorPtrOutput
	ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(context.Context) KeycloakUserSpecRealmSelectorPtrOutput
}

type keycloakUserSpecRealmSelectorPtrType KeycloakUserSpecRealmSelectorArgs

func KeycloakUserSpecRealmSelectorPtr(v *KeycloakUserSpecRealmSelectorArgs) KeycloakUserSpecRealmSelectorPtrInput {
	return (*keycloakUserSpecRealmSelectorPtrType)(v)
}

func (*keycloakUserSpecRealmSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserSpecRealmSelector)(nil)).Elem()
}

func (i *keycloakUserSpecRealmSelectorPtrType) ToKeycloakUserSpecRealmSelectorPtrOutput() KeycloakUserSpecRealmSelectorPtrOutput {
	return i.ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(context.Background())
}

func (i *keycloakUserSpecRealmSelectorPtrType) ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecRealmSelectorPtrOutput)
}

// Selector for looking up KeycloakRealm Custom Resources.
type KeycloakUserSpecRealmSelectorOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecRealmSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecRealmSelector)(nil)).Elem()
}

func (o KeycloakUserSpecRealmSelectorOutput) ToKeycloakUserSpecRealmSelectorOutput() KeycloakUserSpecRealmSelectorOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorOutput) ToKeycloakUserSpecRealmSelectorOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorOutput) ToKeycloakUserSpecRealmSelectorPtrOutput() KeycloakUserSpecRealmSelectorPtrOutput {
	return o.ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(context.Background())
}

func (o KeycloakUserSpecRealmSelectorOutput) ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecRealmSelector) *KeycloakUserSpecRealmSelector {
		return &v
	}).(KeycloakUserSpecRealmSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakUserSpecRealmSelectorOutput) MatchExpressions() KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecRealmSelector) []KeycloakUserSpecRealmSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakUserSpecRealmSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KeycloakUserSpecRealmSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type KeycloakUserSpecRealmSelectorPtrOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecRealmSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserSpecRealmSelector)(nil)).Elem()
}

func (o KeycloakUserSpecRealmSelectorPtrOutput) ToKeycloakUserSpecRealmSelectorPtrOutput() KeycloakUserSpecRealmSelectorPtrOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorPtrOutput) ToKeycloakUserSpecRealmSelectorPtrOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorPtrOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorPtrOutput) Elem() KeycloakUserSpecRealmSelectorOutput {
	return o.ApplyT(func(v *KeycloakUserSpecRealmSelector) KeycloakUserSpecRealmSelector { return *v }).(KeycloakUserSpecRealmSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KeycloakUserSpecRealmSelectorPtrOutput) MatchExpressions() KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KeycloakUserSpecRealmSelector) []KeycloakUserSpecRealmSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KeycloakUserSpecRealmSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KeycloakUserSpecRealmSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakUserSpecRealmSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// KeycloakUserSpecRealmSelectorMatchExpressionsInput is an input type that accepts KeycloakUserSpecRealmSelectorMatchExpressionsArgs and KeycloakUserSpecRealmSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KeycloakUserSpecRealmSelectorMatchExpressionsInput` via:
//
//          KeycloakUserSpecRealmSelectorMatchExpressionsArgs{...}
type KeycloakUserSpecRealmSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKeycloakUserSpecRealmSelectorMatchExpressionsOutput() KeycloakUserSpecRealmSelectorMatchExpressionsOutput
	ToKeycloakUserSpecRealmSelectorMatchExpressionsOutputWithContext(context.Context) KeycloakUserSpecRealmSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakUserSpecRealmSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (KeycloakUserSpecRealmSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakUserSpecRealmSelectorMatchExpressionsArgs) ToKeycloakUserSpecRealmSelectorMatchExpressionsOutput() KeycloakUserSpecRealmSelectorMatchExpressionsOutput {
	return i.ToKeycloakUserSpecRealmSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KeycloakUserSpecRealmSelectorMatchExpressionsArgs) ToKeycloakUserSpecRealmSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecRealmSelectorMatchExpressionsOutput)
}

// KeycloakUserSpecRealmSelectorMatchExpressionsArrayInput is an input type that accepts KeycloakUserSpecRealmSelectorMatchExpressionsArray and KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KeycloakUserSpecRealmSelectorMatchExpressionsArrayInput` via:
//
//          KeycloakUserSpecRealmSelectorMatchExpressionsArray{ KeycloakUserSpecRealmSelectorMatchExpressionsArgs{...} }
type KeycloakUserSpecRealmSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput() KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput
	ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutputWithContext(context.Context) KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput
}

type KeycloakUserSpecRealmSelectorMatchExpressionsArray []KeycloakUserSpecRealmSelectorMatchExpressionsInput

func (KeycloakUserSpecRealmSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakUserSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (i KeycloakUserSpecRealmSelectorMatchExpressionsArray) ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput() KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput {
	return i.ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KeycloakUserSpecRealmSelectorMatchExpressionsArray) ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KeycloakUserSpecRealmSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecRealmSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakUserSpecRealmSelectorMatchExpressionsOutput) ToKeycloakUserSpecRealmSelectorMatchExpressionsOutput() KeycloakUserSpecRealmSelectorMatchExpressionsOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorMatchExpressionsOutput) ToKeycloakUserSpecRealmSelectorMatchExpressionsOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o KeycloakUserSpecRealmSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakUserSpecRealmSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o KeycloakUserSpecRealmSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakUserSpecRealmSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o KeycloakUserSpecRealmSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecRealmSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakUserSpecRealmSelectorMatchExpressions)(nil)).Elem()
}

func (o KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput) ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput() KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput) ToKeycloakUserSpecRealmSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KeycloakUserSpecRealmSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakUserSpecRealmSelectorMatchExpressions {
		return vs[0].([]KeycloakUserSpecRealmSelectorMatchExpressions)[vs[1].(int)]
	}).(KeycloakUserSpecRealmSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakUserSpecRealmSelectorMatchLabels struct {
}

// KeycloakUserSpecRealmSelectorMatchLabelsInput is an input type that accepts KeycloakUserSpecRealmSelectorMatchLabelsArgs and KeycloakUserSpecRealmSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `KeycloakUserSpecRealmSelectorMatchLabelsInput` via:
//
//          KeycloakUserSpecRealmSelectorMatchLabelsArgs{...}
type KeycloakUserSpecRealmSelectorMatchLabelsInput interface {
	pulumi.Input

	ToKeycloakUserSpecRealmSelectorMatchLabelsOutput() KeycloakUserSpecRealmSelectorMatchLabelsOutput
	ToKeycloakUserSpecRealmSelectorMatchLabelsOutputWithContext(context.Context) KeycloakUserSpecRealmSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakUserSpecRealmSelectorMatchLabelsArgs struct {
}

func (KeycloakUserSpecRealmSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecRealmSelectorMatchLabels)(nil)).Elem()
}

func (i KeycloakUserSpecRealmSelectorMatchLabelsArgs) ToKeycloakUserSpecRealmSelectorMatchLabelsOutput() KeycloakUserSpecRealmSelectorMatchLabelsOutput {
	return i.ToKeycloakUserSpecRealmSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i KeycloakUserSpecRealmSelectorMatchLabelsArgs) ToKeycloakUserSpecRealmSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecRealmSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KeycloakUserSpecRealmSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecRealmSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecRealmSelectorMatchLabels)(nil)).Elem()
}

func (o KeycloakUserSpecRealmSelectorMatchLabelsOutput) ToKeycloakUserSpecRealmSelectorMatchLabelsOutput() KeycloakUserSpecRealmSelectorMatchLabelsOutput {
	return o
}

func (o KeycloakUserSpecRealmSelectorMatchLabelsOutput) ToKeycloakUserSpecRealmSelectorMatchLabelsOutputWithContext(ctx context.Context) KeycloakUserSpecRealmSelectorMatchLabelsOutput {
	return o
}

// Keycloak User REST object.
type KeycloakUserSpecUser struct {
	// A set of Attributes.
	Attributes map[string][]string `pulumi:"attributes"`
	// A set of Client Roles.
	ClientRoles map[string][]string `pulumi:"clientRoles"`
	// A set of Credentials.
	Credentials []KeycloakUserSpecUserCredentials `pulumi:"credentials"`
	// Email.
	Email *string `pulumi:"email"`
	// True if email has already been verified.
	EmailVerified *bool `pulumi:"emailVerified"`
	// User enabled flag.
	Enabled *bool `pulumi:"enabled"`
	// A set of Federated Identities.
	FederatedIdentities []KeycloakUserSpecUserFederatedIdentities `pulumi:"federatedIdentities"`
	// First Name.
	FirstName *string `pulumi:"firstName"`
	// A set of Groups.
	Groups []string `pulumi:"groups"`
	// User ID.
	Id *string `pulumi:"id"`
	// Last Name.
	LastName *string `pulumi:"lastName"`
	// A set of Realm Roles.
	RealmRoles []string `pulumi:"realmRoles"`
	// A set of Required Actions.
	RequiredActions []string `pulumi:"requiredActions"`
	// User Name.
	Username *string `pulumi:"username"`
}

// KeycloakUserSpecUserInput is an input type that accepts KeycloakUserSpecUserArgs and KeycloakUserSpecUserOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserInput` via:
//
//          KeycloakUserSpecUserArgs{...}
type KeycloakUserSpecUserInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserOutput() KeycloakUserSpecUserOutput
	ToKeycloakUserSpecUserOutputWithContext(context.Context) KeycloakUserSpecUserOutput
}

// Keycloak User REST object.
type KeycloakUserSpecUserArgs struct {
	// A set of Attributes.
	Attributes pulumi.StringArrayMapInput `pulumi:"attributes"`
	// A set of Client Roles.
	ClientRoles pulumi.StringArrayMapInput `pulumi:"clientRoles"`
	// A set of Credentials.
	Credentials KeycloakUserSpecUserCredentialsArrayInput `pulumi:"credentials"`
	// Email.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// True if email has already been verified.
	EmailVerified pulumi.BoolPtrInput `pulumi:"emailVerified"`
	// User enabled flag.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A set of Federated Identities.
	FederatedIdentities KeycloakUserSpecUserFederatedIdentitiesArrayInput `pulumi:"federatedIdentities"`
	// First Name.
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// A set of Groups.
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// User ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Last Name.
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
	// A set of Realm Roles.
	RealmRoles pulumi.StringArrayInput `pulumi:"realmRoles"`
	// A set of Required Actions.
	RequiredActions pulumi.StringArrayInput `pulumi:"requiredActions"`
	// User Name.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KeycloakUserSpecUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUser)(nil)).Elem()
}

func (i KeycloakUserSpecUserArgs) ToKeycloakUserSpecUserOutput() KeycloakUserSpecUserOutput {
	return i.ToKeycloakUserSpecUserOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserArgs) ToKeycloakUserSpecUserOutputWithContext(ctx context.Context) KeycloakUserSpecUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserOutput)
}

func (i KeycloakUserSpecUserArgs) ToKeycloakUserSpecUserPtrOutput() KeycloakUserSpecUserPtrOutput {
	return i.ToKeycloakUserSpecUserPtrOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserArgs) ToKeycloakUserSpecUserPtrOutputWithContext(ctx context.Context) KeycloakUserSpecUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserOutput).ToKeycloakUserSpecUserPtrOutputWithContext(ctx)
}

// KeycloakUserSpecUserPtrInput is an input type that accepts KeycloakUserSpecUserArgs, KeycloakUserSpecUserPtr and KeycloakUserSpecUserPtrOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserPtrInput` via:
//
//          KeycloakUserSpecUserArgs{...}
//
//  or:
//
//          nil
type KeycloakUserSpecUserPtrInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserPtrOutput() KeycloakUserSpecUserPtrOutput
	ToKeycloakUserSpecUserPtrOutputWithContext(context.Context) KeycloakUserSpecUserPtrOutput
}

type keycloakUserSpecUserPtrType KeycloakUserSpecUserArgs

func KeycloakUserSpecUserPtr(v *KeycloakUserSpecUserArgs) KeycloakUserSpecUserPtrInput {
	return (*keycloakUserSpecUserPtrType)(v)
}

func (*keycloakUserSpecUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserSpecUser)(nil)).Elem()
}

func (i *keycloakUserSpecUserPtrType) ToKeycloakUserSpecUserPtrOutput() KeycloakUserSpecUserPtrOutput {
	return i.ToKeycloakUserSpecUserPtrOutputWithContext(context.Background())
}

func (i *keycloakUserSpecUserPtrType) ToKeycloakUserSpecUserPtrOutputWithContext(ctx context.Context) KeycloakUserSpecUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserPtrOutput)
}

// Keycloak User REST object.
type KeycloakUserSpecUserOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUser)(nil)).Elem()
}

func (o KeycloakUserSpecUserOutput) ToKeycloakUserSpecUserOutput() KeycloakUserSpecUserOutput {
	return o
}

func (o KeycloakUserSpecUserOutput) ToKeycloakUserSpecUserOutputWithContext(ctx context.Context) KeycloakUserSpecUserOutput {
	return o
}

func (o KeycloakUserSpecUserOutput) ToKeycloakUserSpecUserPtrOutput() KeycloakUserSpecUserPtrOutput {
	return o.ToKeycloakUserSpecUserPtrOutputWithContext(context.Background())
}

func (o KeycloakUserSpecUserOutput) ToKeycloakUserSpecUserPtrOutputWithContext(ctx context.Context) KeycloakUserSpecUserPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *KeycloakUserSpecUser {
		return &v
	}).(KeycloakUserSpecUserPtrOutput)
}

// A set of Attributes.
func (o KeycloakUserSpecUserOutput) Attributes() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) map[string][]string { return v.Attributes }).(pulumi.StringArrayMapOutput)
}

// A set of Client Roles.
func (o KeycloakUserSpecUserOutput) ClientRoles() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) map[string][]string { return v.ClientRoles }).(pulumi.StringArrayMapOutput)
}

// A set of Credentials.
func (o KeycloakUserSpecUserOutput) Credentials() KeycloakUserSpecUserCredentialsArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) []KeycloakUserSpecUserCredentials { return v.Credentials }).(KeycloakUserSpecUserCredentialsArrayOutput)
}

// Email.
func (o KeycloakUserSpecUserOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// True if email has already been verified.
func (o KeycloakUserSpecUserOutput) EmailVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *bool { return v.EmailVerified }).(pulumi.BoolPtrOutput)
}

// User enabled flag.
func (o KeycloakUserSpecUserOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A set of Federated Identities.
func (o KeycloakUserSpecUserOutput) FederatedIdentities() KeycloakUserSpecUserFederatedIdentitiesArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) []KeycloakUserSpecUserFederatedIdentities { return v.FederatedIdentities }).(KeycloakUserSpecUserFederatedIdentitiesArrayOutput)
}

// First Name.
func (o KeycloakUserSpecUserOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// A set of Groups.
func (o KeycloakUserSpecUserOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// User ID.
func (o KeycloakUserSpecUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Last Name.
func (o KeycloakUserSpecUserOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

// A set of Realm Roles.
func (o KeycloakUserSpecUserOutput) RealmRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) []string { return v.RealmRoles }).(pulumi.StringArrayOutput)
}

// A set of Required Actions.
func (o KeycloakUserSpecUserOutput) RequiredActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) []string { return v.RequiredActions }).(pulumi.StringArrayOutput)
}

// User Name.
func (o KeycloakUserSpecUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KeycloakUserSpecUserPtrOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserSpecUser)(nil)).Elem()
}

func (o KeycloakUserSpecUserPtrOutput) ToKeycloakUserSpecUserPtrOutput() KeycloakUserSpecUserPtrOutput {
	return o
}

func (o KeycloakUserSpecUserPtrOutput) ToKeycloakUserSpecUserPtrOutputWithContext(ctx context.Context) KeycloakUserSpecUserPtrOutput {
	return o
}

func (o KeycloakUserSpecUserPtrOutput) Elem() KeycloakUserSpecUserOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) KeycloakUserSpecUser { return *v }).(KeycloakUserSpecUserOutput)
}

// A set of Attributes.
func (o KeycloakUserSpecUserPtrOutput) Attributes() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringArrayMapOutput)
}

// A set of Client Roles.
func (o KeycloakUserSpecUserPtrOutput) ClientRoles() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) map[string][]string {
		if v == nil {
			return nil
		}
		return v.ClientRoles
	}).(pulumi.StringArrayMapOutput)
}

// A set of Credentials.
func (o KeycloakUserSpecUserPtrOutput) Credentials() KeycloakUserSpecUserCredentialsArrayOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) []KeycloakUserSpecUserCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(KeycloakUserSpecUserCredentialsArrayOutput)
}

// Email.
func (o KeycloakUserSpecUserPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// True if email has already been verified.
func (o KeycloakUserSpecUserPtrOutput) EmailVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *bool {
		if v == nil {
			return nil
		}
		return v.EmailVerified
	}).(pulumi.BoolPtrOutput)
}

// User enabled flag.
func (o KeycloakUserSpecUserPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A set of Federated Identities.
func (o KeycloakUserSpecUserPtrOutput) FederatedIdentities() KeycloakUserSpecUserFederatedIdentitiesArrayOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) []KeycloakUserSpecUserFederatedIdentities {
		if v == nil {
			return nil
		}
		return v.FederatedIdentities
	}).(KeycloakUserSpecUserFederatedIdentitiesArrayOutput)
}

// First Name.
func (o KeycloakUserSpecUserPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// A set of Groups.
func (o KeycloakUserSpecUserPtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// User ID.
func (o KeycloakUserSpecUserPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Last Name.
func (o KeycloakUserSpecUserPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

// A set of Realm Roles.
func (o KeycloakUserSpecUserPtrOutput) RealmRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) []string {
		if v == nil {
			return nil
		}
		return v.RealmRoles
	}).(pulumi.StringArrayOutput)
}

// A set of Required Actions.
func (o KeycloakUserSpecUserPtrOutput) RequiredActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) []string {
		if v == nil {
			return nil
		}
		return v.RequiredActions
	}).(pulumi.StringArrayOutput)
}

// User Name.
func (o KeycloakUserSpecUserPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserSpecUser) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// A set of Attributes.
type KeycloakUserSpecUserAttributes struct {
}

// KeycloakUserSpecUserAttributesInput is an input type that accepts KeycloakUserSpecUserAttributesArgs and KeycloakUserSpecUserAttributesOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserAttributesInput` via:
//
//          KeycloakUserSpecUserAttributesArgs{...}
type KeycloakUserSpecUserAttributesInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserAttributesOutput() KeycloakUserSpecUserAttributesOutput
	ToKeycloakUserSpecUserAttributesOutputWithContext(context.Context) KeycloakUserSpecUserAttributesOutput
}

// A set of Attributes.
type KeycloakUserSpecUserAttributesArgs struct {
}

func (KeycloakUserSpecUserAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserAttributes)(nil)).Elem()
}

func (i KeycloakUserSpecUserAttributesArgs) ToKeycloakUserSpecUserAttributesOutput() KeycloakUserSpecUserAttributesOutput {
	return i.ToKeycloakUserSpecUserAttributesOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserAttributesArgs) ToKeycloakUserSpecUserAttributesOutputWithContext(ctx context.Context) KeycloakUserSpecUserAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserAttributesOutput)
}

// A set of Attributes.
type KeycloakUserSpecUserAttributesOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserAttributes)(nil)).Elem()
}

func (o KeycloakUserSpecUserAttributesOutput) ToKeycloakUserSpecUserAttributesOutput() KeycloakUserSpecUserAttributesOutput {
	return o
}

func (o KeycloakUserSpecUserAttributesOutput) ToKeycloakUserSpecUserAttributesOutputWithContext(ctx context.Context) KeycloakUserSpecUserAttributesOutput {
	return o
}

// A set of Client Roles.
type KeycloakUserSpecUserClientRoles struct {
}

// KeycloakUserSpecUserClientRolesInput is an input type that accepts KeycloakUserSpecUserClientRolesArgs and KeycloakUserSpecUserClientRolesOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserClientRolesInput` via:
//
//          KeycloakUserSpecUserClientRolesArgs{...}
type KeycloakUserSpecUserClientRolesInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserClientRolesOutput() KeycloakUserSpecUserClientRolesOutput
	ToKeycloakUserSpecUserClientRolesOutputWithContext(context.Context) KeycloakUserSpecUserClientRolesOutput
}

// A set of Client Roles.
type KeycloakUserSpecUserClientRolesArgs struct {
}

func (KeycloakUserSpecUserClientRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserClientRoles)(nil)).Elem()
}

func (i KeycloakUserSpecUserClientRolesArgs) ToKeycloakUserSpecUserClientRolesOutput() KeycloakUserSpecUserClientRolesOutput {
	return i.ToKeycloakUserSpecUserClientRolesOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserClientRolesArgs) ToKeycloakUserSpecUserClientRolesOutputWithContext(ctx context.Context) KeycloakUserSpecUserClientRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserClientRolesOutput)
}

// A set of Client Roles.
type KeycloakUserSpecUserClientRolesOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserClientRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserClientRoles)(nil)).Elem()
}

func (o KeycloakUserSpecUserClientRolesOutput) ToKeycloakUserSpecUserClientRolesOutput() KeycloakUserSpecUserClientRolesOutput {
	return o
}

func (o KeycloakUserSpecUserClientRolesOutput) ToKeycloakUserSpecUserClientRolesOutputWithContext(ctx context.Context) KeycloakUserSpecUserClientRolesOutput {
	return o
}

type KeycloakUserSpecUserCredentials struct {
	// True if this credential object is temporary.
	Temporary *bool `pulumi:"temporary"`
	// Credential Type.
	Type *string `pulumi:"type"`
	// Credential Value.
	Value *string `pulumi:"value"`
}

// KeycloakUserSpecUserCredentialsInput is an input type that accepts KeycloakUserSpecUserCredentialsArgs and KeycloakUserSpecUserCredentialsOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserCredentialsInput` via:
//
//          KeycloakUserSpecUserCredentialsArgs{...}
type KeycloakUserSpecUserCredentialsInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserCredentialsOutput() KeycloakUserSpecUserCredentialsOutput
	ToKeycloakUserSpecUserCredentialsOutputWithContext(context.Context) KeycloakUserSpecUserCredentialsOutput
}

type KeycloakUserSpecUserCredentialsArgs struct {
	// True if this credential object is temporary.
	Temporary pulumi.BoolPtrInput `pulumi:"temporary"`
	// Credential Type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Credential Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KeycloakUserSpecUserCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserCredentials)(nil)).Elem()
}

func (i KeycloakUserSpecUserCredentialsArgs) ToKeycloakUserSpecUserCredentialsOutput() KeycloakUserSpecUserCredentialsOutput {
	return i.ToKeycloakUserSpecUserCredentialsOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserCredentialsArgs) ToKeycloakUserSpecUserCredentialsOutputWithContext(ctx context.Context) KeycloakUserSpecUserCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserCredentialsOutput)
}

// KeycloakUserSpecUserCredentialsArrayInput is an input type that accepts KeycloakUserSpecUserCredentialsArray and KeycloakUserSpecUserCredentialsArrayOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserCredentialsArrayInput` via:
//
//          KeycloakUserSpecUserCredentialsArray{ KeycloakUserSpecUserCredentialsArgs{...} }
type KeycloakUserSpecUserCredentialsArrayInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserCredentialsArrayOutput() KeycloakUserSpecUserCredentialsArrayOutput
	ToKeycloakUserSpecUserCredentialsArrayOutputWithContext(context.Context) KeycloakUserSpecUserCredentialsArrayOutput
}

type KeycloakUserSpecUserCredentialsArray []KeycloakUserSpecUserCredentialsInput

func (KeycloakUserSpecUserCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakUserSpecUserCredentials)(nil)).Elem()
}

func (i KeycloakUserSpecUserCredentialsArray) ToKeycloakUserSpecUserCredentialsArrayOutput() KeycloakUserSpecUserCredentialsArrayOutput {
	return i.ToKeycloakUserSpecUserCredentialsArrayOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserCredentialsArray) ToKeycloakUserSpecUserCredentialsArrayOutputWithContext(ctx context.Context) KeycloakUserSpecUserCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserCredentialsArrayOutput)
}

type KeycloakUserSpecUserCredentialsOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserCredentials)(nil)).Elem()
}

func (o KeycloakUserSpecUserCredentialsOutput) ToKeycloakUserSpecUserCredentialsOutput() KeycloakUserSpecUserCredentialsOutput {
	return o
}

func (o KeycloakUserSpecUserCredentialsOutput) ToKeycloakUserSpecUserCredentialsOutputWithContext(ctx context.Context) KeycloakUserSpecUserCredentialsOutput {
	return o
}

// True if this credential object is temporary.
func (o KeycloakUserSpecUserCredentialsOutput) Temporary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUserCredentials) *bool { return v.Temporary }).(pulumi.BoolPtrOutput)
}

// Credential Type.
func (o KeycloakUserSpecUserCredentialsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUserCredentials) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Credential Value.
func (o KeycloakUserSpecUserCredentialsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUserCredentials) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KeycloakUserSpecUserCredentialsArrayOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakUserSpecUserCredentials)(nil)).Elem()
}

func (o KeycloakUserSpecUserCredentialsArrayOutput) ToKeycloakUserSpecUserCredentialsArrayOutput() KeycloakUserSpecUserCredentialsArrayOutput {
	return o
}

func (o KeycloakUserSpecUserCredentialsArrayOutput) ToKeycloakUserSpecUserCredentialsArrayOutputWithContext(ctx context.Context) KeycloakUserSpecUserCredentialsArrayOutput {
	return o
}

func (o KeycloakUserSpecUserCredentialsArrayOutput) Index(i pulumi.IntInput) KeycloakUserSpecUserCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakUserSpecUserCredentials {
		return vs[0].([]KeycloakUserSpecUserCredentials)[vs[1].(int)]
	}).(KeycloakUserSpecUserCredentialsOutput)
}

type KeycloakUserSpecUserFederatedIdentities struct {
	// Federated Identity Provider.
	IdentityProvider *string `pulumi:"identityProvider"`
	// Federated Identity User ID.
	UserId *string `pulumi:"userId"`
	// Federated Identity User Name.
	UserName *string `pulumi:"userName"`
}

// KeycloakUserSpecUserFederatedIdentitiesInput is an input type that accepts KeycloakUserSpecUserFederatedIdentitiesArgs and KeycloakUserSpecUserFederatedIdentitiesOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserFederatedIdentitiesInput` via:
//
//          KeycloakUserSpecUserFederatedIdentitiesArgs{...}
type KeycloakUserSpecUserFederatedIdentitiesInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserFederatedIdentitiesOutput() KeycloakUserSpecUserFederatedIdentitiesOutput
	ToKeycloakUserSpecUserFederatedIdentitiesOutputWithContext(context.Context) KeycloakUserSpecUserFederatedIdentitiesOutput
}

type KeycloakUserSpecUserFederatedIdentitiesArgs struct {
	// Federated Identity Provider.
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// Federated Identity User ID.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// Federated Identity User Name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (KeycloakUserSpecUserFederatedIdentitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserFederatedIdentities)(nil)).Elem()
}

func (i KeycloakUserSpecUserFederatedIdentitiesArgs) ToKeycloakUserSpecUserFederatedIdentitiesOutput() KeycloakUserSpecUserFederatedIdentitiesOutput {
	return i.ToKeycloakUserSpecUserFederatedIdentitiesOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserFederatedIdentitiesArgs) ToKeycloakUserSpecUserFederatedIdentitiesOutputWithContext(ctx context.Context) KeycloakUserSpecUserFederatedIdentitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserFederatedIdentitiesOutput)
}

// KeycloakUserSpecUserFederatedIdentitiesArrayInput is an input type that accepts KeycloakUserSpecUserFederatedIdentitiesArray and KeycloakUserSpecUserFederatedIdentitiesArrayOutput values.
// You can construct a concrete instance of `KeycloakUserSpecUserFederatedIdentitiesArrayInput` via:
//
//          KeycloakUserSpecUserFederatedIdentitiesArray{ KeycloakUserSpecUserFederatedIdentitiesArgs{...} }
type KeycloakUserSpecUserFederatedIdentitiesArrayInput interface {
	pulumi.Input

	ToKeycloakUserSpecUserFederatedIdentitiesArrayOutput() KeycloakUserSpecUserFederatedIdentitiesArrayOutput
	ToKeycloakUserSpecUserFederatedIdentitiesArrayOutputWithContext(context.Context) KeycloakUserSpecUserFederatedIdentitiesArrayOutput
}

type KeycloakUserSpecUserFederatedIdentitiesArray []KeycloakUserSpecUserFederatedIdentitiesInput

func (KeycloakUserSpecUserFederatedIdentitiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakUserSpecUserFederatedIdentities)(nil)).Elem()
}

func (i KeycloakUserSpecUserFederatedIdentitiesArray) ToKeycloakUserSpecUserFederatedIdentitiesArrayOutput() KeycloakUserSpecUserFederatedIdentitiesArrayOutput {
	return i.ToKeycloakUserSpecUserFederatedIdentitiesArrayOutputWithContext(context.Background())
}

func (i KeycloakUserSpecUserFederatedIdentitiesArray) ToKeycloakUserSpecUserFederatedIdentitiesArrayOutputWithContext(ctx context.Context) KeycloakUserSpecUserFederatedIdentitiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserSpecUserFederatedIdentitiesArrayOutput)
}

type KeycloakUserSpecUserFederatedIdentitiesOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserFederatedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserSpecUserFederatedIdentities)(nil)).Elem()
}

func (o KeycloakUserSpecUserFederatedIdentitiesOutput) ToKeycloakUserSpecUserFederatedIdentitiesOutput() KeycloakUserSpecUserFederatedIdentitiesOutput {
	return o
}

func (o KeycloakUserSpecUserFederatedIdentitiesOutput) ToKeycloakUserSpecUserFederatedIdentitiesOutputWithContext(ctx context.Context) KeycloakUserSpecUserFederatedIdentitiesOutput {
	return o
}

// Federated Identity Provider.
func (o KeycloakUserSpecUserFederatedIdentitiesOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUserFederatedIdentities) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// Federated Identity User ID.
func (o KeycloakUserSpecUserFederatedIdentitiesOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUserFederatedIdentities) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// Federated Identity User Name.
func (o KeycloakUserSpecUserFederatedIdentitiesOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeycloakUserSpecUserFederatedIdentities) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type KeycloakUserSpecUserFederatedIdentitiesArrayOutput struct{ *pulumi.OutputState }

func (KeycloakUserSpecUserFederatedIdentitiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeycloakUserSpecUserFederatedIdentities)(nil)).Elem()
}

func (o KeycloakUserSpecUserFederatedIdentitiesArrayOutput) ToKeycloakUserSpecUserFederatedIdentitiesArrayOutput() KeycloakUserSpecUserFederatedIdentitiesArrayOutput {
	return o
}

func (o KeycloakUserSpecUserFederatedIdentitiesArrayOutput) ToKeycloakUserSpecUserFederatedIdentitiesArrayOutputWithContext(ctx context.Context) KeycloakUserSpecUserFederatedIdentitiesArrayOutput {
	return o
}

func (o KeycloakUserSpecUserFederatedIdentitiesArrayOutput) Index(i pulumi.IntInput) KeycloakUserSpecUserFederatedIdentitiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeycloakUserSpecUserFederatedIdentities {
		return vs[0].([]KeycloakUserSpecUserFederatedIdentities)[vs[1].(int)]
	}).(KeycloakUserSpecUserFederatedIdentitiesOutput)
}

// KeycloakUserStatus defines the observed state of KeycloakUser.
type KeycloakUserStatus struct {
	// Human-readable message indicating details about current operator phase or error.
	Message string `pulumi:"message"`
	// Current phase of the operator.
	Phase string `pulumi:"phase"`
}

// KeycloakUserStatusInput is an input type that accepts KeycloakUserStatusArgs and KeycloakUserStatusOutput values.
// You can construct a concrete instance of `KeycloakUserStatusInput` via:
//
//          KeycloakUserStatusArgs{...}
type KeycloakUserStatusInput interface {
	pulumi.Input

	ToKeycloakUserStatusOutput() KeycloakUserStatusOutput
	ToKeycloakUserStatusOutputWithContext(context.Context) KeycloakUserStatusOutput
}

// KeycloakUserStatus defines the observed state of KeycloakUser.
type KeycloakUserStatusArgs struct {
	// Human-readable message indicating details about current operator phase or error.
	Message pulumi.StringInput `pulumi:"message"`
	// Current phase of the operator.
	Phase pulumi.StringInput `pulumi:"phase"`
}

func (KeycloakUserStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserStatus)(nil)).Elem()
}

func (i KeycloakUserStatusArgs) ToKeycloakUserStatusOutput() KeycloakUserStatusOutput {
	return i.ToKeycloakUserStatusOutputWithContext(context.Background())
}

func (i KeycloakUserStatusArgs) ToKeycloakUserStatusOutputWithContext(ctx context.Context) KeycloakUserStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserStatusOutput)
}

func (i KeycloakUserStatusArgs) ToKeycloakUserStatusPtrOutput() KeycloakUserStatusPtrOutput {
	return i.ToKeycloakUserStatusPtrOutputWithContext(context.Background())
}

func (i KeycloakUserStatusArgs) ToKeycloakUserStatusPtrOutputWithContext(ctx context.Context) KeycloakUserStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserStatusOutput).ToKeycloakUserStatusPtrOutputWithContext(ctx)
}

// KeycloakUserStatusPtrInput is an input type that accepts KeycloakUserStatusArgs, KeycloakUserStatusPtr and KeycloakUserStatusPtrOutput values.
// You can construct a concrete instance of `KeycloakUserStatusPtrInput` via:
//
//          KeycloakUserStatusArgs{...}
//
//  or:
//
//          nil
type KeycloakUserStatusPtrInput interface {
	pulumi.Input

	ToKeycloakUserStatusPtrOutput() KeycloakUserStatusPtrOutput
	ToKeycloakUserStatusPtrOutputWithContext(context.Context) KeycloakUserStatusPtrOutput
}

type keycloakUserStatusPtrType KeycloakUserStatusArgs

func KeycloakUserStatusPtr(v *KeycloakUserStatusArgs) KeycloakUserStatusPtrInput {
	return (*keycloakUserStatusPtrType)(v)
}

func (*keycloakUserStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserStatus)(nil)).Elem()
}

func (i *keycloakUserStatusPtrType) ToKeycloakUserStatusPtrOutput() KeycloakUserStatusPtrOutput {
	return i.ToKeycloakUserStatusPtrOutputWithContext(context.Background())
}

func (i *keycloakUserStatusPtrType) ToKeycloakUserStatusPtrOutputWithContext(ctx context.Context) KeycloakUserStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakUserStatusPtrOutput)
}

// KeycloakUserStatus defines the observed state of KeycloakUser.
type KeycloakUserStatusOutput struct{ *pulumi.OutputState }

func (KeycloakUserStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeycloakUserStatus)(nil)).Elem()
}

func (o KeycloakUserStatusOutput) ToKeycloakUserStatusOutput() KeycloakUserStatusOutput {
	return o
}

func (o KeycloakUserStatusOutput) ToKeycloakUserStatusOutputWithContext(ctx context.Context) KeycloakUserStatusOutput {
	return o
}

func (o KeycloakUserStatusOutput) ToKeycloakUserStatusPtrOutput() KeycloakUserStatusPtrOutput {
	return o.ToKeycloakUserStatusPtrOutputWithContext(context.Background())
}

func (o KeycloakUserStatusOutput) ToKeycloakUserStatusPtrOutputWithContext(ctx context.Context) KeycloakUserStatusPtrOutput {
	return o.ApplyT(func(v KeycloakUserStatus) *KeycloakUserStatus {
		return &v
	}).(KeycloakUserStatusPtrOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakUserStatusOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakUserStatus) string { return v.Message }).(pulumi.StringOutput)
}

// Current phase of the operator.
func (o KeycloakUserStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v KeycloakUserStatus) string { return v.Phase }).(pulumi.StringOutput)
}

type KeycloakUserStatusPtrOutput struct{ *pulumi.OutputState }

func (KeycloakUserStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakUserStatus)(nil)).Elem()
}

func (o KeycloakUserStatusPtrOutput) ToKeycloakUserStatusPtrOutput() KeycloakUserStatusPtrOutput {
	return o
}

func (o KeycloakUserStatusPtrOutput) ToKeycloakUserStatusPtrOutputWithContext(ctx context.Context) KeycloakUserStatusPtrOutput {
	return o
}

func (o KeycloakUserStatusPtrOutput) Elem() KeycloakUserStatusOutput {
	return o.ApplyT(func(v *KeycloakUserStatus) KeycloakUserStatus { return *v }).(KeycloakUserStatusOutput)
}

// Human-readable message indicating details about current operator phase or error.
func (o KeycloakUserStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Current phase of the operator.
func (o KeycloakUserStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakUserStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(KeycloakTypeOutput{})
	pulumi.RegisterOutputType(KeycloakBackupTypeOutput{})
	pulumi.RegisterOutputType(KeycloakBackupMetadataOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecAwsOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecAwsPtrOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecInstanceSelectorOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecInstanceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecInstanceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecInstanceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakBackupSpecInstanceSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(KeycloakBackupStatusOutput{})
	pulumi.RegisterOutputType(KeycloakBackupStatusPtrOutput{})
	pulumi.RegisterOutputType(KeycloakBackupStatusSecondaryResourcesOutput{})
	pulumi.RegisterOutputType(KeycloakClientTypeOutput{})
	pulumi.RegisterOutputType(KeycloakClientMetadataOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientPtrOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientAccessOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientAttributesOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientProtocolMappersOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientProtocolMappersArrayOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecClientProtocolMappersConfigOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecRealmSelectorOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecRealmSelectorPtrOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecRealmSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecRealmSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakClientSpecRealmSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(KeycloakClientStatusOutput{})
	pulumi.RegisterOutputType(KeycloakClientStatusPtrOutput{})
	pulumi.RegisterOutputType(KeycloakClientStatusSecondaryResourcesOutput{})
	pulumi.RegisterOutputType(KeycloakMetadataOutput{})
	pulumi.RegisterOutputType(KeycloakRealmTypeOutput{})
	pulumi.RegisterOutputType(KeycloakRealmMetadataOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecInstanceSelectorOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecInstanceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecInstanceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecInstanceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecInstanceSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmPtrOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsAccessOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsAttributesOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsProtocolMappersOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsProtocolMappersArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmClientsProtocolMappersConfigOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmIdentityProvidersOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmIdentityProvidersArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmIdentityProvidersConfigOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmOverridesOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmOverridesArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersAttributesOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersClientRolesOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersCredentialsOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersCredentialsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersFederatedIdentitiesOutput{})
	pulumi.RegisterOutputType(KeycloakRealmSpecRealmUsersFederatedIdentitiesArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmStatusOutput{})
	pulumi.RegisterOutputType(KeycloakRealmStatusPtrOutput{})
	pulumi.RegisterOutputType(KeycloakRealmStatusSecondaryResourcesOutput{})
	pulumi.RegisterOutputType(KeycloakSpecOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecExternalAccessOutput{})
	pulumi.RegisterOutputType(KeycloakSpecExternalAccessPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecExternalDatabaseOutput{})
	pulumi.RegisterOutputType(KeycloakSpecExternalDatabasePtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecKeycloakDeploymentSpecOutput{})
	pulumi.RegisterOutputType(KeycloakSpecKeycloakDeploymentSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecKeycloakDeploymentSpecResourcesOutput{})
	pulumi.RegisterOutputType(KeycloakSpecKeycloakDeploymentSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecKeycloakDeploymentSpecResourcesLimitsOutput{})
	pulumi.RegisterOutputType(KeycloakSpecKeycloakDeploymentSpecResourcesRequestsOutput{})
	pulumi.RegisterOutputType(KeycloakSpecMigrationOutput{})
	pulumi.RegisterOutputType(KeycloakSpecMigrationPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecMigrationBackupsOutput{})
	pulumi.RegisterOutputType(KeycloakSpecMigrationBackupsPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPodDisruptionBudgetOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPodDisruptionBudgetPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPostgresDeploymentSpecOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPostgresDeploymentSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPostgresDeploymentSpecResourcesOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPostgresDeploymentSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPostgresDeploymentSpecResourcesLimitsOutput{})
	pulumi.RegisterOutputType(KeycloakSpecPostgresDeploymentSpecResourcesRequestsOutput{})
	pulumi.RegisterOutputType(KeycloakStatusOutput{})
	pulumi.RegisterOutputType(KeycloakStatusPtrOutput{})
	pulumi.RegisterOutputType(KeycloakStatusSecondaryResourcesOutput{})
	pulumi.RegisterOutputType(KeycloakUserTypeOutput{})
	pulumi.RegisterOutputType(KeycloakUserMetadataOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecPtrOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecRealmSelectorOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecRealmSelectorPtrOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecRealmSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecRealmSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecRealmSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserPtrOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserAttributesOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserClientRolesOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserCredentialsOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserCredentialsArrayOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserFederatedIdentitiesOutput{})
	pulumi.RegisterOutputType(KeycloakUserSpecUserFederatedIdentitiesArrayOutput{})
	pulumi.RegisterOutputType(KeycloakUserStatusOutput{})
	pulumi.RegisterOutputType(KeycloakUserStatusPtrOutput{})
}
