// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// KeycloakUser is the Schema for the keycloakusers API.
type KeycloakUser struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec KeycloakUserSpecPtrOutput `pulumi:"spec"`
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status KeycloakUserStatusPtrOutput `pulumi:"status"`
}

// NewKeycloakUser registers a new resource with the given unique name, arguments, and options.
func NewKeycloakUser(ctx *pulumi.Context,
	name string, args *KeycloakUserArgs, opts ...pulumi.ResourceOption) (*KeycloakUser, error) {
	if args == nil {
		args = &KeycloakUserArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("keycloak.org/v1alpha1")
	args.Kind = pulumi.StringPtr("KeycloakUser")
	var resource KeycloakUser
	err := ctx.RegisterResource("kubernetes:keycloak.org/v1alpha1:KeycloakUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeycloakUser gets an existing KeycloakUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeycloakUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeycloakUserState, opts ...pulumi.ResourceOption) (*KeycloakUser, error) {
	var resource KeycloakUser
	err := ctx.ReadResource("kubernetes:keycloak.org/v1alpha1:KeycloakUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeycloakUser resources.
type keycloakUserState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec *KeycloakUserSpec `pulumi:"spec"`
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status *KeycloakUserStatus `pulumi:"status"`
}

type KeycloakUserState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec KeycloakUserSpecPtrInput
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status KeycloakUserStatusPtrInput
}

func (KeycloakUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*keycloakUserState)(nil)).Elem()
}

type keycloakUserArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec *KeycloakUserSpec `pulumi:"spec"`
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status *KeycloakUserStatus `pulumi:"status"`
}

// The set of arguments for constructing a KeycloakUser resource.
type KeycloakUserArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KeycloakUserSpec defines the desired state of KeycloakUser.
	Spec KeycloakUserSpecPtrInput
	// KeycloakUserStatus defines the observed state of KeycloakUser.
	Status KeycloakUserStatusPtrInput
}

func (KeycloakUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keycloakUserArgs)(nil)).Elem()
}
