// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Pgbench is the Schema for the pgbenches API
type Pgbench struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// PgbenchSpec describes a pgbench benchmark job
	Spec PgbenchSpecPtrOutput `pulumi:"spec"`
	// BenchmarkStatus describes the current state of the benchmark
	Status PgbenchStatusPtrOutput `pulumi:"status"`
}

// NewPgbench registers a new resource with the given unique name, arguments, and options.
func NewPgbench(ctx *pulumi.Context,
	name string, args *PgbenchArgs, opts ...pulumi.ResourceOption) (*Pgbench, error) {
	if args == nil {
		args = &PgbenchArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("perf.kubestone.xridge.io/v1alpha1")
	args.Kind = pulumi.StringPtr("Pgbench")
	var resource Pgbench
	err := ctx.RegisterResource("kubernetes:perf.kubestone.xridge.io/v1alpha1:Pgbench", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPgbench gets an existing Pgbench resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPgbench(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PgbenchState, opts ...pulumi.ResourceOption) (*Pgbench, error) {
	var resource Pgbench
	err := ctx.ReadResource("kubernetes:perf.kubestone.xridge.io/v1alpha1:Pgbench", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pgbench resources.
type pgbenchState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PgbenchSpec describes a pgbench benchmark job
	Spec *PgbenchSpec `pulumi:"spec"`
	// BenchmarkStatus describes the current state of the benchmark
	Status *PgbenchStatus `pulumi:"status"`
}

type PgbenchState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PgbenchSpec describes a pgbench benchmark job
	Spec PgbenchSpecPtrInput
	// BenchmarkStatus describes the current state of the benchmark
	Status PgbenchStatusPtrInput
}

func (PgbenchState) ElementType() reflect.Type {
	return reflect.TypeOf((*pgbenchState)(nil)).Elem()
}

type pgbenchArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PgbenchSpec describes a pgbench benchmark job
	Spec *PgbenchSpec `pulumi:"spec"`
	// BenchmarkStatus describes the current state of the benchmark
	Status *PgbenchStatus `pulumi:"status"`
}

// The set of arguments for constructing a Pgbench resource.
type PgbenchArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PgbenchSpec describes a pgbench benchmark job
	Spec PgbenchSpecPtrInput
	// BenchmarkStatus describes the current state of the benchmark
	Status PgbenchStatusPtrInput
}

func (PgbenchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pgbenchArgs)(nil)).Elem()
}
