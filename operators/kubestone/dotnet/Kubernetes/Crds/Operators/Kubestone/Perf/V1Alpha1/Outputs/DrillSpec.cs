// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Perf.V1Alpha1
{

    [OutputType]
    public sealed class DrillSpec
    {
        /// <summary>
        /// BenchmarkFile is the entry point file (passed to --benchmark) specified to drill.
        /// </summary>
        public readonly string BenchmarkFile;
        /// <summary>
        /// BenchmarksVolume holds the content of benchmark files. The key of the map specifies the filename and the value is the content of the file. ConfigMap is created from the map which is mounted as benchmarks directory to the benchmark pod.
        /// </summary>
        public readonly ImmutableDictionary<string, string> BenchmarksVolume;
        /// <summary>
        /// Image defines the drill docker image used for the benchmark
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Perf.V1Alpha1.DrillSpecImage Image;
        /// <summary>
        /// Options are appended to the options parameter set of drill
        /// </summary>
        public readonly string Options;
        /// <summary>
        /// PodConfig contains the configuration for the benchmark pod, including pod labels and scheduling policies (affinity, toleration, node selector...)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Perf.V1Alpha1.DrillSpecPodConfig PodConfig;

        [OutputConstructor]
        private DrillSpec(
            string benchmarkFile,

            ImmutableDictionary<string, string> benchmarksVolume,

            Pulumi.Kubernetes.Types.Outputs.Perf.V1Alpha1.DrillSpecImage image,

            string options,

            Pulumi.Kubernetes.Types.Outputs.Perf.V1Alpha1.DrillSpecPodConfig podConfig)
        {
            BenchmarkFile = benchmarkFile;
            BenchmarksVolume = benchmarksVolume;
            Image = image;
            Options = options;
            PodConfig = podConfig;
        }
    }
}
