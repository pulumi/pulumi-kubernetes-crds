// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Perf.V1Alpha1
{

    /// <summary>
    /// PgbenchSpec describes a pgbench benchmark job
    /// </summary>
    public class PgbenchSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Args contains the command line arguments passed to the main pgbench container
        /// </summary>
        [Input("args")]
        public Input<string>? Args { get; set; }

        /// <summary>
        /// Image defines the docker image used for the benchmark
        /// </summary>
        [Input("image", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Perf.V1Alpha1.PgbenchSpecImageArgs> Image { get; set; } = null!;

        /// <summary>
        /// InitArgs contains the command line arguments passed to the init container
        /// </summary>
        [Input("initArgs")]
        public Input<string>? InitArgs { get; set; }

        /// <summary>
        /// PodConfig contains the configuration for the benchmark pod, including pod labels and scheduling policies (affinity, toleration, node selector...)
        /// </summary>
        [Input("podConfig")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Perf.V1Alpha1.PgbenchSpecPodConfigArgs>? PodConfig { get; set; }

        /// <summary>
        /// Postgres contains the configuration parameters for the PostgreSQL database that will run the benchmark
        /// </summary>
        [Input("postgres", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Perf.V1Alpha1.PgbenchSpecPostgresArgs> Postgres { get; set; } = null!;

        public PgbenchSpecArgs()
        {
        }
    }
}
