// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApicuritoType struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       map[string]interface{} `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// ApicuritoTypeInput is an input type that accepts ApicuritoTypeArgs and ApicuritoTypeOutput values.
// You can construct a concrete instance of `ApicuritoTypeInput` via:
//
//          ApicuritoTypeArgs{...}
type ApicuritoTypeInput interface {
	pulumi.Input

	ToApicuritoTypeOutput() ApicuritoTypeOutput
	ToApicuritoTypeOutputWithContext(context.Context) ApicuritoTypeOutput
}

type ApicuritoTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       pulumi.MapInput           `pulumi:"spec"`
	Status     pulumi.MapInput           `pulumi:"status"`
}

func (ApicuritoTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoType)(nil)).Elem()
}

func (i ApicuritoTypeArgs) ToApicuritoTypeOutput() ApicuritoTypeOutput {
	return i.ToApicuritoTypeOutputWithContext(context.Background())
}

func (i ApicuritoTypeArgs) ToApicuritoTypeOutputWithContext(ctx context.Context) ApicuritoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicuritoTypeOutput)
}

type ApicuritoTypeOutput struct{ *pulumi.OutputState }

func (ApicuritoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoType)(nil)).Elem()
}

func (o ApicuritoTypeOutput) ToApicuritoTypeOutput() ApicuritoTypeOutput {
	return o
}

func (o ApicuritoTypeOutput) ToApicuritoTypeOutputWithContext(ctx context.Context) ApicuritoTypeOutput {
	return o
}

func (o ApicuritoTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicuritoType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ApicuritoTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApicuritoType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ApicuritoTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ApicuritoType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ApicuritoTypeOutput) Spec() pulumi.MapOutput {
	return o.ApplyT(func(v ApicuritoType) map[string]interface{} { return v.Spec }).(pulumi.MapOutput)
}

func (o ApicuritoTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ApicuritoType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type ApicuritoMetadata struct {
}

// ApicuritoMetadataInput is an input type that accepts ApicuritoMetadataArgs and ApicuritoMetadataOutput values.
// You can construct a concrete instance of `ApicuritoMetadataInput` via:
//
//          ApicuritoMetadataArgs{...}
type ApicuritoMetadataInput interface {
	pulumi.Input

	ToApicuritoMetadataOutput() ApicuritoMetadataOutput
	ToApicuritoMetadataOutputWithContext(context.Context) ApicuritoMetadataOutput
}

type ApicuritoMetadataArgs struct {
}

func (ApicuritoMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoMetadata)(nil)).Elem()
}

func (i ApicuritoMetadataArgs) ToApicuritoMetadataOutput() ApicuritoMetadataOutput {
	return i.ToApicuritoMetadataOutputWithContext(context.Background())
}

func (i ApicuritoMetadataArgs) ToApicuritoMetadataOutputWithContext(ctx context.Context) ApicuritoMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicuritoMetadataOutput)
}

type ApicuritoMetadataOutput struct{ *pulumi.OutputState }

func (ApicuritoMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoMetadata)(nil)).Elem()
}

func (o ApicuritoMetadataOutput) ToApicuritoMetadataOutput() ApicuritoMetadataOutput {
	return o
}

func (o ApicuritoMetadataOutput) ToApicuritoMetadataOutputWithContext(ctx context.Context) ApicuritoMetadataOutput {
	return o
}

type ApicuritoSpec struct {
}

// ApicuritoSpecInput is an input type that accepts ApicuritoSpecArgs and ApicuritoSpecOutput values.
// You can construct a concrete instance of `ApicuritoSpecInput` via:
//
//          ApicuritoSpecArgs{...}
type ApicuritoSpecInput interface {
	pulumi.Input

	ToApicuritoSpecOutput() ApicuritoSpecOutput
	ToApicuritoSpecOutputWithContext(context.Context) ApicuritoSpecOutput
}

type ApicuritoSpecArgs struct {
}

func (ApicuritoSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoSpec)(nil)).Elem()
}

func (i ApicuritoSpecArgs) ToApicuritoSpecOutput() ApicuritoSpecOutput {
	return i.ToApicuritoSpecOutputWithContext(context.Background())
}

func (i ApicuritoSpecArgs) ToApicuritoSpecOutputWithContext(ctx context.Context) ApicuritoSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicuritoSpecOutput)
}

type ApicuritoSpecOutput struct{ *pulumi.OutputState }

func (ApicuritoSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoSpec)(nil)).Elem()
}

func (o ApicuritoSpecOutput) ToApicuritoSpecOutput() ApicuritoSpecOutput {
	return o
}

func (o ApicuritoSpecOutput) ToApicuritoSpecOutputWithContext(ctx context.Context) ApicuritoSpecOutput {
	return o
}

type ApicuritoStatus struct {
}

// ApicuritoStatusInput is an input type that accepts ApicuritoStatusArgs and ApicuritoStatusOutput values.
// You can construct a concrete instance of `ApicuritoStatusInput` via:
//
//          ApicuritoStatusArgs{...}
type ApicuritoStatusInput interface {
	pulumi.Input

	ToApicuritoStatusOutput() ApicuritoStatusOutput
	ToApicuritoStatusOutputWithContext(context.Context) ApicuritoStatusOutput
}

type ApicuritoStatusArgs struct {
}

func (ApicuritoStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoStatus)(nil)).Elem()
}

func (i ApicuritoStatusArgs) ToApicuritoStatusOutput() ApicuritoStatusOutput {
	return i.ToApicuritoStatusOutputWithContext(context.Background())
}

func (i ApicuritoStatusArgs) ToApicuritoStatusOutputWithContext(ctx context.Context) ApicuritoStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApicuritoStatusOutput)
}

type ApicuritoStatusOutput struct{ *pulumi.OutputState }

func (ApicuritoStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApicuritoStatus)(nil)).Elem()
}

func (o ApicuritoStatusOutput) ToApicuritoStatusOutput() ApicuritoStatusOutput {
	return o
}

func (o ApicuritoStatusOutput) ToApicuritoStatusOutputWithContext(ctx context.Context) ApicuritoStatusOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ApicuritoTypeOutput{})
	pulumi.RegisterOutputType(ApicuritoMetadataOutput{})
	pulumi.RegisterOutputType(ApicuritoSpecOutput{})
	pulumi.RegisterOutputType(ApicuritoStatusOutput{})
}
