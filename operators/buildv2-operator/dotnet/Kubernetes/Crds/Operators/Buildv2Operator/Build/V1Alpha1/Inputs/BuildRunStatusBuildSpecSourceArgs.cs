// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Build.V1Alpha1
{

    /// <summary>
    /// Source refers to the Git repository containing the source code to be built.
    /// </summary>
    public class BuildRunStatusBuildSpecSourceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ContextDir is a path to subfolder in the repo. Optional.
        /// </summary>
        [Input("contextDir")]
        public Input<string>? ContextDir { get; set; }

        /// <summary>
        /// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
        /// </summary>
        [Input("credentials")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Build.V1Alpha1.BuildRunStatusBuildSpecSourceCredentialsArgs>? Credentials { get; set; }

        /// <summary>
        /// Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.
        /// </summary>
        [Input("flavor")]
        public Input<string>? Flavor { get; set; }

        /// <summary>
        /// HTTPProxy is optional.
        /// </summary>
        [Input("httpProxy")]
        public Input<string>? HttpProxy { get; set; }

        /// <summary>
        /// HTTPSProxy is optional.
        /// </summary>
        [Input("httpsProxy")]
        public Input<string>? HttpsProxy { get; set; }

        /// <summary>
        /// NoProxy can be used to specify domains for which no proxying should be performed. Optional.
        /// </summary>
        [Input("noProxy")]
        public Input<string>? NoProxy { get; set; }

        /// <summary>
        /// Ref is a git reference. Optional. "master" is used by default.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        /// <summary>
        /// URL of the git repo
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public BuildRunStatusBuildSpecSourceArgs()
        {
        }
    }
}
