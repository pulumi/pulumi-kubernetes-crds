// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Build is the Schema for the builds API
type BuildType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildSpec defines the desired state of Build
	Spec *BuildSpec `pulumi:"spec"`
	// BuildStatus defines the observed state of Build
	Status map[string]interface{} `pulumi:"status"`
}

// BuildTypeInput is an input type that accepts BuildTypeArgs and BuildTypeOutput values.
// You can construct a concrete instance of `BuildTypeInput` via:
//
//          BuildTypeArgs{...}
type BuildTypeInput interface {
	pulumi.Input

	ToBuildTypeOutput() BuildTypeOutput
	ToBuildTypeOutputWithContext(context.Context) BuildTypeOutput
}

// Build is the Schema for the builds API
type BuildTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BuildSpec defines the desired state of Build
	Spec BuildSpecPtrInput `pulumi:"spec"`
	// BuildStatus defines the observed state of Build
	Status pulumi.MapInput `pulumi:"status"`
}

func (BuildTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildType)(nil)).Elem()
}

func (i BuildTypeArgs) ToBuildTypeOutput() BuildTypeOutput {
	return i.ToBuildTypeOutputWithContext(context.Background())
}

func (i BuildTypeArgs) ToBuildTypeOutputWithContext(ctx context.Context) BuildTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildTypeOutput)
}

// Build is the Schema for the builds API
type BuildTypeOutput struct{ *pulumi.OutputState }

func (BuildTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildType)(nil)).Elem()
}

func (o BuildTypeOutput) ToBuildTypeOutput() BuildTypeOutput {
	return o
}

func (o BuildTypeOutput) ToBuildTypeOutputWithContext(ctx context.Context) BuildTypeOutput {
	return o
}

func (o BuildTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BuildTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BuildTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BuildType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BuildSpec defines the desired state of Build
func (o BuildTypeOutput) Spec() BuildSpecPtrOutput {
	return o.ApplyT(func(v BuildType) *BuildSpec { return v.Spec }).(BuildSpecPtrOutput)
}

// BuildStatus defines the observed state of Build
func (o BuildTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v BuildType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type BuildMetadata struct {
}

// BuildMetadataInput is an input type that accepts BuildMetadataArgs and BuildMetadataOutput values.
// You can construct a concrete instance of `BuildMetadataInput` via:
//
//          BuildMetadataArgs{...}
type BuildMetadataInput interface {
	pulumi.Input

	ToBuildMetadataOutput() BuildMetadataOutput
	ToBuildMetadataOutputWithContext(context.Context) BuildMetadataOutput
}

type BuildMetadataArgs struct {
}

func (BuildMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildMetadata)(nil)).Elem()
}

func (i BuildMetadataArgs) ToBuildMetadataOutput() BuildMetadataOutput {
	return i.ToBuildMetadataOutputWithContext(context.Background())
}

func (i BuildMetadataArgs) ToBuildMetadataOutputWithContext(ctx context.Context) BuildMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildMetadataOutput)
}

type BuildMetadataOutput struct{ *pulumi.OutputState }

func (BuildMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildMetadata)(nil)).Elem()
}

func (o BuildMetadataOutput) ToBuildMetadataOutput() BuildMetadataOutput {
	return o
}

func (o BuildMetadataOutput) ToBuildMetadataOutputWithContext(ctx context.Context) BuildMetadataOutput {
	return o
}

// BuildRun is the Schema for the buildruns API
type BuildRunType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildRunSpec defines the desired state of BuildRun
	Spec *BuildRunSpec `pulumi:"spec"`
	// BuildRunStatus defines the observed state of BuildRun
	Status *BuildRunStatus `pulumi:"status"`
}

// BuildRunTypeInput is an input type that accepts BuildRunTypeArgs and BuildRunTypeOutput values.
// You can construct a concrete instance of `BuildRunTypeInput` via:
//
//          BuildRunTypeArgs{...}
type BuildRunTypeInput interface {
	pulumi.Input

	ToBuildRunTypeOutput() BuildRunTypeOutput
	ToBuildRunTypeOutputWithContext(context.Context) BuildRunTypeOutput
}

// BuildRun is the Schema for the buildruns API
type BuildRunTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BuildRunSpec defines the desired state of BuildRun
	Spec BuildRunSpecPtrInput `pulumi:"spec"`
	// BuildRunStatus defines the observed state of BuildRun
	Status BuildRunStatusPtrInput `pulumi:"status"`
}

func (BuildRunTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunType)(nil)).Elem()
}

func (i BuildRunTypeArgs) ToBuildRunTypeOutput() BuildRunTypeOutput {
	return i.ToBuildRunTypeOutputWithContext(context.Background())
}

func (i BuildRunTypeArgs) ToBuildRunTypeOutputWithContext(ctx context.Context) BuildRunTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunTypeOutput)
}

// BuildRun is the Schema for the buildruns API
type BuildRunTypeOutput struct{ *pulumi.OutputState }

func (BuildRunTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunType)(nil)).Elem()
}

func (o BuildRunTypeOutput) ToBuildRunTypeOutput() BuildRunTypeOutput {
	return o
}

func (o BuildRunTypeOutput) ToBuildRunTypeOutputWithContext(ctx context.Context) BuildRunTypeOutput {
	return o
}

func (o BuildRunTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BuildRunTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BuildRunTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BuildRunType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BuildRunSpec defines the desired state of BuildRun
func (o BuildRunTypeOutput) Spec() BuildRunSpecPtrOutput {
	return o.ApplyT(func(v BuildRunType) *BuildRunSpec { return v.Spec }).(BuildRunSpecPtrOutput)
}

// BuildRunStatus defines the observed state of BuildRun
func (o BuildRunTypeOutput) Status() BuildRunStatusPtrOutput {
	return o.ApplyT(func(v BuildRunType) *BuildRunStatus { return v.Status }).(BuildRunStatusPtrOutput)
}

type BuildRunMetadata struct {
}

// BuildRunMetadataInput is an input type that accepts BuildRunMetadataArgs and BuildRunMetadataOutput values.
// You can construct a concrete instance of `BuildRunMetadataInput` via:
//
//          BuildRunMetadataArgs{...}
type BuildRunMetadataInput interface {
	pulumi.Input

	ToBuildRunMetadataOutput() BuildRunMetadataOutput
	ToBuildRunMetadataOutputWithContext(context.Context) BuildRunMetadataOutput
}

type BuildRunMetadataArgs struct {
}

func (BuildRunMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunMetadata)(nil)).Elem()
}

func (i BuildRunMetadataArgs) ToBuildRunMetadataOutput() BuildRunMetadataOutput {
	return i.ToBuildRunMetadataOutputWithContext(context.Background())
}

func (i BuildRunMetadataArgs) ToBuildRunMetadataOutputWithContext(ctx context.Context) BuildRunMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunMetadataOutput)
}

type BuildRunMetadataOutput struct{ *pulumi.OutputState }

func (BuildRunMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunMetadata)(nil)).Elem()
}

func (o BuildRunMetadataOutput) ToBuildRunMetadataOutput() BuildRunMetadataOutput {
	return o
}

func (o BuildRunMetadataOutput) ToBuildRunMetadataOutputWithContext(ctx context.Context) BuildRunMetadataOutput {
	return o
}

// BuildRunSpec defines the desired state of BuildRun
type BuildRunSpec struct {
	// BuildRef refers to the Build
	BuildRef BuildRunSpecBuildRef `pulumi:"buildRef"`
	// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources *BuildRunSpecResources `pulumi:"resources"`
	// ServiceAccount refers to the kubernetes serviceaccount which is used for resource control. Default serviceaccount will be set if it is empty
	ServiceAccount *string `pulumi:"serviceAccount"`
}

// BuildRunSpecInput is an input type that accepts BuildRunSpecArgs and BuildRunSpecOutput values.
// You can construct a concrete instance of `BuildRunSpecInput` via:
//
//          BuildRunSpecArgs{...}
type BuildRunSpecInput interface {
	pulumi.Input

	ToBuildRunSpecOutput() BuildRunSpecOutput
	ToBuildRunSpecOutputWithContext(context.Context) BuildRunSpecOutput
}

// BuildRunSpec defines the desired state of BuildRun
type BuildRunSpecArgs struct {
	// BuildRef refers to the Build
	BuildRef BuildRunSpecBuildRefInput `pulumi:"buildRef"`
	// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources BuildRunSpecResourcesPtrInput `pulumi:"resources"`
	// ServiceAccount refers to the kubernetes serviceaccount which is used for resource control. Default serviceaccount will be set if it is empty
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
}

func (BuildRunSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpec)(nil)).Elem()
}

func (i BuildRunSpecArgs) ToBuildRunSpecOutput() BuildRunSpecOutput {
	return i.ToBuildRunSpecOutputWithContext(context.Background())
}

func (i BuildRunSpecArgs) ToBuildRunSpecOutputWithContext(ctx context.Context) BuildRunSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecOutput)
}

func (i BuildRunSpecArgs) ToBuildRunSpecPtrOutput() BuildRunSpecPtrOutput {
	return i.ToBuildRunSpecPtrOutputWithContext(context.Background())
}

func (i BuildRunSpecArgs) ToBuildRunSpecPtrOutputWithContext(ctx context.Context) BuildRunSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecOutput).ToBuildRunSpecPtrOutputWithContext(ctx)
}

// BuildRunSpecPtrInput is an input type that accepts BuildRunSpecArgs, BuildRunSpecPtr and BuildRunSpecPtrOutput values.
// You can construct a concrete instance of `BuildRunSpecPtrInput` via:
//
//          BuildRunSpecArgs{...}
//
//  or:
//
//          nil
type BuildRunSpecPtrInput interface {
	pulumi.Input

	ToBuildRunSpecPtrOutput() BuildRunSpecPtrOutput
	ToBuildRunSpecPtrOutputWithContext(context.Context) BuildRunSpecPtrOutput
}

type buildRunSpecPtrType BuildRunSpecArgs

func BuildRunSpecPtr(v *BuildRunSpecArgs) BuildRunSpecPtrInput {
	return (*buildRunSpecPtrType)(v)
}

func (*buildRunSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunSpec)(nil)).Elem()
}

func (i *buildRunSpecPtrType) ToBuildRunSpecPtrOutput() BuildRunSpecPtrOutput {
	return i.ToBuildRunSpecPtrOutputWithContext(context.Background())
}

func (i *buildRunSpecPtrType) ToBuildRunSpecPtrOutputWithContext(ctx context.Context) BuildRunSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecPtrOutput)
}

// BuildRunSpec defines the desired state of BuildRun
type BuildRunSpecOutput struct{ *pulumi.OutputState }

func (BuildRunSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpec)(nil)).Elem()
}

func (o BuildRunSpecOutput) ToBuildRunSpecOutput() BuildRunSpecOutput {
	return o
}

func (o BuildRunSpecOutput) ToBuildRunSpecOutputWithContext(ctx context.Context) BuildRunSpecOutput {
	return o
}

func (o BuildRunSpecOutput) ToBuildRunSpecPtrOutput() BuildRunSpecPtrOutput {
	return o.ToBuildRunSpecPtrOutputWithContext(context.Background())
}

func (o BuildRunSpecOutput) ToBuildRunSpecPtrOutputWithContext(ctx context.Context) BuildRunSpecPtrOutput {
	return o.ApplyT(func(v BuildRunSpec) *BuildRunSpec {
		return &v
	}).(BuildRunSpecPtrOutput)
}

// BuildRef refers to the Build
func (o BuildRunSpecOutput) BuildRef() BuildRunSpecBuildRefOutput {
	return o.ApplyT(func(v BuildRunSpec) BuildRunSpecBuildRef { return v.BuildRef }).(BuildRunSpecBuildRefOutput)
}

// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildRunSpecOutput) Resources() BuildRunSpecResourcesPtrOutput {
	return o.ApplyT(func(v BuildRunSpec) *BuildRunSpecResources { return v.Resources }).(BuildRunSpecResourcesPtrOutput)
}

// ServiceAccount refers to the kubernetes serviceaccount which is used for resource control. Default serviceaccount will be set if it is empty
func (o BuildRunSpecOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunSpec) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type BuildRunSpecPtrOutput struct{ *pulumi.OutputState }

func (BuildRunSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunSpec)(nil)).Elem()
}

func (o BuildRunSpecPtrOutput) ToBuildRunSpecPtrOutput() BuildRunSpecPtrOutput {
	return o
}

func (o BuildRunSpecPtrOutput) ToBuildRunSpecPtrOutputWithContext(ctx context.Context) BuildRunSpecPtrOutput {
	return o
}

func (o BuildRunSpecPtrOutput) Elem() BuildRunSpecOutput {
	return o.ApplyT(func(v *BuildRunSpec) BuildRunSpec { return *v }).(BuildRunSpecOutput)
}

// BuildRef refers to the Build
func (o BuildRunSpecPtrOutput) BuildRef() BuildRunSpecBuildRefPtrOutput {
	return o.ApplyT(func(v *BuildRunSpec) *BuildRunSpecBuildRef {
		if v == nil {
			return nil
		}
		return &v.BuildRef
	}).(BuildRunSpecBuildRefPtrOutput)
}

// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildRunSpecPtrOutput) Resources() BuildRunSpecResourcesPtrOutput {
	return o.ApplyT(func(v *BuildRunSpec) *BuildRunSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(BuildRunSpecResourcesPtrOutput)
}

// ServiceAccount refers to the kubernetes serviceaccount which is used for resource control. Default serviceaccount will be set if it is empty
func (o BuildRunSpecPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// BuildRef refers to the Build
type BuildRunSpecBuildRef struct {
	// API version of the referent
	ApiVersion *string `pulumi:"apiVersion"`
	// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name *string `pulumi:"name"`
}

// BuildRunSpecBuildRefInput is an input type that accepts BuildRunSpecBuildRefArgs and BuildRunSpecBuildRefOutput values.
// You can construct a concrete instance of `BuildRunSpecBuildRefInput` via:
//
//          BuildRunSpecBuildRefArgs{...}
type BuildRunSpecBuildRefInput interface {
	pulumi.Input

	ToBuildRunSpecBuildRefOutput() BuildRunSpecBuildRefOutput
	ToBuildRunSpecBuildRefOutputWithContext(context.Context) BuildRunSpecBuildRefOutput
}

// BuildRef refers to the Build
type BuildRunSpecBuildRefArgs struct {
	// API version of the referent
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildRunSpecBuildRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecBuildRef)(nil)).Elem()
}

func (i BuildRunSpecBuildRefArgs) ToBuildRunSpecBuildRefOutput() BuildRunSpecBuildRefOutput {
	return i.ToBuildRunSpecBuildRefOutputWithContext(context.Background())
}

func (i BuildRunSpecBuildRefArgs) ToBuildRunSpecBuildRefOutputWithContext(ctx context.Context) BuildRunSpecBuildRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecBuildRefOutput)
}

func (i BuildRunSpecBuildRefArgs) ToBuildRunSpecBuildRefPtrOutput() BuildRunSpecBuildRefPtrOutput {
	return i.ToBuildRunSpecBuildRefPtrOutputWithContext(context.Background())
}

func (i BuildRunSpecBuildRefArgs) ToBuildRunSpecBuildRefPtrOutputWithContext(ctx context.Context) BuildRunSpecBuildRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecBuildRefOutput).ToBuildRunSpecBuildRefPtrOutputWithContext(ctx)
}

// BuildRunSpecBuildRefPtrInput is an input type that accepts BuildRunSpecBuildRefArgs, BuildRunSpecBuildRefPtr and BuildRunSpecBuildRefPtrOutput values.
// You can construct a concrete instance of `BuildRunSpecBuildRefPtrInput` via:
//
//          BuildRunSpecBuildRefArgs{...}
//
//  or:
//
//          nil
type BuildRunSpecBuildRefPtrInput interface {
	pulumi.Input

	ToBuildRunSpecBuildRefPtrOutput() BuildRunSpecBuildRefPtrOutput
	ToBuildRunSpecBuildRefPtrOutputWithContext(context.Context) BuildRunSpecBuildRefPtrOutput
}

type buildRunSpecBuildRefPtrType BuildRunSpecBuildRefArgs

func BuildRunSpecBuildRefPtr(v *BuildRunSpecBuildRefArgs) BuildRunSpecBuildRefPtrInput {
	return (*buildRunSpecBuildRefPtrType)(v)
}

func (*buildRunSpecBuildRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunSpecBuildRef)(nil)).Elem()
}

func (i *buildRunSpecBuildRefPtrType) ToBuildRunSpecBuildRefPtrOutput() BuildRunSpecBuildRefPtrOutput {
	return i.ToBuildRunSpecBuildRefPtrOutputWithContext(context.Background())
}

func (i *buildRunSpecBuildRefPtrType) ToBuildRunSpecBuildRefPtrOutputWithContext(ctx context.Context) BuildRunSpecBuildRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecBuildRefPtrOutput)
}

// BuildRef refers to the Build
type BuildRunSpecBuildRefOutput struct{ *pulumi.OutputState }

func (BuildRunSpecBuildRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecBuildRef)(nil)).Elem()
}

func (o BuildRunSpecBuildRefOutput) ToBuildRunSpecBuildRefOutput() BuildRunSpecBuildRefOutput {
	return o
}

func (o BuildRunSpecBuildRefOutput) ToBuildRunSpecBuildRefOutputWithContext(ctx context.Context) BuildRunSpecBuildRefOutput {
	return o
}

func (o BuildRunSpecBuildRefOutput) ToBuildRunSpecBuildRefPtrOutput() BuildRunSpecBuildRefPtrOutput {
	return o.ToBuildRunSpecBuildRefPtrOutputWithContext(context.Background())
}

func (o BuildRunSpecBuildRefOutput) ToBuildRunSpecBuildRefPtrOutputWithContext(ctx context.Context) BuildRunSpecBuildRefPtrOutput {
	return o.ApplyT(func(v BuildRunSpecBuildRef) *BuildRunSpecBuildRef {
		return &v
	}).(BuildRunSpecBuildRefPtrOutput)
}

// API version of the referent
func (o BuildRunSpecBuildRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunSpecBuildRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
func (o BuildRunSpecBuildRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunSpecBuildRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildRunSpecBuildRefPtrOutput struct{ *pulumi.OutputState }

func (BuildRunSpecBuildRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunSpecBuildRef)(nil)).Elem()
}

func (o BuildRunSpecBuildRefPtrOutput) ToBuildRunSpecBuildRefPtrOutput() BuildRunSpecBuildRefPtrOutput {
	return o
}

func (o BuildRunSpecBuildRefPtrOutput) ToBuildRunSpecBuildRefPtrOutputWithContext(ctx context.Context) BuildRunSpecBuildRefPtrOutput {
	return o
}

func (o BuildRunSpecBuildRefPtrOutput) Elem() BuildRunSpecBuildRefOutput {
	return o.ApplyT(func(v *BuildRunSpecBuildRef) BuildRunSpecBuildRef { return *v }).(BuildRunSpecBuildRefOutput)
}

// API version of the referent
func (o BuildRunSpecBuildRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunSpecBuildRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
func (o BuildRunSpecBuildRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunSpecBuildRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]string `pulumi:"requests"`
}

// BuildRunSpecResourcesInput is an input type that accepts BuildRunSpecResourcesArgs and BuildRunSpecResourcesOutput values.
// You can construct a concrete instance of `BuildRunSpecResourcesInput` via:
//
//          BuildRunSpecResourcesArgs{...}
type BuildRunSpecResourcesInput interface {
	pulumi.Input

	ToBuildRunSpecResourcesOutput() BuildRunSpecResourcesOutput
	ToBuildRunSpecResourcesOutputWithContext(context.Context) BuildRunSpecResourcesOutput
}

// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (BuildRunSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecResources)(nil)).Elem()
}

func (i BuildRunSpecResourcesArgs) ToBuildRunSpecResourcesOutput() BuildRunSpecResourcesOutput {
	return i.ToBuildRunSpecResourcesOutputWithContext(context.Background())
}

func (i BuildRunSpecResourcesArgs) ToBuildRunSpecResourcesOutputWithContext(ctx context.Context) BuildRunSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecResourcesOutput)
}

func (i BuildRunSpecResourcesArgs) ToBuildRunSpecResourcesPtrOutput() BuildRunSpecResourcesPtrOutput {
	return i.ToBuildRunSpecResourcesPtrOutputWithContext(context.Background())
}

func (i BuildRunSpecResourcesArgs) ToBuildRunSpecResourcesPtrOutputWithContext(ctx context.Context) BuildRunSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecResourcesOutput).ToBuildRunSpecResourcesPtrOutputWithContext(ctx)
}

// BuildRunSpecResourcesPtrInput is an input type that accepts BuildRunSpecResourcesArgs, BuildRunSpecResourcesPtr and BuildRunSpecResourcesPtrOutput values.
// You can construct a concrete instance of `BuildRunSpecResourcesPtrInput` via:
//
//          BuildRunSpecResourcesArgs{...}
//
//  or:
//
//          nil
type BuildRunSpecResourcesPtrInput interface {
	pulumi.Input

	ToBuildRunSpecResourcesPtrOutput() BuildRunSpecResourcesPtrOutput
	ToBuildRunSpecResourcesPtrOutputWithContext(context.Context) BuildRunSpecResourcesPtrOutput
}

type buildRunSpecResourcesPtrType BuildRunSpecResourcesArgs

func BuildRunSpecResourcesPtr(v *BuildRunSpecResourcesArgs) BuildRunSpecResourcesPtrInput {
	return (*buildRunSpecResourcesPtrType)(v)
}

func (*buildRunSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunSpecResources)(nil)).Elem()
}

func (i *buildRunSpecResourcesPtrType) ToBuildRunSpecResourcesPtrOutput() BuildRunSpecResourcesPtrOutput {
	return i.ToBuildRunSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *buildRunSpecResourcesPtrType) ToBuildRunSpecResourcesPtrOutputWithContext(ctx context.Context) BuildRunSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecResourcesPtrOutput)
}

// Compute Resources required by the build container which can overwrite the configuration in Build. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesOutput struct{ *pulumi.OutputState }

func (BuildRunSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecResources)(nil)).Elem()
}

func (o BuildRunSpecResourcesOutput) ToBuildRunSpecResourcesOutput() BuildRunSpecResourcesOutput {
	return o
}

func (o BuildRunSpecResourcesOutput) ToBuildRunSpecResourcesOutputWithContext(ctx context.Context) BuildRunSpecResourcesOutput {
	return o
}

func (o BuildRunSpecResourcesOutput) ToBuildRunSpecResourcesPtrOutput() BuildRunSpecResourcesPtrOutput {
	return o.ToBuildRunSpecResourcesPtrOutputWithContext(context.Background())
}

func (o BuildRunSpecResourcesOutput) ToBuildRunSpecResourcesPtrOutputWithContext(ctx context.Context) BuildRunSpecResourcesPtrOutput {
	return o.ApplyT(func(v BuildRunSpecResources) *BuildRunSpecResources {
		return &v
	}).(BuildRunSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildRunSpecResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildRunSpecResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildRunSpecResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildRunSpecResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type BuildRunSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (BuildRunSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunSpecResources)(nil)).Elem()
}

func (o BuildRunSpecResourcesPtrOutput) ToBuildRunSpecResourcesPtrOutput() BuildRunSpecResourcesPtrOutput {
	return o
}

func (o BuildRunSpecResourcesPtrOutput) ToBuildRunSpecResourcesPtrOutputWithContext(ctx context.Context) BuildRunSpecResourcesPtrOutput {
	return o
}

func (o BuildRunSpecResourcesPtrOutput) Elem() BuildRunSpecResourcesOutput {
	return o.ApplyT(func(v *BuildRunSpecResources) BuildRunSpecResources { return *v }).(BuildRunSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildRunSpecResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildRunSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildRunSpecResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildRunSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesLimits struct {
}

// BuildRunSpecResourcesLimitsInput is an input type that accepts BuildRunSpecResourcesLimitsArgs and BuildRunSpecResourcesLimitsOutput values.
// You can construct a concrete instance of `BuildRunSpecResourcesLimitsInput` via:
//
//          BuildRunSpecResourcesLimitsArgs{...}
type BuildRunSpecResourcesLimitsInput interface {
	pulumi.Input

	ToBuildRunSpecResourcesLimitsOutput() BuildRunSpecResourcesLimitsOutput
	ToBuildRunSpecResourcesLimitsOutputWithContext(context.Context) BuildRunSpecResourcesLimitsOutput
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesLimitsArgs struct {
}

func (BuildRunSpecResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecResourcesLimits)(nil)).Elem()
}

func (i BuildRunSpecResourcesLimitsArgs) ToBuildRunSpecResourcesLimitsOutput() BuildRunSpecResourcesLimitsOutput {
	return i.ToBuildRunSpecResourcesLimitsOutputWithContext(context.Background())
}

func (i BuildRunSpecResourcesLimitsArgs) ToBuildRunSpecResourcesLimitsOutputWithContext(ctx context.Context) BuildRunSpecResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecResourcesLimitsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesLimitsOutput struct{ *pulumi.OutputState }

func (BuildRunSpecResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecResourcesLimits)(nil)).Elem()
}

func (o BuildRunSpecResourcesLimitsOutput) ToBuildRunSpecResourcesLimitsOutput() BuildRunSpecResourcesLimitsOutput {
	return o
}

func (o BuildRunSpecResourcesLimitsOutput) ToBuildRunSpecResourcesLimitsOutputWithContext(ctx context.Context) BuildRunSpecResourcesLimitsOutput {
	return o
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesRequests struct {
}

// BuildRunSpecResourcesRequestsInput is an input type that accepts BuildRunSpecResourcesRequestsArgs and BuildRunSpecResourcesRequestsOutput values.
// You can construct a concrete instance of `BuildRunSpecResourcesRequestsInput` via:
//
//          BuildRunSpecResourcesRequestsArgs{...}
type BuildRunSpecResourcesRequestsInput interface {
	pulumi.Input

	ToBuildRunSpecResourcesRequestsOutput() BuildRunSpecResourcesRequestsOutput
	ToBuildRunSpecResourcesRequestsOutputWithContext(context.Context) BuildRunSpecResourcesRequestsOutput
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesRequestsArgs struct {
}

func (BuildRunSpecResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecResourcesRequests)(nil)).Elem()
}

func (i BuildRunSpecResourcesRequestsArgs) ToBuildRunSpecResourcesRequestsOutput() BuildRunSpecResourcesRequestsOutput {
	return i.ToBuildRunSpecResourcesRequestsOutputWithContext(context.Background())
}

func (i BuildRunSpecResourcesRequestsArgs) ToBuildRunSpecResourcesRequestsOutputWithContext(ctx context.Context) BuildRunSpecResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunSpecResourcesRequestsOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildRunSpecResourcesRequestsOutput struct{ *pulumi.OutputState }

func (BuildRunSpecResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunSpecResourcesRequests)(nil)).Elem()
}

func (o BuildRunSpecResourcesRequestsOutput) ToBuildRunSpecResourcesRequestsOutput() BuildRunSpecResourcesRequestsOutput {
	return o
}

func (o BuildRunSpecResourcesRequestsOutput) ToBuildRunSpecResourcesRequestsOutputWithContext(ctx context.Context) BuildRunSpecResourcesRequestsOutput {
	return o
}

// BuildRunStatus defines the observed state of BuildRun
type BuildRunStatus struct {
	// CompletionTime is the time the build completed.
	CompletionTime *string `pulumi:"completionTime"`
	// PodName is the name of the pod responsible for executing this task's steps.
	LatestTaskRunRef *string `pulumi:"latestTaskRunRef"`
	// The Succeeded reason of the TaskRun
	Reason *string `pulumi:"reason"`
	// StartTime is the time the build is actually started.
	StartTime *string `pulumi:"startTime"`
	// The Succeeded status of the TaskRun
	Succeeded *string `pulumi:"succeeded"`
}

// BuildRunStatusInput is an input type that accepts BuildRunStatusArgs and BuildRunStatusOutput values.
// You can construct a concrete instance of `BuildRunStatusInput` via:
//
//          BuildRunStatusArgs{...}
type BuildRunStatusInput interface {
	pulumi.Input

	ToBuildRunStatusOutput() BuildRunStatusOutput
	ToBuildRunStatusOutputWithContext(context.Context) BuildRunStatusOutput
}

// BuildRunStatus defines the observed state of BuildRun
type BuildRunStatusArgs struct {
	// CompletionTime is the time the build completed.
	CompletionTime pulumi.StringPtrInput `pulumi:"completionTime"`
	// PodName is the name of the pod responsible for executing this task's steps.
	LatestTaskRunRef pulumi.StringPtrInput `pulumi:"latestTaskRunRef"`
	// The Succeeded reason of the TaskRun
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// StartTime is the time the build is actually started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The Succeeded status of the TaskRun
	Succeeded pulumi.StringPtrInput `pulumi:"succeeded"`
}

func (BuildRunStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunStatus)(nil)).Elem()
}

func (i BuildRunStatusArgs) ToBuildRunStatusOutput() BuildRunStatusOutput {
	return i.ToBuildRunStatusOutputWithContext(context.Background())
}

func (i BuildRunStatusArgs) ToBuildRunStatusOutputWithContext(ctx context.Context) BuildRunStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunStatusOutput)
}

func (i BuildRunStatusArgs) ToBuildRunStatusPtrOutput() BuildRunStatusPtrOutput {
	return i.ToBuildRunStatusPtrOutputWithContext(context.Background())
}

func (i BuildRunStatusArgs) ToBuildRunStatusPtrOutputWithContext(ctx context.Context) BuildRunStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunStatusOutput).ToBuildRunStatusPtrOutputWithContext(ctx)
}

// BuildRunStatusPtrInput is an input type that accepts BuildRunStatusArgs, BuildRunStatusPtr and BuildRunStatusPtrOutput values.
// You can construct a concrete instance of `BuildRunStatusPtrInput` via:
//
//          BuildRunStatusArgs{...}
//
//  or:
//
//          nil
type BuildRunStatusPtrInput interface {
	pulumi.Input

	ToBuildRunStatusPtrOutput() BuildRunStatusPtrOutput
	ToBuildRunStatusPtrOutputWithContext(context.Context) BuildRunStatusPtrOutput
}

type buildRunStatusPtrType BuildRunStatusArgs

func BuildRunStatusPtr(v *BuildRunStatusArgs) BuildRunStatusPtrInput {
	return (*buildRunStatusPtrType)(v)
}

func (*buildRunStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunStatus)(nil)).Elem()
}

func (i *buildRunStatusPtrType) ToBuildRunStatusPtrOutput() BuildRunStatusPtrOutput {
	return i.ToBuildRunStatusPtrOutputWithContext(context.Background())
}

func (i *buildRunStatusPtrType) ToBuildRunStatusPtrOutputWithContext(ctx context.Context) BuildRunStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunStatusPtrOutput)
}

// BuildRunStatus defines the observed state of BuildRun
type BuildRunStatusOutput struct{ *pulumi.OutputState }

func (BuildRunStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildRunStatus)(nil)).Elem()
}

func (o BuildRunStatusOutput) ToBuildRunStatusOutput() BuildRunStatusOutput {
	return o
}

func (o BuildRunStatusOutput) ToBuildRunStatusOutputWithContext(ctx context.Context) BuildRunStatusOutput {
	return o
}

func (o BuildRunStatusOutput) ToBuildRunStatusPtrOutput() BuildRunStatusPtrOutput {
	return o.ToBuildRunStatusPtrOutputWithContext(context.Background())
}

func (o BuildRunStatusOutput) ToBuildRunStatusPtrOutputWithContext(ctx context.Context) BuildRunStatusPtrOutput {
	return o.ApplyT(func(v BuildRunStatus) *BuildRunStatus {
		return &v
	}).(BuildRunStatusPtrOutput)
}

// CompletionTime is the time the build completed.
func (o BuildRunStatusOutput) CompletionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunStatus) *string { return v.CompletionTime }).(pulumi.StringPtrOutput)
}

// PodName is the name of the pod responsible for executing this task's steps.
func (o BuildRunStatusOutput) LatestTaskRunRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunStatus) *string { return v.LatestTaskRunRef }).(pulumi.StringPtrOutput)
}

// The Succeeded reason of the TaskRun
func (o BuildRunStatusOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunStatus) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// StartTime is the time the build is actually started.
func (o BuildRunStatusOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunStatus) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The Succeeded status of the TaskRun
func (o BuildRunStatusOutput) Succeeded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildRunStatus) *string { return v.Succeeded }).(pulumi.StringPtrOutput)
}

type BuildRunStatusPtrOutput struct{ *pulumi.OutputState }

func (BuildRunStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRunStatus)(nil)).Elem()
}

func (o BuildRunStatusPtrOutput) ToBuildRunStatusPtrOutput() BuildRunStatusPtrOutput {
	return o
}

func (o BuildRunStatusPtrOutput) ToBuildRunStatusPtrOutputWithContext(ctx context.Context) BuildRunStatusPtrOutput {
	return o
}

func (o BuildRunStatusPtrOutput) Elem() BuildRunStatusOutput {
	return o.ApplyT(func(v *BuildRunStatus) BuildRunStatus { return *v }).(BuildRunStatusOutput)
}

// CompletionTime is the time the build completed.
func (o BuildRunStatusPtrOutput) CompletionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunStatus) *string {
		if v == nil {
			return nil
		}
		return v.CompletionTime
	}).(pulumi.StringPtrOutput)
}

// PodName is the name of the pod responsible for executing this task's steps.
func (o BuildRunStatusPtrOutput) LatestTaskRunRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunStatus) *string {
		if v == nil {
			return nil
		}
		return v.LatestTaskRunRef
	}).(pulumi.StringPtrOutput)
}

// The Succeeded reason of the TaskRun
func (o BuildRunStatusPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunStatus) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// StartTime is the time the build is actually started.
func (o BuildRunStatusPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunStatus) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The Succeeded status of the TaskRun
func (o BuildRunStatusPtrOutput) Succeeded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildRunStatus) *string {
		if v == nil {
			return nil
		}
		return v.Succeeded
	}).(pulumi.StringPtrOutput)
}

// BuildSpec defines the desired state of Build
type BuildSpec struct {
	// BuilderImage refers to the image containing the build tools inside which the source code would be built.
	Builder *BuildSpecBuilder `pulumi:"builder"`
	// Dockerfile is the path to the Dockerfile to be used for build strategies which bank on the Dockerfile for building an image.
	Dockerfile *string `pulumi:"dockerfile"`
	// Output refers to the location where the generated image would be pushed to.
	Output BuildSpecOutput `pulumi:"output"`
	// Parameters contains name-value that could be used to loosely type parameters in the BuildStrategy.
	Parameters []BuildSpecParameters `pulumi:"parameters"`
	// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources *BuildSpecResources `pulumi:"resources"`
	// Source refers to the Git repository containing the source code to be built.
	Source BuildSpecSource `pulumi:"source"`
	// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
	Strategy BuildSpecStrategy `pulumi:"strategy"`
}

// BuildSpecInput is an input type that accepts BuildSpecArgs and BuildSpecOutput values.
// You can construct a concrete instance of `BuildSpecInput` via:
//
//          BuildSpecArgs{...}
type BuildSpecInput interface {
	pulumi.Input

	ToBuildSpecOutput() BuildSpecOutput
	ToBuildSpecOutputWithContext(context.Context) BuildSpecOutput
}

// BuildSpec defines the desired state of Build
type BuildSpecArgs struct {
	// BuilderImage refers to the image containing the build tools inside which the source code would be built.
	Builder BuildSpecBuilderPtrInput `pulumi:"builder"`
	// Dockerfile is the path to the Dockerfile to be used for build strategies which bank on the Dockerfile for building an image.
	Dockerfile pulumi.StringPtrInput `pulumi:"dockerfile"`
	// Output refers to the location where the generated image would be pushed to.
	Output BuildSpecOutputInput `pulumi:"output"`
	// Parameters contains name-value that could be used to loosely type parameters in the BuildStrategy.
	Parameters BuildSpecParametersArrayInput `pulumi:"parameters"`
	// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources BuildSpecResourcesPtrInput `pulumi:"resources"`
	// Source refers to the Git repository containing the source code to be built.
	Source BuildSpecSourceInput `pulumi:"source"`
	// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
	Strategy BuildSpecStrategyInput `pulumi:"strategy"`
}

func (BuildSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpec)(nil)).Elem()
}

func (i BuildSpecArgs) ToBuildSpecOutput() BuildSpecOutput {
	return i.ToBuildSpecOutputWithContext(context.Background())
}

func (i BuildSpecArgs) ToBuildSpecOutputWithContext(ctx context.Context) BuildSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutput)
}

func (i BuildSpecArgs) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return i.ToBuildSpecPtrOutputWithContext(context.Background())
}

func (i BuildSpecArgs) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutput).ToBuildSpecPtrOutputWithContext(ctx)
}

// BuildSpecPtrInput is an input type that accepts BuildSpecArgs, BuildSpecPtr and BuildSpecPtrOutput values.
// You can construct a concrete instance of `BuildSpecPtrInput` via:
//
//          BuildSpecArgs{...}
//
//  or:
//
//          nil
type BuildSpecPtrInput interface {
	pulumi.Input

	ToBuildSpecPtrOutput() BuildSpecPtrOutput
	ToBuildSpecPtrOutputWithContext(context.Context) BuildSpecPtrOutput
}

type buildSpecPtrType BuildSpecArgs

func BuildSpecPtr(v *BuildSpecArgs) BuildSpecPtrInput {
	return (*buildSpecPtrType)(v)
}

func (*buildSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpec)(nil)).Elem()
}

func (i *buildSpecPtrType) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return i.ToBuildSpecPtrOutputWithContext(context.Background())
}

func (i *buildSpecPtrType) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecPtrOutput)
}

// BuildSpec defines the desired state of Build
type BuildSpecOutput struct{ *pulumi.OutputState }

func (BuildSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpec)(nil)).Elem()
}

func (o BuildSpecOutput) ToBuildSpecOutput() BuildSpecOutput {
	return o
}

func (o BuildSpecOutput) ToBuildSpecOutputWithContext(ctx context.Context) BuildSpecOutput {
	return o
}

func (o BuildSpecOutput) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return o.ToBuildSpecPtrOutputWithContext(context.Background())
}

func (o BuildSpecOutput) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return o.ApplyT(func(v BuildSpec) *BuildSpec {
		return &v
	}).(BuildSpecPtrOutput)
}

// BuilderImage refers to the image containing the build tools inside which the source code would be built.
func (o BuildSpecOutput) Builder() BuildSpecBuilderPtrOutput {
	return o.ApplyT(func(v BuildSpec) *BuildSpecBuilder { return v.Builder }).(BuildSpecBuilderPtrOutput)
}

// Dockerfile is the path to the Dockerfile to be used for build strategies which bank on the Dockerfile for building an image.
func (o BuildSpecOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpec) *string { return v.Dockerfile }).(pulumi.StringPtrOutput)
}

// Output refers to the location where the generated image would be pushed to.
func (o BuildSpecOutput) Output() BuildSpecOutputOutput {
	return o.ApplyT(func(v BuildSpec) BuildSpecOutput { return v.Output }).(BuildSpecOutputOutput)
}

// Parameters contains name-value that could be used to loosely type parameters in the BuildStrategy.
func (o BuildSpecOutput) Parameters() BuildSpecParametersArrayOutput {
	return o.ApplyT(func(v BuildSpec) []BuildSpecParameters { return v.Parameters }).(BuildSpecParametersArrayOutput)
}

// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildSpecOutput) Resources() BuildSpecResourcesPtrOutput {
	return o.ApplyT(func(v BuildSpec) *BuildSpecResources { return v.Resources }).(BuildSpecResourcesPtrOutput)
}

// Source refers to the Git repository containing the source code to be built.
func (o BuildSpecOutput) Source() BuildSpecSourceOutput {
	return o.ApplyT(func(v BuildSpec) BuildSpecSource { return v.Source }).(BuildSpecSourceOutput)
}

// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
func (o BuildSpecOutput) Strategy() BuildSpecStrategyOutput {
	return o.ApplyT(func(v BuildSpec) BuildSpecStrategy { return v.Strategy }).(BuildSpecStrategyOutput)
}

type BuildSpecPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpec)(nil)).Elem()
}

func (o BuildSpecPtrOutput) ToBuildSpecPtrOutput() BuildSpecPtrOutput {
	return o
}

func (o BuildSpecPtrOutput) ToBuildSpecPtrOutputWithContext(ctx context.Context) BuildSpecPtrOutput {
	return o
}

func (o BuildSpecPtrOutput) Elem() BuildSpecOutput {
	return o.ApplyT(func(v *BuildSpec) BuildSpec { return *v }).(BuildSpecOutput)
}

// BuilderImage refers to the image containing the build tools inside which the source code would be built.
func (o BuildSpecPtrOutput) Builder() BuildSpecBuilderPtrOutput {
	return o.ApplyT(func(v *BuildSpec) *BuildSpecBuilder {
		if v == nil {
			return nil
		}
		return v.Builder
	}).(BuildSpecBuilderPtrOutput)
}

// Dockerfile is the path to the Dockerfile to be used for build strategies which bank on the Dockerfile for building an image.
func (o BuildSpecPtrOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpec) *string {
		if v == nil {
			return nil
		}
		return v.Dockerfile
	}).(pulumi.StringPtrOutput)
}

// Output refers to the location where the generated image would be pushed to.
func (o BuildSpecPtrOutput) Output() BuildSpecOutputPtrOutput {
	return o.ApplyT(func(v *BuildSpec) *BuildSpecOutput {
		if v == nil {
			return nil
		}
		return &v.Output
	}).(BuildSpecOutputPtrOutput)
}

// Parameters contains name-value that could be used to loosely type parameters in the BuildStrategy.
func (o BuildSpecPtrOutput) Parameters() BuildSpecParametersArrayOutput {
	return o.ApplyT(func(v *BuildSpec) []BuildSpecParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(BuildSpecParametersArrayOutput)
}

// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildSpecPtrOutput) Resources() BuildSpecResourcesPtrOutput {
	return o.ApplyT(func(v *BuildSpec) *BuildSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(BuildSpecResourcesPtrOutput)
}

// Source refers to the Git repository containing the source code to be built.
func (o BuildSpecPtrOutput) Source() BuildSpecSourcePtrOutput {
	return o.ApplyT(func(v *BuildSpec) *BuildSpecSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(BuildSpecSourcePtrOutput)
}

// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
func (o BuildSpecPtrOutput) Strategy() BuildSpecStrategyPtrOutput {
	return o.ApplyT(func(v *BuildSpec) *BuildSpecStrategy {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(BuildSpecStrategyPtrOutput)
}

// BuilderImage refers to the image containing the build tools inside which the source code would be built.
type BuildSpecBuilder struct {
	// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
	Credentials *BuildSpecBuilderCredentials `pulumi:"credentials"`
	// ImageURL is the URL where the image will be pushed to.
	Image string `pulumi:"image"`
}

// BuildSpecBuilderInput is an input type that accepts BuildSpecBuilderArgs and BuildSpecBuilderOutput values.
// You can construct a concrete instance of `BuildSpecBuilderInput` via:
//
//          BuildSpecBuilderArgs{...}
type BuildSpecBuilderInput interface {
	pulumi.Input

	ToBuildSpecBuilderOutput() BuildSpecBuilderOutput
	ToBuildSpecBuilderOutputWithContext(context.Context) BuildSpecBuilderOutput
}

// BuilderImage refers to the image containing the build tools inside which the source code would be built.
type BuildSpecBuilderArgs struct {
	// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
	Credentials BuildSpecBuilderCredentialsPtrInput `pulumi:"credentials"`
	// ImageURL is the URL where the image will be pushed to.
	Image pulumi.StringInput `pulumi:"image"`
}

func (BuildSpecBuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecBuilder)(nil)).Elem()
}

func (i BuildSpecBuilderArgs) ToBuildSpecBuilderOutput() BuildSpecBuilderOutput {
	return i.ToBuildSpecBuilderOutputWithContext(context.Background())
}

func (i BuildSpecBuilderArgs) ToBuildSpecBuilderOutputWithContext(ctx context.Context) BuildSpecBuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecBuilderOutput)
}

func (i BuildSpecBuilderArgs) ToBuildSpecBuilderPtrOutput() BuildSpecBuilderPtrOutput {
	return i.ToBuildSpecBuilderPtrOutputWithContext(context.Background())
}

func (i BuildSpecBuilderArgs) ToBuildSpecBuilderPtrOutputWithContext(ctx context.Context) BuildSpecBuilderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecBuilderOutput).ToBuildSpecBuilderPtrOutputWithContext(ctx)
}

// BuildSpecBuilderPtrInput is an input type that accepts BuildSpecBuilderArgs, BuildSpecBuilderPtr and BuildSpecBuilderPtrOutput values.
// You can construct a concrete instance of `BuildSpecBuilderPtrInput` via:
//
//          BuildSpecBuilderArgs{...}
//
//  or:
//
//          nil
type BuildSpecBuilderPtrInput interface {
	pulumi.Input

	ToBuildSpecBuilderPtrOutput() BuildSpecBuilderPtrOutput
	ToBuildSpecBuilderPtrOutputWithContext(context.Context) BuildSpecBuilderPtrOutput
}

type buildSpecBuilderPtrType BuildSpecBuilderArgs

func BuildSpecBuilderPtr(v *BuildSpecBuilderArgs) BuildSpecBuilderPtrInput {
	return (*buildSpecBuilderPtrType)(v)
}

func (*buildSpecBuilderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecBuilder)(nil)).Elem()
}

func (i *buildSpecBuilderPtrType) ToBuildSpecBuilderPtrOutput() BuildSpecBuilderPtrOutput {
	return i.ToBuildSpecBuilderPtrOutputWithContext(context.Background())
}

func (i *buildSpecBuilderPtrType) ToBuildSpecBuilderPtrOutputWithContext(ctx context.Context) BuildSpecBuilderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecBuilderPtrOutput)
}

// BuilderImage refers to the image containing the build tools inside which the source code would be built.
type BuildSpecBuilderOutput struct{ *pulumi.OutputState }

func (BuildSpecBuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecBuilder)(nil)).Elem()
}

func (o BuildSpecBuilderOutput) ToBuildSpecBuilderOutput() BuildSpecBuilderOutput {
	return o
}

func (o BuildSpecBuilderOutput) ToBuildSpecBuilderOutputWithContext(ctx context.Context) BuildSpecBuilderOutput {
	return o
}

func (o BuildSpecBuilderOutput) ToBuildSpecBuilderPtrOutput() BuildSpecBuilderPtrOutput {
	return o.ToBuildSpecBuilderPtrOutputWithContext(context.Background())
}

func (o BuildSpecBuilderOutput) ToBuildSpecBuilderPtrOutputWithContext(ctx context.Context) BuildSpecBuilderPtrOutput {
	return o.ApplyT(func(v BuildSpecBuilder) *BuildSpecBuilder {
		return &v
	}).(BuildSpecBuilderPtrOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
func (o BuildSpecBuilderOutput) Credentials() BuildSpecBuilderCredentialsPtrOutput {
	return o.ApplyT(func(v BuildSpecBuilder) *BuildSpecBuilderCredentials { return v.Credentials }).(BuildSpecBuilderCredentialsPtrOutput)
}

// ImageURL is the URL where the image will be pushed to.
func (o BuildSpecBuilderOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecBuilder) string { return v.Image }).(pulumi.StringOutput)
}

type BuildSpecBuilderPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecBuilderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecBuilder)(nil)).Elem()
}

func (o BuildSpecBuilderPtrOutput) ToBuildSpecBuilderPtrOutput() BuildSpecBuilderPtrOutput {
	return o
}

func (o BuildSpecBuilderPtrOutput) ToBuildSpecBuilderPtrOutputWithContext(ctx context.Context) BuildSpecBuilderPtrOutput {
	return o
}

func (o BuildSpecBuilderPtrOutput) Elem() BuildSpecBuilderOutput {
	return o.ApplyT(func(v *BuildSpecBuilder) BuildSpecBuilder { return *v }).(BuildSpecBuilderOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
func (o BuildSpecBuilderPtrOutput) Credentials() BuildSpecBuilderCredentialsPtrOutput {
	return o.ApplyT(func(v *BuildSpecBuilder) *BuildSpecBuilderCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(BuildSpecBuilderCredentialsPtrOutput)
}

// ImageURL is the URL where the image will be pushed to.
func (o BuildSpecBuilderPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecBuilder) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
type BuildSpecBuilderCredentials struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecBuilderCredentialsInput is an input type that accepts BuildSpecBuilderCredentialsArgs and BuildSpecBuilderCredentialsOutput values.
// You can construct a concrete instance of `BuildSpecBuilderCredentialsInput` via:
//
//          BuildSpecBuilderCredentialsArgs{...}
type BuildSpecBuilderCredentialsInput interface {
	pulumi.Input

	ToBuildSpecBuilderCredentialsOutput() BuildSpecBuilderCredentialsOutput
	ToBuildSpecBuilderCredentialsOutputWithContext(context.Context) BuildSpecBuilderCredentialsOutput
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
type BuildSpecBuilderCredentialsArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecBuilderCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecBuilderCredentials)(nil)).Elem()
}

func (i BuildSpecBuilderCredentialsArgs) ToBuildSpecBuilderCredentialsOutput() BuildSpecBuilderCredentialsOutput {
	return i.ToBuildSpecBuilderCredentialsOutputWithContext(context.Background())
}

func (i BuildSpecBuilderCredentialsArgs) ToBuildSpecBuilderCredentialsOutputWithContext(ctx context.Context) BuildSpecBuilderCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecBuilderCredentialsOutput)
}

func (i BuildSpecBuilderCredentialsArgs) ToBuildSpecBuilderCredentialsPtrOutput() BuildSpecBuilderCredentialsPtrOutput {
	return i.ToBuildSpecBuilderCredentialsPtrOutputWithContext(context.Background())
}

func (i BuildSpecBuilderCredentialsArgs) ToBuildSpecBuilderCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecBuilderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecBuilderCredentialsOutput).ToBuildSpecBuilderCredentialsPtrOutputWithContext(ctx)
}

// BuildSpecBuilderCredentialsPtrInput is an input type that accepts BuildSpecBuilderCredentialsArgs, BuildSpecBuilderCredentialsPtr and BuildSpecBuilderCredentialsPtrOutput values.
// You can construct a concrete instance of `BuildSpecBuilderCredentialsPtrInput` via:
//
//          BuildSpecBuilderCredentialsArgs{...}
//
//  or:
//
//          nil
type BuildSpecBuilderCredentialsPtrInput interface {
	pulumi.Input

	ToBuildSpecBuilderCredentialsPtrOutput() BuildSpecBuilderCredentialsPtrOutput
	ToBuildSpecBuilderCredentialsPtrOutputWithContext(context.Context) BuildSpecBuilderCredentialsPtrOutput
}

type buildSpecBuilderCredentialsPtrType BuildSpecBuilderCredentialsArgs

func BuildSpecBuilderCredentialsPtr(v *BuildSpecBuilderCredentialsArgs) BuildSpecBuilderCredentialsPtrInput {
	return (*buildSpecBuilderCredentialsPtrType)(v)
}

func (*buildSpecBuilderCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecBuilderCredentials)(nil)).Elem()
}

func (i *buildSpecBuilderCredentialsPtrType) ToBuildSpecBuilderCredentialsPtrOutput() BuildSpecBuilderCredentialsPtrOutput {
	return i.ToBuildSpecBuilderCredentialsPtrOutputWithContext(context.Background())
}

func (i *buildSpecBuilderCredentialsPtrType) ToBuildSpecBuilderCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecBuilderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecBuilderCredentialsPtrOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
type BuildSpecBuilderCredentialsOutput struct{ *pulumi.OutputState }

func (BuildSpecBuilderCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecBuilderCredentials)(nil)).Elem()
}

func (o BuildSpecBuilderCredentialsOutput) ToBuildSpecBuilderCredentialsOutput() BuildSpecBuilderCredentialsOutput {
	return o
}

func (o BuildSpecBuilderCredentialsOutput) ToBuildSpecBuilderCredentialsOutputWithContext(ctx context.Context) BuildSpecBuilderCredentialsOutput {
	return o
}

func (o BuildSpecBuilderCredentialsOutput) ToBuildSpecBuilderCredentialsPtrOutput() BuildSpecBuilderCredentialsPtrOutput {
	return o.ToBuildSpecBuilderCredentialsPtrOutputWithContext(context.Background())
}

func (o BuildSpecBuilderCredentialsOutput) ToBuildSpecBuilderCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecBuilderCredentialsPtrOutput {
	return o.ApplyT(func(v BuildSpecBuilderCredentials) *BuildSpecBuilderCredentials {
		return &v
	}).(BuildSpecBuilderCredentialsPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecBuilderCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecBuilderCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecBuilderCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecBuilderCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecBuilderCredentials)(nil)).Elem()
}

func (o BuildSpecBuilderCredentialsPtrOutput) ToBuildSpecBuilderCredentialsPtrOutput() BuildSpecBuilderCredentialsPtrOutput {
	return o
}

func (o BuildSpecBuilderCredentialsPtrOutput) ToBuildSpecBuilderCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecBuilderCredentialsPtrOutput {
	return o
}

func (o BuildSpecBuilderCredentialsPtrOutput) Elem() BuildSpecBuilderCredentialsOutput {
	return o.ApplyT(func(v *BuildSpecBuilderCredentials) BuildSpecBuilderCredentials { return *v }).(BuildSpecBuilderCredentialsOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecBuilderCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecBuilderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Output refers to the location where the generated image would be pushed to.
type BuildSpecOutput struct {
	// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
	Credentials *BuildSpecOutputCredentials `pulumi:"credentials"`
	// ImageURL is the URL where the image will be pushed to.
	Image string `pulumi:"image"`
}

// BuildSpecOutputInput is an input type that accepts BuildSpecOutputArgs and BuildSpecOutputOutput values.
// You can construct a concrete instance of `BuildSpecOutputInput` via:
//
//          BuildSpecOutputArgs{...}
type BuildSpecOutputInput interface {
	pulumi.Input

	ToBuildSpecOutputOutput() BuildSpecOutputOutput
	ToBuildSpecOutputOutputWithContext(context.Context) BuildSpecOutputOutput
}

// Output refers to the location where the generated image would be pushed to.
type BuildSpecOutputArgs struct {
	// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
	Credentials BuildSpecOutputCredentialsPtrInput `pulumi:"credentials"`
	// ImageURL is the URL where the image will be pushed to.
	Image pulumi.StringInput `pulumi:"image"`
}

func (BuildSpecOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecOutput)(nil)).Elem()
}

func (i BuildSpecOutputArgs) ToBuildSpecOutputOutput() BuildSpecOutputOutput {
	return i.ToBuildSpecOutputOutputWithContext(context.Background())
}

func (i BuildSpecOutputArgs) ToBuildSpecOutputOutputWithContext(ctx context.Context) BuildSpecOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutputOutput)
}

func (i BuildSpecOutputArgs) ToBuildSpecOutputPtrOutput() BuildSpecOutputPtrOutput {
	return i.ToBuildSpecOutputPtrOutputWithContext(context.Background())
}

func (i BuildSpecOutputArgs) ToBuildSpecOutputPtrOutputWithContext(ctx context.Context) BuildSpecOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutputOutput).ToBuildSpecOutputPtrOutputWithContext(ctx)
}

// BuildSpecOutputPtrInput is an input type that accepts BuildSpecOutputArgs, BuildSpecOutputPtr and BuildSpecOutputPtrOutput values.
// You can construct a concrete instance of `BuildSpecOutputPtrInput` via:
//
//          BuildSpecOutputArgs{...}
//
//  or:
//
//          nil
type BuildSpecOutputPtrInput interface {
	pulumi.Input

	ToBuildSpecOutputPtrOutput() BuildSpecOutputPtrOutput
	ToBuildSpecOutputPtrOutputWithContext(context.Context) BuildSpecOutputPtrOutput
}

type buildSpecOutputPtrType BuildSpecOutputArgs

func BuildSpecOutputPtr(v *BuildSpecOutputArgs) BuildSpecOutputPtrInput {
	return (*buildSpecOutputPtrType)(v)
}

func (*buildSpecOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecOutput)(nil)).Elem()
}

func (i *buildSpecOutputPtrType) ToBuildSpecOutputPtrOutput() BuildSpecOutputPtrOutput {
	return i.ToBuildSpecOutputPtrOutputWithContext(context.Background())
}

func (i *buildSpecOutputPtrType) ToBuildSpecOutputPtrOutputWithContext(ctx context.Context) BuildSpecOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutputPtrOutput)
}

// Output refers to the location where the generated image would be pushed to.
type BuildSpecOutputOutput struct{ *pulumi.OutputState }

func (BuildSpecOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecOutput)(nil)).Elem()
}

func (o BuildSpecOutputOutput) ToBuildSpecOutputOutput() BuildSpecOutputOutput {
	return o
}

func (o BuildSpecOutputOutput) ToBuildSpecOutputOutputWithContext(ctx context.Context) BuildSpecOutputOutput {
	return o
}

func (o BuildSpecOutputOutput) ToBuildSpecOutputPtrOutput() BuildSpecOutputPtrOutput {
	return o.ToBuildSpecOutputPtrOutputWithContext(context.Background())
}

func (o BuildSpecOutputOutput) ToBuildSpecOutputPtrOutputWithContext(ctx context.Context) BuildSpecOutputPtrOutput {
	return o.ApplyT(func(v BuildSpecOutput) *BuildSpecOutput {
		return &v
	}).(BuildSpecOutputPtrOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
func (o BuildSpecOutputOutput) Credentials() BuildSpecOutputCredentialsPtrOutput {
	return o.ApplyT(func(v BuildSpecOutput) *BuildSpecOutputCredentials { return v.Credentials }).(BuildSpecOutputCredentialsPtrOutput)
}

// ImageURL is the URL where the image will be pushed to.
func (o BuildSpecOutputOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecOutput) string { return v.Image }).(pulumi.StringOutput)
}

type BuildSpecOutputPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecOutput)(nil)).Elem()
}

func (o BuildSpecOutputPtrOutput) ToBuildSpecOutputPtrOutput() BuildSpecOutputPtrOutput {
	return o
}

func (o BuildSpecOutputPtrOutput) ToBuildSpecOutputPtrOutputWithContext(ctx context.Context) BuildSpecOutputPtrOutput {
	return o
}

func (o BuildSpecOutputPtrOutput) Elem() BuildSpecOutputOutput {
	return o.ApplyT(func(v *BuildSpecOutput) BuildSpecOutput { return *v }).(BuildSpecOutputOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
func (o BuildSpecOutputPtrOutput) Credentials() BuildSpecOutputCredentialsPtrOutput {
	return o.ApplyT(func(v *BuildSpecOutput) *BuildSpecOutputCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(BuildSpecOutputCredentialsPtrOutput)
}

// ImageURL is the URL where the image will be pushed to.
func (o BuildSpecOutputPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecOutput) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
type BuildSpecOutputCredentials struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecOutputCredentialsInput is an input type that accepts BuildSpecOutputCredentialsArgs and BuildSpecOutputCredentialsOutput values.
// You can construct a concrete instance of `BuildSpecOutputCredentialsInput` via:
//
//          BuildSpecOutputCredentialsArgs{...}
type BuildSpecOutputCredentialsInput interface {
	pulumi.Input

	ToBuildSpecOutputCredentialsOutput() BuildSpecOutputCredentialsOutput
	ToBuildSpecOutputCredentialsOutputWithContext(context.Context) BuildSpecOutputCredentialsOutput
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
type BuildSpecOutputCredentialsArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecOutputCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecOutputCredentials)(nil)).Elem()
}

func (i BuildSpecOutputCredentialsArgs) ToBuildSpecOutputCredentialsOutput() BuildSpecOutputCredentialsOutput {
	return i.ToBuildSpecOutputCredentialsOutputWithContext(context.Background())
}

func (i BuildSpecOutputCredentialsArgs) ToBuildSpecOutputCredentialsOutputWithContext(ctx context.Context) BuildSpecOutputCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutputCredentialsOutput)
}

func (i BuildSpecOutputCredentialsArgs) ToBuildSpecOutputCredentialsPtrOutput() BuildSpecOutputCredentialsPtrOutput {
	return i.ToBuildSpecOutputCredentialsPtrOutputWithContext(context.Background())
}

func (i BuildSpecOutputCredentialsArgs) ToBuildSpecOutputCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecOutputCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutputCredentialsOutput).ToBuildSpecOutputCredentialsPtrOutputWithContext(ctx)
}

// BuildSpecOutputCredentialsPtrInput is an input type that accepts BuildSpecOutputCredentialsArgs, BuildSpecOutputCredentialsPtr and BuildSpecOutputCredentialsPtrOutput values.
// You can construct a concrete instance of `BuildSpecOutputCredentialsPtrInput` via:
//
//          BuildSpecOutputCredentialsArgs{...}
//
//  or:
//
//          nil
type BuildSpecOutputCredentialsPtrInput interface {
	pulumi.Input

	ToBuildSpecOutputCredentialsPtrOutput() BuildSpecOutputCredentialsPtrOutput
	ToBuildSpecOutputCredentialsPtrOutputWithContext(context.Context) BuildSpecOutputCredentialsPtrOutput
}

type buildSpecOutputCredentialsPtrType BuildSpecOutputCredentialsArgs

func BuildSpecOutputCredentialsPtr(v *BuildSpecOutputCredentialsArgs) BuildSpecOutputCredentialsPtrInput {
	return (*buildSpecOutputCredentialsPtrType)(v)
}

func (*buildSpecOutputCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecOutputCredentials)(nil)).Elem()
}

func (i *buildSpecOutputCredentialsPtrType) ToBuildSpecOutputCredentialsPtrOutput() BuildSpecOutputCredentialsPtrOutput {
	return i.ToBuildSpecOutputCredentialsPtrOutputWithContext(context.Background())
}

func (i *buildSpecOutputCredentialsPtrType) ToBuildSpecOutputCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecOutputCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecOutputCredentialsPtrOutput)
}

// SecretRef is a reference to the Secret containing the credentials to push the image to the registry
type BuildSpecOutputCredentialsOutput struct{ *pulumi.OutputState }

func (BuildSpecOutputCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecOutputCredentials)(nil)).Elem()
}

func (o BuildSpecOutputCredentialsOutput) ToBuildSpecOutputCredentialsOutput() BuildSpecOutputCredentialsOutput {
	return o
}

func (o BuildSpecOutputCredentialsOutput) ToBuildSpecOutputCredentialsOutputWithContext(ctx context.Context) BuildSpecOutputCredentialsOutput {
	return o
}

func (o BuildSpecOutputCredentialsOutput) ToBuildSpecOutputCredentialsPtrOutput() BuildSpecOutputCredentialsPtrOutput {
	return o.ToBuildSpecOutputCredentialsPtrOutputWithContext(context.Background())
}

func (o BuildSpecOutputCredentialsOutput) ToBuildSpecOutputCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecOutputCredentialsPtrOutput {
	return o.ApplyT(func(v BuildSpecOutputCredentials) *BuildSpecOutputCredentials {
		return &v
	}).(BuildSpecOutputCredentialsPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecOutputCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecOutputCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecOutputCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecOutputCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecOutputCredentials)(nil)).Elem()
}

func (o BuildSpecOutputCredentialsPtrOutput) ToBuildSpecOutputCredentialsPtrOutput() BuildSpecOutputCredentialsPtrOutput {
	return o
}

func (o BuildSpecOutputCredentialsPtrOutput) ToBuildSpecOutputCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecOutputCredentialsPtrOutput {
	return o
}

func (o BuildSpecOutputCredentialsPtrOutput) Elem() BuildSpecOutputCredentialsOutput {
	return o.ApplyT(func(v *BuildSpecOutputCredentials) BuildSpecOutputCredentials { return *v }).(BuildSpecOutputCredentialsOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecOutputCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecOutputCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Parameter defines the data structure that would be used for expressing arbitrary key/value pairs for the execution of a build
type BuildSpecParameters struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// BuildSpecParametersInput is an input type that accepts BuildSpecParametersArgs and BuildSpecParametersOutput values.
// You can construct a concrete instance of `BuildSpecParametersInput` via:
//
//          BuildSpecParametersArgs{...}
type BuildSpecParametersInput interface {
	pulumi.Input

	ToBuildSpecParametersOutput() BuildSpecParametersOutput
	ToBuildSpecParametersOutputWithContext(context.Context) BuildSpecParametersOutput
}

// Parameter defines the data structure that would be used for expressing arbitrary key/value pairs for the execution of a build
type BuildSpecParametersArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (BuildSpecParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecParameters)(nil)).Elem()
}

func (i BuildSpecParametersArgs) ToBuildSpecParametersOutput() BuildSpecParametersOutput {
	return i.ToBuildSpecParametersOutputWithContext(context.Background())
}

func (i BuildSpecParametersArgs) ToBuildSpecParametersOutputWithContext(ctx context.Context) BuildSpecParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecParametersOutput)
}

// BuildSpecParametersArrayInput is an input type that accepts BuildSpecParametersArray and BuildSpecParametersArrayOutput values.
// You can construct a concrete instance of `BuildSpecParametersArrayInput` via:
//
//          BuildSpecParametersArray{ BuildSpecParametersArgs{...} }
type BuildSpecParametersArrayInput interface {
	pulumi.Input

	ToBuildSpecParametersArrayOutput() BuildSpecParametersArrayOutput
	ToBuildSpecParametersArrayOutputWithContext(context.Context) BuildSpecParametersArrayOutput
}

type BuildSpecParametersArray []BuildSpecParametersInput

func (BuildSpecParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecParameters)(nil)).Elem()
}

func (i BuildSpecParametersArray) ToBuildSpecParametersArrayOutput() BuildSpecParametersArrayOutput {
	return i.ToBuildSpecParametersArrayOutputWithContext(context.Background())
}

func (i BuildSpecParametersArray) ToBuildSpecParametersArrayOutputWithContext(ctx context.Context) BuildSpecParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecParametersArrayOutput)
}

// Parameter defines the data structure that would be used for expressing arbitrary key/value pairs for the execution of a build
type BuildSpecParametersOutput struct{ *pulumi.OutputState }

func (BuildSpecParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecParameters)(nil)).Elem()
}

func (o BuildSpecParametersOutput) ToBuildSpecParametersOutput() BuildSpecParametersOutput {
	return o
}

func (o BuildSpecParametersOutput) ToBuildSpecParametersOutputWithContext(ctx context.Context) BuildSpecParametersOutput {
	return o
}

func (o BuildSpecParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecParameters) string { return v.Name }).(pulumi.StringOutput)
}

func (o BuildSpecParametersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecParameters) string { return v.Value }).(pulumi.StringOutput)
}

type BuildSpecParametersArrayOutput struct{ *pulumi.OutputState }

func (BuildSpecParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildSpecParameters)(nil)).Elem()
}

func (o BuildSpecParametersArrayOutput) ToBuildSpecParametersArrayOutput() BuildSpecParametersArrayOutput {
	return o
}

func (o BuildSpecParametersArrayOutput) ToBuildSpecParametersArrayOutputWithContext(ctx context.Context) BuildSpecParametersArrayOutput {
	return o
}

func (o BuildSpecParametersArrayOutput) Index(i pulumi.IntInput) BuildSpecParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildSpecParameters {
		return vs[0].([]BuildSpecParameters)[vs[1].(int)]
	}).(BuildSpecParametersOutput)
}

// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]string `pulumi:"requests"`
}

// BuildSpecResourcesInput is an input type that accepts BuildSpecResourcesArgs and BuildSpecResourcesOutput values.
// You can construct a concrete instance of `BuildSpecResourcesInput` via:
//
//          BuildSpecResourcesArgs{...}
type BuildSpecResourcesInput interface {
	pulumi.Input

	ToBuildSpecResourcesOutput() BuildSpecResourcesOutput
	ToBuildSpecResourcesOutputWithContext(context.Context) BuildSpecResourcesOutput
}

// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (BuildSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecResources)(nil)).Elem()
}

func (i BuildSpecResourcesArgs) ToBuildSpecResourcesOutput() BuildSpecResourcesOutput {
	return i.ToBuildSpecResourcesOutputWithContext(context.Background())
}

func (i BuildSpecResourcesArgs) ToBuildSpecResourcesOutputWithContext(ctx context.Context) BuildSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecResourcesOutput)
}

func (i BuildSpecResourcesArgs) ToBuildSpecResourcesPtrOutput() BuildSpecResourcesPtrOutput {
	return i.ToBuildSpecResourcesPtrOutputWithContext(context.Background())
}

func (i BuildSpecResourcesArgs) ToBuildSpecResourcesPtrOutputWithContext(ctx context.Context) BuildSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecResourcesOutput).ToBuildSpecResourcesPtrOutputWithContext(ctx)
}

// BuildSpecResourcesPtrInput is an input type that accepts BuildSpecResourcesArgs, BuildSpecResourcesPtr and BuildSpecResourcesPtrOutput values.
// You can construct a concrete instance of `BuildSpecResourcesPtrInput` via:
//
//          BuildSpecResourcesArgs{...}
//
//  or:
//
//          nil
type BuildSpecResourcesPtrInput interface {
	pulumi.Input

	ToBuildSpecResourcesPtrOutput() BuildSpecResourcesPtrOutput
	ToBuildSpecResourcesPtrOutputWithContext(context.Context) BuildSpecResourcesPtrOutput
}

type buildSpecResourcesPtrType BuildSpecResourcesArgs

func BuildSpecResourcesPtr(v *BuildSpecResourcesArgs) BuildSpecResourcesPtrInput {
	return (*buildSpecResourcesPtrType)(v)
}

func (*buildSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecResources)(nil)).Elem()
}

func (i *buildSpecResourcesPtrType) ToBuildSpecResourcesPtrOutput() BuildSpecResourcesPtrOutput {
	return i.ToBuildSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *buildSpecResourcesPtrType) ToBuildSpecResourcesPtrOutputWithContext(ctx context.Context) BuildSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecResourcesPtrOutput)
}

// Compute Resources required by the build container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesOutput struct{ *pulumi.OutputState }

func (BuildSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecResources)(nil)).Elem()
}

func (o BuildSpecResourcesOutput) ToBuildSpecResourcesOutput() BuildSpecResourcesOutput {
	return o
}

func (o BuildSpecResourcesOutput) ToBuildSpecResourcesOutputWithContext(ctx context.Context) BuildSpecResourcesOutput {
	return o
}

func (o BuildSpecResourcesOutput) ToBuildSpecResourcesPtrOutput() BuildSpecResourcesPtrOutput {
	return o.ToBuildSpecResourcesPtrOutputWithContext(context.Background())
}

func (o BuildSpecResourcesOutput) ToBuildSpecResourcesPtrOutputWithContext(ctx context.Context) BuildSpecResourcesPtrOutput {
	return o.ApplyT(func(v BuildSpecResources) *BuildSpecResources {
		return &v
	}).(BuildSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildSpecResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildSpecResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildSpecResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type BuildSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecResources)(nil)).Elem()
}

func (o BuildSpecResourcesPtrOutput) ToBuildSpecResourcesPtrOutput() BuildSpecResourcesPtrOutput {
	return o
}

func (o BuildSpecResourcesPtrOutput) ToBuildSpecResourcesPtrOutputWithContext(ctx context.Context) BuildSpecResourcesPtrOutput {
	return o
}

func (o BuildSpecResourcesPtrOutput) Elem() BuildSpecResourcesOutput {
	return o.ApplyT(func(v *BuildSpecResources) BuildSpecResources { return *v }).(BuildSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildSpecResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildSpecResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildSpecResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesLimits struct {
}

// BuildSpecResourcesLimitsInput is an input type that accepts BuildSpecResourcesLimitsArgs and BuildSpecResourcesLimitsOutput values.
// You can construct a concrete instance of `BuildSpecResourcesLimitsInput` via:
//
//          BuildSpecResourcesLimitsArgs{...}
type BuildSpecResourcesLimitsInput interface {
	pulumi.Input

	ToBuildSpecResourcesLimitsOutput() BuildSpecResourcesLimitsOutput
	ToBuildSpecResourcesLimitsOutputWithContext(context.Context) BuildSpecResourcesLimitsOutput
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesLimitsArgs struct {
}

func (BuildSpecResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecResourcesLimits)(nil)).Elem()
}

func (i BuildSpecResourcesLimitsArgs) ToBuildSpecResourcesLimitsOutput() BuildSpecResourcesLimitsOutput {
	return i.ToBuildSpecResourcesLimitsOutputWithContext(context.Background())
}

func (i BuildSpecResourcesLimitsArgs) ToBuildSpecResourcesLimitsOutputWithContext(ctx context.Context) BuildSpecResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecResourcesLimitsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesLimitsOutput struct{ *pulumi.OutputState }

func (BuildSpecResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecResourcesLimits)(nil)).Elem()
}

func (o BuildSpecResourcesLimitsOutput) ToBuildSpecResourcesLimitsOutput() BuildSpecResourcesLimitsOutput {
	return o
}

func (o BuildSpecResourcesLimitsOutput) ToBuildSpecResourcesLimitsOutputWithContext(ctx context.Context) BuildSpecResourcesLimitsOutput {
	return o
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesRequests struct {
}

// BuildSpecResourcesRequestsInput is an input type that accepts BuildSpecResourcesRequestsArgs and BuildSpecResourcesRequestsOutput values.
// You can construct a concrete instance of `BuildSpecResourcesRequestsInput` via:
//
//          BuildSpecResourcesRequestsArgs{...}
type BuildSpecResourcesRequestsInput interface {
	pulumi.Input

	ToBuildSpecResourcesRequestsOutput() BuildSpecResourcesRequestsOutput
	ToBuildSpecResourcesRequestsOutputWithContext(context.Context) BuildSpecResourcesRequestsOutput
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesRequestsArgs struct {
}

func (BuildSpecResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecResourcesRequests)(nil)).Elem()
}

func (i BuildSpecResourcesRequestsArgs) ToBuildSpecResourcesRequestsOutput() BuildSpecResourcesRequestsOutput {
	return i.ToBuildSpecResourcesRequestsOutputWithContext(context.Background())
}

func (i BuildSpecResourcesRequestsArgs) ToBuildSpecResourcesRequestsOutputWithContext(ctx context.Context) BuildSpecResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecResourcesRequestsOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildSpecResourcesRequestsOutput struct{ *pulumi.OutputState }

func (BuildSpecResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecResourcesRequests)(nil)).Elem()
}

func (o BuildSpecResourcesRequestsOutput) ToBuildSpecResourcesRequestsOutput() BuildSpecResourcesRequestsOutput {
	return o
}

func (o BuildSpecResourcesRequestsOutput) ToBuildSpecResourcesRequestsOutputWithContext(ctx context.Context) BuildSpecResourcesRequestsOutput {
	return o
}

// Source refers to the Git repository containing the source code to be built.
type BuildSpecSource struct {
	// ContextDir is a path to subfolder in the repo. Optional.
	ContextDir *string `pulumi:"contextDir"`
	// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
	Credentials *BuildSpecSourceCredentials `pulumi:"credentials"`
	// Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.
	Flavor *string `pulumi:"flavor"`
	// HTTPProxy is optional.
	HttpProxy *string `pulumi:"httpProxy"`
	// HTTPSProxy is optional.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// NoProxy can be used to specify domains for which no proxying should be performed. Optional.
	NoProxy *string `pulumi:"noProxy"`
	// Ref is a git reference. Optional. "master" is used by default.
	Revision *string `pulumi:"revision"`
	// URL of the git repo
	Url string `pulumi:"url"`
}

// BuildSpecSourceInput is an input type that accepts BuildSpecSourceArgs and BuildSpecSourceOutput values.
// You can construct a concrete instance of `BuildSpecSourceInput` via:
//
//          BuildSpecSourceArgs{...}
type BuildSpecSourceInput interface {
	pulumi.Input

	ToBuildSpecSourceOutput() BuildSpecSourceOutput
	ToBuildSpecSourceOutputWithContext(context.Context) BuildSpecSourceOutput
}

// Source refers to the Git repository containing the source code to be built.
type BuildSpecSourceArgs struct {
	// ContextDir is a path to subfolder in the repo. Optional.
	ContextDir pulumi.StringPtrInput `pulumi:"contextDir"`
	// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
	Credentials BuildSpecSourceCredentialsPtrInput `pulumi:"credentials"`
	// Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.
	Flavor pulumi.StringPtrInput `pulumi:"flavor"`
	// HTTPProxy is optional.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// HTTPSProxy is optional.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// NoProxy can be used to specify domains for which no proxying should be performed. Optional.
	NoProxy pulumi.StringPtrInput `pulumi:"noProxy"`
	// Ref is a git reference. Optional. "master" is used by default.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// URL of the git repo
	Url pulumi.StringInput `pulumi:"url"`
}

func (BuildSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecSource)(nil)).Elem()
}

func (i BuildSpecSourceArgs) ToBuildSpecSourceOutput() BuildSpecSourceOutput {
	return i.ToBuildSpecSourceOutputWithContext(context.Background())
}

func (i BuildSpecSourceArgs) ToBuildSpecSourceOutputWithContext(ctx context.Context) BuildSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecSourceOutput)
}

func (i BuildSpecSourceArgs) ToBuildSpecSourcePtrOutput() BuildSpecSourcePtrOutput {
	return i.ToBuildSpecSourcePtrOutputWithContext(context.Background())
}

func (i BuildSpecSourceArgs) ToBuildSpecSourcePtrOutputWithContext(ctx context.Context) BuildSpecSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecSourceOutput).ToBuildSpecSourcePtrOutputWithContext(ctx)
}

// BuildSpecSourcePtrInput is an input type that accepts BuildSpecSourceArgs, BuildSpecSourcePtr and BuildSpecSourcePtrOutput values.
// You can construct a concrete instance of `BuildSpecSourcePtrInput` via:
//
//          BuildSpecSourceArgs{...}
//
//  or:
//
//          nil
type BuildSpecSourcePtrInput interface {
	pulumi.Input

	ToBuildSpecSourcePtrOutput() BuildSpecSourcePtrOutput
	ToBuildSpecSourcePtrOutputWithContext(context.Context) BuildSpecSourcePtrOutput
}

type buildSpecSourcePtrType BuildSpecSourceArgs

func BuildSpecSourcePtr(v *BuildSpecSourceArgs) BuildSpecSourcePtrInput {
	return (*buildSpecSourcePtrType)(v)
}

func (*buildSpecSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecSource)(nil)).Elem()
}

func (i *buildSpecSourcePtrType) ToBuildSpecSourcePtrOutput() BuildSpecSourcePtrOutput {
	return i.ToBuildSpecSourcePtrOutputWithContext(context.Background())
}

func (i *buildSpecSourcePtrType) ToBuildSpecSourcePtrOutputWithContext(ctx context.Context) BuildSpecSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecSourcePtrOutput)
}

// Source refers to the Git repository containing the source code to be built.
type BuildSpecSourceOutput struct{ *pulumi.OutputState }

func (BuildSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecSource)(nil)).Elem()
}

func (o BuildSpecSourceOutput) ToBuildSpecSourceOutput() BuildSpecSourceOutput {
	return o
}

func (o BuildSpecSourceOutput) ToBuildSpecSourceOutputWithContext(ctx context.Context) BuildSpecSourceOutput {
	return o
}

func (o BuildSpecSourceOutput) ToBuildSpecSourcePtrOutput() BuildSpecSourcePtrOutput {
	return o.ToBuildSpecSourcePtrOutputWithContext(context.Background())
}

func (o BuildSpecSourceOutput) ToBuildSpecSourcePtrOutputWithContext(ctx context.Context) BuildSpecSourcePtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *BuildSpecSource {
		return &v
	}).(BuildSpecSourcePtrOutput)
}

// ContextDir is a path to subfolder in the repo. Optional.
func (o BuildSpecSourceOutput) ContextDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *string { return v.ContextDir }).(pulumi.StringPtrOutput)
}

// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
func (o BuildSpecSourceOutput) Credentials() BuildSpecSourceCredentialsPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *BuildSpecSourceCredentials { return v.Credentials }).(BuildSpecSourceCredentialsPtrOutput)
}

// Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.
func (o BuildSpecSourceOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *string { return v.Flavor }).(pulumi.StringPtrOutput)
}

// HTTPProxy is optional.
func (o BuildSpecSourceOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// HTTPSProxy is optional.
func (o BuildSpecSourceOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// NoProxy can be used to specify domains for which no proxying should be performed. Optional.
func (o BuildSpecSourceOutput) NoProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *string { return v.NoProxy }).(pulumi.StringPtrOutput)
}

// Ref is a git reference. Optional. "master" is used by default.
func (o BuildSpecSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// URL of the git repo
func (o BuildSpecSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecSource) string { return v.Url }).(pulumi.StringOutput)
}

type BuildSpecSourcePtrOutput struct{ *pulumi.OutputState }

func (BuildSpecSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecSource)(nil)).Elem()
}

func (o BuildSpecSourcePtrOutput) ToBuildSpecSourcePtrOutput() BuildSpecSourcePtrOutput {
	return o
}

func (o BuildSpecSourcePtrOutput) ToBuildSpecSourcePtrOutputWithContext(ctx context.Context) BuildSpecSourcePtrOutput {
	return o
}

func (o BuildSpecSourcePtrOutput) Elem() BuildSpecSourceOutput {
	return o.ApplyT(func(v *BuildSpecSource) BuildSpecSource { return *v }).(BuildSpecSourceOutput)
}

// ContextDir is a path to subfolder in the repo. Optional.
func (o BuildSpecSourcePtrOutput) ContextDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ContextDir
	}).(pulumi.StringPtrOutput)
}

// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
func (o BuildSpecSourcePtrOutput) Credentials() BuildSpecSourceCredentialsPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *BuildSpecSourceCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(BuildSpecSourceCredentialsPtrOutput)
}

// Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.
func (o BuildSpecSourcePtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.Flavor
	}).(pulumi.StringPtrOutput)
}

// HTTPProxy is optional.
func (o BuildSpecSourcePtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// HTTPSProxy is optional.
func (o BuildSpecSourcePtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// NoProxy can be used to specify domains for which no proxying should be performed. Optional.
func (o BuildSpecSourcePtrOutput) NoProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringPtrOutput)
}

// Ref is a git reference. Optional. "master" is used by default.
func (o BuildSpecSourcePtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// URL of the git repo
func (o BuildSpecSourcePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSource) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
type BuildSpecSourceCredentials struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BuildSpecSourceCredentialsInput is an input type that accepts BuildSpecSourceCredentialsArgs and BuildSpecSourceCredentialsOutput values.
// You can construct a concrete instance of `BuildSpecSourceCredentialsInput` via:
//
//          BuildSpecSourceCredentialsArgs{...}
type BuildSpecSourceCredentialsInput interface {
	pulumi.Input

	ToBuildSpecSourceCredentialsOutput() BuildSpecSourceCredentialsOutput
	ToBuildSpecSourceCredentialsOutputWithContext(context.Context) BuildSpecSourceCredentialsOutput
}

// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
type BuildSpecSourceCredentialsArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BuildSpecSourceCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecSourceCredentials)(nil)).Elem()
}

func (i BuildSpecSourceCredentialsArgs) ToBuildSpecSourceCredentialsOutput() BuildSpecSourceCredentialsOutput {
	return i.ToBuildSpecSourceCredentialsOutputWithContext(context.Background())
}

func (i BuildSpecSourceCredentialsArgs) ToBuildSpecSourceCredentialsOutputWithContext(ctx context.Context) BuildSpecSourceCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecSourceCredentialsOutput)
}

func (i BuildSpecSourceCredentialsArgs) ToBuildSpecSourceCredentialsPtrOutput() BuildSpecSourceCredentialsPtrOutput {
	return i.ToBuildSpecSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i BuildSpecSourceCredentialsArgs) ToBuildSpecSourceCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecSourceCredentialsOutput).ToBuildSpecSourceCredentialsPtrOutputWithContext(ctx)
}

// BuildSpecSourceCredentialsPtrInput is an input type that accepts BuildSpecSourceCredentialsArgs, BuildSpecSourceCredentialsPtr and BuildSpecSourceCredentialsPtrOutput values.
// You can construct a concrete instance of `BuildSpecSourceCredentialsPtrInput` via:
//
//          BuildSpecSourceCredentialsArgs{...}
//
//  or:
//
//          nil
type BuildSpecSourceCredentialsPtrInput interface {
	pulumi.Input

	ToBuildSpecSourceCredentialsPtrOutput() BuildSpecSourceCredentialsPtrOutput
	ToBuildSpecSourceCredentialsPtrOutputWithContext(context.Context) BuildSpecSourceCredentialsPtrOutput
}

type buildSpecSourceCredentialsPtrType BuildSpecSourceCredentialsArgs

func BuildSpecSourceCredentialsPtr(v *BuildSpecSourceCredentialsArgs) BuildSpecSourceCredentialsPtrInput {
	return (*buildSpecSourceCredentialsPtrType)(v)
}

func (*buildSpecSourceCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecSourceCredentials)(nil)).Elem()
}

func (i *buildSpecSourceCredentialsPtrType) ToBuildSpecSourceCredentialsPtrOutput() BuildSpecSourceCredentialsPtrOutput {
	return i.ToBuildSpecSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i *buildSpecSourceCredentialsPtrType) ToBuildSpecSourceCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecSourceCredentialsPtrOutput)
}

// SecretRef refers to the secret that contains credentials to access the git repo. Optional.
type BuildSpecSourceCredentialsOutput struct{ *pulumi.OutputState }

func (BuildSpecSourceCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecSourceCredentials)(nil)).Elem()
}

func (o BuildSpecSourceCredentialsOutput) ToBuildSpecSourceCredentialsOutput() BuildSpecSourceCredentialsOutput {
	return o
}

func (o BuildSpecSourceCredentialsOutput) ToBuildSpecSourceCredentialsOutputWithContext(ctx context.Context) BuildSpecSourceCredentialsOutput {
	return o
}

func (o BuildSpecSourceCredentialsOutput) ToBuildSpecSourceCredentialsPtrOutput() BuildSpecSourceCredentialsPtrOutput {
	return o.ToBuildSpecSourceCredentialsPtrOutputWithContext(context.Background())
}

func (o BuildSpecSourceCredentialsOutput) ToBuildSpecSourceCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecSourceCredentialsPtrOutput {
	return o.ApplyT(func(v BuildSpecSourceCredentials) *BuildSpecSourceCredentials {
		return &v
	}).(BuildSpecSourceCredentialsPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecSourceCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecSourceCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BuildSpecSourceCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecSourceCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecSourceCredentials)(nil)).Elem()
}

func (o BuildSpecSourceCredentialsPtrOutput) ToBuildSpecSourceCredentialsPtrOutput() BuildSpecSourceCredentialsPtrOutput {
	return o
}

func (o BuildSpecSourceCredentialsPtrOutput) ToBuildSpecSourceCredentialsPtrOutputWithContext(ctx context.Context) BuildSpecSourceCredentialsPtrOutput {
	return o
}

func (o BuildSpecSourceCredentialsPtrOutput) Elem() BuildSpecSourceCredentialsOutput {
	return o.ApplyT(func(v *BuildSpecSourceCredentials) BuildSpecSourceCredentials { return *v }).(BuildSpecSourceCredentialsOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildSpecSourceCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecSourceCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
type BuildSpecStrategy struct {
	// API version of the referent
	ApiVersion *string `pulumi:"apiVersion"`
	// BuildStrategyKind indicates the kind of the buildstrategy, namespaced or cluster scoped.
	Kind *string `pulumi:"kind"`
	// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name string `pulumi:"name"`
}

// BuildSpecStrategyInput is an input type that accepts BuildSpecStrategyArgs and BuildSpecStrategyOutput values.
// You can construct a concrete instance of `BuildSpecStrategyInput` via:
//
//          BuildSpecStrategyArgs{...}
type BuildSpecStrategyInput interface {
	pulumi.Input

	ToBuildSpecStrategyOutput() BuildSpecStrategyOutput
	ToBuildSpecStrategyOutputWithContext(context.Context) BuildSpecStrategyOutput
}

// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
type BuildSpecStrategyArgs struct {
	// API version of the referent
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// BuildStrategyKind indicates the kind of the buildstrategy, namespaced or cluster scoped.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (BuildSpecStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecStrategy)(nil)).Elem()
}

func (i BuildSpecStrategyArgs) ToBuildSpecStrategyOutput() BuildSpecStrategyOutput {
	return i.ToBuildSpecStrategyOutputWithContext(context.Background())
}

func (i BuildSpecStrategyArgs) ToBuildSpecStrategyOutputWithContext(ctx context.Context) BuildSpecStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecStrategyOutput)
}

func (i BuildSpecStrategyArgs) ToBuildSpecStrategyPtrOutput() BuildSpecStrategyPtrOutput {
	return i.ToBuildSpecStrategyPtrOutputWithContext(context.Background())
}

func (i BuildSpecStrategyArgs) ToBuildSpecStrategyPtrOutputWithContext(ctx context.Context) BuildSpecStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecStrategyOutput).ToBuildSpecStrategyPtrOutputWithContext(ctx)
}

// BuildSpecStrategyPtrInput is an input type that accepts BuildSpecStrategyArgs, BuildSpecStrategyPtr and BuildSpecStrategyPtrOutput values.
// You can construct a concrete instance of `BuildSpecStrategyPtrInput` via:
//
//          BuildSpecStrategyArgs{...}
//
//  or:
//
//          nil
type BuildSpecStrategyPtrInput interface {
	pulumi.Input

	ToBuildSpecStrategyPtrOutput() BuildSpecStrategyPtrOutput
	ToBuildSpecStrategyPtrOutputWithContext(context.Context) BuildSpecStrategyPtrOutput
}

type buildSpecStrategyPtrType BuildSpecStrategyArgs

func BuildSpecStrategyPtr(v *BuildSpecStrategyArgs) BuildSpecStrategyPtrInput {
	return (*buildSpecStrategyPtrType)(v)
}

func (*buildSpecStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecStrategy)(nil)).Elem()
}

func (i *buildSpecStrategyPtrType) ToBuildSpecStrategyPtrOutput() BuildSpecStrategyPtrOutput {
	return i.ToBuildSpecStrategyPtrOutputWithContext(context.Background())
}

func (i *buildSpecStrategyPtrType) ToBuildSpecStrategyPtrOutputWithContext(ctx context.Context) BuildSpecStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildSpecStrategyPtrOutput)
}

// StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy
type BuildSpecStrategyOutput struct{ *pulumi.OutputState }

func (BuildSpecStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildSpecStrategy)(nil)).Elem()
}

func (o BuildSpecStrategyOutput) ToBuildSpecStrategyOutput() BuildSpecStrategyOutput {
	return o
}

func (o BuildSpecStrategyOutput) ToBuildSpecStrategyOutputWithContext(ctx context.Context) BuildSpecStrategyOutput {
	return o
}

func (o BuildSpecStrategyOutput) ToBuildSpecStrategyPtrOutput() BuildSpecStrategyPtrOutput {
	return o.ToBuildSpecStrategyPtrOutputWithContext(context.Background())
}

func (o BuildSpecStrategyOutput) ToBuildSpecStrategyPtrOutputWithContext(ctx context.Context) BuildSpecStrategyPtrOutput {
	return o.ApplyT(func(v BuildSpecStrategy) *BuildSpecStrategy {
		return &v
	}).(BuildSpecStrategyPtrOutput)
}

// API version of the referent
func (o BuildSpecStrategyOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecStrategy) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// BuildStrategyKind indicates the kind of the buildstrategy, namespaced or cluster scoped.
func (o BuildSpecStrategyOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildSpecStrategy) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
func (o BuildSpecStrategyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildSpecStrategy) string { return v.Name }).(pulumi.StringOutput)
}

type BuildSpecStrategyPtrOutput struct{ *pulumi.OutputState }

func (BuildSpecStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildSpecStrategy)(nil)).Elem()
}

func (o BuildSpecStrategyPtrOutput) ToBuildSpecStrategyPtrOutput() BuildSpecStrategyPtrOutput {
	return o
}

func (o BuildSpecStrategyPtrOutput) ToBuildSpecStrategyPtrOutputWithContext(ctx context.Context) BuildSpecStrategyPtrOutput {
	return o
}

func (o BuildSpecStrategyPtrOutput) Elem() BuildSpecStrategyOutput {
	return o.ApplyT(func(v *BuildSpecStrategy) BuildSpecStrategy { return *v }).(BuildSpecStrategyOutput)
}

// API version of the referent
func (o BuildSpecStrategyPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecStrategy) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// BuildStrategyKind indicates the kind of the buildstrategy, namespaced or cluster scoped.
func (o BuildSpecStrategyPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
func (o BuildSpecStrategyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildSpecStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// BuildStatus defines the observed state of Build
type BuildStatus struct {
}

// BuildStatusInput is an input type that accepts BuildStatusArgs and BuildStatusOutput values.
// You can construct a concrete instance of `BuildStatusInput` via:
//
//          BuildStatusArgs{...}
type BuildStatusInput interface {
	pulumi.Input

	ToBuildStatusOutput() BuildStatusOutput
	ToBuildStatusOutputWithContext(context.Context) BuildStatusOutput
}

// BuildStatus defines the observed state of Build
type BuildStatusArgs struct {
}

func (BuildStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatus)(nil)).Elem()
}

func (i BuildStatusArgs) ToBuildStatusOutput() BuildStatusOutput {
	return i.ToBuildStatusOutputWithContext(context.Background())
}

func (i BuildStatusArgs) ToBuildStatusOutputWithContext(ctx context.Context) BuildStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStatusOutput)
}

// BuildStatus defines the observed state of Build
type BuildStatusOutput struct{ *pulumi.OutputState }

func (BuildStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStatus)(nil)).Elem()
}

func (o BuildStatusOutput) ToBuildStatusOutput() BuildStatusOutput {
	return o
}

func (o BuildStatusOutput) ToBuildStatusOutputWithContext(ctx context.Context) BuildStatusOutput {
	return o
}

// BuildStrategy is the Schema for the buildstrategies API
type BuildStrategyType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildStrategySpec defines the desired state of BuildStrategy
	Spec *BuildStrategySpec `pulumi:"spec"`
	// BuildStrategyStatus defines the observed state of BuildStrategy
	Status map[string]interface{} `pulumi:"status"`
}

// BuildStrategyTypeInput is an input type that accepts BuildStrategyTypeArgs and BuildStrategyTypeOutput values.
// You can construct a concrete instance of `BuildStrategyTypeInput` via:
//
//          BuildStrategyTypeArgs{...}
type BuildStrategyTypeInput interface {
	pulumi.Input

	ToBuildStrategyTypeOutput() BuildStrategyTypeOutput
	ToBuildStrategyTypeOutputWithContext(context.Context) BuildStrategyTypeOutput
}

// BuildStrategy is the Schema for the buildstrategies API
type BuildStrategyTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BuildStrategySpec defines the desired state of BuildStrategy
	Spec BuildStrategySpecPtrInput `pulumi:"spec"`
	// BuildStrategyStatus defines the observed state of BuildStrategy
	Status pulumi.MapInput `pulumi:"status"`
}

func (BuildStrategyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategyType)(nil)).Elem()
}

func (i BuildStrategyTypeArgs) ToBuildStrategyTypeOutput() BuildStrategyTypeOutput {
	return i.ToBuildStrategyTypeOutputWithContext(context.Background())
}

func (i BuildStrategyTypeArgs) ToBuildStrategyTypeOutputWithContext(ctx context.Context) BuildStrategyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategyTypeOutput)
}

// BuildStrategy is the Schema for the buildstrategies API
type BuildStrategyTypeOutput struct{ *pulumi.OutputState }

func (BuildStrategyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategyType)(nil)).Elem()
}

func (o BuildStrategyTypeOutput) ToBuildStrategyTypeOutput() BuildStrategyTypeOutput {
	return o
}

func (o BuildStrategyTypeOutput) ToBuildStrategyTypeOutputWithContext(ctx context.Context) BuildStrategyTypeOutput {
	return o
}

func (o BuildStrategyTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategyType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BuildStrategyTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategyType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BuildStrategyTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BuildStrategyType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BuildStrategySpec defines the desired state of BuildStrategy
func (o BuildStrategyTypeOutput) Spec() BuildStrategySpecPtrOutput {
	return o.ApplyT(func(v BuildStrategyType) *BuildStrategySpec { return v.Spec }).(BuildStrategySpecPtrOutput)
}

// BuildStrategyStatus defines the observed state of BuildStrategy
func (o BuildStrategyTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v BuildStrategyType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type BuildStrategyMetadata struct {
}

// BuildStrategyMetadataInput is an input type that accepts BuildStrategyMetadataArgs and BuildStrategyMetadataOutput values.
// You can construct a concrete instance of `BuildStrategyMetadataInput` via:
//
//          BuildStrategyMetadataArgs{...}
type BuildStrategyMetadataInput interface {
	pulumi.Input

	ToBuildStrategyMetadataOutput() BuildStrategyMetadataOutput
	ToBuildStrategyMetadataOutputWithContext(context.Context) BuildStrategyMetadataOutput
}

type BuildStrategyMetadataArgs struct {
}

func (BuildStrategyMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategyMetadata)(nil)).Elem()
}

func (i BuildStrategyMetadataArgs) ToBuildStrategyMetadataOutput() BuildStrategyMetadataOutput {
	return i.ToBuildStrategyMetadataOutputWithContext(context.Background())
}

func (i BuildStrategyMetadataArgs) ToBuildStrategyMetadataOutputWithContext(ctx context.Context) BuildStrategyMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategyMetadataOutput)
}

type BuildStrategyMetadataOutput struct{ *pulumi.OutputState }

func (BuildStrategyMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategyMetadata)(nil)).Elem()
}

func (o BuildStrategyMetadataOutput) ToBuildStrategyMetadataOutput() BuildStrategyMetadataOutput {
	return o
}

func (o BuildStrategyMetadataOutput) ToBuildStrategyMetadataOutputWithContext(ctx context.Context) BuildStrategyMetadataOutput {
	return o
}

// BuildStrategySpec defines the desired state of BuildStrategy
type BuildStrategySpec struct {
	BuildSteps []BuildStrategySpecBuildSteps `pulumi:"buildSteps"`
}

// BuildStrategySpecInput is an input type that accepts BuildStrategySpecArgs and BuildStrategySpecOutput values.
// You can construct a concrete instance of `BuildStrategySpecInput` via:
//
//          BuildStrategySpecArgs{...}
type BuildStrategySpecInput interface {
	pulumi.Input

	ToBuildStrategySpecOutput() BuildStrategySpecOutput
	ToBuildStrategySpecOutputWithContext(context.Context) BuildStrategySpecOutput
}

// BuildStrategySpec defines the desired state of BuildStrategy
type BuildStrategySpecArgs struct {
	BuildSteps BuildStrategySpecBuildStepsArrayInput `pulumi:"buildSteps"`
}

func (BuildStrategySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpec)(nil)).Elem()
}

func (i BuildStrategySpecArgs) ToBuildStrategySpecOutput() BuildStrategySpecOutput {
	return i.ToBuildStrategySpecOutputWithContext(context.Background())
}

func (i BuildStrategySpecArgs) ToBuildStrategySpecOutputWithContext(ctx context.Context) BuildStrategySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecOutput)
}

func (i BuildStrategySpecArgs) ToBuildStrategySpecPtrOutput() BuildStrategySpecPtrOutput {
	return i.ToBuildStrategySpecPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecArgs) ToBuildStrategySpecPtrOutputWithContext(ctx context.Context) BuildStrategySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecOutput).ToBuildStrategySpecPtrOutputWithContext(ctx)
}

// BuildStrategySpecPtrInput is an input type that accepts BuildStrategySpecArgs, BuildStrategySpecPtr and BuildStrategySpecPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecPtrInput` via:
//
//          BuildStrategySpecArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecPtrOutput() BuildStrategySpecPtrOutput
	ToBuildStrategySpecPtrOutputWithContext(context.Context) BuildStrategySpecPtrOutput
}

type buildStrategySpecPtrType BuildStrategySpecArgs

func BuildStrategySpecPtr(v *BuildStrategySpecArgs) BuildStrategySpecPtrInput {
	return (*buildStrategySpecPtrType)(v)
}

func (*buildStrategySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpec)(nil)).Elem()
}

func (i *buildStrategySpecPtrType) ToBuildStrategySpecPtrOutput() BuildStrategySpecPtrOutput {
	return i.ToBuildStrategySpecPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecPtrType) ToBuildStrategySpecPtrOutputWithContext(ctx context.Context) BuildStrategySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecPtrOutput)
}

// BuildStrategySpec defines the desired state of BuildStrategy
type BuildStrategySpecOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpec)(nil)).Elem()
}

func (o BuildStrategySpecOutput) ToBuildStrategySpecOutput() BuildStrategySpecOutput {
	return o
}

func (o BuildStrategySpecOutput) ToBuildStrategySpecOutputWithContext(ctx context.Context) BuildStrategySpecOutput {
	return o
}

func (o BuildStrategySpecOutput) ToBuildStrategySpecPtrOutput() BuildStrategySpecPtrOutput {
	return o.ToBuildStrategySpecPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecOutput) ToBuildStrategySpecPtrOutputWithContext(ctx context.Context) BuildStrategySpecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpec) *BuildStrategySpec {
		return &v
	}).(BuildStrategySpecPtrOutput)
}
func (o BuildStrategySpecOutput) BuildSteps() BuildStrategySpecBuildStepsArrayOutput {
	return o.ApplyT(func(v BuildStrategySpec) []BuildStrategySpecBuildSteps { return v.BuildSteps }).(BuildStrategySpecBuildStepsArrayOutput)
}

type BuildStrategySpecPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpec)(nil)).Elem()
}

func (o BuildStrategySpecPtrOutput) ToBuildStrategySpecPtrOutput() BuildStrategySpecPtrOutput {
	return o
}

func (o BuildStrategySpecPtrOutput) ToBuildStrategySpecPtrOutputWithContext(ctx context.Context) BuildStrategySpecPtrOutput {
	return o
}

func (o BuildStrategySpecPtrOutput) Elem() BuildStrategySpecOutput {
	return o.ApplyT(func(v *BuildStrategySpec) BuildStrategySpec { return *v }).(BuildStrategySpecOutput)
}

func (o BuildStrategySpecPtrOutput) BuildSteps() BuildStrategySpecBuildStepsArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpec) []BuildStrategySpecBuildSteps {
		if v == nil {
			return nil
		}
		return v.BuildSteps
	}).(BuildStrategySpecBuildStepsArrayOutput)
}

// BuildStep defines a partial step that needs to run in container for building the image.
type BuildStrategySpecBuildSteps struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args []string `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Command []string `pulumi:"command"`
	// List of environment variables to set in the container. Cannot be updated.
	Env []BuildStrategySpecBuildStepsEnv `pulumi:"env"`
	// List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
	EnvFrom []BuildStrategySpecBuildStepsEnvFrom `pulumi:"envFrom"`
	// Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
	Image *string `pulumi:"image"`
	// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	ImagePullPolicy *string `pulumi:"imagePullPolicy"`
	// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
	Lifecycle *BuildStrategySpecBuildStepsLifecycle `pulumi:"lifecycle"`
	// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe *BuildStrategySpecBuildStepsLivenessProbe `pulumi:"livenessProbe"`
	// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
	Name string `pulumi:"name"`
	// List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
	Ports []BuildStrategySpecBuildStepsPorts `pulumi:"ports"`
	// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe *BuildStrategySpecBuildStepsReadinessProbe `pulumi:"readinessProbe"`
	// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources *BuildStrategySpecBuildStepsResources `pulumi:"resources"`
	// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
	SecurityContext *BuildStrategySpecBuildStepsSecurityContext `pulumi:"securityContext"`
	// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe *BuildStrategySpecBuildStepsStartupProbe `pulumi:"startupProbe"`
	// Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
	Stdin *bool `pulumi:"stdin"`
	// Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
	StdinOnce *bool `pulumi:"stdinOnce"`
	// Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
	TerminationMessagePath *string `pulumi:"terminationMessagePath"`
	// Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
	TerminationMessagePolicy *string `pulumi:"terminationMessagePolicy"`
	// Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
	Tty *bool `pulumi:"tty"`
	// volumeDevices is the list of block devices to be used by the container. This is a beta feature.
	VolumeDevices []BuildStrategySpecBuildStepsVolumeDevices `pulumi:"volumeDevices"`
	// Pod volumes to mount into the container's filesystem. Cannot be updated.
	VolumeMounts []BuildStrategySpecBuildStepsVolumeMounts `pulumi:"volumeMounts"`
	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
	WorkingDir *string `pulumi:"workingDir"`
}

// BuildStrategySpecBuildStepsInput is an input type that accepts BuildStrategySpecBuildStepsArgs and BuildStrategySpecBuildStepsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsInput` via:
//
//          BuildStrategySpecBuildStepsArgs{...}
type BuildStrategySpecBuildStepsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsOutput() BuildStrategySpecBuildStepsOutput
	ToBuildStrategySpecBuildStepsOutputWithContext(context.Context) BuildStrategySpecBuildStepsOutput
}

// BuildStep defines a partial step that needs to run in container for building the image.
type BuildStrategySpecBuildStepsArgs struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Command pulumi.StringArrayInput `pulumi:"command"`
	// List of environment variables to set in the container. Cannot be updated.
	Env BuildStrategySpecBuildStepsEnvArrayInput `pulumi:"env"`
	// List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
	EnvFrom BuildStrategySpecBuildStepsEnvFromArrayInput `pulumi:"envFrom"`
	// Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	ImagePullPolicy pulumi.StringPtrInput `pulumi:"imagePullPolicy"`
	// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
	Lifecycle BuildStrategySpecBuildStepsLifecyclePtrInput `pulumi:"lifecycle"`
	// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe BuildStrategySpecBuildStepsLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
	Name pulumi.StringInput `pulumi:"name"`
	// List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
	Ports BuildStrategySpecBuildStepsPortsArrayInput `pulumi:"ports"`
	// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe BuildStrategySpecBuildStepsReadinessProbePtrInput `pulumi:"readinessProbe"`
	// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources BuildStrategySpecBuildStepsResourcesPtrInput `pulumi:"resources"`
	// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
	SecurityContext BuildStrategySpecBuildStepsSecurityContextPtrInput `pulumi:"securityContext"`
	// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe BuildStrategySpecBuildStepsStartupProbePtrInput `pulumi:"startupProbe"`
	// Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
	Stdin pulumi.BoolPtrInput `pulumi:"stdin"`
	// Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
	StdinOnce pulumi.BoolPtrInput `pulumi:"stdinOnce"`
	// Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
	TerminationMessagePath pulumi.StringPtrInput `pulumi:"terminationMessagePath"`
	// Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
	TerminationMessagePolicy pulumi.StringPtrInput `pulumi:"terminationMessagePolicy"`
	// Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
	Tty pulumi.BoolPtrInput `pulumi:"tty"`
	// volumeDevices is the list of block devices to be used by the container. This is a beta feature.
	VolumeDevices BuildStrategySpecBuildStepsVolumeDevicesArrayInput `pulumi:"volumeDevices"`
	// Pod volumes to mount into the container's filesystem. Cannot be updated.
	VolumeMounts BuildStrategySpecBuildStepsVolumeMountsArrayInput `pulumi:"volumeMounts"`
	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (BuildStrategySpecBuildStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildSteps)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsArgs) ToBuildStrategySpecBuildStepsOutput() BuildStrategySpecBuildStepsOutput {
	return i.ToBuildStrategySpecBuildStepsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsArgs) ToBuildStrategySpecBuildStepsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsOutput)
}

// BuildStrategySpecBuildStepsArrayInput is an input type that accepts BuildStrategySpecBuildStepsArray and BuildStrategySpecBuildStepsArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsArrayInput` via:
//
//          BuildStrategySpecBuildStepsArray{ BuildStrategySpecBuildStepsArgs{...} }
type BuildStrategySpecBuildStepsArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsArrayOutput() BuildStrategySpecBuildStepsArrayOutput
	ToBuildStrategySpecBuildStepsArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsArrayOutput
}

type BuildStrategySpecBuildStepsArray []BuildStrategySpecBuildStepsInput

func (BuildStrategySpecBuildStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildSteps)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsArray) ToBuildStrategySpecBuildStepsArrayOutput() BuildStrategySpecBuildStepsArrayOutput {
	return i.ToBuildStrategySpecBuildStepsArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsArray) ToBuildStrategySpecBuildStepsArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsArrayOutput)
}

// BuildStep defines a partial step that needs to run in container for building the image.
type BuildStrategySpecBuildStepsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildSteps)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsOutput) ToBuildStrategySpecBuildStepsOutput() BuildStrategySpecBuildStepsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsOutput) ToBuildStrategySpecBuildStepsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsOutput {
	return o
}

// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
func (o BuildStrategySpecBuildStepsOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
func (o BuildStrategySpecBuildStepsOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// List of environment variables to set in the container. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) Env() BuildStrategySpecBuildStepsEnvArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []BuildStrategySpecBuildStepsEnv { return v.Env }).(BuildStrategySpecBuildStepsEnvArrayOutput)
}

// List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) EnvFrom() BuildStrategySpecBuildStepsEnvFromArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []BuildStrategySpecBuildStepsEnvFrom { return v.EnvFrom }).(BuildStrategySpecBuildStepsEnvFromArrayOutput)
}

// Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
func (o BuildStrategySpecBuildStepsOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
func (o BuildStrategySpecBuildStepsOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *string { return v.ImagePullPolicy }).(pulumi.StringPtrOutput)
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) Lifecycle() BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *BuildStrategySpecBuildStepsLifecycle { return v.Lifecycle }).(BuildStrategySpecBuildStepsLifecyclePtrOutput)
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsOutput) LivenessProbe() BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *BuildStrategySpecBuildStepsLivenessProbe { return v.LivenessProbe }).(BuildStrategySpecBuildStepsLivenessProbePtrOutput)
}

// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) string { return v.Name }).(pulumi.StringOutput)
}

// List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) Ports() BuildStrategySpecBuildStepsPortsArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []BuildStrategySpecBuildStepsPorts { return v.Ports }).(BuildStrategySpecBuildStepsPortsArrayOutput)
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsOutput) ReadinessProbe() BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *BuildStrategySpecBuildStepsReadinessProbe {
		return v.ReadinessProbe
	}).(BuildStrategySpecBuildStepsReadinessProbePtrOutput)
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildStrategySpecBuildStepsOutput) Resources() BuildStrategySpecBuildStepsResourcesPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *BuildStrategySpecBuildStepsResources { return v.Resources }).(BuildStrategySpecBuildStepsResourcesPtrOutput)
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
func (o BuildStrategySpecBuildStepsOutput) SecurityContext() BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *BuildStrategySpecBuildStepsSecurityContext {
		return v.SecurityContext
	}).(BuildStrategySpecBuildStepsSecurityContextPtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsOutput) StartupProbe() BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *BuildStrategySpecBuildStepsStartupProbe { return v.StartupProbe }).(BuildStrategySpecBuildStepsStartupProbePtrOutput)
}

// Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
func (o BuildStrategySpecBuildStepsOutput) Stdin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *bool { return v.Stdin }).(pulumi.BoolPtrOutput)
}

// Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
func (o BuildStrategySpecBuildStepsOutput) StdinOnce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *bool { return v.StdinOnce }).(pulumi.BoolPtrOutput)
}

// Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) TerminationMessagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *string { return v.TerminationMessagePath }).(pulumi.StringPtrOutput)
}

// Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) TerminationMessagePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *string { return v.TerminationMessagePolicy }).(pulumi.StringPtrOutput)
}

// Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
func (o BuildStrategySpecBuildStepsOutput) Tty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *bool { return v.Tty }).(pulumi.BoolPtrOutput)
}

// volumeDevices is the list of block devices to be used by the container. This is a beta feature.
func (o BuildStrategySpecBuildStepsOutput) VolumeDevices() BuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []BuildStrategySpecBuildStepsVolumeDevices { return v.VolumeDevices }).(BuildStrategySpecBuildStepsVolumeDevicesArrayOutput)
}

// Pod volumes to mount into the container's filesystem. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) VolumeMounts() BuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) []BuildStrategySpecBuildStepsVolumeMounts { return v.VolumeMounts }).(BuildStrategySpecBuildStepsVolumeMountsArrayOutput)
}

// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
func (o BuildStrategySpecBuildStepsOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildSteps) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildSteps)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsArrayOutput) ToBuildStrategySpecBuildStepsArrayOutput() BuildStrategySpecBuildStepsArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsArrayOutput) ToBuildStrategySpecBuildStepsArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildSteps {
		return vs[0].([]BuildStrategySpecBuildSteps)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsOutput)
}

// EnvVar represents an environment variable present in a Container.
type BuildStrategySpecBuildStepsEnv struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name string `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value *string `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom *BuildStrategySpecBuildStepsEnvValueFrom `pulumi:"valueFrom"`
}

// BuildStrategySpecBuildStepsEnvInput is an input type that accepts BuildStrategySpecBuildStepsEnvArgs and BuildStrategySpecBuildStepsEnvOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvInput` via:
//
//          BuildStrategySpecBuildStepsEnvArgs{...}
type BuildStrategySpecBuildStepsEnvInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvOutput() BuildStrategySpecBuildStepsEnvOutput
	ToBuildStrategySpecBuildStepsEnvOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvOutput
}

// EnvVar represents an environment variable present in a Container.
type BuildStrategySpecBuildStepsEnvArgs struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name pulumi.StringInput `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom BuildStrategySpecBuildStepsEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (BuildStrategySpecBuildStepsEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvArgs) ToBuildStrategySpecBuildStepsEnvOutput() BuildStrategySpecBuildStepsEnvOutput {
	return i.ToBuildStrategySpecBuildStepsEnvOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvArgs) ToBuildStrategySpecBuildStepsEnvOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvOutput)
}

// BuildStrategySpecBuildStepsEnvArrayInput is an input type that accepts BuildStrategySpecBuildStepsEnvArray and BuildStrategySpecBuildStepsEnvArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvArrayInput` via:
//
//          BuildStrategySpecBuildStepsEnvArray{ BuildStrategySpecBuildStepsEnvArgs{...} }
type BuildStrategySpecBuildStepsEnvArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvArrayOutput() BuildStrategySpecBuildStepsEnvArrayOutput
	ToBuildStrategySpecBuildStepsEnvArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvArrayOutput
}

type BuildStrategySpecBuildStepsEnvArray []BuildStrategySpecBuildStepsEnvInput

func (BuildStrategySpecBuildStepsEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvArray) ToBuildStrategySpecBuildStepsEnvArrayOutput() BuildStrategySpecBuildStepsEnvArrayOutput {
	return i.ToBuildStrategySpecBuildStepsEnvArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvArray) ToBuildStrategySpecBuildStepsEnvArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvArrayOutput)
}

// EnvVar represents an environment variable present in a Container.
type BuildStrategySpecBuildStepsEnvOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvOutput) ToBuildStrategySpecBuildStepsEnvOutput() BuildStrategySpecBuildStepsEnvOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvOutput) ToBuildStrategySpecBuildStepsEnvOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvOutput {
	return o
}

// Name of the environment variable. Must be a C_IDENTIFIER.
func (o BuildStrategySpecBuildStepsEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
func (o BuildStrategySpecBuildStepsEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
func (o BuildStrategySpecBuildStepsEnvOutput) ValueFrom() BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnv) *BuildStrategySpecBuildStepsEnvValueFrom { return v.ValueFrom }).(BuildStrategySpecBuildStepsEnvValueFromPtrOutput)
}

type BuildStrategySpecBuildStepsEnvArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvArrayOutput) ToBuildStrategySpecBuildStepsEnvArrayOutput() BuildStrategySpecBuildStepsEnvArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvArrayOutput) ToBuildStrategySpecBuildStepsEnvArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsEnv {
		return vs[0].([]BuildStrategySpecBuildStepsEnv)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsEnvOutput)
}

// EnvFromSource represents the source of a set of ConfigMaps
type BuildStrategySpecBuildStepsEnvFrom struct {
	// The ConfigMap to select from
	ConfigMapRef *BuildStrategySpecBuildStepsEnvFromConfigMapRef `pulumi:"configMapRef"`
	// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
	Prefix *string `pulumi:"prefix"`
	// The Secret to select from
	SecretRef *BuildStrategySpecBuildStepsEnvFromSecretRef `pulumi:"secretRef"`
}

// BuildStrategySpecBuildStepsEnvFromInput is an input type that accepts BuildStrategySpecBuildStepsEnvFromArgs and BuildStrategySpecBuildStepsEnvFromOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvFromInput` via:
//
//          BuildStrategySpecBuildStepsEnvFromArgs{...}
type BuildStrategySpecBuildStepsEnvFromInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvFromOutput() BuildStrategySpecBuildStepsEnvFromOutput
	ToBuildStrategySpecBuildStepsEnvFromOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvFromOutput
}

// EnvFromSource represents the source of a set of ConfigMaps
type BuildStrategySpecBuildStepsEnvFromArgs struct {
	// The ConfigMap to select from
	ConfigMapRef BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput `pulumi:"configMapRef"`
	// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The Secret to select from
	SecretRef BuildStrategySpecBuildStepsEnvFromSecretRefPtrInput `pulumi:"secretRef"`
}

func (BuildStrategySpecBuildStepsEnvFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvFromArgs) ToBuildStrategySpecBuildStepsEnvFromOutput() BuildStrategySpecBuildStepsEnvFromOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvFromArgs) ToBuildStrategySpecBuildStepsEnvFromOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromOutput)
}

// BuildStrategySpecBuildStepsEnvFromArrayInput is an input type that accepts BuildStrategySpecBuildStepsEnvFromArray and BuildStrategySpecBuildStepsEnvFromArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvFromArrayInput` via:
//
//          BuildStrategySpecBuildStepsEnvFromArray{ BuildStrategySpecBuildStepsEnvFromArgs{...} }
type BuildStrategySpecBuildStepsEnvFromArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvFromArrayOutput() BuildStrategySpecBuildStepsEnvFromArrayOutput
	ToBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvFromArrayOutput
}

type BuildStrategySpecBuildStepsEnvFromArray []BuildStrategySpecBuildStepsEnvFromInput

func (BuildStrategySpecBuildStepsEnvFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvFromArray) ToBuildStrategySpecBuildStepsEnvFromArrayOutput() BuildStrategySpecBuildStepsEnvFromArrayOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvFromArray) ToBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromArrayOutput)
}

// EnvFromSource represents the source of a set of ConfigMaps
type BuildStrategySpecBuildStepsEnvFromOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvFromOutput) ToBuildStrategySpecBuildStepsEnvFromOutput() BuildStrategySpecBuildStepsEnvFromOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromOutput) ToBuildStrategySpecBuildStepsEnvFromOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromOutput {
	return o
}

// The ConfigMap to select from
func (o BuildStrategySpecBuildStepsEnvFromOutput) ConfigMapRef() BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFrom) *BuildStrategySpecBuildStepsEnvFromConfigMapRef {
		return v.ConfigMapRef
	}).(BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput)
}

// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
func (o BuildStrategySpecBuildStepsEnvFromOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFrom) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The Secret to select from
func (o BuildStrategySpecBuildStepsEnvFromOutput) SecretRef() BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFrom) *BuildStrategySpecBuildStepsEnvFromSecretRef {
		return v.SecretRef
	}).(BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput)
}

type BuildStrategySpecBuildStepsEnvFromArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvFromArrayOutput) ToBuildStrategySpecBuildStepsEnvFromArrayOutput() BuildStrategySpecBuildStepsEnvFromArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromArrayOutput) ToBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsEnvFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsEnvFrom {
		return vs[0].([]BuildStrategySpecBuildStepsEnvFrom)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsEnvFromOutput)
}

// The ConfigMap to select from
type BuildStrategySpecBuildStepsEnvFromConfigMapRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildStrategySpecBuildStepsEnvFromConfigMapRefInput is an input type that accepts BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs and BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvFromConfigMapRefInput` via:
//
//          BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs{...}
type BuildStrategySpecBuildStepsEnvFromConfigMapRefInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput
	ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput
}

// The ConfigMap to select from
type BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput)
}

func (i BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput).ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs, BuildStrategySpecBuildStepsEnvFromConfigMapRefPtr and BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput
	ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput
}

type buildStrategySpecBuildStepsEnvFromConfigMapRefPtrType BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs

func BuildStrategySpecBuildStepsEnvFromConfigMapRefPtr(v *BuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput {
	return (*buildStrategySpecBuildStepsEnvFromConfigMapRefPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvFromConfigMapRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvFromConfigMapRefPtrType) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvFromConfigMapRefPtrType) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput)
}

// The ConfigMap to select from
type BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFromConfigMapRef) *BuildStrategySpecBuildStepsEnvFromConfigMapRef {
		return &v
	}).(BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFromConfigMapRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap must be defined
func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFromConfigMapRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) ToBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) Elem() BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvFromConfigMapRef) BuildStrategySpecBuildStepsEnvFromConfigMapRef {
		return *v
	}).(BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvFromConfigMapRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap must be defined
func (o BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvFromConfigMapRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The Secret to select from
type BuildStrategySpecBuildStepsEnvFromSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildStrategySpecBuildStepsEnvFromSecretRefInput is an input type that accepts BuildStrategySpecBuildStepsEnvFromSecretRefArgs and BuildStrategySpecBuildStepsEnvFromSecretRefOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvFromSecretRefInput` via:
//
//          BuildStrategySpecBuildStepsEnvFromSecretRefArgs{...}
type BuildStrategySpecBuildStepsEnvFromSecretRefInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvFromSecretRefOutput() BuildStrategySpecBuildStepsEnvFromSecretRefOutput
	ToBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefOutput
}

// The Secret to select from
type BuildStrategySpecBuildStepsEnvFromSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildStrategySpecBuildStepsEnvFromSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToBuildStrategySpecBuildStepsEnvFromSecretRefOutput() BuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromSecretRefOutput)
}

func (i BuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromSecretRefOutput).ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvFromSecretRefPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvFromSecretRefArgs, BuildStrategySpecBuildStepsEnvFromSecretRefPtr and BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvFromSecretRefPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvFromSecretRefArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvFromSecretRefPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput
	ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput
}

type buildStrategySpecBuildStepsEnvFromSecretRefPtrType BuildStrategySpecBuildStepsEnvFromSecretRefArgs

func BuildStrategySpecBuildStepsEnvFromSecretRefPtr(v *BuildStrategySpecBuildStepsEnvFromSecretRefArgs) BuildStrategySpecBuildStepsEnvFromSecretRefPtrInput {
	return (*buildStrategySpecBuildStepsEnvFromSecretRefPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvFromSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvFromSecretRefPtrType) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvFromSecretRefPtrType) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput)
}

// The Secret to select from
type BuildStrategySpecBuildStepsEnvFromSecretRefOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvFromSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToBuildStrategySpecBuildStepsEnvFromSecretRefOutput() BuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFromSecretRef) *BuildStrategySpecBuildStepsEnvFromSecretRef {
		return &v
	}).(BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvFromSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFromSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret must be defined
func (o BuildStrategySpecBuildStepsEnvFromSecretRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvFromSecretRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) ToBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) Elem() BuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvFromSecretRef) BuildStrategySpecBuildStepsEnvFromSecretRef {
		return *v
	}).(BuildStrategySpecBuildStepsEnvFromSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvFromSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret must be defined
func (o BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvFromSecretRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type BuildStrategySpecBuildStepsEnvValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
	FieldRef *BuildStrategySpecBuildStepsEnvValueFromFieldRef `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// BuildStrategySpecBuildStepsEnvValueFromInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromArgs and BuildStrategySpecBuildStepsEnvValueFromOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromArgs{...}
type BuildStrategySpecBuildStepsEnvValueFromInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromOutput() BuildStrategySpecBuildStepsEnvValueFromOutput
	ToBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromOutput
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type BuildStrategySpecBuildStepsEnvValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
	FieldRef BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (BuildStrategySpecBuildStepsEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvValueFromArgs) ToBuildStrategySpecBuildStepsEnvValueFromOutput() BuildStrategySpecBuildStepsEnvValueFromOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromArgs) ToBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromOutput)
}

func (i BuildStrategySpecBuildStepsEnvValueFromArgs) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutput() BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromArgs) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromOutput).ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvValueFromPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromArgs, BuildStrategySpecBuildStepsEnvValueFromPtr and BuildStrategySpecBuildStepsEnvValueFromPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvValueFromPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromPtrOutput() BuildStrategySpecBuildStepsEnvValueFromPtrOutput
	ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromPtrOutput
}

type buildStrategySpecBuildStepsEnvValueFromPtrType BuildStrategySpecBuildStepsEnvValueFromArgs

func BuildStrategySpecBuildStepsEnvValueFromPtr(v *BuildStrategySpecBuildStepsEnvValueFromArgs) BuildStrategySpecBuildStepsEnvValueFromPtrInput {
	return (*buildStrategySpecBuildStepsEnvValueFromPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvValueFromPtrType) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutput() BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvValueFromPtrType) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type BuildStrategySpecBuildStepsEnvValueFromOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromOutput) ToBuildStrategySpecBuildStepsEnvValueFromOutput() BuildStrategySpecBuildStepsEnvValueFromOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromOutput) ToBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromOutput) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutput() BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvValueFromOutput) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFrom {
		return &v
	}).(BuildStrategySpecBuildStepsEnvValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o BuildStrategySpecBuildStepsEnvValueFromOutput) ConfigMapKeyRef() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
func (o BuildStrategySpecBuildStepsEnvValueFromOutput) FieldRef() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromFieldRef {
		return v.FieldRef
	}).(BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o BuildStrategySpecBuildStepsEnvValueFromOutput) ResourceFieldRef() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o BuildStrategySpecBuildStepsEnvValueFromOutput) SecretKeyRef() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

type BuildStrategySpecBuildStepsEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutput() BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) Elem() BuildStrategySpecBuildStepsEnvValueFromOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFrom) BuildStrategySpecBuildStepsEnvValueFrom { return *v }).(BuildStrategySpecBuildStepsEnvValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) ConfigMapKeyRef() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) FieldRef() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) ResourceFieldRef() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o BuildStrategySpecBuildStepsEnvValueFromPtrOutput) SecretKeyRef() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFrom) *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs and BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs{...}
type BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput
	ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput)
}

func (i BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput).ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs, BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtr and BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput
	ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput
}

type buildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs

func BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtr(v *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput {
	return (*buildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		return &v
	}).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Elem() BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		return *v
	}).(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type BuildStrategySpecBuildStepsEnvValueFromFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// BuildStrategySpecBuildStepsEnvValueFromFieldRefInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs and BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromFieldRefInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs{...}
type BuildStrategySpecBuildStepsEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput
	ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput)
}

func (i BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput).ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs, BuildStrategySpecBuildStepsEnvValueFromFieldRefPtr and BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput
	ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput
}

type buildStrategySpecBuildStepsEnvValueFromFieldRefPtrType BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs

func BuildStrategySpecBuildStepsEnvValueFromFieldRefPtr(v *BuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput {
	return (*buildStrategySpecBuildStepsEnvValueFromFieldRefPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvValueFromFieldRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvValueFromFieldRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromFieldRef) *BuildStrategySpecBuildStepsEnvValueFromFieldRef {
		return &v
	}).(BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) Elem() BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromFieldRef) BuildStrategySpecBuildStepsEnvValueFromFieldRef {
		return *v
	}).(BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *string `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs and BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs{...}
type BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput
	ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.StringPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput)
}

func (i BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput).ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs, BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtr and BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput
	ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput
}

type buildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs

func BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtr(v *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput {
	return (*buildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		return &v
	}).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

// Required: resource to select
func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) Elem() BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		return *v
	}).(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

// Required: resource to select
func (o BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs and BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs{...}
type BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput
	ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the pod's namespace
type BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput)
}

func (i BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput).ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput is an input type that accepts BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs, BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtr and BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput` via:
//
//          BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput
	ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput
}

type buildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs

func BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtr(v *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput {
	return (*buildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType)(v)
}

func (*buildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return i.ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		return &v
	}).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) ToBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Elem() BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		return *v
	}).(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
type BuildStrategySpecBuildStepsLifecycle struct {
	// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PostStart *BuildStrategySpecBuildStepsLifecyclePostStart `pulumi:"postStart"`
	// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PreStop *BuildStrategySpecBuildStepsLifecyclePreStop `pulumi:"preStop"`
}

// BuildStrategySpecBuildStepsLifecycleInput is an input type that accepts BuildStrategySpecBuildStepsLifecycleArgs and BuildStrategySpecBuildStepsLifecycleOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecycleInput` via:
//
//          BuildStrategySpecBuildStepsLifecycleArgs{...}
type BuildStrategySpecBuildStepsLifecycleInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecycleOutput() BuildStrategySpecBuildStepsLifecycleOutput
	ToBuildStrategySpecBuildStepsLifecycleOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecycleOutput
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
type BuildStrategySpecBuildStepsLifecycleArgs struct {
	// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PostStart BuildStrategySpecBuildStepsLifecyclePostStartPtrInput `pulumi:"postStart"`
	// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PreStop BuildStrategySpecBuildStepsLifecyclePreStopPtrInput `pulumi:"preStop"`
}

func (BuildStrategySpecBuildStepsLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecycleArgs) ToBuildStrategySpecBuildStepsLifecycleOutput() BuildStrategySpecBuildStepsLifecycleOutput {
	return i.ToBuildStrategySpecBuildStepsLifecycleOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecycleArgs) ToBuildStrategySpecBuildStepsLifecycleOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecycleOutput)
}

func (i BuildStrategySpecBuildStepsLifecycleArgs) ToBuildStrategySpecBuildStepsLifecyclePtrOutput() BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecycleArgs) ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecycleOutput).ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecycleArgs, BuildStrategySpecBuildStepsLifecyclePtr and BuildStrategySpecBuildStepsLifecyclePtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecycleArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePtrOutput() BuildStrategySpecBuildStepsLifecyclePtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePtrOutput
}

type buildStrategySpecBuildStepsLifecyclePtrType BuildStrategySpecBuildStepsLifecycleArgs

func BuildStrategySpecBuildStepsLifecyclePtr(v *BuildStrategySpecBuildStepsLifecycleArgs) BuildStrategySpecBuildStepsLifecyclePtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePtrType) ToBuildStrategySpecBuildStepsLifecyclePtrOutput() BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePtrType) ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePtrOutput)
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
type BuildStrategySpecBuildStepsLifecycleOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecycleOutput) ToBuildStrategySpecBuildStepsLifecycleOutput() BuildStrategySpecBuildStepsLifecycleOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecycleOutput) ToBuildStrategySpecBuildStepsLifecycleOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecycleOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecycleOutput) ToBuildStrategySpecBuildStepsLifecyclePtrOutput() BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecycleOutput) ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecycle) *BuildStrategySpecBuildStepsLifecycle {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePtrOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o BuildStrategySpecBuildStepsLifecycleOutput) PostStart() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecycle) *BuildStrategySpecBuildStepsLifecyclePostStart {
		return v.PostStart
	}).(BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o BuildStrategySpecBuildStepsLifecycleOutput) PreStop() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecycle) *BuildStrategySpecBuildStepsLifecyclePreStop {
		return v.PreStop
	}).(BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePtrOutput) ToBuildStrategySpecBuildStepsLifecyclePtrOutput() BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePtrOutput) ToBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePtrOutput) Elem() BuildStrategySpecBuildStepsLifecycleOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecycle) BuildStrategySpecBuildStepsLifecycle { return *v }).(BuildStrategySpecBuildStepsLifecycleOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o BuildStrategySpecBuildStepsLifecyclePtrOutput) PostStart() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecycle) *BuildStrategySpecBuildStepsLifecyclePostStart {
		if v == nil {
			return nil
		}
		return v.PostStart
	}).(BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o BuildStrategySpecBuildStepsLifecyclePtrOutput) PreStop() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecycle) *BuildStrategySpecBuildStepsLifecyclePreStop {
		if v == nil {
			return nil
		}
		return v.PreStop
	}).(BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type BuildStrategySpecBuildStepsLifecyclePostStart struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *BuildStrategySpecBuildStepsLifecyclePostStartExec `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket `pulumi:"tcpSocket"`
}

// BuildStrategySpecBuildStepsLifecyclePostStartInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartArgs and BuildStrategySpecBuildStepsLifecyclePostStartOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartOutput() BuildStrategySpecBuildStepsLifecyclePostStartOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartOutput
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type BuildStrategySpecBuildStepsLifecyclePostStartArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec BuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput `pulumi:"tcpSocket"`
}

func (BuildStrategySpecBuildStepsLifecyclePostStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartOutput() BuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartOutput).ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePostStartPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartArgs, BuildStrategySpecBuildStepsLifecyclePostStartPtr and BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePostStartPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePostStartPtrType BuildStrategySpecBuildStepsLifecyclePostStartArgs

func BuildStrategySpecBuildStepsLifecyclePostStartPtr(v *BuildStrategySpecBuildStepsLifecyclePostStartArgs) BuildStrategySpecBuildStepsLifecyclePostStartPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePostStartPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePostStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type BuildStrategySpecBuildStepsLifecyclePostStartOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartOutput() BuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStart {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) Exec() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStartExec {
		return v.Exec
	}).(BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) HttpGet() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsLifecyclePostStartOutput) TcpSocket() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStart) BuildStrategySpecBuildStepsLifecyclePostStart {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) Exec() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStartExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) HttpGet() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) TcpSocket() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStart) *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLifecyclePostStartExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// BuildStrategySpecBuildStepsLifecyclePostStartExecInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartExecArgs and BuildStrategySpecBuildStepsLifecyclePostStartExecOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartExecInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartExecArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartExecInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLifecyclePostStartExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (BuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartExecOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartExecOutput).ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartExecArgs, BuildStrategySpecBuildStepsLifecyclePostStartExecPtr and BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartExecArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePostStartExecPtrType BuildStrategySpecBuildStepsLifecyclePostStartExecArgs

func BuildStrategySpecBuildStepsLifecyclePostStartExecPtr(v *BuildStrategySpecBuildStepsLifecyclePostStartExecArgs) BuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePostStartExecPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePostStartExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartExecPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartExecPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLifecyclePostStartExecOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartExec) *BuildStrategySpecBuildStepsLifecyclePostStartExec {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsLifecyclePostStartExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartExec) BuildStrategySpecBuildStepsLifecyclePostStartExec {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// BuildStrategySpecBuildStepsLifecyclePostStartHttpGetInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs and BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartHttpGetInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput).ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs, BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtr and BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs

func BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtr(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) HttpHeaders() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) []BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Port() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) BuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) HttpHeaders() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) []BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Port() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs and BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput)
}

// BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray and BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray{ BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs{...} }
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray []BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders {
		return vs[0].([]BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort struct {
}

// BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs and BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs struct {
}

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput).ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs, BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtr and BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs

func BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtr(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort) *BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort) BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort `pulumi:"port"`
}

// BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs and BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput `pulumi:"port"`
}

func (BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput).ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs, BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtr and BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs

func BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtr(v *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) Port() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) Port() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort struct {
}

// BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs and BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs{...}
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput
}

type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs struct {
}

func (BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput).ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs, BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtr and BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs

func BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtr(v *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort) *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort) BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type BuildStrategySpecBuildStepsLifecyclePreStop struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *BuildStrategySpecBuildStepsLifecyclePreStopExec `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket `pulumi:"tcpSocket"`
}

// BuildStrategySpecBuildStepsLifecyclePreStopInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopArgs and BuildStrategySpecBuildStepsLifecyclePreStopOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopOutput() BuildStrategySpecBuildStepsLifecyclePreStopOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopOutput
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type BuildStrategySpecBuildStepsLifecyclePreStopArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec BuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput `pulumi:"tcpSocket"`
}

func (BuildStrategySpecBuildStepsLifecyclePreStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopOutput() BuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopOutput).ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePreStopPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopArgs, BuildStrategySpecBuildStepsLifecyclePreStopPtr and BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePreStopPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePreStopPtrType BuildStrategySpecBuildStepsLifecyclePreStopArgs

func BuildStrategySpecBuildStepsLifecyclePreStopPtr(v *BuildStrategySpecBuildStepsLifecyclePreStopArgs) BuildStrategySpecBuildStepsLifecyclePreStopPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePreStopPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePreStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type BuildStrategySpecBuildStepsLifecyclePreStopOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopOutput() BuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStop {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) Exec() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStopExec {
		return v.Exec
	}).(BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) HttpGet() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsLifecyclePreStopOutput) TcpSocket() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStop) BuildStrategySpecBuildStepsLifecyclePreStop {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) Exec() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStopExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) HttpGet() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) TcpSocket() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStop) *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLifecyclePreStopExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// BuildStrategySpecBuildStepsLifecyclePreStopExecInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopExecArgs and BuildStrategySpecBuildStepsLifecyclePreStopExecOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopExecInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopExecArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopExecInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLifecyclePreStopExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (BuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopExecOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopExecOutput).ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopExecArgs, BuildStrategySpecBuildStepsLifecyclePreStopExecPtr and BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopExecArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePreStopExecPtrType BuildStrategySpecBuildStepsLifecyclePreStopExecArgs

func BuildStrategySpecBuildStepsLifecyclePreStopExecPtr(v *BuildStrategySpecBuildStepsLifecyclePreStopExecArgs) BuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePreStopExecPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePreStopExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopExecPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopExecPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLifecyclePreStopExecOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopExec) *BuildStrategySpecBuildStepsLifecyclePreStopExec {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsLifecyclePreStopExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopExec) BuildStrategySpecBuildStepsLifecyclePreStopExec {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// BuildStrategySpecBuildStepsLifecyclePreStopHttpGetInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs and BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopHttpGetInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput).ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs, BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtr and BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs

func BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtr(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) HttpHeaders() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) []BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Port() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) BuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) HttpHeaders() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) []BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Port() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs and BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput)
}

// BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray and BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray{ BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs{...} }
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray []BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders {
		return vs[0].([]BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort struct {
}

// BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs and BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs struct {
}

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput).ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs, BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtr and BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs

func BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtr(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort) *BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort) BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort `pulumi:"port"`
}

// BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs and BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput `pulumi:"port"`
}

func (BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput).ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs, BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtr and BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs

func BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtr(v *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) Port() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) Port() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort struct {
}

// BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs and BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs{...}
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput
}

type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs struct {
}

func (BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput)
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput).ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs, BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtr and BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput
	ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput
}

type buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs

func BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtr(v *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput {
	return (*buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort) *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		return &v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) Elem() BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort) BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		return *v
	}).(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput)
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsLivenessProbe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *BuildStrategySpecBuildStepsLivenessProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet *BuildStrategySpecBuildStepsLivenessProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *BuildStrategySpecBuildStepsLivenessProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// BuildStrategySpecBuildStepsLivenessProbeInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeArgs and BuildStrategySpecBuildStepsLivenessProbeOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeOutput() BuildStrategySpecBuildStepsLivenessProbeOutput
	ToBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeOutput
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsLivenessProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec BuildStrategySpecBuildStepsLivenessProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (BuildStrategySpecBuildStepsLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeArgs) ToBuildStrategySpecBuildStepsLivenessProbeOutput() BuildStrategySpecBuildStepsLivenessProbeOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeArgs) ToBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeOutput)
}

func (i BuildStrategySpecBuildStepsLivenessProbeArgs) ToBuildStrategySpecBuildStepsLivenessProbePtrOutput() BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeArgs) ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeOutput).ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLivenessProbePtrInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeArgs, BuildStrategySpecBuildStepsLivenessProbePtr and BuildStrategySpecBuildStepsLivenessProbePtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbePtrInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLivenessProbePtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbePtrOutput() BuildStrategySpecBuildStepsLivenessProbePtrOutput
	ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbePtrOutput
}

type buildStrategySpecBuildStepsLivenessProbePtrType BuildStrategySpecBuildStepsLivenessProbeArgs

func BuildStrategySpecBuildStepsLivenessProbePtr(v *BuildStrategySpecBuildStepsLivenessProbeArgs) BuildStrategySpecBuildStepsLivenessProbePtrInput {
	return (*buildStrategySpecBuildStepsLivenessProbePtrType)(v)
}

func (*buildStrategySpecBuildStepsLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLivenessProbePtrType) ToBuildStrategySpecBuildStepsLivenessProbePtrOutput() BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLivenessProbePtrType) ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbePtrOutput)
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsLivenessProbeOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeOutput) ToBuildStrategySpecBuildStepsLivenessProbeOutput() BuildStrategySpecBuildStepsLivenessProbeOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeOutput) ToBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeOutput) ToBuildStrategySpecBuildStepsLivenessProbePtrOutput() BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o.ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLivenessProbeOutput) ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbe {
		return &v
	}).(BuildStrategySpecBuildStepsLivenessProbePtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) Exec() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbeExec {
		return v.Exec
	}).(BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) HttpGet() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbeHttpGet {
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) TcpSocket() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) ToBuildStrategySpecBuildStepsLivenessProbePtrOutput() BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) ToBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) Elem() BuildStrategySpecBuildStepsLivenessProbeOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) BuildStrategySpecBuildStepsLivenessProbe { return *v }).(BuildStrategySpecBuildStepsLivenessProbeOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) Exec() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) HttpGet() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) TcpSocket() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *BuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLivenessProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// BuildStrategySpecBuildStepsLivenessProbeExecInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeExecArgs and BuildStrategySpecBuildStepsLivenessProbeExecOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeExecInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeExecArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeExecInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeExecOutput() BuildStrategySpecBuildStepsLivenessProbeExecOutput
	ToBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLivenessProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (BuildStrategySpecBuildStepsLivenessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeExecArgs) ToBuildStrategySpecBuildStepsLivenessProbeExecOutput() BuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeExecArgs) ToBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeExecOutput)
}

func (i BuildStrategySpecBuildStepsLivenessProbeExecArgs) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeExecArgs) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeExecOutput).ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLivenessProbeExecPtrInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeExecArgs, BuildStrategySpecBuildStepsLivenessProbeExecPtr and BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeExecPtrInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeExecArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLivenessProbeExecPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput
	ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput
}

type buildStrategySpecBuildStepsLivenessProbeExecPtrType BuildStrategySpecBuildStepsLivenessProbeExecArgs

func BuildStrategySpecBuildStepsLivenessProbeExecPtr(v *BuildStrategySpecBuildStepsLivenessProbeExecArgs) BuildStrategySpecBuildStepsLivenessProbeExecPtrInput {
	return (*buildStrategySpecBuildStepsLivenessProbeExecPtrType)(v)
}

func (*buildStrategySpecBuildStepsLivenessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLivenessProbeExecPtrType) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLivenessProbeExecPtrType) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsLivenessProbeExecOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecOutput) ToBuildStrategySpecBuildStepsLivenessProbeExecOutput() BuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecOutput) ToBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecOutput) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecOutput) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeExec) *BuildStrategySpecBuildStepsLivenessProbeExec {
		return &v
	}).(BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsLivenessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) Elem() BuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeExec) BuildStrategySpecBuildStepsLivenessProbeExec {
		return *v
	}).(BuildStrategySpecBuildStepsLivenessProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLivenessProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLivenessProbeHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// BuildStrategySpecBuildStepsLivenessProbeHttpGetInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs and BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeHttpGetInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput
	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput)
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput).ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs, BuildStrategySpecBuildStepsLivenessProbeHttpGetPtr and BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput
	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput
}

type buildStrategySpecBuildStepsLivenessProbeHttpGetPtrType BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs

func BuildStrategySpecBuildStepsLivenessProbeHttpGetPtr(v *BuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput {
	return (*buildStrategySpecBuildStepsLivenessProbeHttpGetPtrType)(v)
}

func (*buildStrategySpecBuildStepsLivenessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLivenessProbeHttpGetPtrType) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLivenessProbeHttpGetPtrType) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGet) *BuildStrategySpecBuildStepsLivenessProbeHttpGet {
		return &v
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) HttpHeaders() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGet) []BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Port() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGet) BuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Elem() BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGet) BuildStrategySpecBuildStepsLivenessProbeHttpGet {
		return *v
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) HttpHeaders() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGet) []BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Port() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGet) *BuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs and BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput
	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput)
}

// BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray and BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray{ BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs{...} }
type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput
	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray []BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders {
		return vs[0].([]BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetPort struct {
}

// BuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs and BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput
	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs struct {
}

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput)
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput).ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs, BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtr and BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput
	ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput
}

type buildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs

func BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtr(v *BuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput {
	return (*buildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeHttpGetPort) *BuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		return &v
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) Elem() BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeHttpGetPort) BuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		return *v
	}).(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLivenessProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort `pulumi:"port"`
}

// BuildStrategySpecBuildStepsLivenessProbeTcpSocketInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs and BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeTcpSocketInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeTcpSocketInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput
	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput `pulumi:"port"`
}

func (BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput)
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput).ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs, BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtr and BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput
	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput
}

type buildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs

func BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtr(v *BuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput {
	return (*buildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType)(v)
}

func (*buildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeTcpSocket) *BuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		return &v
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) Port() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeTcpSocket) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) Elem() BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeTcpSocket) BuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		return *v
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) Port() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeTcpSocket) *BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort struct {
}

// BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs and BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs{...}
type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput
	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput
}

type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs struct {
}

func (BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput)
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput).ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs, BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtr and BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput
	ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput
}

type buildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs

func BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtr(v *BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput {
	return (*buildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort) *BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		return &v
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) Elem() BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort) BuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		return *v
	}).(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput)
}

// ContainerPort represents a network port in a single container.
type BuildStrategySpecBuildStepsPorts struct {
	// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
	ContainerPort int `pulumi:"containerPort"`
	// What host IP to bind the external port to.
	HostIP *string `pulumi:"hostIP"`
	// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
	HostPort *int `pulumi:"hostPort"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
	Name *string `pulumi:"name"`
	// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
	Protocol *string `pulumi:"protocol"`
}

// BuildStrategySpecBuildStepsPortsInput is an input type that accepts BuildStrategySpecBuildStepsPortsArgs and BuildStrategySpecBuildStepsPortsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsPortsInput` via:
//
//          BuildStrategySpecBuildStepsPortsArgs{...}
type BuildStrategySpecBuildStepsPortsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsPortsOutput() BuildStrategySpecBuildStepsPortsOutput
	ToBuildStrategySpecBuildStepsPortsOutputWithContext(context.Context) BuildStrategySpecBuildStepsPortsOutput
}

// ContainerPort represents a network port in a single container.
type BuildStrategySpecBuildStepsPortsArgs struct {
	// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
	ContainerPort pulumi.IntInput `pulumi:"containerPort"`
	// What host IP to bind the external port to.
	HostIP pulumi.StringPtrInput `pulumi:"hostIP"`
	// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
	HostPort pulumi.IntPtrInput `pulumi:"hostPort"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (BuildStrategySpecBuildStepsPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsPortsArgs) ToBuildStrategySpecBuildStepsPortsOutput() BuildStrategySpecBuildStepsPortsOutput {
	return i.ToBuildStrategySpecBuildStepsPortsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsPortsArgs) ToBuildStrategySpecBuildStepsPortsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsPortsOutput)
}

// BuildStrategySpecBuildStepsPortsArrayInput is an input type that accepts BuildStrategySpecBuildStepsPortsArray and BuildStrategySpecBuildStepsPortsArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsPortsArrayInput` via:
//
//          BuildStrategySpecBuildStepsPortsArray{ BuildStrategySpecBuildStepsPortsArgs{...} }
type BuildStrategySpecBuildStepsPortsArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsPortsArrayOutput() BuildStrategySpecBuildStepsPortsArrayOutput
	ToBuildStrategySpecBuildStepsPortsArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsPortsArrayOutput
}

type BuildStrategySpecBuildStepsPortsArray []BuildStrategySpecBuildStepsPortsInput

func (BuildStrategySpecBuildStepsPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsPortsArray) ToBuildStrategySpecBuildStepsPortsArrayOutput() BuildStrategySpecBuildStepsPortsArrayOutput {
	return i.ToBuildStrategySpecBuildStepsPortsArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsPortsArray) ToBuildStrategySpecBuildStepsPortsArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsPortsArrayOutput)
}

// ContainerPort represents a network port in a single container.
type BuildStrategySpecBuildStepsPortsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsPortsOutput) ToBuildStrategySpecBuildStepsPortsOutput() BuildStrategySpecBuildStepsPortsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsPortsOutput) ToBuildStrategySpecBuildStepsPortsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsPortsOutput {
	return o
}

// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
func (o BuildStrategySpecBuildStepsPortsOutput) ContainerPort() pulumi.IntOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsPorts) int { return v.ContainerPort }).(pulumi.IntOutput)
}

// What host IP to bind the external port to.
func (o BuildStrategySpecBuildStepsPortsOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsPorts) *string { return v.HostIP }).(pulumi.StringPtrOutput)
}

// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
func (o BuildStrategySpecBuildStepsPortsOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsPorts) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
func (o BuildStrategySpecBuildStepsPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
func (o BuildStrategySpecBuildStepsPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsPortsArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsPortsArrayOutput) ToBuildStrategySpecBuildStepsPortsArrayOutput() BuildStrategySpecBuildStepsPortsArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsPortsArrayOutput) ToBuildStrategySpecBuildStepsPortsArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsPortsArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsPortsArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsPorts {
		return vs[0].([]BuildStrategySpecBuildStepsPorts)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsPortsOutput)
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsReadinessProbe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *BuildStrategySpecBuildStepsReadinessProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet *BuildStrategySpecBuildStepsReadinessProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *BuildStrategySpecBuildStepsReadinessProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// BuildStrategySpecBuildStepsReadinessProbeInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeArgs and BuildStrategySpecBuildStepsReadinessProbeOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeOutput() BuildStrategySpecBuildStepsReadinessProbeOutput
	ToBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeOutput
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsReadinessProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec BuildStrategySpecBuildStepsReadinessProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (BuildStrategySpecBuildStepsReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeArgs) ToBuildStrategySpecBuildStepsReadinessProbeOutput() BuildStrategySpecBuildStepsReadinessProbeOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeArgs) ToBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeOutput)
}

func (i BuildStrategySpecBuildStepsReadinessProbeArgs) ToBuildStrategySpecBuildStepsReadinessProbePtrOutput() BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeArgs) ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeOutput).ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsReadinessProbePtrInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeArgs, BuildStrategySpecBuildStepsReadinessProbePtr and BuildStrategySpecBuildStepsReadinessProbePtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbePtrInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsReadinessProbePtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbePtrOutput() BuildStrategySpecBuildStepsReadinessProbePtrOutput
	ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbePtrOutput
}

type buildStrategySpecBuildStepsReadinessProbePtrType BuildStrategySpecBuildStepsReadinessProbeArgs

func BuildStrategySpecBuildStepsReadinessProbePtr(v *BuildStrategySpecBuildStepsReadinessProbeArgs) BuildStrategySpecBuildStepsReadinessProbePtrInput {
	return (*buildStrategySpecBuildStepsReadinessProbePtrType)(v)
}

func (*buildStrategySpecBuildStepsReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsReadinessProbePtrType) ToBuildStrategySpecBuildStepsReadinessProbePtrOutput() BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsReadinessProbePtrType) ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbePtrOutput)
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsReadinessProbeOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeOutput) ToBuildStrategySpecBuildStepsReadinessProbeOutput() BuildStrategySpecBuildStepsReadinessProbeOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeOutput) ToBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeOutput) ToBuildStrategySpecBuildStepsReadinessProbePtrOutput() BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o.ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsReadinessProbeOutput) ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbe {
		return &v
	}).(BuildStrategySpecBuildStepsReadinessProbePtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) Exec() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbeExec {
		return v.Exec
	}).(BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) HttpGet() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbeHttpGet {
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) TcpSocket() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) ToBuildStrategySpecBuildStepsReadinessProbePtrOutput() BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) ToBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) Elem() BuildStrategySpecBuildStepsReadinessProbeOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) BuildStrategySpecBuildStepsReadinessProbe {
		return *v
	}).(BuildStrategySpecBuildStepsReadinessProbeOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) Exec() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) HttpGet() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) TcpSocket() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *BuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsReadinessProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// BuildStrategySpecBuildStepsReadinessProbeExecInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeExecArgs and BuildStrategySpecBuildStepsReadinessProbeExecOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeExecInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeExecArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeExecInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeExecOutput() BuildStrategySpecBuildStepsReadinessProbeExecOutput
	ToBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsReadinessProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (BuildStrategySpecBuildStepsReadinessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeExecArgs) ToBuildStrategySpecBuildStepsReadinessProbeExecOutput() BuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeExecArgs) ToBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeExecOutput)
}

func (i BuildStrategySpecBuildStepsReadinessProbeExecArgs) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeExecArgs) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeExecOutput).ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsReadinessProbeExecPtrInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeExecArgs, BuildStrategySpecBuildStepsReadinessProbeExecPtr and BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeExecPtrInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeExecArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsReadinessProbeExecPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput
	ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput
}

type buildStrategySpecBuildStepsReadinessProbeExecPtrType BuildStrategySpecBuildStepsReadinessProbeExecArgs

func BuildStrategySpecBuildStepsReadinessProbeExecPtr(v *BuildStrategySpecBuildStepsReadinessProbeExecArgs) BuildStrategySpecBuildStepsReadinessProbeExecPtrInput {
	return (*buildStrategySpecBuildStepsReadinessProbeExecPtrType)(v)
}

func (*buildStrategySpecBuildStepsReadinessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsReadinessProbeExecPtrType) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsReadinessProbeExecPtrType) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsReadinessProbeExecOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecOutput) ToBuildStrategySpecBuildStepsReadinessProbeExecOutput() BuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecOutput) ToBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecOutput) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecOutput) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeExec) *BuildStrategySpecBuildStepsReadinessProbeExec {
		return &v
	}).(BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsReadinessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) Elem() BuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeExec) BuildStrategySpecBuildStepsReadinessProbeExec {
		return *v
	}).(BuildStrategySpecBuildStepsReadinessProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsReadinessProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsReadinessProbeHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// BuildStrategySpecBuildStepsReadinessProbeHttpGetInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs and BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeHttpGetInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput
	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput)
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput).ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs, BuildStrategySpecBuildStepsReadinessProbeHttpGetPtr and BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput
	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput
}

type buildStrategySpecBuildStepsReadinessProbeHttpGetPtrType BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs

func BuildStrategySpecBuildStepsReadinessProbeHttpGetPtr(v *BuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput {
	return (*buildStrategySpecBuildStepsReadinessProbeHttpGetPtrType)(v)
}

func (*buildStrategySpecBuildStepsReadinessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsReadinessProbeHttpGetPtrType) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsReadinessProbeHttpGetPtrType) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGet) *BuildStrategySpecBuildStepsReadinessProbeHttpGet {
		return &v
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) HttpHeaders() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGet) []BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Port() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGet) BuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Elem() BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGet) BuildStrategySpecBuildStepsReadinessProbeHttpGet {
		return *v
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) HttpHeaders() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGet) []BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Port() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGet) *BuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs and BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput
	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput)
}

// BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray and BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray{ BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs{...} }
type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput
	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray []BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders {
		return vs[0].([]BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetPort struct {
}

// BuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs and BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput
	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs struct {
}

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput)
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput).ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs, BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtr and BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput
	ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput
}

type buildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs

func BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtr(v *BuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput {
	return (*buildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeHttpGetPort) *BuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		return &v
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) Elem() BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeHttpGetPort) BuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		return *v
	}).(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsReadinessProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort `pulumi:"port"`
}

// BuildStrategySpecBuildStepsReadinessProbeTcpSocketInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs and BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeTcpSocketInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeTcpSocketInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput
	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput `pulumi:"port"`
}

func (BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput)
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput).ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs, BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtr and BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput
	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput
}

type buildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs

func BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtr(v *BuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput {
	return (*buildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType)(v)
}

func (*buildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeTcpSocket) *BuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		return &v
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) Port() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeTcpSocket) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) Elem() BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeTcpSocket) BuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		return *v
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) Port() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeTcpSocket) *BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort struct {
}

// BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs and BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs{...}
type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput
	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput
}

type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs struct {
}

func (BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput)
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput).ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs, BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtr and BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput
	ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput
}

type buildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs

func BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtr(v *BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput {
	return (*buildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort) *BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		return &v
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) Elem() BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort) BuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		return *v
	}).(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput)
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]string `pulumi:"requests"`
}

// BuildStrategySpecBuildStepsResourcesInput is an input type that accepts BuildStrategySpecBuildStepsResourcesArgs and BuildStrategySpecBuildStepsResourcesOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsResourcesInput` via:
//
//          BuildStrategySpecBuildStepsResourcesArgs{...}
type BuildStrategySpecBuildStepsResourcesInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsResourcesOutput() BuildStrategySpecBuildStepsResourcesOutput
	ToBuildStrategySpecBuildStepsResourcesOutputWithContext(context.Context) BuildStrategySpecBuildStepsResourcesOutput
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (BuildStrategySpecBuildStepsResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsResourcesArgs) ToBuildStrategySpecBuildStepsResourcesOutput() BuildStrategySpecBuildStepsResourcesOutput {
	return i.ToBuildStrategySpecBuildStepsResourcesOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsResourcesArgs) ToBuildStrategySpecBuildStepsResourcesOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsResourcesOutput)
}

func (i BuildStrategySpecBuildStepsResourcesArgs) ToBuildStrategySpecBuildStepsResourcesPtrOutput() BuildStrategySpecBuildStepsResourcesPtrOutput {
	return i.ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsResourcesArgs) ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsResourcesOutput).ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsResourcesPtrInput is an input type that accepts BuildStrategySpecBuildStepsResourcesArgs, BuildStrategySpecBuildStepsResourcesPtr and BuildStrategySpecBuildStepsResourcesPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsResourcesPtrInput` via:
//
//          BuildStrategySpecBuildStepsResourcesArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsResourcesPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsResourcesPtrOutput() BuildStrategySpecBuildStepsResourcesPtrOutput
	ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsResourcesPtrOutput
}

type buildStrategySpecBuildStepsResourcesPtrType BuildStrategySpecBuildStepsResourcesArgs

func BuildStrategySpecBuildStepsResourcesPtr(v *BuildStrategySpecBuildStepsResourcesArgs) BuildStrategySpecBuildStepsResourcesPtrInput {
	return (*buildStrategySpecBuildStepsResourcesPtrType)(v)
}

func (*buildStrategySpecBuildStepsResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsResourcesPtrType) ToBuildStrategySpecBuildStepsResourcesPtrOutput() BuildStrategySpecBuildStepsResourcesPtrOutput {
	return i.ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsResourcesPtrType) ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsResourcesPtrOutput)
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsResourcesOutput) ToBuildStrategySpecBuildStepsResourcesOutput() BuildStrategySpecBuildStepsResourcesOutput {
	return o
}

func (o BuildStrategySpecBuildStepsResourcesOutput) ToBuildStrategySpecBuildStepsResourcesOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesOutput {
	return o
}

func (o BuildStrategySpecBuildStepsResourcesOutput) ToBuildStrategySpecBuildStepsResourcesPtrOutput() BuildStrategySpecBuildStepsResourcesPtrOutput {
	return o.ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsResourcesOutput) ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsResources) *BuildStrategySpecBuildStepsResources {
		return &v
	}).(BuildStrategySpecBuildStepsResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildStrategySpecBuildStepsResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildStrategySpecBuildStepsResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type BuildStrategySpecBuildStepsResourcesPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsResourcesPtrOutput) ToBuildStrategySpecBuildStepsResourcesPtrOutput() BuildStrategySpecBuildStepsResourcesPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsResourcesPtrOutput) ToBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsResourcesPtrOutput) Elem() BuildStrategySpecBuildStepsResourcesOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsResources) BuildStrategySpecBuildStepsResources { return *v }).(BuildStrategySpecBuildStepsResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildStrategySpecBuildStepsResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o BuildStrategySpecBuildStepsResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesLimits struct {
}

// BuildStrategySpecBuildStepsResourcesLimitsInput is an input type that accepts BuildStrategySpecBuildStepsResourcesLimitsArgs and BuildStrategySpecBuildStepsResourcesLimitsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsResourcesLimitsInput` via:
//
//          BuildStrategySpecBuildStepsResourcesLimitsArgs{...}
type BuildStrategySpecBuildStepsResourcesLimitsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsResourcesLimitsOutput() BuildStrategySpecBuildStepsResourcesLimitsOutput
	ToBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(context.Context) BuildStrategySpecBuildStepsResourcesLimitsOutput
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesLimitsArgs struct {
}

func (BuildStrategySpecBuildStepsResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsResourcesLimits)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsResourcesLimitsArgs) ToBuildStrategySpecBuildStepsResourcesLimitsOutput() BuildStrategySpecBuildStepsResourcesLimitsOutput {
	return i.ToBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsResourcesLimitsArgs) ToBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsResourcesLimitsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesLimitsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsResourcesLimits)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsResourcesLimitsOutput) ToBuildStrategySpecBuildStepsResourcesLimitsOutput() BuildStrategySpecBuildStepsResourcesLimitsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsResourcesLimitsOutput) ToBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesLimitsOutput {
	return o
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesRequests struct {
}

// BuildStrategySpecBuildStepsResourcesRequestsInput is an input type that accepts BuildStrategySpecBuildStepsResourcesRequestsArgs and BuildStrategySpecBuildStepsResourcesRequestsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsResourcesRequestsInput` via:
//
//          BuildStrategySpecBuildStepsResourcesRequestsArgs{...}
type BuildStrategySpecBuildStepsResourcesRequestsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsResourcesRequestsOutput() BuildStrategySpecBuildStepsResourcesRequestsOutput
	ToBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(context.Context) BuildStrategySpecBuildStepsResourcesRequestsOutput
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesRequestsArgs struct {
}

func (BuildStrategySpecBuildStepsResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsResourcesRequests)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsResourcesRequestsArgs) ToBuildStrategySpecBuildStepsResourcesRequestsOutput() BuildStrategySpecBuildStepsResourcesRequestsOutput {
	return i.ToBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsResourcesRequestsArgs) ToBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsResourcesRequestsOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type BuildStrategySpecBuildStepsResourcesRequestsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsResourcesRequests)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsResourcesRequestsOutput) ToBuildStrategySpecBuildStepsResourcesRequestsOutput() BuildStrategySpecBuildStepsResourcesRequestsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsResourcesRequestsOutput) ToBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsResourcesRequestsOutput {
	return o
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type BuildStrategySpecBuildStepsSecurityContext struct {
	// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
	AllowPrivilegeEscalation *bool `pulumi:"allowPrivilegeEscalation"`
	// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
	Capabilities *BuildStrategySpecBuildStepsSecurityContextCapabilities `pulumi:"capabilities"`
	// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
	Privileged *bool `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
	ProcMount *string `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem. Default is false.
	ReadOnlyRootFilesystem *bool `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUser *int `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	SeLinuxOptions *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions `pulumi:"seLinuxOptions"`
	// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	WindowsOptions *BuildStrategySpecBuildStepsSecurityContextWindowsOptions `pulumi:"windowsOptions"`
}

// BuildStrategySpecBuildStepsSecurityContextInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextArgs and BuildStrategySpecBuildStepsSecurityContextOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextArgs{...}
type BuildStrategySpecBuildStepsSecurityContextInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextOutput() BuildStrategySpecBuildStepsSecurityContextOutput
	ToBuildStrategySpecBuildStepsSecurityContextOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextOutput
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type BuildStrategySpecBuildStepsSecurityContextArgs struct {
	// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
	AllowPrivilegeEscalation pulumi.BoolPtrInput `pulumi:"allowPrivilegeEscalation"`
	// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
	Capabilities BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput `pulumi:"capabilities"`
	// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
	ProcMount pulumi.StringPtrInput `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem. Default is false.
	ReadOnlyRootFilesystem pulumi.BoolPtrInput `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUser pulumi.IntPtrInput `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	SeLinuxOptions BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput `pulumi:"seLinuxOptions"`
	// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	WindowsOptions BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput `pulumi:"windowsOptions"`
}

func (BuildStrategySpecBuildStepsSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsSecurityContextArgs) ToBuildStrategySpecBuildStepsSecurityContextOutput() BuildStrategySpecBuildStepsSecurityContextOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextArgs) ToBuildStrategySpecBuildStepsSecurityContextOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextOutput)
}

func (i BuildStrategySpecBuildStepsSecurityContextArgs) ToBuildStrategySpecBuildStepsSecurityContextPtrOutput() BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextArgs) ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextOutput).ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsSecurityContextPtrInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextArgs, BuildStrategySpecBuildStepsSecurityContextPtr and BuildStrategySpecBuildStepsSecurityContextPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextPtrInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsSecurityContextPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextPtrOutput() BuildStrategySpecBuildStepsSecurityContextPtrOutput
	ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextPtrOutput
}

type buildStrategySpecBuildStepsSecurityContextPtrType BuildStrategySpecBuildStepsSecurityContextArgs

func BuildStrategySpecBuildStepsSecurityContextPtr(v *BuildStrategySpecBuildStepsSecurityContextArgs) BuildStrategySpecBuildStepsSecurityContextPtrInput {
	return (*buildStrategySpecBuildStepsSecurityContextPtrType)(v)
}

func (*buildStrategySpecBuildStepsSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsSecurityContextPtrType) ToBuildStrategySpecBuildStepsSecurityContextPtrOutput() BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsSecurityContextPtrType) ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextPtrOutput)
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type BuildStrategySpecBuildStepsSecurityContextOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextOutput) ToBuildStrategySpecBuildStepsSecurityContextOutput() BuildStrategySpecBuildStepsSecurityContextOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextOutput) ToBuildStrategySpecBuildStepsSecurityContextOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextOutput) ToBuildStrategySpecBuildStepsSecurityContextPtrOutput() BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o.ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsSecurityContextOutput) ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContext {
		return &v
	}).(BuildStrategySpecBuildStepsSecurityContextPtrOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
func (o BuildStrategySpecBuildStepsSecurityContextOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *bool { return v.AllowPrivilegeEscalation }).(pulumi.BoolPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) Capabilities() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContextCapabilities {
		return v.Capabilities
	}).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *string { return v.ProcMount }).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem. Default is false.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *bool { return v.ReadOnlyRootFilesystem }).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) SeLinuxOptions() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextOutput) WindowsOptions() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

type BuildStrategySpecBuildStepsSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextPtrOutput() BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) Elem() BuildStrategySpecBuildStepsSecurityContextOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) BuildStrategySpecBuildStepsSecurityContext {
		return *v
	}).(BuildStrategySpecBuildStepsSecurityContextOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) Capabilities() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContextCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.ProcMount
	}).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem. Default is false.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) SeLinuxOptions() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o BuildStrategySpecBuildStepsSecurityContextPtrOutput) WindowsOptions() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContext) *BuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type BuildStrategySpecBuildStepsSecurityContextCapabilities struct {
	// Added capabilities
	Add []string `pulumi:"add"`
	// Removed capabilities
	Drop []string `pulumi:"drop"`
}

// BuildStrategySpecBuildStepsSecurityContextCapabilitiesInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs and BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextCapabilitiesInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs{...}
type BuildStrategySpecBuildStepsSecurityContextCapabilitiesInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput
	ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs struct {
	// Added capabilities
	Add pulumi.StringArrayInput `pulumi:"add"`
	// Removed capabilities
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput)
}

func (i BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput).ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs, BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtr and BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput
	ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput
}

type buildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs

func BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtr(v *BuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput {
	return (*buildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType)(v)
}

func (*buildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextCapabilities) *BuildStrategySpecBuildStepsSecurityContextCapabilities {
		return &v
	}).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// Added capabilities
func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextCapabilities) []string { return v.Add }).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextCapabilities) []string { return v.Drop }).(pulumi.StringArrayOutput)
}

type BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) Elem() BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextCapabilities) BuildStrategySpecBuildStepsSecurityContextCapabilities {
		return *v
	}).(BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput)
}

// Added capabilities
func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs and BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs{...}
type BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput
	ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput)
}

func (i BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput).ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs, BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtr and BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput
	ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput
}

type buildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs

func BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtr(v *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput {
	return (*buildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*buildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		return &v
	}).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.User }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Elem() BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		return *v
	}).(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput)
}

// Level is SELinux level label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildStrategySpecBuildStepsSecurityContextWindowsOptions struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpec *string `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
	RunAsUserName *string `pulumi:"runAsUserName"`
}

// BuildStrategySpecBuildStepsSecurityContextWindowsOptionsInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs and BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextWindowsOptionsInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs{...}
type BuildStrategySpecBuildStepsSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput
	ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpec pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
	RunAsUserName pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput)
}

func (i BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput).ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput is an input type that accepts BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs, BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtr and BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput` via:
//
//          BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput
	ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput
}

type buildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs

func BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtr(v *BuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput {
	return (*buildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType)(v)
}

func (*buildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return i.ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *BuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		return &v
	}).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string { return v.GmsaCredentialSpec }).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string { return v.RunAsUserName }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) ToBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) Elem() BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextWindowsOptions) BuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		return *v
	}).(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
func (o BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsStartupProbe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *BuildStrategySpecBuildStepsStartupProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet *BuildStrategySpecBuildStepsStartupProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *BuildStrategySpecBuildStepsStartupProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// BuildStrategySpecBuildStepsStartupProbeInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeArgs and BuildStrategySpecBuildStepsStartupProbeOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeArgs{...}
type BuildStrategySpecBuildStepsStartupProbeInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeOutput() BuildStrategySpecBuildStepsStartupProbeOutput
	ToBuildStrategySpecBuildStepsStartupProbeOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeOutput
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsStartupProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec BuildStrategySpecBuildStepsStartupProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet BuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (BuildStrategySpecBuildStepsStartupProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeArgs) ToBuildStrategySpecBuildStepsStartupProbeOutput() BuildStrategySpecBuildStepsStartupProbeOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeArgs) ToBuildStrategySpecBuildStepsStartupProbeOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeOutput)
}

func (i BuildStrategySpecBuildStepsStartupProbeArgs) ToBuildStrategySpecBuildStepsStartupProbePtrOutput() BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeArgs) ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeOutput).ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsStartupProbePtrInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeArgs, BuildStrategySpecBuildStepsStartupProbePtr and BuildStrategySpecBuildStepsStartupProbePtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbePtrInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsStartupProbePtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbePtrOutput() BuildStrategySpecBuildStepsStartupProbePtrOutput
	ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbePtrOutput
}

type buildStrategySpecBuildStepsStartupProbePtrType BuildStrategySpecBuildStepsStartupProbeArgs

func BuildStrategySpecBuildStepsStartupProbePtr(v *BuildStrategySpecBuildStepsStartupProbeArgs) BuildStrategySpecBuildStepsStartupProbePtrInput {
	return (*buildStrategySpecBuildStepsStartupProbePtrType)(v)
}

func (*buildStrategySpecBuildStepsStartupProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsStartupProbePtrType) ToBuildStrategySpecBuildStepsStartupProbePtrOutput() BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsStartupProbePtrType) ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbePtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type BuildStrategySpecBuildStepsStartupProbeOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeOutput) ToBuildStrategySpecBuildStepsStartupProbeOutput() BuildStrategySpecBuildStepsStartupProbeOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeOutput) ToBuildStrategySpecBuildStepsStartupProbeOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeOutput) ToBuildStrategySpecBuildStepsStartupProbePtrOutput() BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o.ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsStartupProbeOutput) ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbe {
		return &v
	}).(BuildStrategySpecBuildStepsStartupProbePtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsStartupProbeOutput) Exec() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbeExec {
		return v.Exec
	}).(BuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o BuildStrategySpecBuildStepsStartupProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsStartupProbeOutput) HttpGet() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbeHttpGet {
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsStartupProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o BuildStrategySpecBuildStepsStartupProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o BuildStrategySpecBuildStepsStartupProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsStartupProbeOutput) TcpSocket() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbeTcpSocket {
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsStartupProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbePtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) ToBuildStrategySpecBuildStepsStartupProbePtrOutput() BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) ToBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) Elem() BuildStrategySpecBuildStepsStartupProbeOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) BuildStrategySpecBuildStepsStartupProbe { return *v }).(BuildStrategySpecBuildStepsStartupProbeOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) Exec() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(BuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) HttpGet() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) TcpSocket() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *BuildStrategySpecBuildStepsStartupProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o BuildStrategySpecBuildStepsStartupProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsStartupProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// BuildStrategySpecBuildStepsStartupProbeExecInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeExecArgs and BuildStrategySpecBuildStepsStartupProbeExecOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeExecInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeExecArgs{...}
type BuildStrategySpecBuildStepsStartupProbeExecInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeExecOutput() BuildStrategySpecBuildStepsStartupProbeExecOutput
	ToBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsStartupProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (BuildStrategySpecBuildStepsStartupProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeExecArgs) ToBuildStrategySpecBuildStepsStartupProbeExecOutput() BuildStrategySpecBuildStepsStartupProbeExecOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeExecArgs) ToBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeExecOutput)
}

func (i BuildStrategySpecBuildStepsStartupProbeExecArgs) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeExecArgs) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeExecOutput).ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsStartupProbeExecPtrInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeExecArgs, BuildStrategySpecBuildStepsStartupProbeExecPtr and BuildStrategySpecBuildStepsStartupProbeExecPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeExecPtrInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeExecArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsStartupProbeExecPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput
	ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeExecPtrOutput
}

type buildStrategySpecBuildStepsStartupProbeExecPtrType BuildStrategySpecBuildStepsStartupProbeExecArgs

func BuildStrategySpecBuildStepsStartupProbeExecPtr(v *BuildStrategySpecBuildStepsStartupProbeExecArgs) BuildStrategySpecBuildStepsStartupProbeExecPtrInput {
	return (*buildStrategySpecBuildStepsStartupProbeExecPtrType)(v)
}

func (*buildStrategySpecBuildStepsStartupProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsStartupProbeExecPtrType) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsStartupProbeExecPtrType) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type BuildStrategySpecBuildStepsStartupProbeExecOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeExecOutput) ToBuildStrategySpecBuildStepsStartupProbeExecOutput() BuildStrategySpecBuildStepsStartupProbeExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeExecOutput) ToBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeExecOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeExecOutput) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsStartupProbeExecOutput) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeExec) *BuildStrategySpecBuildStepsStartupProbeExec {
		return &v
	}).(BuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsStartupProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type BuildStrategySpecBuildStepsStartupProbeExecPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeExecPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeExecPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeExecPtrOutput) Elem() BuildStrategySpecBuildStepsStartupProbeExecOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeExec) BuildStrategySpecBuildStepsStartupProbeExec {
		return *v
	}).(BuildStrategySpecBuildStepsStartupProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o BuildStrategySpecBuildStepsStartupProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsStartupProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsStartupProbeHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// BuildStrategySpecBuildStepsStartupProbeHttpGetInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeHttpGetArgs and BuildStrategySpecBuildStepsStartupProbeHttpGetOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeHttpGetInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeHttpGetArgs{...}
type BuildStrategySpecBuildStepsStartupProbeHttpGetInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetOutput
	ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsStartupProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsStartupProbeHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetOutput)
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetOutput).ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeHttpGetArgs, BuildStrategySpecBuildStepsStartupProbeHttpGetPtr and BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput
	ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput
}

type buildStrategySpecBuildStepsStartupProbeHttpGetPtrType BuildStrategySpecBuildStepsStartupProbeHttpGetArgs

func BuildStrategySpecBuildStepsStartupProbeHttpGetPtr(v *BuildStrategySpecBuildStepsStartupProbeHttpGetArgs) BuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput {
	return (*buildStrategySpecBuildStepsStartupProbeHttpGetPtrType)(v)
}

func (*buildStrategySpecBuildStepsStartupProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsStartupProbeHttpGetPtrType) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsStartupProbeHttpGetPtrType) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type BuildStrategySpecBuildStepsStartupProbeHttpGetOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGet) *BuildStrategySpecBuildStepsStartupProbeHttpGet {
		return &v
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) HttpHeaders() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGet) []BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Port() BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGet) BuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Elem() BuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGet) BuildStrategySpecBuildStepsStartupProbeHttpGet {
		return *v
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) HttpHeaders() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGet) []BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Port() BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGet) *BuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs and BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs{...}
type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput
	ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput)
}

// BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray and BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray{ BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs{...} }
type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput
	ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray []BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput

func (BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders {
		return vs[0].([]BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput)
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetPort struct {
}

// BuildStrategySpecBuildStepsStartupProbeHttpGetPortInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs and BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeHttpGetPortInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs{...}
type BuildStrategySpecBuildStepsStartupProbeHttpGetPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput
	ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs struct {
}

func (BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput)
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput).ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs, BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtr and BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput
	ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput
}

type buildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs

func BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtr(v *BuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput {
	return (*buildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeHttpGetPort) *BuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		return &v
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) Elem() BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeHttpGetPort) BuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		return *v
	}).(BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsStartupProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsStartupProbeTcpSocketPort `pulumi:"port"`
}

// BuildStrategySpecBuildStepsStartupProbeTcpSocketInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs and BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeTcpSocketInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs{...}
type BuildStrategySpecBuildStepsStartupProbeTcpSocketInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput
	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port BuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput `pulumi:"port"`
}

func (BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput)
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput).ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs, BuildStrategySpecBuildStepsStartupProbeTcpSocketPtr and BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput
	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput
}

type buildStrategySpecBuildStepsStartupProbeTcpSocketPtrType BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs

func BuildStrategySpecBuildStepsStartupProbeTcpSocketPtr(v *BuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput {
	return (*buildStrategySpecBuildStepsStartupProbeTcpSocketPtrType)(v)
}

func (*buildStrategySpecBuildStepsStartupProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsStartupProbeTcpSocketPtrType) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsStartupProbeTcpSocketPtrType) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeTcpSocket) *BuildStrategySpecBuildStepsStartupProbeTcpSocket {
		return &v
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) Port() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeTcpSocket) BuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		return v.Port
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput)
}

type BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) Elem() BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeTcpSocket) BuildStrategySpecBuildStepsStartupProbeTcpSocket {
		return *v
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) Port() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeTcpSocket) *BuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbeTcpSocketPort struct {
}

// BuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs and BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs{...}
type BuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput
	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput
}

type BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs struct {
}

func (BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput)
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput).ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx)
}

// BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput is an input type that accepts BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs, BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtr and BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput` via:
//
//          BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput
	ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput
}

type buildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs

func BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtr(v *BuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput {
	return (*buildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType)(v)
}

func (*buildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (i *buildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return i.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *buildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o.ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsStartupProbeTcpSocketPort) *BuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		return &v
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput)
}

type BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) ToBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o
}

func (o BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) Elem() BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o.ApplyT(func(v *BuildStrategySpecBuildStepsStartupProbeTcpSocketPort) BuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		return *v
	}).(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput)
}

// volumeDevice describes a mapping of a raw block device within a container.
type BuildStrategySpecBuildStepsVolumeDevices struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath string `pulumi:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name string `pulumi:"name"`
}

// BuildStrategySpecBuildStepsVolumeDevicesInput is an input type that accepts BuildStrategySpecBuildStepsVolumeDevicesArgs and BuildStrategySpecBuildStepsVolumeDevicesOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsVolumeDevicesInput` via:
//
//          BuildStrategySpecBuildStepsVolumeDevicesArgs{...}
type BuildStrategySpecBuildStepsVolumeDevicesInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsVolumeDevicesOutput() BuildStrategySpecBuildStepsVolumeDevicesOutput
	ToBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(context.Context) BuildStrategySpecBuildStepsVolumeDevicesOutput
}

// volumeDevice describes a mapping of a raw block device within a container.
type BuildStrategySpecBuildStepsVolumeDevicesArgs struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath pulumi.StringInput `pulumi:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name pulumi.StringInput `pulumi:"name"`
}

func (BuildStrategySpecBuildStepsVolumeDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsVolumeDevicesArgs) ToBuildStrategySpecBuildStepsVolumeDevicesOutput() BuildStrategySpecBuildStepsVolumeDevicesOutput {
	return i.ToBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsVolumeDevicesArgs) ToBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsVolumeDevicesOutput)
}

// BuildStrategySpecBuildStepsVolumeDevicesArrayInput is an input type that accepts BuildStrategySpecBuildStepsVolumeDevicesArray and BuildStrategySpecBuildStepsVolumeDevicesArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsVolumeDevicesArrayInput` via:
//
//          BuildStrategySpecBuildStepsVolumeDevicesArray{ BuildStrategySpecBuildStepsVolumeDevicesArgs{...} }
type BuildStrategySpecBuildStepsVolumeDevicesArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutput() BuildStrategySpecBuildStepsVolumeDevicesArrayOutput
	ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsVolumeDevicesArrayOutput
}

type BuildStrategySpecBuildStepsVolumeDevicesArray []BuildStrategySpecBuildStepsVolumeDevicesInput

func (BuildStrategySpecBuildStepsVolumeDevicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsVolumeDevicesArray) ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutput() BuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return i.ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsVolumeDevicesArray) ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsVolumeDevicesArrayOutput)
}

// volumeDevice describes a mapping of a raw block device within a container.
type BuildStrategySpecBuildStepsVolumeDevicesOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsVolumeDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsVolumeDevicesOutput) ToBuildStrategySpecBuildStepsVolumeDevicesOutput() BuildStrategySpecBuildStepsVolumeDevicesOutput {
	return o
}

func (o BuildStrategySpecBuildStepsVolumeDevicesOutput) ToBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeDevicesOutput {
	return o
}

// devicePath is the path inside of the container that the device will be mapped to.
func (o BuildStrategySpecBuildStepsVolumeDevicesOutput) DevicePath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeDevices) string { return v.DevicePath }).(pulumi.StringOutput)
}

// name must match the name of a persistentVolumeClaim in the pod
func (o BuildStrategySpecBuildStepsVolumeDevicesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeDevices) string { return v.Name }).(pulumi.StringOutput)
}

type BuildStrategySpecBuildStepsVolumeDevicesArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsVolumeDevicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsVolumeDevicesArrayOutput) ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutput() BuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsVolumeDevicesArrayOutput) ToBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsVolumeDevicesArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsVolumeDevicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsVolumeDevices {
		return vs[0].([]BuildStrategySpecBuildStepsVolumeDevices)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsVolumeDevicesOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildStrategySpecBuildStepsVolumeMounts struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// BuildStrategySpecBuildStepsVolumeMountsInput is an input type that accepts BuildStrategySpecBuildStepsVolumeMountsArgs and BuildStrategySpecBuildStepsVolumeMountsOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsVolumeMountsInput` via:
//
//          BuildStrategySpecBuildStepsVolumeMountsArgs{...}
type BuildStrategySpecBuildStepsVolumeMountsInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsVolumeMountsOutput() BuildStrategySpecBuildStepsVolumeMountsOutput
	ToBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(context.Context) BuildStrategySpecBuildStepsVolumeMountsOutput
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildStrategySpecBuildStepsVolumeMountsArgs struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (BuildStrategySpecBuildStepsVolumeMountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsVolumeMountsArgs) ToBuildStrategySpecBuildStepsVolumeMountsOutput() BuildStrategySpecBuildStepsVolumeMountsOutput {
	return i.ToBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsVolumeMountsArgs) ToBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeMountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsVolumeMountsOutput)
}

// BuildStrategySpecBuildStepsVolumeMountsArrayInput is an input type that accepts BuildStrategySpecBuildStepsVolumeMountsArray and BuildStrategySpecBuildStepsVolumeMountsArrayOutput values.
// You can construct a concrete instance of `BuildStrategySpecBuildStepsVolumeMountsArrayInput` via:
//
//          BuildStrategySpecBuildStepsVolumeMountsArray{ BuildStrategySpecBuildStepsVolumeMountsArgs{...} }
type BuildStrategySpecBuildStepsVolumeMountsArrayInput interface {
	pulumi.Input

	ToBuildStrategySpecBuildStepsVolumeMountsArrayOutput() BuildStrategySpecBuildStepsVolumeMountsArrayOutput
	ToBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(context.Context) BuildStrategySpecBuildStepsVolumeMountsArrayOutput
}

type BuildStrategySpecBuildStepsVolumeMountsArray []BuildStrategySpecBuildStepsVolumeMountsInput

func (BuildStrategySpecBuildStepsVolumeMountsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (i BuildStrategySpecBuildStepsVolumeMountsArray) ToBuildStrategySpecBuildStepsVolumeMountsArrayOutput() BuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return i.ToBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(context.Background())
}

func (i BuildStrategySpecBuildStepsVolumeMountsArray) ToBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategySpecBuildStepsVolumeMountsArrayOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type BuildStrategySpecBuildStepsVolumeMountsOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsVolumeMountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsVolumeMountsOutput) ToBuildStrategySpecBuildStepsVolumeMountsOutput() BuildStrategySpecBuildStepsVolumeMountsOutput {
	return o
}

func (o BuildStrategySpecBuildStepsVolumeMountsOutput) ToBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeMountsOutput {
	return o
}

// Path within the container at which the volume should be mounted.  Must not contain ':'.
func (o BuildStrategySpecBuildStepsVolumeMountsOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeMounts) string { return v.MountPath }).(pulumi.StringOutput)
}

// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
func (o BuildStrategySpecBuildStepsVolumeMountsOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeMounts) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o BuildStrategySpecBuildStepsVolumeMountsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeMounts) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
func (o BuildStrategySpecBuildStepsVolumeMountsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeMounts) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
func (o BuildStrategySpecBuildStepsVolumeMountsOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeMounts) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
func (o BuildStrategySpecBuildStepsVolumeMountsOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildStrategySpecBuildStepsVolumeMounts) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type BuildStrategySpecBuildStepsVolumeMountsArrayOutput struct{ *pulumi.OutputState }

func (BuildStrategySpecBuildStepsVolumeMountsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (o BuildStrategySpecBuildStepsVolumeMountsArrayOutput) ToBuildStrategySpecBuildStepsVolumeMountsArrayOutput() BuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsVolumeMountsArrayOutput) ToBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(ctx context.Context) BuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return o
}

func (o BuildStrategySpecBuildStepsVolumeMountsArrayOutput) Index(i pulumi.IntInput) BuildStrategySpecBuildStepsVolumeMountsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildStrategySpecBuildStepsVolumeMounts {
		return vs[0].([]BuildStrategySpecBuildStepsVolumeMounts)[vs[1].(int)]
	}).(BuildStrategySpecBuildStepsVolumeMountsOutput)
}

// BuildStrategyStatus defines the observed state of BuildStrategy
type BuildStrategyStatus struct {
}

// BuildStrategyStatusInput is an input type that accepts BuildStrategyStatusArgs and BuildStrategyStatusOutput values.
// You can construct a concrete instance of `BuildStrategyStatusInput` via:
//
//          BuildStrategyStatusArgs{...}
type BuildStrategyStatusInput interface {
	pulumi.Input

	ToBuildStrategyStatusOutput() BuildStrategyStatusOutput
	ToBuildStrategyStatusOutputWithContext(context.Context) BuildStrategyStatusOutput
}

// BuildStrategyStatus defines the observed state of BuildStrategy
type BuildStrategyStatusArgs struct {
}

func (BuildStrategyStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategyStatus)(nil)).Elem()
}

func (i BuildStrategyStatusArgs) ToBuildStrategyStatusOutput() BuildStrategyStatusOutput {
	return i.ToBuildStrategyStatusOutputWithContext(context.Background())
}

func (i BuildStrategyStatusArgs) ToBuildStrategyStatusOutputWithContext(ctx context.Context) BuildStrategyStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildStrategyStatusOutput)
}

// BuildStrategyStatus defines the observed state of BuildStrategy
type BuildStrategyStatusOutput struct{ *pulumi.OutputState }

func (BuildStrategyStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildStrategyStatus)(nil)).Elem()
}

func (o BuildStrategyStatusOutput) ToBuildStrategyStatusOutput() BuildStrategyStatusOutput {
	return o
}

func (o BuildStrategyStatusOutput) ToBuildStrategyStatusOutputWithContext(ctx context.Context) BuildStrategyStatusOutput {
	return o
}

// ClusterBuildStrategy is the Schema for the clusterbuildstrategies API
type ClusterBuildStrategyType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildStrategySpec defines the desired state of BuildStrategy
	Spec *ClusterBuildStrategySpec `pulumi:"spec"`
	// BuildStrategyStatus defines the observed state of BuildStrategy
	Status map[string]interface{} `pulumi:"status"`
}

// ClusterBuildStrategyTypeInput is an input type that accepts ClusterBuildStrategyTypeArgs and ClusterBuildStrategyTypeOutput values.
// You can construct a concrete instance of `ClusterBuildStrategyTypeInput` via:
//
//          ClusterBuildStrategyTypeArgs{...}
type ClusterBuildStrategyTypeInput interface {
	pulumi.Input

	ToClusterBuildStrategyTypeOutput() ClusterBuildStrategyTypeOutput
	ToClusterBuildStrategyTypeOutputWithContext(context.Context) ClusterBuildStrategyTypeOutput
}

// ClusterBuildStrategy is the Schema for the clusterbuildstrategies API
type ClusterBuildStrategyTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BuildStrategySpec defines the desired state of BuildStrategy
	Spec ClusterBuildStrategySpecPtrInput `pulumi:"spec"`
	// BuildStrategyStatus defines the observed state of BuildStrategy
	Status pulumi.MapInput `pulumi:"status"`
}

func (ClusterBuildStrategyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategyType)(nil)).Elem()
}

func (i ClusterBuildStrategyTypeArgs) ToClusterBuildStrategyTypeOutput() ClusterBuildStrategyTypeOutput {
	return i.ToClusterBuildStrategyTypeOutputWithContext(context.Background())
}

func (i ClusterBuildStrategyTypeArgs) ToClusterBuildStrategyTypeOutputWithContext(ctx context.Context) ClusterBuildStrategyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategyTypeOutput)
}

// ClusterBuildStrategy is the Schema for the clusterbuildstrategies API
type ClusterBuildStrategyTypeOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategyType)(nil)).Elem()
}

func (o ClusterBuildStrategyTypeOutput) ToClusterBuildStrategyTypeOutput() ClusterBuildStrategyTypeOutput {
	return o
}

func (o ClusterBuildStrategyTypeOutput) ToClusterBuildStrategyTypeOutputWithContext(ctx context.Context) ClusterBuildStrategyTypeOutput {
	return o
}

func (o ClusterBuildStrategyTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategyType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterBuildStrategyTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategyType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterBuildStrategyTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategyType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BuildStrategySpec defines the desired state of BuildStrategy
func (o ClusterBuildStrategyTypeOutput) Spec() ClusterBuildStrategySpecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategyType) *ClusterBuildStrategySpec { return v.Spec }).(ClusterBuildStrategySpecPtrOutput)
}

// BuildStrategyStatus defines the observed state of BuildStrategy
func (o ClusterBuildStrategyTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterBuildStrategyType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type ClusterBuildStrategyMetadata struct {
}

// ClusterBuildStrategyMetadataInput is an input type that accepts ClusterBuildStrategyMetadataArgs and ClusterBuildStrategyMetadataOutput values.
// You can construct a concrete instance of `ClusterBuildStrategyMetadataInput` via:
//
//          ClusterBuildStrategyMetadataArgs{...}
type ClusterBuildStrategyMetadataInput interface {
	pulumi.Input

	ToClusterBuildStrategyMetadataOutput() ClusterBuildStrategyMetadataOutput
	ToClusterBuildStrategyMetadataOutputWithContext(context.Context) ClusterBuildStrategyMetadataOutput
}

type ClusterBuildStrategyMetadataArgs struct {
}

func (ClusterBuildStrategyMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategyMetadata)(nil)).Elem()
}

func (i ClusterBuildStrategyMetadataArgs) ToClusterBuildStrategyMetadataOutput() ClusterBuildStrategyMetadataOutput {
	return i.ToClusterBuildStrategyMetadataOutputWithContext(context.Background())
}

func (i ClusterBuildStrategyMetadataArgs) ToClusterBuildStrategyMetadataOutputWithContext(ctx context.Context) ClusterBuildStrategyMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategyMetadataOutput)
}

type ClusterBuildStrategyMetadataOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategyMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategyMetadata)(nil)).Elem()
}

func (o ClusterBuildStrategyMetadataOutput) ToClusterBuildStrategyMetadataOutput() ClusterBuildStrategyMetadataOutput {
	return o
}

func (o ClusterBuildStrategyMetadataOutput) ToClusterBuildStrategyMetadataOutputWithContext(ctx context.Context) ClusterBuildStrategyMetadataOutput {
	return o
}

// BuildStrategySpec defines the desired state of BuildStrategy
type ClusterBuildStrategySpec struct {
	BuildSteps []ClusterBuildStrategySpecBuildSteps `pulumi:"buildSteps"`
}

// ClusterBuildStrategySpecInput is an input type that accepts ClusterBuildStrategySpecArgs and ClusterBuildStrategySpecOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecInput` via:
//
//          ClusterBuildStrategySpecArgs{...}
type ClusterBuildStrategySpecInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecOutput() ClusterBuildStrategySpecOutput
	ToClusterBuildStrategySpecOutputWithContext(context.Context) ClusterBuildStrategySpecOutput
}

// BuildStrategySpec defines the desired state of BuildStrategy
type ClusterBuildStrategySpecArgs struct {
	BuildSteps ClusterBuildStrategySpecBuildStepsArrayInput `pulumi:"buildSteps"`
}

func (ClusterBuildStrategySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpec)(nil)).Elem()
}

func (i ClusterBuildStrategySpecArgs) ToClusterBuildStrategySpecOutput() ClusterBuildStrategySpecOutput {
	return i.ToClusterBuildStrategySpecOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecArgs) ToClusterBuildStrategySpecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecOutput)
}

func (i ClusterBuildStrategySpecArgs) ToClusterBuildStrategySpecPtrOutput() ClusterBuildStrategySpecPtrOutput {
	return i.ToClusterBuildStrategySpecPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecArgs) ToClusterBuildStrategySpecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecOutput).ToClusterBuildStrategySpecPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecPtrInput is an input type that accepts ClusterBuildStrategySpecArgs, ClusterBuildStrategySpecPtr and ClusterBuildStrategySpecPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecPtrInput` via:
//
//          ClusterBuildStrategySpecArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecPtrOutput() ClusterBuildStrategySpecPtrOutput
	ToClusterBuildStrategySpecPtrOutputWithContext(context.Context) ClusterBuildStrategySpecPtrOutput
}

type clusterBuildStrategySpecPtrType ClusterBuildStrategySpecArgs

func ClusterBuildStrategySpecPtr(v *ClusterBuildStrategySpecArgs) ClusterBuildStrategySpecPtrInput {
	return (*clusterBuildStrategySpecPtrType)(v)
}

func (*clusterBuildStrategySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpec)(nil)).Elem()
}

func (i *clusterBuildStrategySpecPtrType) ToClusterBuildStrategySpecPtrOutput() ClusterBuildStrategySpecPtrOutput {
	return i.ToClusterBuildStrategySpecPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecPtrType) ToClusterBuildStrategySpecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecPtrOutput)
}

// BuildStrategySpec defines the desired state of BuildStrategy
type ClusterBuildStrategySpecOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecOutput) ToClusterBuildStrategySpecOutput() ClusterBuildStrategySpecOutput {
	return o
}

func (o ClusterBuildStrategySpecOutput) ToClusterBuildStrategySpecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecOutput {
	return o
}

func (o ClusterBuildStrategySpecOutput) ToClusterBuildStrategySpecPtrOutput() ClusterBuildStrategySpecPtrOutput {
	return o.ToClusterBuildStrategySpecPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecOutput) ToClusterBuildStrategySpecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpec) *ClusterBuildStrategySpec {
		return &v
	}).(ClusterBuildStrategySpecPtrOutput)
}
func (o ClusterBuildStrategySpecOutput) BuildSteps() ClusterBuildStrategySpecBuildStepsArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpec) []ClusterBuildStrategySpecBuildSteps { return v.BuildSteps }).(ClusterBuildStrategySpecBuildStepsArrayOutput)
}

type ClusterBuildStrategySpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecPtrOutput) ToClusterBuildStrategySpecPtrOutput() ClusterBuildStrategySpecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecPtrOutput) ToClusterBuildStrategySpecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecPtrOutput) Elem() ClusterBuildStrategySpecOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpec) ClusterBuildStrategySpec { return *v }).(ClusterBuildStrategySpecOutput)
}

func (o ClusterBuildStrategySpecPtrOutput) BuildSteps() ClusterBuildStrategySpecBuildStepsArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpec) []ClusterBuildStrategySpecBuildSteps {
		if v == nil {
			return nil
		}
		return v.BuildSteps
	}).(ClusterBuildStrategySpecBuildStepsArrayOutput)
}

// BuildStep defines a partial step that needs to run in container for building the image.
type ClusterBuildStrategySpecBuildSteps struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args []string `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Command []string `pulumi:"command"`
	// List of environment variables to set in the container. Cannot be updated.
	Env []ClusterBuildStrategySpecBuildStepsEnv `pulumi:"env"`
	// List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
	EnvFrom []ClusterBuildStrategySpecBuildStepsEnvFrom `pulumi:"envFrom"`
	// Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
	Image *string `pulumi:"image"`
	// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	ImagePullPolicy *string `pulumi:"imagePullPolicy"`
	// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
	Lifecycle *ClusterBuildStrategySpecBuildStepsLifecycle `pulumi:"lifecycle"`
	// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe *ClusterBuildStrategySpecBuildStepsLivenessProbe `pulumi:"livenessProbe"`
	// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
	Name string `pulumi:"name"`
	// List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
	Ports []ClusterBuildStrategySpecBuildStepsPorts `pulumi:"ports"`
	// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe *ClusterBuildStrategySpecBuildStepsReadinessProbe `pulumi:"readinessProbe"`
	// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources *ClusterBuildStrategySpecBuildStepsResources `pulumi:"resources"`
	// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
	SecurityContext *ClusterBuildStrategySpecBuildStepsSecurityContext `pulumi:"securityContext"`
	// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe *ClusterBuildStrategySpecBuildStepsStartupProbe `pulumi:"startupProbe"`
	// Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
	Stdin *bool `pulumi:"stdin"`
	// Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
	StdinOnce *bool `pulumi:"stdinOnce"`
	// Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
	TerminationMessagePath *string `pulumi:"terminationMessagePath"`
	// Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
	TerminationMessagePolicy *string `pulumi:"terminationMessagePolicy"`
	// Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
	Tty *bool `pulumi:"tty"`
	// volumeDevices is the list of block devices to be used by the container. This is a beta feature.
	VolumeDevices []ClusterBuildStrategySpecBuildStepsVolumeDevices `pulumi:"volumeDevices"`
	// Pod volumes to mount into the container's filesystem. Cannot be updated.
	VolumeMounts []ClusterBuildStrategySpecBuildStepsVolumeMounts `pulumi:"volumeMounts"`
	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
	WorkingDir *string `pulumi:"workingDir"`
}

// ClusterBuildStrategySpecBuildStepsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsArgs and ClusterBuildStrategySpecBuildStepsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsArgs{...}
type ClusterBuildStrategySpecBuildStepsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsOutput() ClusterBuildStrategySpecBuildStepsOutput
	ToClusterBuildStrategySpecBuildStepsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsOutput
}

// BuildStep defines a partial step that needs to run in container for building the image.
type ClusterBuildStrategySpecBuildStepsArgs struct {
	// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Command pulumi.StringArrayInput `pulumi:"command"`
	// List of environment variables to set in the container. Cannot be updated.
	Env ClusterBuildStrategySpecBuildStepsEnvArrayInput `pulumi:"env"`
	// List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
	EnvFrom ClusterBuildStrategySpecBuildStepsEnvFromArrayInput `pulumi:"envFrom"`
	// Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	ImagePullPolicy pulumi.StringPtrInput `pulumi:"imagePullPolicy"`
	// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
	Lifecycle ClusterBuildStrategySpecBuildStepsLifecyclePtrInput `pulumi:"lifecycle"`
	// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	LivenessProbe ClusterBuildStrategySpecBuildStepsLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
	Name pulumi.StringInput `pulumi:"name"`
	// List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
	Ports ClusterBuildStrategySpecBuildStepsPortsArrayInput `pulumi:"ports"`
	// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	ReadinessProbe ClusterBuildStrategySpecBuildStepsReadinessProbePtrInput `pulumi:"readinessProbe"`
	// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Resources ClusterBuildStrategySpecBuildStepsResourcesPtrInput `pulumi:"resources"`
	// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
	SecurityContext ClusterBuildStrategySpecBuildStepsSecurityContextPtrInput `pulumi:"securityContext"`
	// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	StartupProbe ClusterBuildStrategySpecBuildStepsStartupProbePtrInput `pulumi:"startupProbe"`
	// Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
	Stdin pulumi.BoolPtrInput `pulumi:"stdin"`
	// Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
	StdinOnce pulumi.BoolPtrInput `pulumi:"stdinOnce"`
	// Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
	TerminationMessagePath pulumi.StringPtrInput `pulumi:"terminationMessagePath"`
	// Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
	TerminationMessagePolicy pulumi.StringPtrInput `pulumi:"terminationMessagePolicy"`
	// Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
	Tty pulumi.BoolPtrInput `pulumi:"tty"`
	// volumeDevices is the list of block devices to be used by the container. This is a beta feature.
	VolumeDevices ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayInput `pulumi:"volumeDevices"`
	// Pod volumes to mount into the container's filesystem. Cannot be updated.
	VolumeMounts ClusterBuildStrategySpecBuildStepsVolumeMountsArrayInput `pulumi:"volumeMounts"`
	// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (ClusterBuildStrategySpecBuildStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildSteps)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsArgs) ToClusterBuildStrategySpecBuildStepsOutput() ClusterBuildStrategySpecBuildStepsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsArgs) ToClusterBuildStrategySpecBuildStepsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsOutput)
}

// ClusterBuildStrategySpecBuildStepsArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsArray and ClusterBuildStrategySpecBuildStepsArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsArray{ ClusterBuildStrategySpecBuildStepsArgs{...} }
type ClusterBuildStrategySpecBuildStepsArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsArrayOutput() ClusterBuildStrategySpecBuildStepsArrayOutput
	ToClusterBuildStrategySpecBuildStepsArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsArrayOutput
}

type ClusterBuildStrategySpecBuildStepsArray []ClusterBuildStrategySpecBuildStepsInput

func (ClusterBuildStrategySpecBuildStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildSteps)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsArray) ToClusterBuildStrategySpecBuildStepsArrayOutput() ClusterBuildStrategySpecBuildStepsArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsArray) ToClusterBuildStrategySpecBuildStepsArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsArrayOutput)
}

// BuildStep defines a partial step that needs to run in container for building the image.
type ClusterBuildStrategySpecBuildStepsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildSteps)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsOutput) ToClusterBuildStrategySpecBuildStepsOutput() ClusterBuildStrategySpecBuildStepsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsOutput) ToClusterBuildStrategySpecBuildStepsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsOutput {
	return o
}

// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
func (o ClusterBuildStrategySpecBuildStepsOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
func (o ClusterBuildStrategySpecBuildStepsOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// List of environment variables to set in the container. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) Env() ClusterBuildStrategySpecBuildStepsEnvArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []ClusterBuildStrategySpecBuildStepsEnv { return v.Env }).(ClusterBuildStrategySpecBuildStepsEnvArrayOutput)
}

// List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) EnvFrom() ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []ClusterBuildStrategySpecBuildStepsEnvFrom {
		return v.EnvFrom
	}).(ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput)
}

// Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
func (o ClusterBuildStrategySpecBuildStepsOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
func (o ClusterBuildStrategySpecBuildStepsOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *string { return v.ImagePullPolicy }).(pulumi.StringPtrOutput)
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) Lifecycle() ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *ClusterBuildStrategySpecBuildStepsLifecycle {
		return v.Lifecycle
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput)
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsOutput) LivenessProbe() ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *ClusterBuildStrategySpecBuildStepsLivenessProbe {
		return v.LivenessProbe
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput)
}

// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) string { return v.Name }).(pulumi.StringOutput)
}

// List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) Ports() ClusterBuildStrategySpecBuildStepsPortsArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []ClusterBuildStrategySpecBuildStepsPorts { return v.Ports }).(ClusterBuildStrategySpecBuildStepsPortsArrayOutput)
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsOutput) ReadinessProbe() ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *ClusterBuildStrategySpecBuildStepsReadinessProbe {
		return v.ReadinessProbe
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput)
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ClusterBuildStrategySpecBuildStepsOutput) Resources() ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *ClusterBuildStrategySpecBuildStepsResources {
		return v.Resources
	}).(ClusterBuildStrategySpecBuildStepsResourcesPtrOutput)
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
func (o ClusterBuildStrategySpecBuildStepsOutput) SecurityContext() ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *ClusterBuildStrategySpecBuildStepsSecurityContext {
		return v.SecurityContext
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsOutput) StartupProbe() ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *ClusterBuildStrategySpecBuildStepsStartupProbe {
		return v.StartupProbe
	}).(ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput)
}

// Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
func (o ClusterBuildStrategySpecBuildStepsOutput) Stdin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *bool { return v.Stdin }).(pulumi.BoolPtrOutput)
}

// Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
func (o ClusterBuildStrategySpecBuildStepsOutput) StdinOnce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *bool { return v.StdinOnce }).(pulumi.BoolPtrOutput)
}

// Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) TerminationMessagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *string { return v.TerminationMessagePath }).(pulumi.StringPtrOutput)
}

// Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) TerminationMessagePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *string { return v.TerminationMessagePolicy }).(pulumi.StringPtrOutput)
}

// Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
func (o ClusterBuildStrategySpecBuildStepsOutput) Tty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *bool { return v.Tty }).(pulumi.BoolPtrOutput)
}

// volumeDevices is the list of block devices to be used by the container. This is a beta feature.
func (o ClusterBuildStrategySpecBuildStepsOutput) VolumeDevices() ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []ClusterBuildStrategySpecBuildStepsVolumeDevices {
		return v.VolumeDevices
	}).(ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput)
}

// Pod volumes to mount into the container's filesystem. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) VolumeMounts() ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) []ClusterBuildStrategySpecBuildStepsVolumeMounts {
		return v.VolumeMounts
	}).(ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput)
}

// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
func (o ClusterBuildStrategySpecBuildStepsOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildSteps) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildSteps)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsArrayOutput) ToClusterBuildStrategySpecBuildStepsArrayOutput() ClusterBuildStrategySpecBuildStepsArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsArrayOutput) ToClusterBuildStrategySpecBuildStepsArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildSteps {
		return vs[0].([]ClusterBuildStrategySpecBuildSteps)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsOutput)
}

// EnvVar represents an environment variable present in a Container.
type ClusterBuildStrategySpecBuildStepsEnv struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name string `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value *string `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom *ClusterBuildStrategySpecBuildStepsEnvValueFrom `pulumi:"valueFrom"`
}

// ClusterBuildStrategySpecBuildStepsEnvInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvArgs and ClusterBuildStrategySpecBuildStepsEnvOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvOutput() ClusterBuildStrategySpecBuildStepsEnvOutput
	ToClusterBuildStrategySpecBuildStepsEnvOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvOutput
}

// EnvVar represents an environment variable present in a Container.
type ClusterBuildStrategySpecBuildStepsEnvArgs struct {
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name pulumi.StringInput `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom ClusterBuildStrategySpecBuildStepsEnvValueFromPtrInput `pulumi:"valueFrom"`
}

func (ClusterBuildStrategySpecBuildStepsEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvArgs) ToClusterBuildStrategySpecBuildStepsEnvOutput() ClusterBuildStrategySpecBuildStepsEnvOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvArgs) ToClusterBuildStrategySpecBuildStepsEnvOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvOutput)
}

// ClusterBuildStrategySpecBuildStepsEnvArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvArray and ClusterBuildStrategySpecBuildStepsEnvArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvArray{ ClusterBuildStrategySpecBuildStepsEnvArgs{...} }
type ClusterBuildStrategySpecBuildStepsEnvArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvArrayOutput() ClusterBuildStrategySpecBuildStepsEnvArrayOutput
	ToClusterBuildStrategySpecBuildStepsEnvArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvArrayOutput
}

type ClusterBuildStrategySpecBuildStepsEnvArray []ClusterBuildStrategySpecBuildStepsEnvInput

func (ClusterBuildStrategySpecBuildStepsEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvArray) ToClusterBuildStrategySpecBuildStepsEnvArrayOutput() ClusterBuildStrategySpecBuildStepsEnvArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvArray) ToClusterBuildStrategySpecBuildStepsEnvArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvArrayOutput)
}

// EnvVar represents an environment variable present in a Container.
type ClusterBuildStrategySpecBuildStepsEnvOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvOutput) ToClusterBuildStrategySpecBuildStepsEnvOutput() ClusterBuildStrategySpecBuildStepsEnvOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvOutput) ToClusterBuildStrategySpecBuildStepsEnvOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvOutput {
	return o
}

// Name of the environment variable. Must be a C_IDENTIFIER.
func (o ClusterBuildStrategySpecBuildStepsEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
func (o ClusterBuildStrategySpecBuildStepsEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
func (o ClusterBuildStrategySpecBuildStepsEnvOutput) ValueFrom() ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnv) *ClusterBuildStrategySpecBuildStepsEnvValueFrom {
		return v.ValueFrom
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsEnv)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvArrayOutput) ToClusterBuildStrategySpecBuildStepsEnvArrayOutput() ClusterBuildStrategySpecBuildStepsEnvArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvArrayOutput) ToClusterBuildStrategySpecBuildStepsEnvArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsEnv {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsEnv)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsEnvOutput)
}

// EnvFromSource represents the source of a set of ConfigMaps
type ClusterBuildStrategySpecBuildStepsEnvFrom struct {
	// The ConfigMap to select from
	ConfigMapRef *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef `pulumi:"configMapRef"`
	// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
	Prefix *string `pulumi:"prefix"`
	// The Secret to select from
	SecretRef *ClusterBuildStrategySpecBuildStepsEnvFromSecretRef `pulumi:"secretRef"`
}

// ClusterBuildStrategySpecBuildStepsEnvFromInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvFromArgs and ClusterBuildStrategySpecBuildStepsEnvFromOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvFromInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvFromArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvFromInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvFromOutput() ClusterBuildStrategySpecBuildStepsEnvFromOutput
	ToClusterBuildStrategySpecBuildStepsEnvFromOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvFromOutput
}

// EnvFromSource represents the source of a set of ConfigMaps
type ClusterBuildStrategySpecBuildStepsEnvFromArgs struct {
	// The ConfigMap to select from
	ConfigMapRef ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput `pulumi:"configMapRef"`
	// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The Secret to select from
	SecretRef ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrInput `pulumi:"secretRef"`
}

func (ClusterBuildStrategySpecBuildStepsEnvFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromArgs) ToClusterBuildStrategySpecBuildStepsEnvFromOutput() ClusterBuildStrategySpecBuildStepsEnvFromOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromArgs) ToClusterBuildStrategySpecBuildStepsEnvFromOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromOutput)
}

// ClusterBuildStrategySpecBuildStepsEnvFromArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvFromArray and ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvFromArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvFromArray{ ClusterBuildStrategySpecBuildStepsEnvFromArgs{...} }
type ClusterBuildStrategySpecBuildStepsEnvFromArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutput() ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput
	ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput
}

type ClusterBuildStrategySpecBuildStepsEnvFromArray []ClusterBuildStrategySpecBuildStepsEnvFromInput

func (ClusterBuildStrategySpecBuildStepsEnvFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromArray) ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutput() ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromArray) ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput)
}

// EnvFromSource represents the source of a set of ConfigMaps
type ClusterBuildStrategySpecBuildStepsEnvFromOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromOutput) ToClusterBuildStrategySpecBuildStepsEnvFromOutput() ClusterBuildStrategySpecBuildStepsEnvFromOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromOutput) ToClusterBuildStrategySpecBuildStepsEnvFromOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromOutput {
	return o
}

// The ConfigMap to select from
func (o ClusterBuildStrategySpecBuildStepsEnvFromOutput) ConfigMapRef() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFrom) *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef {
		return v.ConfigMapRef
	}).(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput)
}

// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
func (o ClusterBuildStrategySpecBuildStepsEnvFromOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFrom) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The Secret to select from
func (o ClusterBuildStrategySpecBuildStepsEnvFromOutput) SecretRef() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFrom) *ClusterBuildStrategySpecBuildStepsEnvFromSecretRef {
		return v.SecretRef
	}).(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsEnvFrom)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput) ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutput() ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput) ToClusterBuildStrategySpecBuildStepsEnvFromArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsEnvFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsEnvFrom {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsEnvFrom)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsEnvFromOutput)
}

// The ConfigMap to select from
type ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap must be defined
	Optional *bool `pulumi:"optional"`
}

// ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs and ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput
	ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput
}

// The ConfigMap to select from
type ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput).ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs, ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtr and ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrType ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs

func ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtr(v *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefArgs) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput)
}

// The ConfigMap to select from
type ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef) *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef) ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The Secret to select from
type ClusterBuildStrategySpecBuildStepsEnvFromSecretRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret must be defined
	Optional *bool `pulumi:"optional"`
}

// ClusterBuildStrategySpecBuildStepsEnvFromSecretRefInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs and ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvFromSecretRefInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvFromSecretRefInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput
	ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput
}

// The Secret to select from
type ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput).ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs, ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtr and ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrType ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs

func ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtr(v *ClusterBuildStrategySpecBuildStepsEnvFromSecretRefArgs) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput)
}

// The Secret to select from
type ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFromSecretRef) *ClusterBuildStrategySpecBuildStepsEnvFromSecretRef {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFromSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvFromSecretRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvFromSecretRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvFromSecretRef) ClusterBuildStrategySpecBuildStepsEnvFromSecretRef {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvFromSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvFromSecretRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type ClusterBuildStrategySpecBuildStepsEnvValueFrom struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
	FieldRef *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef `pulumi:"secretKeyRef"`
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromArgs and ClusterBuildStrategySpecBuildStepsEnvValueFromOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvValueFromInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromOutput
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type ClusterBuildStrategySpecBuildStepsEnvValueFromArgs struct {
	// Selects a key of a ConfigMap.
	ConfigMapKeyRef ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput `pulumi:"configMapKeyRef"`
	// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
	FieldRef ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput `pulumi:"fieldRef"`
	// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
	ResourceFieldRef ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
	// Selects a key of a secret in the pod's namespace
	SecretKeyRef ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput `pulumi:"secretKeyRef"`
}

func (ClusterBuildStrategySpecBuildStepsEnvValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromOutput).ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromArgs, ClusterBuildStrategySpecBuildStepsEnvValueFromPtr and ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvValueFromPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvValueFromPtrType ClusterBuildStrategySpecBuildStepsEnvValueFromArgs

func ClusterBuildStrategySpecBuildStepsEnvValueFromPtr(v *ClusterBuildStrategySpecBuildStepsEnvValueFromArgs) ClusterBuildStrategySpecBuildStepsEnvValueFromPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvValueFromPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
type ClusterBuildStrategySpecBuildStepsEnvValueFromOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFrom {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput)
}

// Selects a key of a ConfigMap.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ConfigMapKeyRef() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		return v.ConfigMapKeyRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) FieldRef() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef {
		return v.FieldRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) ResourceFieldRef() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		return v.ResourceFieldRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromOutput) SecretKeyRef() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		return v.SecretKeyRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFrom)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvValueFromOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFrom) ClusterBuildStrategySpecBuildStepsEnvValueFrom {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromOutput)
}

// Selects a key of a ConfigMap.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) ConfigMapKeyRef() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		if v == nil {
			return nil
		}
		return v.ConfigMapKeyRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) FieldRef() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef {
		if v == nil {
			return nil
		}
		return v.FieldRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) ResourceFieldRef() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		if v == nil {
			return nil
		}
		return v.ResourceFieldRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput) SecretKeyRef() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFrom) *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef struct {
	// The key to select.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs and ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput
}

// Selects a key of a ConfigMap.
type ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput).ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs, ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtr and ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs

func ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtr(v *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefArgs) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// Selects a key of a ConfigMap.
type ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput)
}

// The key to select.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput)
}

// The key to select.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs and ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput).ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs, ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtr and ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrType ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs

func ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtr(v *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefArgs) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
type ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef) *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef) ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor *string `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs and ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.StringPtrInput `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput).ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs, ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtr and ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs

func ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtr(v *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefArgs) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
type ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string { return v.Divisor }).(pulumi.StringPtrOutput)
}

// Required: resource to select
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) Divisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.StringPtrOutput)
}

// Required: resource to select
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs and ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs{...}
type ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput
}

// Selects a key of a secret in the pod's namespace
type ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput)
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput).ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs, ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtr and ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput
	ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput
}

type clusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs

func ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtr(v *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefArgs) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrInput {
	return (*clusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrType) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

// Selects a key of a secret in the pod's namespace
type ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) ToClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
type ClusterBuildStrategySpecBuildStepsLifecycle struct {
	// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PostStart *ClusterBuildStrategySpecBuildStepsLifecyclePostStart `pulumi:"postStart"`
	// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PreStop *ClusterBuildStrategySpecBuildStepsLifecyclePreStop `pulumi:"preStop"`
}

// ClusterBuildStrategySpecBuildStepsLifecycleInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecycleArgs and ClusterBuildStrategySpecBuildStepsLifecycleOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecycleInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecycleArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecycleInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecycleOutput() ClusterBuildStrategySpecBuildStepsLifecycleOutput
	ToClusterBuildStrategySpecBuildStepsLifecycleOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecycleOutput
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
type ClusterBuildStrategySpecBuildStepsLifecycleArgs struct {
	// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PostStart ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrInput `pulumi:"postStart"`
	// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
	PreStop ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrInput `pulumi:"preStop"`
}

func (ClusterBuildStrategySpecBuildStepsLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecycleArgs) ToClusterBuildStrategySpecBuildStepsLifecycleOutput() ClusterBuildStrategySpecBuildStepsLifecycleOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecycleOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecycleArgs) ToClusterBuildStrategySpecBuildStepsLifecycleOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecycleOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecycleArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecycleArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecycleOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecycleArgs, ClusterBuildStrategySpecBuildStepsLifecyclePtr and ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecycleArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePtrType ClusterBuildStrategySpecBuildStepsLifecycleArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePtr(v *ClusterBuildStrategySpecBuildStepsLifecycleArgs) ClusterBuildStrategySpecBuildStepsLifecyclePtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput)
}

// Actions that the management system should take in response to container lifecycle events. Cannot be updated.
type ClusterBuildStrategySpecBuildStepsLifecycleOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecycleOutput) ToClusterBuildStrategySpecBuildStepsLifecycleOutput() ClusterBuildStrategySpecBuildStepsLifecycleOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecycleOutput) ToClusterBuildStrategySpecBuildStepsLifecycleOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecycleOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecycleOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecycleOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecycle) *ClusterBuildStrategySpecBuildStepsLifecycle {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o ClusterBuildStrategySpecBuildStepsLifecycleOutput) PostStart() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecycle) *ClusterBuildStrategySpecBuildStepsLifecyclePostStart {
		return v.PostStart
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o ClusterBuildStrategySpecBuildStepsLifecycleOutput) PreStop() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecycle) *ClusterBuildStrategySpecBuildStepsLifecyclePreStop {
		return v.PreStop
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecycle)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecycleOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecycle) ClusterBuildStrategySpecBuildStepsLifecycle {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecycleOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput) PostStart() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecycle) *ClusterBuildStrategySpecBuildStepsLifecyclePostStart {
		if v == nil {
			return nil
		}
		return v.PostStart
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
func (o ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput) PreStop() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecycle) *ClusterBuildStrategySpecBuildStepsLifecyclePreStop {
		if v == nil {
			return nil
		}
		return v.PreStop
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type ClusterBuildStrategySpecBuildStepsLifecyclePostStart struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket `pulumi:"tcpSocket"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput `pulumi:"tcpSocket"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs, ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtr and ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePostStartPtrType ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartArgs) ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePostStartPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePostStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStart {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) Exec() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec {
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) HttpGet() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStart)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStart) ClusterBuildStrategySpecBuildStepsLifecyclePostStart {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) Exec() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) HttpGet() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStart) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs, ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtr and ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrType ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecArgs) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec) ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs, ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtr and ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetArgs) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) []ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) []ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray and ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray{ ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArgs{...} }
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray []ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersInput

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeaders)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort struct {
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs, ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtr and ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortArgs) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort) ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort `pulumi:"port"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput `pulumi:"port"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs, ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtr and ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketArgs) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocket) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort struct {
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs and ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs, ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtr and ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortArgs) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort) *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort) ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type ClusterBuildStrategySpecBuildStepsLifecyclePreStop struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket `pulumi:"tcpSocket"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput `pulumi:"httpGet"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput `pulumi:"tcpSocket"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs, ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtr and ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePreStopPtrType ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopArgs) ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePreStopPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePreStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStop {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) Exec() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec {
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) HttpGet() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStop)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStop) ClusterBuildStrategySpecBuildStepsLifecyclePreStop {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) Exec() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) HttpGet() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStop) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs, ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtr and ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrType ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecArgs) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec) ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs, ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtr and ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetArgs) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) []ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) []ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray and ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray{ ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArgs{...} }
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray []ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersInput

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeaders)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort struct {
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs, ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtr and ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortArgs) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort) ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort `pulumi:"port"`
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput `pulumi:"port"`
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs, ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtr and ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketArgs) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput) Port() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocket) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort struct {
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs and ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs{...}
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput).ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs, ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtr and ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs

func ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtr(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortArgs) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort) *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort) ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput)
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsLivenessProbe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *ClusterBuildStrategySpecBuildStepsLivenessProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeOutput
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsLivenessProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeOutput).ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbePtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeArgs, ClusterBuildStrategySpecBuildStepsLivenessProbePtr and ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbePtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLivenessProbePtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput
}

type clusterBuildStrategySpecBuildStepsLivenessProbePtrType ClusterBuildStrategySpecBuildStepsLivenessProbeArgs

func ClusterBuildStrategySpecBuildStepsLivenessProbePtr(v *ClusterBuildStrategySpecBuildStepsLivenessProbeArgs) ClusterBuildStrategySpecBuildStepsLivenessProbePtrInput {
	return (*clusterBuildStrategySpecBuildStepsLivenessProbePtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbePtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbePtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput)
}

// Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsLivenessProbeOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbe {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) Exec() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbeExec {
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) HttpGet() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet {
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbe)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLivenessProbeOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) ClusterBuildStrategySpecBuildStepsLivenessProbe {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) Exec() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) HttpGet() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLivenessProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeExecInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeExecInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeExecInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput).ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs, ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtr and ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput
}

type clusterBuildStrategySpecBuildStepsLivenessProbeExecPtrType ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs

func ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtr(v *ClusterBuildStrategySpecBuildStepsLivenessProbeExecArgs) ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLivenessProbeExecPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLivenessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeExecPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeExecPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeExec) *ClusterBuildStrategySpecBuildStepsLivenessProbeExec {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeExec) ClusterBuildStrategySpecBuildStepsLivenessProbeExec {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput).ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs, ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtr and ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput
}

type clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrType ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs

func ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtr(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetArgs) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) []ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Port() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) []ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Port() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray and ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray{ ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArgs{...} }
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray []ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersInput

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort struct {
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput).ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs, ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtr and ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs

func ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtr(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortArgs) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort) *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort) ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort `pulumi:"port"`
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput `pulumi:"port"`
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput).ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs, ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtr and ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput
}

type clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs

func ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtr(v *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketArgs) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket) *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput) Port() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput) Port() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocket) *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort struct {
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs and ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs{...}
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput).ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs, ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtr and ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs

func ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtr(v *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortArgs) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort) *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort) ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput)
}

// ContainerPort represents a network port in a single container.
type ClusterBuildStrategySpecBuildStepsPorts struct {
	// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
	ContainerPort int `pulumi:"containerPort"`
	// What host IP to bind the external port to.
	HostIP *string `pulumi:"hostIP"`
	// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
	HostPort *int `pulumi:"hostPort"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
	Name *string `pulumi:"name"`
	// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
	Protocol *string `pulumi:"protocol"`
}

// ClusterBuildStrategySpecBuildStepsPortsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsPortsArgs and ClusterBuildStrategySpecBuildStepsPortsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsPortsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsPortsArgs{...}
type ClusterBuildStrategySpecBuildStepsPortsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsPortsOutput() ClusterBuildStrategySpecBuildStepsPortsOutput
	ToClusterBuildStrategySpecBuildStepsPortsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsPortsOutput
}

// ContainerPort represents a network port in a single container.
type ClusterBuildStrategySpecBuildStepsPortsArgs struct {
	// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
	ContainerPort pulumi.IntInput `pulumi:"containerPort"`
	// What host IP to bind the external port to.
	HostIP pulumi.StringPtrInput `pulumi:"hostIP"`
	// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
	HostPort pulumi.IntPtrInput `pulumi:"hostPort"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ClusterBuildStrategySpecBuildStepsPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsPortsArgs) ToClusterBuildStrategySpecBuildStepsPortsOutput() ClusterBuildStrategySpecBuildStepsPortsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsPortsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsPortsArgs) ToClusterBuildStrategySpecBuildStepsPortsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsPortsOutput)
}

// ClusterBuildStrategySpecBuildStepsPortsArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsPortsArray and ClusterBuildStrategySpecBuildStepsPortsArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsPortsArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsPortsArray{ ClusterBuildStrategySpecBuildStepsPortsArgs{...} }
type ClusterBuildStrategySpecBuildStepsPortsArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsPortsArrayOutput() ClusterBuildStrategySpecBuildStepsPortsArrayOutput
	ToClusterBuildStrategySpecBuildStepsPortsArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsPortsArrayOutput
}

type ClusterBuildStrategySpecBuildStepsPortsArray []ClusterBuildStrategySpecBuildStepsPortsInput

func (ClusterBuildStrategySpecBuildStepsPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsPortsArray) ToClusterBuildStrategySpecBuildStepsPortsArrayOutput() ClusterBuildStrategySpecBuildStepsPortsArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsPortsArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsPortsArray) ToClusterBuildStrategySpecBuildStepsPortsArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsPortsArrayOutput)
}

// ContainerPort represents a network port in a single container.
type ClusterBuildStrategySpecBuildStepsPortsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsPortsOutput) ToClusterBuildStrategySpecBuildStepsPortsOutput() ClusterBuildStrategySpecBuildStepsPortsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsPortsOutput) ToClusterBuildStrategySpecBuildStepsPortsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsPortsOutput {
	return o
}

// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
func (o ClusterBuildStrategySpecBuildStepsPortsOutput) ContainerPort() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsPorts) int { return v.ContainerPort }).(pulumi.IntOutput)
}

// What host IP to bind the external port to.
func (o ClusterBuildStrategySpecBuildStepsPortsOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsPorts) *string { return v.HostIP }).(pulumi.StringPtrOutput)
}

// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
func (o ClusterBuildStrategySpecBuildStepsPortsOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsPorts) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
func (o ClusterBuildStrategySpecBuildStepsPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
func (o ClusterBuildStrategySpecBuildStepsPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsPortsArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsPorts)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsPortsArrayOutput) ToClusterBuildStrategySpecBuildStepsPortsArrayOutput() ClusterBuildStrategySpecBuildStepsPortsArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsPortsArrayOutput) ToClusterBuildStrategySpecBuildStepsPortsArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsPortsArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsPortsArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsPorts {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsPorts)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsPortsOutput)
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsReadinessProbe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *ClusterBuildStrategySpecBuildStepsReadinessProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeOutput
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsReadinessProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeOutput)
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeOutput).ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbePtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeArgs, ClusterBuildStrategySpecBuildStepsReadinessProbePtr and ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbePtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsReadinessProbePtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput
}

type clusterBuildStrategySpecBuildStepsReadinessProbePtrType ClusterBuildStrategySpecBuildStepsReadinessProbeArgs

func ClusterBuildStrategySpecBuildStepsReadinessProbePtr(v *ClusterBuildStrategySpecBuildStepsReadinessProbeArgs) ClusterBuildStrategySpecBuildStepsReadinessProbePtrInput {
	return (*clusterBuildStrategySpecBuildStepsReadinessProbePtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbePtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbePtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput)
}

// Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsReadinessProbeOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbe {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) Exec() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbeExec {
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) HttpGet() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet {
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbe)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) Elem() ClusterBuildStrategySpecBuildStepsReadinessProbeOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) ClusterBuildStrategySpecBuildStepsReadinessProbe {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) Exec() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) HttpGet() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsReadinessProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeExecInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeExecInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeExecInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput)
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput).ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs, ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtr and ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput
}

type clusterBuildStrategySpecBuildStepsReadinessProbeExecPtrType ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs

func ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtr(v *ClusterBuildStrategySpecBuildStepsReadinessProbeExecArgs) ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrInput {
	return (*clusterBuildStrategySpecBuildStepsReadinessProbeExecPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsReadinessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeExecPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeExecPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeExec) *ClusterBuildStrategySpecBuildStepsReadinessProbeExec {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeExec) ClusterBuildStrategySpecBuildStepsReadinessProbeExec {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput)
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput).ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs, ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtr and ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput
}

type clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrType ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs

func ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtr(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetArgs) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrInput {
	return (*clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) []ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Port() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) []ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Port() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray and ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray{ ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArgs{...} }
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray []ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersInput

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort struct {
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput).ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs, ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtr and ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs

func ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtr(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortArgs) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort) *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort) ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort `pulumi:"port"`
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput `pulumi:"port"`
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput)
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput).ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs, ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtr and ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput
}

type clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs

func ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtr(v *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketArgs) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrInput {
	return (*clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket) *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput) Port() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput) Port() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocket) *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort struct {
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs and ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs{...}
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput).ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs, ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtr and ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs

func ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtr(v *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortArgs) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort) *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort) ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput)
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResources struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests map[string]string `pulumi:"requests"`
}

// ClusterBuildStrategySpecBuildStepsResourcesInput is an input type that accepts ClusterBuildStrategySpecBuildStepsResourcesArgs and ClusterBuildStrategySpecBuildStepsResourcesOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsResourcesInput` via:
//
//          ClusterBuildStrategySpecBuildStepsResourcesArgs{...}
type ClusterBuildStrategySpecBuildStepsResourcesInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsResourcesOutput() ClusterBuildStrategySpecBuildStepsResourcesOutput
	ToClusterBuildStrategySpecBuildStepsResourcesOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsResourcesOutput
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (ClusterBuildStrategySpecBuildStepsResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsResourcesArgs) ToClusterBuildStrategySpecBuildStepsResourcesOutput() ClusterBuildStrategySpecBuildStepsResourcesOutput {
	return i.ToClusterBuildStrategySpecBuildStepsResourcesOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsResourcesArgs) ToClusterBuildStrategySpecBuildStepsResourcesOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsResourcesOutput)
}

func (i ClusterBuildStrategySpecBuildStepsResourcesArgs) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutput() ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsResourcesArgs) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsResourcesOutput).ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsResourcesPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsResourcesArgs, ClusterBuildStrategySpecBuildStepsResourcesPtr and ClusterBuildStrategySpecBuildStepsResourcesPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsResourcesPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsResourcesArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsResourcesPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsResourcesPtrOutput() ClusterBuildStrategySpecBuildStepsResourcesPtrOutput
	ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsResourcesPtrOutput
}

type clusterBuildStrategySpecBuildStepsResourcesPtrType ClusterBuildStrategySpecBuildStepsResourcesArgs

func ClusterBuildStrategySpecBuildStepsResourcesPtr(v *ClusterBuildStrategySpecBuildStepsResourcesArgs) ClusterBuildStrategySpecBuildStepsResourcesPtrInput {
	return (*clusterBuildStrategySpecBuildStepsResourcesPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsResourcesPtrType) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutput() ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsResourcesPtrType) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsResourcesPtrOutput)
}

// Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsResourcesOutput) ToClusterBuildStrategySpecBuildStepsResourcesOutput() ClusterBuildStrategySpecBuildStepsResourcesOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsResourcesOutput) ToClusterBuildStrategySpecBuildStepsResourcesOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsResourcesOutput) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutput() ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsResourcesOutput) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsResources) *ClusterBuildStrategySpecBuildStepsResources {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ClusterBuildStrategySpecBuildStepsResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ClusterBuildStrategySpecBuildStepsResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type ClusterBuildStrategySpecBuildStepsResourcesPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsResources)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsResourcesPtrOutput) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutput() ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsResourcesPtrOutput) ToClusterBuildStrategySpecBuildStepsResourcesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsResourcesPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsResourcesOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsResources) ClusterBuildStrategySpecBuildStepsResources {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ClusterBuildStrategySpecBuildStepsResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ClusterBuildStrategySpecBuildStepsResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesLimits struct {
}

// ClusterBuildStrategySpecBuildStepsResourcesLimitsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsResourcesLimitsArgs and ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsResourcesLimitsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsResourcesLimitsArgs{...}
type ClusterBuildStrategySpecBuildStepsResourcesLimitsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutput() ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput
	ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesLimitsArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsResourcesLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsResourcesLimits)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsResourcesLimitsArgs) ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutput() ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsResourcesLimitsArgs) ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsResourcesLimits)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput) ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutput() ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput) ToClusterBuildStrategySpecBuildStepsResourcesLimitsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput {
	return o
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesRequests struct {
}

// ClusterBuildStrategySpecBuildStepsResourcesRequestsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsResourcesRequestsArgs and ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsResourcesRequestsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsResourcesRequestsArgs{...}
type ClusterBuildStrategySpecBuildStepsResourcesRequestsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutput() ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput
	ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesRequestsArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsResourcesRequestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsResourcesRequests)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsResourcesRequestsArgs) ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutput() ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsResourcesRequestsArgs) ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
type ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsResourcesRequests)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput) ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutput() ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput) ToClusterBuildStrategySpecBuildStepsResourcesRequestsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput {
	return o
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type ClusterBuildStrategySpecBuildStepsSecurityContext struct {
	// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
	AllowPrivilegeEscalation *bool `pulumi:"allowPrivilegeEscalation"`
	// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
	Capabilities *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities `pulumi:"capabilities"`
	// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
	Privileged *bool `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
	ProcMount *string `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem. Default is false.
	ReadOnlyRootFilesystem *bool `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUser *int `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	SeLinuxOptions *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions `pulumi:"seLinuxOptions"`
	// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	WindowsOptions *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions `pulumi:"windowsOptions"`
}

// ClusterBuildStrategySpecBuildStepsSecurityContextInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextArgs and ClusterBuildStrategySpecBuildStepsSecurityContextOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextArgs{...}
type ClusterBuildStrategySpecBuildStepsSecurityContextInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextOutput() ClusterBuildStrategySpecBuildStepsSecurityContextOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextOutput
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type ClusterBuildStrategySpecBuildStepsSecurityContextArgs struct {
	// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
	AllowPrivilegeEscalation pulumi.BoolPtrInput `pulumi:"allowPrivilegeEscalation"`
	// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
	Capabilities ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput `pulumi:"capabilities"`
	// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
	ProcMount pulumi.StringPtrInput `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem. Default is false.
	ReadOnlyRootFilesystem pulumi.BoolPtrInput `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUser pulumi.IntPtrInput `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	SeLinuxOptions ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput `pulumi:"seLinuxOptions"`
	// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	WindowsOptions ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput `pulumi:"windowsOptions"`
}

func (ClusterBuildStrategySpecBuildStepsSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextOutput() ClusterBuildStrategySpecBuildStepsSecurityContextOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextOutput)
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextOutput).ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsSecurityContextPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextArgs, ClusterBuildStrategySpecBuildStepsSecurityContextPtr and ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsSecurityContextPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput
}

type clusterBuildStrategySpecBuildStepsSecurityContextPtrType ClusterBuildStrategySpecBuildStepsSecurityContextArgs

func ClusterBuildStrategySpecBuildStepsSecurityContextPtr(v *ClusterBuildStrategySpecBuildStepsSecurityContextArgs) ClusterBuildStrategySpecBuildStepsSecurityContextPtrInput {
	return (*clusterBuildStrategySpecBuildStepsSecurityContextPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput)
}

// Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type ClusterBuildStrategySpecBuildStepsSecurityContextOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextOutput() ClusterBuildStrategySpecBuildStepsSecurityContextOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContext {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *bool { return v.AllowPrivilegeEscalation }).(pulumi.BoolPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) Capabilities() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities {
		return v.Capabilities
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *string { return v.ProcMount }).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem. Default is false.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *bool { return v.ReadOnlyRootFilesystem }).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) SeLinuxOptions() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextOutput) WindowsOptions() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContext)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsSecurityContextOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) ClusterBuildStrategySpecBuildStepsSecurityContext {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) Capabilities() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.ProcMount
	}).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem. Default is false.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) SeLinuxOptions() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput) WindowsOptions() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContext) *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities struct {
	// Added capabilities
	Add []string `pulumi:"add"`
	// Removed capabilities
	Drop []string `pulumi:"drop"`
}

// ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs and ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs{...}
type ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs struct {
	// Added capabilities
	Add pulumi.StringArrayInput `pulumi:"add"`
	// Removed capabilities
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput)
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput).ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs, ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtr and ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput
}

type clusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs

func ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtr(v *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesArgs) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrInput {
	return (*clusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
type ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities) *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput)
}

// Added capabilities
func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities) []string { return v.Add }).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities) []string { return v.Drop }).(pulumi.StringArrayOutput)
}

type ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities) ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput)
}

// Added capabilities
func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs and ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs{...}
type ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput)
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput).ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs, ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtr and ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput
}

type clusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs

func ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtr(v *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsArgs) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrInput {
	return (*clusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput)
}

// Level is SELinux level label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpec *string `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
	RunAsUserName *string `pulumi:"runAsUserName"`
}

// ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs and ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs{...}
type ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpec pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
	RunAsUserName pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput)
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput).ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs, ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtr and ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput
	ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput
}

type clusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs

func ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtr(v *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsArgs) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrInput {
	return (*clusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrType) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

// The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
type ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) ToClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is alpha-level and it is only honored by servers that enable the WindowsRunAsUserName feature flag.
func (o ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsStartupProbe struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec *ClusterBuildStrategySpecBuildStepsStartupProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ClusterBuildStrategySpecBuildStepsStartupProbeInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeArgs and ClusterBuildStrategySpecBuildStepsStartupProbeOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeOutput() ClusterBuildStrategySpecBuildStepsStartupProbeOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeOutput
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsStartupProbeArgs struct {
	// One and only one of the following should be specified. Exec specifies the action to take.
	Exec ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet specifies the http request to perform.
	HttpGet ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
	TcpSocket ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeOutput() ClusterBuildStrategySpecBuildStepsStartupProbeOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeOutput)
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeArgs) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeArgs) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeOutput).ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsStartupProbePtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeArgs, ClusterBuildStrategySpecBuildStepsStartupProbePtr and ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbePtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsStartupProbePtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput
}

type clusterBuildStrategySpecBuildStepsStartupProbePtrType ClusterBuildStrategySpecBuildStepsStartupProbeArgs

func ClusterBuildStrategySpecBuildStepsStartupProbePtr(v *ClusterBuildStrategySpecBuildStepsStartupProbeArgs) ClusterBuildStrategySpecBuildStepsStartupProbePtrInput {
	return (*clusterBuildStrategySpecBuildStepsStartupProbePtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsStartupProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbePtrType) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbePtrType) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type ClusterBuildStrategySpecBuildStepsStartupProbeOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeOutput() ClusterBuildStrategySpecBuildStepsStartupProbeOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbe {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) Exec() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbeExec {
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) HttpGet() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet {
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket {
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsStartupProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbe)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbePtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) Elem() ClusterBuildStrategySpecBuildStepsStartupProbeOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) ClusterBuildStrategySpecBuildStepsStartupProbe {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) Exec() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) HttpGet() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) TcpSocket() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsStartupProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// ClusterBuildStrategySpecBuildStepsStartupProbeExecInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs and ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeExecInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeExecInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput)
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput).ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs, ClusterBuildStrategySpecBuildStepsStartupProbeExecPtr and ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput
}

type clusterBuildStrategySpecBuildStepsStartupProbeExecPtrType ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs

func ClusterBuildStrategySpecBuildStepsStartupProbeExecPtr(v *ClusterBuildStrategySpecBuildStepsStartupProbeExecArgs) ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrInput {
	return (*clusterBuildStrategySpecBuildStepsStartupProbeExecPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsStartupProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeExecPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeExecPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// One and only one of the following should be specified. Exec specifies the action to take.
type ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeExecOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeExec) *ClusterBuildStrategySpecBuildStepsStartupProbeExec {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeExec)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeExec) ClusterBuildStrategySpecBuildStepsStartupProbeExec {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs and ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput)
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput).ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs, ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtr and ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput
}

type clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrType ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs

func ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtr(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetArgs) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrInput {
	return (*clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) []ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Port() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) HttpHeaders() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) []ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Port() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput)
}

// Scheme to use for connecting to the host. Defaults to HTTP.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders struct {
	// The header field name
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs and ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs struct {
	// The header field name
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput)
}

// ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray and ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray{ ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArgs{...} }
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray []ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersInput

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArray) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort struct {
}

// ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs and ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput).ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs, ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtr and ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs

func ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtr(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortArgs) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort) *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort) ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort `pulumi:"port"`
}

// ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs and ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	Port ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput `pulumi:"port"`
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput)
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput).ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs, ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtr and ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput
}

type clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrType ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs

func ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtr(v *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketArgs) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrInput {
	return (*clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket) *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput) Port() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		return v.Port
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput) Port() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocket) *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort struct {
}

// ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs and ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs{...}
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput
}

type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs struct {
}

func (ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput)
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput).ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx)
}

// ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput is an input type that accepts ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs, ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtr and ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput` via:
//
//          ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs{...}
//
//  or:
//
//          nil
type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput
	ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput
}

type clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs

func ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtr(v *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortArgs) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrInput {
	return (*clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType)(v)
}

func (*clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return i.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (i *clusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrType) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o.ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(context.Background())
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort) *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		return &v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) ToClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput) Elem() ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput {
	return o.ApplyT(func(v *ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort) ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPort {
		return *v
	}).(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput)
}

// volumeDevice describes a mapping of a raw block device within a container.
type ClusterBuildStrategySpecBuildStepsVolumeDevices struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath string `pulumi:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name string `pulumi:"name"`
}

// ClusterBuildStrategySpecBuildStepsVolumeDevicesInput is an input type that accepts ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs and ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsVolumeDevicesInput` via:
//
//          ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs{...}
type ClusterBuildStrategySpecBuildStepsVolumeDevicesInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutput() ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput
	ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput
}

// volumeDevice describes a mapping of a raw block device within a container.
type ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath pulumi.StringInput `pulumi:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs) ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutput() ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput {
	return i.ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs) ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput)
}

// ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsVolumeDevicesArray and ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsVolumeDevicesArray{ ClusterBuildStrategySpecBuildStepsVolumeDevicesArgs{...} }
type ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput() ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput
	ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput
}

type ClusterBuildStrategySpecBuildStepsVolumeDevicesArray []ClusterBuildStrategySpecBuildStepsVolumeDevicesInput

func (ClusterBuildStrategySpecBuildStepsVolumeDevicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsVolumeDevicesArray) ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput() ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsVolumeDevicesArray) ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput)
}

// volumeDevice describes a mapping of a raw block device within a container.
type ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput) ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutput() ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput) ToClusterBuildStrategySpecBuildStepsVolumeDevicesOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput {
	return o
}

// devicePath is the path inside of the container that the device will be mapped to.
func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput) DevicePath() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeDevices) string { return v.DevicePath }).(pulumi.StringOutput)
}

// name must match the name of a persistentVolumeClaim in the pod
func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeDevices) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsVolumeDevices)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput) ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput() ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput) ToClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsVolumeDevices {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsVolumeDevices)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type ClusterBuildStrategySpecBuildStepsVolumeMounts struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// ClusterBuildStrategySpecBuildStepsVolumeMountsInput is an input type that accepts ClusterBuildStrategySpecBuildStepsVolumeMountsArgs and ClusterBuildStrategySpecBuildStepsVolumeMountsOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsVolumeMountsInput` via:
//
//          ClusterBuildStrategySpecBuildStepsVolumeMountsArgs{...}
type ClusterBuildStrategySpecBuildStepsVolumeMountsInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsVolumeMountsOutput() ClusterBuildStrategySpecBuildStepsVolumeMountsOutput
	ToClusterBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsVolumeMountsOutput
}

// VolumeMount describes a mounting of a Volume within a container.
type ClusterBuildStrategySpecBuildStepsVolumeMountsArgs struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (ClusterBuildStrategySpecBuildStepsVolumeMountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsVolumeMountsArgs) ToClusterBuildStrategySpecBuildStepsVolumeMountsOutput() ClusterBuildStrategySpecBuildStepsVolumeMountsOutput {
	return i.ToClusterBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsVolumeMountsArgs) ToClusterBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeMountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsVolumeMountsOutput)
}

// ClusterBuildStrategySpecBuildStepsVolumeMountsArrayInput is an input type that accepts ClusterBuildStrategySpecBuildStepsVolumeMountsArray and ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput values.
// You can construct a concrete instance of `ClusterBuildStrategySpecBuildStepsVolumeMountsArrayInput` via:
//
//          ClusterBuildStrategySpecBuildStepsVolumeMountsArray{ ClusterBuildStrategySpecBuildStepsVolumeMountsArgs{...} }
type ClusterBuildStrategySpecBuildStepsVolumeMountsArrayInput interface {
	pulumi.Input

	ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput() ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput
	ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(context.Context) ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput
}

type ClusterBuildStrategySpecBuildStepsVolumeMountsArray []ClusterBuildStrategySpecBuildStepsVolumeMountsInput

func (ClusterBuildStrategySpecBuildStepsVolumeMountsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (i ClusterBuildStrategySpecBuildStepsVolumeMountsArray) ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput() ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return i.ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(context.Background())
}

func (i ClusterBuildStrategySpecBuildStepsVolumeMountsArray) ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type ClusterBuildStrategySpecBuildStepsVolumeMountsOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) ToClusterBuildStrategySpecBuildStepsVolumeMountsOutput() ClusterBuildStrategySpecBuildStepsVolumeMountsOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) ToClusterBuildStrategySpecBuildStepsVolumeMountsOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeMountsOutput {
	return o
}

// Path within the container at which the volume should be mounted.  Must not contain ':'.
func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeMounts) string { return v.MountPath }).(pulumi.StringOutput)
}

// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeMounts) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeMounts) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeMounts) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeMounts) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
func (o ClusterBuildStrategySpecBuildStepsVolumeMountsOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBuildStrategySpecBuildStepsVolumeMounts) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBuildStrategySpecBuildStepsVolumeMounts)(nil)).Elem()
}

func (o ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput) ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput() ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput) ToClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutputWithContext(ctx context.Context) ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput {
	return o
}

func (o ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput) Index(i pulumi.IntInput) ClusterBuildStrategySpecBuildStepsVolumeMountsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBuildStrategySpecBuildStepsVolumeMounts {
		return vs[0].([]ClusterBuildStrategySpecBuildStepsVolumeMounts)[vs[1].(int)]
	}).(ClusterBuildStrategySpecBuildStepsVolumeMountsOutput)
}

// BuildStrategyStatus defines the observed state of BuildStrategy
type ClusterBuildStrategyStatus struct {
}

// ClusterBuildStrategyStatusInput is an input type that accepts ClusterBuildStrategyStatusArgs and ClusterBuildStrategyStatusOutput values.
// You can construct a concrete instance of `ClusterBuildStrategyStatusInput` via:
//
//          ClusterBuildStrategyStatusArgs{...}
type ClusterBuildStrategyStatusInput interface {
	pulumi.Input

	ToClusterBuildStrategyStatusOutput() ClusterBuildStrategyStatusOutput
	ToClusterBuildStrategyStatusOutputWithContext(context.Context) ClusterBuildStrategyStatusOutput
}

// BuildStrategyStatus defines the observed state of BuildStrategy
type ClusterBuildStrategyStatusArgs struct {
}

func (ClusterBuildStrategyStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategyStatus)(nil)).Elem()
}

func (i ClusterBuildStrategyStatusArgs) ToClusterBuildStrategyStatusOutput() ClusterBuildStrategyStatusOutput {
	return i.ToClusterBuildStrategyStatusOutputWithContext(context.Background())
}

func (i ClusterBuildStrategyStatusArgs) ToClusterBuildStrategyStatusOutputWithContext(ctx context.Context) ClusterBuildStrategyStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBuildStrategyStatusOutput)
}

// BuildStrategyStatus defines the observed state of BuildStrategy
type ClusterBuildStrategyStatusOutput struct{ *pulumi.OutputState }

func (ClusterBuildStrategyStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBuildStrategyStatus)(nil)).Elem()
}

func (o ClusterBuildStrategyStatusOutput) ToClusterBuildStrategyStatusOutput() ClusterBuildStrategyStatusOutput {
	return o
}

func (o ClusterBuildStrategyStatusOutput) ToClusterBuildStrategyStatusOutputWithContext(ctx context.Context) ClusterBuildStrategyStatusOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BuildTypeOutput{})
	pulumi.RegisterOutputType(BuildMetadataOutput{})
	pulumi.RegisterOutputType(BuildRunTypeOutput{})
	pulumi.RegisterOutputType(BuildRunMetadataOutput{})
	pulumi.RegisterOutputType(BuildRunSpecOutput{})
	pulumi.RegisterOutputType(BuildRunSpecPtrOutput{})
	pulumi.RegisterOutputType(BuildRunSpecBuildRefOutput{})
	pulumi.RegisterOutputType(BuildRunSpecBuildRefPtrOutput{})
	pulumi.RegisterOutputType(BuildRunSpecResourcesOutput{})
	pulumi.RegisterOutputType(BuildRunSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(BuildRunSpecResourcesLimitsOutput{})
	pulumi.RegisterOutputType(BuildRunSpecResourcesRequestsOutput{})
	pulumi.RegisterOutputType(BuildRunStatusOutput{})
	pulumi.RegisterOutputType(BuildRunStatusPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecOutput{})
	pulumi.RegisterOutputType(BuildSpecPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecBuilderOutput{})
	pulumi.RegisterOutputType(BuildSpecBuilderPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecBuilderCredentialsOutput{})
	pulumi.RegisterOutputType(BuildSpecBuilderCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecOutputOutput{})
	pulumi.RegisterOutputType(BuildSpecOutputPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecOutputCredentialsOutput{})
	pulumi.RegisterOutputType(BuildSpecOutputCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecParametersOutput{})
	pulumi.RegisterOutputType(BuildSpecParametersArrayOutput{})
	pulumi.RegisterOutputType(BuildSpecResourcesOutput{})
	pulumi.RegisterOutputType(BuildSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecResourcesLimitsOutput{})
	pulumi.RegisterOutputType(BuildSpecResourcesRequestsOutput{})
	pulumi.RegisterOutputType(BuildSpecSourceOutput{})
	pulumi.RegisterOutputType(BuildSpecSourcePtrOutput{})
	pulumi.RegisterOutputType(BuildSpecSourceCredentialsOutput{})
	pulumi.RegisterOutputType(BuildSpecSourceCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BuildSpecStrategyOutput{})
	pulumi.RegisterOutputType(BuildSpecStrategyPtrOutput{})
	pulumi.RegisterOutputType(BuildStatusOutput{})
	pulumi.RegisterOutputType(BuildStrategyTypeOutput{})
	pulumi.RegisterOutputType(BuildStrategyMetadataOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvFromOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvFromArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvFromConfigMapRefOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvFromSecretRefOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecycleOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartExecOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopExecOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeExecOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsPortsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsPortsArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeExecOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsResourcesOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsResourcesPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsResourcesLimitsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsResourcesRequestsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbePtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeExecOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeExecPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeHttpGetOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsVolumeDevicesOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsVolumeDevicesArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsVolumeMountsOutput{})
	pulumi.RegisterOutputType(BuildStrategySpecBuildStepsVolumeMountsArrayOutput{})
	pulumi.RegisterOutputType(BuildStrategyStatusOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategyTypeOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategyMetadataOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvFromOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvFromArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvFromConfigMapRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvFromSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromConfigMapKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromFieldRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsEnvValueFromSecretKeyRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecycleOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartExecPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePostStartTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopExecPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLifecyclePreStopTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeExecOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsLivenessProbeTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsPortsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsPortsArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeExecOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsReadinessProbeTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsResourcesOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsResourcesPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsResourcesLimitsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsResourcesRequestsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbePtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeExecOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeExecPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeHttpGetPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsStartupProbeTcpSocketPortPtrOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsVolumeDevicesOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsVolumeDevicesArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsVolumeMountsOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategySpecBuildStepsVolumeMountsArrayOutput{})
	pulumi.RegisterOutputType(ClusterBuildStrategyStatusOutput{})
}
