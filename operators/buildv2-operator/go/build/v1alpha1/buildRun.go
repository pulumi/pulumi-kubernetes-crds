// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// BuildRun is the Schema representing an instance of build execution
type BuildRun struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// BuildRunSpec defines the desired state of BuildRun
	Spec BuildRunSpecPtrOutput `pulumi:"spec"`
	// BuildRunStatus defines the observed state of BuildRun
	Status BuildRunStatusPtrOutput `pulumi:"status"`
}

// NewBuildRun registers a new resource with the given unique name, arguments, and options.
func NewBuildRun(ctx *pulumi.Context,
	name string, args *BuildRunArgs, opts ...pulumi.ResourceOption) (*BuildRun, error) {
	if args == nil {
		args = &BuildRunArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("build.dev/v1alpha1")
	args.Kind = pulumi.StringPtr("BuildRun")
	var resource BuildRun
	err := ctx.RegisterResource("kubernetes:build.dev/v1alpha1:BuildRun", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBuildRun gets an existing BuildRun resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBuildRun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BuildRunState, opts ...pulumi.ResourceOption) (*BuildRun, error) {
	var resource BuildRun
	err := ctx.ReadResource("kubernetes:build.dev/v1alpha1:BuildRun", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BuildRun resources.
type buildRunState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildRunSpec defines the desired state of BuildRun
	Spec *BuildRunSpec `pulumi:"spec"`
	// BuildRunStatus defines the observed state of BuildRun
	Status *BuildRunStatus `pulumi:"status"`
}

type BuildRunState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// BuildRunSpec defines the desired state of BuildRun
	Spec BuildRunSpecPtrInput
	// BuildRunStatus defines the observed state of BuildRun
	Status BuildRunStatusPtrInput
}

func (BuildRunState) ElementType() reflect.Type {
	return reflect.TypeOf((*buildRunState)(nil)).Elem()
}

type buildRunArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BuildRunSpec defines the desired state of BuildRun
	Spec *BuildRunSpec `pulumi:"spec"`
	// BuildRunStatus defines the observed state of BuildRun
	Status *BuildRunStatus `pulumi:"status"`
}

// The set of arguments for constructing a BuildRun resource.
type BuildRunArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// BuildRunSpec defines the desired state of BuildRun
	Spec BuildRunSpecPtrInput
	// BuildRunStatus defines the observed state of BuildRun
	Status BuildRunStatusPtrInput
}

func (BuildRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*buildRunArgs)(nil)).Elem()
}
