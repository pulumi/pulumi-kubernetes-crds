// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1
{

    [OutputType]
    public sealed class DatadogAgentSpecClusterAgentConfig
    {
        /// <summary>
        /// Configure the Admission Controller
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigAdmissionController AdmissionController;
        /// <summary>
        /// Enable the Cluster Checks and Endpoint Checks feature on both the cluster-agents and the daemonset ref: https://docs.datadoghq.com/agent/cluster_agent/clusterchecks/ https://docs.datadoghq.com/agent/cluster_agent/endpointschecks/ Autodiscovery via Kube Service annotations is automatically enabled
        /// </summary>
        public readonly bool ClusterChecksEnabled;
        /// <summary>
        /// Confd Provide additional cluster check configurations. Each key will become a file in /conf.d see https://docs.datadoghq.com/agent/autodiscovery/ for more details.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigConfd Confd;
        /// <summary>
        /// The Datadog Agent supports many environment variables Ref: https://docs.datadoghq.com/agent/docker/?tab=standard#environment-variables
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigEnv> Env;
        /// <summary>
        /// ExternalMetricsConfig contains the configuration of the external metrics provider in Cluster Agent
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigExternalMetrics ExternalMetrics;
        /// <summary>
        /// Set logging verbosity, valid log levels are: trace, debug, info, warn, error, critical, and off
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// Datadog cluster-agent resource requests and limits
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigResources Resources;
        /// <summary>
        /// Specify additional volume mounts in the Datadog Cluster Agent container
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigVolumeMounts> VolumeMounts;
        /// <summary>
        /// Specify additional volumes in the Datadog Cluster Agent container
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigVolumes> Volumes;

        [OutputConstructor]
        private DatadogAgentSpecClusterAgentConfig(
            Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigAdmissionController admissionController,

            bool clusterChecksEnabled,

            Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigConfd confd,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigEnv> env,

            Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigExternalMetrics externalMetrics,

            string logLevel,

            Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigResources resources,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigVolumeMounts> volumeMounts,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentConfigVolumes> volumes)
        {
            AdmissionController = admissionController;
            ClusterChecksEnabled = clusterChecksEnabled;
            Confd = confd;
            Env = env;
            ExternalMetrics = externalMetrics;
            LogLevel = logLevel;
            Resources = resources;
            VolumeMounts = volumeMounts;
            Volumes = volumes;
        }
    }
}
