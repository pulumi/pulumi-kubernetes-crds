// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Datadoghq.V1Alpha1
{

    /// <summary>
    /// DatadogAgentSpec defines the desired state of DatadogAgent
    /// </summary>
    public class DatadogAgentSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The desired state of the Agent as an extended daemonset Contains the Node Agent configuration and deployment strategy
        /// </summary>
        [Input("agent")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Datadoghq.V1Alpha1.DatadogAgentSpecAgentArgs>? Agent { get; set; }

        /// <summary>
        /// The desired state of the Cluster Agent as a deployment
        /// </summary>
        [Input("clusterAgent")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterAgentArgs>? ClusterAgent { get; set; }

        /// <summary>
        /// The desired state of the Cluster Checks Runner as a deployment
        /// </summary>
        [Input("clusterChecksRunner")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Datadoghq.V1Alpha1.DatadogAgentSpecClusterChecksRunnerArgs>? ClusterChecksRunner { get; set; }

        /// <summary>
        /// Set a unique cluster name to allow scoping hosts and Cluster Checks Runner easily
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Configure the credentials required to run Agents
        /// </summary>
        [Input("credentials", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Datadoghq.V1Alpha1.DatadogAgentSpecCredentialsArgs> Credentials { get; set; } = null!;

        /// <summary>
        /// The site of the Datadog intake to send Agent data to. Set to 'datadoghq.eu' to send data to the EU site.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        public DatadogAgentSpecArgs()
        {
        }
    }
}
