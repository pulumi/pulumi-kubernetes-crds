// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SnykMonitorType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       interface{}        `pulumi:"spec"`
}

// SnykMonitorTypeInput is an input type that accepts SnykMonitorTypeArgs and SnykMonitorTypeOutput values.
// You can construct a concrete instance of `SnykMonitorTypeInput` via:
//
//          SnykMonitorTypeArgs{...}
type SnykMonitorTypeInput interface {
	pulumi.Input

	ToSnykMonitorTypeOutput() SnykMonitorTypeOutput
	ToSnykMonitorTypeOutputWithContext(context.Context) SnykMonitorTypeOutput
}

type SnykMonitorTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       pulumi.Input              `pulumi:"spec"`
}

func (SnykMonitorTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnykMonitorType)(nil)).Elem()
}

func (i SnykMonitorTypeArgs) ToSnykMonitorTypeOutput() SnykMonitorTypeOutput {
	return i.ToSnykMonitorTypeOutputWithContext(context.Background())
}

func (i SnykMonitorTypeArgs) ToSnykMonitorTypeOutputWithContext(ctx context.Context) SnykMonitorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnykMonitorTypeOutput)
}

type SnykMonitorTypeOutput struct{ *pulumi.OutputState }

func (SnykMonitorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnykMonitorType)(nil)).Elem()
}

func (o SnykMonitorTypeOutput) ToSnykMonitorTypeOutput() SnykMonitorTypeOutput {
	return o
}

func (o SnykMonitorTypeOutput) ToSnykMonitorTypeOutputWithContext(ctx context.Context) SnykMonitorTypeOutput {
	return o
}

func (o SnykMonitorTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnykMonitorType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o SnykMonitorTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnykMonitorType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o SnykMonitorTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SnykMonitorType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o SnykMonitorTypeOutput) Spec() pulumi.AnyOutput {
	return o.ApplyT(func(v SnykMonitorType) interface{} { return v.Spec }).(pulumi.AnyOutput)
}

type SnykMonitorMetadata struct {
}

// SnykMonitorMetadataInput is an input type that accepts SnykMonitorMetadataArgs and SnykMonitorMetadataOutput values.
// You can construct a concrete instance of `SnykMonitorMetadataInput` via:
//
//          SnykMonitorMetadataArgs{...}
type SnykMonitorMetadataInput interface {
	pulumi.Input

	ToSnykMonitorMetadataOutput() SnykMonitorMetadataOutput
	ToSnykMonitorMetadataOutputWithContext(context.Context) SnykMonitorMetadataOutput
}

type SnykMonitorMetadataArgs struct {
}

func (SnykMonitorMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnykMonitorMetadata)(nil)).Elem()
}

func (i SnykMonitorMetadataArgs) ToSnykMonitorMetadataOutput() SnykMonitorMetadataOutput {
	return i.ToSnykMonitorMetadataOutputWithContext(context.Background())
}

func (i SnykMonitorMetadataArgs) ToSnykMonitorMetadataOutputWithContext(ctx context.Context) SnykMonitorMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnykMonitorMetadataOutput)
}

type SnykMonitorMetadataOutput struct{ *pulumi.OutputState }

func (SnykMonitorMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnykMonitorMetadata)(nil)).Elem()
}

func (o SnykMonitorMetadataOutput) ToSnykMonitorMetadataOutput() SnykMonitorMetadataOutput {
	return o
}

func (o SnykMonitorMetadataOutput) ToSnykMonitorMetadataOutputWithContext(ctx context.Context) SnykMonitorMetadataOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SnykMonitorTypeOutput{})
	pulumi.RegisterOutputType(SnykMonitorMetadataOutput{})
}
