// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SnapshotSchedule is the Schema for the snapshotschedules API
type SnapshotSchedule struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// SnapshotScheduleSpec defines the desired state of SnapshotSchedule
	Spec SnapshotScheduleSpecPtrOutput `pulumi:"spec"`
	// SnapshotScheduleStatus defines the observed state of SnapshotSchedule
	Status SnapshotScheduleStatusPtrOutput `pulumi:"status"`
}

// NewSnapshotSchedule registers a new resource with the given unique name, arguments, and options.
func NewSnapshotSchedule(ctx *pulumi.Context,
	name string, args *SnapshotScheduleArgs, opts ...pulumi.ResourceOption) (*SnapshotSchedule, error) {
	if args == nil {
		args = &SnapshotScheduleArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("snapscheduler.backube/v1")
	args.Kind = pulumi.StringPtr("SnapshotSchedule")
	var resource SnapshotSchedule
	err := ctx.RegisterResource("kubernetes:snapscheduler.backube/v1:SnapshotSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotSchedule gets an existing SnapshotSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotScheduleState, opts ...pulumi.ResourceOption) (*SnapshotSchedule, error) {
	var resource SnapshotSchedule
	err := ctx.ReadResource("kubernetes:snapscheduler.backube/v1:SnapshotSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotSchedule resources.
type snapshotScheduleState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SnapshotScheduleSpec defines the desired state of SnapshotSchedule
	Spec *SnapshotScheduleSpec `pulumi:"spec"`
	// SnapshotScheduleStatus defines the observed state of SnapshotSchedule
	Status *SnapshotScheduleStatus `pulumi:"status"`
}

type SnapshotScheduleState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SnapshotScheduleSpec defines the desired state of SnapshotSchedule
	Spec SnapshotScheduleSpecPtrInput
	// SnapshotScheduleStatus defines the observed state of SnapshotSchedule
	Status SnapshotScheduleStatusPtrInput
}

func (SnapshotScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotScheduleState)(nil)).Elem()
}

type snapshotScheduleArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SnapshotScheduleSpec defines the desired state of SnapshotSchedule
	Spec *SnapshotScheduleSpec `pulumi:"spec"`
	// SnapshotScheduleStatus defines the observed state of SnapshotSchedule
	Status *SnapshotScheduleStatus `pulumi:"status"`
}

// The set of arguments for constructing a SnapshotSchedule resource.
type SnapshotScheduleArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SnapshotScheduleSpec defines the desired state of SnapshotSchedule
	Spec SnapshotScheduleSpecPtrInput
	// SnapshotScheduleStatus defines the observed state of SnapshotSchedule
	Status SnapshotScheduleStatusPtrInput
}

func (SnapshotScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotScheduleArgs)(nil)).Elem()
}
