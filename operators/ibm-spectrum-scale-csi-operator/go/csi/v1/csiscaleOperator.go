// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CSIScaleOperator struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets pulumi.StringArrayOutput        `pulumi:"imagePullSecrets"`
	Kind             pulumi.StringPtrOutput          `pulumi:"kind"`
	Metadata         metav1.ObjectMetaPtrOutput      `pulumi:"metadata"`
	Spec             CSIScaleOperatorSpecPtrOutput   `pulumi:"spec"`
	Status           CSIScaleOperatorStatusPtrOutput `pulumi:"status"`
}

// NewCSIScaleOperator registers a new resource with the given unique name, arguments, and options.
func NewCSIScaleOperator(ctx *pulumi.Context,
	name string, args *CSIScaleOperatorArgs, opts ...pulumi.ResourceOption) (*CSIScaleOperator, error) {
	if args == nil {
		args = &CSIScaleOperatorArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("csi.ibm.com/v1")
	args.Kind = pulumi.StringPtr("CSIScaleOperator")
	var resource CSIScaleOperator
	err := ctx.RegisterResource("kubernetes:csi.ibm.com/v1:CSIScaleOperator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCSIScaleOperator gets an existing CSIScaleOperator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCSIScaleOperator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CSIScaleOperatorState, opts ...pulumi.ResourceOption) (*CSIScaleOperator, error) {
	var resource CSIScaleOperator
	err := ctx.ReadResource("kubernetes:csi.ibm.com/v1:CSIScaleOperator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CSIScaleOperator resources.
type csiscaleOperatorState struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets []string                `pulumi:"imagePullSecrets"`
	Kind             *string                 `pulumi:"kind"`
	Metadata         *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec             *CSIScaleOperatorSpec   `pulumi:"spec"`
	Status           *CSIScaleOperatorStatus `pulumi:"status"`
}

type CSIScaleOperatorState struct {
	ApiVersion pulumi.StringPtrInput
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets pulumi.StringArrayInput
	Kind             pulumi.StringPtrInput
	Metadata         metav1.ObjectMetaPtrInput
	Spec             CSIScaleOperatorSpecPtrInput
	Status           CSIScaleOperatorStatusPtrInput
}

func (CSIScaleOperatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*csiscaleOperatorState)(nil)).Elem()
}

type csiscaleOperatorArgs struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets []string                `pulumi:"imagePullSecrets"`
	Kind             *string                 `pulumi:"kind"`
	Metadata         *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec             *CSIScaleOperatorSpec   `pulumi:"spec"`
	Status           *CSIScaleOperatorStatus `pulumi:"status"`
}

// The set of arguments for constructing a CSIScaleOperator resource.
type CSIScaleOperatorArgs struct {
	ApiVersion pulumi.StringPtrInput
	// A passthrough option that distributes an imagePullSecrets array to the containers generated by the csi scale operator. Please refer to official k8s documentation for your environment for more details.
	ImagePullSecrets pulumi.StringArrayInput
	Kind             pulumi.StringPtrInput
	Metadata         metav1.ObjectMetaPtrInput
	Spec             CSIScaleOperatorSpecPtrInput
	Status           CSIScaleOperatorStatusPtrInput
}

func (CSIScaleOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*csiscaleOperatorArgs)(nil)).Elem()
}
