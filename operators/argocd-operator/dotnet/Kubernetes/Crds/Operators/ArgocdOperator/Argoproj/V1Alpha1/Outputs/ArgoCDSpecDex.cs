// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1
{

    [OutputType]
    public sealed class ArgoCDSpecDex
    {
        /// <summary>
        /// Config is the dex connector configuration.
        /// </summary>
        public readonly string Config;
        /// <summary>
        /// Image is the Dex container image.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// OpenShiftOAuth enables OpenShift OAuth authentication for the Dex server.
        /// </summary>
        public readonly bool OpenShiftOAuth;
        /// <summary>
        /// Resources defines the Compute Resources required by the container for Dex.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecDexResources Resources;
        /// <summary>
        /// Version is the Dex container image tag.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private ArgoCDSpecDex(
            string config,

            string image,

            bool openShiftOAuth,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecDexResources resources,

            string version)
        {
            Config = config;
            Image = image;
            OpenShiftOAuth = openShiftOAuth;
            Resources = resources;
            Version = version;
        }
    }
}
