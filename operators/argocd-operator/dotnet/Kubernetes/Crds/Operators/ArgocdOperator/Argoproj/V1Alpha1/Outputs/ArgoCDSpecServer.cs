// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1
{

    [OutputType]
    public sealed class ArgoCDSpecServer
    {
        /// <summary>
        /// Autoscale defines the autoscale options for the Argo CD Server component.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerAutoscale Autoscale;
        /// <summary>
        /// GRPC defines the state for the Argo CD Server GRPC options.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerGrpc Grpc;
        /// <summary>
        /// Host is the hostname to use for Ingress/Route resources.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// Ingress defines the desired state for an Ingress for the Argo CD Server component.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerIngress Ingress;
        /// <summary>
        /// Insecure toggles the insecure flag.
        /// </summary>
        public readonly bool Insecure;
        /// <summary>
        /// Resources defines the Compute Resources required by the container for the Argo CD server component.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerResources Resources;
        /// <summary>
        /// Route defines the desired state for an OpenShift Route for the Argo CD Server component.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerRoute Route;
        /// <summary>
        /// Service defines the options for the Service backing the ArgoCD Server component.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerService Service;

        [OutputConstructor]
        private ArgoCDSpecServer(
            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerAutoscale autoscale,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerGrpc grpc,

            string host,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerIngress ingress,

            bool insecure,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerResources resources,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerRoute route,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ArgoCDSpecServerService service)
        {
            Autoscale = autoscale;
            Grpc = grpc;
            Host = host;
            Ingress = ingress;
            Insecure = insecure;
            Resources = resources;
            Route = route;
            Service = service;
        }
    }
}
