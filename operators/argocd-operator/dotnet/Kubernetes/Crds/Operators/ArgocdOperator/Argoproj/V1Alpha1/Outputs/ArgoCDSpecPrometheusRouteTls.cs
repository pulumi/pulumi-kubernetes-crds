// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1
{

    [OutputType]
    public sealed class ArgoCDSpecPrometheusRouteTls
    {
        /// <summary>
        /// caCertificate provides the cert authority certificate contents
        /// </summary>
        public readonly string CaCertificate;
        /// <summary>
        /// certificate provides certificate contents
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify.
        /// </summary>
        public readonly string DestinationCACertificate;
        /// <summary>
        /// insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80. 
        ///  * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
        /// </summary>
        public readonly string InsecureEdgeTerminationPolicy;
        /// <summary>
        /// key provides key file contents
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// termination indicates termination type.
        /// </summary>
        public readonly string Termination;

        [OutputConstructor]
        private ArgoCDSpecPrometheusRouteTls(
            string caCertificate,

            string certificate,

            string destinationCACertificate,

            string insecureEdgeTerminationPolicy,

            string key,

            string termination)
        {
            CaCertificate = caCertificate;
            Certificate = certificate;
            DestinationCACertificate = destinationCACertificate;
            InsecureEdgeTerminationPolicy = insecureEdgeTerminationPolicy;
            Key = key;
            Termination = termination;
        }
    }
}
