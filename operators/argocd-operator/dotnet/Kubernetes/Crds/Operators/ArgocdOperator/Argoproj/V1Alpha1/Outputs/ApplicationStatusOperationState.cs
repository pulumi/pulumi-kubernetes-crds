// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1
{

    [OutputType]
    public sealed class ApplicationStatusOperationState
    {
        /// <summary>
        /// FinishedAt contains time of operation completion
        /// </summary>
        public readonly string FinishedAt;
        /// <summary>
        /// Message hold any pertinent messages when attempting to perform operation (typically errors).
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// Operation is the original requested operation
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ApplicationStatusOperationStateOperation Operation;
        /// <summary>
        /// Phase is the current phase of the operation
        /// </summary>
        public readonly string Phase;
        /// <summary>
        /// RetryCount contains time of operation retries
        /// </summary>
        public readonly int RetryCount;
        /// <summary>
        /// StartedAt contains time of operation start
        /// </summary>
        public readonly string StartedAt;
        /// <summary>
        /// SyncResult is the result of a Sync operation
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ApplicationStatusOperationStateSyncResult SyncResult;

        [OutputConstructor]
        private ApplicationStatusOperationState(
            string finishedAt,

            string message,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ApplicationStatusOperationStateOperation operation,

            string phase,

            int retryCount,

            string startedAt,

            Pulumi.Kubernetes.Types.Outputs.Argoproj.V1Alpha1.ApplicationStatusOperationStateSyncResult syncResult)
        {
            FinishedAt = finishedAt;
            Message = message;
            Operation = operation;
            Phase = phase;
            RetryCount = retryCount;
            StartedAt = startedAt;
            SyncResult = syncResult;
        }
    }
}
