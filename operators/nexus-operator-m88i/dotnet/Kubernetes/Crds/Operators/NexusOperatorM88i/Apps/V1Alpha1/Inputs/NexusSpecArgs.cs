// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Apps.V1Alpha1
{

    /// <summary>
    /// NexusSpec defines the desired state of Nexus
    /// </summary>
    public class NexusSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Full image tag name for this specific deployment Default: docker.io/sonatype/nexus3:latest
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Networking definition
        /// </summary>
        [Input("networking")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Apps.V1Alpha1.NexusSpecNetworkingArgs>? Networking { get; set; }

        /// <summary>
        /// Persistence definition
        /// </summary>
        [Input("persistence", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Apps.V1Alpha1.NexusSpecPersistenceArgs> Persistence { get; set; } = null!;

        /// <summary>
        /// Number of pods replicas desired Default: 1
        /// </summary>
        [Input("replicas", required: true)]
        public Input<int> Replicas { get; set; } = null!;

        /// <summary>
        /// Defined Resources for the Nexus instance
        /// </summary>
        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Apps.V1Alpha1.NexusSpecResourcesArgs>? Resources { get; set; }

        /// <summary>
        /// ServiceAccountName is the name of the ServiceAccount used to run the Pods. If left blank, a default ServiceAccount is created with the same name as the Nexus CR.
        /// </summary>
        [Input("serviceAccountName")]
        public Input<string>? ServiceAccountName { get; set; }

        /// <summary>
        /// If you have access to Red Hat Container Catalog, turn this to true to use the certified image provided by Sonatype Default: false
        /// </summary>
        [Input("useRedHatImage", required: true)]
        public Input<bool> UseRedHatImage { get; set; } = null!;

        public NexusSpecArgs()
        {
        }
    }
}
