// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Apps.V1Alpha1
{

    [OutputType]
    public sealed class NexusStatus
    {
        /// <summary>
        /// Condition status for the Nexus deployment
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Apps.V1Alpha1.NexusStatusDeploymentStatus DeploymentStatus;
        /// <summary>
        /// Route for external service access
        /// </summary>
        public readonly string NexusRoute;
        /// <summary>
        /// Will be "OK" when this Nexus instance is up
        /// </summary>
        public readonly string NexusStatus;
        /// <summary>
        /// Gives more information about a failure status
        /// </summary>
        public readonly string Reason;
        /// <summary>
        /// ServerOperationsStatus describes the general status for the operations performed in the Nexus server instance
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Apps.V1Alpha1.NexusStatusServerOperationsStatus ServerOperationsStatus;
        /// <summary>
        /// Conditions reached during an update
        /// </summary>
        public readonly ImmutableArray<string> UpdateConditions;

        [OutputConstructor]
        private NexusStatus(
            Pulumi.Kubernetes.Types.Outputs.Apps.V1Alpha1.NexusStatusDeploymentStatus deploymentStatus,

            string nexusRoute,

            string nexusStatus,

            string reason,

            Pulumi.Kubernetes.Types.Outputs.Apps.V1Alpha1.NexusStatusServerOperationsStatus serverOperationsStatus,

            ImmutableArray<string> updateConditions)
        {
            DeploymentStatus = deploymentStatus;
            NexusRoute = nexusRoute;
            NexusStatus = nexusStatus;
            Reason = reason;
            ServerOperationsStatus = serverOperationsStatus;
            UpdateConditions = updateConditions;
        }
    }
}
