// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.App.V1Beta1
{

    /// <summary>
    /// KogitoRuntimeSpec defines the desired state of KogitoRuntime.
    /// </summary>
    public class KogitoRuntimeSpecArgs : Pulumi.ResourceArgs
    {
        [Input("config")]
        private InputMap<string>? _config;

        /// <summary>
        /// Application properties that will be set to the service. For example 'MY_VAR: my_value'.
        /// </summary>
        public InputMap<string> Config
        {
            get => _config ?? (_config = new InputMap<string>());
            set => _config = value;
        }

        [Input("deploymentLabels")]
        private InputMap<string>? _deploymentLabels;

        /// <summary>
        /// Additional labels to be added to the Deployment and Pods managed by the operator.
        /// </summary>
        public InputMap<string> DeploymentLabels
        {
            get => _deploymentLabels ?? (_deploymentLabels = new InputMap<string>());
            set => _deploymentLabels = value;
        }

        /// <summary>
        /// Annotates the pods managed by the operator with the required metadata for Istio to setup its sidecars, enabling the mesh. Defaults to false.
        /// </summary>
        [Input("enableIstio")]
        public Input<bool>? EnableIstio { get; set; }

        [Input("env")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.App.V1Beta1.KogitoRuntimeSpecEnvArgs>? _env;

        /// <summary>
        /// Environment variables to be added to the runtime container. Keys must be a C_IDENTIFIER.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.App.V1Beta1.KogitoRuntimeSpecEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Pulumi.Kubernetes.Types.Inputs.App.V1Beta1.KogitoRuntimeSpecEnvArgs>());
            set => _env = value;
        }

        /// <summary>
        /// Image definition for the service. Example: "quay.io/kiegroup/kogito-service:latest". On OpenShift an ImageStream will be created in the current namespace pointing to the given image.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("infra")]
        private InputList<string>? _infra;

        /// <summary>
        /// Infra provides list of dependent KogitoInfra objects.
        /// </summary>
        public InputList<string> Infra
        {
            get => _infra ?? (_infra = new InputList<string>());
            set => _infra = value;
        }

        /// <summary>
        /// A flag indicating that image streams created by Kogito Operator should be configured to allow pulling from insecure registries. Usable just on OpenShift. Defaults to 'false'.
        /// </summary>
        [Input("insecureImageRegistry")]
        public Input<bool>? InsecureImageRegistry { get; set; }

        /// <summary>
        /// Create Service monitor instance to connect with Monitoring service
        /// </summary>
        [Input("monitoring")]
        public Input<Pulumi.Kubernetes.Types.Inputs.App.V1Beta1.KogitoRuntimeSpecMonitoringArgs>? Monitoring { get; set; }

        /// <summary>
        /// Custom ConfigMap with application.properties file to be mounted for the Kogito service. The ConfigMap must be created in the same namespace. Use this property if you need custom properties to be mounted before the application deployment. If left empty, one will be created for you. Later it can be updated to add any custom properties to apply to the service.
        /// </summary>
        [Input("propertiesConfigMap")]
        public Input<string>? PropertiesConfigMap { get; set; }

        /// <summary>
        /// Number of replicas that the service will have deployed in the cluster. Default value: 1.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// Defined compute resource requirements for the deployed service.
        /// </summary>
        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.App.V1Beta1.KogitoRuntimeSpecResourcesArgs>? Resources { get; set; }

        /// <summary>
        /// The name of the runtime used, either Quarkus or SpringBoot. Default value: quarkus
        /// </summary>
        [Input("runtime")]
        public Input<string>? Runtime { get; set; }

        [Input("serviceLabels")]
        private InputMap<string>? _serviceLabels;

        /// <summary>
        /// Additional labels to be added to the Service managed by the operator.
        /// </summary>
        public InputMap<string> ServiceLabels
        {
            get => _serviceLabels ?? (_serviceLabels = new InputMap<string>());
            set => _serviceLabels = value;
        }

        public KogitoRuntimeSpecArgs()
        {
        }
    }
}
