// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.App.V1Alpha1
{

    [OutputType]
    public sealed class KogitoMgmtConsoleStatus
    {
        /// <summary>
        /// History of conditions for the resource
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.App.V1Alpha1.KogitoMgmtConsoleStatusConditions> Conditions;
        /// <summary>
        /// General conditions for the Kogito Service deployment.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.App.V1Alpha1.KogitoMgmtConsoleStatusDeploymentConditions> DeploymentConditions;
        /// <summary>
        /// URI is where the service is exposed.
        /// </summary>
        public readonly string ExternalURI;
        /// <summary>
        /// Image is the resolved image for this service.
        /// </summary>
        public readonly string Image;

        [OutputConstructor]
        private KogitoMgmtConsoleStatus(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.App.V1Alpha1.KogitoMgmtConsoleStatusConditions> conditions,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.App.V1Alpha1.KogitoMgmtConsoleStatusDeploymentConditions> deploymentConditions,

            string externalURI,

            string image)
        {
            Conditions = conditions;
            DeploymentConditions = deploymentConditions;
            ExternalURI = externalURI;
            Image = image;
        }
    }
}
