// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.App.V1Alpha1
{

    /// <summary>
    /// Has the data used by the service to connect to the Kafka cluster.
    /// </summary>
    public class KogitoDataIndexSpecKafkaArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// URI is the service URI to connect to the Kafka cluster, for example, my-cluster-kafka-bootstrap:9092.
        /// </summary>
        [Input("externalURI")]
        public Input<string>? ExternalURI { get; set; }

        /// <summary>
        /// Instance is the Kafka instance to be used, for example, kogito-kafka.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// UseKogitoInfra flags if the instance will use a provided infrastructure by KogitoInfra CR. Setting this to true will configure a KogitoInfra CR to install Kafka via Strimzi Operator. Strimzi Operator MUST be installed in the namespace for this to work. On OpenShift, OLM should install it for you. If running on Kubernetes without OLM installed, please install Strimzi Operator first. Set this to false and fill other properties to provide your own infrastructure.
        /// </summary>
        [Input("useKogitoInfra")]
        public Input<bool>? UseKogitoInfra { get; set; }

        public KogitoDataIndexSpecKafkaArgs()
        {
        }
    }
}
