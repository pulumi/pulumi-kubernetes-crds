// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.App.V1Beta1
{

    [OutputType]
    public sealed class KogitoBuildStatusBuilds
    {
        /// <summary>
        /// Builds have been stopped from executing.
        /// </summary>
        public readonly ImmutableArray<string> Cancelled;
        /// <summary>
        /// Builds have executed and succeeded.
        /// </summary>
        public readonly ImmutableArray<string> Complete;
        /// <summary>
        /// Builds have been prevented from executing by an error.
        /// </summary>
        public readonly ImmutableArray<string> Error;
        /// <summary>
        /// Builds have executed and failed.
        /// </summary>
        public readonly ImmutableArray<string> Failed;
        /// <summary>
        /// Builds are being created.
        /// </summary>
        public readonly ImmutableArray<string> New;
        /// <summary>
        /// Builds are about to start running.
        /// </summary>
        public readonly ImmutableArray<string> Pending;
        /// <summary>
        /// Builds are running.
        /// </summary>
        public readonly ImmutableArray<string> Running;

        [OutputConstructor]
        private KogitoBuildStatusBuilds(
            ImmutableArray<string> cancelled,

            ImmutableArray<string> complete,

            ImmutableArray<string> error,

            ImmutableArray<string> failed,

            ImmutableArray<string> @new,

            ImmutableArray<string> pending,

            ImmutableArray<string> running)
        {
            Cancelled = cancelled;
            Complete = complete;
            Error = error;
            Failed = failed;
            New = @new;
            Pending = pending;
            Running = running;
        }
    }
}
