// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// KogitoMgmtConsole deploys the Kogito Management Console service in the given namespace.
type KogitoMgmtConsole struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// KogitoMgmtConsoleSpec defines the desired state of KogitoMgmtConsole.
	Spec KogitoMgmtConsoleSpecPtrOutput `pulumi:"spec"`
	// KogitoMgmtConsoleStatus defines the observed state of KogitoMgmtConsole.
	Status KogitoMgmtConsoleStatusPtrOutput `pulumi:"status"`
}

// NewKogitoMgmtConsole registers a new resource with the given unique name, arguments, and options.
func NewKogitoMgmtConsole(ctx *pulumi.Context,
	name string, args *KogitoMgmtConsoleArgs, opts ...pulumi.ResourceOption) (*KogitoMgmtConsole, error) {
	if args == nil {
		args = &KogitoMgmtConsoleArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("app.kiegroup.org/v1alpha1")
	args.Kind = pulumi.StringPtr("KogitoMgmtConsole")
	var resource KogitoMgmtConsole
	err := ctx.RegisterResource("kubernetes:app.kiegroup.org/v1alpha1:KogitoMgmtConsole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKogitoMgmtConsole gets an existing KogitoMgmtConsole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKogitoMgmtConsole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KogitoMgmtConsoleState, opts ...pulumi.ResourceOption) (*KogitoMgmtConsole, error) {
	var resource KogitoMgmtConsole
	err := ctx.ReadResource("kubernetes:app.kiegroup.org/v1alpha1:KogitoMgmtConsole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KogitoMgmtConsole resources.
type kogitoMgmtConsoleState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KogitoMgmtConsoleSpec defines the desired state of KogitoMgmtConsole.
	Spec *KogitoMgmtConsoleSpec `pulumi:"spec"`
	// KogitoMgmtConsoleStatus defines the observed state of KogitoMgmtConsole.
	Status *KogitoMgmtConsoleStatus `pulumi:"status"`
}

type KogitoMgmtConsoleState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KogitoMgmtConsoleSpec defines the desired state of KogitoMgmtConsole.
	Spec KogitoMgmtConsoleSpecPtrInput
	// KogitoMgmtConsoleStatus defines the observed state of KogitoMgmtConsole.
	Status KogitoMgmtConsoleStatusPtrInput
}

func (KogitoMgmtConsoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*kogitoMgmtConsoleState)(nil)).Elem()
}

type kogitoMgmtConsoleArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KogitoMgmtConsoleSpec defines the desired state of KogitoMgmtConsole.
	Spec *KogitoMgmtConsoleSpec `pulumi:"spec"`
	// KogitoMgmtConsoleStatus defines the observed state of KogitoMgmtConsole.
	Status *KogitoMgmtConsoleStatus `pulumi:"status"`
}

// The set of arguments for constructing a KogitoMgmtConsole resource.
type KogitoMgmtConsoleArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KogitoMgmtConsoleSpec defines the desired state of KogitoMgmtConsole.
	Spec KogitoMgmtConsoleSpecPtrInput
	// KogitoMgmtConsoleStatus defines the observed state of KogitoMgmtConsole.
	Status KogitoMgmtConsoleStatusPtrInput
}

func (KogitoMgmtConsoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kogitoMgmtConsoleArgs)(nil)).Elem()
}
