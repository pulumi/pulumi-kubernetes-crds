// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AccessGroup is the Schema for the accessgroup API
type AccessGroup struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec AccessGroupSpecPtrOutput `pulumi:"spec"`
	// AccessGroupStatus defines the observed state of AccessGroup
	Status AccessGroupStatusPtrOutput `pulumi:"status"`
}

// NewAccessGroup registers a new resource with the given unique name, arguments, and options.
func NewAccessGroup(ctx *pulumi.Context,
	name string, args *AccessGroupArgs, opts ...pulumi.ResourceOption) (*AccessGroup, error) {
	if args == nil {
		args = &AccessGroupArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("ibmcloud.ibm.com/v1alpha1")
	args.Kind = pulumi.StringPtr("AccessGroup")
	var resource AccessGroup
	err := ctx.RegisterResource("kubernetes:ibmcloud.ibm.com/v1alpha1:AccessGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessGroup gets an existing AccessGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessGroupState, opts ...pulumi.ResourceOption) (*AccessGroup, error) {
	var resource AccessGroup
	err := ctx.ReadResource("kubernetes:ibmcloud.ibm.com/v1alpha1:AccessGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessGroup resources.
type accessGroupState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec *AccessGroupSpec `pulumi:"spec"`
	// AccessGroupStatus defines the observed state of AccessGroup
	Status *AccessGroupStatus `pulumi:"status"`
}

type AccessGroupState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec AccessGroupSpecPtrInput
	// AccessGroupStatus defines the observed state of AccessGroup
	Status AccessGroupStatusPtrInput
}

func (AccessGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGroupState)(nil)).Elem()
}

type accessGroupArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec *AccessGroupSpec `pulumi:"spec"`
	// AccessGroupStatus defines the observed state of AccessGroup
	Status *AccessGroupStatus `pulumi:"status"`
}

// The set of arguments for constructing a AccessGroup resource.
type AccessGroupArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec AccessGroupSpecPtrInput
	// AccessGroupStatus defines the observed state of AccessGroup
	Status AccessGroupStatusPtrInput
}

func (AccessGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGroupArgs)(nil)).Elem()
}
