// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AccessGroup is the Schema for the accessgroup API
type AccessGroupType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec *AccessGroupSpec `pulumi:"spec"`
	// AccessGroupStatus defines the observed state of AccessGroup
	Status *AccessGroupStatus `pulumi:"status"`
}

// AccessGroupTypeInput is an input type that accepts AccessGroupTypeArgs and AccessGroupTypeOutput values.
// You can construct a concrete instance of `AccessGroupTypeInput` via:
//
//          AccessGroupTypeArgs{...}
type AccessGroupTypeInput interface {
	pulumi.Input

	ToAccessGroupTypeOutput() AccessGroupTypeOutput
	ToAccessGroupTypeOutputWithContext(context.Context) AccessGroupTypeOutput
}

// AccessGroup is the Schema for the accessgroup API
type AccessGroupTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AccessGroupSpec defines the desired state of AccessGroup
	Spec AccessGroupSpecPtrInput `pulumi:"spec"`
	// AccessGroupStatus defines the observed state of AccessGroup
	Status AccessGroupStatusPtrInput `pulumi:"status"`
}

func (AccessGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupType)(nil)).Elem()
}

func (i AccessGroupTypeArgs) ToAccessGroupTypeOutput() AccessGroupTypeOutput {
	return i.ToAccessGroupTypeOutputWithContext(context.Background())
}

func (i AccessGroupTypeArgs) ToAccessGroupTypeOutputWithContext(ctx context.Context) AccessGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupTypeOutput)
}

// AccessGroup is the Schema for the accessgroup API
type AccessGroupTypeOutput struct{ *pulumi.OutputState }

func (AccessGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupType)(nil)).Elem()
}

func (o AccessGroupTypeOutput) ToAccessGroupTypeOutput() AccessGroupTypeOutput {
	return o
}

func (o AccessGroupTypeOutput) ToAccessGroupTypeOutputWithContext(ctx context.Context) AccessGroupTypeOutput {
	return o
}

func (o AccessGroupTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AccessGroupTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AccessGroupTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AccessGroupType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AccessGroupSpec defines the desired state of AccessGroup
func (o AccessGroupTypeOutput) Spec() AccessGroupSpecPtrOutput {
	return o.ApplyT(func(v AccessGroupType) *AccessGroupSpec { return v.Spec }).(AccessGroupSpecPtrOutput)
}

// AccessGroupStatus defines the observed state of AccessGroup
func (o AccessGroupTypeOutput) Status() AccessGroupStatusPtrOutput {
	return o.ApplyT(func(v AccessGroupType) *AccessGroupStatus { return v.Status }).(AccessGroupStatusPtrOutput)
}

type AccessGroupMetadata struct {
}

// AccessGroupMetadataInput is an input type that accepts AccessGroupMetadataArgs and AccessGroupMetadataOutput values.
// You can construct a concrete instance of `AccessGroupMetadataInput` via:
//
//          AccessGroupMetadataArgs{...}
type AccessGroupMetadataInput interface {
	pulumi.Input

	ToAccessGroupMetadataOutput() AccessGroupMetadataOutput
	ToAccessGroupMetadataOutputWithContext(context.Context) AccessGroupMetadataOutput
}

type AccessGroupMetadataArgs struct {
}

func (AccessGroupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupMetadata)(nil)).Elem()
}

func (i AccessGroupMetadataArgs) ToAccessGroupMetadataOutput() AccessGroupMetadataOutput {
	return i.ToAccessGroupMetadataOutputWithContext(context.Background())
}

func (i AccessGroupMetadataArgs) ToAccessGroupMetadataOutputWithContext(ctx context.Context) AccessGroupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupMetadataOutput)
}

type AccessGroupMetadataOutput struct{ *pulumi.OutputState }

func (AccessGroupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupMetadata)(nil)).Elem()
}

func (o AccessGroupMetadataOutput) ToAccessGroupMetadataOutput() AccessGroupMetadataOutput {
	return o
}

func (o AccessGroupMetadataOutput) ToAccessGroupMetadataOutputWithContext(ctx context.Context) AccessGroupMetadataOutput {
	return o
}

// AccessGroupSpec defines the desired state of AccessGroup
type AccessGroupSpec struct {
	Description string   `pulumi:"description"`
	Name        string   `pulumi:"name"`
	ServiceIDs  []string `pulumi:"serviceIDs"`
	UserEmails  []string `pulumi:"userEmails"`
}

// AccessGroupSpecInput is an input type that accepts AccessGroupSpecArgs and AccessGroupSpecOutput values.
// You can construct a concrete instance of `AccessGroupSpecInput` via:
//
//          AccessGroupSpecArgs{...}
type AccessGroupSpecInput interface {
	pulumi.Input

	ToAccessGroupSpecOutput() AccessGroupSpecOutput
	ToAccessGroupSpecOutputWithContext(context.Context) AccessGroupSpecOutput
}

// AccessGroupSpec defines the desired state of AccessGroup
type AccessGroupSpecArgs struct {
	Description pulumi.StringInput      `pulumi:"description"`
	Name        pulumi.StringInput      `pulumi:"name"`
	ServiceIDs  pulumi.StringArrayInput `pulumi:"serviceIDs"`
	UserEmails  pulumi.StringArrayInput `pulumi:"userEmails"`
}

func (AccessGroupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupSpec)(nil)).Elem()
}

func (i AccessGroupSpecArgs) ToAccessGroupSpecOutput() AccessGroupSpecOutput {
	return i.ToAccessGroupSpecOutputWithContext(context.Background())
}

func (i AccessGroupSpecArgs) ToAccessGroupSpecOutputWithContext(ctx context.Context) AccessGroupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupSpecOutput)
}

func (i AccessGroupSpecArgs) ToAccessGroupSpecPtrOutput() AccessGroupSpecPtrOutput {
	return i.ToAccessGroupSpecPtrOutputWithContext(context.Background())
}

func (i AccessGroupSpecArgs) ToAccessGroupSpecPtrOutputWithContext(ctx context.Context) AccessGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupSpecOutput).ToAccessGroupSpecPtrOutputWithContext(ctx)
}

// AccessGroupSpecPtrInput is an input type that accepts AccessGroupSpecArgs, AccessGroupSpecPtr and AccessGroupSpecPtrOutput values.
// You can construct a concrete instance of `AccessGroupSpecPtrInput` via:
//
//          AccessGroupSpecArgs{...}
//
//  or:
//
//          nil
type AccessGroupSpecPtrInput interface {
	pulumi.Input

	ToAccessGroupSpecPtrOutput() AccessGroupSpecPtrOutput
	ToAccessGroupSpecPtrOutputWithContext(context.Context) AccessGroupSpecPtrOutput
}

type accessGroupSpecPtrType AccessGroupSpecArgs

func AccessGroupSpecPtr(v *AccessGroupSpecArgs) AccessGroupSpecPtrInput {
	return (*accessGroupSpecPtrType)(v)
}

func (*accessGroupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGroupSpec)(nil)).Elem()
}

func (i *accessGroupSpecPtrType) ToAccessGroupSpecPtrOutput() AccessGroupSpecPtrOutput {
	return i.ToAccessGroupSpecPtrOutputWithContext(context.Background())
}

func (i *accessGroupSpecPtrType) ToAccessGroupSpecPtrOutputWithContext(ctx context.Context) AccessGroupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupSpecPtrOutput)
}

// AccessGroupSpec defines the desired state of AccessGroup
type AccessGroupSpecOutput struct{ *pulumi.OutputState }

func (AccessGroupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupSpec)(nil)).Elem()
}

func (o AccessGroupSpecOutput) ToAccessGroupSpecOutput() AccessGroupSpecOutput {
	return o
}

func (o AccessGroupSpecOutput) ToAccessGroupSpecOutputWithContext(ctx context.Context) AccessGroupSpecOutput {
	return o
}

func (o AccessGroupSpecOutput) ToAccessGroupSpecPtrOutput() AccessGroupSpecPtrOutput {
	return o.ToAccessGroupSpecPtrOutputWithContext(context.Background())
}

func (o AccessGroupSpecOutput) ToAccessGroupSpecPtrOutputWithContext(ctx context.Context) AccessGroupSpecPtrOutput {
	return o.ApplyT(func(v AccessGroupSpec) *AccessGroupSpec {
		return &v
	}).(AccessGroupSpecPtrOutput)
}
func (o AccessGroupSpecOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGroupSpec) string { return v.Description }).(pulumi.StringOutput)
}

func (o AccessGroupSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGroupSpec) string { return v.Name }).(pulumi.StringOutput)
}

func (o AccessGroupSpecOutput) ServiceIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupSpec) []string { return v.ServiceIDs }).(pulumi.StringArrayOutput)
}

func (o AccessGroupSpecOutput) UserEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupSpec) []string { return v.UserEmails }).(pulumi.StringArrayOutput)
}

type AccessGroupSpecPtrOutput struct{ *pulumi.OutputState }

func (AccessGroupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGroupSpec)(nil)).Elem()
}

func (o AccessGroupSpecPtrOutput) ToAccessGroupSpecPtrOutput() AccessGroupSpecPtrOutput {
	return o
}

func (o AccessGroupSpecPtrOutput) ToAccessGroupSpecPtrOutputWithContext(ctx context.Context) AccessGroupSpecPtrOutput {
	return o
}

func (o AccessGroupSpecPtrOutput) Elem() AccessGroupSpecOutput {
	return o.ApplyT(func(v *AccessGroupSpec) AccessGroupSpec { return *v }).(AccessGroupSpecOutput)
}

func (o AccessGroupSpecPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupSpecPtrOutput) ServiceIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessGroupSpec) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIDs
	}).(pulumi.StringArrayOutput)
}

func (o AccessGroupSpecPtrOutput) UserEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessGroupSpec) []string {
		if v == nil {
			return nil
		}
		return v.UserEmails
	}).(pulumi.StringArrayOutput)
}

// AccessGroupStatus defines the observed state of AccessGroup
type AccessGroupStatus struct {
	GroupID     *string  `pulumi:"GroupID"`
	Description *string  `pulumi:"description"`
	Message     *string  `pulumi:"message"`
	Name        *string  `pulumi:"name"`
	ServiceIDs  []string `pulumi:"serviceIDs"`
	State       *string  `pulumi:"state"`
	UserEmails  []string `pulumi:"userEmails"`
}

// AccessGroupStatusInput is an input type that accepts AccessGroupStatusArgs and AccessGroupStatusOutput values.
// You can construct a concrete instance of `AccessGroupStatusInput` via:
//
//          AccessGroupStatusArgs{...}
type AccessGroupStatusInput interface {
	pulumi.Input

	ToAccessGroupStatusOutput() AccessGroupStatusOutput
	ToAccessGroupStatusOutputWithContext(context.Context) AccessGroupStatusOutput
}

// AccessGroupStatus defines the observed state of AccessGroup
type AccessGroupStatusArgs struct {
	GroupID     pulumi.StringPtrInput   `pulumi:"GroupID"`
	Description pulumi.StringPtrInput   `pulumi:"description"`
	Message     pulumi.StringPtrInput   `pulumi:"message"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	ServiceIDs  pulumi.StringArrayInput `pulumi:"serviceIDs"`
	State       pulumi.StringPtrInput   `pulumi:"state"`
	UserEmails  pulumi.StringArrayInput `pulumi:"userEmails"`
}

func (AccessGroupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupStatus)(nil)).Elem()
}

func (i AccessGroupStatusArgs) ToAccessGroupStatusOutput() AccessGroupStatusOutput {
	return i.ToAccessGroupStatusOutputWithContext(context.Background())
}

func (i AccessGroupStatusArgs) ToAccessGroupStatusOutputWithContext(ctx context.Context) AccessGroupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupStatusOutput)
}

func (i AccessGroupStatusArgs) ToAccessGroupStatusPtrOutput() AccessGroupStatusPtrOutput {
	return i.ToAccessGroupStatusPtrOutputWithContext(context.Background())
}

func (i AccessGroupStatusArgs) ToAccessGroupStatusPtrOutputWithContext(ctx context.Context) AccessGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupStatusOutput).ToAccessGroupStatusPtrOutputWithContext(ctx)
}

// AccessGroupStatusPtrInput is an input type that accepts AccessGroupStatusArgs, AccessGroupStatusPtr and AccessGroupStatusPtrOutput values.
// You can construct a concrete instance of `AccessGroupStatusPtrInput` via:
//
//          AccessGroupStatusArgs{...}
//
//  or:
//
//          nil
type AccessGroupStatusPtrInput interface {
	pulumi.Input

	ToAccessGroupStatusPtrOutput() AccessGroupStatusPtrOutput
	ToAccessGroupStatusPtrOutputWithContext(context.Context) AccessGroupStatusPtrOutput
}

type accessGroupStatusPtrType AccessGroupStatusArgs

func AccessGroupStatusPtr(v *AccessGroupStatusArgs) AccessGroupStatusPtrInput {
	return (*accessGroupStatusPtrType)(v)
}

func (*accessGroupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGroupStatus)(nil)).Elem()
}

func (i *accessGroupStatusPtrType) ToAccessGroupStatusPtrOutput() AccessGroupStatusPtrOutput {
	return i.ToAccessGroupStatusPtrOutputWithContext(context.Background())
}

func (i *accessGroupStatusPtrType) ToAccessGroupStatusPtrOutputWithContext(ctx context.Context) AccessGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGroupStatusPtrOutput)
}

// AccessGroupStatus defines the observed state of AccessGroup
type AccessGroupStatusOutput struct{ *pulumi.OutputState }

func (AccessGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGroupStatus)(nil)).Elem()
}

func (o AccessGroupStatusOutput) ToAccessGroupStatusOutput() AccessGroupStatusOutput {
	return o
}

func (o AccessGroupStatusOutput) ToAccessGroupStatusOutputWithContext(ctx context.Context) AccessGroupStatusOutput {
	return o
}

func (o AccessGroupStatusOutput) ToAccessGroupStatusPtrOutput() AccessGroupStatusPtrOutput {
	return o.ToAccessGroupStatusPtrOutputWithContext(context.Background())
}

func (o AccessGroupStatusOutput) ToAccessGroupStatusPtrOutputWithContext(ctx context.Context) AccessGroupStatusPtrOutput {
	return o.ApplyT(func(v AccessGroupStatus) *AccessGroupStatus {
		return &v
	}).(AccessGroupStatusPtrOutput)
}
func (o AccessGroupStatusOutput) GroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupStatus) *string { return v.GroupID }).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupStatus) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupStatus) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusOutput) ServiceIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupStatus) []string { return v.ServiceIDs }).(pulumi.StringArrayOutput)
}

func (o AccessGroupStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessGroupStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusOutput) UserEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessGroupStatus) []string { return v.UserEmails }).(pulumi.StringArrayOutput)
}

type AccessGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (AccessGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGroupStatus)(nil)).Elem()
}

func (o AccessGroupStatusPtrOutput) ToAccessGroupStatusPtrOutput() AccessGroupStatusPtrOutput {
	return o
}

func (o AccessGroupStatusPtrOutput) ToAccessGroupStatusPtrOutputWithContext(ctx context.Context) AccessGroupStatusPtrOutput {
	return o
}

func (o AccessGroupStatusPtrOutput) Elem() AccessGroupStatusOutput {
	return o.ApplyT(func(v *AccessGroupStatus) AccessGroupStatus { return *v }).(AccessGroupStatusOutput)
}

func (o AccessGroupStatusPtrOutput) GroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.GroupID
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusPtrOutput) ServiceIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessGroupStatus) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIDs
	}).(pulumi.StringArrayOutput)
}

func (o AccessGroupStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGroupStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o AccessGroupStatusPtrOutput) UserEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessGroupStatus) []string {
		if v == nil {
			return nil
		}
		return v.UserEmails
	}).(pulumi.StringArrayOutput)
}

// AccessPolicy is the Schema for the accesspolicies API
type AccessPolicyType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AccessPolicySpec defines the desired state of AccessPolicy
	Spec *AccessPolicySpec `pulumi:"spec"`
	// AccessPolicyStatus defines the observed state of AccessPolicy
	Status *AccessPolicyStatus `pulumi:"status"`
}

// AccessPolicyTypeInput is an input type that accepts AccessPolicyTypeArgs and AccessPolicyTypeOutput values.
// You can construct a concrete instance of `AccessPolicyTypeInput` via:
//
//          AccessPolicyTypeArgs{...}
type AccessPolicyTypeInput interface {
	pulumi.Input

	ToAccessPolicyTypeOutput() AccessPolicyTypeOutput
	ToAccessPolicyTypeOutputWithContext(context.Context) AccessPolicyTypeOutput
}

// AccessPolicy is the Schema for the accesspolicies API
type AccessPolicyTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AccessPolicySpec defines the desired state of AccessPolicy
	Spec AccessPolicySpecPtrInput `pulumi:"spec"`
	// AccessPolicyStatus defines the observed state of AccessPolicy
	Status AccessPolicyStatusPtrInput `pulumi:"status"`
}

func (AccessPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyType)(nil)).Elem()
}

func (i AccessPolicyTypeArgs) ToAccessPolicyTypeOutput() AccessPolicyTypeOutput {
	return i.ToAccessPolicyTypeOutputWithContext(context.Background())
}

func (i AccessPolicyTypeArgs) ToAccessPolicyTypeOutputWithContext(ctx context.Context) AccessPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyTypeOutput)
}

// AccessPolicy is the Schema for the accesspolicies API
type AccessPolicyTypeOutput struct{ *pulumi.OutputState }

func (AccessPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyType)(nil)).Elem()
}

func (o AccessPolicyTypeOutput) ToAccessPolicyTypeOutput() AccessPolicyTypeOutput {
	return o
}

func (o AccessPolicyTypeOutput) ToAccessPolicyTypeOutputWithContext(ctx context.Context) AccessPolicyTypeOutput {
	return o
}

func (o AccessPolicyTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AccessPolicyType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AccessPolicySpec defines the desired state of AccessPolicy
func (o AccessPolicyTypeOutput) Spec() AccessPolicySpecPtrOutput {
	return o.ApplyT(func(v AccessPolicyType) *AccessPolicySpec { return v.Spec }).(AccessPolicySpecPtrOutput)
}

// AccessPolicyStatus defines the observed state of AccessPolicy
func (o AccessPolicyTypeOutput) Status() AccessPolicyStatusPtrOutput {
	return o.ApplyT(func(v AccessPolicyType) *AccessPolicyStatus { return v.Status }).(AccessPolicyStatusPtrOutput)
}

type AccessPolicyMetadata struct {
}

// AccessPolicyMetadataInput is an input type that accepts AccessPolicyMetadataArgs and AccessPolicyMetadataOutput values.
// You can construct a concrete instance of `AccessPolicyMetadataInput` via:
//
//          AccessPolicyMetadataArgs{...}
type AccessPolicyMetadataInput interface {
	pulumi.Input

	ToAccessPolicyMetadataOutput() AccessPolicyMetadataOutput
	ToAccessPolicyMetadataOutputWithContext(context.Context) AccessPolicyMetadataOutput
}

type AccessPolicyMetadataArgs struct {
}

func (AccessPolicyMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyMetadata)(nil)).Elem()
}

func (i AccessPolicyMetadataArgs) ToAccessPolicyMetadataOutput() AccessPolicyMetadataOutput {
	return i.ToAccessPolicyMetadataOutputWithContext(context.Background())
}

func (i AccessPolicyMetadataArgs) ToAccessPolicyMetadataOutputWithContext(ctx context.Context) AccessPolicyMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyMetadataOutput)
}

type AccessPolicyMetadataOutput struct{ *pulumi.OutputState }

func (AccessPolicyMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyMetadata)(nil)).Elem()
}

func (o AccessPolicyMetadataOutput) ToAccessPolicyMetadataOutput() AccessPolicyMetadataOutput {
	return o
}

func (o AccessPolicyMetadataOutput) ToAccessPolicyMetadataOutputWithContext(ctx context.Context) AccessPolicyMetadataOutput {
	return o
}

// AccessPolicySpec defines the desired state of AccessPolicy
type AccessPolicySpec struct {
	Roles   AccessPolicySpecRoles   `pulumi:"roles"`
	Subject AccessPolicySpecSubject `pulumi:"subject"`
	Target  AccessPolicySpecTarget  `pulumi:"target"`
}

// AccessPolicySpecInput is an input type that accepts AccessPolicySpecArgs and AccessPolicySpecOutput values.
// You can construct a concrete instance of `AccessPolicySpecInput` via:
//
//          AccessPolicySpecArgs{...}
type AccessPolicySpecInput interface {
	pulumi.Input

	ToAccessPolicySpecOutput() AccessPolicySpecOutput
	ToAccessPolicySpecOutputWithContext(context.Context) AccessPolicySpecOutput
}

// AccessPolicySpec defines the desired state of AccessPolicy
type AccessPolicySpecArgs struct {
	Roles   AccessPolicySpecRolesInput   `pulumi:"roles"`
	Subject AccessPolicySpecSubjectInput `pulumi:"subject"`
	Target  AccessPolicySpecTargetInput  `pulumi:"target"`
}

func (AccessPolicySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpec)(nil)).Elem()
}

func (i AccessPolicySpecArgs) ToAccessPolicySpecOutput() AccessPolicySpecOutput {
	return i.ToAccessPolicySpecOutputWithContext(context.Background())
}

func (i AccessPolicySpecArgs) ToAccessPolicySpecOutputWithContext(ctx context.Context) AccessPolicySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecOutput)
}

func (i AccessPolicySpecArgs) ToAccessPolicySpecPtrOutput() AccessPolicySpecPtrOutput {
	return i.ToAccessPolicySpecPtrOutputWithContext(context.Background())
}

func (i AccessPolicySpecArgs) ToAccessPolicySpecPtrOutputWithContext(ctx context.Context) AccessPolicySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecOutput).ToAccessPolicySpecPtrOutputWithContext(ctx)
}

// AccessPolicySpecPtrInput is an input type that accepts AccessPolicySpecArgs, AccessPolicySpecPtr and AccessPolicySpecPtrOutput values.
// You can construct a concrete instance of `AccessPolicySpecPtrInput` via:
//
//          AccessPolicySpecArgs{...}
//
//  or:
//
//          nil
type AccessPolicySpecPtrInput interface {
	pulumi.Input

	ToAccessPolicySpecPtrOutput() AccessPolicySpecPtrOutput
	ToAccessPolicySpecPtrOutputWithContext(context.Context) AccessPolicySpecPtrOutput
}

type accessPolicySpecPtrType AccessPolicySpecArgs

func AccessPolicySpecPtr(v *AccessPolicySpecArgs) AccessPolicySpecPtrInput {
	return (*accessPolicySpecPtrType)(v)
}

func (*accessPolicySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpec)(nil)).Elem()
}

func (i *accessPolicySpecPtrType) ToAccessPolicySpecPtrOutput() AccessPolicySpecPtrOutput {
	return i.ToAccessPolicySpecPtrOutputWithContext(context.Background())
}

func (i *accessPolicySpecPtrType) ToAccessPolicySpecPtrOutputWithContext(ctx context.Context) AccessPolicySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecPtrOutput)
}

// AccessPolicySpec defines the desired state of AccessPolicy
type AccessPolicySpecOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpec)(nil)).Elem()
}

func (o AccessPolicySpecOutput) ToAccessPolicySpecOutput() AccessPolicySpecOutput {
	return o
}

func (o AccessPolicySpecOutput) ToAccessPolicySpecOutputWithContext(ctx context.Context) AccessPolicySpecOutput {
	return o
}

func (o AccessPolicySpecOutput) ToAccessPolicySpecPtrOutput() AccessPolicySpecPtrOutput {
	return o.ToAccessPolicySpecPtrOutputWithContext(context.Background())
}

func (o AccessPolicySpecOutput) ToAccessPolicySpecPtrOutputWithContext(ctx context.Context) AccessPolicySpecPtrOutput {
	return o.ApplyT(func(v AccessPolicySpec) *AccessPolicySpec {
		return &v
	}).(AccessPolicySpecPtrOutput)
}
func (o AccessPolicySpecOutput) Roles() AccessPolicySpecRolesOutput {
	return o.ApplyT(func(v AccessPolicySpec) AccessPolicySpecRoles { return v.Roles }).(AccessPolicySpecRolesOutput)
}

func (o AccessPolicySpecOutput) Subject() AccessPolicySpecSubjectOutput {
	return o.ApplyT(func(v AccessPolicySpec) AccessPolicySpecSubject { return v.Subject }).(AccessPolicySpecSubjectOutput)
}

func (o AccessPolicySpecOutput) Target() AccessPolicySpecTargetOutput {
	return o.ApplyT(func(v AccessPolicySpec) AccessPolicySpecTarget { return v.Target }).(AccessPolicySpecTargetOutput)
}

type AccessPolicySpecPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpec)(nil)).Elem()
}

func (o AccessPolicySpecPtrOutput) ToAccessPolicySpecPtrOutput() AccessPolicySpecPtrOutput {
	return o
}

func (o AccessPolicySpecPtrOutput) ToAccessPolicySpecPtrOutputWithContext(ctx context.Context) AccessPolicySpecPtrOutput {
	return o
}

func (o AccessPolicySpecPtrOutput) Elem() AccessPolicySpecOutput {
	return o.ApplyT(func(v *AccessPolicySpec) AccessPolicySpec { return *v }).(AccessPolicySpecOutput)
}

func (o AccessPolicySpecPtrOutput) Roles() AccessPolicySpecRolesPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpec) *AccessPolicySpecRoles {
		if v == nil {
			return nil
		}
		return &v.Roles
	}).(AccessPolicySpecRolesPtrOutput)
}

func (o AccessPolicySpecPtrOutput) Subject() AccessPolicySpecSubjectPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpec) *AccessPolicySpecSubject {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(AccessPolicySpecSubjectPtrOutput)
}

func (o AccessPolicySpecPtrOutput) Target() AccessPolicySpecTargetPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpec) *AccessPolicySpecTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(AccessPolicySpecTargetPtrOutput)
}

type AccessPolicySpecRoles struct {
	CustomRolesDName []string                              `pulumi:"customRolesDName"`
	CustomRolesDef   []AccessPolicySpecRolesCustomRolesDef `pulumi:"customRolesDef"`
	DefinedRoles     []string                              `pulumi:"definedRoles"`
}

// AccessPolicySpecRolesInput is an input type that accepts AccessPolicySpecRolesArgs and AccessPolicySpecRolesOutput values.
// You can construct a concrete instance of `AccessPolicySpecRolesInput` via:
//
//          AccessPolicySpecRolesArgs{...}
type AccessPolicySpecRolesInput interface {
	pulumi.Input

	ToAccessPolicySpecRolesOutput() AccessPolicySpecRolesOutput
	ToAccessPolicySpecRolesOutputWithContext(context.Context) AccessPolicySpecRolesOutput
}

type AccessPolicySpecRolesArgs struct {
	CustomRolesDName pulumi.StringArrayInput                       `pulumi:"customRolesDName"`
	CustomRolesDef   AccessPolicySpecRolesCustomRolesDefArrayInput `pulumi:"customRolesDef"`
	DefinedRoles     pulumi.StringArrayInput                       `pulumi:"definedRoles"`
}

func (AccessPolicySpecRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecRoles)(nil)).Elem()
}

func (i AccessPolicySpecRolesArgs) ToAccessPolicySpecRolesOutput() AccessPolicySpecRolesOutput {
	return i.ToAccessPolicySpecRolesOutputWithContext(context.Background())
}

func (i AccessPolicySpecRolesArgs) ToAccessPolicySpecRolesOutputWithContext(ctx context.Context) AccessPolicySpecRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecRolesOutput)
}

func (i AccessPolicySpecRolesArgs) ToAccessPolicySpecRolesPtrOutput() AccessPolicySpecRolesPtrOutput {
	return i.ToAccessPolicySpecRolesPtrOutputWithContext(context.Background())
}

func (i AccessPolicySpecRolesArgs) ToAccessPolicySpecRolesPtrOutputWithContext(ctx context.Context) AccessPolicySpecRolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecRolesOutput).ToAccessPolicySpecRolesPtrOutputWithContext(ctx)
}

// AccessPolicySpecRolesPtrInput is an input type that accepts AccessPolicySpecRolesArgs, AccessPolicySpecRolesPtr and AccessPolicySpecRolesPtrOutput values.
// You can construct a concrete instance of `AccessPolicySpecRolesPtrInput` via:
//
//          AccessPolicySpecRolesArgs{...}
//
//  or:
//
//          nil
type AccessPolicySpecRolesPtrInput interface {
	pulumi.Input

	ToAccessPolicySpecRolesPtrOutput() AccessPolicySpecRolesPtrOutput
	ToAccessPolicySpecRolesPtrOutputWithContext(context.Context) AccessPolicySpecRolesPtrOutput
}

type accessPolicySpecRolesPtrType AccessPolicySpecRolesArgs

func AccessPolicySpecRolesPtr(v *AccessPolicySpecRolesArgs) AccessPolicySpecRolesPtrInput {
	return (*accessPolicySpecRolesPtrType)(v)
}

func (*accessPolicySpecRolesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecRoles)(nil)).Elem()
}

func (i *accessPolicySpecRolesPtrType) ToAccessPolicySpecRolesPtrOutput() AccessPolicySpecRolesPtrOutput {
	return i.ToAccessPolicySpecRolesPtrOutputWithContext(context.Background())
}

func (i *accessPolicySpecRolesPtrType) ToAccessPolicySpecRolesPtrOutputWithContext(ctx context.Context) AccessPolicySpecRolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecRolesPtrOutput)
}

type AccessPolicySpecRolesOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecRoles)(nil)).Elem()
}

func (o AccessPolicySpecRolesOutput) ToAccessPolicySpecRolesOutput() AccessPolicySpecRolesOutput {
	return o
}

func (o AccessPolicySpecRolesOutput) ToAccessPolicySpecRolesOutputWithContext(ctx context.Context) AccessPolicySpecRolesOutput {
	return o
}

func (o AccessPolicySpecRolesOutput) ToAccessPolicySpecRolesPtrOutput() AccessPolicySpecRolesPtrOutput {
	return o.ToAccessPolicySpecRolesPtrOutputWithContext(context.Background())
}

func (o AccessPolicySpecRolesOutput) ToAccessPolicySpecRolesPtrOutputWithContext(ctx context.Context) AccessPolicySpecRolesPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecRoles) *AccessPolicySpecRoles {
		return &v
	}).(AccessPolicySpecRolesPtrOutput)
}
func (o AccessPolicySpecRolesOutput) CustomRolesDName() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicySpecRoles) []string { return v.CustomRolesDName }).(pulumi.StringArrayOutput)
}

func (o AccessPolicySpecRolesOutput) CustomRolesDef() AccessPolicySpecRolesCustomRolesDefArrayOutput {
	return o.ApplyT(func(v AccessPolicySpecRoles) []AccessPolicySpecRolesCustomRolesDef { return v.CustomRolesDef }).(AccessPolicySpecRolesCustomRolesDefArrayOutput)
}

func (o AccessPolicySpecRolesOutput) DefinedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicySpecRoles) []string { return v.DefinedRoles }).(pulumi.StringArrayOutput)
}

type AccessPolicySpecRolesPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecRolesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecRoles)(nil)).Elem()
}

func (o AccessPolicySpecRolesPtrOutput) ToAccessPolicySpecRolesPtrOutput() AccessPolicySpecRolesPtrOutput {
	return o
}

func (o AccessPolicySpecRolesPtrOutput) ToAccessPolicySpecRolesPtrOutputWithContext(ctx context.Context) AccessPolicySpecRolesPtrOutput {
	return o
}

func (o AccessPolicySpecRolesPtrOutput) Elem() AccessPolicySpecRolesOutput {
	return o.ApplyT(func(v *AccessPolicySpecRoles) AccessPolicySpecRoles { return *v }).(AccessPolicySpecRolesOutput)
}

func (o AccessPolicySpecRolesPtrOutput) CustomRolesDName() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicySpecRoles) []string {
		if v == nil {
			return nil
		}
		return v.CustomRolesDName
	}).(pulumi.StringArrayOutput)
}

func (o AccessPolicySpecRolesPtrOutput) CustomRolesDef() AccessPolicySpecRolesCustomRolesDefArrayOutput {
	return o.ApplyT(func(v *AccessPolicySpecRoles) []AccessPolicySpecRolesCustomRolesDef {
		if v == nil {
			return nil
		}
		return v.CustomRolesDef
	}).(AccessPolicySpecRolesCustomRolesDefArrayOutput)
}

func (o AccessPolicySpecRolesPtrOutput) DefinedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicySpecRoles) []string {
		if v == nil {
			return nil
		}
		return v.DefinedRoles
	}).(pulumi.StringArrayOutput)
}

type AccessPolicySpecRolesCustomRolesDef struct {
	CustomRoleName      string `pulumi:"customRoleName"`
	CustomRoleNamespace string `pulumi:"customRoleNamespace"`
}

// AccessPolicySpecRolesCustomRolesDefInput is an input type that accepts AccessPolicySpecRolesCustomRolesDefArgs and AccessPolicySpecRolesCustomRolesDefOutput values.
// You can construct a concrete instance of `AccessPolicySpecRolesCustomRolesDefInput` via:
//
//          AccessPolicySpecRolesCustomRolesDefArgs{...}
type AccessPolicySpecRolesCustomRolesDefInput interface {
	pulumi.Input

	ToAccessPolicySpecRolesCustomRolesDefOutput() AccessPolicySpecRolesCustomRolesDefOutput
	ToAccessPolicySpecRolesCustomRolesDefOutputWithContext(context.Context) AccessPolicySpecRolesCustomRolesDefOutput
}

type AccessPolicySpecRolesCustomRolesDefArgs struct {
	CustomRoleName      pulumi.StringInput `pulumi:"customRoleName"`
	CustomRoleNamespace pulumi.StringInput `pulumi:"customRoleNamespace"`
}

func (AccessPolicySpecRolesCustomRolesDefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecRolesCustomRolesDef)(nil)).Elem()
}

func (i AccessPolicySpecRolesCustomRolesDefArgs) ToAccessPolicySpecRolesCustomRolesDefOutput() AccessPolicySpecRolesCustomRolesDefOutput {
	return i.ToAccessPolicySpecRolesCustomRolesDefOutputWithContext(context.Background())
}

func (i AccessPolicySpecRolesCustomRolesDefArgs) ToAccessPolicySpecRolesCustomRolesDefOutputWithContext(ctx context.Context) AccessPolicySpecRolesCustomRolesDefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecRolesCustomRolesDefOutput)
}

// AccessPolicySpecRolesCustomRolesDefArrayInput is an input type that accepts AccessPolicySpecRolesCustomRolesDefArray and AccessPolicySpecRolesCustomRolesDefArrayOutput values.
// You can construct a concrete instance of `AccessPolicySpecRolesCustomRolesDefArrayInput` via:
//
//          AccessPolicySpecRolesCustomRolesDefArray{ AccessPolicySpecRolesCustomRolesDefArgs{...} }
type AccessPolicySpecRolesCustomRolesDefArrayInput interface {
	pulumi.Input

	ToAccessPolicySpecRolesCustomRolesDefArrayOutput() AccessPolicySpecRolesCustomRolesDefArrayOutput
	ToAccessPolicySpecRolesCustomRolesDefArrayOutputWithContext(context.Context) AccessPolicySpecRolesCustomRolesDefArrayOutput
}

type AccessPolicySpecRolesCustomRolesDefArray []AccessPolicySpecRolesCustomRolesDefInput

func (AccessPolicySpecRolesCustomRolesDefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicySpecRolesCustomRolesDef)(nil)).Elem()
}

func (i AccessPolicySpecRolesCustomRolesDefArray) ToAccessPolicySpecRolesCustomRolesDefArrayOutput() AccessPolicySpecRolesCustomRolesDefArrayOutput {
	return i.ToAccessPolicySpecRolesCustomRolesDefArrayOutputWithContext(context.Background())
}

func (i AccessPolicySpecRolesCustomRolesDefArray) ToAccessPolicySpecRolesCustomRolesDefArrayOutputWithContext(ctx context.Context) AccessPolicySpecRolesCustomRolesDefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecRolesCustomRolesDefArrayOutput)
}

type AccessPolicySpecRolesCustomRolesDefOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecRolesCustomRolesDefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecRolesCustomRolesDef)(nil)).Elem()
}

func (o AccessPolicySpecRolesCustomRolesDefOutput) ToAccessPolicySpecRolesCustomRolesDefOutput() AccessPolicySpecRolesCustomRolesDefOutput {
	return o
}

func (o AccessPolicySpecRolesCustomRolesDefOutput) ToAccessPolicySpecRolesCustomRolesDefOutputWithContext(ctx context.Context) AccessPolicySpecRolesCustomRolesDefOutput {
	return o
}

func (o AccessPolicySpecRolesCustomRolesDefOutput) CustomRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicySpecRolesCustomRolesDef) string { return v.CustomRoleName }).(pulumi.StringOutput)
}

func (o AccessPolicySpecRolesCustomRolesDefOutput) CustomRoleNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicySpecRolesCustomRolesDef) string { return v.CustomRoleNamespace }).(pulumi.StringOutput)
}

type AccessPolicySpecRolesCustomRolesDefArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecRolesCustomRolesDefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicySpecRolesCustomRolesDef)(nil)).Elem()
}

func (o AccessPolicySpecRolesCustomRolesDefArrayOutput) ToAccessPolicySpecRolesCustomRolesDefArrayOutput() AccessPolicySpecRolesCustomRolesDefArrayOutput {
	return o
}

func (o AccessPolicySpecRolesCustomRolesDefArrayOutput) ToAccessPolicySpecRolesCustomRolesDefArrayOutputWithContext(ctx context.Context) AccessPolicySpecRolesCustomRolesDefArrayOutput {
	return o
}

func (o AccessPolicySpecRolesCustomRolesDefArrayOutput) Index(i pulumi.IntInput) AccessPolicySpecRolesCustomRolesDefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicySpecRolesCustomRolesDef {
		return vs[0].([]AccessPolicySpecRolesCustomRolesDef)[vs[1].(int)]
	}).(AccessPolicySpecRolesCustomRolesDefOutput)
}

type AccessPolicySpecSubject struct {
	AccessGroupDef *AccessPolicySpecSubjectAccessGroupDef `pulumi:"accessGroupDef"`
	AccessGroupID  *string                                `pulumi:"accessGroupID"`
	ServiceID      *string                                `pulumi:"serviceID"`
	UserEmail      *string                                `pulumi:"userEmail"`
}

// AccessPolicySpecSubjectInput is an input type that accepts AccessPolicySpecSubjectArgs and AccessPolicySpecSubjectOutput values.
// You can construct a concrete instance of `AccessPolicySpecSubjectInput` via:
//
//          AccessPolicySpecSubjectArgs{...}
type AccessPolicySpecSubjectInput interface {
	pulumi.Input

	ToAccessPolicySpecSubjectOutput() AccessPolicySpecSubjectOutput
	ToAccessPolicySpecSubjectOutputWithContext(context.Context) AccessPolicySpecSubjectOutput
}

type AccessPolicySpecSubjectArgs struct {
	AccessGroupDef AccessPolicySpecSubjectAccessGroupDefPtrInput `pulumi:"accessGroupDef"`
	AccessGroupID  pulumi.StringPtrInput                         `pulumi:"accessGroupID"`
	ServiceID      pulumi.StringPtrInput                         `pulumi:"serviceID"`
	UserEmail      pulumi.StringPtrInput                         `pulumi:"userEmail"`
}

func (AccessPolicySpecSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecSubject)(nil)).Elem()
}

func (i AccessPolicySpecSubjectArgs) ToAccessPolicySpecSubjectOutput() AccessPolicySpecSubjectOutput {
	return i.ToAccessPolicySpecSubjectOutputWithContext(context.Background())
}

func (i AccessPolicySpecSubjectArgs) ToAccessPolicySpecSubjectOutputWithContext(ctx context.Context) AccessPolicySpecSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecSubjectOutput)
}

func (i AccessPolicySpecSubjectArgs) ToAccessPolicySpecSubjectPtrOutput() AccessPolicySpecSubjectPtrOutput {
	return i.ToAccessPolicySpecSubjectPtrOutputWithContext(context.Background())
}

func (i AccessPolicySpecSubjectArgs) ToAccessPolicySpecSubjectPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecSubjectOutput).ToAccessPolicySpecSubjectPtrOutputWithContext(ctx)
}

// AccessPolicySpecSubjectPtrInput is an input type that accepts AccessPolicySpecSubjectArgs, AccessPolicySpecSubjectPtr and AccessPolicySpecSubjectPtrOutput values.
// You can construct a concrete instance of `AccessPolicySpecSubjectPtrInput` via:
//
//          AccessPolicySpecSubjectArgs{...}
//
//  or:
//
//          nil
type AccessPolicySpecSubjectPtrInput interface {
	pulumi.Input

	ToAccessPolicySpecSubjectPtrOutput() AccessPolicySpecSubjectPtrOutput
	ToAccessPolicySpecSubjectPtrOutputWithContext(context.Context) AccessPolicySpecSubjectPtrOutput
}

type accessPolicySpecSubjectPtrType AccessPolicySpecSubjectArgs

func AccessPolicySpecSubjectPtr(v *AccessPolicySpecSubjectArgs) AccessPolicySpecSubjectPtrInput {
	return (*accessPolicySpecSubjectPtrType)(v)
}

func (*accessPolicySpecSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecSubject)(nil)).Elem()
}

func (i *accessPolicySpecSubjectPtrType) ToAccessPolicySpecSubjectPtrOutput() AccessPolicySpecSubjectPtrOutput {
	return i.ToAccessPolicySpecSubjectPtrOutputWithContext(context.Background())
}

func (i *accessPolicySpecSubjectPtrType) ToAccessPolicySpecSubjectPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecSubjectPtrOutput)
}

type AccessPolicySpecSubjectOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecSubject)(nil)).Elem()
}

func (o AccessPolicySpecSubjectOutput) ToAccessPolicySpecSubjectOutput() AccessPolicySpecSubjectOutput {
	return o
}

func (o AccessPolicySpecSubjectOutput) ToAccessPolicySpecSubjectOutputWithContext(ctx context.Context) AccessPolicySpecSubjectOutput {
	return o
}

func (o AccessPolicySpecSubjectOutput) ToAccessPolicySpecSubjectPtrOutput() AccessPolicySpecSubjectPtrOutput {
	return o.ToAccessPolicySpecSubjectPtrOutputWithContext(context.Background())
}

func (o AccessPolicySpecSubjectOutput) ToAccessPolicySpecSubjectPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecSubject) *AccessPolicySpecSubject {
		return &v
	}).(AccessPolicySpecSubjectPtrOutput)
}
func (o AccessPolicySpecSubjectOutput) AccessGroupDef() AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecSubject) *AccessPolicySpecSubjectAccessGroupDef { return v.AccessGroupDef }).(AccessPolicySpecSubjectAccessGroupDefPtrOutput)
}

func (o AccessPolicySpecSubjectOutput) AccessGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecSubject) *string { return v.AccessGroupID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecSubjectOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecSubject) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecSubjectOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecSubject) *string { return v.UserEmail }).(pulumi.StringPtrOutput)
}

type AccessPolicySpecSubjectPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecSubject)(nil)).Elem()
}

func (o AccessPolicySpecSubjectPtrOutput) ToAccessPolicySpecSubjectPtrOutput() AccessPolicySpecSubjectPtrOutput {
	return o
}

func (o AccessPolicySpecSubjectPtrOutput) ToAccessPolicySpecSubjectPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectPtrOutput {
	return o
}

func (o AccessPolicySpecSubjectPtrOutput) Elem() AccessPolicySpecSubjectOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubject) AccessPolicySpecSubject { return *v }).(AccessPolicySpecSubjectOutput)
}

func (o AccessPolicySpecSubjectPtrOutput) AccessGroupDef() AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubject) *AccessPolicySpecSubjectAccessGroupDef {
		if v == nil {
			return nil
		}
		return v.AccessGroupDef
	}).(AccessPolicySpecSubjectAccessGroupDefPtrOutput)
}

func (o AccessPolicySpecSubjectPtrOutput) AccessGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubject) *string {
		if v == nil {
			return nil
		}
		return v.AccessGroupID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecSubjectPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubject) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecSubjectPtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubject) *string {
		if v == nil {
			return nil
		}
		return v.UserEmail
	}).(pulumi.StringPtrOutput)
}

type AccessPolicySpecSubjectAccessGroupDef struct {
	AccessGroupName      string `pulumi:"accessGroupName"`
	AccessGroupNamespace string `pulumi:"accessGroupNamespace"`
}

// AccessPolicySpecSubjectAccessGroupDefInput is an input type that accepts AccessPolicySpecSubjectAccessGroupDefArgs and AccessPolicySpecSubjectAccessGroupDefOutput values.
// You can construct a concrete instance of `AccessPolicySpecSubjectAccessGroupDefInput` via:
//
//          AccessPolicySpecSubjectAccessGroupDefArgs{...}
type AccessPolicySpecSubjectAccessGroupDefInput interface {
	pulumi.Input

	ToAccessPolicySpecSubjectAccessGroupDefOutput() AccessPolicySpecSubjectAccessGroupDefOutput
	ToAccessPolicySpecSubjectAccessGroupDefOutputWithContext(context.Context) AccessPolicySpecSubjectAccessGroupDefOutput
}

type AccessPolicySpecSubjectAccessGroupDefArgs struct {
	AccessGroupName      pulumi.StringInput `pulumi:"accessGroupName"`
	AccessGroupNamespace pulumi.StringInput `pulumi:"accessGroupNamespace"`
}

func (AccessPolicySpecSubjectAccessGroupDefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecSubjectAccessGroupDef)(nil)).Elem()
}

func (i AccessPolicySpecSubjectAccessGroupDefArgs) ToAccessPolicySpecSubjectAccessGroupDefOutput() AccessPolicySpecSubjectAccessGroupDefOutput {
	return i.ToAccessPolicySpecSubjectAccessGroupDefOutputWithContext(context.Background())
}

func (i AccessPolicySpecSubjectAccessGroupDefArgs) ToAccessPolicySpecSubjectAccessGroupDefOutputWithContext(ctx context.Context) AccessPolicySpecSubjectAccessGroupDefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecSubjectAccessGroupDefOutput)
}

func (i AccessPolicySpecSubjectAccessGroupDefArgs) ToAccessPolicySpecSubjectAccessGroupDefPtrOutput() AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return i.ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(context.Background())
}

func (i AccessPolicySpecSubjectAccessGroupDefArgs) ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecSubjectAccessGroupDefOutput).ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(ctx)
}

// AccessPolicySpecSubjectAccessGroupDefPtrInput is an input type that accepts AccessPolicySpecSubjectAccessGroupDefArgs, AccessPolicySpecSubjectAccessGroupDefPtr and AccessPolicySpecSubjectAccessGroupDefPtrOutput values.
// You can construct a concrete instance of `AccessPolicySpecSubjectAccessGroupDefPtrInput` via:
//
//          AccessPolicySpecSubjectAccessGroupDefArgs{...}
//
//  or:
//
//          nil
type AccessPolicySpecSubjectAccessGroupDefPtrInput interface {
	pulumi.Input

	ToAccessPolicySpecSubjectAccessGroupDefPtrOutput() AccessPolicySpecSubjectAccessGroupDefPtrOutput
	ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(context.Context) AccessPolicySpecSubjectAccessGroupDefPtrOutput
}

type accessPolicySpecSubjectAccessGroupDefPtrType AccessPolicySpecSubjectAccessGroupDefArgs

func AccessPolicySpecSubjectAccessGroupDefPtr(v *AccessPolicySpecSubjectAccessGroupDefArgs) AccessPolicySpecSubjectAccessGroupDefPtrInput {
	return (*accessPolicySpecSubjectAccessGroupDefPtrType)(v)
}

func (*accessPolicySpecSubjectAccessGroupDefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecSubjectAccessGroupDef)(nil)).Elem()
}

func (i *accessPolicySpecSubjectAccessGroupDefPtrType) ToAccessPolicySpecSubjectAccessGroupDefPtrOutput() AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return i.ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(context.Background())
}

func (i *accessPolicySpecSubjectAccessGroupDefPtrType) ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecSubjectAccessGroupDefPtrOutput)
}

type AccessPolicySpecSubjectAccessGroupDefOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecSubjectAccessGroupDefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecSubjectAccessGroupDef)(nil)).Elem()
}

func (o AccessPolicySpecSubjectAccessGroupDefOutput) ToAccessPolicySpecSubjectAccessGroupDefOutput() AccessPolicySpecSubjectAccessGroupDefOutput {
	return o
}

func (o AccessPolicySpecSubjectAccessGroupDefOutput) ToAccessPolicySpecSubjectAccessGroupDefOutputWithContext(ctx context.Context) AccessPolicySpecSubjectAccessGroupDefOutput {
	return o
}

func (o AccessPolicySpecSubjectAccessGroupDefOutput) ToAccessPolicySpecSubjectAccessGroupDefPtrOutput() AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return o.ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(context.Background())
}

func (o AccessPolicySpecSubjectAccessGroupDefOutput) ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecSubjectAccessGroupDef) *AccessPolicySpecSubjectAccessGroupDef {
		return &v
	}).(AccessPolicySpecSubjectAccessGroupDefPtrOutput)
}
func (o AccessPolicySpecSubjectAccessGroupDefOutput) AccessGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicySpecSubjectAccessGroupDef) string { return v.AccessGroupName }).(pulumi.StringOutput)
}

func (o AccessPolicySpecSubjectAccessGroupDefOutput) AccessGroupNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicySpecSubjectAccessGroupDef) string { return v.AccessGroupNamespace }).(pulumi.StringOutput)
}

type AccessPolicySpecSubjectAccessGroupDefPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecSubjectAccessGroupDefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecSubjectAccessGroupDef)(nil)).Elem()
}

func (o AccessPolicySpecSubjectAccessGroupDefPtrOutput) ToAccessPolicySpecSubjectAccessGroupDefPtrOutput() AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return o
}

func (o AccessPolicySpecSubjectAccessGroupDefPtrOutput) ToAccessPolicySpecSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicySpecSubjectAccessGroupDefPtrOutput {
	return o
}

func (o AccessPolicySpecSubjectAccessGroupDefPtrOutput) Elem() AccessPolicySpecSubjectAccessGroupDefOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubjectAccessGroupDef) AccessPolicySpecSubjectAccessGroupDef { return *v }).(AccessPolicySpecSubjectAccessGroupDefOutput)
}

func (o AccessPolicySpecSubjectAccessGroupDefPtrOutput) AccessGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubjectAccessGroupDef) *string {
		if v == nil {
			return nil
		}
		return &v.AccessGroupName
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecSubjectAccessGroupDefPtrOutput) AccessGroupNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecSubjectAccessGroupDef) *string {
		if v == nil {
			return nil
		}
		return &v.AccessGroupNamespace
	}).(pulumi.StringPtrOutput)
}

type AccessPolicySpecTarget struct {
	ResourceGroup *string `pulumi:"resourceGroup"`
	ResourceID    *string `pulumi:"resourceID"`
	ResourceKey   *string `pulumi:"resourceKey"`
	ResourceName  *string `pulumi:"resourceName"`
	ResourceValue *string `pulumi:"resourceValue"`
	ServiceClass  *string `pulumi:"serviceClass"`
	ServiceID     *string `pulumi:"serviceID"`
}

// AccessPolicySpecTargetInput is an input type that accepts AccessPolicySpecTargetArgs and AccessPolicySpecTargetOutput values.
// You can construct a concrete instance of `AccessPolicySpecTargetInput` via:
//
//          AccessPolicySpecTargetArgs{...}
type AccessPolicySpecTargetInput interface {
	pulumi.Input

	ToAccessPolicySpecTargetOutput() AccessPolicySpecTargetOutput
	ToAccessPolicySpecTargetOutputWithContext(context.Context) AccessPolicySpecTargetOutput
}

type AccessPolicySpecTargetArgs struct {
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	ResourceID    pulumi.StringPtrInput `pulumi:"resourceID"`
	ResourceKey   pulumi.StringPtrInput `pulumi:"resourceKey"`
	ResourceName  pulumi.StringPtrInput `pulumi:"resourceName"`
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	ServiceClass  pulumi.StringPtrInput `pulumi:"serviceClass"`
	ServiceID     pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (AccessPolicySpecTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecTarget)(nil)).Elem()
}

func (i AccessPolicySpecTargetArgs) ToAccessPolicySpecTargetOutput() AccessPolicySpecTargetOutput {
	return i.ToAccessPolicySpecTargetOutputWithContext(context.Background())
}

func (i AccessPolicySpecTargetArgs) ToAccessPolicySpecTargetOutputWithContext(ctx context.Context) AccessPolicySpecTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecTargetOutput)
}

func (i AccessPolicySpecTargetArgs) ToAccessPolicySpecTargetPtrOutput() AccessPolicySpecTargetPtrOutput {
	return i.ToAccessPolicySpecTargetPtrOutputWithContext(context.Background())
}

func (i AccessPolicySpecTargetArgs) ToAccessPolicySpecTargetPtrOutputWithContext(ctx context.Context) AccessPolicySpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecTargetOutput).ToAccessPolicySpecTargetPtrOutputWithContext(ctx)
}

// AccessPolicySpecTargetPtrInput is an input type that accepts AccessPolicySpecTargetArgs, AccessPolicySpecTargetPtr and AccessPolicySpecTargetPtrOutput values.
// You can construct a concrete instance of `AccessPolicySpecTargetPtrInput` via:
//
//          AccessPolicySpecTargetArgs{...}
//
//  or:
//
//          nil
type AccessPolicySpecTargetPtrInput interface {
	pulumi.Input

	ToAccessPolicySpecTargetPtrOutput() AccessPolicySpecTargetPtrOutput
	ToAccessPolicySpecTargetPtrOutputWithContext(context.Context) AccessPolicySpecTargetPtrOutput
}

type accessPolicySpecTargetPtrType AccessPolicySpecTargetArgs

func AccessPolicySpecTargetPtr(v *AccessPolicySpecTargetArgs) AccessPolicySpecTargetPtrInput {
	return (*accessPolicySpecTargetPtrType)(v)
}

func (*accessPolicySpecTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecTarget)(nil)).Elem()
}

func (i *accessPolicySpecTargetPtrType) ToAccessPolicySpecTargetPtrOutput() AccessPolicySpecTargetPtrOutput {
	return i.ToAccessPolicySpecTargetPtrOutputWithContext(context.Background())
}

func (i *accessPolicySpecTargetPtrType) ToAccessPolicySpecTargetPtrOutputWithContext(ctx context.Context) AccessPolicySpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicySpecTargetPtrOutput)
}

type AccessPolicySpecTargetOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicySpecTarget)(nil)).Elem()
}

func (o AccessPolicySpecTargetOutput) ToAccessPolicySpecTargetOutput() AccessPolicySpecTargetOutput {
	return o
}

func (o AccessPolicySpecTargetOutput) ToAccessPolicySpecTargetOutputWithContext(ctx context.Context) AccessPolicySpecTargetOutput {
	return o
}

func (o AccessPolicySpecTargetOutput) ToAccessPolicySpecTargetPtrOutput() AccessPolicySpecTargetPtrOutput {
	return o.ToAccessPolicySpecTargetPtrOutputWithContext(context.Background())
}

func (o AccessPolicySpecTargetOutput) ToAccessPolicySpecTargetPtrOutputWithContext(ctx context.Context) AccessPolicySpecTargetPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *AccessPolicySpecTarget {
		return &v
	}).(AccessPolicySpecTargetPtrOutput)
}
func (o AccessPolicySpecTargetOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ResourceKey }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ServiceClass }).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicySpecTarget) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type AccessPolicySpecTargetPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicySpecTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicySpecTarget)(nil)).Elem()
}

func (o AccessPolicySpecTargetPtrOutput) ToAccessPolicySpecTargetPtrOutput() AccessPolicySpecTargetPtrOutput {
	return o
}

func (o AccessPolicySpecTargetPtrOutput) ToAccessPolicySpecTargetPtrOutputWithContext(ctx context.Context) AccessPolicySpecTargetPtrOutput {
	return o
}

func (o AccessPolicySpecTargetPtrOutput) Elem() AccessPolicySpecTargetOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) AccessPolicySpecTarget { return *v }).(AccessPolicySpecTargetOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceKey
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceValue
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicySpecTargetPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

// AccessPolicyStatus defines the observed state of AccessPolicy
type AccessPolicyStatus struct {
	Message  *string                    `pulumi:"message"`
	PolicyID *string                    `pulumi:"policyID"`
	Roles    *AccessPolicyStatusRoles   `pulumi:"roles"`
	State    *string                    `pulumi:"state"`
	Subject  *AccessPolicyStatusSubject `pulumi:"subject"`
	Target   *AccessPolicyStatusTarget  `pulumi:"target"`
}

// AccessPolicyStatusInput is an input type that accepts AccessPolicyStatusArgs and AccessPolicyStatusOutput values.
// You can construct a concrete instance of `AccessPolicyStatusInput` via:
//
//          AccessPolicyStatusArgs{...}
type AccessPolicyStatusInput interface {
	pulumi.Input

	ToAccessPolicyStatusOutput() AccessPolicyStatusOutput
	ToAccessPolicyStatusOutputWithContext(context.Context) AccessPolicyStatusOutput
}

// AccessPolicyStatus defines the observed state of AccessPolicy
type AccessPolicyStatusArgs struct {
	Message  pulumi.StringPtrInput             `pulumi:"message"`
	PolicyID pulumi.StringPtrInput             `pulumi:"policyID"`
	Roles    AccessPolicyStatusRolesPtrInput   `pulumi:"roles"`
	State    pulumi.StringPtrInput             `pulumi:"state"`
	Subject  AccessPolicyStatusSubjectPtrInput `pulumi:"subject"`
	Target   AccessPolicyStatusTargetPtrInput  `pulumi:"target"`
}

func (AccessPolicyStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatus)(nil)).Elem()
}

func (i AccessPolicyStatusArgs) ToAccessPolicyStatusOutput() AccessPolicyStatusOutput {
	return i.ToAccessPolicyStatusOutputWithContext(context.Background())
}

func (i AccessPolicyStatusArgs) ToAccessPolicyStatusOutputWithContext(ctx context.Context) AccessPolicyStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusOutput)
}

func (i AccessPolicyStatusArgs) ToAccessPolicyStatusPtrOutput() AccessPolicyStatusPtrOutput {
	return i.ToAccessPolicyStatusPtrOutputWithContext(context.Background())
}

func (i AccessPolicyStatusArgs) ToAccessPolicyStatusPtrOutputWithContext(ctx context.Context) AccessPolicyStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusOutput).ToAccessPolicyStatusPtrOutputWithContext(ctx)
}

// AccessPolicyStatusPtrInput is an input type that accepts AccessPolicyStatusArgs, AccessPolicyStatusPtr and AccessPolicyStatusPtrOutput values.
// You can construct a concrete instance of `AccessPolicyStatusPtrInput` via:
//
//          AccessPolicyStatusArgs{...}
//
//  or:
//
//          nil
type AccessPolicyStatusPtrInput interface {
	pulumi.Input

	ToAccessPolicyStatusPtrOutput() AccessPolicyStatusPtrOutput
	ToAccessPolicyStatusPtrOutputWithContext(context.Context) AccessPolicyStatusPtrOutput
}

type accessPolicyStatusPtrType AccessPolicyStatusArgs

func AccessPolicyStatusPtr(v *AccessPolicyStatusArgs) AccessPolicyStatusPtrInput {
	return (*accessPolicyStatusPtrType)(v)
}

func (*accessPolicyStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatus)(nil)).Elem()
}

func (i *accessPolicyStatusPtrType) ToAccessPolicyStatusPtrOutput() AccessPolicyStatusPtrOutput {
	return i.ToAccessPolicyStatusPtrOutputWithContext(context.Background())
}

func (i *accessPolicyStatusPtrType) ToAccessPolicyStatusPtrOutputWithContext(ctx context.Context) AccessPolicyStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusPtrOutput)
}

// AccessPolicyStatus defines the observed state of AccessPolicy
type AccessPolicyStatusOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatus)(nil)).Elem()
}

func (o AccessPolicyStatusOutput) ToAccessPolicyStatusOutput() AccessPolicyStatusOutput {
	return o
}

func (o AccessPolicyStatusOutput) ToAccessPolicyStatusOutputWithContext(ctx context.Context) AccessPolicyStatusOutput {
	return o
}

func (o AccessPolicyStatusOutput) ToAccessPolicyStatusPtrOutput() AccessPolicyStatusPtrOutput {
	return o.ToAccessPolicyStatusPtrOutputWithContext(context.Background())
}

func (o AccessPolicyStatusOutput) ToAccessPolicyStatusPtrOutputWithContext(ctx context.Context) AccessPolicyStatusPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *AccessPolicyStatus {
		return &v
	}).(AccessPolicyStatusPtrOutput)
}
func (o AccessPolicyStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *string { return v.PolicyID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusOutput) Roles() AccessPolicyStatusRolesPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *AccessPolicyStatusRoles { return v.Roles }).(AccessPolicyStatusRolesPtrOutput)
}

func (o AccessPolicyStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusOutput) Subject() AccessPolicyStatusSubjectPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *AccessPolicyStatusSubject { return v.Subject }).(AccessPolicyStatusSubjectPtrOutput)
}

func (o AccessPolicyStatusOutput) Target() AccessPolicyStatusTargetPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatus) *AccessPolicyStatusTarget { return v.Target }).(AccessPolicyStatusTargetPtrOutput)
}

type AccessPolicyStatusPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatus)(nil)).Elem()
}

func (o AccessPolicyStatusPtrOutput) ToAccessPolicyStatusPtrOutput() AccessPolicyStatusPtrOutput {
	return o
}

func (o AccessPolicyStatusPtrOutput) ToAccessPolicyStatusPtrOutputWithContext(ctx context.Context) AccessPolicyStatusPtrOutput {
	return o
}

func (o AccessPolicyStatusPtrOutput) Elem() AccessPolicyStatusOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) AccessPolicyStatus { return *v }).(AccessPolicyStatusOutput)
}

func (o AccessPolicyStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusPtrOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) *string {
		if v == nil {
			return nil
		}
		return v.PolicyID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusPtrOutput) Roles() AccessPolicyStatusRolesPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) *AccessPolicyStatusRoles {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(AccessPolicyStatusRolesPtrOutput)
}

func (o AccessPolicyStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusPtrOutput) Subject() AccessPolicyStatusSubjectPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) *AccessPolicyStatusSubject {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(AccessPolicyStatusSubjectPtrOutput)
}

func (o AccessPolicyStatusPtrOutput) Target() AccessPolicyStatusTargetPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatus) *AccessPolicyStatusTarget {
		if v == nil {
			return nil
		}
		return v.Target
	}).(AccessPolicyStatusTargetPtrOutput)
}

type AccessPolicyStatusRoles struct {
	CustomRolesDName []string                                `pulumi:"customRolesDName"`
	CustomRolesDef   []AccessPolicyStatusRolesCustomRolesDef `pulumi:"customRolesDef"`
	DefinedRoles     []string                                `pulumi:"definedRoles"`
}

// AccessPolicyStatusRolesInput is an input type that accepts AccessPolicyStatusRolesArgs and AccessPolicyStatusRolesOutput values.
// You can construct a concrete instance of `AccessPolicyStatusRolesInput` via:
//
//          AccessPolicyStatusRolesArgs{...}
type AccessPolicyStatusRolesInput interface {
	pulumi.Input

	ToAccessPolicyStatusRolesOutput() AccessPolicyStatusRolesOutput
	ToAccessPolicyStatusRolesOutputWithContext(context.Context) AccessPolicyStatusRolesOutput
}

type AccessPolicyStatusRolesArgs struct {
	CustomRolesDName pulumi.StringArrayInput                         `pulumi:"customRolesDName"`
	CustomRolesDef   AccessPolicyStatusRolesCustomRolesDefArrayInput `pulumi:"customRolesDef"`
	DefinedRoles     pulumi.StringArrayInput                         `pulumi:"definedRoles"`
}

func (AccessPolicyStatusRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusRoles)(nil)).Elem()
}

func (i AccessPolicyStatusRolesArgs) ToAccessPolicyStatusRolesOutput() AccessPolicyStatusRolesOutput {
	return i.ToAccessPolicyStatusRolesOutputWithContext(context.Background())
}

func (i AccessPolicyStatusRolesArgs) ToAccessPolicyStatusRolesOutputWithContext(ctx context.Context) AccessPolicyStatusRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusRolesOutput)
}

func (i AccessPolicyStatusRolesArgs) ToAccessPolicyStatusRolesPtrOutput() AccessPolicyStatusRolesPtrOutput {
	return i.ToAccessPolicyStatusRolesPtrOutputWithContext(context.Background())
}

func (i AccessPolicyStatusRolesArgs) ToAccessPolicyStatusRolesPtrOutputWithContext(ctx context.Context) AccessPolicyStatusRolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusRolesOutput).ToAccessPolicyStatusRolesPtrOutputWithContext(ctx)
}

// AccessPolicyStatusRolesPtrInput is an input type that accepts AccessPolicyStatusRolesArgs, AccessPolicyStatusRolesPtr and AccessPolicyStatusRolesPtrOutput values.
// You can construct a concrete instance of `AccessPolicyStatusRolesPtrInput` via:
//
//          AccessPolicyStatusRolesArgs{...}
//
//  or:
//
//          nil
type AccessPolicyStatusRolesPtrInput interface {
	pulumi.Input

	ToAccessPolicyStatusRolesPtrOutput() AccessPolicyStatusRolesPtrOutput
	ToAccessPolicyStatusRolesPtrOutputWithContext(context.Context) AccessPolicyStatusRolesPtrOutput
}

type accessPolicyStatusRolesPtrType AccessPolicyStatusRolesArgs

func AccessPolicyStatusRolesPtr(v *AccessPolicyStatusRolesArgs) AccessPolicyStatusRolesPtrInput {
	return (*accessPolicyStatusRolesPtrType)(v)
}

func (*accessPolicyStatusRolesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusRoles)(nil)).Elem()
}

func (i *accessPolicyStatusRolesPtrType) ToAccessPolicyStatusRolesPtrOutput() AccessPolicyStatusRolesPtrOutput {
	return i.ToAccessPolicyStatusRolesPtrOutputWithContext(context.Background())
}

func (i *accessPolicyStatusRolesPtrType) ToAccessPolicyStatusRolesPtrOutputWithContext(ctx context.Context) AccessPolicyStatusRolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusRolesPtrOutput)
}

type AccessPolicyStatusRolesOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusRoles)(nil)).Elem()
}

func (o AccessPolicyStatusRolesOutput) ToAccessPolicyStatusRolesOutput() AccessPolicyStatusRolesOutput {
	return o
}

func (o AccessPolicyStatusRolesOutput) ToAccessPolicyStatusRolesOutputWithContext(ctx context.Context) AccessPolicyStatusRolesOutput {
	return o
}

func (o AccessPolicyStatusRolesOutput) ToAccessPolicyStatusRolesPtrOutput() AccessPolicyStatusRolesPtrOutput {
	return o.ToAccessPolicyStatusRolesPtrOutputWithContext(context.Background())
}

func (o AccessPolicyStatusRolesOutput) ToAccessPolicyStatusRolesPtrOutputWithContext(ctx context.Context) AccessPolicyStatusRolesPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusRoles) *AccessPolicyStatusRoles {
		return &v
	}).(AccessPolicyStatusRolesPtrOutput)
}
func (o AccessPolicyStatusRolesOutput) CustomRolesDName() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyStatusRoles) []string { return v.CustomRolesDName }).(pulumi.StringArrayOutput)
}

func (o AccessPolicyStatusRolesOutput) CustomRolesDef() AccessPolicyStatusRolesCustomRolesDefArrayOutput {
	return o.ApplyT(func(v AccessPolicyStatusRoles) []AccessPolicyStatusRolesCustomRolesDef { return v.CustomRolesDef }).(AccessPolicyStatusRolesCustomRolesDefArrayOutput)
}

func (o AccessPolicyStatusRolesOutput) DefinedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyStatusRoles) []string { return v.DefinedRoles }).(pulumi.StringArrayOutput)
}

type AccessPolicyStatusRolesPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusRolesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusRoles)(nil)).Elem()
}

func (o AccessPolicyStatusRolesPtrOutput) ToAccessPolicyStatusRolesPtrOutput() AccessPolicyStatusRolesPtrOutput {
	return o
}

func (o AccessPolicyStatusRolesPtrOutput) ToAccessPolicyStatusRolesPtrOutputWithContext(ctx context.Context) AccessPolicyStatusRolesPtrOutput {
	return o
}

func (o AccessPolicyStatusRolesPtrOutput) Elem() AccessPolicyStatusRolesOutput {
	return o.ApplyT(func(v *AccessPolicyStatusRoles) AccessPolicyStatusRoles { return *v }).(AccessPolicyStatusRolesOutput)
}

func (o AccessPolicyStatusRolesPtrOutput) CustomRolesDName() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyStatusRoles) []string {
		if v == nil {
			return nil
		}
		return v.CustomRolesDName
	}).(pulumi.StringArrayOutput)
}

func (o AccessPolicyStatusRolesPtrOutput) CustomRolesDef() AccessPolicyStatusRolesCustomRolesDefArrayOutput {
	return o.ApplyT(func(v *AccessPolicyStatusRoles) []AccessPolicyStatusRolesCustomRolesDef {
		if v == nil {
			return nil
		}
		return v.CustomRolesDef
	}).(AccessPolicyStatusRolesCustomRolesDefArrayOutput)
}

func (o AccessPolicyStatusRolesPtrOutput) DefinedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyStatusRoles) []string {
		if v == nil {
			return nil
		}
		return v.DefinedRoles
	}).(pulumi.StringArrayOutput)
}

type AccessPolicyStatusRolesCustomRolesDef struct {
	CustomRoleName      string `pulumi:"customRoleName"`
	CustomRoleNamespace string `pulumi:"customRoleNamespace"`
}

// AccessPolicyStatusRolesCustomRolesDefInput is an input type that accepts AccessPolicyStatusRolesCustomRolesDefArgs and AccessPolicyStatusRolesCustomRolesDefOutput values.
// You can construct a concrete instance of `AccessPolicyStatusRolesCustomRolesDefInput` via:
//
//          AccessPolicyStatusRolesCustomRolesDefArgs{...}
type AccessPolicyStatusRolesCustomRolesDefInput interface {
	pulumi.Input

	ToAccessPolicyStatusRolesCustomRolesDefOutput() AccessPolicyStatusRolesCustomRolesDefOutput
	ToAccessPolicyStatusRolesCustomRolesDefOutputWithContext(context.Context) AccessPolicyStatusRolesCustomRolesDefOutput
}

type AccessPolicyStatusRolesCustomRolesDefArgs struct {
	CustomRoleName      pulumi.StringInput `pulumi:"customRoleName"`
	CustomRoleNamespace pulumi.StringInput `pulumi:"customRoleNamespace"`
}

func (AccessPolicyStatusRolesCustomRolesDefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusRolesCustomRolesDef)(nil)).Elem()
}

func (i AccessPolicyStatusRolesCustomRolesDefArgs) ToAccessPolicyStatusRolesCustomRolesDefOutput() AccessPolicyStatusRolesCustomRolesDefOutput {
	return i.ToAccessPolicyStatusRolesCustomRolesDefOutputWithContext(context.Background())
}

func (i AccessPolicyStatusRolesCustomRolesDefArgs) ToAccessPolicyStatusRolesCustomRolesDefOutputWithContext(ctx context.Context) AccessPolicyStatusRolesCustomRolesDefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusRolesCustomRolesDefOutput)
}

// AccessPolicyStatusRolesCustomRolesDefArrayInput is an input type that accepts AccessPolicyStatusRolesCustomRolesDefArray and AccessPolicyStatusRolesCustomRolesDefArrayOutput values.
// You can construct a concrete instance of `AccessPolicyStatusRolesCustomRolesDefArrayInput` via:
//
//          AccessPolicyStatusRolesCustomRolesDefArray{ AccessPolicyStatusRolesCustomRolesDefArgs{...} }
type AccessPolicyStatusRolesCustomRolesDefArrayInput interface {
	pulumi.Input

	ToAccessPolicyStatusRolesCustomRolesDefArrayOutput() AccessPolicyStatusRolesCustomRolesDefArrayOutput
	ToAccessPolicyStatusRolesCustomRolesDefArrayOutputWithContext(context.Context) AccessPolicyStatusRolesCustomRolesDefArrayOutput
}

type AccessPolicyStatusRolesCustomRolesDefArray []AccessPolicyStatusRolesCustomRolesDefInput

func (AccessPolicyStatusRolesCustomRolesDefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyStatusRolesCustomRolesDef)(nil)).Elem()
}

func (i AccessPolicyStatusRolesCustomRolesDefArray) ToAccessPolicyStatusRolesCustomRolesDefArrayOutput() AccessPolicyStatusRolesCustomRolesDefArrayOutput {
	return i.ToAccessPolicyStatusRolesCustomRolesDefArrayOutputWithContext(context.Background())
}

func (i AccessPolicyStatusRolesCustomRolesDefArray) ToAccessPolicyStatusRolesCustomRolesDefArrayOutputWithContext(ctx context.Context) AccessPolicyStatusRolesCustomRolesDefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusRolesCustomRolesDefArrayOutput)
}

type AccessPolicyStatusRolesCustomRolesDefOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusRolesCustomRolesDefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusRolesCustomRolesDef)(nil)).Elem()
}

func (o AccessPolicyStatusRolesCustomRolesDefOutput) ToAccessPolicyStatusRolesCustomRolesDefOutput() AccessPolicyStatusRolesCustomRolesDefOutput {
	return o
}

func (o AccessPolicyStatusRolesCustomRolesDefOutput) ToAccessPolicyStatusRolesCustomRolesDefOutputWithContext(ctx context.Context) AccessPolicyStatusRolesCustomRolesDefOutput {
	return o
}

func (o AccessPolicyStatusRolesCustomRolesDefOutput) CustomRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyStatusRolesCustomRolesDef) string { return v.CustomRoleName }).(pulumi.StringOutput)
}

func (o AccessPolicyStatusRolesCustomRolesDefOutput) CustomRoleNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyStatusRolesCustomRolesDef) string { return v.CustomRoleNamespace }).(pulumi.StringOutput)
}

type AccessPolicyStatusRolesCustomRolesDefArrayOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusRolesCustomRolesDefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessPolicyStatusRolesCustomRolesDef)(nil)).Elem()
}

func (o AccessPolicyStatusRolesCustomRolesDefArrayOutput) ToAccessPolicyStatusRolesCustomRolesDefArrayOutput() AccessPolicyStatusRolesCustomRolesDefArrayOutput {
	return o
}

func (o AccessPolicyStatusRolesCustomRolesDefArrayOutput) ToAccessPolicyStatusRolesCustomRolesDefArrayOutputWithContext(ctx context.Context) AccessPolicyStatusRolesCustomRolesDefArrayOutput {
	return o
}

func (o AccessPolicyStatusRolesCustomRolesDefArrayOutput) Index(i pulumi.IntInput) AccessPolicyStatusRolesCustomRolesDefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessPolicyStatusRolesCustomRolesDef {
		return vs[0].([]AccessPolicyStatusRolesCustomRolesDef)[vs[1].(int)]
	}).(AccessPolicyStatusRolesCustomRolesDefOutput)
}

type AccessPolicyStatusSubject struct {
	AccessGroupDef *AccessPolicyStatusSubjectAccessGroupDef `pulumi:"accessGroupDef"`
	AccessGroupID  *string                                  `pulumi:"accessGroupID"`
	ServiceID      *string                                  `pulumi:"serviceID"`
	UserEmail      *string                                  `pulumi:"userEmail"`
}

// AccessPolicyStatusSubjectInput is an input type that accepts AccessPolicyStatusSubjectArgs and AccessPolicyStatusSubjectOutput values.
// You can construct a concrete instance of `AccessPolicyStatusSubjectInput` via:
//
//          AccessPolicyStatusSubjectArgs{...}
type AccessPolicyStatusSubjectInput interface {
	pulumi.Input

	ToAccessPolicyStatusSubjectOutput() AccessPolicyStatusSubjectOutput
	ToAccessPolicyStatusSubjectOutputWithContext(context.Context) AccessPolicyStatusSubjectOutput
}

type AccessPolicyStatusSubjectArgs struct {
	AccessGroupDef AccessPolicyStatusSubjectAccessGroupDefPtrInput `pulumi:"accessGroupDef"`
	AccessGroupID  pulumi.StringPtrInput                           `pulumi:"accessGroupID"`
	ServiceID      pulumi.StringPtrInput                           `pulumi:"serviceID"`
	UserEmail      pulumi.StringPtrInput                           `pulumi:"userEmail"`
}

func (AccessPolicyStatusSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusSubject)(nil)).Elem()
}

func (i AccessPolicyStatusSubjectArgs) ToAccessPolicyStatusSubjectOutput() AccessPolicyStatusSubjectOutput {
	return i.ToAccessPolicyStatusSubjectOutputWithContext(context.Background())
}

func (i AccessPolicyStatusSubjectArgs) ToAccessPolicyStatusSubjectOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusSubjectOutput)
}

func (i AccessPolicyStatusSubjectArgs) ToAccessPolicyStatusSubjectPtrOutput() AccessPolicyStatusSubjectPtrOutput {
	return i.ToAccessPolicyStatusSubjectPtrOutputWithContext(context.Background())
}

func (i AccessPolicyStatusSubjectArgs) ToAccessPolicyStatusSubjectPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusSubjectOutput).ToAccessPolicyStatusSubjectPtrOutputWithContext(ctx)
}

// AccessPolicyStatusSubjectPtrInput is an input type that accepts AccessPolicyStatusSubjectArgs, AccessPolicyStatusSubjectPtr and AccessPolicyStatusSubjectPtrOutput values.
// You can construct a concrete instance of `AccessPolicyStatusSubjectPtrInput` via:
//
//          AccessPolicyStatusSubjectArgs{...}
//
//  or:
//
//          nil
type AccessPolicyStatusSubjectPtrInput interface {
	pulumi.Input

	ToAccessPolicyStatusSubjectPtrOutput() AccessPolicyStatusSubjectPtrOutput
	ToAccessPolicyStatusSubjectPtrOutputWithContext(context.Context) AccessPolicyStatusSubjectPtrOutput
}

type accessPolicyStatusSubjectPtrType AccessPolicyStatusSubjectArgs

func AccessPolicyStatusSubjectPtr(v *AccessPolicyStatusSubjectArgs) AccessPolicyStatusSubjectPtrInput {
	return (*accessPolicyStatusSubjectPtrType)(v)
}

func (*accessPolicyStatusSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusSubject)(nil)).Elem()
}

func (i *accessPolicyStatusSubjectPtrType) ToAccessPolicyStatusSubjectPtrOutput() AccessPolicyStatusSubjectPtrOutput {
	return i.ToAccessPolicyStatusSubjectPtrOutputWithContext(context.Background())
}

func (i *accessPolicyStatusSubjectPtrType) ToAccessPolicyStatusSubjectPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusSubjectPtrOutput)
}

type AccessPolicyStatusSubjectOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusSubject)(nil)).Elem()
}

func (o AccessPolicyStatusSubjectOutput) ToAccessPolicyStatusSubjectOutput() AccessPolicyStatusSubjectOutput {
	return o
}

func (o AccessPolicyStatusSubjectOutput) ToAccessPolicyStatusSubjectOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectOutput {
	return o
}

func (o AccessPolicyStatusSubjectOutput) ToAccessPolicyStatusSubjectPtrOutput() AccessPolicyStatusSubjectPtrOutput {
	return o.ToAccessPolicyStatusSubjectPtrOutputWithContext(context.Background())
}

func (o AccessPolicyStatusSubjectOutput) ToAccessPolicyStatusSubjectPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubject) *AccessPolicyStatusSubject {
		return &v
	}).(AccessPolicyStatusSubjectPtrOutput)
}
func (o AccessPolicyStatusSubjectOutput) AccessGroupDef() AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubject) *AccessPolicyStatusSubjectAccessGroupDef { return v.AccessGroupDef }).(AccessPolicyStatusSubjectAccessGroupDefPtrOutput)
}

func (o AccessPolicyStatusSubjectOutput) AccessGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubject) *string { return v.AccessGroupID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusSubjectOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubject) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusSubjectOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubject) *string { return v.UserEmail }).(pulumi.StringPtrOutput)
}

type AccessPolicyStatusSubjectPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusSubject)(nil)).Elem()
}

func (o AccessPolicyStatusSubjectPtrOutput) ToAccessPolicyStatusSubjectPtrOutput() AccessPolicyStatusSubjectPtrOutput {
	return o
}

func (o AccessPolicyStatusSubjectPtrOutput) ToAccessPolicyStatusSubjectPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectPtrOutput {
	return o
}

func (o AccessPolicyStatusSubjectPtrOutput) Elem() AccessPolicyStatusSubjectOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubject) AccessPolicyStatusSubject { return *v }).(AccessPolicyStatusSubjectOutput)
}

func (o AccessPolicyStatusSubjectPtrOutput) AccessGroupDef() AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubject) *AccessPolicyStatusSubjectAccessGroupDef {
		if v == nil {
			return nil
		}
		return v.AccessGroupDef
	}).(AccessPolicyStatusSubjectAccessGroupDefPtrOutput)
}

func (o AccessPolicyStatusSubjectPtrOutput) AccessGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubject) *string {
		if v == nil {
			return nil
		}
		return v.AccessGroupID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusSubjectPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubject) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusSubjectPtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubject) *string {
		if v == nil {
			return nil
		}
		return v.UserEmail
	}).(pulumi.StringPtrOutput)
}

type AccessPolicyStatusSubjectAccessGroupDef struct {
	AccessGroupName      string `pulumi:"accessGroupName"`
	AccessGroupNamespace string `pulumi:"accessGroupNamespace"`
}

// AccessPolicyStatusSubjectAccessGroupDefInput is an input type that accepts AccessPolicyStatusSubjectAccessGroupDefArgs and AccessPolicyStatusSubjectAccessGroupDefOutput values.
// You can construct a concrete instance of `AccessPolicyStatusSubjectAccessGroupDefInput` via:
//
//          AccessPolicyStatusSubjectAccessGroupDefArgs{...}
type AccessPolicyStatusSubjectAccessGroupDefInput interface {
	pulumi.Input

	ToAccessPolicyStatusSubjectAccessGroupDefOutput() AccessPolicyStatusSubjectAccessGroupDefOutput
	ToAccessPolicyStatusSubjectAccessGroupDefOutputWithContext(context.Context) AccessPolicyStatusSubjectAccessGroupDefOutput
}

type AccessPolicyStatusSubjectAccessGroupDefArgs struct {
	AccessGroupName      pulumi.StringInput `pulumi:"accessGroupName"`
	AccessGroupNamespace pulumi.StringInput `pulumi:"accessGroupNamespace"`
}

func (AccessPolicyStatusSubjectAccessGroupDefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusSubjectAccessGroupDef)(nil)).Elem()
}

func (i AccessPolicyStatusSubjectAccessGroupDefArgs) ToAccessPolicyStatusSubjectAccessGroupDefOutput() AccessPolicyStatusSubjectAccessGroupDefOutput {
	return i.ToAccessPolicyStatusSubjectAccessGroupDefOutputWithContext(context.Background())
}

func (i AccessPolicyStatusSubjectAccessGroupDefArgs) ToAccessPolicyStatusSubjectAccessGroupDefOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectAccessGroupDefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusSubjectAccessGroupDefOutput)
}

func (i AccessPolicyStatusSubjectAccessGroupDefArgs) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutput() AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return i.ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(context.Background())
}

func (i AccessPolicyStatusSubjectAccessGroupDefArgs) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusSubjectAccessGroupDefOutput).ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(ctx)
}

// AccessPolicyStatusSubjectAccessGroupDefPtrInput is an input type that accepts AccessPolicyStatusSubjectAccessGroupDefArgs, AccessPolicyStatusSubjectAccessGroupDefPtr and AccessPolicyStatusSubjectAccessGroupDefPtrOutput values.
// You can construct a concrete instance of `AccessPolicyStatusSubjectAccessGroupDefPtrInput` via:
//
//          AccessPolicyStatusSubjectAccessGroupDefArgs{...}
//
//  or:
//
//          nil
type AccessPolicyStatusSubjectAccessGroupDefPtrInput interface {
	pulumi.Input

	ToAccessPolicyStatusSubjectAccessGroupDefPtrOutput() AccessPolicyStatusSubjectAccessGroupDefPtrOutput
	ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(context.Context) AccessPolicyStatusSubjectAccessGroupDefPtrOutput
}

type accessPolicyStatusSubjectAccessGroupDefPtrType AccessPolicyStatusSubjectAccessGroupDefArgs

func AccessPolicyStatusSubjectAccessGroupDefPtr(v *AccessPolicyStatusSubjectAccessGroupDefArgs) AccessPolicyStatusSubjectAccessGroupDefPtrInput {
	return (*accessPolicyStatusSubjectAccessGroupDefPtrType)(v)
}

func (*accessPolicyStatusSubjectAccessGroupDefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusSubjectAccessGroupDef)(nil)).Elem()
}

func (i *accessPolicyStatusSubjectAccessGroupDefPtrType) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutput() AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return i.ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(context.Background())
}

func (i *accessPolicyStatusSubjectAccessGroupDefPtrType) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusSubjectAccessGroupDefPtrOutput)
}

type AccessPolicyStatusSubjectAccessGroupDefOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusSubjectAccessGroupDefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusSubjectAccessGroupDef)(nil)).Elem()
}

func (o AccessPolicyStatusSubjectAccessGroupDefOutput) ToAccessPolicyStatusSubjectAccessGroupDefOutput() AccessPolicyStatusSubjectAccessGroupDefOutput {
	return o
}

func (o AccessPolicyStatusSubjectAccessGroupDefOutput) ToAccessPolicyStatusSubjectAccessGroupDefOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectAccessGroupDefOutput {
	return o
}

func (o AccessPolicyStatusSubjectAccessGroupDefOutput) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutput() AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return o.ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(context.Background())
}

func (o AccessPolicyStatusSubjectAccessGroupDefOutput) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubjectAccessGroupDef) *AccessPolicyStatusSubjectAccessGroupDef {
		return &v
	}).(AccessPolicyStatusSubjectAccessGroupDefPtrOutput)
}
func (o AccessPolicyStatusSubjectAccessGroupDefOutput) AccessGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubjectAccessGroupDef) string { return v.AccessGroupName }).(pulumi.StringOutput)
}

func (o AccessPolicyStatusSubjectAccessGroupDefOutput) AccessGroupNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyStatusSubjectAccessGroupDef) string { return v.AccessGroupNamespace }).(pulumi.StringOutput)
}

type AccessPolicyStatusSubjectAccessGroupDefPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusSubjectAccessGroupDefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusSubjectAccessGroupDef)(nil)).Elem()
}

func (o AccessPolicyStatusSubjectAccessGroupDefPtrOutput) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutput() AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return o
}

func (o AccessPolicyStatusSubjectAccessGroupDefPtrOutput) ToAccessPolicyStatusSubjectAccessGroupDefPtrOutputWithContext(ctx context.Context) AccessPolicyStatusSubjectAccessGroupDefPtrOutput {
	return o
}

func (o AccessPolicyStatusSubjectAccessGroupDefPtrOutput) Elem() AccessPolicyStatusSubjectAccessGroupDefOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubjectAccessGroupDef) AccessPolicyStatusSubjectAccessGroupDef { return *v }).(AccessPolicyStatusSubjectAccessGroupDefOutput)
}

func (o AccessPolicyStatusSubjectAccessGroupDefPtrOutput) AccessGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubjectAccessGroupDef) *string {
		if v == nil {
			return nil
		}
		return &v.AccessGroupName
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusSubjectAccessGroupDefPtrOutput) AccessGroupNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusSubjectAccessGroupDef) *string {
		if v == nil {
			return nil
		}
		return &v.AccessGroupNamespace
	}).(pulumi.StringPtrOutput)
}

type AccessPolicyStatusTarget struct {
	ResourceGroup *string `pulumi:"resourceGroup"`
	ResourceID    *string `pulumi:"resourceID"`
	ResourceKey   *string `pulumi:"resourceKey"`
	ResourceName  *string `pulumi:"resourceName"`
	ResourceValue *string `pulumi:"resourceValue"`
	ServiceClass  *string `pulumi:"serviceClass"`
	ServiceID     *string `pulumi:"serviceID"`
}

// AccessPolicyStatusTargetInput is an input type that accepts AccessPolicyStatusTargetArgs and AccessPolicyStatusTargetOutput values.
// You can construct a concrete instance of `AccessPolicyStatusTargetInput` via:
//
//          AccessPolicyStatusTargetArgs{...}
type AccessPolicyStatusTargetInput interface {
	pulumi.Input

	ToAccessPolicyStatusTargetOutput() AccessPolicyStatusTargetOutput
	ToAccessPolicyStatusTargetOutputWithContext(context.Context) AccessPolicyStatusTargetOutput
}

type AccessPolicyStatusTargetArgs struct {
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	ResourceID    pulumi.StringPtrInput `pulumi:"resourceID"`
	ResourceKey   pulumi.StringPtrInput `pulumi:"resourceKey"`
	ResourceName  pulumi.StringPtrInput `pulumi:"resourceName"`
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	ServiceClass  pulumi.StringPtrInput `pulumi:"serviceClass"`
	ServiceID     pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (AccessPolicyStatusTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusTarget)(nil)).Elem()
}

func (i AccessPolicyStatusTargetArgs) ToAccessPolicyStatusTargetOutput() AccessPolicyStatusTargetOutput {
	return i.ToAccessPolicyStatusTargetOutputWithContext(context.Background())
}

func (i AccessPolicyStatusTargetArgs) ToAccessPolicyStatusTargetOutputWithContext(ctx context.Context) AccessPolicyStatusTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusTargetOutput)
}

func (i AccessPolicyStatusTargetArgs) ToAccessPolicyStatusTargetPtrOutput() AccessPolicyStatusTargetPtrOutput {
	return i.ToAccessPolicyStatusTargetPtrOutputWithContext(context.Background())
}

func (i AccessPolicyStatusTargetArgs) ToAccessPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AccessPolicyStatusTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusTargetOutput).ToAccessPolicyStatusTargetPtrOutputWithContext(ctx)
}

// AccessPolicyStatusTargetPtrInput is an input type that accepts AccessPolicyStatusTargetArgs, AccessPolicyStatusTargetPtr and AccessPolicyStatusTargetPtrOutput values.
// You can construct a concrete instance of `AccessPolicyStatusTargetPtrInput` via:
//
//          AccessPolicyStatusTargetArgs{...}
//
//  or:
//
//          nil
type AccessPolicyStatusTargetPtrInput interface {
	pulumi.Input

	ToAccessPolicyStatusTargetPtrOutput() AccessPolicyStatusTargetPtrOutput
	ToAccessPolicyStatusTargetPtrOutputWithContext(context.Context) AccessPolicyStatusTargetPtrOutput
}

type accessPolicyStatusTargetPtrType AccessPolicyStatusTargetArgs

func AccessPolicyStatusTargetPtr(v *AccessPolicyStatusTargetArgs) AccessPolicyStatusTargetPtrInput {
	return (*accessPolicyStatusTargetPtrType)(v)
}

func (*accessPolicyStatusTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusTarget)(nil)).Elem()
}

func (i *accessPolicyStatusTargetPtrType) ToAccessPolicyStatusTargetPtrOutput() AccessPolicyStatusTargetPtrOutput {
	return i.ToAccessPolicyStatusTargetPtrOutputWithContext(context.Background())
}

func (i *accessPolicyStatusTargetPtrType) ToAccessPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AccessPolicyStatusTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyStatusTargetPtrOutput)
}

type AccessPolicyStatusTargetOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyStatusTarget)(nil)).Elem()
}

func (o AccessPolicyStatusTargetOutput) ToAccessPolicyStatusTargetOutput() AccessPolicyStatusTargetOutput {
	return o
}

func (o AccessPolicyStatusTargetOutput) ToAccessPolicyStatusTargetOutputWithContext(ctx context.Context) AccessPolicyStatusTargetOutput {
	return o
}

func (o AccessPolicyStatusTargetOutput) ToAccessPolicyStatusTargetPtrOutput() AccessPolicyStatusTargetPtrOutput {
	return o.ToAccessPolicyStatusTargetPtrOutputWithContext(context.Background())
}

func (o AccessPolicyStatusTargetOutput) ToAccessPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AccessPolicyStatusTargetPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *AccessPolicyStatusTarget {
		return &v
	}).(AccessPolicyStatusTargetPtrOutput)
}
func (o AccessPolicyStatusTargetOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ResourceKey }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ServiceClass }).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPolicyStatusTarget) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type AccessPolicyStatusTargetPtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyStatusTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyStatusTarget)(nil)).Elem()
}

func (o AccessPolicyStatusTargetPtrOutput) ToAccessPolicyStatusTargetPtrOutput() AccessPolicyStatusTargetPtrOutput {
	return o
}

func (o AccessPolicyStatusTargetPtrOutput) ToAccessPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AccessPolicyStatusTargetPtrOutput {
	return o
}

func (o AccessPolicyStatusTargetPtrOutput) Elem() AccessPolicyStatusTargetOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) AccessPolicyStatusTarget { return *v }).(AccessPolicyStatusTargetOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceKey
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceValue
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o AccessPolicyStatusTargetPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

// AuthorizationPolicy is the Schema for the authorizationpolicies API
type AuthorizationPolicyType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AuthorizationPolicySpec defines the desired state of AuthorizationPolicy
	Spec *AuthorizationPolicySpec `pulumi:"spec"`
	// AuthorizationPolicyStatus defines the observed state of AuthorizationPolicy
	Status *AuthorizationPolicyStatus `pulumi:"status"`
}

// AuthorizationPolicyTypeInput is an input type that accepts AuthorizationPolicyTypeArgs and AuthorizationPolicyTypeOutput values.
// You can construct a concrete instance of `AuthorizationPolicyTypeInput` via:
//
//          AuthorizationPolicyTypeArgs{...}
type AuthorizationPolicyTypeInput interface {
	pulumi.Input

	ToAuthorizationPolicyTypeOutput() AuthorizationPolicyTypeOutput
	ToAuthorizationPolicyTypeOutputWithContext(context.Context) AuthorizationPolicyTypeOutput
}

// AuthorizationPolicy is the Schema for the authorizationpolicies API
type AuthorizationPolicyTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AuthorizationPolicySpec defines the desired state of AuthorizationPolicy
	Spec AuthorizationPolicySpecPtrInput `pulumi:"spec"`
	// AuthorizationPolicyStatus defines the observed state of AuthorizationPolicy
	Status AuthorizationPolicyStatusPtrInput `pulumi:"status"`
}

func (AuthorizationPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyType)(nil)).Elem()
}

func (i AuthorizationPolicyTypeArgs) ToAuthorizationPolicyTypeOutput() AuthorizationPolicyTypeOutput {
	return i.ToAuthorizationPolicyTypeOutputWithContext(context.Background())
}

func (i AuthorizationPolicyTypeArgs) ToAuthorizationPolicyTypeOutputWithContext(ctx context.Context) AuthorizationPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyTypeOutput)
}

// AuthorizationPolicy is the Schema for the authorizationpolicies API
type AuthorizationPolicyTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyType)(nil)).Elem()
}

func (o AuthorizationPolicyTypeOutput) ToAuthorizationPolicyTypeOutput() AuthorizationPolicyTypeOutput {
	return o
}

func (o AuthorizationPolicyTypeOutput) ToAuthorizationPolicyTypeOutputWithContext(ctx context.Context) AuthorizationPolicyTypeOutput {
	return o
}

func (o AuthorizationPolicyTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AuthorizationPolicySpec defines the desired state of AuthorizationPolicy
func (o AuthorizationPolicyTypeOutput) Spec() AuthorizationPolicySpecPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *AuthorizationPolicySpec { return v.Spec }).(AuthorizationPolicySpecPtrOutput)
}

// AuthorizationPolicyStatus defines the observed state of AuthorizationPolicy
func (o AuthorizationPolicyTypeOutput) Status() AuthorizationPolicyStatusPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyType) *AuthorizationPolicyStatus { return v.Status }).(AuthorizationPolicyStatusPtrOutput)
}

type AuthorizationPolicyMetadata struct {
}

// AuthorizationPolicyMetadataInput is an input type that accepts AuthorizationPolicyMetadataArgs and AuthorizationPolicyMetadataOutput values.
// You can construct a concrete instance of `AuthorizationPolicyMetadataInput` via:
//
//          AuthorizationPolicyMetadataArgs{...}
type AuthorizationPolicyMetadataInput interface {
	pulumi.Input

	ToAuthorizationPolicyMetadataOutput() AuthorizationPolicyMetadataOutput
	ToAuthorizationPolicyMetadataOutputWithContext(context.Context) AuthorizationPolicyMetadataOutput
}

type AuthorizationPolicyMetadataArgs struct {
}

func (AuthorizationPolicyMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyMetadata)(nil)).Elem()
}

func (i AuthorizationPolicyMetadataArgs) ToAuthorizationPolicyMetadataOutput() AuthorizationPolicyMetadataOutput {
	return i.ToAuthorizationPolicyMetadataOutputWithContext(context.Background())
}

func (i AuthorizationPolicyMetadataArgs) ToAuthorizationPolicyMetadataOutputWithContext(ctx context.Context) AuthorizationPolicyMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyMetadataOutput)
}

type AuthorizationPolicyMetadataOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyMetadata)(nil)).Elem()
}

func (o AuthorizationPolicyMetadataOutput) ToAuthorizationPolicyMetadataOutput() AuthorizationPolicyMetadataOutput {
	return o
}

func (o AuthorizationPolicyMetadataOutput) ToAuthorizationPolicyMetadataOutputWithContext(ctx context.Context) AuthorizationPolicyMetadataOutput {
	return o
}

// AuthorizationPolicySpec defines the desired state of AuthorizationPolicy
type AuthorizationPolicySpec struct {
	Roles  []string                      `pulumi:"roles"`
	Source AuthorizationPolicySpecSource `pulumi:"source"`
	Target AuthorizationPolicySpecTarget `pulumi:"target"`
}

// AuthorizationPolicySpecInput is an input type that accepts AuthorizationPolicySpecArgs and AuthorizationPolicySpecOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecInput` via:
//
//          AuthorizationPolicySpecArgs{...}
type AuthorizationPolicySpecInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecOutput() AuthorizationPolicySpecOutput
	ToAuthorizationPolicySpecOutputWithContext(context.Context) AuthorizationPolicySpecOutput
}

// AuthorizationPolicySpec defines the desired state of AuthorizationPolicy
type AuthorizationPolicySpecArgs struct {
	Roles  pulumi.StringArrayInput            `pulumi:"roles"`
	Source AuthorizationPolicySpecSourceInput `pulumi:"source"`
	Target AuthorizationPolicySpecTargetInput `pulumi:"target"`
}

func (AuthorizationPolicySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpec)(nil)).Elem()
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecOutput() AuthorizationPolicySpecOutput {
	return i.ToAuthorizationPolicySpecOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecOutputWithContext(ctx context.Context) AuthorizationPolicySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecOutput)
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return i.ToAuthorizationPolicySpecPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecArgs) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecOutput).ToAuthorizationPolicySpecPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecPtrInput is an input type that accepts AuthorizationPolicySpecArgs, AuthorizationPolicySpecPtr and AuthorizationPolicySpecPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecPtrInput` via:
//
//          AuthorizationPolicySpecArgs{...}
//
//  or:
//
//          nil
type AuthorizationPolicySpecPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput
	ToAuthorizationPolicySpecPtrOutputWithContext(context.Context) AuthorizationPolicySpecPtrOutput
}

type authorizationPolicySpecPtrType AuthorizationPolicySpecArgs

func AuthorizationPolicySpecPtr(v *AuthorizationPolicySpecArgs) AuthorizationPolicySpecPtrInput {
	return (*authorizationPolicySpecPtrType)(v)
}

func (*authorizationPolicySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpec)(nil)).Elem()
}

func (i *authorizationPolicySpecPtrType) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return i.ToAuthorizationPolicySpecPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecPtrType) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecPtrOutput)
}

// AuthorizationPolicySpec defines the desired state of AuthorizationPolicy
type AuthorizationPolicySpecOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpec)(nil)).Elem()
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecOutput() AuthorizationPolicySpecOutput {
	return o
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecOutputWithContext(ctx context.Context) AuthorizationPolicySpecOutput {
	return o
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return o.ToAuthorizationPolicySpecPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecOutput) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) *AuthorizationPolicySpec {
		return &v
	}).(AuthorizationPolicySpecPtrOutput)
}
func (o AuthorizationPolicySpecOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o AuthorizationPolicySpecOutput) Source() AuthorizationPolicySpecSourceOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) AuthorizationPolicySpecSource { return v.Source }).(AuthorizationPolicySpecSourceOutput)
}

func (o AuthorizationPolicySpecOutput) Target() AuthorizationPolicySpecTargetOutput {
	return o.ApplyT(func(v AuthorizationPolicySpec) AuthorizationPolicySpecTarget { return v.Target }).(AuthorizationPolicySpecTargetOutput)
}

type AuthorizationPolicySpecPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpec)(nil)).Elem()
}

func (o AuthorizationPolicySpecPtrOutput) ToAuthorizationPolicySpecPtrOutput() AuthorizationPolicySpecPtrOutput {
	return o
}

func (o AuthorizationPolicySpecPtrOutput) ToAuthorizationPolicySpecPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecPtrOutput {
	return o
}

func (o AuthorizationPolicySpecPtrOutput) Elem() AuthorizationPolicySpecOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) AuthorizationPolicySpec { return *v }).(AuthorizationPolicySpecOutput)
}

func (o AuthorizationPolicySpecPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

func (o AuthorizationPolicySpecPtrOutput) Source() AuthorizationPolicySpecSourcePtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) *AuthorizationPolicySpecSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(AuthorizationPolicySpecSourcePtrOutput)
}

func (o AuthorizationPolicySpecPtrOutput) Target() AuthorizationPolicySpecTargetPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpec) *AuthorizationPolicySpecTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(AuthorizationPolicySpecTargetPtrOutput)
}

type AuthorizationPolicySpecSource struct {
	ResourceGroup *string `pulumi:"resourceGroup"`
	ResourceID    *string `pulumi:"resourceID"`
	ResourceKey   *string `pulumi:"resourceKey"`
	ResourceName  *string `pulumi:"resourceName"`
	ResourceValue *string `pulumi:"resourceValue"`
	ServiceClass  string  `pulumi:"serviceClass"`
	ServiceID     *string `pulumi:"serviceID"`
}

// AuthorizationPolicySpecSourceInput is an input type that accepts AuthorizationPolicySpecSourceArgs and AuthorizationPolicySpecSourceOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecSourceInput` via:
//
//          AuthorizationPolicySpecSourceArgs{...}
type AuthorizationPolicySpecSourceInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecSourceOutput() AuthorizationPolicySpecSourceOutput
	ToAuthorizationPolicySpecSourceOutputWithContext(context.Context) AuthorizationPolicySpecSourceOutput
}

type AuthorizationPolicySpecSourceArgs struct {
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	ResourceID    pulumi.StringPtrInput `pulumi:"resourceID"`
	ResourceKey   pulumi.StringPtrInput `pulumi:"resourceKey"`
	ResourceName  pulumi.StringPtrInput `pulumi:"resourceName"`
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	ServiceClass  pulumi.StringInput    `pulumi:"serviceClass"`
	ServiceID     pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (AuthorizationPolicySpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecSource)(nil)).Elem()
}

func (i AuthorizationPolicySpecSourceArgs) ToAuthorizationPolicySpecSourceOutput() AuthorizationPolicySpecSourceOutput {
	return i.ToAuthorizationPolicySpecSourceOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecSourceArgs) ToAuthorizationPolicySpecSourceOutputWithContext(ctx context.Context) AuthorizationPolicySpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSourceOutput)
}

func (i AuthorizationPolicySpecSourceArgs) ToAuthorizationPolicySpecSourcePtrOutput() AuthorizationPolicySpecSourcePtrOutput {
	return i.ToAuthorizationPolicySpecSourcePtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecSourceArgs) ToAuthorizationPolicySpecSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSourceOutput).ToAuthorizationPolicySpecSourcePtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecSourcePtrInput is an input type that accepts AuthorizationPolicySpecSourceArgs, AuthorizationPolicySpecSourcePtr and AuthorizationPolicySpecSourcePtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecSourcePtrInput` via:
//
//          AuthorizationPolicySpecSourceArgs{...}
//
//  or:
//
//          nil
type AuthorizationPolicySpecSourcePtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecSourcePtrOutput() AuthorizationPolicySpecSourcePtrOutput
	ToAuthorizationPolicySpecSourcePtrOutputWithContext(context.Context) AuthorizationPolicySpecSourcePtrOutput
}

type authorizationPolicySpecSourcePtrType AuthorizationPolicySpecSourceArgs

func AuthorizationPolicySpecSourcePtr(v *AuthorizationPolicySpecSourceArgs) AuthorizationPolicySpecSourcePtrInput {
	return (*authorizationPolicySpecSourcePtrType)(v)
}

func (*authorizationPolicySpecSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecSource)(nil)).Elem()
}

func (i *authorizationPolicySpecSourcePtrType) ToAuthorizationPolicySpecSourcePtrOutput() AuthorizationPolicySpecSourcePtrOutput {
	return i.ToAuthorizationPolicySpecSourcePtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecSourcePtrType) ToAuthorizationPolicySpecSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecSourcePtrOutput)
}

type AuthorizationPolicySpecSourceOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecSource)(nil)).Elem()
}

func (o AuthorizationPolicySpecSourceOutput) ToAuthorizationPolicySpecSourceOutput() AuthorizationPolicySpecSourceOutput {
	return o
}

func (o AuthorizationPolicySpecSourceOutput) ToAuthorizationPolicySpecSourceOutputWithContext(ctx context.Context) AuthorizationPolicySpecSourceOutput {
	return o
}

func (o AuthorizationPolicySpecSourceOutput) ToAuthorizationPolicySpecSourcePtrOutput() AuthorizationPolicySpecSourcePtrOutput {
	return o.ToAuthorizationPolicySpecSourcePtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecSourceOutput) ToAuthorizationPolicySpecSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSourcePtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *AuthorizationPolicySpecSource {
		return &v
	}).(AuthorizationPolicySpecSourcePtrOutput)
}
func (o AuthorizationPolicySpecSourceOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourceOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourceOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *string { return v.ResourceKey }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourceOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourceOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourceOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) string { return v.ServiceClass }).(pulumi.StringOutput)
}

func (o AuthorizationPolicySpecSourceOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecSource) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecSourcePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecSource)(nil)).Elem()
}

func (o AuthorizationPolicySpecSourcePtrOutput) ToAuthorizationPolicySpecSourcePtrOutput() AuthorizationPolicySpecSourcePtrOutput {
	return o
}

func (o AuthorizationPolicySpecSourcePtrOutput) ToAuthorizationPolicySpecSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecSourcePtrOutput {
	return o
}

func (o AuthorizationPolicySpecSourcePtrOutput) Elem() AuthorizationPolicySpecSourceOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) AuthorizationPolicySpecSource { return *v }).(AuthorizationPolicySpecSourceOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceKey
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceValue
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecSourcePtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecSource) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTarget struct {
	ResourceGroup *string `pulumi:"resourceGroup"`
	ResourceID    *string `pulumi:"resourceID"`
	ResourceKey   *string `pulumi:"resourceKey"`
	ResourceName  *string `pulumi:"resourceName"`
	ResourceValue *string `pulumi:"resourceValue"`
	ServiceClass  string  `pulumi:"serviceClass"`
	ServiceID     *string `pulumi:"serviceID"`
}

// AuthorizationPolicySpecTargetInput is an input type that accepts AuthorizationPolicySpecTargetArgs and AuthorizationPolicySpecTargetOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetInput` via:
//
//          AuthorizationPolicySpecTargetArgs{...}
type AuthorizationPolicySpecTargetInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetOutput() AuthorizationPolicySpecTargetOutput
	ToAuthorizationPolicySpecTargetOutputWithContext(context.Context) AuthorizationPolicySpecTargetOutput
}

type AuthorizationPolicySpecTargetArgs struct {
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	ResourceID    pulumi.StringPtrInput `pulumi:"resourceID"`
	ResourceKey   pulumi.StringPtrInput `pulumi:"resourceKey"`
	ResourceName  pulumi.StringPtrInput `pulumi:"resourceName"`
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	ServiceClass  pulumi.StringInput    `pulumi:"serviceClass"`
	ServiceID     pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (AuthorizationPolicySpecTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTarget)(nil)).Elem()
}

func (i AuthorizationPolicySpecTargetArgs) ToAuthorizationPolicySpecTargetOutput() AuthorizationPolicySpecTargetOutput {
	return i.ToAuthorizationPolicySpecTargetOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetArgs) ToAuthorizationPolicySpecTargetOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetOutput)
}

func (i AuthorizationPolicySpecTargetArgs) ToAuthorizationPolicySpecTargetPtrOutput() AuthorizationPolicySpecTargetPtrOutput {
	return i.ToAuthorizationPolicySpecTargetPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicySpecTargetArgs) ToAuthorizationPolicySpecTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetOutput).ToAuthorizationPolicySpecTargetPtrOutputWithContext(ctx)
}

// AuthorizationPolicySpecTargetPtrInput is an input type that accepts AuthorizationPolicySpecTargetArgs, AuthorizationPolicySpecTargetPtr and AuthorizationPolicySpecTargetPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicySpecTargetPtrInput` via:
//
//          AuthorizationPolicySpecTargetArgs{...}
//
//  or:
//
//          nil
type AuthorizationPolicySpecTargetPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicySpecTargetPtrOutput() AuthorizationPolicySpecTargetPtrOutput
	ToAuthorizationPolicySpecTargetPtrOutputWithContext(context.Context) AuthorizationPolicySpecTargetPtrOutput
}

type authorizationPolicySpecTargetPtrType AuthorizationPolicySpecTargetArgs

func AuthorizationPolicySpecTargetPtr(v *AuthorizationPolicySpecTargetArgs) AuthorizationPolicySpecTargetPtrInput {
	return (*authorizationPolicySpecTargetPtrType)(v)
}

func (*authorizationPolicySpecTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecTarget)(nil)).Elem()
}

func (i *authorizationPolicySpecTargetPtrType) ToAuthorizationPolicySpecTargetPtrOutput() AuthorizationPolicySpecTargetPtrOutput {
	return i.ToAuthorizationPolicySpecTargetPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicySpecTargetPtrType) ToAuthorizationPolicySpecTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicySpecTargetPtrOutput)
}

type AuthorizationPolicySpecTargetOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicySpecTarget)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetOutput) ToAuthorizationPolicySpecTargetOutput() AuthorizationPolicySpecTargetOutput {
	return o
}

func (o AuthorizationPolicySpecTargetOutput) ToAuthorizationPolicySpecTargetOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetOutput {
	return o
}

func (o AuthorizationPolicySpecTargetOutput) ToAuthorizationPolicySpecTargetPtrOutput() AuthorizationPolicySpecTargetPtrOutput {
	return o.ToAuthorizationPolicySpecTargetPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicySpecTargetOutput) ToAuthorizationPolicySpecTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *AuthorizationPolicySpecTarget {
		return &v
	}).(AuthorizationPolicySpecTargetPtrOutput)
}
func (o AuthorizationPolicySpecTargetOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *string { return v.ResourceKey }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) string { return v.ServiceClass }).(pulumi.StringOutput)
}

func (o AuthorizationPolicySpecTargetOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicySpecTarget) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicySpecTargetPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicySpecTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicySpecTarget)(nil)).Elem()
}

func (o AuthorizationPolicySpecTargetPtrOutput) ToAuthorizationPolicySpecTargetPtrOutput() AuthorizationPolicySpecTargetPtrOutput {
	return o
}

func (o AuthorizationPolicySpecTargetPtrOutput) ToAuthorizationPolicySpecTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicySpecTargetPtrOutput {
	return o
}

func (o AuthorizationPolicySpecTargetPtrOutput) Elem() AuthorizationPolicySpecTargetOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) AuthorizationPolicySpecTarget { return *v }).(AuthorizationPolicySpecTargetOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceKey
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceValue
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicySpecTargetPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicySpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

// AuthorizationPolicyStatus defines the observed state of AuthorizationPolicy
type AuthorizationPolicyStatus struct {
	Message  *string                          `pulumi:"message"`
	PolicyID *string                          `pulumi:"policyID"`
	Roles    []string                         `pulumi:"roles"`
	Source   *AuthorizationPolicyStatusSource `pulumi:"source"`
	State    *string                          `pulumi:"state"`
	Target   *AuthorizationPolicyStatusTarget `pulumi:"target"`
}

// AuthorizationPolicyStatusInput is an input type that accepts AuthorizationPolicyStatusArgs and AuthorizationPolicyStatusOutput values.
// You can construct a concrete instance of `AuthorizationPolicyStatusInput` via:
//
//          AuthorizationPolicyStatusArgs{...}
type AuthorizationPolicyStatusInput interface {
	pulumi.Input

	ToAuthorizationPolicyStatusOutput() AuthorizationPolicyStatusOutput
	ToAuthorizationPolicyStatusOutputWithContext(context.Context) AuthorizationPolicyStatusOutput
}

// AuthorizationPolicyStatus defines the observed state of AuthorizationPolicy
type AuthorizationPolicyStatusArgs struct {
	Message  pulumi.StringPtrInput                   `pulumi:"message"`
	PolicyID pulumi.StringPtrInput                   `pulumi:"policyID"`
	Roles    pulumi.StringArrayInput                 `pulumi:"roles"`
	Source   AuthorizationPolicyStatusSourcePtrInput `pulumi:"source"`
	State    pulumi.StringPtrInput                   `pulumi:"state"`
	Target   AuthorizationPolicyStatusTargetPtrInput `pulumi:"target"`
}

func (AuthorizationPolicyStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyStatus)(nil)).Elem()
}

func (i AuthorizationPolicyStatusArgs) ToAuthorizationPolicyStatusOutput() AuthorizationPolicyStatusOutput {
	return i.ToAuthorizationPolicyStatusOutputWithContext(context.Background())
}

func (i AuthorizationPolicyStatusArgs) ToAuthorizationPolicyStatusOutputWithContext(ctx context.Context) AuthorizationPolicyStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusOutput)
}

func (i AuthorizationPolicyStatusArgs) ToAuthorizationPolicyStatusPtrOutput() AuthorizationPolicyStatusPtrOutput {
	return i.ToAuthorizationPolicyStatusPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicyStatusArgs) ToAuthorizationPolicyStatusPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusOutput).ToAuthorizationPolicyStatusPtrOutputWithContext(ctx)
}

// AuthorizationPolicyStatusPtrInput is an input type that accepts AuthorizationPolicyStatusArgs, AuthorizationPolicyStatusPtr and AuthorizationPolicyStatusPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicyStatusPtrInput` via:
//
//          AuthorizationPolicyStatusArgs{...}
//
//  or:
//
//          nil
type AuthorizationPolicyStatusPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicyStatusPtrOutput() AuthorizationPolicyStatusPtrOutput
	ToAuthorizationPolicyStatusPtrOutputWithContext(context.Context) AuthorizationPolicyStatusPtrOutput
}

type authorizationPolicyStatusPtrType AuthorizationPolicyStatusArgs

func AuthorizationPolicyStatusPtr(v *AuthorizationPolicyStatusArgs) AuthorizationPolicyStatusPtrInput {
	return (*authorizationPolicyStatusPtrType)(v)
}

func (*authorizationPolicyStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyStatus)(nil)).Elem()
}

func (i *authorizationPolicyStatusPtrType) ToAuthorizationPolicyStatusPtrOutput() AuthorizationPolicyStatusPtrOutput {
	return i.ToAuthorizationPolicyStatusPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicyStatusPtrType) ToAuthorizationPolicyStatusPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusPtrOutput)
}

// AuthorizationPolicyStatus defines the observed state of AuthorizationPolicy
type AuthorizationPolicyStatusOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyStatus)(nil)).Elem()
}

func (o AuthorizationPolicyStatusOutput) ToAuthorizationPolicyStatusOutput() AuthorizationPolicyStatusOutput {
	return o
}

func (o AuthorizationPolicyStatusOutput) ToAuthorizationPolicyStatusOutputWithContext(ctx context.Context) AuthorizationPolicyStatusOutput {
	return o
}

func (o AuthorizationPolicyStatusOutput) ToAuthorizationPolicyStatusPtrOutput() AuthorizationPolicyStatusPtrOutput {
	return o.ToAuthorizationPolicyStatusPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicyStatusOutput) ToAuthorizationPolicyStatusPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) *AuthorizationPolicyStatus {
		return &v
	}).(AuthorizationPolicyStatusPtrOutput)
}
func (o AuthorizationPolicyStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) *string { return v.PolicyID }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o AuthorizationPolicyStatusOutput) Source() AuthorizationPolicyStatusSourcePtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) *AuthorizationPolicyStatusSource { return v.Source }).(AuthorizationPolicyStatusSourcePtrOutput)
}

func (o AuthorizationPolicyStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusOutput) Target() AuthorizationPolicyStatusTargetPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatus) *AuthorizationPolicyStatusTarget { return v.Target }).(AuthorizationPolicyStatusTargetPtrOutput)
}

type AuthorizationPolicyStatusPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyStatus)(nil)).Elem()
}

func (o AuthorizationPolicyStatusPtrOutput) ToAuthorizationPolicyStatusPtrOutput() AuthorizationPolicyStatusPtrOutput {
	return o
}

func (o AuthorizationPolicyStatusPtrOutput) ToAuthorizationPolicyStatusPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusPtrOutput {
	return o
}

func (o AuthorizationPolicyStatusPtrOutput) Elem() AuthorizationPolicyStatusOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) AuthorizationPolicyStatus { return *v }).(AuthorizationPolicyStatusOutput)
}

func (o AuthorizationPolicyStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusPtrOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) *string {
		if v == nil {
			return nil
		}
		return v.PolicyID
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

func (o AuthorizationPolicyStatusPtrOutput) Source() AuthorizationPolicyStatusSourcePtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) *AuthorizationPolicyStatusSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(AuthorizationPolicyStatusSourcePtrOutput)
}

func (o AuthorizationPolicyStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusPtrOutput) Target() AuthorizationPolicyStatusTargetPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatus) *AuthorizationPolicyStatusTarget {
		if v == nil {
			return nil
		}
		return v.Target
	}).(AuthorizationPolicyStatusTargetPtrOutput)
}

type AuthorizationPolicyStatusSource struct {
	ResourceGroup *string `pulumi:"resourceGroup"`
	ResourceID    *string `pulumi:"resourceID"`
	ResourceKey   *string `pulumi:"resourceKey"`
	ResourceName  *string `pulumi:"resourceName"`
	ResourceValue *string `pulumi:"resourceValue"`
	ServiceClass  string  `pulumi:"serviceClass"`
	ServiceID     *string `pulumi:"serviceID"`
}

// AuthorizationPolicyStatusSourceInput is an input type that accepts AuthorizationPolicyStatusSourceArgs and AuthorizationPolicyStatusSourceOutput values.
// You can construct a concrete instance of `AuthorizationPolicyStatusSourceInput` via:
//
//          AuthorizationPolicyStatusSourceArgs{...}
type AuthorizationPolicyStatusSourceInput interface {
	pulumi.Input

	ToAuthorizationPolicyStatusSourceOutput() AuthorizationPolicyStatusSourceOutput
	ToAuthorizationPolicyStatusSourceOutputWithContext(context.Context) AuthorizationPolicyStatusSourceOutput
}

type AuthorizationPolicyStatusSourceArgs struct {
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	ResourceID    pulumi.StringPtrInput `pulumi:"resourceID"`
	ResourceKey   pulumi.StringPtrInput `pulumi:"resourceKey"`
	ResourceName  pulumi.StringPtrInput `pulumi:"resourceName"`
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	ServiceClass  pulumi.StringInput    `pulumi:"serviceClass"`
	ServiceID     pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (AuthorizationPolicyStatusSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyStatusSource)(nil)).Elem()
}

func (i AuthorizationPolicyStatusSourceArgs) ToAuthorizationPolicyStatusSourceOutput() AuthorizationPolicyStatusSourceOutput {
	return i.ToAuthorizationPolicyStatusSourceOutputWithContext(context.Background())
}

func (i AuthorizationPolicyStatusSourceArgs) ToAuthorizationPolicyStatusSourceOutputWithContext(ctx context.Context) AuthorizationPolicyStatusSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusSourceOutput)
}

func (i AuthorizationPolicyStatusSourceArgs) ToAuthorizationPolicyStatusSourcePtrOutput() AuthorizationPolicyStatusSourcePtrOutput {
	return i.ToAuthorizationPolicyStatusSourcePtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicyStatusSourceArgs) ToAuthorizationPolicyStatusSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusSourceOutput).ToAuthorizationPolicyStatusSourcePtrOutputWithContext(ctx)
}

// AuthorizationPolicyStatusSourcePtrInput is an input type that accepts AuthorizationPolicyStatusSourceArgs, AuthorizationPolicyStatusSourcePtr and AuthorizationPolicyStatusSourcePtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicyStatusSourcePtrInput` via:
//
//          AuthorizationPolicyStatusSourceArgs{...}
//
//  or:
//
//          nil
type AuthorizationPolicyStatusSourcePtrInput interface {
	pulumi.Input

	ToAuthorizationPolicyStatusSourcePtrOutput() AuthorizationPolicyStatusSourcePtrOutput
	ToAuthorizationPolicyStatusSourcePtrOutputWithContext(context.Context) AuthorizationPolicyStatusSourcePtrOutput
}

type authorizationPolicyStatusSourcePtrType AuthorizationPolicyStatusSourceArgs

func AuthorizationPolicyStatusSourcePtr(v *AuthorizationPolicyStatusSourceArgs) AuthorizationPolicyStatusSourcePtrInput {
	return (*authorizationPolicyStatusSourcePtrType)(v)
}

func (*authorizationPolicyStatusSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyStatusSource)(nil)).Elem()
}

func (i *authorizationPolicyStatusSourcePtrType) ToAuthorizationPolicyStatusSourcePtrOutput() AuthorizationPolicyStatusSourcePtrOutput {
	return i.ToAuthorizationPolicyStatusSourcePtrOutputWithContext(context.Background())
}

func (i *authorizationPolicyStatusSourcePtrType) ToAuthorizationPolicyStatusSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusSourcePtrOutput)
}

type AuthorizationPolicyStatusSourceOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyStatusSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyStatusSource)(nil)).Elem()
}

func (o AuthorizationPolicyStatusSourceOutput) ToAuthorizationPolicyStatusSourceOutput() AuthorizationPolicyStatusSourceOutput {
	return o
}

func (o AuthorizationPolicyStatusSourceOutput) ToAuthorizationPolicyStatusSourceOutputWithContext(ctx context.Context) AuthorizationPolicyStatusSourceOutput {
	return o
}

func (o AuthorizationPolicyStatusSourceOutput) ToAuthorizationPolicyStatusSourcePtrOutput() AuthorizationPolicyStatusSourcePtrOutput {
	return o.ToAuthorizationPolicyStatusSourcePtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicyStatusSourceOutput) ToAuthorizationPolicyStatusSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusSourcePtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *AuthorizationPolicyStatusSource {
		return &v
	}).(AuthorizationPolicyStatusSourcePtrOutput)
}
func (o AuthorizationPolicyStatusSourceOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourceOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourceOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *string { return v.ResourceKey }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourceOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourceOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourceOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) string { return v.ServiceClass }).(pulumi.StringOutput)
}

func (o AuthorizationPolicyStatusSourceOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusSource) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicyStatusSourcePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyStatusSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyStatusSource)(nil)).Elem()
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ToAuthorizationPolicyStatusSourcePtrOutput() AuthorizationPolicyStatusSourcePtrOutput {
	return o
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ToAuthorizationPolicyStatusSourcePtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusSourcePtrOutput {
	return o
}

func (o AuthorizationPolicyStatusSourcePtrOutput) Elem() AuthorizationPolicyStatusSourceOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) AuthorizationPolicyStatusSource { return *v }).(AuthorizationPolicyStatusSourceOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceKey
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceValue
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusSourcePtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusSource) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPolicyStatusTarget struct {
	ResourceGroup *string `pulumi:"resourceGroup"`
	ResourceID    *string `pulumi:"resourceID"`
	ResourceKey   *string `pulumi:"resourceKey"`
	ResourceName  *string `pulumi:"resourceName"`
	ResourceValue *string `pulumi:"resourceValue"`
	ServiceClass  string  `pulumi:"serviceClass"`
	ServiceID     *string `pulumi:"serviceID"`
}

// AuthorizationPolicyStatusTargetInput is an input type that accepts AuthorizationPolicyStatusTargetArgs and AuthorizationPolicyStatusTargetOutput values.
// You can construct a concrete instance of `AuthorizationPolicyStatusTargetInput` via:
//
//          AuthorizationPolicyStatusTargetArgs{...}
type AuthorizationPolicyStatusTargetInput interface {
	pulumi.Input

	ToAuthorizationPolicyStatusTargetOutput() AuthorizationPolicyStatusTargetOutput
	ToAuthorizationPolicyStatusTargetOutputWithContext(context.Context) AuthorizationPolicyStatusTargetOutput
}

type AuthorizationPolicyStatusTargetArgs struct {
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	ResourceID    pulumi.StringPtrInput `pulumi:"resourceID"`
	ResourceKey   pulumi.StringPtrInput `pulumi:"resourceKey"`
	ResourceName  pulumi.StringPtrInput `pulumi:"resourceName"`
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	ServiceClass  pulumi.StringInput    `pulumi:"serviceClass"`
	ServiceID     pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (AuthorizationPolicyStatusTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyStatusTarget)(nil)).Elem()
}

func (i AuthorizationPolicyStatusTargetArgs) ToAuthorizationPolicyStatusTargetOutput() AuthorizationPolicyStatusTargetOutput {
	return i.ToAuthorizationPolicyStatusTargetOutputWithContext(context.Background())
}

func (i AuthorizationPolicyStatusTargetArgs) ToAuthorizationPolicyStatusTargetOutputWithContext(ctx context.Context) AuthorizationPolicyStatusTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusTargetOutput)
}

func (i AuthorizationPolicyStatusTargetArgs) ToAuthorizationPolicyStatusTargetPtrOutput() AuthorizationPolicyStatusTargetPtrOutput {
	return i.ToAuthorizationPolicyStatusTargetPtrOutputWithContext(context.Background())
}

func (i AuthorizationPolicyStatusTargetArgs) ToAuthorizationPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusTargetOutput).ToAuthorizationPolicyStatusTargetPtrOutputWithContext(ctx)
}

// AuthorizationPolicyStatusTargetPtrInput is an input type that accepts AuthorizationPolicyStatusTargetArgs, AuthorizationPolicyStatusTargetPtr and AuthorizationPolicyStatusTargetPtrOutput values.
// You can construct a concrete instance of `AuthorizationPolicyStatusTargetPtrInput` via:
//
//          AuthorizationPolicyStatusTargetArgs{...}
//
//  or:
//
//          nil
type AuthorizationPolicyStatusTargetPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicyStatusTargetPtrOutput() AuthorizationPolicyStatusTargetPtrOutput
	ToAuthorizationPolicyStatusTargetPtrOutputWithContext(context.Context) AuthorizationPolicyStatusTargetPtrOutput
}

type authorizationPolicyStatusTargetPtrType AuthorizationPolicyStatusTargetArgs

func AuthorizationPolicyStatusTargetPtr(v *AuthorizationPolicyStatusTargetArgs) AuthorizationPolicyStatusTargetPtrInput {
	return (*authorizationPolicyStatusTargetPtrType)(v)
}

func (*authorizationPolicyStatusTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyStatusTarget)(nil)).Elem()
}

func (i *authorizationPolicyStatusTargetPtrType) ToAuthorizationPolicyStatusTargetPtrOutput() AuthorizationPolicyStatusTargetPtrOutput {
	return i.ToAuthorizationPolicyStatusTargetPtrOutputWithContext(context.Background())
}

func (i *authorizationPolicyStatusTargetPtrType) ToAuthorizationPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyStatusTargetPtrOutput)
}

type AuthorizationPolicyStatusTargetOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyStatusTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyStatusTarget)(nil)).Elem()
}

func (o AuthorizationPolicyStatusTargetOutput) ToAuthorizationPolicyStatusTargetOutput() AuthorizationPolicyStatusTargetOutput {
	return o
}

func (o AuthorizationPolicyStatusTargetOutput) ToAuthorizationPolicyStatusTargetOutputWithContext(ctx context.Context) AuthorizationPolicyStatusTargetOutput {
	return o
}

func (o AuthorizationPolicyStatusTargetOutput) ToAuthorizationPolicyStatusTargetPtrOutput() AuthorizationPolicyStatusTargetPtrOutput {
	return o.ToAuthorizationPolicyStatusTargetPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicyStatusTargetOutput) ToAuthorizationPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusTargetPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *AuthorizationPolicyStatusTarget {
		return &v
	}).(AuthorizationPolicyStatusTargetPtrOutput)
}
func (o AuthorizationPolicyStatusTargetOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *string { return v.ResourceID }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *string { return v.ResourceKey }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) string { return v.ServiceClass }).(pulumi.StringOutput)
}

func (o AuthorizationPolicyStatusTargetOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPolicyStatusTarget) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type AuthorizationPolicyStatusTargetPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyStatusTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyStatusTarget)(nil)).Elem()
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ToAuthorizationPolicyStatusTargetPtrOutput() AuthorizationPolicyStatusTargetPtrOutput {
	return o
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ToAuthorizationPolicyStatusTargetPtrOutputWithContext(ctx context.Context) AuthorizationPolicyStatusTargetPtrOutput {
	return o
}

func (o AuthorizationPolicyStatusTargetPtrOutput) Elem() AuthorizationPolicyStatusTargetOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) AuthorizationPolicyStatusTarget { return *v }).(AuthorizationPolicyStatusTargetOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceID
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ResourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceKey
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ResourceValue
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o AuthorizationPolicyStatusTargetPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyStatusTarget) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

// CustomRole is the Schema for the customroles API
type CustomRoleType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// CustomRoleSpec defines the desired state of CustomRole
	Spec *CustomRoleSpec `pulumi:"spec"`
	// CustomRoleStatus defines the observed state of CustomRole
	Status *CustomRoleStatus `pulumi:"status"`
}

// CustomRoleTypeInput is an input type that accepts CustomRoleTypeArgs and CustomRoleTypeOutput values.
// You can construct a concrete instance of `CustomRoleTypeInput` via:
//
//          CustomRoleTypeArgs{...}
type CustomRoleTypeInput interface {
	pulumi.Input

	ToCustomRoleTypeOutput() CustomRoleTypeOutput
	ToCustomRoleTypeOutputWithContext(context.Context) CustomRoleTypeOutput
}

// CustomRole is the Schema for the customroles API
type CustomRoleTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// CustomRoleSpec defines the desired state of CustomRole
	Spec CustomRoleSpecPtrInput `pulumi:"spec"`
	// CustomRoleStatus defines the observed state of CustomRole
	Status CustomRoleStatusPtrInput `pulumi:"status"`
}

func (CustomRoleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleType)(nil)).Elem()
}

func (i CustomRoleTypeArgs) ToCustomRoleTypeOutput() CustomRoleTypeOutput {
	return i.ToCustomRoleTypeOutputWithContext(context.Background())
}

func (i CustomRoleTypeArgs) ToCustomRoleTypeOutputWithContext(ctx context.Context) CustomRoleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleTypeOutput)
}

// CustomRole is the Schema for the customroles API
type CustomRoleTypeOutput struct{ *pulumi.OutputState }

func (CustomRoleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleType)(nil)).Elem()
}

func (o CustomRoleTypeOutput) ToCustomRoleTypeOutput() CustomRoleTypeOutput {
	return o
}

func (o CustomRoleTypeOutput) ToCustomRoleTypeOutputWithContext(ctx context.Context) CustomRoleTypeOutput {
	return o
}

func (o CustomRoleTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o CustomRoleTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CustomRoleTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v CustomRoleType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// CustomRoleSpec defines the desired state of CustomRole
func (o CustomRoleTypeOutput) Spec() CustomRoleSpecPtrOutput {
	return o.ApplyT(func(v CustomRoleType) *CustomRoleSpec { return v.Spec }).(CustomRoleSpecPtrOutput)
}

// CustomRoleStatus defines the observed state of CustomRole
func (o CustomRoleTypeOutput) Status() CustomRoleStatusPtrOutput {
	return o.ApplyT(func(v CustomRoleType) *CustomRoleStatus { return v.Status }).(CustomRoleStatusPtrOutput)
}

type CustomRoleMetadata struct {
}

// CustomRoleMetadataInput is an input type that accepts CustomRoleMetadataArgs and CustomRoleMetadataOutput values.
// You can construct a concrete instance of `CustomRoleMetadataInput` via:
//
//          CustomRoleMetadataArgs{...}
type CustomRoleMetadataInput interface {
	pulumi.Input

	ToCustomRoleMetadataOutput() CustomRoleMetadataOutput
	ToCustomRoleMetadataOutputWithContext(context.Context) CustomRoleMetadataOutput
}

type CustomRoleMetadataArgs struct {
}

func (CustomRoleMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleMetadata)(nil)).Elem()
}

func (i CustomRoleMetadataArgs) ToCustomRoleMetadataOutput() CustomRoleMetadataOutput {
	return i.ToCustomRoleMetadataOutputWithContext(context.Background())
}

func (i CustomRoleMetadataArgs) ToCustomRoleMetadataOutputWithContext(ctx context.Context) CustomRoleMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleMetadataOutput)
}

type CustomRoleMetadataOutput struct{ *pulumi.OutputState }

func (CustomRoleMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleMetadata)(nil)).Elem()
}

func (o CustomRoleMetadataOutput) ToCustomRoleMetadataOutput() CustomRoleMetadataOutput {
	return o
}

func (o CustomRoleMetadataOutput) ToCustomRoleMetadataOutputWithContext(ctx context.Context) CustomRoleMetadataOutput {
	return o
}

// CustomRoleSpec defines the desired state of CustomRole
type CustomRoleSpec struct {
	Actions      []string `pulumi:"actions"`
	Description  string   `pulumi:"description"`
	DisplayName  string   `pulumi:"displayName"`
	RoleName     string   `pulumi:"roleName"`
	ServiceClass string   `pulumi:"serviceClass"`
}

// CustomRoleSpecInput is an input type that accepts CustomRoleSpecArgs and CustomRoleSpecOutput values.
// You can construct a concrete instance of `CustomRoleSpecInput` via:
//
//          CustomRoleSpecArgs{...}
type CustomRoleSpecInput interface {
	pulumi.Input

	ToCustomRoleSpecOutput() CustomRoleSpecOutput
	ToCustomRoleSpecOutputWithContext(context.Context) CustomRoleSpecOutput
}

// CustomRoleSpec defines the desired state of CustomRole
type CustomRoleSpecArgs struct {
	Actions      pulumi.StringArrayInput `pulumi:"actions"`
	Description  pulumi.StringInput      `pulumi:"description"`
	DisplayName  pulumi.StringInput      `pulumi:"displayName"`
	RoleName     pulumi.StringInput      `pulumi:"roleName"`
	ServiceClass pulumi.StringInput      `pulumi:"serviceClass"`
}

func (CustomRoleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleSpec)(nil)).Elem()
}

func (i CustomRoleSpecArgs) ToCustomRoleSpecOutput() CustomRoleSpecOutput {
	return i.ToCustomRoleSpecOutputWithContext(context.Background())
}

func (i CustomRoleSpecArgs) ToCustomRoleSpecOutputWithContext(ctx context.Context) CustomRoleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleSpecOutput)
}

func (i CustomRoleSpecArgs) ToCustomRoleSpecPtrOutput() CustomRoleSpecPtrOutput {
	return i.ToCustomRoleSpecPtrOutputWithContext(context.Background())
}

func (i CustomRoleSpecArgs) ToCustomRoleSpecPtrOutputWithContext(ctx context.Context) CustomRoleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleSpecOutput).ToCustomRoleSpecPtrOutputWithContext(ctx)
}

// CustomRoleSpecPtrInput is an input type that accepts CustomRoleSpecArgs, CustomRoleSpecPtr and CustomRoleSpecPtrOutput values.
// You can construct a concrete instance of `CustomRoleSpecPtrInput` via:
//
//          CustomRoleSpecArgs{...}
//
//  or:
//
//          nil
type CustomRoleSpecPtrInput interface {
	pulumi.Input

	ToCustomRoleSpecPtrOutput() CustomRoleSpecPtrOutput
	ToCustomRoleSpecPtrOutputWithContext(context.Context) CustomRoleSpecPtrOutput
}

type customRoleSpecPtrType CustomRoleSpecArgs

func CustomRoleSpecPtr(v *CustomRoleSpecArgs) CustomRoleSpecPtrInput {
	return (*customRoleSpecPtrType)(v)
}

func (*customRoleSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoleSpec)(nil)).Elem()
}

func (i *customRoleSpecPtrType) ToCustomRoleSpecPtrOutput() CustomRoleSpecPtrOutput {
	return i.ToCustomRoleSpecPtrOutputWithContext(context.Background())
}

func (i *customRoleSpecPtrType) ToCustomRoleSpecPtrOutputWithContext(ctx context.Context) CustomRoleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleSpecPtrOutput)
}

// CustomRoleSpec defines the desired state of CustomRole
type CustomRoleSpecOutput struct{ *pulumi.OutputState }

func (CustomRoleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleSpec)(nil)).Elem()
}

func (o CustomRoleSpecOutput) ToCustomRoleSpecOutput() CustomRoleSpecOutput {
	return o
}

func (o CustomRoleSpecOutput) ToCustomRoleSpecOutputWithContext(ctx context.Context) CustomRoleSpecOutput {
	return o
}

func (o CustomRoleSpecOutput) ToCustomRoleSpecPtrOutput() CustomRoleSpecPtrOutput {
	return o.ToCustomRoleSpecPtrOutputWithContext(context.Background())
}

func (o CustomRoleSpecOutput) ToCustomRoleSpecPtrOutputWithContext(ctx context.Context) CustomRoleSpecPtrOutput {
	return o.ApplyT(func(v CustomRoleSpec) *CustomRoleSpec {
		return &v
	}).(CustomRoleSpecPtrOutput)
}
func (o CustomRoleSpecOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomRoleSpec) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o CustomRoleSpecOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRoleSpec) string { return v.Description }).(pulumi.StringOutput)
}

func (o CustomRoleSpecOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRoleSpec) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o CustomRoleSpecOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRoleSpec) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o CustomRoleSpecOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRoleSpec) string { return v.ServiceClass }).(pulumi.StringOutput)
}

type CustomRoleSpecPtrOutput struct{ *pulumi.OutputState }

func (CustomRoleSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoleSpec)(nil)).Elem()
}

func (o CustomRoleSpecPtrOutput) ToCustomRoleSpecPtrOutput() CustomRoleSpecPtrOutput {
	return o
}

func (o CustomRoleSpecPtrOutput) ToCustomRoleSpecPtrOutputWithContext(ctx context.Context) CustomRoleSpecPtrOutput {
	return o
}

func (o CustomRoleSpecPtrOutput) Elem() CustomRoleSpecOutput {
	return o.ApplyT(func(v *CustomRoleSpec) CustomRoleSpec { return *v }).(CustomRoleSpecOutput)
}

func (o CustomRoleSpecPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomRoleSpec) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

func (o CustomRoleSpecPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleSpecPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleSpec) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleSpecPtrOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleSpec) *string {
		if v == nil {
			return nil
		}
		return &v.RoleName
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleSpecPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

// CustomRoleStatus defines the observed state of CustomRole
type CustomRoleStatus struct {
	Actions      []string `pulumi:"actions"`
	Description  *string  `pulumi:"description"`
	DisplayName  *string  `pulumi:"displayName"`
	Message      *string  `pulumi:"message"`
	RoleCRN      *string  `pulumi:"roleCRN"`
	RoleID       *string  `pulumi:"roleID"`
	RoleName     *string  `pulumi:"roleName"`
	ServiceClass *string  `pulumi:"serviceClass"`
	State        *string  `pulumi:"state"`
}

// CustomRoleStatusInput is an input type that accepts CustomRoleStatusArgs and CustomRoleStatusOutput values.
// You can construct a concrete instance of `CustomRoleStatusInput` via:
//
//          CustomRoleStatusArgs{...}
type CustomRoleStatusInput interface {
	pulumi.Input

	ToCustomRoleStatusOutput() CustomRoleStatusOutput
	ToCustomRoleStatusOutputWithContext(context.Context) CustomRoleStatusOutput
}

// CustomRoleStatus defines the observed state of CustomRole
type CustomRoleStatusArgs struct {
	Actions      pulumi.StringArrayInput `pulumi:"actions"`
	Description  pulumi.StringPtrInput   `pulumi:"description"`
	DisplayName  pulumi.StringPtrInput   `pulumi:"displayName"`
	Message      pulumi.StringPtrInput   `pulumi:"message"`
	RoleCRN      pulumi.StringPtrInput   `pulumi:"roleCRN"`
	RoleID       pulumi.StringPtrInput   `pulumi:"roleID"`
	RoleName     pulumi.StringPtrInput   `pulumi:"roleName"`
	ServiceClass pulumi.StringPtrInput   `pulumi:"serviceClass"`
	State        pulumi.StringPtrInput   `pulumi:"state"`
}

func (CustomRoleStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleStatus)(nil)).Elem()
}

func (i CustomRoleStatusArgs) ToCustomRoleStatusOutput() CustomRoleStatusOutput {
	return i.ToCustomRoleStatusOutputWithContext(context.Background())
}

func (i CustomRoleStatusArgs) ToCustomRoleStatusOutputWithContext(ctx context.Context) CustomRoleStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleStatusOutput)
}

func (i CustomRoleStatusArgs) ToCustomRoleStatusPtrOutput() CustomRoleStatusPtrOutput {
	return i.ToCustomRoleStatusPtrOutputWithContext(context.Background())
}

func (i CustomRoleStatusArgs) ToCustomRoleStatusPtrOutputWithContext(ctx context.Context) CustomRoleStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleStatusOutput).ToCustomRoleStatusPtrOutputWithContext(ctx)
}

// CustomRoleStatusPtrInput is an input type that accepts CustomRoleStatusArgs, CustomRoleStatusPtr and CustomRoleStatusPtrOutput values.
// You can construct a concrete instance of `CustomRoleStatusPtrInput` via:
//
//          CustomRoleStatusArgs{...}
//
//  or:
//
//          nil
type CustomRoleStatusPtrInput interface {
	pulumi.Input

	ToCustomRoleStatusPtrOutput() CustomRoleStatusPtrOutput
	ToCustomRoleStatusPtrOutputWithContext(context.Context) CustomRoleStatusPtrOutput
}

type customRoleStatusPtrType CustomRoleStatusArgs

func CustomRoleStatusPtr(v *CustomRoleStatusArgs) CustomRoleStatusPtrInput {
	return (*customRoleStatusPtrType)(v)
}

func (*customRoleStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoleStatus)(nil)).Elem()
}

func (i *customRoleStatusPtrType) ToCustomRoleStatusPtrOutput() CustomRoleStatusPtrOutput {
	return i.ToCustomRoleStatusPtrOutputWithContext(context.Background())
}

func (i *customRoleStatusPtrType) ToCustomRoleStatusPtrOutputWithContext(ctx context.Context) CustomRoleStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoleStatusPtrOutput)
}

// CustomRoleStatus defines the observed state of CustomRole
type CustomRoleStatusOutput struct{ *pulumi.OutputState }

func (CustomRoleStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoleStatus)(nil)).Elem()
}

func (o CustomRoleStatusOutput) ToCustomRoleStatusOutput() CustomRoleStatusOutput {
	return o
}

func (o CustomRoleStatusOutput) ToCustomRoleStatusOutputWithContext(ctx context.Context) CustomRoleStatusOutput {
	return o
}

func (o CustomRoleStatusOutput) ToCustomRoleStatusPtrOutput() CustomRoleStatusPtrOutput {
	return o.ToCustomRoleStatusPtrOutputWithContext(context.Background())
}

func (o CustomRoleStatusOutput) ToCustomRoleStatusPtrOutputWithContext(ctx context.Context) CustomRoleStatusPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *CustomRoleStatus {
		return &v
	}).(CustomRoleStatusPtrOutput)
}
func (o CustomRoleStatusOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomRoleStatus) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o CustomRoleStatusOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) RoleCRN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.RoleCRN }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) RoleID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.RoleID }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.ServiceClass }).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRoleStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type CustomRoleStatusPtrOutput struct{ *pulumi.OutputState }

func (CustomRoleStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoleStatus)(nil)).Elem()
}

func (o CustomRoleStatusPtrOutput) ToCustomRoleStatusPtrOutput() CustomRoleStatusPtrOutput {
	return o
}

func (o CustomRoleStatusPtrOutput) ToCustomRoleStatusPtrOutputWithContext(ctx context.Context) CustomRoleStatusPtrOutput {
	return o
}

func (o CustomRoleStatusPtrOutput) Elem() CustomRoleStatusOutput {
	return o.ApplyT(func(v *CustomRoleStatus) CustomRoleStatus { return *v }).(CustomRoleStatusOutput)
}

func (o CustomRoleStatusPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomRoleStatus) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

func (o CustomRoleStatusPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) RoleCRN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.RoleCRN
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) RoleID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.RoleID
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.RoleName
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) ServiceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClass
	}).(pulumi.StringPtrOutput)
}

func (o CustomRoleStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoleStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessGroupTypeOutput{})
	pulumi.RegisterOutputType(AccessGroupMetadataOutput{})
	pulumi.RegisterOutputType(AccessGroupSpecOutput{})
	pulumi.RegisterOutputType(AccessGroupSpecPtrOutput{})
	pulumi.RegisterOutputType(AccessGroupStatusOutput{})
	pulumi.RegisterOutputType(AccessGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyTypeOutput{})
	pulumi.RegisterOutputType(AccessPolicyMetadataOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecRolesOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecRolesPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecRolesCustomRolesDefOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecRolesCustomRolesDefArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecSubjectOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecSubjectPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecSubjectAccessGroupDefOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecSubjectAccessGroupDefPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecTargetOutput{})
	pulumi.RegisterOutputType(AccessPolicySpecTargetPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusRolesOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusRolesPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusRolesCustomRolesDefOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusRolesCustomRolesDefArrayOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusSubjectOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusSubjectPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusSubjectAccessGroupDefOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusSubjectAccessGroupDefPtrOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusTargetOutput{})
	pulumi.RegisterOutputType(AccessPolicyStatusTargetPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyTypeOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyMetadataOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecSourceOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecSourcePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicySpecTargetPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyStatusOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyStatusPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyStatusSourceOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyStatusSourcePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyStatusTargetOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyStatusTargetPtrOutput{})
	pulumi.RegisterOutputType(CustomRoleTypeOutput{})
	pulumi.RegisterOutputType(CustomRoleMetadataOutput{})
	pulumi.RegisterOutputType(CustomRoleSpecOutput{})
	pulumi.RegisterOutputType(CustomRoleSpecPtrOutput{})
	pulumi.RegisterOutputType(CustomRoleStatusOutput{})
	pulumi.RegisterOutputType(CustomRoleStatusPtrOutput{})
}
