// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// BackupStorageLocation is a location where Velero stores backup objects.
type BackupStorageLocation struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// BackupStorageLocationSpec defines the specification for a Velero BackupStorageLocation.
	Spec BackupStorageLocationSpecPtrOutput `pulumi:"spec"`
	// BackupStorageLocationStatus describes the current status of a Velero BackupStorageLocation.
	Status BackupStorageLocationStatusPtrOutput `pulumi:"status"`
}

// NewBackupStorageLocation registers a new resource with the given unique name, arguments, and options.
func NewBackupStorageLocation(ctx *pulumi.Context,
	name string, args *BackupStorageLocationArgs, opts ...pulumi.ResourceOption) (*BackupStorageLocation, error) {
	if args == nil {
		args = &BackupStorageLocationArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("velero.io/v1")
	args.Kind = pulumi.StringPtr("BackupStorageLocation")
	var resource BackupStorageLocation
	err := ctx.RegisterResource("kubernetes:velero.io/v1:BackupStorageLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupStorageLocation gets an existing BackupStorageLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupStorageLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupStorageLocationState, opts ...pulumi.ResourceOption) (*BackupStorageLocation, error) {
	var resource BackupStorageLocation
	err := ctx.ReadResource("kubernetes:velero.io/v1:BackupStorageLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupStorageLocation resources.
type backupStorageLocationState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BackupStorageLocationSpec defines the specification for a Velero BackupStorageLocation.
	Spec *BackupStorageLocationSpec `pulumi:"spec"`
	// BackupStorageLocationStatus describes the current status of a Velero BackupStorageLocation.
	Status *BackupStorageLocationStatus `pulumi:"status"`
}

type BackupStorageLocationState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// BackupStorageLocationSpec defines the specification for a Velero BackupStorageLocation.
	Spec BackupStorageLocationSpecPtrInput
	// BackupStorageLocationStatus describes the current status of a Velero BackupStorageLocation.
	Status BackupStorageLocationStatusPtrInput
}

func (BackupStorageLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupStorageLocationState)(nil)).Elem()
}

type backupStorageLocationArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BackupStorageLocationSpec defines the specification for a Velero BackupStorageLocation.
	Spec *BackupStorageLocationSpec `pulumi:"spec"`
	// BackupStorageLocationStatus describes the current status of a Velero BackupStorageLocation.
	Status *BackupStorageLocationStatus `pulumi:"status"`
}

// The set of arguments for constructing a BackupStorageLocation resource.
type BackupStorageLocationArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// BackupStorageLocationSpec defines the specification for a Velero BackupStorageLocation.
	Spec BackupStorageLocationSpecPtrInput
	// BackupStorageLocationStatus describes the current status of a Velero BackupStorageLocation.
	Status BackupStorageLocationStatusPtrInput
}

func (BackupStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupStorageLocationArgs)(nil)).Elem()
}
