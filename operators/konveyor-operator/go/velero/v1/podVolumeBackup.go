// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PodVolumeBackup struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// PodVolumeBackupSpec is the specification for a PodVolumeBackup.
	Spec PodVolumeBackupSpecPtrOutput `pulumi:"spec"`
	// PodVolumeBackupStatus is the current status of a PodVolumeBackup.
	Status PodVolumeBackupStatusPtrOutput `pulumi:"status"`
}

// NewPodVolumeBackup registers a new resource with the given unique name, arguments, and options.
func NewPodVolumeBackup(ctx *pulumi.Context,
	name string, args *PodVolumeBackupArgs, opts ...pulumi.ResourceOption) (*PodVolumeBackup, error) {
	if args == nil {
		args = &PodVolumeBackupArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("velero.io/v1")
	args.Kind = pulumi.StringPtr("PodVolumeBackup")
	var resource PodVolumeBackup
	err := ctx.RegisterResource("kubernetes:velero.io/v1:PodVolumeBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodVolumeBackup gets an existing PodVolumeBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodVolumeBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodVolumeBackupState, opts ...pulumi.ResourceOption) (*PodVolumeBackup, error) {
	var resource PodVolumeBackup
	err := ctx.ReadResource("kubernetes:velero.io/v1:PodVolumeBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodVolumeBackup resources.
type podVolumeBackupState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PodVolumeBackupSpec is the specification for a PodVolumeBackup.
	Spec *PodVolumeBackupSpec `pulumi:"spec"`
	// PodVolumeBackupStatus is the current status of a PodVolumeBackup.
	Status *PodVolumeBackupStatus `pulumi:"status"`
}

type PodVolumeBackupState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PodVolumeBackupSpec is the specification for a PodVolumeBackup.
	Spec PodVolumeBackupSpecPtrInput
	// PodVolumeBackupStatus is the current status of a PodVolumeBackup.
	Status PodVolumeBackupStatusPtrInput
}

func (PodVolumeBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*podVolumeBackupState)(nil)).Elem()
}

type podVolumeBackupArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PodVolumeBackupSpec is the specification for a PodVolumeBackup.
	Spec *PodVolumeBackupSpec `pulumi:"spec"`
	// PodVolumeBackupStatus is the current status of a PodVolumeBackup.
	Status *PodVolumeBackupStatus `pulumi:"status"`
}

// The set of arguments for constructing a PodVolumeBackup resource.
type PodVolumeBackupArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PodVolumeBackupSpec is the specification for a PodVolumeBackup.
	Spec PodVolumeBackupSpecPtrInput
	// PodVolumeBackupStatus is the current status of a PodVolumeBackup.
	Status PodVolumeBackupStatusPtrInput
}

func (PodVolumeBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podVolumeBackupArgs)(nil)).Elem()
}
