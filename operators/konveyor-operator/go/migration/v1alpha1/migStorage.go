// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MigStorage struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	Spec       MigStorageSpecPtrOutput    `pulumi:"spec"`
	Status     MigStorageStatusPtrOutput  `pulumi:"status"`
}

// NewMigStorage registers a new resource with the given unique name, arguments, and options.
func NewMigStorage(ctx *pulumi.Context,
	name string, args *MigStorageArgs, opts ...pulumi.ResourceOption) (*MigStorage, error) {
	if args == nil {
		args = &MigStorageArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("migration.openshift.io/v1alpha1")
	args.Kind = pulumi.StringPtr("MigStorage")
	var resource MigStorage
	err := ctx.RegisterResource("kubernetes:migration.openshift.io/v1alpha1:MigStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMigStorage gets an existing MigStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMigStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MigStorageState, opts ...pulumi.ResourceOption) (*MigStorage, error) {
	var resource MigStorage
	err := ctx.ReadResource("kubernetes:migration.openshift.io/v1alpha1:MigStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MigStorage resources.
type migStorageState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *MigStorageSpec    `pulumi:"spec"`
	Status     *MigStorageStatus  `pulumi:"status"`
}

type MigStorageState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       MigStorageSpecPtrInput
	Status     MigStorageStatusPtrInput
}

func (MigStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*migStorageState)(nil)).Elem()
}

type migStorageArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *MigStorageSpec    `pulumi:"spec"`
	Status     *MigStorageStatus  `pulumi:"status"`
}

// The set of arguments for constructing a MigStorage resource.
type MigStorageArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       MigStorageSpecPtrInput
	Status     MigStorageStatusPtrInput
}

func (MigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*migStorageArgs)(nil)).Elem()
}
