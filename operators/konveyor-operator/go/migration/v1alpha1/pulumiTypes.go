// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MigClusterType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *MigClusterSpec    `pulumi:"spec"`
	Status     *MigClusterStatus  `pulumi:"status"`
}

// MigClusterTypeInput is an input type that accepts MigClusterTypeArgs and MigClusterTypeOutput values.
// You can construct a concrete instance of `MigClusterTypeInput` via:
//
//          MigClusterTypeArgs{...}
type MigClusterTypeInput interface {
	pulumi.Input

	ToMigClusterTypeOutput() MigClusterTypeOutput
	ToMigClusterTypeOutputWithContext(context.Context) MigClusterTypeOutput
}

type MigClusterTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       MigClusterSpecPtrInput    `pulumi:"spec"`
	Status     MigClusterStatusPtrInput  `pulumi:"status"`
}

func (MigClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterType)(nil)).Elem()
}

func (i MigClusterTypeArgs) ToMigClusterTypeOutput() MigClusterTypeOutput {
	return i.ToMigClusterTypeOutputWithContext(context.Background())
}

func (i MigClusterTypeArgs) ToMigClusterTypeOutputWithContext(ctx context.Context) MigClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterTypeOutput)
}

type MigClusterTypeOutput struct{ *pulumi.OutputState }

func (MigClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterType)(nil)).Elem()
}

func (o MigClusterTypeOutput) ToMigClusterTypeOutput() MigClusterTypeOutput {
	return o
}

func (o MigClusterTypeOutput) ToMigClusterTypeOutputWithContext(ctx context.Context) MigClusterTypeOutput {
	return o
}

func (o MigClusterTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MigClusterTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MigClusterTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v MigClusterType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o MigClusterTypeOutput) Spec() MigClusterSpecPtrOutput {
	return o.ApplyT(func(v MigClusterType) *MigClusterSpec { return v.Spec }).(MigClusterSpecPtrOutput)
}

func (o MigClusterTypeOutput) Status() MigClusterStatusPtrOutput {
	return o.ApplyT(func(v MigClusterType) *MigClusterStatus { return v.Status }).(MigClusterStatusPtrOutput)
}

type MigClusterMetadata struct {
}

// MigClusterMetadataInput is an input type that accepts MigClusterMetadataArgs and MigClusterMetadataOutput values.
// You can construct a concrete instance of `MigClusterMetadataInput` via:
//
//          MigClusterMetadataArgs{...}
type MigClusterMetadataInput interface {
	pulumi.Input

	ToMigClusterMetadataOutput() MigClusterMetadataOutput
	ToMigClusterMetadataOutputWithContext(context.Context) MigClusterMetadataOutput
}

type MigClusterMetadataArgs struct {
}

func (MigClusterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterMetadata)(nil)).Elem()
}

func (i MigClusterMetadataArgs) ToMigClusterMetadataOutput() MigClusterMetadataOutput {
	return i.ToMigClusterMetadataOutputWithContext(context.Background())
}

func (i MigClusterMetadataArgs) ToMigClusterMetadataOutputWithContext(ctx context.Context) MigClusterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterMetadataOutput)
}

type MigClusterMetadataOutput struct{ *pulumi.OutputState }

func (MigClusterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterMetadata)(nil)).Elem()
}

func (o MigClusterMetadataOutput) ToMigClusterMetadataOutput() MigClusterMetadataOutput {
	return o
}

func (o MigClusterMetadataOutput) ToMigClusterMetadataOutputWithContext(ctx context.Context) MigClusterMetadataOutput {
	return o
}

type MigClusterSpec struct {
	AzureResourceGroup      *string                        `pulumi:"azureResourceGroup"`
	CaBundle                *string                        `pulumi:"caBundle"`
	Insecure                *bool                          `pulumi:"insecure"`
	IsHostCluster           bool                           `pulumi:"isHostCluster"`
	ServiceAccountSecretRef map[string]interface{}         `pulumi:"serviceAccountSecretRef"`
	StorageClasses          []MigClusterSpecStorageClasses `pulumi:"storageClasses"`
	Url                     *string                        `pulumi:"url"`
}

// MigClusterSpecInput is an input type that accepts MigClusterSpecArgs and MigClusterSpecOutput values.
// You can construct a concrete instance of `MigClusterSpecInput` via:
//
//          MigClusterSpecArgs{...}
type MigClusterSpecInput interface {
	pulumi.Input

	ToMigClusterSpecOutput() MigClusterSpecOutput
	ToMigClusterSpecOutputWithContext(context.Context) MigClusterSpecOutput
}

type MigClusterSpecArgs struct {
	AzureResourceGroup      pulumi.StringPtrInput                  `pulumi:"azureResourceGroup"`
	CaBundle                pulumi.StringPtrInput                  `pulumi:"caBundle"`
	Insecure                pulumi.BoolPtrInput                    `pulumi:"insecure"`
	IsHostCluster           pulumi.BoolInput                       `pulumi:"isHostCluster"`
	ServiceAccountSecretRef pulumi.MapInput                        `pulumi:"serviceAccountSecretRef"`
	StorageClasses          MigClusterSpecStorageClassesArrayInput `pulumi:"storageClasses"`
	Url                     pulumi.StringPtrInput                  `pulumi:"url"`
}

func (MigClusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterSpec)(nil)).Elem()
}

func (i MigClusterSpecArgs) ToMigClusterSpecOutput() MigClusterSpecOutput {
	return i.ToMigClusterSpecOutputWithContext(context.Background())
}

func (i MigClusterSpecArgs) ToMigClusterSpecOutputWithContext(ctx context.Context) MigClusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterSpecOutput)
}

func (i MigClusterSpecArgs) ToMigClusterSpecPtrOutput() MigClusterSpecPtrOutput {
	return i.ToMigClusterSpecPtrOutputWithContext(context.Background())
}

func (i MigClusterSpecArgs) ToMigClusterSpecPtrOutputWithContext(ctx context.Context) MigClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterSpecOutput).ToMigClusterSpecPtrOutputWithContext(ctx)
}

// MigClusterSpecPtrInput is an input type that accepts MigClusterSpecArgs, MigClusterSpecPtr and MigClusterSpecPtrOutput values.
// You can construct a concrete instance of `MigClusterSpecPtrInput` via:
//
//          MigClusterSpecArgs{...}
//
//  or:
//
//          nil
type MigClusterSpecPtrInput interface {
	pulumi.Input

	ToMigClusterSpecPtrOutput() MigClusterSpecPtrOutput
	ToMigClusterSpecPtrOutputWithContext(context.Context) MigClusterSpecPtrOutput
}

type migClusterSpecPtrType MigClusterSpecArgs

func MigClusterSpecPtr(v *MigClusterSpecArgs) MigClusterSpecPtrInput {
	return (*migClusterSpecPtrType)(v)
}

func (*migClusterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigClusterSpec)(nil)).Elem()
}

func (i *migClusterSpecPtrType) ToMigClusterSpecPtrOutput() MigClusterSpecPtrOutput {
	return i.ToMigClusterSpecPtrOutputWithContext(context.Background())
}

func (i *migClusterSpecPtrType) ToMigClusterSpecPtrOutputWithContext(ctx context.Context) MigClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterSpecPtrOutput)
}

type MigClusterSpecOutput struct{ *pulumi.OutputState }

func (MigClusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterSpec)(nil)).Elem()
}

func (o MigClusterSpecOutput) ToMigClusterSpecOutput() MigClusterSpecOutput {
	return o
}

func (o MigClusterSpecOutput) ToMigClusterSpecOutputWithContext(ctx context.Context) MigClusterSpecOutput {
	return o
}

func (o MigClusterSpecOutput) ToMigClusterSpecPtrOutput() MigClusterSpecPtrOutput {
	return o.ToMigClusterSpecPtrOutputWithContext(context.Background())
}

func (o MigClusterSpecOutput) ToMigClusterSpecPtrOutputWithContext(ctx context.Context) MigClusterSpecPtrOutput {
	return o.ApplyT(func(v MigClusterSpec) *MigClusterSpec {
		return &v
	}).(MigClusterSpecPtrOutput)
}
func (o MigClusterSpecOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterSpec) *string { return v.AzureResourceGroup }).(pulumi.StringPtrOutput)
}

func (o MigClusterSpecOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterSpec) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o MigClusterSpecOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigClusterSpec) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o MigClusterSpecOutput) IsHostCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v MigClusterSpec) bool { return v.IsHostCluster }).(pulumi.BoolOutput)
}

func (o MigClusterSpecOutput) ServiceAccountSecretRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigClusterSpec) map[string]interface{} { return v.ServiceAccountSecretRef }).(pulumi.MapOutput)
}

func (o MigClusterSpecOutput) StorageClasses() MigClusterSpecStorageClassesArrayOutput {
	return o.ApplyT(func(v MigClusterSpec) []MigClusterSpecStorageClasses { return v.StorageClasses }).(MigClusterSpecStorageClassesArrayOutput)
}

func (o MigClusterSpecOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterSpec) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type MigClusterSpecPtrOutput struct{ *pulumi.OutputState }

func (MigClusterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigClusterSpec)(nil)).Elem()
}

func (o MigClusterSpecPtrOutput) ToMigClusterSpecPtrOutput() MigClusterSpecPtrOutput {
	return o
}

func (o MigClusterSpecPtrOutput) ToMigClusterSpecPtrOutputWithContext(ctx context.Context) MigClusterSpecPtrOutput {
	return o
}

func (o MigClusterSpecPtrOutput) Elem() MigClusterSpecOutput {
	return o.ApplyT(func(v *MigClusterSpec) MigClusterSpec { return *v }).(MigClusterSpecOutput)
}

func (o MigClusterSpecPtrOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o MigClusterSpecPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o MigClusterSpecPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigClusterSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o MigClusterSpecPtrOutput) IsHostCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigClusterSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.IsHostCluster
	}).(pulumi.BoolPtrOutput)
}

func (o MigClusterSpecPtrOutput) ServiceAccountSecretRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigClusterSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ServiceAccountSecretRef
	}).(pulumi.MapOutput)
}

func (o MigClusterSpecPtrOutput) StorageClasses() MigClusterSpecStorageClassesArrayOutput {
	return o.ApplyT(func(v *MigClusterSpec) []MigClusterSpecStorageClasses {
		if v == nil {
			return nil
		}
		return v.StorageClasses
	}).(MigClusterSpecStorageClassesArrayOutput)
}

func (o MigClusterSpecPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigClusterSpec) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type MigClusterSpecServiceAccountSecretRef struct {
}

// MigClusterSpecServiceAccountSecretRefInput is an input type that accepts MigClusterSpecServiceAccountSecretRefArgs and MigClusterSpecServiceAccountSecretRefOutput values.
// You can construct a concrete instance of `MigClusterSpecServiceAccountSecretRefInput` via:
//
//          MigClusterSpecServiceAccountSecretRefArgs{...}
type MigClusterSpecServiceAccountSecretRefInput interface {
	pulumi.Input

	ToMigClusterSpecServiceAccountSecretRefOutput() MigClusterSpecServiceAccountSecretRefOutput
	ToMigClusterSpecServiceAccountSecretRefOutputWithContext(context.Context) MigClusterSpecServiceAccountSecretRefOutput
}

type MigClusterSpecServiceAccountSecretRefArgs struct {
}

func (MigClusterSpecServiceAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterSpecServiceAccountSecretRef)(nil)).Elem()
}

func (i MigClusterSpecServiceAccountSecretRefArgs) ToMigClusterSpecServiceAccountSecretRefOutput() MigClusterSpecServiceAccountSecretRefOutput {
	return i.ToMigClusterSpecServiceAccountSecretRefOutputWithContext(context.Background())
}

func (i MigClusterSpecServiceAccountSecretRefArgs) ToMigClusterSpecServiceAccountSecretRefOutputWithContext(ctx context.Context) MigClusterSpecServiceAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterSpecServiceAccountSecretRefOutput)
}

type MigClusterSpecServiceAccountSecretRefOutput struct{ *pulumi.OutputState }

func (MigClusterSpecServiceAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterSpecServiceAccountSecretRef)(nil)).Elem()
}

func (o MigClusterSpecServiceAccountSecretRefOutput) ToMigClusterSpecServiceAccountSecretRefOutput() MigClusterSpecServiceAccountSecretRefOutput {
	return o
}

func (o MigClusterSpecServiceAccountSecretRefOutput) ToMigClusterSpecServiceAccountSecretRefOutputWithContext(ctx context.Context) MigClusterSpecServiceAccountSecretRefOutput {
	return o
}

type MigClusterSpecStorageClasses struct {
	AccessModes []string `pulumi:"accessModes"`
	Default     *bool    `pulumi:"default"`
	Name        *string  `pulumi:"name"`
	Provisioner *string  `pulumi:"provisioner"`
}

// MigClusterSpecStorageClassesInput is an input type that accepts MigClusterSpecStorageClassesArgs and MigClusterSpecStorageClassesOutput values.
// You can construct a concrete instance of `MigClusterSpecStorageClassesInput` via:
//
//          MigClusterSpecStorageClassesArgs{...}
type MigClusterSpecStorageClassesInput interface {
	pulumi.Input

	ToMigClusterSpecStorageClassesOutput() MigClusterSpecStorageClassesOutput
	ToMigClusterSpecStorageClassesOutputWithContext(context.Context) MigClusterSpecStorageClassesOutput
}

type MigClusterSpecStorageClassesArgs struct {
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	Default     pulumi.BoolPtrInput     `pulumi:"default"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Provisioner pulumi.StringPtrInput   `pulumi:"provisioner"`
}

func (MigClusterSpecStorageClassesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterSpecStorageClasses)(nil)).Elem()
}

func (i MigClusterSpecStorageClassesArgs) ToMigClusterSpecStorageClassesOutput() MigClusterSpecStorageClassesOutput {
	return i.ToMigClusterSpecStorageClassesOutputWithContext(context.Background())
}

func (i MigClusterSpecStorageClassesArgs) ToMigClusterSpecStorageClassesOutputWithContext(ctx context.Context) MigClusterSpecStorageClassesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterSpecStorageClassesOutput)
}

// MigClusterSpecStorageClassesArrayInput is an input type that accepts MigClusterSpecStorageClassesArray and MigClusterSpecStorageClassesArrayOutput values.
// You can construct a concrete instance of `MigClusterSpecStorageClassesArrayInput` via:
//
//          MigClusterSpecStorageClassesArray{ MigClusterSpecStorageClassesArgs{...} }
type MigClusterSpecStorageClassesArrayInput interface {
	pulumi.Input

	ToMigClusterSpecStorageClassesArrayOutput() MigClusterSpecStorageClassesArrayOutput
	ToMigClusterSpecStorageClassesArrayOutputWithContext(context.Context) MigClusterSpecStorageClassesArrayOutput
}

type MigClusterSpecStorageClassesArray []MigClusterSpecStorageClassesInput

func (MigClusterSpecStorageClassesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigClusterSpecStorageClasses)(nil)).Elem()
}

func (i MigClusterSpecStorageClassesArray) ToMigClusterSpecStorageClassesArrayOutput() MigClusterSpecStorageClassesArrayOutput {
	return i.ToMigClusterSpecStorageClassesArrayOutputWithContext(context.Background())
}

func (i MigClusterSpecStorageClassesArray) ToMigClusterSpecStorageClassesArrayOutputWithContext(ctx context.Context) MigClusterSpecStorageClassesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterSpecStorageClassesArrayOutput)
}

type MigClusterSpecStorageClassesOutput struct{ *pulumi.OutputState }

func (MigClusterSpecStorageClassesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterSpecStorageClasses)(nil)).Elem()
}

func (o MigClusterSpecStorageClassesOutput) ToMigClusterSpecStorageClassesOutput() MigClusterSpecStorageClassesOutput {
	return o
}

func (o MigClusterSpecStorageClassesOutput) ToMigClusterSpecStorageClassesOutputWithContext(ctx context.Context) MigClusterSpecStorageClassesOutput {
	return o
}

func (o MigClusterSpecStorageClassesOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigClusterSpecStorageClasses) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

func (o MigClusterSpecStorageClassesOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigClusterSpecStorageClasses) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

func (o MigClusterSpecStorageClassesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterSpecStorageClasses) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigClusterSpecStorageClassesOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterSpecStorageClasses) *string { return v.Provisioner }).(pulumi.StringPtrOutput)
}

type MigClusterSpecStorageClassesArrayOutput struct{ *pulumi.OutputState }

func (MigClusterSpecStorageClassesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigClusterSpecStorageClasses)(nil)).Elem()
}

func (o MigClusterSpecStorageClassesArrayOutput) ToMigClusterSpecStorageClassesArrayOutput() MigClusterSpecStorageClassesArrayOutput {
	return o
}

func (o MigClusterSpecStorageClassesArrayOutput) ToMigClusterSpecStorageClassesArrayOutputWithContext(ctx context.Context) MigClusterSpecStorageClassesArrayOutput {
	return o
}

func (o MigClusterSpecStorageClassesArrayOutput) Index(i pulumi.IntInput) MigClusterSpecStorageClassesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigClusterSpecStorageClasses {
		return vs[0].([]MigClusterSpecStorageClasses)[vs[1].(int)]
	}).(MigClusterSpecStorageClassesOutput)
}

type MigClusterStatus struct {
	ObservedDigest *string `pulumi:"observedDigest"`
}

// MigClusterStatusInput is an input type that accepts MigClusterStatusArgs and MigClusterStatusOutput values.
// You can construct a concrete instance of `MigClusterStatusInput` via:
//
//          MigClusterStatusArgs{...}
type MigClusterStatusInput interface {
	pulumi.Input

	ToMigClusterStatusOutput() MigClusterStatusOutput
	ToMigClusterStatusOutputWithContext(context.Context) MigClusterStatusOutput
}

type MigClusterStatusArgs struct {
	ObservedDigest pulumi.StringPtrInput `pulumi:"observedDigest"`
}

func (MigClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterStatus)(nil)).Elem()
}

func (i MigClusterStatusArgs) ToMigClusterStatusOutput() MigClusterStatusOutput {
	return i.ToMigClusterStatusOutputWithContext(context.Background())
}

func (i MigClusterStatusArgs) ToMigClusterStatusOutputWithContext(ctx context.Context) MigClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterStatusOutput)
}

func (i MigClusterStatusArgs) ToMigClusterStatusPtrOutput() MigClusterStatusPtrOutput {
	return i.ToMigClusterStatusPtrOutputWithContext(context.Background())
}

func (i MigClusterStatusArgs) ToMigClusterStatusPtrOutputWithContext(ctx context.Context) MigClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterStatusOutput).ToMigClusterStatusPtrOutputWithContext(ctx)
}

// MigClusterStatusPtrInput is an input type that accepts MigClusterStatusArgs, MigClusterStatusPtr and MigClusterStatusPtrOutput values.
// You can construct a concrete instance of `MigClusterStatusPtrInput` via:
//
//          MigClusterStatusArgs{...}
//
//  or:
//
//          nil
type MigClusterStatusPtrInput interface {
	pulumi.Input

	ToMigClusterStatusPtrOutput() MigClusterStatusPtrOutput
	ToMigClusterStatusPtrOutputWithContext(context.Context) MigClusterStatusPtrOutput
}

type migClusterStatusPtrType MigClusterStatusArgs

func MigClusterStatusPtr(v *MigClusterStatusArgs) MigClusterStatusPtrInput {
	return (*migClusterStatusPtrType)(v)
}

func (*migClusterStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigClusterStatus)(nil)).Elem()
}

func (i *migClusterStatusPtrType) ToMigClusterStatusPtrOutput() MigClusterStatusPtrOutput {
	return i.ToMigClusterStatusPtrOutputWithContext(context.Background())
}

func (i *migClusterStatusPtrType) ToMigClusterStatusPtrOutputWithContext(ctx context.Context) MigClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigClusterStatusPtrOutput)
}

type MigClusterStatusOutput struct{ *pulumi.OutputState }

func (MigClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigClusterStatus)(nil)).Elem()
}

func (o MigClusterStatusOutput) ToMigClusterStatusOutput() MigClusterStatusOutput {
	return o
}

func (o MigClusterStatusOutput) ToMigClusterStatusOutputWithContext(ctx context.Context) MigClusterStatusOutput {
	return o
}

func (o MigClusterStatusOutput) ToMigClusterStatusPtrOutput() MigClusterStatusPtrOutput {
	return o.ToMigClusterStatusPtrOutputWithContext(context.Background())
}

func (o MigClusterStatusOutput) ToMigClusterStatusPtrOutputWithContext(ctx context.Context) MigClusterStatusPtrOutput {
	return o.ApplyT(func(v MigClusterStatus) *MigClusterStatus {
		return &v
	}).(MigClusterStatusPtrOutput)
}
func (o MigClusterStatusOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigClusterStatus) *string { return v.ObservedDigest }).(pulumi.StringPtrOutput)
}

type MigClusterStatusPtrOutput struct{ *pulumi.OutputState }

func (MigClusterStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigClusterStatus)(nil)).Elem()
}

func (o MigClusterStatusPtrOutput) ToMigClusterStatusPtrOutput() MigClusterStatusPtrOutput {
	return o
}

func (o MigClusterStatusPtrOutput) ToMigClusterStatusPtrOutputWithContext(ctx context.Context) MigClusterStatusPtrOutput {
	return o
}

func (o MigClusterStatusPtrOutput) Elem() MigClusterStatusOutput {
	return o.ApplyT(func(v *MigClusterStatus) MigClusterStatus { return *v }).(MigClusterStatusOutput)
}

func (o MigClusterStatusPtrOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.ObservedDigest
	}).(pulumi.StringPtrOutput)
}

type MigHookType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *MigHookSpec       `pulumi:"spec"`
	Status     *MigHookStatus     `pulumi:"status"`
}

// MigHookTypeInput is an input type that accepts MigHookTypeArgs and MigHookTypeOutput values.
// You can construct a concrete instance of `MigHookTypeInput` via:
//
//          MigHookTypeArgs{...}
type MigHookTypeInput interface {
	pulumi.Input

	ToMigHookTypeOutput() MigHookTypeOutput
	ToMigHookTypeOutputWithContext(context.Context) MigHookTypeOutput
}

type MigHookTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       MigHookSpecPtrInput       `pulumi:"spec"`
	Status     MigHookStatusPtrInput     `pulumi:"status"`
}

func (MigHookTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookType)(nil)).Elem()
}

func (i MigHookTypeArgs) ToMigHookTypeOutput() MigHookTypeOutput {
	return i.ToMigHookTypeOutputWithContext(context.Background())
}

func (i MigHookTypeArgs) ToMigHookTypeOutputWithContext(ctx context.Context) MigHookTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookTypeOutput)
}

type MigHookTypeOutput struct{ *pulumi.OutputState }

func (MigHookTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookType)(nil)).Elem()
}

func (o MigHookTypeOutput) ToMigHookTypeOutput() MigHookTypeOutput {
	return o
}

func (o MigHookTypeOutput) ToMigHookTypeOutputWithContext(ctx context.Context) MigHookTypeOutput {
	return o
}

func (o MigHookTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigHookType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MigHookTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigHookType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MigHookTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v MigHookType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o MigHookTypeOutput) Spec() MigHookSpecPtrOutput {
	return o.ApplyT(func(v MigHookType) *MigHookSpec { return v.Spec }).(MigHookSpecPtrOutput)
}

func (o MigHookTypeOutput) Status() MigHookStatusPtrOutput {
	return o.ApplyT(func(v MigHookType) *MigHookStatus { return v.Status }).(MigHookStatusPtrOutput)
}

type MigHookMetadata struct {
}

// MigHookMetadataInput is an input type that accepts MigHookMetadataArgs and MigHookMetadataOutput values.
// You can construct a concrete instance of `MigHookMetadataInput` via:
//
//          MigHookMetadataArgs{...}
type MigHookMetadataInput interface {
	pulumi.Input

	ToMigHookMetadataOutput() MigHookMetadataOutput
	ToMigHookMetadataOutputWithContext(context.Context) MigHookMetadataOutput
}

type MigHookMetadataArgs struct {
}

func (MigHookMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookMetadata)(nil)).Elem()
}

func (i MigHookMetadataArgs) ToMigHookMetadataOutput() MigHookMetadataOutput {
	return i.ToMigHookMetadataOutputWithContext(context.Background())
}

func (i MigHookMetadataArgs) ToMigHookMetadataOutputWithContext(ctx context.Context) MigHookMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookMetadataOutput)
}

type MigHookMetadataOutput struct{ *pulumi.OutputState }

func (MigHookMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookMetadata)(nil)).Elem()
}

func (o MigHookMetadataOutput) ToMigHookMetadataOutput() MigHookMetadataOutput {
	return o
}

func (o MigHookMetadataOutput) ToMigHookMetadataOutputWithContext(ctx context.Context) MigHookMetadataOutput {
	return o
}

type MigHookSpec struct {
	ActiveDeadlineSeconds *int    `pulumi:"activeDeadlineSeconds"`
	Custom                bool    `pulumi:"custom"`
	Image                 string  `pulumi:"image"`
	Playbook              *string `pulumi:"playbook"`
	TargetCluster         string  `pulumi:"targetCluster"`
}

// MigHookSpecInput is an input type that accepts MigHookSpecArgs and MigHookSpecOutput values.
// You can construct a concrete instance of `MigHookSpecInput` via:
//
//          MigHookSpecArgs{...}
type MigHookSpecInput interface {
	pulumi.Input

	ToMigHookSpecOutput() MigHookSpecOutput
	ToMigHookSpecOutputWithContext(context.Context) MigHookSpecOutput
}

type MigHookSpecArgs struct {
	ActiveDeadlineSeconds pulumi.IntPtrInput    `pulumi:"activeDeadlineSeconds"`
	Custom                pulumi.BoolInput      `pulumi:"custom"`
	Image                 pulumi.StringInput    `pulumi:"image"`
	Playbook              pulumi.StringPtrInput `pulumi:"playbook"`
	TargetCluster         pulumi.StringInput    `pulumi:"targetCluster"`
}

func (MigHookSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookSpec)(nil)).Elem()
}

func (i MigHookSpecArgs) ToMigHookSpecOutput() MigHookSpecOutput {
	return i.ToMigHookSpecOutputWithContext(context.Background())
}

func (i MigHookSpecArgs) ToMigHookSpecOutputWithContext(ctx context.Context) MigHookSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookSpecOutput)
}

func (i MigHookSpecArgs) ToMigHookSpecPtrOutput() MigHookSpecPtrOutput {
	return i.ToMigHookSpecPtrOutputWithContext(context.Background())
}

func (i MigHookSpecArgs) ToMigHookSpecPtrOutputWithContext(ctx context.Context) MigHookSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookSpecOutput).ToMigHookSpecPtrOutputWithContext(ctx)
}

// MigHookSpecPtrInput is an input type that accepts MigHookSpecArgs, MigHookSpecPtr and MigHookSpecPtrOutput values.
// You can construct a concrete instance of `MigHookSpecPtrInput` via:
//
//          MigHookSpecArgs{...}
//
//  or:
//
//          nil
type MigHookSpecPtrInput interface {
	pulumi.Input

	ToMigHookSpecPtrOutput() MigHookSpecPtrOutput
	ToMigHookSpecPtrOutputWithContext(context.Context) MigHookSpecPtrOutput
}

type migHookSpecPtrType MigHookSpecArgs

func MigHookSpecPtr(v *MigHookSpecArgs) MigHookSpecPtrInput {
	return (*migHookSpecPtrType)(v)
}

func (*migHookSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigHookSpec)(nil)).Elem()
}

func (i *migHookSpecPtrType) ToMigHookSpecPtrOutput() MigHookSpecPtrOutput {
	return i.ToMigHookSpecPtrOutputWithContext(context.Background())
}

func (i *migHookSpecPtrType) ToMigHookSpecPtrOutputWithContext(ctx context.Context) MigHookSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookSpecPtrOutput)
}

type MigHookSpecOutput struct{ *pulumi.OutputState }

func (MigHookSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookSpec)(nil)).Elem()
}

func (o MigHookSpecOutput) ToMigHookSpecOutput() MigHookSpecOutput {
	return o
}

func (o MigHookSpecOutput) ToMigHookSpecOutputWithContext(ctx context.Context) MigHookSpecOutput {
	return o
}

func (o MigHookSpecOutput) ToMigHookSpecPtrOutput() MigHookSpecPtrOutput {
	return o.ToMigHookSpecPtrOutputWithContext(context.Background())
}

func (o MigHookSpecOutput) ToMigHookSpecPtrOutputWithContext(ctx context.Context) MigHookSpecPtrOutput {
	return o.ApplyT(func(v MigHookSpec) *MigHookSpec {
		return &v
	}).(MigHookSpecPtrOutput)
}
func (o MigHookSpecOutput) ActiveDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MigHookSpec) *int { return v.ActiveDeadlineSeconds }).(pulumi.IntPtrOutput)
}

func (o MigHookSpecOutput) Custom() pulumi.BoolOutput {
	return o.ApplyT(func(v MigHookSpec) bool { return v.Custom }).(pulumi.BoolOutput)
}

func (o MigHookSpecOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v MigHookSpec) string { return v.Image }).(pulumi.StringOutput)
}

func (o MigHookSpecOutput) Playbook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigHookSpec) *string { return v.Playbook }).(pulumi.StringPtrOutput)
}

func (o MigHookSpecOutput) TargetCluster() pulumi.StringOutput {
	return o.ApplyT(func(v MigHookSpec) string { return v.TargetCluster }).(pulumi.StringOutput)
}

type MigHookSpecPtrOutput struct{ *pulumi.OutputState }

func (MigHookSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigHookSpec)(nil)).Elem()
}

func (o MigHookSpecPtrOutput) ToMigHookSpecPtrOutput() MigHookSpecPtrOutput {
	return o
}

func (o MigHookSpecPtrOutput) ToMigHookSpecPtrOutputWithContext(ctx context.Context) MigHookSpecPtrOutput {
	return o
}

func (o MigHookSpecPtrOutput) Elem() MigHookSpecOutput {
	return o.ApplyT(func(v *MigHookSpec) MigHookSpec { return *v }).(MigHookSpecOutput)
}

func (o MigHookSpecPtrOutput) ActiveDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MigHookSpec) *int {
		if v == nil {
			return nil
		}
		return v.ActiveDeadlineSeconds
	}).(pulumi.IntPtrOutput)
}

func (o MigHookSpecPtrOutput) Custom() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigHookSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Custom
	}).(pulumi.BoolPtrOutput)
}

func (o MigHookSpecPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigHookSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o MigHookSpecPtrOutput) Playbook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigHookSpec) *string {
		if v == nil {
			return nil
		}
		return v.Playbook
	}).(pulumi.StringPtrOutput)
}

func (o MigHookSpecPtrOutput) TargetCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigHookSpec) *string {
		if v == nil {
			return nil
		}
		return &v.TargetCluster
	}).(pulumi.StringPtrOutput)
}

type MigHookStatus struct {
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// MigHookStatusInput is an input type that accepts MigHookStatusArgs and MigHookStatusOutput values.
// You can construct a concrete instance of `MigHookStatusInput` via:
//
//          MigHookStatusArgs{...}
type MigHookStatusInput interface {
	pulumi.Input

	ToMigHookStatusOutput() MigHookStatusOutput
	ToMigHookStatusOutputWithContext(context.Context) MigHookStatusOutput
}

type MigHookStatusArgs struct {
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (MigHookStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookStatus)(nil)).Elem()
}

func (i MigHookStatusArgs) ToMigHookStatusOutput() MigHookStatusOutput {
	return i.ToMigHookStatusOutputWithContext(context.Background())
}

func (i MigHookStatusArgs) ToMigHookStatusOutputWithContext(ctx context.Context) MigHookStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookStatusOutput)
}

func (i MigHookStatusArgs) ToMigHookStatusPtrOutput() MigHookStatusPtrOutput {
	return i.ToMigHookStatusPtrOutputWithContext(context.Background())
}

func (i MigHookStatusArgs) ToMigHookStatusPtrOutputWithContext(ctx context.Context) MigHookStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookStatusOutput).ToMigHookStatusPtrOutputWithContext(ctx)
}

// MigHookStatusPtrInput is an input type that accepts MigHookStatusArgs, MigHookStatusPtr and MigHookStatusPtrOutput values.
// You can construct a concrete instance of `MigHookStatusPtrInput` via:
//
//          MigHookStatusArgs{...}
//
//  or:
//
//          nil
type MigHookStatusPtrInput interface {
	pulumi.Input

	ToMigHookStatusPtrOutput() MigHookStatusPtrOutput
	ToMigHookStatusPtrOutputWithContext(context.Context) MigHookStatusPtrOutput
}

type migHookStatusPtrType MigHookStatusArgs

func MigHookStatusPtr(v *MigHookStatusArgs) MigHookStatusPtrInput {
	return (*migHookStatusPtrType)(v)
}

func (*migHookStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigHookStatus)(nil)).Elem()
}

func (i *migHookStatusPtrType) ToMigHookStatusPtrOutput() MigHookStatusPtrOutput {
	return i.ToMigHookStatusPtrOutputWithContext(context.Background())
}

func (i *migHookStatusPtrType) ToMigHookStatusPtrOutputWithContext(ctx context.Context) MigHookStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigHookStatusPtrOutput)
}

type MigHookStatusOutput struct{ *pulumi.OutputState }

func (MigHookStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigHookStatus)(nil)).Elem()
}

func (o MigHookStatusOutput) ToMigHookStatusOutput() MigHookStatusOutput {
	return o
}

func (o MigHookStatusOutput) ToMigHookStatusOutputWithContext(ctx context.Context) MigHookStatusOutput {
	return o
}

func (o MigHookStatusOutput) ToMigHookStatusPtrOutput() MigHookStatusPtrOutput {
	return o.ToMigHookStatusPtrOutputWithContext(context.Background())
}

func (o MigHookStatusOutput) ToMigHookStatusPtrOutputWithContext(ctx context.Context) MigHookStatusPtrOutput {
	return o.ApplyT(func(v MigHookStatus) *MigHookStatus {
		return &v
	}).(MigHookStatusPtrOutput)
}
func (o MigHookStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MigHookStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type MigHookStatusPtrOutput struct{ *pulumi.OutputState }

func (MigHookStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigHookStatus)(nil)).Elem()
}

func (o MigHookStatusPtrOutput) ToMigHookStatusPtrOutput() MigHookStatusPtrOutput {
	return o
}

func (o MigHookStatusPtrOutput) ToMigHookStatusPtrOutputWithContext(ctx context.Context) MigHookStatusPtrOutput {
	return o
}

func (o MigHookStatusPtrOutput) Elem() MigHookStatusOutput {
	return o.ApplyT(func(v *MigHookStatus) MigHookStatus { return *v }).(MigHookStatusOutput)
}

func (o MigHookStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MigHookStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

type MigMigrationType struct {
	ApiVersion *string             `pulumi:"apiVersion"`
	Kind       *string             `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta  `pulumi:"metadata"`
	Spec       *MigMigrationSpec   `pulumi:"spec"`
	Status     *MigMigrationStatus `pulumi:"status"`
}

// MigMigrationTypeInput is an input type that accepts MigMigrationTypeArgs and MigMigrationTypeOutput values.
// You can construct a concrete instance of `MigMigrationTypeInput` via:
//
//          MigMigrationTypeArgs{...}
type MigMigrationTypeInput interface {
	pulumi.Input

	ToMigMigrationTypeOutput() MigMigrationTypeOutput
	ToMigMigrationTypeOutputWithContext(context.Context) MigMigrationTypeOutput
}

type MigMigrationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput      `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput      `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput  `pulumi:"metadata"`
	Spec       MigMigrationSpecPtrInput   `pulumi:"spec"`
	Status     MigMigrationStatusPtrInput `pulumi:"status"`
}

func (MigMigrationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationType)(nil)).Elem()
}

func (i MigMigrationTypeArgs) ToMigMigrationTypeOutput() MigMigrationTypeOutput {
	return i.ToMigMigrationTypeOutputWithContext(context.Background())
}

func (i MigMigrationTypeArgs) ToMigMigrationTypeOutputWithContext(ctx context.Context) MigMigrationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationTypeOutput)
}

type MigMigrationTypeOutput struct{ *pulumi.OutputState }

func (MigMigrationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationType)(nil)).Elem()
}

func (o MigMigrationTypeOutput) ToMigMigrationTypeOutput() MigMigrationTypeOutput {
	return o
}

func (o MigMigrationTypeOutput) ToMigMigrationTypeOutputWithContext(ctx context.Context) MigMigrationTypeOutput {
	return o
}

func (o MigMigrationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigMigrationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MigMigrationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigMigrationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MigMigrationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v MigMigrationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o MigMigrationTypeOutput) Spec() MigMigrationSpecPtrOutput {
	return o.ApplyT(func(v MigMigrationType) *MigMigrationSpec { return v.Spec }).(MigMigrationSpecPtrOutput)
}

func (o MigMigrationTypeOutput) Status() MigMigrationStatusPtrOutput {
	return o.ApplyT(func(v MigMigrationType) *MigMigrationStatus { return v.Status }).(MigMigrationStatusPtrOutput)
}

type MigMigrationMetadata struct {
}

// MigMigrationMetadataInput is an input type that accepts MigMigrationMetadataArgs and MigMigrationMetadataOutput values.
// You can construct a concrete instance of `MigMigrationMetadataInput` via:
//
//          MigMigrationMetadataArgs{...}
type MigMigrationMetadataInput interface {
	pulumi.Input

	ToMigMigrationMetadataOutput() MigMigrationMetadataOutput
	ToMigMigrationMetadataOutputWithContext(context.Context) MigMigrationMetadataOutput
}

type MigMigrationMetadataArgs struct {
}

func (MigMigrationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationMetadata)(nil)).Elem()
}

func (i MigMigrationMetadataArgs) ToMigMigrationMetadataOutput() MigMigrationMetadataOutput {
	return i.ToMigMigrationMetadataOutputWithContext(context.Background())
}

func (i MigMigrationMetadataArgs) ToMigMigrationMetadataOutputWithContext(ctx context.Context) MigMigrationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationMetadataOutput)
}

type MigMigrationMetadataOutput struct{ *pulumi.OutputState }

func (MigMigrationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationMetadata)(nil)).Elem()
}

func (o MigMigrationMetadataOutput) ToMigMigrationMetadataOutput() MigMigrationMetadataOutput {
	return o
}

func (o MigMigrationMetadataOutput) ToMigMigrationMetadataOutputWithContext(ctx context.Context) MigMigrationMetadataOutput {
	return o
}

type MigMigrationSpec struct {
	Canceled        *bool                  `pulumi:"canceled"`
	KeepAnnotations *bool                  `pulumi:"keepAnnotations"`
	MigPlanRef      map[string]interface{} `pulumi:"migPlanRef"`
	QuiescePods     *bool                  `pulumi:"quiescePods"`
	Stage           bool                   `pulumi:"stage"`
	Verify          *bool                  `pulumi:"verify"`
}

// MigMigrationSpecInput is an input type that accepts MigMigrationSpecArgs and MigMigrationSpecOutput values.
// You can construct a concrete instance of `MigMigrationSpecInput` via:
//
//          MigMigrationSpecArgs{...}
type MigMigrationSpecInput interface {
	pulumi.Input

	ToMigMigrationSpecOutput() MigMigrationSpecOutput
	ToMigMigrationSpecOutputWithContext(context.Context) MigMigrationSpecOutput
}

type MigMigrationSpecArgs struct {
	Canceled        pulumi.BoolPtrInput `pulumi:"canceled"`
	KeepAnnotations pulumi.BoolPtrInput `pulumi:"keepAnnotations"`
	MigPlanRef      pulumi.MapInput     `pulumi:"migPlanRef"`
	QuiescePods     pulumi.BoolPtrInput `pulumi:"quiescePods"`
	Stage           pulumi.BoolInput    `pulumi:"stage"`
	Verify          pulumi.BoolPtrInput `pulumi:"verify"`
}

func (MigMigrationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationSpec)(nil)).Elem()
}

func (i MigMigrationSpecArgs) ToMigMigrationSpecOutput() MigMigrationSpecOutput {
	return i.ToMigMigrationSpecOutputWithContext(context.Background())
}

func (i MigMigrationSpecArgs) ToMigMigrationSpecOutputWithContext(ctx context.Context) MigMigrationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationSpecOutput)
}

func (i MigMigrationSpecArgs) ToMigMigrationSpecPtrOutput() MigMigrationSpecPtrOutput {
	return i.ToMigMigrationSpecPtrOutputWithContext(context.Background())
}

func (i MigMigrationSpecArgs) ToMigMigrationSpecPtrOutputWithContext(ctx context.Context) MigMigrationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationSpecOutput).ToMigMigrationSpecPtrOutputWithContext(ctx)
}

// MigMigrationSpecPtrInput is an input type that accepts MigMigrationSpecArgs, MigMigrationSpecPtr and MigMigrationSpecPtrOutput values.
// You can construct a concrete instance of `MigMigrationSpecPtrInput` via:
//
//          MigMigrationSpecArgs{...}
//
//  or:
//
//          nil
type MigMigrationSpecPtrInput interface {
	pulumi.Input

	ToMigMigrationSpecPtrOutput() MigMigrationSpecPtrOutput
	ToMigMigrationSpecPtrOutputWithContext(context.Context) MigMigrationSpecPtrOutput
}

type migMigrationSpecPtrType MigMigrationSpecArgs

func MigMigrationSpecPtr(v *MigMigrationSpecArgs) MigMigrationSpecPtrInput {
	return (*migMigrationSpecPtrType)(v)
}

func (*migMigrationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigMigrationSpec)(nil)).Elem()
}

func (i *migMigrationSpecPtrType) ToMigMigrationSpecPtrOutput() MigMigrationSpecPtrOutput {
	return i.ToMigMigrationSpecPtrOutputWithContext(context.Background())
}

func (i *migMigrationSpecPtrType) ToMigMigrationSpecPtrOutputWithContext(ctx context.Context) MigMigrationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationSpecPtrOutput)
}

type MigMigrationSpecOutput struct{ *pulumi.OutputState }

func (MigMigrationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationSpec)(nil)).Elem()
}

func (o MigMigrationSpecOutput) ToMigMigrationSpecOutput() MigMigrationSpecOutput {
	return o
}

func (o MigMigrationSpecOutput) ToMigMigrationSpecOutputWithContext(ctx context.Context) MigMigrationSpecOutput {
	return o
}

func (o MigMigrationSpecOutput) ToMigMigrationSpecPtrOutput() MigMigrationSpecPtrOutput {
	return o.ToMigMigrationSpecPtrOutputWithContext(context.Background())
}

func (o MigMigrationSpecOutput) ToMigMigrationSpecPtrOutputWithContext(ctx context.Context) MigMigrationSpecPtrOutput {
	return o.ApplyT(func(v MigMigrationSpec) *MigMigrationSpec {
		return &v
	}).(MigMigrationSpecPtrOutput)
}
func (o MigMigrationSpecOutput) Canceled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigMigrationSpec) *bool { return v.Canceled }).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecOutput) KeepAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigMigrationSpec) *bool { return v.KeepAnnotations }).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecOutput) MigPlanRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigMigrationSpec) map[string]interface{} { return v.MigPlanRef }).(pulumi.MapOutput)
}

func (o MigMigrationSpecOutput) QuiescePods() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigMigrationSpec) *bool { return v.QuiescePods }).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecOutput) Stage() pulumi.BoolOutput {
	return o.ApplyT(func(v MigMigrationSpec) bool { return v.Stage }).(pulumi.BoolOutput)
}

func (o MigMigrationSpecOutput) Verify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigMigrationSpec) *bool { return v.Verify }).(pulumi.BoolPtrOutput)
}

type MigMigrationSpecPtrOutput struct{ *pulumi.OutputState }

func (MigMigrationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigMigrationSpec)(nil)).Elem()
}

func (o MigMigrationSpecPtrOutput) ToMigMigrationSpecPtrOutput() MigMigrationSpecPtrOutput {
	return o
}

func (o MigMigrationSpecPtrOutput) ToMigMigrationSpecPtrOutputWithContext(ctx context.Context) MigMigrationSpecPtrOutput {
	return o
}

func (o MigMigrationSpecPtrOutput) Elem() MigMigrationSpecOutput {
	return o.ApplyT(func(v *MigMigrationSpec) MigMigrationSpec { return *v }).(MigMigrationSpecOutput)
}

func (o MigMigrationSpecPtrOutput) Canceled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigMigrationSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Canceled
	}).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecPtrOutput) KeepAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigMigrationSpec) *bool {
		if v == nil {
			return nil
		}
		return v.KeepAnnotations
	}).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecPtrOutput) MigPlanRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigMigrationSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.MigPlanRef
	}).(pulumi.MapOutput)
}

func (o MigMigrationSpecPtrOutput) QuiescePods() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigMigrationSpec) *bool {
		if v == nil {
			return nil
		}
		return v.QuiescePods
	}).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecPtrOutput) Stage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigMigrationSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Stage
	}).(pulumi.BoolPtrOutput)
}

func (o MigMigrationSpecPtrOutput) Verify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigMigrationSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Verify
	}).(pulumi.BoolPtrOutput)
}

type MigMigrationSpecMigPlanRef struct {
}

// MigMigrationSpecMigPlanRefInput is an input type that accepts MigMigrationSpecMigPlanRefArgs and MigMigrationSpecMigPlanRefOutput values.
// You can construct a concrete instance of `MigMigrationSpecMigPlanRefInput` via:
//
//          MigMigrationSpecMigPlanRefArgs{...}
type MigMigrationSpecMigPlanRefInput interface {
	pulumi.Input

	ToMigMigrationSpecMigPlanRefOutput() MigMigrationSpecMigPlanRefOutput
	ToMigMigrationSpecMigPlanRefOutputWithContext(context.Context) MigMigrationSpecMigPlanRefOutput
}

type MigMigrationSpecMigPlanRefArgs struct {
}

func (MigMigrationSpecMigPlanRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationSpecMigPlanRef)(nil)).Elem()
}

func (i MigMigrationSpecMigPlanRefArgs) ToMigMigrationSpecMigPlanRefOutput() MigMigrationSpecMigPlanRefOutput {
	return i.ToMigMigrationSpecMigPlanRefOutputWithContext(context.Background())
}

func (i MigMigrationSpecMigPlanRefArgs) ToMigMigrationSpecMigPlanRefOutputWithContext(ctx context.Context) MigMigrationSpecMigPlanRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationSpecMigPlanRefOutput)
}

type MigMigrationSpecMigPlanRefOutput struct{ *pulumi.OutputState }

func (MigMigrationSpecMigPlanRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationSpecMigPlanRef)(nil)).Elem()
}

func (o MigMigrationSpecMigPlanRefOutput) ToMigMigrationSpecMigPlanRefOutput() MigMigrationSpecMigPlanRefOutput {
	return o
}

func (o MigMigrationSpecMigPlanRefOutput) ToMigMigrationSpecMigPlanRefOutputWithContext(ctx context.Context) MigMigrationSpecMigPlanRefOutput {
	return o
}

type MigMigrationStatus struct {
	Errors         []string `pulumi:"errors"`
	Itenerary      *string  `pulumi:"itenerary"`
	ObservedDigest *string  `pulumi:"observedDigest"`
	Phase          *string  `pulumi:"phase"`
	StartTimestamp *string  `pulumi:"startTimestamp"`
}

// MigMigrationStatusInput is an input type that accepts MigMigrationStatusArgs and MigMigrationStatusOutput values.
// You can construct a concrete instance of `MigMigrationStatusInput` via:
//
//          MigMigrationStatusArgs{...}
type MigMigrationStatusInput interface {
	pulumi.Input

	ToMigMigrationStatusOutput() MigMigrationStatusOutput
	ToMigMigrationStatusOutputWithContext(context.Context) MigMigrationStatusOutput
}

type MigMigrationStatusArgs struct {
	Errors         pulumi.StringArrayInput `pulumi:"errors"`
	Itenerary      pulumi.StringPtrInput   `pulumi:"itenerary"`
	ObservedDigest pulumi.StringPtrInput   `pulumi:"observedDigest"`
	Phase          pulumi.StringPtrInput   `pulumi:"phase"`
	StartTimestamp pulumi.StringPtrInput   `pulumi:"startTimestamp"`
}

func (MigMigrationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationStatus)(nil)).Elem()
}

func (i MigMigrationStatusArgs) ToMigMigrationStatusOutput() MigMigrationStatusOutput {
	return i.ToMigMigrationStatusOutputWithContext(context.Background())
}

func (i MigMigrationStatusArgs) ToMigMigrationStatusOutputWithContext(ctx context.Context) MigMigrationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationStatusOutput)
}

func (i MigMigrationStatusArgs) ToMigMigrationStatusPtrOutput() MigMigrationStatusPtrOutput {
	return i.ToMigMigrationStatusPtrOutputWithContext(context.Background())
}

func (i MigMigrationStatusArgs) ToMigMigrationStatusPtrOutputWithContext(ctx context.Context) MigMigrationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationStatusOutput).ToMigMigrationStatusPtrOutputWithContext(ctx)
}

// MigMigrationStatusPtrInput is an input type that accepts MigMigrationStatusArgs, MigMigrationStatusPtr and MigMigrationStatusPtrOutput values.
// You can construct a concrete instance of `MigMigrationStatusPtrInput` via:
//
//          MigMigrationStatusArgs{...}
//
//  or:
//
//          nil
type MigMigrationStatusPtrInput interface {
	pulumi.Input

	ToMigMigrationStatusPtrOutput() MigMigrationStatusPtrOutput
	ToMigMigrationStatusPtrOutputWithContext(context.Context) MigMigrationStatusPtrOutput
}

type migMigrationStatusPtrType MigMigrationStatusArgs

func MigMigrationStatusPtr(v *MigMigrationStatusArgs) MigMigrationStatusPtrInput {
	return (*migMigrationStatusPtrType)(v)
}

func (*migMigrationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigMigrationStatus)(nil)).Elem()
}

func (i *migMigrationStatusPtrType) ToMigMigrationStatusPtrOutput() MigMigrationStatusPtrOutput {
	return i.ToMigMigrationStatusPtrOutputWithContext(context.Background())
}

func (i *migMigrationStatusPtrType) ToMigMigrationStatusPtrOutputWithContext(ctx context.Context) MigMigrationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigMigrationStatusPtrOutput)
}

type MigMigrationStatusOutput struct{ *pulumi.OutputState }

func (MigMigrationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigMigrationStatus)(nil)).Elem()
}

func (o MigMigrationStatusOutput) ToMigMigrationStatusOutput() MigMigrationStatusOutput {
	return o
}

func (o MigMigrationStatusOutput) ToMigMigrationStatusOutputWithContext(ctx context.Context) MigMigrationStatusOutput {
	return o
}

func (o MigMigrationStatusOutput) ToMigMigrationStatusPtrOutput() MigMigrationStatusPtrOutput {
	return o.ToMigMigrationStatusPtrOutputWithContext(context.Background())
}

func (o MigMigrationStatusOutput) ToMigMigrationStatusPtrOutputWithContext(ctx context.Context) MigMigrationStatusPtrOutput {
	return o.ApplyT(func(v MigMigrationStatus) *MigMigrationStatus {
		return &v
	}).(MigMigrationStatusPtrOutput)
}
func (o MigMigrationStatusOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigMigrationStatus) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

func (o MigMigrationStatusOutput) Itenerary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigMigrationStatus) *string { return v.Itenerary }).(pulumi.StringPtrOutput)
}

func (o MigMigrationStatusOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigMigrationStatus) *string { return v.ObservedDigest }).(pulumi.StringPtrOutput)
}

func (o MigMigrationStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigMigrationStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

func (o MigMigrationStatusOutput) StartTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigMigrationStatus) *string { return v.StartTimestamp }).(pulumi.StringPtrOutput)
}

type MigMigrationStatusPtrOutput struct{ *pulumi.OutputState }

func (MigMigrationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigMigrationStatus)(nil)).Elem()
}

func (o MigMigrationStatusPtrOutput) ToMigMigrationStatusPtrOutput() MigMigrationStatusPtrOutput {
	return o
}

func (o MigMigrationStatusPtrOutput) ToMigMigrationStatusPtrOutputWithContext(ctx context.Context) MigMigrationStatusPtrOutput {
	return o
}

func (o MigMigrationStatusPtrOutput) Elem() MigMigrationStatusOutput {
	return o.ApplyT(func(v *MigMigrationStatus) MigMigrationStatus { return *v }).(MigMigrationStatusOutput)
}

func (o MigMigrationStatusPtrOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigMigrationStatus) []string {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(pulumi.StringArrayOutput)
}

func (o MigMigrationStatusPtrOutput) Itenerary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigMigrationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Itenerary
	}).(pulumi.StringPtrOutput)
}

func (o MigMigrationStatusPtrOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigMigrationStatus) *string {
		if v == nil {
			return nil
		}
		return v.ObservedDigest
	}).(pulumi.StringPtrOutput)
}

func (o MigMigrationStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigMigrationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

func (o MigMigrationStatusPtrOutput) StartTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigMigrationStatus) *string {
		if v == nil {
			return nil
		}
		return v.StartTimestamp
	}).(pulumi.StringPtrOutput)
}

type MigPlanType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *MigPlanSpec       `pulumi:"spec"`
	Status     *MigPlanStatus     `pulumi:"status"`
}

// MigPlanTypeInput is an input type that accepts MigPlanTypeArgs and MigPlanTypeOutput values.
// You can construct a concrete instance of `MigPlanTypeInput` via:
//
//          MigPlanTypeArgs{...}
type MigPlanTypeInput interface {
	pulumi.Input

	ToMigPlanTypeOutput() MigPlanTypeOutput
	ToMigPlanTypeOutputWithContext(context.Context) MigPlanTypeOutput
}

type MigPlanTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       MigPlanSpecPtrInput       `pulumi:"spec"`
	Status     MigPlanStatusPtrInput     `pulumi:"status"`
}

func (MigPlanTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanType)(nil)).Elem()
}

func (i MigPlanTypeArgs) ToMigPlanTypeOutput() MigPlanTypeOutput {
	return i.ToMigPlanTypeOutputWithContext(context.Background())
}

func (i MigPlanTypeArgs) ToMigPlanTypeOutputWithContext(ctx context.Context) MigPlanTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanTypeOutput)
}

type MigPlanTypeOutput struct{ *pulumi.OutputState }

func (MigPlanTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanType)(nil)).Elem()
}

func (o MigPlanTypeOutput) ToMigPlanTypeOutput() MigPlanTypeOutput {
	return o
}

func (o MigPlanTypeOutput) ToMigPlanTypeOutputWithContext(ctx context.Context) MigPlanTypeOutput {
	return o
}

func (o MigPlanTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MigPlanTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MigPlanTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v MigPlanType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o MigPlanTypeOutput) Spec() MigPlanSpecPtrOutput {
	return o.ApplyT(func(v MigPlanType) *MigPlanSpec { return v.Spec }).(MigPlanSpecPtrOutput)
}

func (o MigPlanTypeOutput) Status() MigPlanStatusPtrOutput {
	return o.ApplyT(func(v MigPlanType) *MigPlanStatus { return v.Status }).(MigPlanStatusPtrOutput)
}

type MigPlanMetadata struct {
}

// MigPlanMetadataInput is an input type that accepts MigPlanMetadataArgs and MigPlanMetadataOutput values.
// You can construct a concrete instance of `MigPlanMetadataInput` via:
//
//          MigPlanMetadataArgs{...}
type MigPlanMetadataInput interface {
	pulumi.Input

	ToMigPlanMetadataOutput() MigPlanMetadataOutput
	ToMigPlanMetadataOutputWithContext(context.Context) MigPlanMetadataOutput
}

type MigPlanMetadataArgs struct {
}

func (MigPlanMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanMetadata)(nil)).Elem()
}

func (i MigPlanMetadataArgs) ToMigPlanMetadataOutput() MigPlanMetadataOutput {
	return i.ToMigPlanMetadataOutputWithContext(context.Background())
}

func (i MigPlanMetadataArgs) ToMigPlanMetadataOutputWithContext(ctx context.Context) MigPlanMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanMetadataOutput)
}

type MigPlanMetadataOutput struct{ *pulumi.OutputState }

func (MigPlanMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanMetadata)(nil)).Elem()
}

func (o MigPlanMetadataOutput) ToMigPlanMetadataOutput() MigPlanMetadataOutput {
	return o
}

func (o MigPlanMetadataOutput) ToMigPlanMetadataOutputWithContext(ctx context.Context) MigPlanMetadataOutput {
	return o
}

type MigPlanSpec struct {
	Closed            *bool                          `pulumi:"closed"`
	DestMigClusterRef map[string]interface{}         `pulumi:"destMigClusterRef"`
	Hooks             []MigPlanSpecHooks             `pulumi:"hooks"`
	MigStorageRef     map[string]interface{}         `pulumi:"migStorageRef"`
	Namespaces        []string                       `pulumi:"namespaces"`
	PersistentVolumes []MigPlanSpecPersistentVolumes `pulumi:"persistentVolumes"`
	SrcMigClusterRef  map[string]interface{}         `pulumi:"srcMigClusterRef"`
}

// MigPlanSpecInput is an input type that accepts MigPlanSpecArgs and MigPlanSpecOutput values.
// You can construct a concrete instance of `MigPlanSpecInput` via:
//
//          MigPlanSpecArgs{...}
type MigPlanSpecInput interface {
	pulumi.Input

	ToMigPlanSpecOutput() MigPlanSpecOutput
	ToMigPlanSpecOutputWithContext(context.Context) MigPlanSpecOutput
}

type MigPlanSpecArgs struct {
	Closed            pulumi.BoolPtrInput                    `pulumi:"closed"`
	DestMigClusterRef pulumi.MapInput                        `pulumi:"destMigClusterRef"`
	Hooks             MigPlanSpecHooksArrayInput             `pulumi:"hooks"`
	MigStorageRef     pulumi.MapInput                        `pulumi:"migStorageRef"`
	Namespaces        pulumi.StringArrayInput                `pulumi:"namespaces"`
	PersistentVolumes MigPlanSpecPersistentVolumesArrayInput `pulumi:"persistentVolumes"`
	SrcMigClusterRef  pulumi.MapInput                        `pulumi:"srcMigClusterRef"`
}

func (MigPlanSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpec)(nil)).Elem()
}

func (i MigPlanSpecArgs) ToMigPlanSpecOutput() MigPlanSpecOutput {
	return i.ToMigPlanSpecOutputWithContext(context.Background())
}

func (i MigPlanSpecArgs) ToMigPlanSpecOutputWithContext(ctx context.Context) MigPlanSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecOutput)
}

func (i MigPlanSpecArgs) ToMigPlanSpecPtrOutput() MigPlanSpecPtrOutput {
	return i.ToMigPlanSpecPtrOutputWithContext(context.Background())
}

func (i MigPlanSpecArgs) ToMigPlanSpecPtrOutputWithContext(ctx context.Context) MigPlanSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecOutput).ToMigPlanSpecPtrOutputWithContext(ctx)
}

// MigPlanSpecPtrInput is an input type that accepts MigPlanSpecArgs, MigPlanSpecPtr and MigPlanSpecPtrOutput values.
// You can construct a concrete instance of `MigPlanSpecPtrInput` via:
//
//          MigPlanSpecArgs{...}
//
//  or:
//
//          nil
type MigPlanSpecPtrInput interface {
	pulumi.Input

	ToMigPlanSpecPtrOutput() MigPlanSpecPtrOutput
	ToMigPlanSpecPtrOutputWithContext(context.Context) MigPlanSpecPtrOutput
}

type migPlanSpecPtrType MigPlanSpecArgs

func MigPlanSpecPtr(v *MigPlanSpecArgs) MigPlanSpecPtrInput {
	return (*migPlanSpecPtrType)(v)
}

func (*migPlanSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigPlanSpec)(nil)).Elem()
}

func (i *migPlanSpecPtrType) ToMigPlanSpecPtrOutput() MigPlanSpecPtrOutput {
	return i.ToMigPlanSpecPtrOutputWithContext(context.Background())
}

func (i *migPlanSpecPtrType) ToMigPlanSpecPtrOutputWithContext(ctx context.Context) MigPlanSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPtrOutput)
}

type MigPlanSpecOutput struct{ *pulumi.OutputState }

func (MigPlanSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpec)(nil)).Elem()
}

func (o MigPlanSpecOutput) ToMigPlanSpecOutput() MigPlanSpecOutput {
	return o
}

func (o MigPlanSpecOutput) ToMigPlanSpecOutputWithContext(ctx context.Context) MigPlanSpecOutput {
	return o
}

func (o MigPlanSpecOutput) ToMigPlanSpecPtrOutput() MigPlanSpecPtrOutput {
	return o.ToMigPlanSpecPtrOutputWithContext(context.Background())
}

func (o MigPlanSpecOutput) ToMigPlanSpecPtrOutputWithContext(ctx context.Context) MigPlanSpecPtrOutput {
	return o.ApplyT(func(v MigPlanSpec) *MigPlanSpec {
		return &v
	}).(MigPlanSpecPtrOutput)
}
func (o MigPlanSpecOutput) Closed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigPlanSpec) *bool { return v.Closed }).(pulumi.BoolPtrOutput)
}

func (o MigPlanSpecOutput) DestMigClusterRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigPlanSpec) map[string]interface{} { return v.DestMigClusterRef }).(pulumi.MapOutput)
}

func (o MigPlanSpecOutput) Hooks() MigPlanSpecHooksArrayOutput {
	return o.ApplyT(func(v MigPlanSpec) []MigPlanSpecHooks { return v.Hooks }).(MigPlanSpecHooksArrayOutput)
}

func (o MigPlanSpecOutput) MigStorageRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigPlanSpec) map[string]interface{} { return v.MigStorageRef }).(pulumi.MapOutput)
}

func (o MigPlanSpecOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigPlanSpec) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

func (o MigPlanSpecOutput) PersistentVolumes() MigPlanSpecPersistentVolumesArrayOutput {
	return o.ApplyT(func(v MigPlanSpec) []MigPlanSpecPersistentVolumes { return v.PersistentVolumes }).(MigPlanSpecPersistentVolumesArrayOutput)
}

func (o MigPlanSpecOutput) SrcMigClusterRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigPlanSpec) map[string]interface{} { return v.SrcMigClusterRef }).(pulumi.MapOutput)
}

type MigPlanSpecPtrOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigPlanSpec)(nil)).Elem()
}

func (o MigPlanSpecPtrOutput) ToMigPlanSpecPtrOutput() MigPlanSpecPtrOutput {
	return o
}

func (o MigPlanSpecPtrOutput) ToMigPlanSpecPtrOutputWithContext(ctx context.Context) MigPlanSpecPtrOutput {
	return o
}

func (o MigPlanSpecPtrOutput) Elem() MigPlanSpecOutput {
	return o.ApplyT(func(v *MigPlanSpec) MigPlanSpec { return *v }).(MigPlanSpecOutput)
}

func (o MigPlanSpecPtrOutput) Closed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigPlanSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Closed
	}).(pulumi.BoolPtrOutput)
}

func (o MigPlanSpecPtrOutput) DestMigClusterRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigPlanSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.DestMigClusterRef
	}).(pulumi.MapOutput)
}

func (o MigPlanSpecPtrOutput) Hooks() MigPlanSpecHooksArrayOutput {
	return o.ApplyT(func(v *MigPlanSpec) []MigPlanSpecHooks {
		if v == nil {
			return nil
		}
		return v.Hooks
	}).(MigPlanSpecHooksArrayOutput)
}

func (o MigPlanSpecPtrOutput) MigStorageRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigPlanSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.MigStorageRef
	}).(pulumi.MapOutput)
}

func (o MigPlanSpecPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigPlanSpec) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

func (o MigPlanSpecPtrOutput) PersistentVolumes() MigPlanSpecPersistentVolumesArrayOutput {
	return o.ApplyT(func(v *MigPlanSpec) []MigPlanSpecPersistentVolumes {
		if v == nil {
			return nil
		}
		return v.PersistentVolumes
	}).(MigPlanSpecPersistentVolumesArrayOutput)
}

func (o MigPlanSpecPtrOutput) SrcMigClusterRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigPlanSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SrcMigClusterRef
	}).(pulumi.MapOutput)
}

type MigPlanSpecDestMigClusterRef struct {
}

// MigPlanSpecDestMigClusterRefInput is an input type that accepts MigPlanSpecDestMigClusterRefArgs and MigPlanSpecDestMigClusterRefOutput values.
// You can construct a concrete instance of `MigPlanSpecDestMigClusterRefInput` via:
//
//          MigPlanSpecDestMigClusterRefArgs{...}
type MigPlanSpecDestMigClusterRefInput interface {
	pulumi.Input

	ToMigPlanSpecDestMigClusterRefOutput() MigPlanSpecDestMigClusterRefOutput
	ToMigPlanSpecDestMigClusterRefOutputWithContext(context.Context) MigPlanSpecDestMigClusterRefOutput
}

type MigPlanSpecDestMigClusterRefArgs struct {
}

func (MigPlanSpecDestMigClusterRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecDestMigClusterRef)(nil)).Elem()
}

func (i MigPlanSpecDestMigClusterRefArgs) ToMigPlanSpecDestMigClusterRefOutput() MigPlanSpecDestMigClusterRefOutput {
	return i.ToMigPlanSpecDestMigClusterRefOutputWithContext(context.Background())
}

func (i MigPlanSpecDestMigClusterRefArgs) ToMigPlanSpecDestMigClusterRefOutputWithContext(ctx context.Context) MigPlanSpecDestMigClusterRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecDestMigClusterRefOutput)
}

type MigPlanSpecDestMigClusterRefOutput struct{ *pulumi.OutputState }

func (MigPlanSpecDestMigClusterRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecDestMigClusterRef)(nil)).Elem()
}

func (o MigPlanSpecDestMigClusterRefOutput) ToMigPlanSpecDestMigClusterRefOutput() MigPlanSpecDestMigClusterRefOutput {
	return o
}

func (o MigPlanSpecDestMigClusterRefOutput) ToMigPlanSpecDestMigClusterRefOutputWithContext(ctx context.Context) MigPlanSpecDestMigClusterRefOutput {
	return o
}

type MigPlanSpecHooks struct {
	ExecutionNamespace string                 `pulumi:"executionNamespace"`
	Phase              string                 `pulumi:"phase"`
	Reference          map[string]interface{} `pulumi:"reference"`
	ServiceAccount     string                 `pulumi:"serviceAccount"`
}

// MigPlanSpecHooksInput is an input type that accepts MigPlanSpecHooksArgs and MigPlanSpecHooksOutput values.
// You can construct a concrete instance of `MigPlanSpecHooksInput` via:
//
//          MigPlanSpecHooksArgs{...}
type MigPlanSpecHooksInput interface {
	pulumi.Input

	ToMigPlanSpecHooksOutput() MigPlanSpecHooksOutput
	ToMigPlanSpecHooksOutputWithContext(context.Context) MigPlanSpecHooksOutput
}

type MigPlanSpecHooksArgs struct {
	ExecutionNamespace pulumi.StringInput `pulumi:"executionNamespace"`
	Phase              pulumi.StringInput `pulumi:"phase"`
	Reference          pulumi.MapInput    `pulumi:"reference"`
	ServiceAccount     pulumi.StringInput `pulumi:"serviceAccount"`
}

func (MigPlanSpecHooksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecHooks)(nil)).Elem()
}

func (i MigPlanSpecHooksArgs) ToMigPlanSpecHooksOutput() MigPlanSpecHooksOutput {
	return i.ToMigPlanSpecHooksOutputWithContext(context.Background())
}

func (i MigPlanSpecHooksArgs) ToMigPlanSpecHooksOutputWithContext(ctx context.Context) MigPlanSpecHooksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecHooksOutput)
}

// MigPlanSpecHooksArrayInput is an input type that accepts MigPlanSpecHooksArray and MigPlanSpecHooksArrayOutput values.
// You can construct a concrete instance of `MigPlanSpecHooksArrayInput` via:
//
//          MigPlanSpecHooksArray{ MigPlanSpecHooksArgs{...} }
type MigPlanSpecHooksArrayInput interface {
	pulumi.Input

	ToMigPlanSpecHooksArrayOutput() MigPlanSpecHooksArrayOutput
	ToMigPlanSpecHooksArrayOutputWithContext(context.Context) MigPlanSpecHooksArrayOutput
}

type MigPlanSpecHooksArray []MigPlanSpecHooksInput

func (MigPlanSpecHooksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanSpecHooks)(nil)).Elem()
}

func (i MigPlanSpecHooksArray) ToMigPlanSpecHooksArrayOutput() MigPlanSpecHooksArrayOutput {
	return i.ToMigPlanSpecHooksArrayOutputWithContext(context.Background())
}

func (i MigPlanSpecHooksArray) ToMigPlanSpecHooksArrayOutputWithContext(ctx context.Context) MigPlanSpecHooksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecHooksArrayOutput)
}

type MigPlanSpecHooksOutput struct{ *pulumi.OutputState }

func (MigPlanSpecHooksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecHooks)(nil)).Elem()
}

func (o MigPlanSpecHooksOutput) ToMigPlanSpecHooksOutput() MigPlanSpecHooksOutput {
	return o
}

func (o MigPlanSpecHooksOutput) ToMigPlanSpecHooksOutputWithContext(ctx context.Context) MigPlanSpecHooksOutput {
	return o
}

func (o MigPlanSpecHooksOutput) ExecutionNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanSpecHooks) string { return v.ExecutionNamespace }).(pulumi.StringOutput)
}

func (o MigPlanSpecHooksOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanSpecHooks) string { return v.Phase }).(pulumi.StringOutput)
}

func (o MigPlanSpecHooksOutput) Reference() pulumi.MapOutput {
	return o.ApplyT(func(v MigPlanSpecHooks) map[string]interface{} { return v.Reference }).(pulumi.MapOutput)
}

func (o MigPlanSpecHooksOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanSpecHooks) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

type MigPlanSpecHooksArrayOutput struct{ *pulumi.OutputState }

func (MigPlanSpecHooksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanSpecHooks)(nil)).Elem()
}

func (o MigPlanSpecHooksArrayOutput) ToMigPlanSpecHooksArrayOutput() MigPlanSpecHooksArrayOutput {
	return o
}

func (o MigPlanSpecHooksArrayOutput) ToMigPlanSpecHooksArrayOutputWithContext(ctx context.Context) MigPlanSpecHooksArrayOutput {
	return o
}

func (o MigPlanSpecHooksArrayOutput) Index(i pulumi.IntInput) MigPlanSpecHooksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigPlanSpecHooks {
		return vs[0].([]MigPlanSpecHooks)[vs[1].(int)]
	}).(MigPlanSpecHooksOutput)
}

type MigPlanSpecHooksReference struct {
}

// MigPlanSpecHooksReferenceInput is an input type that accepts MigPlanSpecHooksReferenceArgs and MigPlanSpecHooksReferenceOutput values.
// You can construct a concrete instance of `MigPlanSpecHooksReferenceInput` via:
//
//          MigPlanSpecHooksReferenceArgs{...}
type MigPlanSpecHooksReferenceInput interface {
	pulumi.Input

	ToMigPlanSpecHooksReferenceOutput() MigPlanSpecHooksReferenceOutput
	ToMigPlanSpecHooksReferenceOutputWithContext(context.Context) MigPlanSpecHooksReferenceOutput
}

type MigPlanSpecHooksReferenceArgs struct {
}

func (MigPlanSpecHooksReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecHooksReference)(nil)).Elem()
}

func (i MigPlanSpecHooksReferenceArgs) ToMigPlanSpecHooksReferenceOutput() MigPlanSpecHooksReferenceOutput {
	return i.ToMigPlanSpecHooksReferenceOutputWithContext(context.Background())
}

func (i MigPlanSpecHooksReferenceArgs) ToMigPlanSpecHooksReferenceOutputWithContext(ctx context.Context) MigPlanSpecHooksReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecHooksReferenceOutput)
}

type MigPlanSpecHooksReferenceOutput struct{ *pulumi.OutputState }

func (MigPlanSpecHooksReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecHooksReference)(nil)).Elem()
}

func (o MigPlanSpecHooksReferenceOutput) ToMigPlanSpecHooksReferenceOutput() MigPlanSpecHooksReferenceOutput {
	return o
}

func (o MigPlanSpecHooksReferenceOutput) ToMigPlanSpecHooksReferenceOutputWithContext(ctx context.Context) MigPlanSpecHooksReferenceOutput {
	return o
}

type MigPlanSpecMigStorageRef struct {
}

// MigPlanSpecMigStorageRefInput is an input type that accepts MigPlanSpecMigStorageRefArgs and MigPlanSpecMigStorageRefOutput values.
// You can construct a concrete instance of `MigPlanSpecMigStorageRefInput` via:
//
//          MigPlanSpecMigStorageRefArgs{...}
type MigPlanSpecMigStorageRefInput interface {
	pulumi.Input

	ToMigPlanSpecMigStorageRefOutput() MigPlanSpecMigStorageRefOutput
	ToMigPlanSpecMigStorageRefOutputWithContext(context.Context) MigPlanSpecMigStorageRefOutput
}

type MigPlanSpecMigStorageRefArgs struct {
}

func (MigPlanSpecMigStorageRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecMigStorageRef)(nil)).Elem()
}

func (i MigPlanSpecMigStorageRefArgs) ToMigPlanSpecMigStorageRefOutput() MigPlanSpecMigStorageRefOutput {
	return i.ToMigPlanSpecMigStorageRefOutputWithContext(context.Background())
}

func (i MigPlanSpecMigStorageRefArgs) ToMigPlanSpecMigStorageRefOutputWithContext(ctx context.Context) MigPlanSpecMigStorageRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecMigStorageRefOutput)
}

type MigPlanSpecMigStorageRefOutput struct{ *pulumi.OutputState }

func (MigPlanSpecMigStorageRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecMigStorageRef)(nil)).Elem()
}

func (o MigPlanSpecMigStorageRefOutput) ToMigPlanSpecMigStorageRefOutput() MigPlanSpecMigStorageRefOutput {
	return o
}

func (o MigPlanSpecMigStorageRefOutput) ToMigPlanSpecMigStorageRefOutputWithContext(ctx context.Context) MigPlanSpecMigStorageRefOutput {
	return o
}

type MigPlanSpecPersistentVolumes struct {
	Capacity     *string                               `pulumi:"capacity"`
	Name         *string                               `pulumi:"name"`
	Pvc          *MigPlanSpecPersistentVolumesPvc      `pulumi:"pvc"`
	Selection    MigPlanSpecPersistentVolumesSelection `pulumi:"selection"`
	StorageClass *string                               `pulumi:"storageClass"`
	Supported    MigPlanSpecPersistentVolumesSupported `pulumi:"supported"`
}

// MigPlanSpecPersistentVolumesInput is an input type that accepts MigPlanSpecPersistentVolumesArgs and MigPlanSpecPersistentVolumesOutput values.
// You can construct a concrete instance of `MigPlanSpecPersistentVolumesInput` via:
//
//          MigPlanSpecPersistentVolumesArgs{...}
type MigPlanSpecPersistentVolumesInput interface {
	pulumi.Input

	ToMigPlanSpecPersistentVolumesOutput() MigPlanSpecPersistentVolumesOutput
	ToMigPlanSpecPersistentVolumesOutputWithContext(context.Context) MigPlanSpecPersistentVolumesOutput
}

type MigPlanSpecPersistentVolumesArgs struct {
	Capacity     pulumi.StringPtrInput                      `pulumi:"capacity"`
	Name         pulumi.StringPtrInput                      `pulumi:"name"`
	Pvc          MigPlanSpecPersistentVolumesPvcPtrInput    `pulumi:"pvc"`
	Selection    MigPlanSpecPersistentVolumesSelectionInput `pulumi:"selection"`
	StorageClass pulumi.StringPtrInput                      `pulumi:"storageClass"`
	Supported    MigPlanSpecPersistentVolumesSupportedInput `pulumi:"supported"`
}

func (MigPlanSpecPersistentVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumes)(nil)).Elem()
}

func (i MigPlanSpecPersistentVolumesArgs) ToMigPlanSpecPersistentVolumesOutput() MigPlanSpecPersistentVolumesOutput {
	return i.ToMigPlanSpecPersistentVolumesOutputWithContext(context.Background())
}

func (i MigPlanSpecPersistentVolumesArgs) ToMigPlanSpecPersistentVolumesOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesOutput)
}

// MigPlanSpecPersistentVolumesArrayInput is an input type that accepts MigPlanSpecPersistentVolumesArray and MigPlanSpecPersistentVolumesArrayOutput values.
// You can construct a concrete instance of `MigPlanSpecPersistentVolumesArrayInput` via:
//
//          MigPlanSpecPersistentVolumesArray{ MigPlanSpecPersistentVolumesArgs{...} }
type MigPlanSpecPersistentVolumesArrayInput interface {
	pulumi.Input

	ToMigPlanSpecPersistentVolumesArrayOutput() MigPlanSpecPersistentVolumesArrayOutput
	ToMigPlanSpecPersistentVolumesArrayOutputWithContext(context.Context) MigPlanSpecPersistentVolumesArrayOutput
}

type MigPlanSpecPersistentVolumesArray []MigPlanSpecPersistentVolumesInput

func (MigPlanSpecPersistentVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanSpecPersistentVolumes)(nil)).Elem()
}

func (i MigPlanSpecPersistentVolumesArray) ToMigPlanSpecPersistentVolumesArrayOutput() MigPlanSpecPersistentVolumesArrayOutput {
	return i.ToMigPlanSpecPersistentVolumesArrayOutputWithContext(context.Background())
}

func (i MigPlanSpecPersistentVolumesArray) ToMigPlanSpecPersistentVolumesArrayOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesArrayOutput)
}

type MigPlanSpecPersistentVolumesOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPersistentVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumes)(nil)).Elem()
}

func (o MigPlanSpecPersistentVolumesOutput) ToMigPlanSpecPersistentVolumesOutput() MigPlanSpecPersistentVolumesOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesOutput) ToMigPlanSpecPersistentVolumesOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumes) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesOutput) Pvc() MigPlanSpecPersistentVolumesPvcPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumes) *MigPlanSpecPersistentVolumesPvc { return v.Pvc }).(MigPlanSpecPersistentVolumesPvcPtrOutput)
}

func (o MigPlanSpecPersistentVolumesOutput) Selection() MigPlanSpecPersistentVolumesSelectionOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumes) MigPlanSpecPersistentVolumesSelection { return v.Selection }).(MigPlanSpecPersistentVolumesSelectionOutput)
}

func (o MigPlanSpecPersistentVolumesOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumes) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesOutput) Supported() MigPlanSpecPersistentVolumesSupportedOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumes) MigPlanSpecPersistentVolumesSupported { return v.Supported }).(MigPlanSpecPersistentVolumesSupportedOutput)
}

type MigPlanSpecPersistentVolumesArrayOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPersistentVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanSpecPersistentVolumes)(nil)).Elem()
}

func (o MigPlanSpecPersistentVolumesArrayOutput) ToMigPlanSpecPersistentVolumesArrayOutput() MigPlanSpecPersistentVolumesArrayOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesArrayOutput) ToMigPlanSpecPersistentVolumesArrayOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesArrayOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesArrayOutput) Index(i pulumi.IntInput) MigPlanSpecPersistentVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigPlanSpecPersistentVolumes {
		return vs[0].([]MigPlanSpecPersistentVolumes)[vs[1].(int)]
	}).(MigPlanSpecPersistentVolumesOutput)
}

type MigPlanSpecPersistentVolumesPvc struct {
	AccessModes []string `pulumi:"accessModes"`
	Name        *string  `pulumi:"name"`
	Namespace   *string  `pulumi:"namespace"`
}

// MigPlanSpecPersistentVolumesPvcInput is an input type that accepts MigPlanSpecPersistentVolumesPvcArgs and MigPlanSpecPersistentVolumesPvcOutput values.
// You can construct a concrete instance of `MigPlanSpecPersistentVolumesPvcInput` via:
//
//          MigPlanSpecPersistentVolumesPvcArgs{...}
type MigPlanSpecPersistentVolumesPvcInput interface {
	pulumi.Input

	ToMigPlanSpecPersistentVolumesPvcOutput() MigPlanSpecPersistentVolumesPvcOutput
	ToMigPlanSpecPersistentVolumesPvcOutputWithContext(context.Context) MigPlanSpecPersistentVolumesPvcOutput
}

type MigPlanSpecPersistentVolumesPvcArgs struct {
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (MigPlanSpecPersistentVolumesPvcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumesPvc)(nil)).Elem()
}

func (i MigPlanSpecPersistentVolumesPvcArgs) ToMigPlanSpecPersistentVolumesPvcOutput() MigPlanSpecPersistentVolumesPvcOutput {
	return i.ToMigPlanSpecPersistentVolumesPvcOutputWithContext(context.Background())
}

func (i MigPlanSpecPersistentVolumesPvcArgs) ToMigPlanSpecPersistentVolumesPvcOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesPvcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesPvcOutput)
}

func (i MigPlanSpecPersistentVolumesPvcArgs) ToMigPlanSpecPersistentVolumesPvcPtrOutput() MigPlanSpecPersistentVolumesPvcPtrOutput {
	return i.ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(context.Background())
}

func (i MigPlanSpecPersistentVolumesPvcArgs) ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesPvcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesPvcOutput).ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(ctx)
}

// MigPlanSpecPersistentVolumesPvcPtrInput is an input type that accepts MigPlanSpecPersistentVolumesPvcArgs, MigPlanSpecPersistentVolumesPvcPtr and MigPlanSpecPersistentVolumesPvcPtrOutput values.
// You can construct a concrete instance of `MigPlanSpecPersistentVolumesPvcPtrInput` via:
//
//          MigPlanSpecPersistentVolumesPvcArgs{...}
//
//  or:
//
//          nil
type MigPlanSpecPersistentVolumesPvcPtrInput interface {
	pulumi.Input

	ToMigPlanSpecPersistentVolumesPvcPtrOutput() MigPlanSpecPersistentVolumesPvcPtrOutput
	ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(context.Context) MigPlanSpecPersistentVolumesPvcPtrOutput
}

type migPlanSpecPersistentVolumesPvcPtrType MigPlanSpecPersistentVolumesPvcArgs

func MigPlanSpecPersistentVolumesPvcPtr(v *MigPlanSpecPersistentVolumesPvcArgs) MigPlanSpecPersistentVolumesPvcPtrInput {
	return (*migPlanSpecPersistentVolumesPvcPtrType)(v)
}

func (*migPlanSpecPersistentVolumesPvcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigPlanSpecPersistentVolumesPvc)(nil)).Elem()
}

func (i *migPlanSpecPersistentVolumesPvcPtrType) ToMigPlanSpecPersistentVolumesPvcPtrOutput() MigPlanSpecPersistentVolumesPvcPtrOutput {
	return i.ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(context.Background())
}

func (i *migPlanSpecPersistentVolumesPvcPtrType) ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesPvcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesPvcPtrOutput)
}

type MigPlanSpecPersistentVolumesPvcOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPersistentVolumesPvcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumesPvc)(nil)).Elem()
}

func (o MigPlanSpecPersistentVolumesPvcOutput) ToMigPlanSpecPersistentVolumesPvcOutput() MigPlanSpecPersistentVolumesPvcOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesPvcOutput) ToMigPlanSpecPersistentVolumesPvcOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesPvcOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesPvcOutput) ToMigPlanSpecPersistentVolumesPvcPtrOutput() MigPlanSpecPersistentVolumesPvcPtrOutput {
	return o.ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(context.Background())
}

func (o MigPlanSpecPersistentVolumesPvcOutput) ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesPvcPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesPvc) *MigPlanSpecPersistentVolumesPvc {
		return &v
	}).(MigPlanSpecPersistentVolumesPvcPtrOutput)
}
func (o MigPlanSpecPersistentVolumesPvcOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesPvc) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

func (o MigPlanSpecPersistentVolumesPvcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesPvc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesPvcOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesPvc) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type MigPlanSpecPersistentVolumesPvcPtrOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPersistentVolumesPvcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigPlanSpecPersistentVolumesPvc)(nil)).Elem()
}

func (o MigPlanSpecPersistentVolumesPvcPtrOutput) ToMigPlanSpecPersistentVolumesPvcPtrOutput() MigPlanSpecPersistentVolumesPvcPtrOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesPvcPtrOutput) ToMigPlanSpecPersistentVolumesPvcPtrOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesPvcPtrOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesPvcPtrOutput) Elem() MigPlanSpecPersistentVolumesPvcOutput {
	return o.ApplyT(func(v *MigPlanSpecPersistentVolumesPvc) MigPlanSpecPersistentVolumesPvc { return *v }).(MigPlanSpecPersistentVolumesPvcOutput)
}

func (o MigPlanSpecPersistentVolumesPvcPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigPlanSpecPersistentVolumesPvc) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

func (o MigPlanSpecPersistentVolumesPvcPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigPlanSpecPersistentVolumesPvc) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesPvcPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigPlanSpecPersistentVolumesPvc) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type MigPlanSpecPersistentVolumesSelection struct {
	AccessMode   *string `pulumi:"accessMode"`
	Action       *string `pulumi:"action"`
	CopyMethod   *string `pulumi:"copyMethod"`
	StorageClass *string `pulumi:"storageClass"`
	Verify       *bool   `pulumi:"verify"`
}

// MigPlanSpecPersistentVolumesSelectionInput is an input type that accepts MigPlanSpecPersistentVolumesSelectionArgs and MigPlanSpecPersistentVolumesSelectionOutput values.
// You can construct a concrete instance of `MigPlanSpecPersistentVolumesSelectionInput` via:
//
//          MigPlanSpecPersistentVolumesSelectionArgs{...}
type MigPlanSpecPersistentVolumesSelectionInput interface {
	pulumi.Input

	ToMigPlanSpecPersistentVolumesSelectionOutput() MigPlanSpecPersistentVolumesSelectionOutput
	ToMigPlanSpecPersistentVolumesSelectionOutputWithContext(context.Context) MigPlanSpecPersistentVolumesSelectionOutput
}

type MigPlanSpecPersistentVolumesSelectionArgs struct {
	AccessMode   pulumi.StringPtrInput `pulumi:"accessMode"`
	Action       pulumi.StringPtrInput `pulumi:"action"`
	CopyMethod   pulumi.StringPtrInput `pulumi:"copyMethod"`
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	Verify       pulumi.BoolPtrInput   `pulumi:"verify"`
}

func (MigPlanSpecPersistentVolumesSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumesSelection)(nil)).Elem()
}

func (i MigPlanSpecPersistentVolumesSelectionArgs) ToMigPlanSpecPersistentVolumesSelectionOutput() MigPlanSpecPersistentVolumesSelectionOutput {
	return i.ToMigPlanSpecPersistentVolumesSelectionOutputWithContext(context.Background())
}

func (i MigPlanSpecPersistentVolumesSelectionArgs) ToMigPlanSpecPersistentVolumesSelectionOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesSelectionOutput)
}

type MigPlanSpecPersistentVolumesSelectionOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPersistentVolumesSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumesSelection)(nil)).Elem()
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) ToMigPlanSpecPersistentVolumesSelectionOutput() MigPlanSpecPersistentVolumesSelectionOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) ToMigPlanSpecPersistentVolumesSelectionOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesSelectionOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) AccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSelection) *string { return v.AccessMode }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSelection) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) CopyMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSelection) *string { return v.CopyMethod }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSelection) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

func (o MigPlanSpecPersistentVolumesSelectionOutput) Verify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSelection) *bool { return v.Verify }).(pulumi.BoolPtrOutput)
}

type MigPlanSpecPersistentVolumesSupported struct {
	Actions     []string `pulumi:"actions"`
	CopyMethods []string `pulumi:"copyMethods"`
}

// MigPlanSpecPersistentVolumesSupportedInput is an input type that accepts MigPlanSpecPersistentVolumesSupportedArgs and MigPlanSpecPersistentVolumesSupportedOutput values.
// You can construct a concrete instance of `MigPlanSpecPersistentVolumesSupportedInput` via:
//
//          MigPlanSpecPersistentVolumesSupportedArgs{...}
type MigPlanSpecPersistentVolumesSupportedInput interface {
	pulumi.Input

	ToMigPlanSpecPersistentVolumesSupportedOutput() MigPlanSpecPersistentVolumesSupportedOutput
	ToMigPlanSpecPersistentVolumesSupportedOutputWithContext(context.Context) MigPlanSpecPersistentVolumesSupportedOutput
}

type MigPlanSpecPersistentVolumesSupportedArgs struct {
	Actions     pulumi.StringArrayInput `pulumi:"actions"`
	CopyMethods pulumi.StringArrayInput `pulumi:"copyMethods"`
}

func (MigPlanSpecPersistentVolumesSupportedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumesSupported)(nil)).Elem()
}

func (i MigPlanSpecPersistentVolumesSupportedArgs) ToMigPlanSpecPersistentVolumesSupportedOutput() MigPlanSpecPersistentVolumesSupportedOutput {
	return i.ToMigPlanSpecPersistentVolumesSupportedOutputWithContext(context.Background())
}

func (i MigPlanSpecPersistentVolumesSupportedArgs) ToMigPlanSpecPersistentVolumesSupportedOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesSupportedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecPersistentVolumesSupportedOutput)
}

type MigPlanSpecPersistentVolumesSupportedOutput struct{ *pulumi.OutputState }

func (MigPlanSpecPersistentVolumesSupportedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecPersistentVolumesSupported)(nil)).Elem()
}

func (o MigPlanSpecPersistentVolumesSupportedOutput) ToMigPlanSpecPersistentVolumesSupportedOutput() MigPlanSpecPersistentVolumesSupportedOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesSupportedOutput) ToMigPlanSpecPersistentVolumesSupportedOutputWithContext(ctx context.Context) MigPlanSpecPersistentVolumesSupportedOutput {
	return o
}

func (o MigPlanSpecPersistentVolumesSupportedOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSupported) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o MigPlanSpecPersistentVolumesSupportedOutput) CopyMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigPlanSpecPersistentVolumesSupported) []string { return v.CopyMethods }).(pulumi.StringArrayOutput)
}

type MigPlanSpecSrcMigClusterRef struct {
}

// MigPlanSpecSrcMigClusterRefInput is an input type that accepts MigPlanSpecSrcMigClusterRefArgs and MigPlanSpecSrcMigClusterRefOutput values.
// You can construct a concrete instance of `MigPlanSpecSrcMigClusterRefInput` via:
//
//          MigPlanSpecSrcMigClusterRefArgs{...}
type MigPlanSpecSrcMigClusterRefInput interface {
	pulumi.Input

	ToMigPlanSpecSrcMigClusterRefOutput() MigPlanSpecSrcMigClusterRefOutput
	ToMigPlanSpecSrcMigClusterRefOutputWithContext(context.Context) MigPlanSpecSrcMigClusterRefOutput
}

type MigPlanSpecSrcMigClusterRefArgs struct {
}

func (MigPlanSpecSrcMigClusterRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecSrcMigClusterRef)(nil)).Elem()
}

func (i MigPlanSpecSrcMigClusterRefArgs) ToMigPlanSpecSrcMigClusterRefOutput() MigPlanSpecSrcMigClusterRefOutput {
	return i.ToMigPlanSpecSrcMigClusterRefOutputWithContext(context.Background())
}

func (i MigPlanSpecSrcMigClusterRefArgs) ToMigPlanSpecSrcMigClusterRefOutputWithContext(ctx context.Context) MigPlanSpecSrcMigClusterRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanSpecSrcMigClusterRefOutput)
}

type MigPlanSpecSrcMigClusterRefOutput struct{ *pulumi.OutputState }

func (MigPlanSpecSrcMigClusterRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanSpecSrcMigClusterRef)(nil)).Elem()
}

func (o MigPlanSpecSrcMigClusterRefOutput) ToMigPlanSpecSrcMigClusterRefOutput() MigPlanSpecSrcMigClusterRefOutput {
	return o
}

func (o MigPlanSpecSrcMigClusterRefOutput) ToMigPlanSpecSrcMigClusterRefOutputWithContext(ctx context.Context) MigPlanSpecSrcMigClusterRefOutput {
	return o
}

type MigPlanStatus struct {
	IncompatibleNamespaces []MigPlanStatusIncompatibleNamespaces `pulumi:"incompatibleNamespaces"`
	ObservedDigest         *string                               `pulumi:"observedDigest"`
}

// MigPlanStatusInput is an input type that accepts MigPlanStatusArgs and MigPlanStatusOutput values.
// You can construct a concrete instance of `MigPlanStatusInput` via:
//
//          MigPlanStatusArgs{...}
type MigPlanStatusInput interface {
	pulumi.Input

	ToMigPlanStatusOutput() MigPlanStatusOutput
	ToMigPlanStatusOutputWithContext(context.Context) MigPlanStatusOutput
}

type MigPlanStatusArgs struct {
	IncompatibleNamespaces MigPlanStatusIncompatibleNamespacesArrayInput `pulumi:"incompatibleNamespaces"`
	ObservedDigest         pulumi.StringPtrInput                         `pulumi:"observedDigest"`
}

func (MigPlanStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanStatus)(nil)).Elem()
}

func (i MigPlanStatusArgs) ToMigPlanStatusOutput() MigPlanStatusOutput {
	return i.ToMigPlanStatusOutputWithContext(context.Background())
}

func (i MigPlanStatusArgs) ToMigPlanStatusOutputWithContext(ctx context.Context) MigPlanStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusOutput)
}

func (i MigPlanStatusArgs) ToMigPlanStatusPtrOutput() MigPlanStatusPtrOutput {
	return i.ToMigPlanStatusPtrOutputWithContext(context.Background())
}

func (i MigPlanStatusArgs) ToMigPlanStatusPtrOutputWithContext(ctx context.Context) MigPlanStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusOutput).ToMigPlanStatusPtrOutputWithContext(ctx)
}

// MigPlanStatusPtrInput is an input type that accepts MigPlanStatusArgs, MigPlanStatusPtr and MigPlanStatusPtrOutput values.
// You can construct a concrete instance of `MigPlanStatusPtrInput` via:
//
//          MigPlanStatusArgs{...}
//
//  or:
//
//          nil
type MigPlanStatusPtrInput interface {
	pulumi.Input

	ToMigPlanStatusPtrOutput() MigPlanStatusPtrOutput
	ToMigPlanStatusPtrOutputWithContext(context.Context) MigPlanStatusPtrOutput
}

type migPlanStatusPtrType MigPlanStatusArgs

func MigPlanStatusPtr(v *MigPlanStatusArgs) MigPlanStatusPtrInput {
	return (*migPlanStatusPtrType)(v)
}

func (*migPlanStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigPlanStatus)(nil)).Elem()
}

func (i *migPlanStatusPtrType) ToMigPlanStatusPtrOutput() MigPlanStatusPtrOutput {
	return i.ToMigPlanStatusPtrOutputWithContext(context.Background())
}

func (i *migPlanStatusPtrType) ToMigPlanStatusPtrOutputWithContext(ctx context.Context) MigPlanStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusPtrOutput)
}

type MigPlanStatusOutput struct{ *pulumi.OutputState }

func (MigPlanStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanStatus)(nil)).Elem()
}

func (o MigPlanStatusOutput) ToMigPlanStatusOutput() MigPlanStatusOutput {
	return o
}

func (o MigPlanStatusOutput) ToMigPlanStatusOutputWithContext(ctx context.Context) MigPlanStatusOutput {
	return o
}

func (o MigPlanStatusOutput) ToMigPlanStatusPtrOutput() MigPlanStatusPtrOutput {
	return o.ToMigPlanStatusPtrOutputWithContext(context.Background())
}

func (o MigPlanStatusOutput) ToMigPlanStatusPtrOutputWithContext(ctx context.Context) MigPlanStatusPtrOutput {
	return o.ApplyT(func(v MigPlanStatus) *MigPlanStatus {
		return &v
	}).(MigPlanStatusPtrOutput)
}
func (o MigPlanStatusOutput) IncompatibleNamespaces() MigPlanStatusIncompatibleNamespacesArrayOutput {
	return o.ApplyT(func(v MigPlanStatus) []MigPlanStatusIncompatibleNamespaces { return v.IncompatibleNamespaces }).(MigPlanStatusIncompatibleNamespacesArrayOutput)
}

func (o MigPlanStatusOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigPlanStatus) *string { return v.ObservedDigest }).(pulumi.StringPtrOutput)
}

type MigPlanStatusPtrOutput struct{ *pulumi.OutputState }

func (MigPlanStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigPlanStatus)(nil)).Elem()
}

func (o MigPlanStatusPtrOutput) ToMigPlanStatusPtrOutput() MigPlanStatusPtrOutput {
	return o
}

func (o MigPlanStatusPtrOutput) ToMigPlanStatusPtrOutputWithContext(ctx context.Context) MigPlanStatusPtrOutput {
	return o
}

func (o MigPlanStatusPtrOutput) Elem() MigPlanStatusOutput {
	return o.ApplyT(func(v *MigPlanStatus) MigPlanStatus { return *v }).(MigPlanStatusOutput)
}

func (o MigPlanStatusPtrOutput) IncompatibleNamespaces() MigPlanStatusIncompatibleNamespacesArrayOutput {
	return o.ApplyT(func(v *MigPlanStatus) []MigPlanStatusIncompatibleNamespaces {
		if v == nil {
			return nil
		}
		return v.IncompatibleNamespaces
	}).(MigPlanStatusIncompatibleNamespacesArrayOutput)
}

func (o MigPlanStatusPtrOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigPlanStatus) *string {
		if v == nil {
			return nil
		}
		return v.ObservedDigest
	}).(pulumi.StringPtrOutput)
}

type MigPlanStatusIncompatibleNamespaces struct {
	Gvks []MigPlanStatusIncompatibleNamespacesGvks `pulumi:"gvks"`
	Name string                                    `pulumi:"name"`
}

// MigPlanStatusIncompatibleNamespacesInput is an input type that accepts MigPlanStatusIncompatibleNamespacesArgs and MigPlanStatusIncompatibleNamespacesOutput values.
// You can construct a concrete instance of `MigPlanStatusIncompatibleNamespacesInput` via:
//
//          MigPlanStatusIncompatibleNamespacesArgs{...}
type MigPlanStatusIncompatibleNamespacesInput interface {
	pulumi.Input

	ToMigPlanStatusIncompatibleNamespacesOutput() MigPlanStatusIncompatibleNamespacesOutput
	ToMigPlanStatusIncompatibleNamespacesOutputWithContext(context.Context) MigPlanStatusIncompatibleNamespacesOutput
}

type MigPlanStatusIncompatibleNamespacesArgs struct {
	Gvks MigPlanStatusIncompatibleNamespacesGvksArrayInput `pulumi:"gvks"`
	Name pulumi.StringInput                                `pulumi:"name"`
}

func (MigPlanStatusIncompatibleNamespacesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanStatusIncompatibleNamespaces)(nil)).Elem()
}

func (i MigPlanStatusIncompatibleNamespacesArgs) ToMigPlanStatusIncompatibleNamespacesOutput() MigPlanStatusIncompatibleNamespacesOutput {
	return i.ToMigPlanStatusIncompatibleNamespacesOutputWithContext(context.Background())
}

func (i MigPlanStatusIncompatibleNamespacesArgs) ToMigPlanStatusIncompatibleNamespacesOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusIncompatibleNamespacesOutput)
}

// MigPlanStatusIncompatibleNamespacesArrayInput is an input type that accepts MigPlanStatusIncompatibleNamespacesArray and MigPlanStatusIncompatibleNamespacesArrayOutput values.
// You can construct a concrete instance of `MigPlanStatusIncompatibleNamespacesArrayInput` via:
//
//          MigPlanStatusIncompatibleNamespacesArray{ MigPlanStatusIncompatibleNamespacesArgs{...} }
type MigPlanStatusIncompatibleNamespacesArrayInput interface {
	pulumi.Input

	ToMigPlanStatusIncompatibleNamespacesArrayOutput() MigPlanStatusIncompatibleNamespacesArrayOutput
	ToMigPlanStatusIncompatibleNamespacesArrayOutputWithContext(context.Context) MigPlanStatusIncompatibleNamespacesArrayOutput
}

type MigPlanStatusIncompatibleNamespacesArray []MigPlanStatusIncompatibleNamespacesInput

func (MigPlanStatusIncompatibleNamespacesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanStatusIncompatibleNamespaces)(nil)).Elem()
}

func (i MigPlanStatusIncompatibleNamespacesArray) ToMigPlanStatusIncompatibleNamespacesArrayOutput() MigPlanStatusIncompatibleNamespacesArrayOutput {
	return i.ToMigPlanStatusIncompatibleNamespacesArrayOutputWithContext(context.Background())
}

func (i MigPlanStatusIncompatibleNamespacesArray) ToMigPlanStatusIncompatibleNamespacesArrayOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusIncompatibleNamespacesArrayOutput)
}

type MigPlanStatusIncompatibleNamespacesOutput struct{ *pulumi.OutputState }

func (MigPlanStatusIncompatibleNamespacesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanStatusIncompatibleNamespaces)(nil)).Elem()
}

func (o MigPlanStatusIncompatibleNamespacesOutput) ToMigPlanStatusIncompatibleNamespacesOutput() MigPlanStatusIncompatibleNamespacesOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesOutput) ToMigPlanStatusIncompatibleNamespacesOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesOutput) Gvks() MigPlanStatusIncompatibleNamespacesGvksArrayOutput {
	return o.ApplyT(func(v MigPlanStatusIncompatibleNamespaces) []MigPlanStatusIncompatibleNamespacesGvks { return v.Gvks }).(MigPlanStatusIncompatibleNamespacesGvksArrayOutput)
}

func (o MigPlanStatusIncompatibleNamespacesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanStatusIncompatibleNamespaces) string { return v.Name }).(pulumi.StringOutput)
}

type MigPlanStatusIncompatibleNamespacesArrayOutput struct{ *pulumi.OutputState }

func (MigPlanStatusIncompatibleNamespacesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanStatusIncompatibleNamespaces)(nil)).Elem()
}

func (o MigPlanStatusIncompatibleNamespacesArrayOutput) ToMigPlanStatusIncompatibleNamespacesArrayOutput() MigPlanStatusIncompatibleNamespacesArrayOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesArrayOutput) ToMigPlanStatusIncompatibleNamespacesArrayOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesArrayOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesArrayOutput) Index(i pulumi.IntInput) MigPlanStatusIncompatibleNamespacesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigPlanStatusIncompatibleNamespaces {
		return vs[0].([]MigPlanStatusIncompatibleNamespaces)[vs[1].(int)]
	}).(MigPlanStatusIncompatibleNamespacesOutput)
}

type MigPlanStatusIncompatibleNamespacesGvks struct {
	Group   string `pulumi:"group"`
	Kind    string `pulumi:"kind"`
	Version string `pulumi:"version"`
}

// MigPlanStatusIncompatibleNamespacesGvksInput is an input type that accepts MigPlanStatusIncompatibleNamespacesGvksArgs and MigPlanStatusIncompatibleNamespacesGvksOutput values.
// You can construct a concrete instance of `MigPlanStatusIncompatibleNamespacesGvksInput` via:
//
//          MigPlanStatusIncompatibleNamespacesGvksArgs{...}
type MigPlanStatusIncompatibleNamespacesGvksInput interface {
	pulumi.Input

	ToMigPlanStatusIncompatibleNamespacesGvksOutput() MigPlanStatusIncompatibleNamespacesGvksOutput
	ToMigPlanStatusIncompatibleNamespacesGvksOutputWithContext(context.Context) MigPlanStatusIncompatibleNamespacesGvksOutput
}

type MigPlanStatusIncompatibleNamespacesGvksArgs struct {
	Group   pulumi.StringInput `pulumi:"group"`
	Kind    pulumi.StringInput `pulumi:"kind"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (MigPlanStatusIncompatibleNamespacesGvksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanStatusIncompatibleNamespacesGvks)(nil)).Elem()
}

func (i MigPlanStatusIncompatibleNamespacesGvksArgs) ToMigPlanStatusIncompatibleNamespacesGvksOutput() MigPlanStatusIncompatibleNamespacesGvksOutput {
	return i.ToMigPlanStatusIncompatibleNamespacesGvksOutputWithContext(context.Background())
}

func (i MigPlanStatusIncompatibleNamespacesGvksArgs) ToMigPlanStatusIncompatibleNamespacesGvksOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesGvksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusIncompatibleNamespacesGvksOutput)
}

// MigPlanStatusIncompatibleNamespacesGvksArrayInput is an input type that accepts MigPlanStatusIncompatibleNamespacesGvksArray and MigPlanStatusIncompatibleNamespacesGvksArrayOutput values.
// You can construct a concrete instance of `MigPlanStatusIncompatibleNamespacesGvksArrayInput` via:
//
//          MigPlanStatusIncompatibleNamespacesGvksArray{ MigPlanStatusIncompatibleNamespacesGvksArgs{...} }
type MigPlanStatusIncompatibleNamespacesGvksArrayInput interface {
	pulumi.Input

	ToMigPlanStatusIncompatibleNamespacesGvksArrayOutput() MigPlanStatusIncompatibleNamespacesGvksArrayOutput
	ToMigPlanStatusIncompatibleNamespacesGvksArrayOutputWithContext(context.Context) MigPlanStatusIncompatibleNamespacesGvksArrayOutput
}

type MigPlanStatusIncompatibleNamespacesGvksArray []MigPlanStatusIncompatibleNamespacesGvksInput

func (MigPlanStatusIncompatibleNamespacesGvksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanStatusIncompatibleNamespacesGvks)(nil)).Elem()
}

func (i MigPlanStatusIncompatibleNamespacesGvksArray) ToMigPlanStatusIncompatibleNamespacesGvksArrayOutput() MigPlanStatusIncompatibleNamespacesGvksArrayOutput {
	return i.ToMigPlanStatusIncompatibleNamespacesGvksArrayOutputWithContext(context.Background())
}

func (i MigPlanStatusIncompatibleNamespacesGvksArray) ToMigPlanStatusIncompatibleNamespacesGvksArrayOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesGvksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigPlanStatusIncompatibleNamespacesGvksArrayOutput)
}

type MigPlanStatusIncompatibleNamespacesGvksOutput struct{ *pulumi.OutputState }

func (MigPlanStatusIncompatibleNamespacesGvksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigPlanStatusIncompatibleNamespacesGvks)(nil)).Elem()
}

func (o MigPlanStatusIncompatibleNamespacesGvksOutput) ToMigPlanStatusIncompatibleNamespacesGvksOutput() MigPlanStatusIncompatibleNamespacesGvksOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesGvksOutput) ToMigPlanStatusIncompatibleNamespacesGvksOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesGvksOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesGvksOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanStatusIncompatibleNamespacesGvks) string { return v.Group }).(pulumi.StringOutput)
}

func (o MigPlanStatusIncompatibleNamespacesGvksOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanStatusIncompatibleNamespacesGvks) string { return v.Kind }).(pulumi.StringOutput)
}

func (o MigPlanStatusIncompatibleNamespacesGvksOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MigPlanStatusIncompatibleNamespacesGvks) string { return v.Version }).(pulumi.StringOutput)
}

type MigPlanStatusIncompatibleNamespacesGvksArrayOutput struct{ *pulumi.OutputState }

func (MigPlanStatusIncompatibleNamespacesGvksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigPlanStatusIncompatibleNamespacesGvks)(nil)).Elem()
}

func (o MigPlanStatusIncompatibleNamespacesGvksArrayOutput) ToMigPlanStatusIncompatibleNamespacesGvksArrayOutput() MigPlanStatusIncompatibleNamespacesGvksArrayOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesGvksArrayOutput) ToMigPlanStatusIncompatibleNamespacesGvksArrayOutputWithContext(ctx context.Context) MigPlanStatusIncompatibleNamespacesGvksArrayOutput {
	return o
}

func (o MigPlanStatusIncompatibleNamespacesGvksArrayOutput) Index(i pulumi.IntInput) MigPlanStatusIncompatibleNamespacesGvksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigPlanStatusIncompatibleNamespacesGvks {
		return vs[0].([]MigPlanStatusIncompatibleNamespacesGvks)[vs[1].(int)]
	}).(MigPlanStatusIncompatibleNamespacesGvksOutput)
}

type MigStorageType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *MigStorageSpec    `pulumi:"spec"`
	Status     *MigStorageStatus  `pulumi:"status"`
}

// MigStorageTypeInput is an input type that accepts MigStorageTypeArgs and MigStorageTypeOutput values.
// You can construct a concrete instance of `MigStorageTypeInput` via:
//
//          MigStorageTypeArgs{...}
type MigStorageTypeInput interface {
	pulumi.Input

	ToMigStorageTypeOutput() MigStorageTypeOutput
	ToMigStorageTypeOutputWithContext(context.Context) MigStorageTypeOutput
}

type MigStorageTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       MigStorageSpecPtrInput    `pulumi:"spec"`
	Status     MigStorageStatusPtrInput  `pulumi:"status"`
}

func (MigStorageTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageType)(nil)).Elem()
}

func (i MigStorageTypeArgs) ToMigStorageTypeOutput() MigStorageTypeOutput {
	return i.ToMigStorageTypeOutputWithContext(context.Background())
}

func (i MigStorageTypeArgs) ToMigStorageTypeOutputWithContext(ctx context.Context) MigStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageTypeOutput)
}

type MigStorageTypeOutput struct{ *pulumi.OutputState }

func (MigStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageType)(nil)).Elem()
}

func (o MigStorageTypeOutput) ToMigStorageTypeOutput() MigStorageTypeOutput {
	return o
}

func (o MigStorageTypeOutput) ToMigStorageTypeOutputWithContext(ctx context.Context) MigStorageTypeOutput {
	return o
}

func (o MigStorageTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MigStorageTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MigStorageTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v MigStorageType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o MigStorageTypeOutput) Spec() MigStorageSpecPtrOutput {
	return o.ApplyT(func(v MigStorageType) *MigStorageSpec { return v.Spec }).(MigStorageSpecPtrOutput)
}

func (o MigStorageTypeOutput) Status() MigStorageStatusPtrOutput {
	return o.ApplyT(func(v MigStorageType) *MigStorageStatus { return v.Status }).(MigStorageStatusPtrOutput)
}

type MigStorageMetadata struct {
}

// MigStorageMetadataInput is an input type that accepts MigStorageMetadataArgs and MigStorageMetadataOutput values.
// You can construct a concrete instance of `MigStorageMetadataInput` via:
//
//          MigStorageMetadataArgs{...}
type MigStorageMetadataInput interface {
	pulumi.Input

	ToMigStorageMetadataOutput() MigStorageMetadataOutput
	ToMigStorageMetadataOutputWithContext(context.Context) MigStorageMetadataOutput
}

type MigStorageMetadataArgs struct {
}

func (MigStorageMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageMetadata)(nil)).Elem()
}

func (i MigStorageMetadataArgs) ToMigStorageMetadataOutput() MigStorageMetadataOutput {
	return i.ToMigStorageMetadataOutputWithContext(context.Background())
}

func (i MigStorageMetadataArgs) ToMigStorageMetadataOutputWithContext(ctx context.Context) MigStorageMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageMetadataOutput)
}

type MigStorageMetadataOutput struct{ *pulumi.OutputState }

func (MigStorageMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageMetadata)(nil)).Elem()
}

func (o MigStorageMetadataOutput) ToMigStorageMetadataOutput() MigStorageMetadataOutput {
	return o
}

func (o MigStorageMetadataOutput) ToMigStorageMetadataOutputWithContext(ctx context.Context) MigStorageMetadataOutput {
	return o
}

type MigStorageSpec struct {
	BackupStorageConfig    MigStorageSpecBackupStorageConfig   `pulumi:"backupStorageConfig"`
	BackupStorageProvider  string                              `pulumi:"backupStorageProvider"`
	VolumeSnapshotConfig   *MigStorageSpecVolumeSnapshotConfig `pulumi:"volumeSnapshotConfig"`
	VolumeSnapshotProvider *string                             `pulumi:"volumeSnapshotProvider"`
}

// MigStorageSpecInput is an input type that accepts MigStorageSpecArgs and MigStorageSpecOutput values.
// You can construct a concrete instance of `MigStorageSpecInput` via:
//
//          MigStorageSpecArgs{...}
type MigStorageSpecInput interface {
	pulumi.Input

	ToMigStorageSpecOutput() MigStorageSpecOutput
	ToMigStorageSpecOutputWithContext(context.Context) MigStorageSpecOutput
}

type MigStorageSpecArgs struct {
	BackupStorageConfig    MigStorageSpecBackupStorageConfigInput     `pulumi:"backupStorageConfig"`
	BackupStorageProvider  pulumi.StringInput                         `pulumi:"backupStorageProvider"`
	VolumeSnapshotConfig   MigStorageSpecVolumeSnapshotConfigPtrInput `pulumi:"volumeSnapshotConfig"`
	VolumeSnapshotProvider pulumi.StringPtrInput                      `pulumi:"volumeSnapshotProvider"`
}

func (MigStorageSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpec)(nil)).Elem()
}

func (i MigStorageSpecArgs) ToMigStorageSpecOutput() MigStorageSpecOutput {
	return i.ToMigStorageSpecOutputWithContext(context.Background())
}

func (i MigStorageSpecArgs) ToMigStorageSpecOutputWithContext(ctx context.Context) MigStorageSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecOutput)
}

func (i MigStorageSpecArgs) ToMigStorageSpecPtrOutput() MigStorageSpecPtrOutput {
	return i.ToMigStorageSpecPtrOutputWithContext(context.Background())
}

func (i MigStorageSpecArgs) ToMigStorageSpecPtrOutputWithContext(ctx context.Context) MigStorageSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecOutput).ToMigStorageSpecPtrOutputWithContext(ctx)
}

// MigStorageSpecPtrInput is an input type that accepts MigStorageSpecArgs, MigStorageSpecPtr and MigStorageSpecPtrOutput values.
// You can construct a concrete instance of `MigStorageSpecPtrInput` via:
//
//          MigStorageSpecArgs{...}
//
//  or:
//
//          nil
type MigStorageSpecPtrInput interface {
	pulumi.Input

	ToMigStorageSpecPtrOutput() MigStorageSpecPtrOutput
	ToMigStorageSpecPtrOutputWithContext(context.Context) MigStorageSpecPtrOutput
}

type migStorageSpecPtrType MigStorageSpecArgs

func MigStorageSpecPtr(v *MigStorageSpecArgs) MigStorageSpecPtrInput {
	return (*migStorageSpecPtrType)(v)
}

func (*migStorageSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageSpec)(nil)).Elem()
}

func (i *migStorageSpecPtrType) ToMigStorageSpecPtrOutput() MigStorageSpecPtrOutput {
	return i.ToMigStorageSpecPtrOutputWithContext(context.Background())
}

func (i *migStorageSpecPtrType) ToMigStorageSpecPtrOutputWithContext(ctx context.Context) MigStorageSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecPtrOutput)
}

type MigStorageSpecOutput struct{ *pulumi.OutputState }

func (MigStorageSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpec)(nil)).Elem()
}

func (o MigStorageSpecOutput) ToMigStorageSpecOutput() MigStorageSpecOutput {
	return o
}

func (o MigStorageSpecOutput) ToMigStorageSpecOutputWithContext(ctx context.Context) MigStorageSpecOutput {
	return o
}

func (o MigStorageSpecOutput) ToMigStorageSpecPtrOutput() MigStorageSpecPtrOutput {
	return o.ToMigStorageSpecPtrOutputWithContext(context.Background())
}

func (o MigStorageSpecOutput) ToMigStorageSpecPtrOutputWithContext(ctx context.Context) MigStorageSpecPtrOutput {
	return o.ApplyT(func(v MigStorageSpec) *MigStorageSpec {
		return &v
	}).(MigStorageSpecPtrOutput)
}
func (o MigStorageSpecOutput) BackupStorageConfig() MigStorageSpecBackupStorageConfigOutput {
	return o.ApplyT(func(v MigStorageSpec) MigStorageSpecBackupStorageConfig { return v.BackupStorageConfig }).(MigStorageSpecBackupStorageConfigOutput)
}

func (o MigStorageSpecOutput) BackupStorageProvider() pulumi.StringOutput {
	return o.ApplyT(func(v MigStorageSpec) string { return v.BackupStorageProvider }).(pulumi.StringOutput)
}

func (o MigStorageSpecOutput) VolumeSnapshotConfig() MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return o.ApplyT(func(v MigStorageSpec) *MigStorageSpecVolumeSnapshotConfig { return v.VolumeSnapshotConfig }).(MigStorageSpecVolumeSnapshotConfigPtrOutput)
}

func (o MigStorageSpecOutput) VolumeSnapshotProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpec) *string { return v.VolumeSnapshotProvider }).(pulumi.StringPtrOutput)
}

type MigStorageSpecPtrOutput struct{ *pulumi.OutputState }

func (MigStorageSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageSpec)(nil)).Elem()
}

func (o MigStorageSpecPtrOutput) ToMigStorageSpecPtrOutput() MigStorageSpecPtrOutput {
	return o
}

func (o MigStorageSpecPtrOutput) ToMigStorageSpecPtrOutputWithContext(ctx context.Context) MigStorageSpecPtrOutput {
	return o
}

func (o MigStorageSpecPtrOutput) Elem() MigStorageSpecOutput {
	return o.ApplyT(func(v *MigStorageSpec) MigStorageSpec { return *v }).(MigStorageSpecOutput)
}

func (o MigStorageSpecPtrOutput) BackupStorageConfig() MigStorageSpecBackupStorageConfigPtrOutput {
	return o.ApplyT(func(v *MigStorageSpec) *MigStorageSpecBackupStorageConfig {
		if v == nil {
			return nil
		}
		return &v.BackupStorageConfig
	}).(MigStorageSpecBackupStorageConfigPtrOutput)
}

func (o MigStorageSpecPtrOutput) BackupStorageProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BackupStorageProvider
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecPtrOutput) VolumeSnapshotConfig() MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return o.ApplyT(func(v *MigStorageSpec) *MigStorageSpecVolumeSnapshotConfig {
		if v == nil {
			return nil
		}
		return v.VolumeSnapshotConfig
	}).(MigStorageSpecVolumeSnapshotConfigPtrOutput)
}

func (o MigStorageSpecPtrOutput) VolumeSnapshotProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeSnapshotProvider
	}).(pulumi.StringPtrOutput)
}

type MigStorageSpecBackupStorageConfig struct {
	AwsBucketName         *string                `pulumi:"awsBucketName"`
	AwsKmsKeyId           *string                `pulumi:"awsKmsKeyId"`
	AwsPublicUrl          *string                `pulumi:"awsPublicUrl"`
	AwsRegion             *string                `pulumi:"awsRegion"`
	AwsS3ForcePathStyle   *bool                  `pulumi:"awsS3ForcePathStyle"`
	AwsS3Url              *string                `pulumi:"awsS3Url"`
	AwsSignatureVersion   *string                `pulumi:"awsSignatureVersion"`
	AzureResourceGroup    *string                `pulumi:"azureResourceGroup"`
	AzureStorageAccount   *string                `pulumi:"azureStorageAccount"`
	AzureStorageContainer *string                `pulumi:"azureStorageContainer"`
	CredsSecretRef        map[string]interface{} `pulumi:"credsSecretRef"`
	GcpBucket             *string                `pulumi:"gcpBucket"`
	Insecure              *bool                  `pulumi:"insecure"`
	S3CustomCABundle      *string                `pulumi:"s3CustomCABundle"`
}

// MigStorageSpecBackupStorageConfigInput is an input type that accepts MigStorageSpecBackupStorageConfigArgs and MigStorageSpecBackupStorageConfigOutput values.
// You can construct a concrete instance of `MigStorageSpecBackupStorageConfigInput` via:
//
//          MigStorageSpecBackupStorageConfigArgs{...}
type MigStorageSpecBackupStorageConfigInput interface {
	pulumi.Input

	ToMigStorageSpecBackupStorageConfigOutput() MigStorageSpecBackupStorageConfigOutput
	ToMigStorageSpecBackupStorageConfigOutputWithContext(context.Context) MigStorageSpecBackupStorageConfigOutput
}

type MigStorageSpecBackupStorageConfigArgs struct {
	AwsBucketName         pulumi.StringPtrInput `pulumi:"awsBucketName"`
	AwsKmsKeyId           pulumi.StringPtrInput `pulumi:"awsKmsKeyId"`
	AwsPublicUrl          pulumi.StringPtrInput `pulumi:"awsPublicUrl"`
	AwsRegion             pulumi.StringPtrInput `pulumi:"awsRegion"`
	AwsS3ForcePathStyle   pulumi.BoolPtrInput   `pulumi:"awsS3ForcePathStyle"`
	AwsS3Url              pulumi.StringPtrInput `pulumi:"awsS3Url"`
	AwsSignatureVersion   pulumi.StringPtrInput `pulumi:"awsSignatureVersion"`
	AzureResourceGroup    pulumi.StringPtrInput `pulumi:"azureResourceGroup"`
	AzureStorageAccount   pulumi.StringPtrInput `pulumi:"azureStorageAccount"`
	AzureStorageContainer pulumi.StringPtrInput `pulumi:"azureStorageContainer"`
	CredsSecretRef        pulumi.MapInput       `pulumi:"credsSecretRef"`
	GcpBucket             pulumi.StringPtrInput `pulumi:"gcpBucket"`
	Insecure              pulumi.BoolPtrInput   `pulumi:"insecure"`
	S3CustomCABundle      pulumi.StringPtrInput `pulumi:"s3CustomCABundle"`
}

func (MigStorageSpecBackupStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecBackupStorageConfig)(nil)).Elem()
}

func (i MigStorageSpecBackupStorageConfigArgs) ToMigStorageSpecBackupStorageConfigOutput() MigStorageSpecBackupStorageConfigOutput {
	return i.ToMigStorageSpecBackupStorageConfigOutputWithContext(context.Background())
}

func (i MigStorageSpecBackupStorageConfigArgs) ToMigStorageSpecBackupStorageConfigOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecBackupStorageConfigOutput)
}

func (i MigStorageSpecBackupStorageConfigArgs) ToMigStorageSpecBackupStorageConfigPtrOutput() MigStorageSpecBackupStorageConfigPtrOutput {
	return i.ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(context.Background())
}

func (i MigStorageSpecBackupStorageConfigArgs) ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecBackupStorageConfigOutput).ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(ctx)
}

// MigStorageSpecBackupStorageConfigPtrInput is an input type that accepts MigStorageSpecBackupStorageConfigArgs, MigStorageSpecBackupStorageConfigPtr and MigStorageSpecBackupStorageConfigPtrOutput values.
// You can construct a concrete instance of `MigStorageSpecBackupStorageConfigPtrInput` via:
//
//          MigStorageSpecBackupStorageConfigArgs{...}
//
//  or:
//
//          nil
type MigStorageSpecBackupStorageConfigPtrInput interface {
	pulumi.Input

	ToMigStorageSpecBackupStorageConfigPtrOutput() MigStorageSpecBackupStorageConfigPtrOutput
	ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(context.Context) MigStorageSpecBackupStorageConfigPtrOutput
}

type migStorageSpecBackupStorageConfigPtrType MigStorageSpecBackupStorageConfigArgs

func MigStorageSpecBackupStorageConfigPtr(v *MigStorageSpecBackupStorageConfigArgs) MigStorageSpecBackupStorageConfigPtrInput {
	return (*migStorageSpecBackupStorageConfigPtrType)(v)
}

func (*migStorageSpecBackupStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageSpecBackupStorageConfig)(nil)).Elem()
}

func (i *migStorageSpecBackupStorageConfigPtrType) ToMigStorageSpecBackupStorageConfigPtrOutput() MigStorageSpecBackupStorageConfigPtrOutput {
	return i.ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(context.Background())
}

func (i *migStorageSpecBackupStorageConfigPtrType) ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecBackupStorageConfigPtrOutput)
}

type MigStorageSpecBackupStorageConfigOutput struct{ *pulumi.OutputState }

func (MigStorageSpecBackupStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecBackupStorageConfig)(nil)).Elem()
}

func (o MigStorageSpecBackupStorageConfigOutput) ToMigStorageSpecBackupStorageConfigOutput() MigStorageSpecBackupStorageConfigOutput {
	return o
}

func (o MigStorageSpecBackupStorageConfigOutput) ToMigStorageSpecBackupStorageConfigOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigOutput {
	return o
}

func (o MigStorageSpecBackupStorageConfigOutput) ToMigStorageSpecBackupStorageConfigPtrOutput() MigStorageSpecBackupStorageConfigPtrOutput {
	return o.ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(context.Background())
}

func (o MigStorageSpecBackupStorageConfigOutput) ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *MigStorageSpecBackupStorageConfig {
		return &v
	}).(MigStorageSpecBackupStorageConfigPtrOutput)
}
func (o MigStorageSpecBackupStorageConfigOutput) AwsBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AwsBucketName }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AwsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AwsKmsKeyId }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AwsPublicUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AwsPublicUrl }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AwsS3ForcePathStyle() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *bool { return v.AwsS3ForcePathStyle }).(pulumi.BoolPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AwsS3Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AwsS3Url }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AwsSignatureVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AwsSignatureVersion }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AzureResourceGroup }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AzureStorageAccount }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) AzureStorageContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.AzureStorageContainer }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) CredsSecretRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) map[string]interface{} { return v.CredsSecretRef }).(pulumi.MapOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) GcpBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.GcpBucket }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigOutput) S3CustomCABundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecBackupStorageConfig) *string { return v.S3CustomCABundle }).(pulumi.StringPtrOutput)
}

type MigStorageSpecBackupStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (MigStorageSpecBackupStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageSpecBackupStorageConfig)(nil)).Elem()
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) ToMigStorageSpecBackupStorageConfigPtrOutput() MigStorageSpecBackupStorageConfigPtrOutput {
	return o
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) ToMigStorageSpecBackupStorageConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigPtrOutput {
	return o
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) Elem() MigStorageSpecBackupStorageConfigOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) MigStorageSpecBackupStorageConfig { return *v }).(MigStorageSpecBackupStorageConfigOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsBucketName
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsKmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsPublicUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsPublicUrl
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsS3ForcePathStyle() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AwsS3ForcePathStyle
	}).(pulumi.BoolPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsS3Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsS3Url
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AwsSignatureVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsSignatureVersion
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureStorageAccount
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) AzureStorageContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureStorageContainer
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) CredsSecretRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.CredsSecretRef
	}).(pulumi.MapOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) GcpBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.GcpBucket
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o MigStorageSpecBackupStorageConfigPtrOutput) S3CustomCABundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecBackupStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.S3CustomCABundle
	}).(pulumi.StringPtrOutput)
}

type MigStorageSpecBackupStorageConfigCredsSecretRef struct {
}

// MigStorageSpecBackupStorageConfigCredsSecretRefInput is an input type that accepts MigStorageSpecBackupStorageConfigCredsSecretRefArgs and MigStorageSpecBackupStorageConfigCredsSecretRefOutput values.
// You can construct a concrete instance of `MigStorageSpecBackupStorageConfigCredsSecretRefInput` via:
//
//          MigStorageSpecBackupStorageConfigCredsSecretRefArgs{...}
type MigStorageSpecBackupStorageConfigCredsSecretRefInput interface {
	pulumi.Input

	ToMigStorageSpecBackupStorageConfigCredsSecretRefOutput() MigStorageSpecBackupStorageConfigCredsSecretRefOutput
	ToMigStorageSpecBackupStorageConfigCredsSecretRefOutputWithContext(context.Context) MigStorageSpecBackupStorageConfigCredsSecretRefOutput
}

type MigStorageSpecBackupStorageConfigCredsSecretRefArgs struct {
}

func (MigStorageSpecBackupStorageConfigCredsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecBackupStorageConfigCredsSecretRef)(nil)).Elem()
}

func (i MigStorageSpecBackupStorageConfigCredsSecretRefArgs) ToMigStorageSpecBackupStorageConfigCredsSecretRefOutput() MigStorageSpecBackupStorageConfigCredsSecretRefOutput {
	return i.ToMigStorageSpecBackupStorageConfigCredsSecretRefOutputWithContext(context.Background())
}

func (i MigStorageSpecBackupStorageConfigCredsSecretRefArgs) ToMigStorageSpecBackupStorageConfigCredsSecretRefOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigCredsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecBackupStorageConfigCredsSecretRefOutput)
}

type MigStorageSpecBackupStorageConfigCredsSecretRefOutput struct{ *pulumi.OutputState }

func (MigStorageSpecBackupStorageConfigCredsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecBackupStorageConfigCredsSecretRef)(nil)).Elem()
}

func (o MigStorageSpecBackupStorageConfigCredsSecretRefOutput) ToMigStorageSpecBackupStorageConfigCredsSecretRefOutput() MigStorageSpecBackupStorageConfigCredsSecretRefOutput {
	return o
}

func (o MigStorageSpecBackupStorageConfigCredsSecretRefOutput) ToMigStorageSpecBackupStorageConfigCredsSecretRefOutputWithContext(ctx context.Context) MigStorageSpecBackupStorageConfigCredsSecretRefOutput {
	return o
}

type MigStorageSpecVolumeSnapshotConfig struct {
	AwsRegion               *string                `pulumi:"awsRegion"`
	AzureApiTimeout         *string                `pulumi:"azureApiTimeout"`
	AzureResourceGroup      *string                `pulumi:"azureResourceGroup"`
	CredsSecretRef          map[string]interface{} `pulumi:"credsSecretRef"`
	SnapshotCreationTimeout *string                `pulumi:"snapshotCreationTimeout"`
}

// MigStorageSpecVolumeSnapshotConfigInput is an input type that accepts MigStorageSpecVolumeSnapshotConfigArgs and MigStorageSpecVolumeSnapshotConfigOutput values.
// You can construct a concrete instance of `MigStorageSpecVolumeSnapshotConfigInput` via:
//
//          MigStorageSpecVolumeSnapshotConfigArgs{...}
type MigStorageSpecVolumeSnapshotConfigInput interface {
	pulumi.Input

	ToMigStorageSpecVolumeSnapshotConfigOutput() MigStorageSpecVolumeSnapshotConfigOutput
	ToMigStorageSpecVolumeSnapshotConfigOutputWithContext(context.Context) MigStorageSpecVolumeSnapshotConfigOutput
}

type MigStorageSpecVolumeSnapshotConfigArgs struct {
	AwsRegion               pulumi.StringPtrInput `pulumi:"awsRegion"`
	AzureApiTimeout         pulumi.StringPtrInput `pulumi:"azureApiTimeout"`
	AzureResourceGroup      pulumi.StringPtrInput `pulumi:"azureResourceGroup"`
	CredsSecretRef          pulumi.MapInput       `pulumi:"credsSecretRef"`
	SnapshotCreationTimeout pulumi.StringPtrInput `pulumi:"snapshotCreationTimeout"`
}

func (MigStorageSpecVolumeSnapshotConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecVolumeSnapshotConfig)(nil)).Elem()
}

func (i MigStorageSpecVolumeSnapshotConfigArgs) ToMigStorageSpecVolumeSnapshotConfigOutput() MigStorageSpecVolumeSnapshotConfigOutput {
	return i.ToMigStorageSpecVolumeSnapshotConfigOutputWithContext(context.Background())
}

func (i MigStorageSpecVolumeSnapshotConfigArgs) ToMigStorageSpecVolumeSnapshotConfigOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecVolumeSnapshotConfigOutput)
}

func (i MigStorageSpecVolumeSnapshotConfigArgs) ToMigStorageSpecVolumeSnapshotConfigPtrOutput() MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return i.ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(context.Background())
}

func (i MigStorageSpecVolumeSnapshotConfigArgs) ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecVolumeSnapshotConfigOutput).ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(ctx)
}

// MigStorageSpecVolumeSnapshotConfigPtrInput is an input type that accepts MigStorageSpecVolumeSnapshotConfigArgs, MigStorageSpecVolumeSnapshotConfigPtr and MigStorageSpecVolumeSnapshotConfigPtrOutput values.
// You can construct a concrete instance of `MigStorageSpecVolumeSnapshotConfigPtrInput` via:
//
//          MigStorageSpecVolumeSnapshotConfigArgs{...}
//
//  or:
//
//          nil
type MigStorageSpecVolumeSnapshotConfigPtrInput interface {
	pulumi.Input

	ToMigStorageSpecVolumeSnapshotConfigPtrOutput() MigStorageSpecVolumeSnapshotConfigPtrOutput
	ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(context.Context) MigStorageSpecVolumeSnapshotConfigPtrOutput
}

type migStorageSpecVolumeSnapshotConfigPtrType MigStorageSpecVolumeSnapshotConfigArgs

func MigStorageSpecVolumeSnapshotConfigPtr(v *MigStorageSpecVolumeSnapshotConfigArgs) MigStorageSpecVolumeSnapshotConfigPtrInput {
	return (*migStorageSpecVolumeSnapshotConfigPtrType)(v)
}

func (*migStorageSpecVolumeSnapshotConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageSpecVolumeSnapshotConfig)(nil)).Elem()
}

func (i *migStorageSpecVolumeSnapshotConfigPtrType) ToMigStorageSpecVolumeSnapshotConfigPtrOutput() MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return i.ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(context.Background())
}

func (i *migStorageSpecVolumeSnapshotConfigPtrType) ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecVolumeSnapshotConfigPtrOutput)
}

type MigStorageSpecVolumeSnapshotConfigOutput struct{ *pulumi.OutputState }

func (MigStorageSpecVolumeSnapshotConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecVolumeSnapshotConfig)(nil)).Elem()
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) ToMigStorageSpecVolumeSnapshotConfigOutput() MigStorageSpecVolumeSnapshotConfigOutput {
	return o
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) ToMigStorageSpecVolumeSnapshotConfigOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigOutput {
	return o
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) ToMigStorageSpecVolumeSnapshotConfigPtrOutput() MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return o.ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(context.Background())
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return o.ApplyT(func(v MigStorageSpecVolumeSnapshotConfig) *MigStorageSpecVolumeSnapshotConfig {
		return &v
	}).(MigStorageSpecVolumeSnapshotConfigPtrOutput)
}
func (o MigStorageSpecVolumeSnapshotConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecVolumeSnapshotConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) AzureApiTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecVolumeSnapshotConfig) *string { return v.AzureApiTimeout }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecVolumeSnapshotConfig) *string { return v.AzureResourceGroup }).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) CredsSecretRef() pulumi.MapOutput {
	return o.ApplyT(func(v MigStorageSpecVolumeSnapshotConfig) map[string]interface{} { return v.CredsSecretRef }).(pulumi.MapOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigOutput) SnapshotCreationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageSpecVolumeSnapshotConfig) *string { return v.SnapshotCreationTimeout }).(pulumi.StringPtrOutput)
}

type MigStorageSpecVolumeSnapshotConfigPtrOutput struct{ *pulumi.OutputState }

func (MigStorageSpecVolumeSnapshotConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageSpecVolumeSnapshotConfig)(nil)).Elem()
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) ToMigStorageSpecVolumeSnapshotConfigPtrOutput() MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return o
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) ToMigStorageSpecVolumeSnapshotConfigPtrOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigPtrOutput {
	return o
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) Elem() MigStorageSpecVolumeSnapshotConfigOutput {
	return o.ApplyT(func(v *MigStorageSpecVolumeSnapshotConfig) MigStorageSpecVolumeSnapshotConfig { return *v }).(MigStorageSpecVolumeSnapshotConfigOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecVolumeSnapshotConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) AzureApiTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecVolumeSnapshotConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureApiTimeout
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecVolumeSnapshotConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceGroup
	}).(pulumi.StringPtrOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) CredsSecretRef() pulumi.MapOutput {
	return o.ApplyT(func(v *MigStorageSpecVolumeSnapshotConfig) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.CredsSecretRef
	}).(pulumi.MapOutput)
}

func (o MigStorageSpecVolumeSnapshotConfigPtrOutput) SnapshotCreationTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageSpecVolumeSnapshotConfig) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotCreationTimeout
	}).(pulumi.StringPtrOutput)
}

type MigStorageSpecVolumeSnapshotConfigCredsSecretRef struct {
}

// MigStorageSpecVolumeSnapshotConfigCredsSecretRefInput is an input type that accepts MigStorageSpecVolumeSnapshotConfigCredsSecretRefArgs and MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput values.
// You can construct a concrete instance of `MigStorageSpecVolumeSnapshotConfigCredsSecretRefInput` via:
//
//          MigStorageSpecVolumeSnapshotConfigCredsSecretRefArgs{...}
type MigStorageSpecVolumeSnapshotConfigCredsSecretRefInput interface {
	pulumi.Input

	ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput() MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput
	ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutputWithContext(context.Context) MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput
}

type MigStorageSpecVolumeSnapshotConfigCredsSecretRefArgs struct {
}

func (MigStorageSpecVolumeSnapshotConfigCredsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecVolumeSnapshotConfigCredsSecretRef)(nil)).Elem()
}

func (i MigStorageSpecVolumeSnapshotConfigCredsSecretRefArgs) ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput() MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput {
	return i.ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutputWithContext(context.Background())
}

func (i MigStorageSpecVolumeSnapshotConfigCredsSecretRefArgs) ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput)
}

type MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput struct{ *pulumi.OutputState }

func (MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageSpecVolumeSnapshotConfigCredsSecretRef)(nil)).Elem()
}

func (o MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput) ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput() MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput {
	return o
}

func (o MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput) ToMigStorageSpecVolumeSnapshotConfigCredsSecretRefOutputWithContext(ctx context.Context) MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput {
	return o
}

type MigStorageStatus struct {
	ObservedDigest *string `pulumi:"observedDigest"`
}

// MigStorageStatusInput is an input type that accepts MigStorageStatusArgs and MigStorageStatusOutput values.
// You can construct a concrete instance of `MigStorageStatusInput` via:
//
//          MigStorageStatusArgs{...}
type MigStorageStatusInput interface {
	pulumi.Input

	ToMigStorageStatusOutput() MigStorageStatusOutput
	ToMigStorageStatusOutputWithContext(context.Context) MigStorageStatusOutput
}

type MigStorageStatusArgs struct {
	ObservedDigest pulumi.StringPtrInput `pulumi:"observedDigest"`
}

func (MigStorageStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageStatus)(nil)).Elem()
}

func (i MigStorageStatusArgs) ToMigStorageStatusOutput() MigStorageStatusOutput {
	return i.ToMigStorageStatusOutputWithContext(context.Background())
}

func (i MigStorageStatusArgs) ToMigStorageStatusOutputWithContext(ctx context.Context) MigStorageStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageStatusOutput)
}

func (i MigStorageStatusArgs) ToMigStorageStatusPtrOutput() MigStorageStatusPtrOutput {
	return i.ToMigStorageStatusPtrOutputWithContext(context.Background())
}

func (i MigStorageStatusArgs) ToMigStorageStatusPtrOutputWithContext(ctx context.Context) MigStorageStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageStatusOutput).ToMigStorageStatusPtrOutputWithContext(ctx)
}

// MigStorageStatusPtrInput is an input type that accepts MigStorageStatusArgs, MigStorageStatusPtr and MigStorageStatusPtrOutput values.
// You can construct a concrete instance of `MigStorageStatusPtrInput` via:
//
//          MigStorageStatusArgs{...}
//
//  or:
//
//          nil
type MigStorageStatusPtrInput interface {
	pulumi.Input

	ToMigStorageStatusPtrOutput() MigStorageStatusPtrOutput
	ToMigStorageStatusPtrOutputWithContext(context.Context) MigStorageStatusPtrOutput
}

type migStorageStatusPtrType MigStorageStatusArgs

func MigStorageStatusPtr(v *MigStorageStatusArgs) MigStorageStatusPtrInput {
	return (*migStorageStatusPtrType)(v)
}

func (*migStorageStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageStatus)(nil)).Elem()
}

func (i *migStorageStatusPtrType) ToMigStorageStatusPtrOutput() MigStorageStatusPtrOutput {
	return i.ToMigStorageStatusPtrOutputWithContext(context.Background())
}

func (i *migStorageStatusPtrType) ToMigStorageStatusPtrOutputWithContext(ctx context.Context) MigStorageStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigStorageStatusPtrOutput)
}

type MigStorageStatusOutput struct{ *pulumi.OutputState }

func (MigStorageStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigStorageStatus)(nil)).Elem()
}

func (o MigStorageStatusOutput) ToMigStorageStatusOutput() MigStorageStatusOutput {
	return o
}

func (o MigStorageStatusOutput) ToMigStorageStatusOutputWithContext(ctx context.Context) MigStorageStatusOutput {
	return o
}

func (o MigStorageStatusOutput) ToMigStorageStatusPtrOutput() MigStorageStatusPtrOutput {
	return o.ToMigStorageStatusPtrOutputWithContext(context.Background())
}

func (o MigStorageStatusOutput) ToMigStorageStatusPtrOutputWithContext(ctx context.Context) MigStorageStatusPtrOutput {
	return o.ApplyT(func(v MigStorageStatus) *MigStorageStatus {
		return &v
	}).(MigStorageStatusPtrOutput)
}
func (o MigStorageStatusOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigStorageStatus) *string { return v.ObservedDigest }).(pulumi.StringPtrOutput)
}

type MigStorageStatusPtrOutput struct{ *pulumi.OutputState }

func (MigStorageStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigStorageStatus)(nil)).Elem()
}

func (o MigStorageStatusPtrOutput) ToMigStorageStatusPtrOutput() MigStorageStatusPtrOutput {
	return o
}

func (o MigStorageStatusPtrOutput) ToMigStorageStatusPtrOutputWithContext(ctx context.Context) MigStorageStatusPtrOutput {
	return o
}

func (o MigStorageStatusPtrOutput) Elem() MigStorageStatusOutput {
	return o.ApplyT(func(v *MigStorageStatus) MigStorageStatus { return *v }).(MigStorageStatusOutput)
}

func (o MigStorageStatusPtrOutput) ObservedDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigStorageStatus) *string {
		if v == nil {
			return nil
		}
		return v.ObservedDigest
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MigClusterTypeOutput{})
	pulumi.RegisterOutputType(MigClusterMetadataOutput{})
	pulumi.RegisterOutputType(MigClusterSpecOutput{})
	pulumi.RegisterOutputType(MigClusterSpecPtrOutput{})
	pulumi.RegisterOutputType(MigClusterSpecServiceAccountSecretRefOutput{})
	pulumi.RegisterOutputType(MigClusterSpecStorageClassesOutput{})
	pulumi.RegisterOutputType(MigClusterSpecStorageClassesArrayOutput{})
	pulumi.RegisterOutputType(MigClusterStatusOutput{})
	pulumi.RegisterOutputType(MigClusterStatusPtrOutput{})
	pulumi.RegisterOutputType(MigHookTypeOutput{})
	pulumi.RegisterOutputType(MigHookMetadataOutput{})
	pulumi.RegisterOutputType(MigHookSpecOutput{})
	pulumi.RegisterOutputType(MigHookSpecPtrOutput{})
	pulumi.RegisterOutputType(MigHookStatusOutput{})
	pulumi.RegisterOutputType(MigHookStatusPtrOutput{})
	pulumi.RegisterOutputType(MigMigrationTypeOutput{})
	pulumi.RegisterOutputType(MigMigrationMetadataOutput{})
	pulumi.RegisterOutputType(MigMigrationSpecOutput{})
	pulumi.RegisterOutputType(MigMigrationSpecPtrOutput{})
	pulumi.RegisterOutputType(MigMigrationSpecMigPlanRefOutput{})
	pulumi.RegisterOutputType(MigMigrationStatusOutput{})
	pulumi.RegisterOutputType(MigMigrationStatusPtrOutput{})
	pulumi.RegisterOutputType(MigPlanTypeOutput{})
	pulumi.RegisterOutputType(MigPlanMetadataOutput{})
	pulumi.RegisterOutputType(MigPlanSpecOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPtrOutput{})
	pulumi.RegisterOutputType(MigPlanSpecDestMigClusterRefOutput{})
	pulumi.RegisterOutputType(MigPlanSpecHooksOutput{})
	pulumi.RegisterOutputType(MigPlanSpecHooksArrayOutput{})
	pulumi.RegisterOutputType(MigPlanSpecHooksReferenceOutput{})
	pulumi.RegisterOutputType(MigPlanSpecMigStorageRefOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPersistentVolumesOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPersistentVolumesArrayOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPersistentVolumesPvcOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPersistentVolumesPvcPtrOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPersistentVolumesSelectionOutput{})
	pulumi.RegisterOutputType(MigPlanSpecPersistentVolumesSupportedOutput{})
	pulumi.RegisterOutputType(MigPlanSpecSrcMigClusterRefOutput{})
	pulumi.RegisterOutputType(MigPlanStatusOutput{})
	pulumi.RegisterOutputType(MigPlanStatusPtrOutput{})
	pulumi.RegisterOutputType(MigPlanStatusIncompatibleNamespacesOutput{})
	pulumi.RegisterOutputType(MigPlanStatusIncompatibleNamespacesArrayOutput{})
	pulumi.RegisterOutputType(MigPlanStatusIncompatibleNamespacesGvksOutput{})
	pulumi.RegisterOutputType(MigPlanStatusIncompatibleNamespacesGvksArrayOutput{})
	pulumi.RegisterOutputType(MigStorageTypeOutput{})
	pulumi.RegisterOutputType(MigStorageMetadataOutput{})
	pulumi.RegisterOutputType(MigStorageSpecOutput{})
	pulumi.RegisterOutputType(MigStorageSpecPtrOutput{})
	pulumi.RegisterOutputType(MigStorageSpecBackupStorageConfigOutput{})
	pulumi.RegisterOutputType(MigStorageSpecBackupStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(MigStorageSpecBackupStorageConfigCredsSecretRefOutput{})
	pulumi.RegisterOutputType(MigStorageSpecVolumeSnapshotConfigOutput{})
	pulumi.RegisterOutputType(MigStorageSpecVolumeSnapshotConfigPtrOutput{})
	pulumi.RegisterOutputType(MigStorageSpecVolumeSnapshotConfigCredsSecretRefOutput{})
	pulumi.RegisterOutputType(MigStorageStatusOutput{})
	pulumi.RegisterOutputType(MigStorageStatusPtrOutput{})
}
