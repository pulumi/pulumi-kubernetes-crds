// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Velero.V1
{

    /// <summary>
    /// PodVolumeBackupStatus is the current status of a PodVolumeBackup.
    /// </summary>
    public class PodVolumeBackupStatusArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// CompletionTimestamp records the time a backup was completed. Completion time is recorded even on failed backups. Completion time is recorded before uploading the backup object. The server's time is used for CompletionTimestamps
        /// </summary>
        [Input("completionTimestamp")]
        public Input<string>? CompletionTimestamp { get; set; }

        /// <summary>
        /// Message is a message about the pod volume backup's status.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// Path is the full path within the controller pod being backed up.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Phase is the current state of the PodVolumeBackup.
        /// </summary>
        [Input("phase")]
        public Input<string>? Phase { get; set; }

        /// <summary>
        /// Progress holds the total number of bytes of the volume and the current number of backed up bytes. This can be used to display progress information about the backup operation.
        /// </summary>
        [Input("progress")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Velero.V1.PodVolumeBackupStatusProgressArgs>? Progress { get; set; }

        /// <summary>
        /// SnapshotID is the identifier for the snapshot of the pod volume.
        /// </summary>
        [Input("snapshotID")]
        public Input<string>? SnapshotID { get; set; }

        /// <summary>
        /// StartTimestamp records the time a backup was started. Separate from CreationTimestamp, since that value changes on restores. The server's time is used for StartTimestamps
        /// </summary>
        [Input("startTimestamp")]
        public Input<string>? StartTimestamp { get; set; }

        public PodVolumeBackupStatusArgs()
        {
        }
    }
}
