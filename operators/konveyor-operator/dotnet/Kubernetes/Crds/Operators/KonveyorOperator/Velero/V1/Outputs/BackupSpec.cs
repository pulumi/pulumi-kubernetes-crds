// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Velero.V1
{

    [OutputType]
    public sealed class BackupSpec
    {
        /// <summary>
        /// ExcludedNamespaces contains a list of namespaces that are not included in the backup.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedNamespaces;
        /// <summary>
        /// ExcludedResources is a slice of resource names that are not included in the backup.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedResources;
        /// <summary>
        /// Hooks represent custom behaviors that should be executed at different phases of the backup.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Velero.V1.BackupSpecHooks Hooks;
        /// <summary>
        /// IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the backup.
        /// </summary>
        public readonly bool IncludeClusterResources;
        /// <summary>
        /// IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included.
        /// </summary>
        public readonly ImmutableArray<string> IncludedNamespaces;
        /// <summary>
        /// IncludedResources is a slice of resource names to include in the backup. If empty, all resources are included.
        /// </summary>
        public readonly ImmutableArray<string> IncludedResources;
        /// <summary>
        /// LabelSelector is a metav1.LabelSelector to filter with when adding individual objects to the backup. If empty or nil, all objects are included. Optional.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Velero.V1.BackupSpecLabelSelector LabelSelector;
        /// <summary>
        /// SnapshotVolumes specifies whether to take cloud snapshots of any PV's referenced in the set of objects included in the Backup.
        /// </summary>
        public readonly bool SnapshotVolumes;
        /// <summary>
        /// StorageLocation is a string containing the name of a BackupStorageLocation where the backup should be stored.
        /// </summary>
        public readonly string StorageLocation;
        /// <summary>
        /// TTL is a time.Duration-parseable string describing how long the Backup should be retained for.
        /// </summary>
        public readonly string Ttl;
        /// <summary>
        /// VolumeSnapshotLocations is a list containing names of VolumeSnapshotLocations associated with this backup.
        /// </summary>
        public readonly ImmutableArray<string> VolumeSnapshotLocations;

        [OutputConstructor]
        private BackupSpec(
            ImmutableArray<string> excludedNamespaces,

            ImmutableArray<string> excludedResources,

            Pulumi.Kubernetes.Types.Outputs.Velero.V1.BackupSpecHooks hooks,

            bool includeClusterResources,

            ImmutableArray<string> includedNamespaces,

            ImmutableArray<string> includedResources,

            Pulumi.Kubernetes.Types.Outputs.Velero.V1.BackupSpecLabelSelector labelSelector,

            bool snapshotVolumes,

            string storageLocation,

            string ttl,

            ImmutableArray<string> volumeSnapshotLocations)
        {
            ExcludedNamespaces = excludedNamespaces;
            ExcludedResources = excludedResources;
            Hooks = hooks;
            IncludeClusterResources = includeClusterResources;
            IncludedNamespaces = includedNamespaces;
            IncludedResources = includedResources;
            LabelSelector = labelSelector;
            SnapshotVolumes = snapshotVolumes;
            StorageLocation = storageLocation;
            Ttl = ttl;
            VolumeSnapshotLocations = volumeSnapshotLocations;
        }
    }
}
