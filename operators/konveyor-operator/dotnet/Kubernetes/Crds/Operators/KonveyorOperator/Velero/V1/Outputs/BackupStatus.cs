// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Velero.V1
{

    [OutputType]
    public sealed class BackupStatus
    {
        /// <summary>
        /// CompletionTimestamp records the time a backup was completed. Completion time is recorded even on failed backups. Completion time is recorded before uploading the backup object. The server's time is used for CompletionTimestamps
        /// </summary>
        public readonly string CompletionTimestamp;
        /// <summary>
        /// Errors is a count of all error messages that were generated during execution of the backup.  The actual errors are in the backup's log file in object storage.
        /// </summary>
        public readonly int Errors;
        /// <summary>
        /// Expiration is when this Backup is eligible for garbage-collection.
        /// </summary>
        public readonly string Expiration;
        /// <summary>
        /// FormatVersion is the backup format version, including major, minor, and patch version.
        /// </summary>
        public readonly string FormatVersion;
        /// <summary>
        /// Phase is the current state of the Backup.
        /// </summary>
        public readonly string Phase;
        /// <summary>
        /// Progress contains information about the backup's execution progress. Note that this information is best-effort only -- if Velero fails to update it during a backup for any reason, it may be inaccurate/stale.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Velero.V1.BackupStatusProgress Progress;
        /// <summary>
        /// StartTimestamp records the time a backup was started. Separate from CreationTimestamp, since that value changes on restores. The server's time is used for StartTimestamps
        /// </summary>
        public readonly string StartTimestamp;
        /// <summary>
        /// ValidationErrors is a slice of all validation errors (if applicable).
        /// </summary>
        public readonly ImmutableArray<string> ValidationErrors;
        /// <summary>
        /// Version is the backup format major version. Deprecated: Please see FormatVersion
        /// </summary>
        public readonly int Version;
        /// <summary>
        /// VolumeSnapshotsAttempted is the total number of attempted volume snapshots for this backup.
        /// </summary>
        public readonly int VolumeSnapshotsAttempted;
        /// <summary>
        /// VolumeSnapshotsCompleted is the total number of successfully completed volume snapshots for this backup.
        /// </summary>
        public readonly int VolumeSnapshotsCompleted;
        /// <summary>
        /// Warnings is a count of all warning messages that were generated during execution of the backup. The actual warnings are in the backup's log file in object storage.
        /// </summary>
        public readonly int Warnings;

        [OutputConstructor]
        private BackupStatus(
            string completionTimestamp,

            int errors,

            string expiration,

            string formatVersion,

            string phase,

            Pulumi.Kubernetes.Types.Outputs.Velero.V1.BackupStatusProgress progress,

            string startTimestamp,

            ImmutableArray<string> validationErrors,

            int version,

            int volumeSnapshotsAttempted,

            int volumeSnapshotsCompleted,

            int warnings)
        {
            CompletionTimestamp = completionTimestamp;
            Errors = errors;
            Expiration = expiration;
            FormatVersion = formatVersion;
            Phase = phase;
            Progress = progress;
            StartTimestamp = startTimestamp;
            ValidationErrors = validationErrors;
            Version = version;
            VolumeSnapshotsAttempted = volumeSnapshotsAttempted;
            VolumeSnapshotsCompleted = volumeSnapshotsCompleted;
            Warnings = warnings;
        }
    }
}
