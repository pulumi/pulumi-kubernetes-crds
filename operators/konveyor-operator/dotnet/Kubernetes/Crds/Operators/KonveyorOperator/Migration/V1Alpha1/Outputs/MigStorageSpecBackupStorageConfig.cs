// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Migration.V1Alpha1
{

    [OutputType]
    public sealed class MigStorageSpecBackupStorageConfig
    {
        public readonly string AwsBucketName;
        public readonly string AwsKmsKeyId;
        public readonly string AwsPublicUrl;
        public readonly string AwsRegion;
        public readonly bool AwsS3ForcePathStyle;
        public readonly string AwsS3Url;
        public readonly string AwsSignatureVersion;
        public readonly string AzureResourceGroup;
        public readonly string AzureStorageAccount;
        public readonly string AzureStorageContainer;
        public readonly ImmutableDictionary<string, object> CredsSecretRef;
        public readonly string GcpBucket;
        public readonly bool Insecure;
        public readonly string S3CustomCABundle;

        [OutputConstructor]
        private MigStorageSpecBackupStorageConfig(
            string awsBucketName,

            string awsKmsKeyId,

            string awsPublicUrl,

            string awsRegion,

            bool awsS3ForcePathStyle,

            string awsS3Url,

            string awsSignatureVersion,

            string azureResourceGroup,

            string azureStorageAccount,

            string azureStorageContainer,

            ImmutableDictionary<string, object> credsSecretRef,

            string gcpBucket,

            bool insecure,

            string s3CustomCABundle)
        {
            AwsBucketName = awsBucketName;
            AwsKmsKeyId = awsKmsKeyId;
            AwsPublicUrl = awsPublicUrl;
            AwsRegion = awsRegion;
            AwsS3ForcePathStyle = awsS3ForcePathStyle;
            AwsS3Url = awsS3Url;
            AwsSignatureVersion = awsSignatureVersion;
            AzureResourceGroup = azureResourceGroup;
            AzureStorageAccount = azureStorageAccount;
            AzureStorageContainer = azureStorageContainer;
            CredsSecretRef = credsSecretRef;
            GcpBucket = gcpBucket;
            Insecure = insecure;
            S3CustomCABundle = s3CustomCABundle;
        }
    }
}
