// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace apps {
    export namespace v1alpha1 {
        export interface APIManagerSpec {
            apicast?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecApicast>;
            appLabel?: pulumi.Input<string>;
            backend?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecBackend>;
            highAvailability?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecHighAvailability>;
            imageStreamTagImportInsecure?: pulumi.Input<boolean>;
            podDisruptionBudget?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecPodDisruptionBudget>;
            resourceRequirementsEnabled?: pulumi.Input<boolean>;
            system?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystem>;
            tenantName?: pulumi.Input<string>;
            wildcardDomain: pulumi.Input<string>;
            zync?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecZync>;
        }

        export interface APIManagerSpecApicast {
            image?: pulumi.Input<string>;
            managementAPI?: pulumi.Input<string>;
            openSSLVerify?: pulumi.Input<boolean>;
            productionSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecApicastProductionSpec>;
            registryURL?: pulumi.Input<string>;
            responseCodes?: pulumi.Input<boolean>;
            stagingSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecApicastStagingSpec>;
        }

        export interface APIManagerSpecApicastProductionSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecApicastStagingSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecBackend {
            cronSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecBackendCronSpec>;
            image?: pulumi.Input<string>;
            listenerSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecBackendListenerSpec>;
            redisImage?: pulumi.Input<string>;
            workerSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecBackendWorkerSpec>;
        }

        export interface APIManagerSpecBackendCronSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecBackendListenerSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecBackendWorkerSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecHighAvailability {
            enabled?: pulumi.Input<boolean>;
        }

        export interface APIManagerSpecPodDisruptionBudget {
            enabled?: pulumi.Input<boolean>;
        }

        export interface APIManagerSpecSystem {
            appSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemAppSpec>;
            database?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemDatabase>;
            fileStorage?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemFileStorage>;
            image?: pulumi.Input<string>;
            memcachedImage?: pulumi.Input<string>;
            redisImage?: pulumi.Input<string>;
            sidekiqSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemSidekiqSpec>;
        }

        export interface APIManagerSpecSystemAppSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecSystemDatabase {
            /**
             * Union type. Only one of the fields can be set
             */
            mysql?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemDatabaseMysql>;
            postgresql?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemDatabasePostgresql>;
        }

        /**
         * Union type. Only one of the fields can be set
         */
        export interface APIManagerSpecSystemDatabaseMysql {
            image?: pulumi.Input<string>;
        }

        export interface APIManagerSpecSystemDatabasePostgresql {
            image?: pulumi.Input<string>;
        }

        export interface APIManagerSpecSystemFileStorage {
            /**
             * Deprecated
             */
            amazonSimpleStorageService?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemFileStorageAmazonSimpleStorageService>;
            /**
             * Union type. Only one of the fields can be set.
             */
            persistentVolumeClaim?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemFileStoragePersistentVolumeClaim>;
            simpleStorageService?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemFileStorageSimpleStorageService>;
        }

        /**
         * Deprecated
         */
        export interface APIManagerSpecSystemFileStorageAmazonSimpleStorageService {
            /**
             * Deprecated
             */
            awsBucket: pulumi.Input<string>;
            /**
             * Deprecated
             */
            awsCredentialsSecret: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemFileStorageAmazonSimpleStorageServiceAwsCredentialsSecret>;
            /**
             * Deprecated
             */
            awsRegion: pulumi.Input<string>;
        }

        /**
         * Deprecated
         */
        export interface APIManagerSpecSystemFileStorageAmazonSimpleStorageServiceAwsCredentialsSecret {
            name?: pulumi.Input<string>;
        }

        /**
         * Union type. Only one of the fields can be set.
         */
        export interface APIManagerSpecSystemFileStoragePersistentVolumeClaim {
            storageClassName?: pulumi.Input<string>;
        }

        export interface APIManagerSpecSystemFileStorageSimpleStorageService {
            configurationSecretRef: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecSystemFileStorageSimpleStorageServiceConfigurationSecretRef>;
        }

        export interface APIManagerSpecSystemFileStorageSimpleStorageServiceConfigurationSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface APIManagerSpecSystemSidekiqSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecZync {
            appSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecZyncAppSpec>;
            image?: pulumi.Input<string>;
            postgreSQLImage?: pulumi.Input<string>;
            queSpec?: pulumi.Input<inputs.apps.v1alpha1.APIManagerSpecZyncQueSpec>;
        }

        export interface APIManagerSpecZyncAppSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerSpecZyncQueSpec {
            replicas?: pulumi.Input<number>;
        }

        export interface APIManagerStatus {
            conditions?: pulumi.Input<pulumi.Input<inputs.apps.v1alpha1.APIManagerStatusConditions>[]>;
            deployments: pulumi.Input<inputs.apps.v1alpha1.APIManagerStatusDeployments>;
        }

        export interface APIManagerStatusConditions {
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface APIManagerStatusDeployments {
            /**
             * Deployments are ready to serve requests
             */
            ready?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Deployments are starting, may or may not succeed
             */
            starting?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Deployments are not starting, unclear what next step will be
             */
            stopped?: pulumi.Input<pulumi.Input<string>[]>;
        }
    }
}

export namespace capabilities {
    export namespace v1alpha1 {
        export interface APISpec {
            description: pulumi.Input<string>;
            integrationMethod: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethod>;
            metricSelector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecMetricSelector>;
            planSelector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecPlanSelector>;
        }

        export interface APISpecIntegrationMethod {
            apicastHosted?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHosted>;
            apicastOnPrem?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPrem>;
            codePlugin?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodCodePlugin>;
        }

        export interface APISpecIntegrationMethodApicastHosted {
            apiTestGetRequest: pulumi.Input<string>;
            authenticationSettings: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettings>;
            mappingRulesSelector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedMappingRulesSelector>;
            policiesSelector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedPoliciesSelector>;
            privateBaseURL: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettings {
            credentials: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentials>;
            errors: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsErrors>;
            hostHeader: pulumi.Input<string>;
            secretToken: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentials {
            apiKey?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentialsApiKey>;
            appID?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentialsAppID>;
            openIDConnector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentialsOpenIDConnector>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentialsApiKey {
            authParameterName: pulumi.Input<string>;
            credentialsLocation: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentialsAppID {
            appIDParameterName: pulumi.Input<string>;
            appKeyParameterName: pulumi.Input<string>;
            credentialsLocation: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsCredentialsOpenIDConnector {
            credentialsLocation: pulumi.Input<string>;
            issuer: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsErrors {
            authenticationFailed: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsErrorsAuthenticationFailed>;
            authenticationMissing: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastHostedAuthenticationSettingsErrorsAuthenticationMissing>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsErrorsAuthenticationFailed {
            contentType: pulumi.Input<string>;
            responseBody: pulumi.Input<string>;
            responseCode: pulumi.Input<number>;
        }

        export interface APISpecIntegrationMethodApicastHostedAuthenticationSettingsErrorsAuthenticationMissing {
            contentType: pulumi.Input<string>;
            responseBody: pulumi.Input<string>;
            responseCode: pulumi.Input<number>;
        }

        export interface APISpecIntegrationMethodApicastHostedMappingRulesSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface APISpecIntegrationMethodApicastHostedPoliciesSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface APISpecIntegrationMethodApicastOnPrem {
            apiTestGetRequest: pulumi.Input<string>;
            authenticationSettings: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettings>;
            mappingRulesSelector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremMappingRulesSelector>;
            policiesSelector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremPoliciesSelector>;
            privateBaseURL: pulumi.Input<string>;
            productionPublicBaseURL: pulumi.Input<string>;
            stagingPublicBaseURL: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettings {
            credentials: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentials>;
            errors: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsErrors>;
            hostHeader: pulumi.Input<string>;
            secretToken: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentials {
            apiKey?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentialsApiKey>;
            appID?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentialsAppID>;
            openIDConnector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentialsOpenIDConnector>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentialsApiKey {
            authParameterName: pulumi.Input<string>;
            credentialsLocation: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentialsAppID {
            appIDParameterName: pulumi.Input<string>;
            appKeyParameterName: pulumi.Input<string>;
            credentialsLocation: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsCredentialsOpenIDConnector {
            credentialsLocation: pulumi.Input<string>;
            issuer: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsErrors {
            authenticationFailed: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsErrorsAuthenticationFailed>;
            authenticationMissing: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodApicastOnPremAuthenticationSettingsErrorsAuthenticationMissing>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsErrorsAuthenticationFailed {
            contentType: pulumi.Input<string>;
            responseBody: pulumi.Input<string>;
            responseCode: pulumi.Input<number>;
        }

        export interface APISpecIntegrationMethodApicastOnPremAuthenticationSettingsErrorsAuthenticationMissing {
            contentType: pulumi.Input<string>;
            responseBody: pulumi.Input<string>;
            responseCode: pulumi.Input<number>;
        }

        export interface APISpecIntegrationMethodApicastOnPremMappingRulesSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface APISpecIntegrationMethodApicastOnPremPoliciesSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface APISpecIntegrationMethodCodePlugin {
            authenticationSettings: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodCodePluginAuthenticationSettings>;
        }

        export interface APISpecIntegrationMethodCodePluginAuthenticationSettings {
            credentials: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentials>;
        }

        export interface APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentials {
            apiKey?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentialsApiKey>;
            appID?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentialsAppID>;
            openIDConnector?: pulumi.Input<inputs.capabilities.v1alpha1.APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentialsOpenIDConnector>;
        }

        export interface APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentialsApiKey {
            authParameterName: pulumi.Input<string>;
            credentialsLocation: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentialsAppID {
            appIDParameterName: pulumi.Input<string>;
            appKeyParameterName: pulumi.Input<string>;
            credentialsLocation: pulumi.Input<string>;
        }

        export interface APISpecIntegrationMethodCodePluginAuthenticationSettingsCredentialsOpenIDConnector {
            credentialsLocation: pulumi.Input<string>;
            issuer: pulumi.Input<string>;
        }

        export interface APISpecMetricSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface APISpecPlanSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface BindingSpec {
            apiSelector?: pulumi.Input<inputs.capabilities.v1alpha1.BindingSpecApiSelector>;
            credentialsRef: pulumi.Input<inputs.capabilities.v1alpha1.BindingSpecCredentialsRef>;
        }

        export interface BindingSpecApiSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface BindingSpecCredentialsRef {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface BindingStatus {
            currentState?: pulumi.Input<string>;
            desiredState?: pulumi.Input<string>;
            lastSync?: pulumi.Input<inputs.capabilities.v1alpha1.BindingStatusLastSync>;
            previousState?: pulumi.Input<string>;
        }

        export interface BindingStatusLastSync {
            nanos?: pulumi.Input<number>;
            seconds?: pulumi.Input<number>;
        }

        export interface LimitSpec {
            maxValue: pulumi.Input<number>;
            metricRef: pulumi.Input<inputs.capabilities.v1alpha1.LimitSpecMetricRef>;
            period: pulumi.Input<string>;
        }

        export interface LimitSpecMetricRef {
            apiVersion?: pulumi.Input<string>;
            fieldPath?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            resourceVersion?: pulumi.Input<string>;
            uid?: pulumi.Input<string>;
        }

        export interface MappingRuleSpec {
            increment: pulumi.Input<number>;
            method: pulumi.Input<string>;
            metricRef: pulumi.Input<inputs.capabilities.v1alpha1.MappingRuleSpecMetricRef>;
            path: pulumi.Input<string>;
        }

        export interface MappingRuleSpecMetricRef {
            apiVersion?: pulumi.Input<string>;
            fieldPath?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            resourceVersion?: pulumi.Input<string>;
            uid?: pulumi.Input<string>;
        }

        export interface MetricSpec {
            description: pulumi.Input<string>;
            incrementHits: pulumi.Input<boolean>;
            unit: pulumi.Input<string>;
        }

        export interface PlanSpec {
            approvalRequired: pulumi.Input<boolean>;
            costs?: pulumi.Input<inputs.capabilities.v1alpha1.PlanSpecCosts>;
            default: pulumi.Input<boolean>;
            limitSelector: pulumi.Input<inputs.capabilities.v1alpha1.PlanSpecLimitSelector>;
            trialPeriod: pulumi.Input<number>;
        }

        export interface PlanSpecCosts {
            costMonth?: pulumi.Input<number>;
            setupFee?: pulumi.Input<number>;
        }

        export interface PlanSpecLimitSelector {
            matchExpressions?: pulumi.Input<any[]>;
            matchLabels?: pulumi.Input<{[key: string]: any}>;
        }

        export interface TenantSpec {
            email: pulumi.Input<string>;
            masterCredentialsRef: pulumi.Input<inputs.capabilities.v1alpha1.TenantSpecMasterCredentialsRef>;
            organizationName: pulumi.Input<string>;
            passwordCredentialsRef: pulumi.Input<inputs.capabilities.v1alpha1.TenantSpecPasswordCredentialsRef>;
            systemMasterUrl: pulumi.Input<string>;
            tenantSecretRef: pulumi.Input<inputs.capabilities.v1alpha1.TenantSpecTenantSecretRef>;
            username: pulumi.Input<string>;
        }

        export interface TenantSpecMasterCredentialsRef {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TenantSpecPasswordCredentialsRef {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TenantSpecTenantSecretRef {
            name?: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        export interface TenantStatus {
            adminId: pulumi.Input<number>;
            tenantId: pulumi.Input<number>;
        }
    }
}
