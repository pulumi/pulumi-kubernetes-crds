// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1
{

    /// <summary>
    /// ProductSpec defines the desired state of Product
    /// </summary>
    public class ProductSpecArgs : Pulumi.ResourceArgs
    {
        [Input("applicationPlans")]
        private InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecApplicationPlansArgs>? _applicationPlans;

        /// <summary>
        /// Application Plans Map: system_name -&gt; Application Plan Spec
        /// </summary>
        public InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecApplicationPlansArgs> ApplicationPlans
        {
            get => _applicationPlans ?? (_applicationPlans = new InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecApplicationPlansArgs>());
            set => _applicationPlans = value;
        }

        [Input("backendUsages")]
        private InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecBackendUsagesArgs>? _backendUsages;

        /// <summary>
        /// Backend usage will be a map of Map: system_name -&gt; BackendUsageSpec Having system_name as the index, the structure ensures one backend is not used multiple times.
        /// </summary>
        public InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecBackendUsagesArgs> BackendUsages
        {
            get => _backendUsages ?? (_backendUsages = new InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecBackendUsagesArgs>());
            set => _backendUsages = value;
        }

        /// <summary>
        /// Deployment defined 3scale product deployment mode
        /// </summary>
        [Input("deployment")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecDeploymentArgs>? Deployment { get; set; }

        /// <summary>
        /// Description is a human readable text of the product
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("mappingRules")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMappingRulesArgs>? _mappingRules;

        /// <summary>
        /// Mapping Rules Array: MappingRule Spec
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMappingRulesArgs> MappingRules
        {
            get => _mappingRules ?? (_mappingRules = new InputList<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMappingRulesArgs>());
            set => _mappingRules = value;
        }

        [Input("methods")]
        private InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMethodsArgs>? _methods;

        /// <summary>
        /// Methods Map: system_name -&gt; MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
        /// </summary>
        public InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMethodsArgs> Methods
        {
            get => _methods ?? (_methods = new InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMethodsArgs>());
            set => _methods = value;
        }

        [Input("metrics")]
        private InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMetricsArgs>? _metrics;

        /// <summary>
        /// Metrics Map: system_name -&gt; MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
        /// </summary>
        public InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMetricsArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputMap<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecMetricsArgs>());
            set => _metrics = value;
        }

        /// <summary>
        /// Name is human readable name for the product
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// ProviderAccountRef references account provider credentials
        /// </summary>
        [Input("providerAccountRef")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Capabilities.V1Beta1.ProductSpecProviderAccountRefArgs>? ProviderAccountRef { get; set; }

        /// <summary>
        /// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
        /// </summary>
        [Input("systemName")]
        public Input<string>? SystemName { get; set; }

        public ProductSpecArgs()
        {
        }
    }
}
