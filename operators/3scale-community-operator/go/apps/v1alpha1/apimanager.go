// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type APIManager struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	Spec       APIManagerSpecPtrOutput    `pulumi:"spec"`
	Status     APIManagerStatusPtrOutput  `pulumi:"status"`
}

// NewAPIManager registers a new resource with the given unique name, arguments, and options.
func NewAPIManager(ctx *pulumi.Context,
	name string, args *APIManagerArgs, opts ...pulumi.ResourceOption) (*APIManager, error) {
	if args == nil {
		args = &APIManagerArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("apps.3scale.net/v1alpha1")
	args.Kind = pulumi.StringPtr("APIManager")
	var resource APIManager
	err := ctx.RegisterResource("kubernetes:apps.3scale.net/v1alpha1:APIManager", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAPIManager gets an existing APIManager resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAPIManager(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *APIManagerState, opts ...pulumi.ResourceOption) (*APIManager, error) {
	var resource APIManager
	err := ctx.ReadResource("kubernetes:apps.3scale.net/v1alpha1:APIManager", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering APIManager resources.
type apimanagerState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *APIManagerSpec    `pulumi:"spec"`
	Status     *APIManagerStatus  `pulumi:"status"`
}

type APIManagerState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       APIManagerSpecPtrInput
	Status     APIManagerStatusPtrInput
}

func (APIManagerState) ElementType() reflect.Type {
	return reflect.TypeOf((*apimanagerState)(nil)).Elem()
}

type apimanagerArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *APIManagerSpec    `pulumi:"spec"`
	Status     *APIManagerStatus  `pulumi:"status"`
}

// The set of arguments for constructing a APIManager resource.
type APIManagerArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       APIManagerSpecPtrInput
	Status     APIManagerStatusPtrInput
}

func (APIManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apimanagerArgs)(nil)).Elem()
}
