// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Backend is the Schema for the backends API
type BackendType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BackendSpec defines the desired state of Backend
	Spec *BackendSpec `pulumi:"spec"`
	// BackendStatus defines the observed state of Backend
	Status *BackendStatus `pulumi:"status"`
}

// BackendTypeInput is an input type that accepts BackendTypeArgs and BackendTypeOutput values.
// You can construct a concrete instance of `BackendTypeInput` via:
//
//          BackendTypeArgs{...}
type BackendTypeInput interface {
	pulumi.Input

	ToBackendTypeOutput() BackendTypeOutput
	ToBackendTypeOutputWithContext(context.Context) BackendTypeOutput
}

// Backend is the Schema for the backends API
type BackendTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BackendSpec defines the desired state of Backend
	Spec BackendSpecPtrInput `pulumi:"spec"`
	// BackendStatus defines the observed state of Backend
	Status BackendStatusPtrInput `pulumi:"status"`
}

func (BackendTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendType)(nil)).Elem()
}

func (i BackendTypeArgs) ToBackendTypeOutput() BackendTypeOutput {
	return i.ToBackendTypeOutputWithContext(context.Background())
}

func (i BackendTypeArgs) ToBackendTypeOutputWithContext(ctx context.Context) BackendTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTypeOutput)
}

// Backend is the Schema for the backends API
type BackendTypeOutput struct{ *pulumi.OutputState }

func (BackendTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendType)(nil)).Elem()
}

func (o BackendTypeOutput) ToBackendTypeOutput() BackendTypeOutput {
	return o
}

func (o BackendTypeOutput) ToBackendTypeOutputWithContext(ctx context.Context) BackendTypeOutput {
	return o
}

func (o BackendTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BackendTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BackendTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BackendType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BackendSpec defines the desired state of Backend
func (o BackendTypeOutput) Spec() BackendSpecPtrOutput {
	return o.ApplyT(func(v BackendType) *BackendSpec { return v.Spec }).(BackendSpecPtrOutput)
}

// BackendStatus defines the observed state of Backend
func (o BackendTypeOutput) Status() BackendStatusPtrOutput {
	return o.ApplyT(func(v BackendType) *BackendStatus { return v.Status }).(BackendStatusPtrOutput)
}

type BackendMetadata struct {
}

// BackendMetadataInput is an input type that accepts BackendMetadataArgs and BackendMetadataOutput values.
// You can construct a concrete instance of `BackendMetadataInput` via:
//
//          BackendMetadataArgs{...}
type BackendMetadataInput interface {
	pulumi.Input

	ToBackendMetadataOutput() BackendMetadataOutput
	ToBackendMetadataOutputWithContext(context.Context) BackendMetadataOutput
}

type BackendMetadataArgs struct {
}

func (BackendMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendMetadata)(nil)).Elem()
}

func (i BackendMetadataArgs) ToBackendMetadataOutput() BackendMetadataOutput {
	return i.ToBackendMetadataOutputWithContext(context.Background())
}

func (i BackendMetadataArgs) ToBackendMetadataOutputWithContext(ctx context.Context) BackendMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendMetadataOutput)
}

type BackendMetadataOutput struct{ *pulumi.OutputState }

func (BackendMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendMetadata)(nil)).Elem()
}

func (o BackendMetadataOutput) ToBackendMetadataOutput() BackendMetadataOutput {
	return o
}

func (o BackendMetadataOutput) ToBackendMetadataOutputWithContext(ctx context.Context) BackendMetadataOutput {
	return o
}

// BackendSpec defines the desired state of Backend
type BackendSpec struct {
	// Description is a human readable text of the backend
	Description  *string                   `pulumi:"description"`
	MappingRules []BackendSpecMappingRules `pulumi:"mappingRules"`
	// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Methods map[string]BackendSpecMethods `pulumi:"methods"`
	// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Metrics map[string]BackendSpecMetrics `pulumi:"metrics"`
	// Name is human readable name for the backend
	Name string `pulumi:"name"`
	// PrivateBaseURL Private Base URL of the API
	PrivateBaseURL string `pulumi:"privateBaseURL"`
	// ProviderAccountRef references account provider credentials
	ProviderAccountRef *BackendSpecProviderAccountRef `pulumi:"providerAccountRef"`
	// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
	SystemName *string `pulumi:"systemName"`
}

// BackendSpecInput is an input type that accepts BackendSpecArgs and BackendSpecOutput values.
// You can construct a concrete instance of `BackendSpecInput` via:
//
//          BackendSpecArgs{...}
type BackendSpecInput interface {
	pulumi.Input

	ToBackendSpecOutput() BackendSpecOutput
	ToBackendSpecOutputWithContext(context.Context) BackendSpecOutput
}

// BackendSpec defines the desired state of Backend
type BackendSpecArgs struct {
	// Description is a human readable text of the backend
	Description  pulumi.StringPtrInput             `pulumi:"description"`
	MappingRules BackendSpecMappingRulesArrayInput `pulumi:"mappingRules"`
	// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Methods BackendSpecMethodsMapInput `pulumi:"methods"`
	// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Metrics BackendSpecMetricsMapInput `pulumi:"metrics"`
	// Name is human readable name for the backend
	Name pulumi.StringInput `pulumi:"name"`
	// PrivateBaseURL Private Base URL of the API
	PrivateBaseURL pulumi.StringInput `pulumi:"privateBaseURL"`
	// ProviderAccountRef references account provider credentials
	ProviderAccountRef BackendSpecProviderAccountRefPtrInput `pulumi:"providerAccountRef"`
	// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
	SystemName pulumi.StringPtrInput `pulumi:"systemName"`
}

func (BackendSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpec)(nil)).Elem()
}

func (i BackendSpecArgs) ToBackendSpecOutput() BackendSpecOutput {
	return i.ToBackendSpecOutputWithContext(context.Background())
}

func (i BackendSpecArgs) ToBackendSpecOutputWithContext(ctx context.Context) BackendSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecOutput)
}

func (i BackendSpecArgs) ToBackendSpecPtrOutput() BackendSpecPtrOutput {
	return i.ToBackendSpecPtrOutputWithContext(context.Background())
}

func (i BackendSpecArgs) ToBackendSpecPtrOutputWithContext(ctx context.Context) BackendSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecOutput).ToBackendSpecPtrOutputWithContext(ctx)
}

// BackendSpecPtrInput is an input type that accepts BackendSpecArgs, BackendSpecPtr and BackendSpecPtrOutput values.
// You can construct a concrete instance of `BackendSpecPtrInput` via:
//
//          BackendSpecArgs{...}
//
//  or:
//
//          nil
type BackendSpecPtrInput interface {
	pulumi.Input

	ToBackendSpecPtrOutput() BackendSpecPtrOutput
	ToBackendSpecPtrOutputWithContext(context.Context) BackendSpecPtrOutput
}

type backendSpecPtrType BackendSpecArgs

func BackendSpecPtr(v *BackendSpecArgs) BackendSpecPtrInput {
	return (*backendSpecPtrType)(v)
}

func (*backendSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSpec)(nil)).Elem()
}

func (i *backendSpecPtrType) ToBackendSpecPtrOutput() BackendSpecPtrOutput {
	return i.ToBackendSpecPtrOutputWithContext(context.Background())
}

func (i *backendSpecPtrType) ToBackendSpecPtrOutputWithContext(ctx context.Context) BackendSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecPtrOutput)
}

// BackendSpec defines the desired state of Backend
type BackendSpecOutput struct{ *pulumi.OutputState }

func (BackendSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpec)(nil)).Elem()
}

func (o BackendSpecOutput) ToBackendSpecOutput() BackendSpecOutput {
	return o
}

func (o BackendSpecOutput) ToBackendSpecOutputWithContext(ctx context.Context) BackendSpecOutput {
	return o
}

func (o BackendSpecOutput) ToBackendSpecPtrOutput() BackendSpecPtrOutput {
	return o.ToBackendSpecPtrOutputWithContext(context.Background())
}

func (o BackendSpecOutput) ToBackendSpecPtrOutputWithContext(ctx context.Context) BackendSpecPtrOutput {
	return o.ApplyT(func(v BackendSpec) *BackendSpec {
		return &v
	}).(BackendSpecPtrOutput)
}

// Description is a human readable text of the backend
func (o BackendSpecOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSpec) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BackendSpecOutput) MappingRules() BackendSpecMappingRulesArrayOutput {
	return o.ApplyT(func(v BackendSpec) []BackendSpecMappingRules { return v.MappingRules }).(BackendSpecMappingRulesArrayOutput)
}

// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o BackendSpecOutput) Methods() BackendSpecMethodsMapOutput {
	return o.ApplyT(func(v BackendSpec) map[string]BackendSpecMethods { return v.Methods }).(BackendSpecMethodsMapOutput)
}

// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o BackendSpecOutput) Metrics() BackendSpecMetricsMapOutput {
	return o.ApplyT(func(v BackendSpec) map[string]BackendSpecMetrics { return v.Metrics }).(BackendSpecMetricsMapOutput)
}

// Name is human readable name for the backend
func (o BackendSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpec) string { return v.Name }).(pulumi.StringOutput)
}

// PrivateBaseURL Private Base URL of the API
func (o BackendSpecOutput) PrivateBaseURL() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpec) string { return v.PrivateBaseURL }).(pulumi.StringOutput)
}

// ProviderAccountRef references account provider credentials
func (o BackendSpecOutput) ProviderAccountRef() BackendSpecProviderAccountRefPtrOutput {
	return o.ApplyT(func(v BackendSpec) *BackendSpecProviderAccountRef { return v.ProviderAccountRef }).(BackendSpecProviderAccountRefPtrOutput)
}

// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
func (o BackendSpecOutput) SystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSpec) *string { return v.SystemName }).(pulumi.StringPtrOutput)
}

type BackendSpecPtrOutput struct{ *pulumi.OutputState }

func (BackendSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSpec)(nil)).Elem()
}

func (o BackendSpecPtrOutput) ToBackendSpecPtrOutput() BackendSpecPtrOutput {
	return o
}

func (o BackendSpecPtrOutput) ToBackendSpecPtrOutputWithContext(ctx context.Context) BackendSpecPtrOutput {
	return o
}

func (o BackendSpecPtrOutput) Elem() BackendSpecOutput {
	return o.ApplyT(func(v *BackendSpec) BackendSpec { return *v }).(BackendSpecOutput)
}

// Description is a human readable text of the backend
func (o BackendSpecPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSpec) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o BackendSpecPtrOutput) MappingRules() BackendSpecMappingRulesArrayOutput {
	return o.ApplyT(func(v *BackendSpec) []BackendSpecMappingRules {
		if v == nil {
			return nil
		}
		return v.MappingRules
	}).(BackendSpecMappingRulesArrayOutput)
}

// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o BackendSpecPtrOutput) Methods() BackendSpecMethodsMapOutput {
	return o.ApplyT(func(v *BackendSpec) map[string]BackendSpecMethods {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(BackendSpecMethodsMapOutput)
}

// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o BackendSpecPtrOutput) Metrics() BackendSpecMetricsMapOutput {
	return o.ApplyT(func(v *BackendSpec) map[string]BackendSpecMetrics {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(BackendSpecMetricsMapOutput)
}

// Name is human readable name for the backend
func (o BackendSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateBaseURL Private Base URL of the API
func (o BackendSpecPtrOutput) PrivateBaseURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSpec) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateBaseURL
	}).(pulumi.StringPtrOutput)
}

// ProviderAccountRef references account provider credentials
func (o BackendSpecPtrOutput) ProviderAccountRef() BackendSpecProviderAccountRefPtrOutput {
	return o.ApplyT(func(v *BackendSpec) *BackendSpecProviderAccountRef {
		if v == nil {
			return nil
		}
		return v.ProviderAccountRef
	}).(BackendSpecProviderAccountRefPtrOutput)
}

// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
func (o BackendSpecPtrOutput) SystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSpec) *string {
		if v == nil {
			return nil
		}
		return v.SystemName
	}).(pulumi.StringPtrOutput)
}

// MappingRuleSpec defines the desired state of Product's MappingRule
type BackendSpecMappingRules struct {
	HttpMethod      string `pulumi:"httpMethod"`
	Increment       int    `pulumi:"increment"`
	MetricMethodRef string `pulumi:"metricMethodRef"`
	Pattern         string `pulumi:"pattern"`
	Position        *int   `pulumi:"position"`
}

// BackendSpecMappingRulesInput is an input type that accepts BackendSpecMappingRulesArgs and BackendSpecMappingRulesOutput values.
// You can construct a concrete instance of `BackendSpecMappingRulesInput` via:
//
//          BackendSpecMappingRulesArgs{...}
type BackendSpecMappingRulesInput interface {
	pulumi.Input

	ToBackendSpecMappingRulesOutput() BackendSpecMappingRulesOutput
	ToBackendSpecMappingRulesOutputWithContext(context.Context) BackendSpecMappingRulesOutput
}

// MappingRuleSpec defines the desired state of Product's MappingRule
type BackendSpecMappingRulesArgs struct {
	HttpMethod      pulumi.StringInput `pulumi:"httpMethod"`
	Increment       pulumi.IntInput    `pulumi:"increment"`
	MetricMethodRef pulumi.StringInput `pulumi:"metricMethodRef"`
	Pattern         pulumi.StringInput `pulumi:"pattern"`
	Position        pulumi.IntPtrInput `pulumi:"position"`
}

func (BackendSpecMappingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecMappingRules)(nil)).Elem()
}

func (i BackendSpecMappingRulesArgs) ToBackendSpecMappingRulesOutput() BackendSpecMappingRulesOutput {
	return i.ToBackendSpecMappingRulesOutputWithContext(context.Background())
}

func (i BackendSpecMappingRulesArgs) ToBackendSpecMappingRulesOutputWithContext(ctx context.Context) BackendSpecMappingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecMappingRulesOutput)
}

// BackendSpecMappingRulesArrayInput is an input type that accepts BackendSpecMappingRulesArray and BackendSpecMappingRulesArrayOutput values.
// You can construct a concrete instance of `BackendSpecMappingRulesArrayInput` via:
//
//          BackendSpecMappingRulesArray{ BackendSpecMappingRulesArgs{...} }
type BackendSpecMappingRulesArrayInput interface {
	pulumi.Input

	ToBackendSpecMappingRulesArrayOutput() BackendSpecMappingRulesArrayOutput
	ToBackendSpecMappingRulesArrayOutputWithContext(context.Context) BackendSpecMappingRulesArrayOutput
}

type BackendSpecMappingRulesArray []BackendSpecMappingRulesInput

func (BackendSpecMappingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendSpecMappingRules)(nil)).Elem()
}

func (i BackendSpecMappingRulesArray) ToBackendSpecMappingRulesArrayOutput() BackendSpecMappingRulesArrayOutput {
	return i.ToBackendSpecMappingRulesArrayOutputWithContext(context.Background())
}

func (i BackendSpecMappingRulesArray) ToBackendSpecMappingRulesArrayOutputWithContext(ctx context.Context) BackendSpecMappingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecMappingRulesArrayOutput)
}

// MappingRuleSpec defines the desired state of Product's MappingRule
type BackendSpecMappingRulesOutput struct{ *pulumi.OutputState }

func (BackendSpecMappingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecMappingRules)(nil)).Elem()
}

func (o BackendSpecMappingRulesOutput) ToBackendSpecMappingRulesOutput() BackendSpecMappingRulesOutput {
	return o
}

func (o BackendSpecMappingRulesOutput) ToBackendSpecMappingRulesOutputWithContext(ctx context.Context) BackendSpecMappingRulesOutput {
	return o
}

func (o BackendSpecMappingRulesOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpecMappingRules) string { return v.HttpMethod }).(pulumi.StringOutput)
}

func (o BackendSpecMappingRulesOutput) Increment() pulumi.IntOutput {
	return o.ApplyT(func(v BackendSpecMappingRules) int { return v.Increment }).(pulumi.IntOutput)
}

func (o BackendSpecMappingRulesOutput) MetricMethodRef() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpecMappingRules) string { return v.MetricMethodRef }).(pulumi.StringOutput)
}

func (o BackendSpecMappingRulesOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpecMappingRules) string { return v.Pattern }).(pulumi.StringOutput)
}

func (o BackendSpecMappingRulesOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendSpecMappingRules) *int { return v.Position }).(pulumi.IntPtrOutput)
}

type BackendSpecMappingRulesArrayOutput struct{ *pulumi.OutputState }

func (BackendSpecMappingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendSpecMappingRules)(nil)).Elem()
}

func (o BackendSpecMappingRulesArrayOutput) ToBackendSpecMappingRulesArrayOutput() BackendSpecMappingRulesArrayOutput {
	return o
}

func (o BackendSpecMappingRulesArrayOutput) ToBackendSpecMappingRulesArrayOutputWithContext(ctx context.Context) BackendSpecMappingRulesArrayOutput {
	return o
}

func (o BackendSpecMappingRulesArrayOutput) Index(i pulumi.IntInput) BackendSpecMappingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendSpecMappingRules {
		return vs[0].([]BackendSpecMappingRules)[vs[1].(int)]
	}).(BackendSpecMappingRulesOutput)
}

// MethodSpec defines the desired state of Product's Method
type BackendSpecMethods struct {
	Description  *string `pulumi:"description"`
	FriendlyName string  `pulumi:"friendlyName"`
}

// BackendSpecMethodsInput is an input type that accepts BackendSpecMethodsArgs and BackendSpecMethodsOutput values.
// You can construct a concrete instance of `BackendSpecMethodsInput` via:
//
//          BackendSpecMethodsArgs{...}
type BackendSpecMethodsInput interface {
	pulumi.Input

	ToBackendSpecMethodsOutput() BackendSpecMethodsOutput
	ToBackendSpecMethodsOutputWithContext(context.Context) BackendSpecMethodsOutput
}

// MethodSpec defines the desired state of Product's Method
type BackendSpecMethodsArgs struct {
	Description  pulumi.StringPtrInput `pulumi:"description"`
	FriendlyName pulumi.StringInput    `pulumi:"friendlyName"`
}

func (BackendSpecMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecMethods)(nil)).Elem()
}

func (i BackendSpecMethodsArgs) ToBackendSpecMethodsOutput() BackendSpecMethodsOutput {
	return i.ToBackendSpecMethodsOutputWithContext(context.Background())
}

func (i BackendSpecMethodsArgs) ToBackendSpecMethodsOutputWithContext(ctx context.Context) BackendSpecMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecMethodsOutput)
}

// BackendSpecMethodsMapInput is an input type that accepts BackendSpecMethodsMap and BackendSpecMethodsMapOutput values.
// You can construct a concrete instance of `BackendSpecMethodsMapInput` via:
//
//          BackendSpecMethodsMap{ "key": BackendSpecMethodsArgs{...} }
type BackendSpecMethodsMapInput interface {
	pulumi.Input

	ToBackendSpecMethodsMapOutput() BackendSpecMethodsMapOutput
	ToBackendSpecMethodsMapOutputWithContext(context.Context) BackendSpecMethodsMapOutput
}

type BackendSpecMethodsMap map[string]BackendSpecMethodsInput

func (BackendSpecMethodsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BackendSpecMethods)(nil)).Elem()
}

func (i BackendSpecMethodsMap) ToBackendSpecMethodsMapOutput() BackendSpecMethodsMapOutput {
	return i.ToBackendSpecMethodsMapOutputWithContext(context.Background())
}

func (i BackendSpecMethodsMap) ToBackendSpecMethodsMapOutputWithContext(ctx context.Context) BackendSpecMethodsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecMethodsMapOutput)
}

// MethodSpec defines the desired state of Product's Method
type BackendSpecMethodsOutput struct{ *pulumi.OutputState }

func (BackendSpecMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecMethods)(nil)).Elem()
}

func (o BackendSpecMethodsOutput) ToBackendSpecMethodsOutput() BackendSpecMethodsOutput {
	return o
}

func (o BackendSpecMethodsOutput) ToBackendSpecMethodsOutputWithContext(ctx context.Context) BackendSpecMethodsOutput {
	return o
}

func (o BackendSpecMethodsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSpecMethods) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BackendSpecMethodsOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpecMethods) string { return v.FriendlyName }).(pulumi.StringOutput)
}

type BackendSpecMethodsMapOutput struct{ *pulumi.OutputState }

func (BackendSpecMethodsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BackendSpecMethods)(nil)).Elem()
}

func (o BackendSpecMethodsMapOutput) ToBackendSpecMethodsMapOutput() BackendSpecMethodsMapOutput {
	return o
}

func (o BackendSpecMethodsMapOutput) ToBackendSpecMethodsMapOutputWithContext(ctx context.Context) BackendSpecMethodsMapOutput {
	return o
}

func (o BackendSpecMethodsMapOutput) MapIndex(k pulumi.StringInput) BackendSpecMethodsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BackendSpecMethods {
		return vs[0].(map[string]BackendSpecMethods)[vs[1].(string)]
	}).(BackendSpecMethodsOutput)
}

// MetricSpec defines the desired state of Product's Metric
type BackendSpecMetrics struct {
	Description  *string `pulumi:"description"`
	FriendlyName string  `pulumi:"friendlyName"`
	Unit         string  `pulumi:"unit"`
}

// BackendSpecMetricsInput is an input type that accepts BackendSpecMetricsArgs and BackendSpecMetricsOutput values.
// You can construct a concrete instance of `BackendSpecMetricsInput` via:
//
//          BackendSpecMetricsArgs{...}
type BackendSpecMetricsInput interface {
	pulumi.Input

	ToBackendSpecMetricsOutput() BackendSpecMetricsOutput
	ToBackendSpecMetricsOutputWithContext(context.Context) BackendSpecMetricsOutput
}

// MetricSpec defines the desired state of Product's Metric
type BackendSpecMetricsArgs struct {
	Description  pulumi.StringPtrInput `pulumi:"description"`
	FriendlyName pulumi.StringInput    `pulumi:"friendlyName"`
	Unit         pulumi.StringInput    `pulumi:"unit"`
}

func (BackendSpecMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecMetrics)(nil)).Elem()
}

func (i BackendSpecMetricsArgs) ToBackendSpecMetricsOutput() BackendSpecMetricsOutput {
	return i.ToBackendSpecMetricsOutputWithContext(context.Background())
}

func (i BackendSpecMetricsArgs) ToBackendSpecMetricsOutputWithContext(ctx context.Context) BackendSpecMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecMetricsOutput)
}

// BackendSpecMetricsMapInput is an input type that accepts BackendSpecMetricsMap and BackendSpecMetricsMapOutput values.
// You can construct a concrete instance of `BackendSpecMetricsMapInput` via:
//
//          BackendSpecMetricsMap{ "key": BackendSpecMetricsArgs{...} }
type BackendSpecMetricsMapInput interface {
	pulumi.Input

	ToBackendSpecMetricsMapOutput() BackendSpecMetricsMapOutput
	ToBackendSpecMetricsMapOutputWithContext(context.Context) BackendSpecMetricsMapOutput
}

type BackendSpecMetricsMap map[string]BackendSpecMetricsInput

func (BackendSpecMetricsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BackendSpecMetrics)(nil)).Elem()
}

func (i BackendSpecMetricsMap) ToBackendSpecMetricsMapOutput() BackendSpecMetricsMapOutput {
	return i.ToBackendSpecMetricsMapOutputWithContext(context.Background())
}

func (i BackendSpecMetricsMap) ToBackendSpecMetricsMapOutputWithContext(ctx context.Context) BackendSpecMetricsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecMetricsMapOutput)
}

// MetricSpec defines the desired state of Product's Metric
type BackendSpecMetricsOutput struct{ *pulumi.OutputState }

func (BackendSpecMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecMetrics)(nil)).Elem()
}

func (o BackendSpecMetricsOutput) ToBackendSpecMetricsOutput() BackendSpecMetricsOutput {
	return o
}

func (o BackendSpecMetricsOutput) ToBackendSpecMetricsOutputWithContext(ctx context.Context) BackendSpecMetricsOutput {
	return o
}

func (o BackendSpecMetricsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSpecMetrics) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BackendSpecMetricsOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpecMetrics) string { return v.FriendlyName }).(pulumi.StringOutput)
}

func (o BackendSpecMetricsOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v BackendSpecMetrics) string { return v.Unit }).(pulumi.StringOutput)
}

type BackendSpecMetricsMapOutput struct{ *pulumi.OutputState }

func (BackendSpecMetricsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BackendSpecMetrics)(nil)).Elem()
}

func (o BackendSpecMetricsMapOutput) ToBackendSpecMetricsMapOutput() BackendSpecMetricsMapOutput {
	return o
}

func (o BackendSpecMetricsMapOutput) ToBackendSpecMetricsMapOutputWithContext(ctx context.Context) BackendSpecMetricsMapOutput {
	return o
}

func (o BackendSpecMetricsMapOutput) MapIndex(k pulumi.StringInput) BackendSpecMetricsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BackendSpecMetrics {
		return vs[0].(map[string]BackendSpecMetrics)[vs[1].(string)]
	}).(BackendSpecMetricsOutput)
}

// ProviderAccountRef references account provider credentials
type BackendSpecProviderAccountRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// BackendSpecProviderAccountRefInput is an input type that accepts BackendSpecProviderAccountRefArgs and BackendSpecProviderAccountRefOutput values.
// You can construct a concrete instance of `BackendSpecProviderAccountRefInput` via:
//
//          BackendSpecProviderAccountRefArgs{...}
type BackendSpecProviderAccountRefInput interface {
	pulumi.Input

	ToBackendSpecProviderAccountRefOutput() BackendSpecProviderAccountRefOutput
	ToBackendSpecProviderAccountRefOutputWithContext(context.Context) BackendSpecProviderAccountRefOutput
}

// ProviderAccountRef references account provider credentials
type BackendSpecProviderAccountRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BackendSpecProviderAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecProviderAccountRef)(nil)).Elem()
}

func (i BackendSpecProviderAccountRefArgs) ToBackendSpecProviderAccountRefOutput() BackendSpecProviderAccountRefOutput {
	return i.ToBackendSpecProviderAccountRefOutputWithContext(context.Background())
}

func (i BackendSpecProviderAccountRefArgs) ToBackendSpecProviderAccountRefOutputWithContext(ctx context.Context) BackendSpecProviderAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecProviderAccountRefOutput)
}

func (i BackendSpecProviderAccountRefArgs) ToBackendSpecProviderAccountRefPtrOutput() BackendSpecProviderAccountRefPtrOutput {
	return i.ToBackendSpecProviderAccountRefPtrOutputWithContext(context.Background())
}

func (i BackendSpecProviderAccountRefArgs) ToBackendSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) BackendSpecProviderAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecProviderAccountRefOutput).ToBackendSpecProviderAccountRefPtrOutputWithContext(ctx)
}

// BackendSpecProviderAccountRefPtrInput is an input type that accepts BackendSpecProviderAccountRefArgs, BackendSpecProviderAccountRefPtr and BackendSpecProviderAccountRefPtrOutput values.
// You can construct a concrete instance of `BackendSpecProviderAccountRefPtrInput` via:
//
//          BackendSpecProviderAccountRefArgs{...}
//
//  or:
//
//          nil
type BackendSpecProviderAccountRefPtrInput interface {
	pulumi.Input

	ToBackendSpecProviderAccountRefPtrOutput() BackendSpecProviderAccountRefPtrOutput
	ToBackendSpecProviderAccountRefPtrOutputWithContext(context.Context) BackendSpecProviderAccountRefPtrOutput
}

type backendSpecProviderAccountRefPtrType BackendSpecProviderAccountRefArgs

func BackendSpecProviderAccountRefPtr(v *BackendSpecProviderAccountRefArgs) BackendSpecProviderAccountRefPtrInput {
	return (*backendSpecProviderAccountRefPtrType)(v)
}

func (*backendSpecProviderAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSpecProviderAccountRef)(nil)).Elem()
}

func (i *backendSpecProviderAccountRefPtrType) ToBackendSpecProviderAccountRefPtrOutput() BackendSpecProviderAccountRefPtrOutput {
	return i.ToBackendSpecProviderAccountRefPtrOutputWithContext(context.Background())
}

func (i *backendSpecProviderAccountRefPtrType) ToBackendSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) BackendSpecProviderAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendSpecProviderAccountRefPtrOutput)
}

// ProviderAccountRef references account provider credentials
type BackendSpecProviderAccountRefOutput struct{ *pulumi.OutputState }

func (BackendSpecProviderAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendSpecProviderAccountRef)(nil)).Elem()
}

func (o BackendSpecProviderAccountRefOutput) ToBackendSpecProviderAccountRefOutput() BackendSpecProviderAccountRefOutput {
	return o
}

func (o BackendSpecProviderAccountRefOutput) ToBackendSpecProviderAccountRefOutputWithContext(ctx context.Context) BackendSpecProviderAccountRefOutput {
	return o
}

func (o BackendSpecProviderAccountRefOutput) ToBackendSpecProviderAccountRefPtrOutput() BackendSpecProviderAccountRefPtrOutput {
	return o.ToBackendSpecProviderAccountRefPtrOutputWithContext(context.Background())
}

func (o BackendSpecProviderAccountRefOutput) ToBackendSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) BackendSpecProviderAccountRefPtrOutput {
	return o.ApplyT(func(v BackendSpecProviderAccountRef) *BackendSpecProviderAccountRef {
		return &v
	}).(BackendSpecProviderAccountRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BackendSpecProviderAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendSpecProviderAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BackendSpecProviderAccountRefPtrOutput struct{ *pulumi.OutputState }

func (BackendSpecProviderAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendSpecProviderAccountRef)(nil)).Elem()
}

func (o BackendSpecProviderAccountRefPtrOutput) ToBackendSpecProviderAccountRefPtrOutput() BackendSpecProviderAccountRefPtrOutput {
	return o
}

func (o BackendSpecProviderAccountRefPtrOutput) ToBackendSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) BackendSpecProviderAccountRefPtrOutput {
	return o
}

func (o BackendSpecProviderAccountRefPtrOutput) Elem() BackendSpecProviderAccountRefOutput {
	return o.ApplyT(func(v *BackendSpecProviderAccountRef) BackendSpecProviderAccountRef { return *v }).(BackendSpecProviderAccountRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o BackendSpecProviderAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendSpecProviderAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// BackendStatus defines the observed state of Backend
type BackendStatus struct {
	BackendId *int `pulumi:"backendId"`
	// Current state of the 3scale backend. Conditions represent the latest available observations of an object's state
	Conditions []BackendStatusConditions `pulumi:"conditions"`
	// ObservedGeneration reflects the generation of the most recently observed Backend Spec.
	ObservedGeneration *int `pulumi:"observedGeneration"`
}

// BackendStatusInput is an input type that accepts BackendStatusArgs and BackendStatusOutput values.
// You can construct a concrete instance of `BackendStatusInput` via:
//
//          BackendStatusArgs{...}
type BackendStatusInput interface {
	pulumi.Input

	ToBackendStatusOutput() BackendStatusOutput
	ToBackendStatusOutputWithContext(context.Context) BackendStatusOutput
}

// BackendStatus defines the observed state of Backend
type BackendStatusArgs struct {
	BackendId pulumi.IntPtrInput `pulumi:"backendId"`
	// Current state of the 3scale backend. Conditions represent the latest available observations of an object's state
	Conditions BackendStatusConditionsArrayInput `pulumi:"conditions"`
	// ObservedGeneration reflects the generation of the most recently observed Backend Spec.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
}

func (BackendStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendStatus)(nil)).Elem()
}

func (i BackendStatusArgs) ToBackendStatusOutput() BackendStatusOutput {
	return i.ToBackendStatusOutputWithContext(context.Background())
}

func (i BackendStatusArgs) ToBackendStatusOutputWithContext(ctx context.Context) BackendStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendStatusOutput)
}

func (i BackendStatusArgs) ToBackendStatusPtrOutput() BackendStatusPtrOutput {
	return i.ToBackendStatusPtrOutputWithContext(context.Background())
}

func (i BackendStatusArgs) ToBackendStatusPtrOutputWithContext(ctx context.Context) BackendStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendStatusOutput).ToBackendStatusPtrOutputWithContext(ctx)
}

// BackendStatusPtrInput is an input type that accepts BackendStatusArgs, BackendStatusPtr and BackendStatusPtrOutput values.
// You can construct a concrete instance of `BackendStatusPtrInput` via:
//
//          BackendStatusArgs{...}
//
//  or:
//
//          nil
type BackendStatusPtrInput interface {
	pulumi.Input

	ToBackendStatusPtrOutput() BackendStatusPtrOutput
	ToBackendStatusPtrOutputWithContext(context.Context) BackendStatusPtrOutput
}

type backendStatusPtrType BackendStatusArgs

func BackendStatusPtr(v *BackendStatusArgs) BackendStatusPtrInput {
	return (*backendStatusPtrType)(v)
}

func (*backendStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendStatus)(nil)).Elem()
}

func (i *backendStatusPtrType) ToBackendStatusPtrOutput() BackendStatusPtrOutput {
	return i.ToBackendStatusPtrOutputWithContext(context.Background())
}

func (i *backendStatusPtrType) ToBackendStatusPtrOutputWithContext(ctx context.Context) BackendStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendStatusPtrOutput)
}

// BackendStatus defines the observed state of Backend
type BackendStatusOutput struct{ *pulumi.OutputState }

func (BackendStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendStatus)(nil)).Elem()
}

func (o BackendStatusOutput) ToBackendStatusOutput() BackendStatusOutput {
	return o
}

func (o BackendStatusOutput) ToBackendStatusOutputWithContext(ctx context.Context) BackendStatusOutput {
	return o
}

func (o BackendStatusOutput) ToBackendStatusPtrOutput() BackendStatusPtrOutput {
	return o.ToBackendStatusPtrOutputWithContext(context.Background())
}

func (o BackendStatusOutput) ToBackendStatusPtrOutputWithContext(ctx context.Context) BackendStatusPtrOutput {
	return o.ApplyT(func(v BackendStatus) *BackendStatus {
		return &v
	}).(BackendStatusPtrOutput)
}
func (o BackendStatusOutput) BackendId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendStatus) *int { return v.BackendId }).(pulumi.IntPtrOutput)
}

// Current state of the 3scale backend. Conditions represent the latest available observations of an object's state
func (o BackendStatusOutput) Conditions() BackendStatusConditionsArrayOutput {
	return o.ApplyT(func(v BackendStatus) []BackendStatusConditions { return v.Conditions }).(BackendStatusConditionsArrayOutput)
}

// ObservedGeneration reflects the generation of the most recently observed Backend Spec.
func (o BackendStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

type BackendStatusPtrOutput struct{ *pulumi.OutputState }

func (BackendStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendStatus)(nil)).Elem()
}

func (o BackendStatusPtrOutput) ToBackendStatusPtrOutput() BackendStatusPtrOutput {
	return o
}

func (o BackendStatusPtrOutput) ToBackendStatusPtrOutputWithContext(ctx context.Context) BackendStatusPtrOutput {
	return o
}

func (o BackendStatusPtrOutput) Elem() BackendStatusOutput {
	return o.ApplyT(func(v *BackendStatus) BackendStatus { return *v }).(BackendStatusOutput)
}

func (o BackendStatusPtrOutput) BackendId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendStatus) *int {
		if v == nil {
			return nil
		}
		return v.BackendId
	}).(pulumi.IntPtrOutput)
}

// Current state of the 3scale backend. Conditions represent the latest available observations of an object's state
func (o BackendStatusPtrOutput) Conditions() BackendStatusConditionsArrayOutput {
	return o.ApplyT(func(v *BackendStatus) []BackendStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(BackendStatusConditionsArrayOutput)
}

// ObservedGeneration reflects the generation of the most recently observed Backend Spec.
func (o BackendStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type BackendStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
	Reason *string `pulumi:"reason"`
	Status string  `pulumi:"status"`
	// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
	//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
	Type string `pulumi:"type"`
}

// BackendStatusConditionsInput is an input type that accepts BackendStatusConditionsArgs and BackendStatusConditionsOutput values.
// You can construct a concrete instance of `BackendStatusConditionsInput` via:
//
//          BackendStatusConditionsArgs{...}
type BackendStatusConditionsInput interface {
	pulumi.Input

	ToBackendStatusConditionsOutput() BackendStatusConditionsOutput
	ToBackendStatusConditionsOutputWithContext(context.Context) BackendStatusConditionsOutput
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type BackendStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Status pulumi.StringInput    `pulumi:"status"`
	// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
	//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
	Type pulumi.StringInput `pulumi:"type"`
}

func (BackendStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendStatusConditions)(nil)).Elem()
}

func (i BackendStatusConditionsArgs) ToBackendStatusConditionsOutput() BackendStatusConditionsOutput {
	return i.ToBackendStatusConditionsOutputWithContext(context.Background())
}

func (i BackendStatusConditionsArgs) ToBackendStatusConditionsOutputWithContext(ctx context.Context) BackendStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendStatusConditionsOutput)
}

// BackendStatusConditionsArrayInput is an input type that accepts BackendStatusConditionsArray and BackendStatusConditionsArrayOutput values.
// You can construct a concrete instance of `BackendStatusConditionsArrayInput` via:
//
//          BackendStatusConditionsArray{ BackendStatusConditionsArgs{...} }
type BackendStatusConditionsArrayInput interface {
	pulumi.Input

	ToBackendStatusConditionsArrayOutput() BackendStatusConditionsArrayOutput
	ToBackendStatusConditionsArrayOutputWithContext(context.Context) BackendStatusConditionsArrayOutput
}

type BackendStatusConditionsArray []BackendStatusConditionsInput

func (BackendStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendStatusConditions)(nil)).Elem()
}

func (i BackendStatusConditionsArray) ToBackendStatusConditionsArrayOutput() BackendStatusConditionsArrayOutput {
	return i.ToBackendStatusConditionsArrayOutputWithContext(context.Background())
}

func (i BackendStatusConditionsArray) ToBackendStatusConditionsArrayOutputWithContext(ctx context.Context) BackendStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendStatusConditionsArrayOutput)
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type BackendStatusConditionsOutput struct{ *pulumi.OutputState }

func (BackendStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendStatusConditions)(nil)).Elem()
}

func (o BackendStatusConditionsOutput) ToBackendStatusConditionsOutput() BackendStatusConditionsOutput {
	return o
}

func (o BackendStatusConditionsOutput) ToBackendStatusConditionsOutputWithContext(ctx context.Context) BackendStatusConditionsOutput {
	return o
}

func (o BackendStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o BackendStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
func (o BackendStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o BackendStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackendStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
func (o BackendStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type BackendStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (BackendStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendStatusConditions)(nil)).Elem()
}

func (o BackendStatusConditionsArrayOutput) ToBackendStatusConditionsArrayOutput() BackendStatusConditionsArrayOutput {
	return o
}

func (o BackendStatusConditionsArrayOutput) ToBackendStatusConditionsArrayOutputWithContext(ctx context.Context) BackendStatusConditionsArrayOutput {
	return o
}

func (o BackendStatusConditionsArrayOutput) Index(i pulumi.IntInput) BackendStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendStatusConditions {
		return vs[0].([]BackendStatusConditions)[vs[1].(int)]
	}).(BackendStatusConditionsOutput)
}

// Product is the Schema for the products API
type ProductType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ProductSpec defines the desired state of Product
	Spec *ProductSpec `pulumi:"spec"`
	// ProductStatus defines the observed state of Product
	Status *ProductStatus `pulumi:"status"`
}

// ProductTypeInput is an input type that accepts ProductTypeArgs and ProductTypeOutput values.
// You can construct a concrete instance of `ProductTypeInput` via:
//
//          ProductTypeArgs{...}
type ProductTypeInput interface {
	pulumi.Input

	ToProductTypeOutput() ProductTypeOutput
	ToProductTypeOutputWithContext(context.Context) ProductTypeOutput
}

// Product is the Schema for the products API
type ProductTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ProductSpec defines the desired state of Product
	Spec ProductSpecPtrInput `pulumi:"spec"`
	// ProductStatus defines the observed state of Product
	Status ProductStatusPtrInput `pulumi:"status"`
}

func (ProductTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductType)(nil)).Elem()
}

func (i ProductTypeArgs) ToProductTypeOutput() ProductTypeOutput {
	return i.ToProductTypeOutputWithContext(context.Background())
}

func (i ProductTypeArgs) ToProductTypeOutputWithContext(ctx context.Context) ProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeOutput)
}

// Product is the Schema for the products API
type ProductTypeOutput struct{ *pulumi.OutputState }

func (ProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductType)(nil)).Elem()
}

func (o ProductTypeOutput) ToProductTypeOutput() ProductTypeOutput {
	return o
}

func (o ProductTypeOutput) ToProductTypeOutputWithContext(ctx context.Context) ProductTypeOutput {
	return o
}

func (o ProductTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ProductTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ProductTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ProductType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ProductSpec defines the desired state of Product
func (o ProductTypeOutput) Spec() ProductSpecPtrOutput {
	return o.ApplyT(func(v ProductType) *ProductSpec { return v.Spec }).(ProductSpecPtrOutput)
}

// ProductStatus defines the observed state of Product
func (o ProductTypeOutput) Status() ProductStatusPtrOutput {
	return o.ApplyT(func(v ProductType) *ProductStatus { return v.Status }).(ProductStatusPtrOutput)
}

type ProductMetadata struct {
}

// ProductMetadataInput is an input type that accepts ProductMetadataArgs and ProductMetadataOutput values.
// You can construct a concrete instance of `ProductMetadataInput` via:
//
//          ProductMetadataArgs{...}
type ProductMetadataInput interface {
	pulumi.Input

	ToProductMetadataOutput() ProductMetadataOutput
	ToProductMetadataOutputWithContext(context.Context) ProductMetadataOutput
}

type ProductMetadataArgs struct {
}

func (ProductMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductMetadata)(nil)).Elem()
}

func (i ProductMetadataArgs) ToProductMetadataOutput() ProductMetadataOutput {
	return i.ToProductMetadataOutputWithContext(context.Background())
}

func (i ProductMetadataArgs) ToProductMetadataOutputWithContext(ctx context.Context) ProductMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductMetadataOutput)
}

type ProductMetadataOutput struct{ *pulumi.OutputState }

func (ProductMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductMetadata)(nil)).Elem()
}

func (o ProductMetadataOutput) ToProductMetadataOutput() ProductMetadataOutput {
	return o
}

func (o ProductMetadataOutput) ToProductMetadataOutputWithContext(ctx context.Context) ProductMetadataOutput {
	return o
}

// ProductSpec defines the desired state of Product
type ProductSpec struct {
	// Application Plans Map: system_name -> Application Plan Spec
	ApplicationPlans map[string]ProductSpecApplicationPlans `pulumi:"applicationPlans"`
	// Backend usage will be a map of Map: system_name -> BackendUsageSpec Having system_name as the index, the structure ensures one backend is not used multiple times.
	BackendUsages map[string]ProductSpecBackendUsages `pulumi:"backendUsages"`
	// Deployment defined 3scale product deployment mode
	Deployment *ProductSpecDeployment `pulumi:"deployment"`
	// Description is a human readable text of the product
	Description *string `pulumi:"description"`
	// Mapping Rules Array: MappingRule Spec
	MappingRules []ProductSpecMappingRules `pulumi:"mappingRules"`
	// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Methods map[string]ProductSpecMethods `pulumi:"methods"`
	// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Metrics map[string]ProductSpecMetrics `pulumi:"metrics"`
	// Name is human readable name for the product
	Name string `pulumi:"name"`
	// ProviderAccountRef references account provider credentials
	ProviderAccountRef *ProductSpecProviderAccountRef `pulumi:"providerAccountRef"`
	// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
	SystemName *string `pulumi:"systemName"`
}

// ProductSpecInput is an input type that accepts ProductSpecArgs and ProductSpecOutput values.
// You can construct a concrete instance of `ProductSpecInput` via:
//
//          ProductSpecArgs{...}
type ProductSpecInput interface {
	pulumi.Input

	ToProductSpecOutput() ProductSpecOutput
	ToProductSpecOutputWithContext(context.Context) ProductSpecOutput
}

// ProductSpec defines the desired state of Product
type ProductSpecArgs struct {
	// Application Plans Map: system_name -> Application Plan Spec
	ApplicationPlans ProductSpecApplicationPlansMapInput `pulumi:"applicationPlans"`
	// Backend usage will be a map of Map: system_name -> BackendUsageSpec Having system_name as the index, the structure ensures one backend is not used multiple times.
	BackendUsages ProductSpecBackendUsagesMapInput `pulumi:"backendUsages"`
	// Deployment defined 3scale product deployment mode
	Deployment ProductSpecDeploymentPtrInput `pulumi:"deployment"`
	// Description is a human readable text of the product
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Mapping Rules Array: MappingRule Spec
	MappingRules ProductSpecMappingRulesArrayInput `pulumi:"mappingRules"`
	// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Methods ProductSpecMethodsMapInput `pulumi:"methods"`
	// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
	Metrics ProductSpecMetricsMapInput `pulumi:"metrics"`
	// Name is human readable name for the product
	Name pulumi.StringInput `pulumi:"name"`
	// ProviderAccountRef references account provider credentials
	ProviderAccountRef ProductSpecProviderAccountRefPtrInput `pulumi:"providerAccountRef"`
	// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
	SystemName pulumi.StringPtrInput `pulumi:"systemName"`
}

func (ProductSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpec)(nil)).Elem()
}

func (i ProductSpecArgs) ToProductSpecOutput() ProductSpecOutput {
	return i.ToProductSpecOutputWithContext(context.Background())
}

func (i ProductSpecArgs) ToProductSpecOutputWithContext(ctx context.Context) ProductSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecOutput)
}

func (i ProductSpecArgs) ToProductSpecPtrOutput() ProductSpecPtrOutput {
	return i.ToProductSpecPtrOutputWithContext(context.Background())
}

func (i ProductSpecArgs) ToProductSpecPtrOutputWithContext(ctx context.Context) ProductSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecOutput).ToProductSpecPtrOutputWithContext(ctx)
}

// ProductSpecPtrInput is an input type that accepts ProductSpecArgs, ProductSpecPtr and ProductSpecPtrOutput values.
// You can construct a concrete instance of `ProductSpecPtrInput` via:
//
//          ProductSpecArgs{...}
//
//  or:
//
//          nil
type ProductSpecPtrInput interface {
	pulumi.Input

	ToProductSpecPtrOutput() ProductSpecPtrOutput
	ToProductSpecPtrOutputWithContext(context.Context) ProductSpecPtrOutput
}

type productSpecPtrType ProductSpecArgs

func ProductSpecPtr(v *ProductSpecArgs) ProductSpecPtrInput {
	return (*productSpecPtrType)(v)
}

func (*productSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpec)(nil)).Elem()
}

func (i *productSpecPtrType) ToProductSpecPtrOutput() ProductSpecPtrOutput {
	return i.ToProductSpecPtrOutputWithContext(context.Background())
}

func (i *productSpecPtrType) ToProductSpecPtrOutputWithContext(ctx context.Context) ProductSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecPtrOutput)
}

// ProductSpec defines the desired state of Product
type ProductSpecOutput struct{ *pulumi.OutputState }

func (ProductSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpec)(nil)).Elem()
}

func (o ProductSpecOutput) ToProductSpecOutput() ProductSpecOutput {
	return o
}

func (o ProductSpecOutput) ToProductSpecOutputWithContext(ctx context.Context) ProductSpecOutput {
	return o
}

func (o ProductSpecOutput) ToProductSpecPtrOutput() ProductSpecPtrOutput {
	return o.ToProductSpecPtrOutputWithContext(context.Background())
}

func (o ProductSpecOutput) ToProductSpecPtrOutputWithContext(ctx context.Context) ProductSpecPtrOutput {
	return o.ApplyT(func(v ProductSpec) *ProductSpec {
		return &v
	}).(ProductSpecPtrOutput)
}

// Application Plans Map: system_name -> Application Plan Spec
func (o ProductSpecOutput) ApplicationPlans() ProductSpecApplicationPlansMapOutput {
	return o.ApplyT(func(v ProductSpec) map[string]ProductSpecApplicationPlans { return v.ApplicationPlans }).(ProductSpecApplicationPlansMapOutput)
}

// Backend usage will be a map of Map: system_name -> BackendUsageSpec Having system_name as the index, the structure ensures one backend is not used multiple times.
func (o ProductSpecOutput) BackendUsages() ProductSpecBackendUsagesMapOutput {
	return o.ApplyT(func(v ProductSpec) map[string]ProductSpecBackendUsages { return v.BackendUsages }).(ProductSpecBackendUsagesMapOutput)
}

// Deployment defined 3scale product deployment mode
func (o ProductSpecOutput) Deployment() ProductSpecDeploymentPtrOutput {
	return o.ApplyT(func(v ProductSpec) *ProductSpecDeployment { return v.Deployment }).(ProductSpecDeploymentPtrOutput)
}

// Description is a human readable text of the product
func (o ProductSpecOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpec) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Mapping Rules Array: MappingRule Spec
func (o ProductSpecOutput) MappingRules() ProductSpecMappingRulesArrayOutput {
	return o.ApplyT(func(v ProductSpec) []ProductSpecMappingRules { return v.MappingRules }).(ProductSpecMappingRulesArrayOutput)
}

// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o ProductSpecOutput) Methods() ProductSpecMethodsMapOutput {
	return o.ApplyT(func(v ProductSpec) map[string]ProductSpecMethods { return v.Methods }).(ProductSpecMethodsMapOutput)
}

// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o ProductSpecOutput) Metrics() ProductSpecMetricsMapOutput {
	return o.ApplyT(func(v ProductSpec) map[string]ProductSpecMetrics { return v.Metrics }).(ProductSpecMetricsMapOutput)
}

// Name is human readable name for the product
func (o ProductSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpec) string { return v.Name }).(pulumi.StringOutput)
}

// ProviderAccountRef references account provider credentials
func (o ProductSpecOutput) ProviderAccountRef() ProductSpecProviderAccountRefPtrOutput {
	return o.ApplyT(func(v ProductSpec) *ProductSpecProviderAccountRef { return v.ProviderAccountRef }).(ProductSpecProviderAccountRefPtrOutput)
}

// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
func (o ProductSpecOutput) SystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpec) *string { return v.SystemName }).(pulumi.StringPtrOutput)
}

type ProductSpecPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpec)(nil)).Elem()
}

func (o ProductSpecPtrOutput) ToProductSpecPtrOutput() ProductSpecPtrOutput {
	return o
}

func (o ProductSpecPtrOutput) ToProductSpecPtrOutputWithContext(ctx context.Context) ProductSpecPtrOutput {
	return o
}

func (o ProductSpecPtrOutput) Elem() ProductSpecOutput {
	return o.ApplyT(func(v *ProductSpec) ProductSpec { return *v }).(ProductSpecOutput)
}

// Application Plans Map: system_name -> Application Plan Spec
func (o ProductSpecPtrOutput) ApplicationPlans() ProductSpecApplicationPlansMapOutput {
	return o.ApplyT(func(v *ProductSpec) map[string]ProductSpecApplicationPlans {
		if v == nil {
			return nil
		}
		return v.ApplicationPlans
	}).(ProductSpecApplicationPlansMapOutput)
}

// Backend usage will be a map of Map: system_name -> BackendUsageSpec Having system_name as the index, the structure ensures one backend is not used multiple times.
func (o ProductSpecPtrOutput) BackendUsages() ProductSpecBackendUsagesMapOutput {
	return o.ApplyT(func(v *ProductSpec) map[string]ProductSpecBackendUsages {
		if v == nil {
			return nil
		}
		return v.BackendUsages
	}).(ProductSpecBackendUsagesMapOutput)
}

// Deployment defined 3scale product deployment mode
func (o ProductSpecPtrOutput) Deployment() ProductSpecDeploymentPtrOutput {
	return o.ApplyT(func(v *ProductSpec) *ProductSpecDeployment {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(ProductSpecDeploymentPtrOutput)
}

// Description is a human readable text of the product
func (o ProductSpecPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpec) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Mapping Rules Array: MappingRule Spec
func (o ProductSpecPtrOutput) MappingRules() ProductSpecMappingRulesArrayOutput {
	return o.ApplyT(func(v *ProductSpec) []ProductSpecMappingRules {
		if v == nil {
			return nil
		}
		return v.MappingRules
	}).(ProductSpecMappingRulesArrayOutput)
}

// Methods Map: system_name -> MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o ProductSpecPtrOutput) Methods() ProductSpecMethodsMapOutput {
	return o.ApplyT(func(v *ProductSpec) map[string]ProductSpecMethods {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(ProductSpecMethodsMapOutput)
}

// Metrics Map: system_name -> MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.
func (o ProductSpecPtrOutput) Metrics() ProductSpecMetricsMapOutput {
	return o.ApplyT(func(v *ProductSpec) map[string]ProductSpecMetrics {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(ProductSpecMetricsMapOutput)
}

// Name is human readable name for the product
func (o ProductSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// ProviderAccountRef references account provider credentials
func (o ProductSpecPtrOutput) ProviderAccountRef() ProductSpecProviderAccountRefPtrOutput {
	return o.ApplyT(func(v *ProductSpec) *ProductSpecProviderAccountRef {
		if v == nil {
			return nil
		}
		return v.ProviderAccountRef
	}).(ProductSpecProviderAccountRefPtrOutput)
}

// SystemName identifies uniquely the product within the account provider Default value will be sanitized Name
func (o ProductSpecPtrOutput) SystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpec) *string {
		if v == nil {
			return nil
		}
		return v.SystemName
	}).(pulumi.StringPtrOutput)
}

// ApplicationPlanSpec defines the desired state of Product's Application Plan
type ProductSpecApplicationPlans struct {
	// Set whether or not applications can be created on demand or if approval is required from you before they are activated.
	AppsRequireApproval *bool `pulumi:"appsRequireApproval"`
	// Cost per Month (USD)
	CostMonth *string `pulumi:"costMonth"`
	// Limits
	Limits []ProductSpecApplicationPlansLimits `pulumi:"limits"`
	Name   *string                             `pulumi:"name"`
	// Pricing Rules
	PricingRules []ProductSpecApplicationPlansPricingRules `pulumi:"pricingRules"`
	// Setup fee (USD)
	SetupFee *string `pulumi:"setupFee"`
	// Trial Period (days)
	TrialPeriod *int `pulumi:"trialPeriod"`
}

// ProductSpecApplicationPlansInput is an input type that accepts ProductSpecApplicationPlansArgs and ProductSpecApplicationPlansOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansInput` via:
//
//          ProductSpecApplicationPlansArgs{...}
type ProductSpecApplicationPlansInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansOutput() ProductSpecApplicationPlansOutput
	ToProductSpecApplicationPlansOutputWithContext(context.Context) ProductSpecApplicationPlansOutput
}

// ApplicationPlanSpec defines the desired state of Product's Application Plan
type ProductSpecApplicationPlansArgs struct {
	// Set whether or not applications can be created on demand or if approval is required from you before they are activated.
	AppsRequireApproval pulumi.BoolPtrInput `pulumi:"appsRequireApproval"`
	// Cost per Month (USD)
	CostMonth pulumi.StringPtrInput `pulumi:"costMonth"`
	// Limits
	Limits ProductSpecApplicationPlansLimitsArrayInput `pulumi:"limits"`
	Name   pulumi.StringPtrInput                       `pulumi:"name"`
	// Pricing Rules
	PricingRules ProductSpecApplicationPlansPricingRulesArrayInput `pulumi:"pricingRules"`
	// Setup fee (USD)
	SetupFee pulumi.StringPtrInput `pulumi:"setupFee"`
	// Trial Period (days)
	TrialPeriod pulumi.IntPtrInput `pulumi:"trialPeriod"`
}

func (ProductSpecApplicationPlansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlans)(nil)).Elem()
}

func (i ProductSpecApplicationPlansArgs) ToProductSpecApplicationPlansOutput() ProductSpecApplicationPlansOutput {
	return i.ToProductSpecApplicationPlansOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansArgs) ToProductSpecApplicationPlansOutputWithContext(ctx context.Context) ProductSpecApplicationPlansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansOutput)
}

// ProductSpecApplicationPlansMapInput is an input type that accepts ProductSpecApplicationPlansMap and ProductSpecApplicationPlansMapOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansMapInput` via:
//
//          ProductSpecApplicationPlansMap{ "key": ProductSpecApplicationPlansArgs{...} }
type ProductSpecApplicationPlansMapInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansMapOutput() ProductSpecApplicationPlansMapOutput
	ToProductSpecApplicationPlansMapOutputWithContext(context.Context) ProductSpecApplicationPlansMapOutput
}

type ProductSpecApplicationPlansMap map[string]ProductSpecApplicationPlansInput

func (ProductSpecApplicationPlansMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecApplicationPlans)(nil)).Elem()
}

func (i ProductSpecApplicationPlansMap) ToProductSpecApplicationPlansMapOutput() ProductSpecApplicationPlansMapOutput {
	return i.ToProductSpecApplicationPlansMapOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansMap) ToProductSpecApplicationPlansMapOutputWithContext(ctx context.Context) ProductSpecApplicationPlansMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansMapOutput)
}

// ApplicationPlanSpec defines the desired state of Product's Application Plan
type ProductSpecApplicationPlansOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlans)(nil)).Elem()
}

func (o ProductSpecApplicationPlansOutput) ToProductSpecApplicationPlansOutput() ProductSpecApplicationPlansOutput {
	return o
}

func (o ProductSpecApplicationPlansOutput) ToProductSpecApplicationPlansOutputWithContext(ctx context.Context) ProductSpecApplicationPlansOutput {
	return o
}

// Set whether or not applications can be created on demand or if approval is required from you before they are activated.
func (o ProductSpecApplicationPlansOutput) AppsRequireApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) *bool { return v.AppsRequireApproval }).(pulumi.BoolPtrOutput)
}

// Cost per Month (USD)
func (o ProductSpecApplicationPlansOutput) CostMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) *string { return v.CostMonth }).(pulumi.StringPtrOutput)
}

// Limits
func (o ProductSpecApplicationPlansOutput) Limits() ProductSpecApplicationPlansLimitsArrayOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) []ProductSpecApplicationPlansLimits { return v.Limits }).(ProductSpecApplicationPlansLimitsArrayOutput)
}

func (o ProductSpecApplicationPlansOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pricing Rules
func (o ProductSpecApplicationPlansOutput) PricingRules() ProductSpecApplicationPlansPricingRulesArrayOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) []ProductSpecApplicationPlansPricingRules { return v.PricingRules }).(ProductSpecApplicationPlansPricingRulesArrayOutput)
}

// Setup fee (USD)
func (o ProductSpecApplicationPlansOutput) SetupFee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) *string { return v.SetupFee }).(pulumi.StringPtrOutput)
}

// Trial Period (days)
func (o ProductSpecApplicationPlansOutput) TrialPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlans) *int { return v.TrialPeriod }).(pulumi.IntPtrOutput)
}

type ProductSpecApplicationPlansMapOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecApplicationPlans)(nil)).Elem()
}

func (o ProductSpecApplicationPlansMapOutput) ToProductSpecApplicationPlansMapOutput() ProductSpecApplicationPlansMapOutput {
	return o
}

func (o ProductSpecApplicationPlansMapOutput) ToProductSpecApplicationPlansMapOutputWithContext(ctx context.Context) ProductSpecApplicationPlansMapOutput {
	return o
}

func (o ProductSpecApplicationPlansMapOutput) MapIndex(k pulumi.StringInput) ProductSpecApplicationPlansOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ProductSpecApplicationPlans {
		return vs[0].(map[string]ProductSpecApplicationPlans)[vs[1].(string)]
	}).(ProductSpecApplicationPlansOutput)
}

// LimitSpec defines the maximum value a metric can take on a contract before the user is no longer authorized to use resources. Once a limit has been passed in a given period, reject messages will be issued if the service is accessed under this contract.
type ProductSpecApplicationPlansLimits struct {
	// Metric or Method Reference
	MetricMethodRef ProductSpecApplicationPlansLimitsMetricMethodRef `pulumi:"metricMethodRef"`
	// Limit Period
	Period string `pulumi:"period"`
	// Limit Value
	Value int `pulumi:"value"`
}

// ProductSpecApplicationPlansLimitsInput is an input type that accepts ProductSpecApplicationPlansLimitsArgs and ProductSpecApplicationPlansLimitsOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansLimitsInput` via:
//
//          ProductSpecApplicationPlansLimitsArgs{...}
type ProductSpecApplicationPlansLimitsInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansLimitsOutput() ProductSpecApplicationPlansLimitsOutput
	ToProductSpecApplicationPlansLimitsOutputWithContext(context.Context) ProductSpecApplicationPlansLimitsOutput
}

// LimitSpec defines the maximum value a metric can take on a contract before the user is no longer authorized to use resources. Once a limit has been passed in a given period, reject messages will be issued if the service is accessed under this contract.
type ProductSpecApplicationPlansLimitsArgs struct {
	// Metric or Method Reference
	MetricMethodRef ProductSpecApplicationPlansLimitsMetricMethodRefInput `pulumi:"metricMethodRef"`
	// Limit Period
	Period pulumi.StringInput `pulumi:"period"`
	// Limit Value
	Value pulumi.IntInput `pulumi:"value"`
}

func (ProductSpecApplicationPlansLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansLimits)(nil)).Elem()
}

func (i ProductSpecApplicationPlansLimitsArgs) ToProductSpecApplicationPlansLimitsOutput() ProductSpecApplicationPlansLimitsOutput {
	return i.ToProductSpecApplicationPlansLimitsOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansLimitsArgs) ToProductSpecApplicationPlansLimitsOutputWithContext(ctx context.Context) ProductSpecApplicationPlansLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansLimitsOutput)
}

// ProductSpecApplicationPlansLimitsArrayInput is an input type that accepts ProductSpecApplicationPlansLimitsArray and ProductSpecApplicationPlansLimitsArrayOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansLimitsArrayInput` via:
//
//          ProductSpecApplicationPlansLimitsArray{ ProductSpecApplicationPlansLimitsArgs{...} }
type ProductSpecApplicationPlansLimitsArrayInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansLimitsArrayOutput() ProductSpecApplicationPlansLimitsArrayOutput
	ToProductSpecApplicationPlansLimitsArrayOutputWithContext(context.Context) ProductSpecApplicationPlansLimitsArrayOutput
}

type ProductSpecApplicationPlansLimitsArray []ProductSpecApplicationPlansLimitsInput

func (ProductSpecApplicationPlansLimitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductSpecApplicationPlansLimits)(nil)).Elem()
}

func (i ProductSpecApplicationPlansLimitsArray) ToProductSpecApplicationPlansLimitsArrayOutput() ProductSpecApplicationPlansLimitsArrayOutput {
	return i.ToProductSpecApplicationPlansLimitsArrayOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansLimitsArray) ToProductSpecApplicationPlansLimitsArrayOutputWithContext(ctx context.Context) ProductSpecApplicationPlansLimitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansLimitsArrayOutput)
}

// LimitSpec defines the maximum value a metric can take on a contract before the user is no longer authorized to use resources. Once a limit has been passed in a given period, reject messages will be issued if the service is accessed under this contract.
type ProductSpecApplicationPlansLimitsOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansLimits)(nil)).Elem()
}

func (o ProductSpecApplicationPlansLimitsOutput) ToProductSpecApplicationPlansLimitsOutput() ProductSpecApplicationPlansLimitsOutput {
	return o
}

func (o ProductSpecApplicationPlansLimitsOutput) ToProductSpecApplicationPlansLimitsOutputWithContext(ctx context.Context) ProductSpecApplicationPlansLimitsOutput {
	return o
}

// Metric or Method Reference
func (o ProductSpecApplicationPlansLimitsOutput) MetricMethodRef() ProductSpecApplicationPlansLimitsMetricMethodRefOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansLimits) ProductSpecApplicationPlansLimitsMetricMethodRef {
		return v.MetricMethodRef
	}).(ProductSpecApplicationPlansLimitsMetricMethodRefOutput)
}

// Limit Period
func (o ProductSpecApplicationPlansLimitsOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansLimits) string { return v.Period }).(pulumi.StringOutput)
}

// Limit Value
func (o ProductSpecApplicationPlansLimitsOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansLimits) int { return v.Value }).(pulumi.IntOutput)
}

type ProductSpecApplicationPlansLimitsArrayOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansLimitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductSpecApplicationPlansLimits)(nil)).Elem()
}

func (o ProductSpecApplicationPlansLimitsArrayOutput) ToProductSpecApplicationPlansLimitsArrayOutput() ProductSpecApplicationPlansLimitsArrayOutput {
	return o
}

func (o ProductSpecApplicationPlansLimitsArrayOutput) ToProductSpecApplicationPlansLimitsArrayOutputWithContext(ctx context.Context) ProductSpecApplicationPlansLimitsArrayOutput {
	return o
}

func (o ProductSpecApplicationPlansLimitsArrayOutput) Index(i pulumi.IntInput) ProductSpecApplicationPlansLimitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductSpecApplicationPlansLimits {
		return vs[0].([]ProductSpecApplicationPlansLimits)[vs[1].(int)]
	}).(ProductSpecApplicationPlansLimitsOutput)
}

// Metric or Method Reference
type ProductSpecApplicationPlansLimitsMetricMethodRef struct {
	// BackendSystemName identifies uniquely the backend Backend reference must be used by the product
	Backend *string `pulumi:"backend"`
	// SystemName identifies uniquely the metric or methods
	SystemName string `pulumi:"systemName"`
}

// ProductSpecApplicationPlansLimitsMetricMethodRefInput is an input type that accepts ProductSpecApplicationPlansLimitsMetricMethodRefArgs and ProductSpecApplicationPlansLimitsMetricMethodRefOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansLimitsMetricMethodRefInput` via:
//
//          ProductSpecApplicationPlansLimitsMetricMethodRefArgs{...}
type ProductSpecApplicationPlansLimitsMetricMethodRefInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansLimitsMetricMethodRefOutput() ProductSpecApplicationPlansLimitsMetricMethodRefOutput
	ToProductSpecApplicationPlansLimitsMetricMethodRefOutputWithContext(context.Context) ProductSpecApplicationPlansLimitsMetricMethodRefOutput
}

// Metric or Method Reference
type ProductSpecApplicationPlansLimitsMetricMethodRefArgs struct {
	// BackendSystemName identifies uniquely the backend Backend reference must be used by the product
	Backend pulumi.StringPtrInput `pulumi:"backend"`
	// SystemName identifies uniquely the metric or methods
	SystemName pulumi.StringInput `pulumi:"systemName"`
}

func (ProductSpecApplicationPlansLimitsMetricMethodRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansLimitsMetricMethodRef)(nil)).Elem()
}

func (i ProductSpecApplicationPlansLimitsMetricMethodRefArgs) ToProductSpecApplicationPlansLimitsMetricMethodRefOutput() ProductSpecApplicationPlansLimitsMetricMethodRefOutput {
	return i.ToProductSpecApplicationPlansLimitsMetricMethodRefOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansLimitsMetricMethodRefArgs) ToProductSpecApplicationPlansLimitsMetricMethodRefOutputWithContext(ctx context.Context) ProductSpecApplicationPlansLimitsMetricMethodRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansLimitsMetricMethodRefOutput)
}

// Metric or Method Reference
type ProductSpecApplicationPlansLimitsMetricMethodRefOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansLimitsMetricMethodRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansLimitsMetricMethodRef)(nil)).Elem()
}

func (o ProductSpecApplicationPlansLimitsMetricMethodRefOutput) ToProductSpecApplicationPlansLimitsMetricMethodRefOutput() ProductSpecApplicationPlansLimitsMetricMethodRefOutput {
	return o
}

func (o ProductSpecApplicationPlansLimitsMetricMethodRefOutput) ToProductSpecApplicationPlansLimitsMetricMethodRefOutputWithContext(ctx context.Context) ProductSpecApplicationPlansLimitsMetricMethodRefOutput {
	return o
}

// BackendSystemName identifies uniquely the backend Backend reference must be used by the product
func (o ProductSpecApplicationPlansLimitsMetricMethodRefOutput) Backend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansLimitsMetricMethodRef) *string { return v.Backend }).(pulumi.StringPtrOutput)
}

// SystemName identifies uniquely the metric or methods
func (o ProductSpecApplicationPlansLimitsMetricMethodRefOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansLimitsMetricMethodRef) string { return v.SystemName }).(pulumi.StringOutput)
}

// PricingRuleSpec defines the cost of each operation performed on an API. Multiple pricing rules on the same metric divide up the ranges of when a pricing rule applies.
type ProductSpecApplicationPlansPricingRules struct {
	// Range From
	From int `pulumi:"from"`
	// Metric or Method Reference
	MetricMethodRef ProductSpecApplicationPlansPricingRulesMetricMethodRef `pulumi:"metricMethodRef"`
	// Price per unit (USD)
	PricePerUnit string `pulumi:"pricePerUnit"`
	// Range To
	To int `pulumi:"to"`
}

// ProductSpecApplicationPlansPricingRulesInput is an input type that accepts ProductSpecApplicationPlansPricingRulesArgs and ProductSpecApplicationPlansPricingRulesOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansPricingRulesInput` via:
//
//          ProductSpecApplicationPlansPricingRulesArgs{...}
type ProductSpecApplicationPlansPricingRulesInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansPricingRulesOutput() ProductSpecApplicationPlansPricingRulesOutput
	ToProductSpecApplicationPlansPricingRulesOutputWithContext(context.Context) ProductSpecApplicationPlansPricingRulesOutput
}

// PricingRuleSpec defines the cost of each operation performed on an API. Multiple pricing rules on the same metric divide up the ranges of when a pricing rule applies.
type ProductSpecApplicationPlansPricingRulesArgs struct {
	// Range From
	From pulumi.IntInput `pulumi:"from"`
	// Metric or Method Reference
	MetricMethodRef ProductSpecApplicationPlansPricingRulesMetricMethodRefInput `pulumi:"metricMethodRef"`
	// Price per unit (USD)
	PricePerUnit pulumi.StringInput `pulumi:"pricePerUnit"`
	// Range To
	To pulumi.IntInput `pulumi:"to"`
}

func (ProductSpecApplicationPlansPricingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansPricingRules)(nil)).Elem()
}

func (i ProductSpecApplicationPlansPricingRulesArgs) ToProductSpecApplicationPlansPricingRulesOutput() ProductSpecApplicationPlansPricingRulesOutput {
	return i.ToProductSpecApplicationPlansPricingRulesOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansPricingRulesArgs) ToProductSpecApplicationPlansPricingRulesOutputWithContext(ctx context.Context) ProductSpecApplicationPlansPricingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansPricingRulesOutput)
}

// ProductSpecApplicationPlansPricingRulesArrayInput is an input type that accepts ProductSpecApplicationPlansPricingRulesArray and ProductSpecApplicationPlansPricingRulesArrayOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansPricingRulesArrayInput` via:
//
//          ProductSpecApplicationPlansPricingRulesArray{ ProductSpecApplicationPlansPricingRulesArgs{...} }
type ProductSpecApplicationPlansPricingRulesArrayInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansPricingRulesArrayOutput() ProductSpecApplicationPlansPricingRulesArrayOutput
	ToProductSpecApplicationPlansPricingRulesArrayOutputWithContext(context.Context) ProductSpecApplicationPlansPricingRulesArrayOutput
}

type ProductSpecApplicationPlansPricingRulesArray []ProductSpecApplicationPlansPricingRulesInput

func (ProductSpecApplicationPlansPricingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductSpecApplicationPlansPricingRules)(nil)).Elem()
}

func (i ProductSpecApplicationPlansPricingRulesArray) ToProductSpecApplicationPlansPricingRulesArrayOutput() ProductSpecApplicationPlansPricingRulesArrayOutput {
	return i.ToProductSpecApplicationPlansPricingRulesArrayOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansPricingRulesArray) ToProductSpecApplicationPlansPricingRulesArrayOutputWithContext(ctx context.Context) ProductSpecApplicationPlansPricingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansPricingRulesArrayOutput)
}

// PricingRuleSpec defines the cost of each operation performed on an API. Multiple pricing rules on the same metric divide up the ranges of when a pricing rule applies.
type ProductSpecApplicationPlansPricingRulesOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansPricingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansPricingRules)(nil)).Elem()
}

func (o ProductSpecApplicationPlansPricingRulesOutput) ToProductSpecApplicationPlansPricingRulesOutput() ProductSpecApplicationPlansPricingRulesOutput {
	return o
}

func (o ProductSpecApplicationPlansPricingRulesOutput) ToProductSpecApplicationPlansPricingRulesOutputWithContext(ctx context.Context) ProductSpecApplicationPlansPricingRulesOutput {
	return o
}

// Range From
func (o ProductSpecApplicationPlansPricingRulesOutput) From() pulumi.IntOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansPricingRules) int { return v.From }).(pulumi.IntOutput)
}

// Metric or Method Reference
func (o ProductSpecApplicationPlansPricingRulesOutput) MetricMethodRef() ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansPricingRules) ProductSpecApplicationPlansPricingRulesMetricMethodRef {
		return v.MetricMethodRef
	}).(ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput)
}

// Price per unit (USD)
func (o ProductSpecApplicationPlansPricingRulesOutput) PricePerUnit() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansPricingRules) string { return v.PricePerUnit }).(pulumi.StringOutput)
}

// Range To
func (o ProductSpecApplicationPlansPricingRulesOutput) To() pulumi.IntOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansPricingRules) int { return v.To }).(pulumi.IntOutput)
}

type ProductSpecApplicationPlansPricingRulesArrayOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansPricingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductSpecApplicationPlansPricingRules)(nil)).Elem()
}

func (o ProductSpecApplicationPlansPricingRulesArrayOutput) ToProductSpecApplicationPlansPricingRulesArrayOutput() ProductSpecApplicationPlansPricingRulesArrayOutput {
	return o
}

func (o ProductSpecApplicationPlansPricingRulesArrayOutput) ToProductSpecApplicationPlansPricingRulesArrayOutputWithContext(ctx context.Context) ProductSpecApplicationPlansPricingRulesArrayOutput {
	return o
}

func (o ProductSpecApplicationPlansPricingRulesArrayOutput) Index(i pulumi.IntInput) ProductSpecApplicationPlansPricingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductSpecApplicationPlansPricingRules {
		return vs[0].([]ProductSpecApplicationPlansPricingRules)[vs[1].(int)]
	}).(ProductSpecApplicationPlansPricingRulesOutput)
}

// Metric or Method Reference
type ProductSpecApplicationPlansPricingRulesMetricMethodRef struct {
	// BackendSystemName identifies uniquely the backend Backend reference must be used by the product
	Backend *string `pulumi:"backend"`
	// SystemName identifies uniquely the metric or methods
	SystemName string `pulumi:"systemName"`
}

// ProductSpecApplicationPlansPricingRulesMetricMethodRefInput is an input type that accepts ProductSpecApplicationPlansPricingRulesMetricMethodRefArgs and ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput values.
// You can construct a concrete instance of `ProductSpecApplicationPlansPricingRulesMetricMethodRefInput` via:
//
//          ProductSpecApplicationPlansPricingRulesMetricMethodRefArgs{...}
type ProductSpecApplicationPlansPricingRulesMetricMethodRefInput interface {
	pulumi.Input

	ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutput() ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput
	ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutputWithContext(context.Context) ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput
}

// Metric or Method Reference
type ProductSpecApplicationPlansPricingRulesMetricMethodRefArgs struct {
	// BackendSystemName identifies uniquely the backend Backend reference must be used by the product
	Backend pulumi.StringPtrInput `pulumi:"backend"`
	// SystemName identifies uniquely the metric or methods
	SystemName pulumi.StringInput `pulumi:"systemName"`
}

func (ProductSpecApplicationPlansPricingRulesMetricMethodRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansPricingRulesMetricMethodRef)(nil)).Elem()
}

func (i ProductSpecApplicationPlansPricingRulesMetricMethodRefArgs) ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutput() ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput {
	return i.ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutputWithContext(context.Background())
}

func (i ProductSpecApplicationPlansPricingRulesMetricMethodRefArgs) ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutputWithContext(ctx context.Context) ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput)
}

// Metric or Method Reference
type ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput struct{ *pulumi.OutputState }

func (ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecApplicationPlansPricingRulesMetricMethodRef)(nil)).Elem()
}

func (o ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput) ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutput() ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput {
	return o
}

func (o ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput) ToProductSpecApplicationPlansPricingRulesMetricMethodRefOutputWithContext(ctx context.Context) ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput {
	return o
}

// BackendSystemName identifies uniquely the backend Backend reference must be used by the product
func (o ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput) Backend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansPricingRulesMetricMethodRef) *string { return v.Backend }).(pulumi.StringPtrOutput)
}

// SystemName identifies uniquely the metric or methods
func (o ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecApplicationPlansPricingRulesMetricMethodRef) string { return v.SystemName }).(pulumi.StringOutput)
}

// BackendUsageSpec defines the desired state of Product's Backend Usages
type ProductSpecBackendUsages struct {
	Path string `pulumi:"path"`
}

// ProductSpecBackendUsagesInput is an input type that accepts ProductSpecBackendUsagesArgs and ProductSpecBackendUsagesOutput values.
// You can construct a concrete instance of `ProductSpecBackendUsagesInput` via:
//
//          ProductSpecBackendUsagesArgs{...}
type ProductSpecBackendUsagesInput interface {
	pulumi.Input

	ToProductSpecBackendUsagesOutput() ProductSpecBackendUsagesOutput
	ToProductSpecBackendUsagesOutputWithContext(context.Context) ProductSpecBackendUsagesOutput
}

// BackendUsageSpec defines the desired state of Product's Backend Usages
type ProductSpecBackendUsagesArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
}

func (ProductSpecBackendUsagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecBackendUsages)(nil)).Elem()
}

func (i ProductSpecBackendUsagesArgs) ToProductSpecBackendUsagesOutput() ProductSpecBackendUsagesOutput {
	return i.ToProductSpecBackendUsagesOutputWithContext(context.Background())
}

func (i ProductSpecBackendUsagesArgs) ToProductSpecBackendUsagesOutputWithContext(ctx context.Context) ProductSpecBackendUsagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecBackendUsagesOutput)
}

// ProductSpecBackendUsagesMapInput is an input type that accepts ProductSpecBackendUsagesMap and ProductSpecBackendUsagesMapOutput values.
// You can construct a concrete instance of `ProductSpecBackendUsagesMapInput` via:
//
//          ProductSpecBackendUsagesMap{ "key": ProductSpecBackendUsagesArgs{...} }
type ProductSpecBackendUsagesMapInput interface {
	pulumi.Input

	ToProductSpecBackendUsagesMapOutput() ProductSpecBackendUsagesMapOutput
	ToProductSpecBackendUsagesMapOutputWithContext(context.Context) ProductSpecBackendUsagesMapOutput
}

type ProductSpecBackendUsagesMap map[string]ProductSpecBackendUsagesInput

func (ProductSpecBackendUsagesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecBackendUsages)(nil)).Elem()
}

func (i ProductSpecBackendUsagesMap) ToProductSpecBackendUsagesMapOutput() ProductSpecBackendUsagesMapOutput {
	return i.ToProductSpecBackendUsagesMapOutputWithContext(context.Background())
}

func (i ProductSpecBackendUsagesMap) ToProductSpecBackendUsagesMapOutputWithContext(ctx context.Context) ProductSpecBackendUsagesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecBackendUsagesMapOutput)
}

// BackendUsageSpec defines the desired state of Product's Backend Usages
type ProductSpecBackendUsagesOutput struct{ *pulumi.OutputState }

func (ProductSpecBackendUsagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecBackendUsages)(nil)).Elem()
}

func (o ProductSpecBackendUsagesOutput) ToProductSpecBackendUsagesOutput() ProductSpecBackendUsagesOutput {
	return o
}

func (o ProductSpecBackendUsagesOutput) ToProductSpecBackendUsagesOutputWithContext(ctx context.Context) ProductSpecBackendUsagesOutput {
	return o
}

func (o ProductSpecBackendUsagesOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecBackendUsages) string { return v.Path }).(pulumi.StringOutput)
}

type ProductSpecBackendUsagesMapOutput struct{ *pulumi.OutputState }

func (ProductSpecBackendUsagesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecBackendUsages)(nil)).Elem()
}

func (o ProductSpecBackendUsagesMapOutput) ToProductSpecBackendUsagesMapOutput() ProductSpecBackendUsagesMapOutput {
	return o
}

func (o ProductSpecBackendUsagesMapOutput) ToProductSpecBackendUsagesMapOutputWithContext(ctx context.Context) ProductSpecBackendUsagesMapOutput {
	return o
}

func (o ProductSpecBackendUsagesMapOutput) MapIndex(k pulumi.StringInput) ProductSpecBackendUsagesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ProductSpecBackendUsages {
		return vs[0].(map[string]ProductSpecBackendUsages)[vs[1].(string)]
	}).(ProductSpecBackendUsagesOutput)
}

// Deployment defined 3scale product deployment mode
type ProductSpecDeployment struct {
	// ApicastHostedSpec defines the desired state of Product Apicast Hosted
	ApicastHosted *ProductSpecDeploymentApicastHosted `pulumi:"apicastHosted"`
	// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
	ApicastSelfManaged *ProductSpecDeploymentApicastSelfManaged `pulumi:"apicastSelfManaged"`
}

// ProductSpecDeploymentInput is an input type that accepts ProductSpecDeploymentArgs and ProductSpecDeploymentOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentInput` via:
//
//          ProductSpecDeploymentArgs{...}
type ProductSpecDeploymentInput interface {
	pulumi.Input

	ToProductSpecDeploymentOutput() ProductSpecDeploymentOutput
	ToProductSpecDeploymentOutputWithContext(context.Context) ProductSpecDeploymentOutput
}

// Deployment defined 3scale product deployment mode
type ProductSpecDeploymentArgs struct {
	// ApicastHostedSpec defines the desired state of Product Apicast Hosted
	ApicastHosted ProductSpecDeploymentApicastHostedPtrInput `pulumi:"apicastHosted"`
	// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
	ApicastSelfManaged ProductSpecDeploymentApicastSelfManagedPtrInput `pulumi:"apicastSelfManaged"`
}

func (ProductSpecDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeployment)(nil)).Elem()
}

func (i ProductSpecDeploymentArgs) ToProductSpecDeploymentOutput() ProductSpecDeploymentOutput {
	return i.ToProductSpecDeploymentOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentArgs) ToProductSpecDeploymentOutputWithContext(ctx context.Context) ProductSpecDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentOutput)
}

func (i ProductSpecDeploymentArgs) ToProductSpecDeploymentPtrOutput() ProductSpecDeploymentPtrOutput {
	return i.ToProductSpecDeploymentPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentArgs) ToProductSpecDeploymentPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentOutput).ToProductSpecDeploymentPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentPtrInput is an input type that accepts ProductSpecDeploymentArgs, ProductSpecDeploymentPtr and ProductSpecDeploymentPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentPtrInput` via:
//
//          ProductSpecDeploymentArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentPtrOutput() ProductSpecDeploymentPtrOutput
	ToProductSpecDeploymentPtrOutputWithContext(context.Context) ProductSpecDeploymentPtrOutput
}

type productSpecDeploymentPtrType ProductSpecDeploymentArgs

func ProductSpecDeploymentPtr(v *ProductSpecDeploymentArgs) ProductSpecDeploymentPtrInput {
	return (*productSpecDeploymentPtrType)(v)
}

func (*productSpecDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeployment)(nil)).Elem()
}

func (i *productSpecDeploymentPtrType) ToProductSpecDeploymentPtrOutput() ProductSpecDeploymentPtrOutput {
	return i.ToProductSpecDeploymentPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentPtrType) ToProductSpecDeploymentPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentPtrOutput)
}

// Deployment defined 3scale product deployment mode
type ProductSpecDeploymentOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeployment)(nil)).Elem()
}

func (o ProductSpecDeploymentOutput) ToProductSpecDeploymentOutput() ProductSpecDeploymentOutput {
	return o
}

func (o ProductSpecDeploymentOutput) ToProductSpecDeploymentOutputWithContext(ctx context.Context) ProductSpecDeploymentOutput {
	return o
}

func (o ProductSpecDeploymentOutput) ToProductSpecDeploymentPtrOutput() ProductSpecDeploymentPtrOutput {
	return o.ToProductSpecDeploymentPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentOutput) ToProductSpecDeploymentPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentPtrOutput {
	return o.ApplyT(func(v ProductSpecDeployment) *ProductSpecDeployment {
		return &v
	}).(ProductSpecDeploymentPtrOutput)
}

// ApicastHostedSpec defines the desired state of Product Apicast Hosted
func (o ProductSpecDeploymentOutput) ApicastHosted() ProductSpecDeploymentApicastHostedPtrOutput {
	return o.ApplyT(func(v ProductSpecDeployment) *ProductSpecDeploymentApicastHosted { return v.ApicastHosted }).(ProductSpecDeploymentApicastHostedPtrOutput)
}

// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
func (o ProductSpecDeploymentOutput) ApicastSelfManaged() ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return o.ApplyT(func(v ProductSpecDeployment) *ProductSpecDeploymentApicastSelfManaged { return v.ApicastSelfManaged }).(ProductSpecDeploymentApicastSelfManagedPtrOutput)
}

type ProductSpecDeploymentPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeployment)(nil)).Elem()
}

func (o ProductSpecDeploymentPtrOutput) ToProductSpecDeploymentPtrOutput() ProductSpecDeploymentPtrOutput {
	return o
}

func (o ProductSpecDeploymentPtrOutput) ToProductSpecDeploymentPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentPtrOutput {
	return o
}

func (o ProductSpecDeploymentPtrOutput) Elem() ProductSpecDeploymentOutput {
	return o.ApplyT(func(v *ProductSpecDeployment) ProductSpecDeployment { return *v }).(ProductSpecDeploymentOutput)
}

// ApicastHostedSpec defines the desired state of Product Apicast Hosted
func (o ProductSpecDeploymentPtrOutput) ApicastHosted() ProductSpecDeploymentApicastHostedPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeployment) *ProductSpecDeploymentApicastHosted {
		if v == nil {
			return nil
		}
		return v.ApicastHosted
	}).(ProductSpecDeploymentApicastHostedPtrOutput)
}

// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
func (o ProductSpecDeploymentPtrOutput) ApicastSelfManaged() ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeployment) *ProductSpecDeploymentApicastSelfManaged {
		if v == nil {
			return nil
		}
		return v.ApicastSelfManaged
	}).(ProductSpecDeploymentApicastSelfManagedPtrOutput)
}

// ApicastHostedSpec defines the desired state of Product Apicast Hosted
type ProductSpecDeploymentApicastHosted struct {
	// AuthenticationSpec defines the desired state of Product Authentication
	Authentication *ProductSpecDeploymentApicastHostedAuthentication `pulumi:"authentication"`
}

// ProductSpecDeploymentApicastHostedInput is an input type that accepts ProductSpecDeploymentApicastHostedArgs and ProductSpecDeploymentApicastHostedOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedInput` via:
//
//          ProductSpecDeploymentApicastHostedArgs{...}
type ProductSpecDeploymentApicastHostedInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedOutput() ProductSpecDeploymentApicastHostedOutput
	ToProductSpecDeploymentApicastHostedOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedOutput
}

// ApicastHostedSpec defines the desired state of Product Apicast Hosted
type ProductSpecDeploymentApicastHostedArgs struct {
	// AuthenticationSpec defines the desired state of Product Authentication
	Authentication ProductSpecDeploymentApicastHostedAuthenticationPtrInput `pulumi:"authentication"`
}

func (ProductSpecDeploymentApicastHostedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHosted)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastHostedArgs) ToProductSpecDeploymentApicastHostedOutput() ProductSpecDeploymentApicastHostedOutput {
	return i.ToProductSpecDeploymentApicastHostedOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedArgs) ToProductSpecDeploymentApicastHostedOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedOutput)
}

func (i ProductSpecDeploymentApicastHostedArgs) ToProductSpecDeploymentApicastHostedPtrOutput() ProductSpecDeploymentApicastHostedPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedArgs) ToProductSpecDeploymentApicastHostedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedOutput).ToProductSpecDeploymentApicastHostedPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastHostedPtrInput is an input type that accepts ProductSpecDeploymentApicastHostedArgs, ProductSpecDeploymentApicastHostedPtr and ProductSpecDeploymentApicastHostedPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedPtrInput` via:
//
//          ProductSpecDeploymentApicastHostedArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastHostedPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedPtrOutput() ProductSpecDeploymentApicastHostedPtrOutput
	ToProductSpecDeploymentApicastHostedPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedPtrOutput
}

type productSpecDeploymentApicastHostedPtrType ProductSpecDeploymentApicastHostedArgs

func ProductSpecDeploymentApicastHostedPtr(v *ProductSpecDeploymentApicastHostedArgs) ProductSpecDeploymentApicastHostedPtrInput {
	return (*productSpecDeploymentApicastHostedPtrType)(v)
}

func (*productSpecDeploymentApicastHostedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHosted)(nil)).Elem()
}

func (i *productSpecDeploymentApicastHostedPtrType) ToProductSpecDeploymentApicastHostedPtrOutput() ProductSpecDeploymentApicastHostedPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastHostedPtrType) ToProductSpecDeploymentApicastHostedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedPtrOutput)
}

// ApicastHostedSpec defines the desired state of Product Apicast Hosted
type ProductSpecDeploymentApicastHostedOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHosted)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedOutput) ToProductSpecDeploymentApicastHostedOutput() ProductSpecDeploymentApicastHostedOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedOutput) ToProductSpecDeploymentApicastHostedOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedOutput) ToProductSpecDeploymentApicastHostedPtrOutput() ProductSpecDeploymentApicastHostedPtrOutput {
	return o.ToProductSpecDeploymentApicastHostedPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastHostedOutput) ToProductSpecDeploymentApicastHostedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHosted) *ProductSpecDeploymentApicastHosted {
		return &v
	}).(ProductSpecDeploymentApicastHostedPtrOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
func (o ProductSpecDeploymentApicastHostedOutput) Authentication() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHosted) *ProductSpecDeploymentApicastHostedAuthentication {
		return v.Authentication
	}).(ProductSpecDeploymentApicastHostedAuthenticationPtrOutput)
}

type ProductSpecDeploymentApicastHostedPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHosted)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedPtrOutput) ToProductSpecDeploymentApicastHostedPtrOutput() ProductSpecDeploymentApicastHostedPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedPtrOutput) ToProductSpecDeploymentApicastHostedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedPtrOutput) Elem() ProductSpecDeploymentApicastHostedOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHosted) ProductSpecDeploymentApicastHosted { return *v }).(ProductSpecDeploymentApicastHostedOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
func (o ProductSpecDeploymentApicastHostedPtrOutput) Authentication() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHosted) *ProductSpecDeploymentApicastHostedAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(ProductSpecDeploymentApicastHostedAuthenticationPtrOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
type ProductSpecDeploymentApicastHostedAuthentication struct {
	// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
	AppKeyAppID *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID `pulumi:"appKeyAppID"`
	// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
	Userkey *ProductSpecDeploymentApicastHostedAuthenticationUserkey `pulumi:"userkey"`
}

// ProductSpecDeploymentApicastHostedAuthenticationInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationArgs and ProductSpecDeploymentApicastHostedAuthenticationOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationArgs{...}
type ProductSpecDeploymentApicastHostedAuthenticationInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationOutput() ProductSpecDeploymentApicastHostedAuthenticationOutput
	ToProductSpecDeploymentApicastHostedAuthenticationOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationOutput
}

// AuthenticationSpec defines the desired state of Product Authentication
type ProductSpecDeploymentApicastHostedAuthenticationArgs struct {
	// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
	AppKeyAppID ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrInput `pulumi:"appKeyAppID"`
	// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
	Userkey ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrInput `pulumi:"userkey"`
}

func (ProductSpecDeploymentApicastHostedAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthentication)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastHostedAuthenticationArgs) ToProductSpecDeploymentApicastHostedAuthenticationOutput() ProductSpecDeploymentApicastHostedAuthenticationOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationArgs) ToProductSpecDeploymentApicastHostedAuthenticationOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationOutput)
}

func (i ProductSpecDeploymentApicastHostedAuthenticationArgs) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationArgs) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationOutput).ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastHostedAuthenticationPtrInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationArgs, ProductSpecDeploymentApicastHostedAuthenticationPtr and ProductSpecDeploymentApicastHostedAuthenticationPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationPtrInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastHostedAuthenticationPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput
	ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationPtrOutput
}

type productSpecDeploymentApicastHostedAuthenticationPtrType ProductSpecDeploymentApicastHostedAuthenticationArgs

func ProductSpecDeploymentApicastHostedAuthenticationPtr(v *ProductSpecDeploymentApicastHostedAuthenticationArgs) ProductSpecDeploymentApicastHostedAuthenticationPtrInput {
	return (*productSpecDeploymentApicastHostedAuthenticationPtrType)(v)
}

func (*productSpecDeploymentApicastHostedAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthentication)(nil)).Elem()
}

func (i *productSpecDeploymentApicastHostedAuthenticationPtrType) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastHostedAuthenticationPtrType) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationPtrOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
type ProductSpecDeploymentApicastHostedAuthenticationOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthentication)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationOutput) ToProductSpecDeploymentApicastHostedAuthenticationOutput() ProductSpecDeploymentApicastHostedAuthenticationOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationOutput) ToProductSpecDeploymentApicastHostedAuthenticationOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationOutput) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return o.ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastHostedAuthenticationOutput) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthentication) *ProductSpecDeploymentApicastHostedAuthentication {
		return &v
	}).(ProductSpecDeploymentApicastHostedAuthenticationPtrOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationOutput) AppKeyAppID() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthentication) *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID {
		return v.AppKeyAppID
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationOutput) Userkey() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthentication) *ProductSpecDeploymentApicastHostedAuthenticationUserkey {
		return v.Userkey
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput)
}

type ProductSpecDeploymentApicastHostedAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthentication)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationPtrOutput) Elem() ProductSpecDeploymentApicastHostedAuthenticationOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthentication) ProductSpecDeploymentApicastHostedAuthentication {
		return *v
	}).(ProductSpecDeploymentApicastHostedAuthenticationOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationPtrOutput) AppKeyAppID() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthentication) *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID {
		if v == nil {
			return nil
		}
		return v.AppKeyAppID
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationPtrOutput) Userkey() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthentication) *ProductSpecDeploymentApicastHostedAuthenticationUserkey {
		if v == nil {
			return nil
		}
		return v.Userkey
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID struct {
	// AppID is the name of the parameter that acts of behalf of app id
	AppID *string `pulumi:"appID"`
	// AppKey is the name of the parameter that acts of behalf of app key
	AppKey *string `pulumi:"appKey"`
	// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials *string `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity `pulumi:"security"`
}

// ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs and ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs{...}
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput
	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs struct {
	// AppID is the name of the parameter that acts of behalf of app id
	AppID pulumi.StringPtrInput `pulumi:"appID"`
	// AppKey is the name of the parameter that acts of behalf of app key
	AppKey pulumi.StringPtrInput `pulumi:"appKey"`
	// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrInput `pulumi:"security"`
}

func (ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput)
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput).ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs, ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtr and ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput
	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput
}

type productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrType ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs

func ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtr(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDArgs) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrInput {
	return (*productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrType)(v)
}

func (*productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (i *productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrType) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrType) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return o.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID {
		return &v
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput)
}

// AppID is the name of the parameter that acts of behalf of app id
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) AppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *string { return v.AppID }).(pulumi.StringPtrOutput)
}

// AppKey is the name of the parameter that acts of behalf of app key
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *string { return v.AppKey }).(pulumi.StringPtrOutput)
}

// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput) Security() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity {
		return v.Security
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) Elem() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID {
		return *v
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput)
}

// AppID is the name of the parameter that acts of behalf of app id
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) AppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *string {
		if v == nil {
			return nil
		}
		return v.AppID
	}).(pulumi.StringPtrOutput)
}

// AppKey is the name of the parameter that acts of behalf of app key
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *string {
		if v == nil {
			return nil
		}
		return v.AppKey
	}).(pulumi.StringPtrOutput)
}

// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput) Security() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppID) *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader *string `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken *string `pulumi:"secretToken"`
}

// ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs and ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs{...}
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput
	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput)
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput).ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs, ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtr and ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput
	ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput
}

type productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrType ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs

func ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtr(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityArgs) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrInput {
	return (*productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrType)(v)
}

func (*productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (i *productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrType) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrType) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity) *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity {
		return &v
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity) *string {
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity) *string {
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput) Elem() ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity) ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity {
		return *v
	}).(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurity) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
type ProductSpecDeploymentApicastHostedAuthenticationUserkey struct {
	AuthUserKey *string `pulumi:"authUserKey"`
	// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials *string `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity `pulumi:"security"`
}

// ProductSpecDeploymentApicastHostedAuthenticationUserkeyInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs and ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationUserkeyInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs{...}
type ProductSpecDeploymentApicastHostedAuthenticationUserkeyInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput
	ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
type ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs struct {
	AuthUserKey pulumi.StringPtrInput `pulumi:"authUserKey"`
	// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrInput `pulumi:"security"`
}

func (ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationUserkey)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput)
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput).ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs, ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtr and ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput
	ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput
}

type productSpecDeploymentApicastHostedAuthenticationUserkeyPtrType ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs

func ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtr(v *ProductSpecDeploymentApicastHostedAuthenticationUserkeyArgs) ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrInput {
	return (*productSpecDeploymentApicastHostedAuthenticationUserkeyPtrType)(v)
}

func (*productSpecDeploymentApicastHostedAuthenticationUserkeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationUserkey)(nil)).Elem()
}

func (i *productSpecDeploymentApicastHostedAuthenticationUserkeyPtrType) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastHostedAuthenticationUserkeyPtrType) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
type ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationUserkey)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return o.ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkey) *ProductSpecDeploymentApicastHostedAuthenticationUserkey {
		return &v
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput)
}
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) AuthUserKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkey) *string { return v.AuthUserKey }).(pulumi.StringPtrOutput)
}

// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkey) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput) Security() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkey) *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity {
		return v.Security
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput)
}

type ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationUserkey)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) Elem() ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkey) ProductSpecDeploymentApicastHostedAuthenticationUserkey {
		return *v
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput)
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) AuthUserKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkey) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserKey
	}).(pulumi.StringPtrOutput)
}

// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkey) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput) Security() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkey) *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader *string `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken *string `pulumi:"secretToken"`
}

// ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs and ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs{...}
type ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput
	ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput)
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput).ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrInput is an input type that accepts ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs, ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtr and ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrInput` via:
//
//          ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput
	ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput
}

type productSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrType ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs

func ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtr(v *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityArgs) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrInput {
	return (*productSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrType)(v)
}

func (*productSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (i *productSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrType) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrType) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return o.ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity) *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity {
		return &v
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity) *string { return v.SecretToken }).(pulumi.StringPtrOutput)
}

type ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput) ToProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput) Elem() ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity) ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity {
		return *v
	}).(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurity) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
type ProductSpecDeploymentApicastSelfManaged struct {
	// AuthenticationSpec defines the desired state of Product Authentication
	Authentication          *ProductSpecDeploymentApicastSelfManagedAuthentication `pulumi:"authentication"`
	ProductionPublicBaseURL *string                                                `pulumi:"productionPublicBaseURL"`
	StagingPublicBaseURL    *string                                                `pulumi:"stagingPublicBaseURL"`
}

// ProductSpecDeploymentApicastSelfManagedInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedArgs and ProductSpecDeploymentApicastSelfManagedOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedArgs{...}
type ProductSpecDeploymentApicastSelfManagedInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedOutput() ProductSpecDeploymentApicastSelfManagedOutput
	ToProductSpecDeploymentApicastSelfManagedOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedOutput
}

// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
type ProductSpecDeploymentApicastSelfManagedArgs struct {
	// AuthenticationSpec defines the desired state of Product Authentication
	Authentication          ProductSpecDeploymentApicastSelfManagedAuthenticationPtrInput `pulumi:"authentication"`
	ProductionPublicBaseURL pulumi.StringPtrInput                                         `pulumi:"productionPublicBaseURL"`
	StagingPublicBaseURL    pulumi.StringPtrInput                                         `pulumi:"stagingPublicBaseURL"`
}

func (ProductSpecDeploymentApicastSelfManagedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManaged)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastSelfManagedArgs) ToProductSpecDeploymentApicastSelfManagedOutput() ProductSpecDeploymentApicastSelfManagedOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedArgs) ToProductSpecDeploymentApicastSelfManagedOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedOutput)
}

func (i ProductSpecDeploymentApicastSelfManagedArgs) ToProductSpecDeploymentApicastSelfManagedPtrOutput() ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedArgs) ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedOutput).ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastSelfManagedPtrInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedArgs, ProductSpecDeploymentApicastSelfManagedPtr and ProductSpecDeploymentApicastSelfManagedPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedPtrInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastSelfManagedPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedPtrOutput() ProductSpecDeploymentApicastSelfManagedPtrOutput
	ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedPtrOutput
}

type productSpecDeploymentApicastSelfManagedPtrType ProductSpecDeploymentApicastSelfManagedArgs

func ProductSpecDeploymentApicastSelfManagedPtr(v *ProductSpecDeploymentApicastSelfManagedArgs) ProductSpecDeploymentApicastSelfManagedPtrInput {
	return (*productSpecDeploymentApicastSelfManagedPtrType)(v)
}

func (*productSpecDeploymentApicastSelfManagedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManaged)(nil)).Elem()
}

func (i *productSpecDeploymentApicastSelfManagedPtrType) ToProductSpecDeploymentApicastSelfManagedPtrOutput() ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastSelfManagedPtrType) ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedPtrOutput)
}

// ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed
type ProductSpecDeploymentApicastSelfManagedOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManaged)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedOutput) ToProductSpecDeploymentApicastSelfManagedOutput() ProductSpecDeploymentApicastSelfManagedOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedOutput) ToProductSpecDeploymentApicastSelfManagedOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedOutput) ToProductSpecDeploymentApicastSelfManagedPtrOutput() ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return o.ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastSelfManagedOutput) ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManaged) *ProductSpecDeploymentApicastSelfManaged {
		return &v
	}).(ProductSpecDeploymentApicastSelfManagedPtrOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
func (o ProductSpecDeploymentApicastSelfManagedOutput) Authentication() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManaged) *ProductSpecDeploymentApicastSelfManagedAuthentication {
		return v.Authentication
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput)
}

func (o ProductSpecDeploymentApicastSelfManagedOutput) ProductionPublicBaseURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManaged) *string { return v.ProductionPublicBaseURL }).(pulumi.StringPtrOutput)
}

func (o ProductSpecDeploymentApicastSelfManagedOutput) StagingPublicBaseURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManaged) *string { return v.StagingPublicBaseURL }).(pulumi.StringPtrOutput)
}

type ProductSpecDeploymentApicastSelfManagedPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManaged)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedPtrOutput) ToProductSpecDeploymentApicastSelfManagedPtrOutput() ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedPtrOutput) ToProductSpecDeploymentApicastSelfManagedPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedPtrOutput) Elem() ProductSpecDeploymentApicastSelfManagedOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManaged) ProductSpecDeploymentApicastSelfManaged { return *v }).(ProductSpecDeploymentApicastSelfManagedOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
func (o ProductSpecDeploymentApicastSelfManagedPtrOutput) Authentication() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManaged) *ProductSpecDeploymentApicastSelfManagedAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput)
}

func (o ProductSpecDeploymentApicastSelfManagedPtrOutput) ProductionPublicBaseURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManaged) *string {
		if v == nil {
			return nil
		}
		return v.ProductionPublicBaseURL
	}).(pulumi.StringPtrOutput)
}

func (o ProductSpecDeploymentApicastSelfManagedPtrOutput) StagingPublicBaseURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManaged) *string {
		if v == nil {
			return nil
		}
		return v.StagingPublicBaseURL
	}).(pulumi.StringPtrOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
type ProductSpecDeploymentApicastSelfManagedAuthentication struct {
	// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
	AppKeyAppID *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID `pulumi:"appKeyAppID"`
	// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
	Userkey *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey `pulumi:"userkey"`
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationArgs and ProductSpecDeploymentApicastSelfManagedAuthenticationOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationArgs{...}
type ProductSpecDeploymentApicastSelfManagedAuthenticationInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationOutput
}

// AuthenticationSpec defines the desired state of Product Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationArgs struct {
	// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
	AppKeyAppID ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrInput `pulumi:"appKeyAppID"`
	// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
	Userkey ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrInput `pulumi:"userkey"`
}

func (ProductSpecDeploymentApicastSelfManagedAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthentication)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationOutput)
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationOutput).ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationPtrInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationArgs, ProductSpecDeploymentApicastSelfManagedAuthenticationPtr and ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationPtrInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastSelfManagedAuthenticationPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput
}

type productSpecDeploymentApicastSelfManagedAuthenticationPtrType ProductSpecDeploymentApicastSelfManagedAuthenticationArgs

func ProductSpecDeploymentApicastSelfManagedAuthenticationPtr(v *ProductSpecDeploymentApicastSelfManagedAuthenticationArgs) ProductSpecDeploymentApicastSelfManagedAuthenticationPtrInput {
	return (*productSpecDeploymentApicastSelfManagedAuthenticationPtrType)(v)
}

func (*productSpecDeploymentApicastSelfManagedAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthentication)(nil)).Elem()
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput)
}

// AuthenticationSpec defines the desired state of Product Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthentication)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return o.ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthentication) *ProductSpecDeploymentApicastSelfManagedAuthentication {
		return &v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) AppKeyAppID() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthentication) *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID {
		return v.AppKeyAppID
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationOutput) Userkey() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthentication) *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey {
		return v.Userkey
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput)
}

type ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthentication)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput) Elem() ProductSpecDeploymentApicastSelfManagedAuthenticationOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthentication) ProductSpecDeploymentApicastSelfManagedAuthentication {
		return *v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput) AppKeyAppID() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthentication) *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID {
		if v == nil {
			return nil
		}
		return v.AppKeyAppID
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput) Userkey() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthentication) *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey {
		if v == nil {
			return nil
		}
		return v.Userkey
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID struct {
	// AppID is the name of the parameter that acts of behalf of app id
	AppID *string `pulumi:"appID"`
	// AppKey is the name of the parameter that acts of behalf of app key
	AppKey *string `pulumi:"appKey"`
	// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials *string `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity `pulumi:"security"`
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs and ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs{...}
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs struct {
	// AppID is the name of the parameter that acts of behalf of app id
	AppID pulumi.StringPtrInput `pulumi:"appID"`
	// AppKey is the name of the parameter that acts of behalf of app key
	AppKey pulumi.StringPtrInput `pulumi:"appKey"`
	// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrInput `pulumi:"security"`
}

func (ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput)
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput).ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs, ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtr and ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput
}

type productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrType ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs

func ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtr(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDArgs) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrInput {
	return (*productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrType)(v)
}

func (*productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput)
}

// AppKeyAppIDAuthenticationSpec defines the desired state of AppKey&AppId Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return o.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID {
		return &v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput)
}

// AppID is the name of the parameter that acts of behalf of app id
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) AppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *string { return v.AppID }).(pulumi.StringPtrOutput)
}

// AppKey is the name of the parameter that acts of behalf of app key
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *string { return v.AppKey }).(pulumi.StringPtrOutput)
}

// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput) Security() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity {
		return v.Security
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) Elem() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID {
		return *v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput)
}

// AppID is the name of the parameter that acts of behalf of app id
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) AppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *string {
		if v == nil {
			return nil
		}
		return v.AppID
	}).(pulumi.StringPtrOutput)
}

// AppKey is the name of the parameter that acts of behalf of app key
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *string {
		if v == nil {
			return nil
		}
		return v.AppKey
	}).(pulumi.StringPtrOutput)
}

// CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput) Security() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppID) *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader *string `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken *string `pulumi:"secretToken"`
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs and ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs{...}
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput)
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput).ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs, ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtr and ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput
}

type productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrType ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs

func ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtr(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityArgs) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrInput {
	return (*productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrType)(v)
}

func (*productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity) *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity {
		return &v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity) *string {
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity) *string {
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput) Elem() ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity) ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity {
		return *v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurity) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey struct {
	AuthUserKey *string `pulumi:"authUserKey"`
	// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials *string `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity `pulumi:"security"`
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs and ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs{...}
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs struct {
	AuthUserKey pulumi.StringPtrInput `pulumi:"authUserKey"`
	// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	// SecuritySpec defines the desired state of Authentication Security
	Security ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrInput `pulumi:"security"`
}

func (ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput)
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput).ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs, ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtr and ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput
}

type productSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrType ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs

func ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtr(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyArgs) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrInput {
	return (*productSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrType)(v)
}

func (*productSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey)(nil)).Elem()
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput)
}

// UserKeyAuthenticationSpec defines the desired state of User Key Authentication
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return o.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey {
		return &v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput)
}
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) AuthUserKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *string { return v.AuthUserKey }).(pulumi.StringPtrOutput)
}

// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput) Security() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity {
		return v.Security
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput)
}

type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) Elem() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey {
		return *v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput)
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) AuthUserKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserKey
	}).(pulumi.StringPtrOutput)
}

// Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput) Security() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkey) *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity {
		if v == nil {
			return nil
		}
		return v.Security
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader *string `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken *string `pulumi:"secretToken"`
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs and ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs{...}
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs struct {
	// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
	SecretToken pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput)
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(context.Background())
}

func (i ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput).ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(ctx)
}

// ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrInput is an input type that accepts ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs, ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtr and ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput values.
// You can construct a concrete instance of `ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrInput` via:
//
//          ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs{...}
//
//  or:
//
//          nil
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrInput interface {
	pulumi.Input

	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput
	ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput
}

type productSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrType ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs

func ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtr(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityArgs) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrInput {
	return (*productSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrType)(v)
}

func (*productSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return i.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(context.Background())
}

func (i *productSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrType) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput)
}

// SecuritySpec defines the desired state of Authentication Security
type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return o.ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(context.Background())
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity) *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity {
		return &v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity) *string {
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity) *string {
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity)(nil)).Elem()
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput) ToProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutputWithContext(ctx context.Context) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput {
	return o
}

func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput) Elem() ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity) ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity {
		return *v
	}).(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput)
}

// HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.
func (o ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurity) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

// MappingRuleSpec defines the desired state of Product's MappingRule
type ProductSpecMappingRules struct {
	HttpMethod      string `pulumi:"httpMethod"`
	Increment       int    `pulumi:"increment"`
	MetricMethodRef string `pulumi:"metricMethodRef"`
	Pattern         string `pulumi:"pattern"`
	Position        *int   `pulumi:"position"`
}

// ProductSpecMappingRulesInput is an input type that accepts ProductSpecMappingRulesArgs and ProductSpecMappingRulesOutput values.
// You can construct a concrete instance of `ProductSpecMappingRulesInput` via:
//
//          ProductSpecMappingRulesArgs{...}
type ProductSpecMappingRulesInput interface {
	pulumi.Input

	ToProductSpecMappingRulesOutput() ProductSpecMappingRulesOutput
	ToProductSpecMappingRulesOutputWithContext(context.Context) ProductSpecMappingRulesOutput
}

// MappingRuleSpec defines the desired state of Product's MappingRule
type ProductSpecMappingRulesArgs struct {
	HttpMethod      pulumi.StringInput `pulumi:"httpMethod"`
	Increment       pulumi.IntInput    `pulumi:"increment"`
	MetricMethodRef pulumi.StringInput `pulumi:"metricMethodRef"`
	Pattern         pulumi.StringInput `pulumi:"pattern"`
	Position        pulumi.IntPtrInput `pulumi:"position"`
}

func (ProductSpecMappingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecMappingRules)(nil)).Elem()
}

func (i ProductSpecMappingRulesArgs) ToProductSpecMappingRulesOutput() ProductSpecMappingRulesOutput {
	return i.ToProductSpecMappingRulesOutputWithContext(context.Background())
}

func (i ProductSpecMappingRulesArgs) ToProductSpecMappingRulesOutputWithContext(ctx context.Context) ProductSpecMappingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecMappingRulesOutput)
}

// ProductSpecMappingRulesArrayInput is an input type that accepts ProductSpecMappingRulesArray and ProductSpecMappingRulesArrayOutput values.
// You can construct a concrete instance of `ProductSpecMappingRulesArrayInput` via:
//
//          ProductSpecMappingRulesArray{ ProductSpecMappingRulesArgs{...} }
type ProductSpecMappingRulesArrayInput interface {
	pulumi.Input

	ToProductSpecMappingRulesArrayOutput() ProductSpecMappingRulesArrayOutput
	ToProductSpecMappingRulesArrayOutputWithContext(context.Context) ProductSpecMappingRulesArrayOutput
}

type ProductSpecMappingRulesArray []ProductSpecMappingRulesInput

func (ProductSpecMappingRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductSpecMappingRules)(nil)).Elem()
}

func (i ProductSpecMappingRulesArray) ToProductSpecMappingRulesArrayOutput() ProductSpecMappingRulesArrayOutput {
	return i.ToProductSpecMappingRulesArrayOutputWithContext(context.Background())
}

func (i ProductSpecMappingRulesArray) ToProductSpecMappingRulesArrayOutputWithContext(ctx context.Context) ProductSpecMappingRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecMappingRulesArrayOutput)
}

// MappingRuleSpec defines the desired state of Product's MappingRule
type ProductSpecMappingRulesOutput struct{ *pulumi.OutputState }

func (ProductSpecMappingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecMappingRules)(nil)).Elem()
}

func (o ProductSpecMappingRulesOutput) ToProductSpecMappingRulesOutput() ProductSpecMappingRulesOutput {
	return o
}

func (o ProductSpecMappingRulesOutput) ToProductSpecMappingRulesOutputWithContext(ctx context.Context) ProductSpecMappingRulesOutput {
	return o
}

func (o ProductSpecMappingRulesOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecMappingRules) string { return v.HttpMethod }).(pulumi.StringOutput)
}

func (o ProductSpecMappingRulesOutput) Increment() pulumi.IntOutput {
	return o.ApplyT(func(v ProductSpecMappingRules) int { return v.Increment }).(pulumi.IntOutput)
}

func (o ProductSpecMappingRulesOutput) MetricMethodRef() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecMappingRules) string { return v.MetricMethodRef }).(pulumi.StringOutput)
}

func (o ProductSpecMappingRulesOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecMappingRules) string { return v.Pattern }).(pulumi.StringOutput)
}

func (o ProductSpecMappingRulesOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductSpecMappingRules) *int { return v.Position }).(pulumi.IntPtrOutput)
}

type ProductSpecMappingRulesArrayOutput struct{ *pulumi.OutputState }

func (ProductSpecMappingRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductSpecMappingRules)(nil)).Elem()
}

func (o ProductSpecMappingRulesArrayOutput) ToProductSpecMappingRulesArrayOutput() ProductSpecMappingRulesArrayOutput {
	return o
}

func (o ProductSpecMappingRulesArrayOutput) ToProductSpecMappingRulesArrayOutputWithContext(ctx context.Context) ProductSpecMappingRulesArrayOutput {
	return o
}

func (o ProductSpecMappingRulesArrayOutput) Index(i pulumi.IntInput) ProductSpecMappingRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductSpecMappingRules {
		return vs[0].([]ProductSpecMappingRules)[vs[1].(int)]
	}).(ProductSpecMappingRulesOutput)
}

// MethodSpec defines the desired state of Product's Method
type ProductSpecMethods struct {
	Description  *string `pulumi:"description"`
	FriendlyName string  `pulumi:"friendlyName"`
}

// ProductSpecMethodsInput is an input type that accepts ProductSpecMethodsArgs and ProductSpecMethodsOutput values.
// You can construct a concrete instance of `ProductSpecMethodsInput` via:
//
//          ProductSpecMethodsArgs{...}
type ProductSpecMethodsInput interface {
	pulumi.Input

	ToProductSpecMethodsOutput() ProductSpecMethodsOutput
	ToProductSpecMethodsOutputWithContext(context.Context) ProductSpecMethodsOutput
}

// MethodSpec defines the desired state of Product's Method
type ProductSpecMethodsArgs struct {
	Description  pulumi.StringPtrInput `pulumi:"description"`
	FriendlyName pulumi.StringInput    `pulumi:"friendlyName"`
}

func (ProductSpecMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecMethods)(nil)).Elem()
}

func (i ProductSpecMethodsArgs) ToProductSpecMethodsOutput() ProductSpecMethodsOutput {
	return i.ToProductSpecMethodsOutputWithContext(context.Background())
}

func (i ProductSpecMethodsArgs) ToProductSpecMethodsOutputWithContext(ctx context.Context) ProductSpecMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecMethodsOutput)
}

// ProductSpecMethodsMapInput is an input type that accepts ProductSpecMethodsMap and ProductSpecMethodsMapOutput values.
// You can construct a concrete instance of `ProductSpecMethodsMapInput` via:
//
//          ProductSpecMethodsMap{ "key": ProductSpecMethodsArgs{...} }
type ProductSpecMethodsMapInput interface {
	pulumi.Input

	ToProductSpecMethodsMapOutput() ProductSpecMethodsMapOutput
	ToProductSpecMethodsMapOutputWithContext(context.Context) ProductSpecMethodsMapOutput
}

type ProductSpecMethodsMap map[string]ProductSpecMethodsInput

func (ProductSpecMethodsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecMethods)(nil)).Elem()
}

func (i ProductSpecMethodsMap) ToProductSpecMethodsMapOutput() ProductSpecMethodsMapOutput {
	return i.ToProductSpecMethodsMapOutputWithContext(context.Background())
}

func (i ProductSpecMethodsMap) ToProductSpecMethodsMapOutputWithContext(ctx context.Context) ProductSpecMethodsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecMethodsMapOutput)
}

// MethodSpec defines the desired state of Product's Method
type ProductSpecMethodsOutput struct{ *pulumi.OutputState }

func (ProductSpecMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecMethods)(nil)).Elem()
}

func (o ProductSpecMethodsOutput) ToProductSpecMethodsOutput() ProductSpecMethodsOutput {
	return o
}

func (o ProductSpecMethodsOutput) ToProductSpecMethodsOutputWithContext(ctx context.Context) ProductSpecMethodsOutput {
	return o
}

func (o ProductSpecMethodsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecMethods) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProductSpecMethodsOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecMethods) string { return v.FriendlyName }).(pulumi.StringOutput)
}

type ProductSpecMethodsMapOutput struct{ *pulumi.OutputState }

func (ProductSpecMethodsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecMethods)(nil)).Elem()
}

func (o ProductSpecMethodsMapOutput) ToProductSpecMethodsMapOutput() ProductSpecMethodsMapOutput {
	return o
}

func (o ProductSpecMethodsMapOutput) ToProductSpecMethodsMapOutputWithContext(ctx context.Context) ProductSpecMethodsMapOutput {
	return o
}

func (o ProductSpecMethodsMapOutput) MapIndex(k pulumi.StringInput) ProductSpecMethodsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ProductSpecMethods {
		return vs[0].(map[string]ProductSpecMethods)[vs[1].(string)]
	}).(ProductSpecMethodsOutput)
}

// MetricSpec defines the desired state of Product's Metric
type ProductSpecMetrics struct {
	Description  *string `pulumi:"description"`
	FriendlyName string  `pulumi:"friendlyName"`
	Unit         string  `pulumi:"unit"`
}

// ProductSpecMetricsInput is an input type that accepts ProductSpecMetricsArgs and ProductSpecMetricsOutput values.
// You can construct a concrete instance of `ProductSpecMetricsInput` via:
//
//          ProductSpecMetricsArgs{...}
type ProductSpecMetricsInput interface {
	pulumi.Input

	ToProductSpecMetricsOutput() ProductSpecMetricsOutput
	ToProductSpecMetricsOutputWithContext(context.Context) ProductSpecMetricsOutput
}

// MetricSpec defines the desired state of Product's Metric
type ProductSpecMetricsArgs struct {
	Description  pulumi.StringPtrInput `pulumi:"description"`
	FriendlyName pulumi.StringInput    `pulumi:"friendlyName"`
	Unit         pulumi.StringInput    `pulumi:"unit"`
}

func (ProductSpecMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecMetrics)(nil)).Elem()
}

func (i ProductSpecMetricsArgs) ToProductSpecMetricsOutput() ProductSpecMetricsOutput {
	return i.ToProductSpecMetricsOutputWithContext(context.Background())
}

func (i ProductSpecMetricsArgs) ToProductSpecMetricsOutputWithContext(ctx context.Context) ProductSpecMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecMetricsOutput)
}

// ProductSpecMetricsMapInput is an input type that accepts ProductSpecMetricsMap and ProductSpecMetricsMapOutput values.
// You can construct a concrete instance of `ProductSpecMetricsMapInput` via:
//
//          ProductSpecMetricsMap{ "key": ProductSpecMetricsArgs{...} }
type ProductSpecMetricsMapInput interface {
	pulumi.Input

	ToProductSpecMetricsMapOutput() ProductSpecMetricsMapOutput
	ToProductSpecMetricsMapOutputWithContext(context.Context) ProductSpecMetricsMapOutput
}

type ProductSpecMetricsMap map[string]ProductSpecMetricsInput

func (ProductSpecMetricsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecMetrics)(nil)).Elem()
}

func (i ProductSpecMetricsMap) ToProductSpecMetricsMapOutput() ProductSpecMetricsMapOutput {
	return i.ToProductSpecMetricsMapOutputWithContext(context.Background())
}

func (i ProductSpecMetricsMap) ToProductSpecMetricsMapOutputWithContext(ctx context.Context) ProductSpecMetricsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecMetricsMapOutput)
}

// MetricSpec defines the desired state of Product's Metric
type ProductSpecMetricsOutput struct{ *pulumi.OutputState }

func (ProductSpecMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecMetrics)(nil)).Elem()
}

func (o ProductSpecMetricsOutput) ToProductSpecMetricsOutput() ProductSpecMetricsOutput {
	return o
}

func (o ProductSpecMetricsOutput) ToProductSpecMetricsOutputWithContext(ctx context.Context) ProductSpecMetricsOutput {
	return o
}

func (o ProductSpecMetricsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecMetrics) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProductSpecMetricsOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecMetrics) string { return v.FriendlyName }).(pulumi.StringOutput)
}

func (o ProductSpecMetricsOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v ProductSpecMetrics) string { return v.Unit }).(pulumi.StringOutput)
}

type ProductSpecMetricsMapOutput struct{ *pulumi.OutputState }

func (ProductSpecMetricsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProductSpecMetrics)(nil)).Elem()
}

func (o ProductSpecMetricsMapOutput) ToProductSpecMetricsMapOutput() ProductSpecMetricsMapOutput {
	return o
}

func (o ProductSpecMetricsMapOutput) ToProductSpecMetricsMapOutputWithContext(ctx context.Context) ProductSpecMetricsMapOutput {
	return o
}

func (o ProductSpecMetricsMapOutput) MapIndex(k pulumi.StringInput) ProductSpecMetricsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ProductSpecMetrics {
		return vs[0].(map[string]ProductSpecMetrics)[vs[1].(string)]
	}).(ProductSpecMetricsOutput)
}

// ProviderAccountRef references account provider credentials
type ProductSpecProviderAccountRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// ProductSpecProviderAccountRefInput is an input type that accepts ProductSpecProviderAccountRefArgs and ProductSpecProviderAccountRefOutput values.
// You can construct a concrete instance of `ProductSpecProviderAccountRefInput` via:
//
//          ProductSpecProviderAccountRefArgs{...}
type ProductSpecProviderAccountRefInput interface {
	pulumi.Input

	ToProductSpecProviderAccountRefOutput() ProductSpecProviderAccountRefOutput
	ToProductSpecProviderAccountRefOutputWithContext(context.Context) ProductSpecProviderAccountRefOutput
}

// ProviderAccountRef references account provider credentials
type ProductSpecProviderAccountRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProductSpecProviderAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecProviderAccountRef)(nil)).Elem()
}

func (i ProductSpecProviderAccountRefArgs) ToProductSpecProviderAccountRefOutput() ProductSpecProviderAccountRefOutput {
	return i.ToProductSpecProviderAccountRefOutputWithContext(context.Background())
}

func (i ProductSpecProviderAccountRefArgs) ToProductSpecProviderAccountRefOutputWithContext(ctx context.Context) ProductSpecProviderAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecProviderAccountRefOutput)
}

func (i ProductSpecProviderAccountRefArgs) ToProductSpecProviderAccountRefPtrOutput() ProductSpecProviderAccountRefPtrOutput {
	return i.ToProductSpecProviderAccountRefPtrOutputWithContext(context.Background())
}

func (i ProductSpecProviderAccountRefArgs) ToProductSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) ProductSpecProviderAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecProviderAccountRefOutput).ToProductSpecProviderAccountRefPtrOutputWithContext(ctx)
}

// ProductSpecProviderAccountRefPtrInput is an input type that accepts ProductSpecProviderAccountRefArgs, ProductSpecProviderAccountRefPtr and ProductSpecProviderAccountRefPtrOutput values.
// You can construct a concrete instance of `ProductSpecProviderAccountRefPtrInput` via:
//
//          ProductSpecProviderAccountRefArgs{...}
//
//  or:
//
//          nil
type ProductSpecProviderAccountRefPtrInput interface {
	pulumi.Input

	ToProductSpecProviderAccountRefPtrOutput() ProductSpecProviderAccountRefPtrOutput
	ToProductSpecProviderAccountRefPtrOutputWithContext(context.Context) ProductSpecProviderAccountRefPtrOutput
}

type productSpecProviderAccountRefPtrType ProductSpecProviderAccountRefArgs

func ProductSpecProviderAccountRefPtr(v *ProductSpecProviderAccountRefArgs) ProductSpecProviderAccountRefPtrInput {
	return (*productSpecProviderAccountRefPtrType)(v)
}

func (*productSpecProviderAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecProviderAccountRef)(nil)).Elem()
}

func (i *productSpecProviderAccountRefPtrType) ToProductSpecProviderAccountRefPtrOutput() ProductSpecProviderAccountRefPtrOutput {
	return i.ToProductSpecProviderAccountRefPtrOutputWithContext(context.Background())
}

func (i *productSpecProviderAccountRefPtrType) ToProductSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) ProductSpecProviderAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductSpecProviderAccountRefPtrOutput)
}

// ProviderAccountRef references account provider credentials
type ProductSpecProviderAccountRefOutput struct{ *pulumi.OutputState }

func (ProductSpecProviderAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductSpecProviderAccountRef)(nil)).Elem()
}

func (o ProductSpecProviderAccountRefOutput) ToProductSpecProviderAccountRefOutput() ProductSpecProviderAccountRefOutput {
	return o
}

func (o ProductSpecProviderAccountRefOutput) ToProductSpecProviderAccountRefOutputWithContext(ctx context.Context) ProductSpecProviderAccountRefOutput {
	return o
}

func (o ProductSpecProviderAccountRefOutput) ToProductSpecProviderAccountRefPtrOutput() ProductSpecProviderAccountRefPtrOutput {
	return o.ToProductSpecProviderAccountRefPtrOutputWithContext(context.Background())
}

func (o ProductSpecProviderAccountRefOutput) ToProductSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) ProductSpecProviderAccountRefPtrOutput {
	return o.ApplyT(func(v ProductSpecProviderAccountRef) *ProductSpecProviderAccountRef {
		return &v
	}).(ProductSpecProviderAccountRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ProductSpecProviderAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductSpecProviderAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProductSpecProviderAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ProductSpecProviderAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductSpecProviderAccountRef)(nil)).Elem()
}

func (o ProductSpecProviderAccountRefPtrOutput) ToProductSpecProviderAccountRefPtrOutput() ProductSpecProviderAccountRefPtrOutput {
	return o
}

func (o ProductSpecProviderAccountRefPtrOutput) ToProductSpecProviderAccountRefPtrOutputWithContext(ctx context.Context) ProductSpecProviderAccountRefPtrOutput {
	return o
}

func (o ProductSpecProviderAccountRefPtrOutput) Elem() ProductSpecProviderAccountRefOutput {
	return o.ApplyT(func(v *ProductSpecProviderAccountRef) ProductSpecProviderAccountRef { return *v }).(ProductSpecProviderAccountRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o ProductSpecProviderAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductSpecProviderAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ProductStatus defines the observed state of Product
type ProductStatus struct {
	// Current state of the 3scale product. Conditions represent the latest available observations of an object's state
	Conditions []ProductStatusConditions `pulumi:"conditions"`
	// ObservedGeneration reflects the generation of the most recently observed Product Spec.
	ObservedGeneration *int    `pulumi:"observedGeneration"`
	ProductId          *int    `pulumi:"productId"`
	State              *string `pulumi:"state"`
}

// ProductStatusInput is an input type that accepts ProductStatusArgs and ProductStatusOutput values.
// You can construct a concrete instance of `ProductStatusInput` via:
//
//          ProductStatusArgs{...}
type ProductStatusInput interface {
	pulumi.Input

	ToProductStatusOutput() ProductStatusOutput
	ToProductStatusOutputWithContext(context.Context) ProductStatusOutput
}

// ProductStatus defines the observed state of Product
type ProductStatusArgs struct {
	// Current state of the 3scale product. Conditions represent the latest available observations of an object's state
	Conditions ProductStatusConditionsArrayInput `pulumi:"conditions"`
	// ObservedGeneration reflects the generation of the most recently observed Product Spec.
	ObservedGeneration pulumi.IntPtrInput    `pulumi:"observedGeneration"`
	ProductId          pulumi.IntPtrInput    `pulumi:"productId"`
	State              pulumi.StringPtrInput `pulumi:"state"`
}

func (ProductStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductStatus)(nil)).Elem()
}

func (i ProductStatusArgs) ToProductStatusOutput() ProductStatusOutput {
	return i.ToProductStatusOutputWithContext(context.Background())
}

func (i ProductStatusArgs) ToProductStatusOutputWithContext(ctx context.Context) ProductStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductStatusOutput)
}

func (i ProductStatusArgs) ToProductStatusPtrOutput() ProductStatusPtrOutput {
	return i.ToProductStatusPtrOutputWithContext(context.Background())
}

func (i ProductStatusArgs) ToProductStatusPtrOutputWithContext(ctx context.Context) ProductStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductStatusOutput).ToProductStatusPtrOutputWithContext(ctx)
}

// ProductStatusPtrInput is an input type that accepts ProductStatusArgs, ProductStatusPtr and ProductStatusPtrOutput values.
// You can construct a concrete instance of `ProductStatusPtrInput` via:
//
//          ProductStatusArgs{...}
//
//  or:
//
//          nil
type ProductStatusPtrInput interface {
	pulumi.Input

	ToProductStatusPtrOutput() ProductStatusPtrOutput
	ToProductStatusPtrOutputWithContext(context.Context) ProductStatusPtrOutput
}

type productStatusPtrType ProductStatusArgs

func ProductStatusPtr(v *ProductStatusArgs) ProductStatusPtrInput {
	return (*productStatusPtrType)(v)
}

func (*productStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductStatus)(nil)).Elem()
}

func (i *productStatusPtrType) ToProductStatusPtrOutput() ProductStatusPtrOutput {
	return i.ToProductStatusPtrOutputWithContext(context.Background())
}

func (i *productStatusPtrType) ToProductStatusPtrOutputWithContext(ctx context.Context) ProductStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductStatusPtrOutput)
}

// ProductStatus defines the observed state of Product
type ProductStatusOutput struct{ *pulumi.OutputState }

func (ProductStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductStatus)(nil)).Elem()
}

func (o ProductStatusOutput) ToProductStatusOutput() ProductStatusOutput {
	return o
}

func (o ProductStatusOutput) ToProductStatusOutputWithContext(ctx context.Context) ProductStatusOutput {
	return o
}

func (o ProductStatusOutput) ToProductStatusPtrOutput() ProductStatusPtrOutput {
	return o.ToProductStatusPtrOutputWithContext(context.Background())
}

func (o ProductStatusOutput) ToProductStatusPtrOutputWithContext(ctx context.Context) ProductStatusPtrOutput {
	return o.ApplyT(func(v ProductStatus) *ProductStatus {
		return &v
	}).(ProductStatusPtrOutput)
}

// Current state of the 3scale product. Conditions represent the latest available observations of an object's state
func (o ProductStatusOutput) Conditions() ProductStatusConditionsArrayOutput {
	return o.ApplyT(func(v ProductStatus) []ProductStatusConditions { return v.Conditions }).(ProductStatusConditionsArrayOutput)
}

// ObservedGeneration reflects the generation of the most recently observed Product Spec.
func (o ProductStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

func (o ProductStatusOutput) ProductId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductStatus) *int { return v.ProductId }).(pulumi.IntPtrOutput)
}

func (o ProductStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ProductStatusPtrOutput struct{ *pulumi.OutputState }

func (ProductStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductStatus)(nil)).Elem()
}

func (o ProductStatusPtrOutput) ToProductStatusPtrOutput() ProductStatusPtrOutput {
	return o
}

func (o ProductStatusPtrOutput) ToProductStatusPtrOutputWithContext(ctx context.Context) ProductStatusPtrOutput {
	return o
}

func (o ProductStatusPtrOutput) Elem() ProductStatusOutput {
	return o.ApplyT(func(v *ProductStatus) ProductStatus { return *v }).(ProductStatusOutput)
}

// Current state of the 3scale product. Conditions represent the latest available observations of an object's state
func (o ProductStatusPtrOutput) Conditions() ProductStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ProductStatus) []ProductStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ProductStatusConditionsArrayOutput)
}

// ObservedGeneration reflects the generation of the most recently observed Product Spec.
func (o ProductStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProductStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func (o ProductStatusPtrOutput) ProductId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProductStatus) *int {
		if v == nil {
			return nil
		}
		return v.ProductId
	}).(pulumi.IntPtrOutput)
}

func (o ProductStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type ProductStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
	Reason *string `pulumi:"reason"`
	Status string  `pulumi:"status"`
	// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
	//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
	Type string `pulumi:"type"`
}

// ProductStatusConditionsInput is an input type that accepts ProductStatusConditionsArgs and ProductStatusConditionsOutput values.
// You can construct a concrete instance of `ProductStatusConditionsInput` via:
//
//          ProductStatusConditionsArgs{...}
type ProductStatusConditionsInput interface {
	pulumi.Input

	ToProductStatusConditionsOutput() ProductStatusConditionsOutput
	ToProductStatusConditionsOutputWithContext(context.Context) ProductStatusConditionsOutput
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type ProductStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Status pulumi.StringInput    `pulumi:"status"`
	// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
	//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProductStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductStatusConditions)(nil)).Elem()
}

func (i ProductStatusConditionsArgs) ToProductStatusConditionsOutput() ProductStatusConditionsOutput {
	return i.ToProductStatusConditionsOutputWithContext(context.Background())
}

func (i ProductStatusConditionsArgs) ToProductStatusConditionsOutputWithContext(ctx context.Context) ProductStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductStatusConditionsOutput)
}

// ProductStatusConditionsArrayInput is an input type that accepts ProductStatusConditionsArray and ProductStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ProductStatusConditionsArrayInput` via:
//
//          ProductStatusConditionsArray{ ProductStatusConditionsArgs{...} }
type ProductStatusConditionsArrayInput interface {
	pulumi.Input

	ToProductStatusConditionsArrayOutput() ProductStatusConditionsArrayOutput
	ToProductStatusConditionsArrayOutputWithContext(context.Context) ProductStatusConditionsArrayOutput
}

type ProductStatusConditionsArray []ProductStatusConditionsInput

func (ProductStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductStatusConditions)(nil)).Elem()
}

func (i ProductStatusConditionsArray) ToProductStatusConditionsArrayOutput() ProductStatusConditionsArrayOutput {
	return i.ToProductStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ProductStatusConditionsArray) ToProductStatusConditionsArrayOutputWithContext(ctx context.Context) ProductStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductStatusConditionsArrayOutput)
}

// Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.
//  Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.
type ProductStatusConditionsOutput struct{ *pulumi.OutputState }

func (ProductStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductStatusConditions)(nil)).Elem()
}

func (o ProductStatusConditionsOutput) ToProductStatusConditionsOutput() ProductStatusConditionsOutput {
	return o
}

func (o ProductStatusConditionsOutput) ToProductStatusConditionsOutputWithContext(ctx context.Context) ProductStatusConditionsOutput {
	return o
}

func (o ProductStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o ProductStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
func (o ProductStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ProductStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ProductStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// ConditionType is the type of the condition and is typically a CamelCased word or short phrase.
//  Condition types should indicate state in the "abnormal-true" polarity. For example, if the condition indicates when a policy is invalid, the "is valid" case is probably the norm, so the condition should be called "Invalid".
func (o ProductStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ProductStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ProductStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductStatusConditions)(nil)).Elem()
}

func (o ProductStatusConditionsArrayOutput) ToProductStatusConditionsArrayOutput() ProductStatusConditionsArrayOutput {
	return o
}

func (o ProductStatusConditionsArrayOutput) ToProductStatusConditionsArrayOutputWithContext(ctx context.Context) ProductStatusConditionsArrayOutput {
	return o
}

func (o ProductStatusConditionsArrayOutput) Index(i pulumi.IntInput) ProductStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductStatusConditions {
		return vs[0].([]ProductStatusConditions)[vs[1].(int)]
	}).(ProductStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(BackendTypeOutput{})
	pulumi.RegisterOutputType(BackendMetadataOutput{})
	pulumi.RegisterOutputType(BackendSpecOutput{})
	pulumi.RegisterOutputType(BackendSpecPtrOutput{})
	pulumi.RegisterOutputType(BackendSpecMappingRulesOutput{})
	pulumi.RegisterOutputType(BackendSpecMappingRulesArrayOutput{})
	pulumi.RegisterOutputType(BackendSpecMethodsOutput{})
	pulumi.RegisterOutputType(BackendSpecMethodsMapOutput{})
	pulumi.RegisterOutputType(BackendSpecMetricsOutput{})
	pulumi.RegisterOutputType(BackendSpecMetricsMapOutput{})
	pulumi.RegisterOutputType(BackendSpecProviderAccountRefOutput{})
	pulumi.RegisterOutputType(BackendSpecProviderAccountRefPtrOutput{})
	pulumi.RegisterOutputType(BackendStatusOutput{})
	pulumi.RegisterOutputType(BackendStatusPtrOutput{})
	pulumi.RegisterOutputType(BackendStatusConditionsOutput{})
	pulumi.RegisterOutputType(BackendStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeOutput{})
	pulumi.RegisterOutputType(ProductMetadataOutput{})
	pulumi.RegisterOutputType(ProductSpecOutput{})
	pulumi.RegisterOutputType(ProductSpecPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansMapOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansLimitsOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansLimitsArrayOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansLimitsMetricMethodRefOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansPricingRulesOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansPricingRulesArrayOutput{})
	pulumi.RegisterOutputType(ProductSpecApplicationPlansPricingRulesMetricMethodRefOutput{})
	pulumi.RegisterOutputType(ProductSpecBackendUsagesOutput{})
	pulumi.RegisterOutputType(ProductSpecBackendUsagesMapOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationAppKeyAppIDSecurityPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationUserkeyOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationUserkeyPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastHostedAuthenticationUserkeySecurityPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationAppKeyAppIDSecurityPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeyPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityOutput{})
	pulumi.RegisterOutputType(ProductSpecDeploymentApicastSelfManagedAuthenticationUserkeySecurityPtrOutput{})
	pulumi.RegisterOutputType(ProductSpecMappingRulesOutput{})
	pulumi.RegisterOutputType(ProductSpecMappingRulesArrayOutput{})
	pulumi.RegisterOutputType(ProductSpecMethodsOutput{})
	pulumi.RegisterOutputType(ProductSpecMethodsMapOutput{})
	pulumi.RegisterOutputType(ProductSpecMetricsOutput{})
	pulumi.RegisterOutputType(ProductSpecMetricsMapOutput{})
	pulumi.RegisterOutputType(ProductSpecProviderAccountRefOutput{})
	pulumi.RegisterOutputType(ProductSpecProviderAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ProductStatusOutput{})
	pulumi.RegisterOutputType(ProductStatusPtrOutput{})
	pulumi.RegisterOutputType(ProductStatusConditionsOutput{})
	pulumi.RegisterOutputType(ProductStatusConditionsArrayOutput{})
}
