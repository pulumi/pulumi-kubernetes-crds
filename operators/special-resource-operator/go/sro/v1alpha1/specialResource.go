// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SpecialResource is the Schema for the specialresources API
type SpecialResource struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// SpecialResourceSpec defines the desired state of SpecialResource
	Spec pulumi.MapOutput `pulumi:"spec"`
	// SpecialResourceStatus defines the observed state of SpecialResource
	Status SpecialResourceStatusPtrOutput `pulumi:"status"`
}

// NewSpecialResource registers a new resource with the given unique name, arguments, and options.
func NewSpecialResource(ctx *pulumi.Context,
	name string, args *SpecialResourceArgs, opts ...pulumi.ResourceOption) (*SpecialResource, error) {
	if args == nil {
		args = &SpecialResourceArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("sro.openshift.io/v1alpha1")
	args.Kind = pulumi.StringPtr("SpecialResource")
	var resource SpecialResource
	err := ctx.RegisterResource("kubernetes:sro.openshift.io/v1alpha1:SpecialResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpecialResource gets an existing SpecialResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpecialResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpecialResourceState, opts ...pulumi.ResourceOption) (*SpecialResource, error) {
	var resource SpecialResource
	err := ctx.ReadResource("kubernetes:sro.openshift.io/v1alpha1:SpecialResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpecialResource resources.
type specialResourceState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SpecialResourceSpec defines the desired state of SpecialResource
	Spec map[string]interface{} `pulumi:"spec"`
	// SpecialResourceStatus defines the observed state of SpecialResource
	Status *SpecialResourceStatus `pulumi:"status"`
}

type SpecialResourceState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SpecialResourceSpec defines the desired state of SpecialResource
	Spec pulumi.MapInput
	// SpecialResourceStatus defines the observed state of SpecialResource
	Status SpecialResourceStatusPtrInput
}

func (SpecialResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*specialResourceState)(nil)).Elem()
}

type specialResourceArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SpecialResourceSpec defines the desired state of SpecialResource
	Spec map[string]interface{} `pulumi:"spec"`
	// SpecialResourceStatus defines the observed state of SpecialResource
	Status *SpecialResourceStatus `pulumi:"status"`
}

// The set of arguments for constructing a SpecialResource resource.
type SpecialResourceArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SpecialResourceSpec defines the desired state of SpecialResource
	Spec pulumi.MapInput
	// SpecialResourceStatus defines the observed state of SpecialResource
	Status SpecialResourceStatusPtrInput
}

func (SpecialResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*specialResourceArgs)(nil)).Elem()
}
