# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'NSMSpecArgs',
    'NSMStatusArgs',
]

@pulumi.input_type
class NSMSpecArgs:
    def __init__(__self__, *,
                 forwarding_plane_image: pulumi.Input[str],
                 forwarding_plane_name: pulumi.Input[str],
                 insecure: pulumi.Input[bool],
                 version: pulumi.Input[str]):
        """
        NSMSpec defines the desired state of NSM
        :param pulumi.Input[str] forwarding_plane_name: Forwarding plane configs
        :param pulumi.Input[bool] insecure: nsmgr configs true or false
        :param pulumi.Input[str] version: Version field for reference on Openshift UI
        """
        pulumi.set(__self__, "forwarding_plane_image", forwarding_plane_image)
        pulumi.set(__self__, "forwarding_plane_name", forwarding_plane_name)
        pulumi.set(__self__, "insecure", insecure)
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="forwardingPlaneImage")
    def forwarding_plane_image(self) -> pulumi.Input[str]:
        return pulumi.get(self, "forwarding_plane_image")

    @forwarding_plane_image.setter
    def forwarding_plane_image(self, value: pulumi.Input[str]):
        pulumi.set(self, "forwarding_plane_image", value)

    @property
    @pulumi.getter(name="forwardingPlaneName")
    def forwarding_plane_name(self) -> pulumi.Input[str]:
        """
        Forwarding plane configs
        """
        return pulumi.get(self, "forwarding_plane_name")

    @forwarding_plane_name.setter
    def forwarding_plane_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "forwarding_plane_name", value)

    @property
    @pulumi.getter
    def insecure(self) -> pulumi.Input[bool]:
        """
        nsmgr configs true or false
        """
        return pulumi.get(self, "insecure")

    @insecure.setter
    def insecure(self, value: pulumi.Input[bool]):
        pulumi.set(self, "insecure", value)

    @property
    @pulumi.getter
    def version(self) -> pulumi.Input[str]:
        """
        Version field for reference on Openshift UI
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[str]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class NSMStatusArgs:
    def __init__(__self__, *,
                 phase: pulumi.Input[str]):
        """
        NSMStatus defines the observed state of NSM
        :param pulumi.Input[str] phase: Operator phases during deployment
        """
        pulumi.set(__self__, "phase", phase)

    @property
    @pulumi.getter
    def phase(self) -> pulumi.Input[str]:
        """
        Operator phases during deployment
        """
        return pulumi.get(self, "phase")

    @phase.setter
    def phase(self, value: pulumi.Input[str]):
        pulumi.set(self, "phase", value)


