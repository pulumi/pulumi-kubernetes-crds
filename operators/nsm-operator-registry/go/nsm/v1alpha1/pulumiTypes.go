// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// NSM is the Schema for the nsms API
type NSMType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// NSMSpec defines the desired state of NSM
	Spec *NSMSpec `pulumi:"spec"`
	// NSMStatus defines the observed state of NSM
	Status *NSMStatus `pulumi:"status"`
}

// NSMTypeInput is an input type that accepts NSMTypeArgs and NSMTypeOutput values.
// You can construct a concrete instance of `NSMTypeInput` via:
//
//          NSMTypeArgs{...}
type NSMTypeInput interface {
	pulumi.Input

	ToNSMTypeOutput() NSMTypeOutput
	ToNSMTypeOutputWithContext(context.Context) NSMTypeOutput
}

// NSM is the Schema for the nsms API
type NSMTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// NSMSpec defines the desired state of NSM
	Spec NSMSpecPtrInput `pulumi:"spec"`
	// NSMStatus defines the observed state of NSM
	Status NSMStatusPtrInput `pulumi:"status"`
}

func (NSMTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMType)(nil)).Elem()
}

func (i NSMTypeArgs) ToNSMTypeOutput() NSMTypeOutput {
	return i.ToNSMTypeOutputWithContext(context.Background())
}

func (i NSMTypeArgs) ToNSMTypeOutputWithContext(ctx context.Context) NSMTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMTypeOutput)
}

// NSM is the Schema for the nsms API
type NSMTypeOutput struct{ *pulumi.OutputState }

func (NSMTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMType)(nil)).Elem()
}

func (o NSMTypeOutput) ToNSMTypeOutput() NSMTypeOutput {
	return o
}

func (o NSMTypeOutput) ToNSMTypeOutputWithContext(ctx context.Context) NSMTypeOutput {
	return o
}

func (o NSMTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSMType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o NSMTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NSMType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o NSMTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v NSMType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// NSMSpec defines the desired state of NSM
func (o NSMTypeOutput) Spec() NSMSpecPtrOutput {
	return o.ApplyT(func(v NSMType) *NSMSpec { return v.Spec }).(NSMSpecPtrOutput)
}

// NSMStatus defines the observed state of NSM
func (o NSMTypeOutput) Status() NSMStatusPtrOutput {
	return o.ApplyT(func(v NSMType) *NSMStatus { return v.Status }).(NSMStatusPtrOutput)
}

type NSMMetadata struct {
}

// NSMMetadataInput is an input type that accepts NSMMetadataArgs and NSMMetadataOutput values.
// You can construct a concrete instance of `NSMMetadataInput` via:
//
//          NSMMetadataArgs{...}
type NSMMetadataInput interface {
	pulumi.Input

	ToNSMMetadataOutput() NSMMetadataOutput
	ToNSMMetadataOutputWithContext(context.Context) NSMMetadataOutput
}

type NSMMetadataArgs struct {
}

func (NSMMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMMetadata)(nil)).Elem()
}

func (i NSMMetadataArgs) ToNSMMetadataOutput() NSMMetadataOutput {
	return i.ToNSMMetadataOutputWithContext(context.Background())
}

func (i NSMMetadataArgs) ToNSMMetadataOutputWithContext(ctx context.Context) NSMMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMMetadataOutput)
}

type NSMMetadataOutput struct{ *pulumi.OutputState }

func (NSMMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMMetadata)(nil)).Elem()
}

func (o NSMMetadataOutput) ToNSMMetadataOutput() NSMMetadataOutput {
	return o
}

func (o NSMMetadataOutput) ToNSMMetadataOutputWithContext(ctx context.Context) NSMMetadataOutput {
	return o
}

// NSMSpec defines the desired state of NSM
type NSMSpec struct {
	ForwardingPlaneImage string `pulumi:"forwardingPlaneImage"`
	// Forwarding plane configs
	ForwardingPlaneName string `pulumi:"forwardingPlaneName"`
	// nsmgr configs true or false
	Insecure bool `pulumi:"insecure"`
	// Version field for reference on Openshift UI
	Version string `pulumi:"version"`
}

// NSMSpecInput is an input type that accepts NSMSpecArgs and NSMSpecOutput values.
// You can construct a concrete instance of `NSMSpecInput` via:
//
//          NSMSpecArgs{...}
type NSMSpecInput interface {
	pulumi.Input

	ToNSMSpecOutput() NSMSpecOutput
	ToNSMSpecOutputWithContext(context.Context) NSMSpecOutput
}

// NSMSpec defines the desired state of NSM
type NSMSpecArgs struct {
	ForwardingPlaneImage pulumi.StringInput `pulumi:"forwardingPlaneImage"`
	// Forwarding plane configs
	ForwardingPlaneName pulumi.StringInput `pulumi:"forwardingPlaneName"`
	// nsmgr configs true or false
	Insecure pulumi.BoolInput `pulumi:"insecure"`
	// Version field for reference on Openshift UI
	Version pulumi.StringInput `pulumi:"version"`
}

func (NSMSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMSpec)(nil)).Elem()
}

func (i NSMSpecArgs) ToNSMSpecOutput() NSMSpecOutput {
	return i.ToNSMSpecOutputWithContext(context.Background())
}

func (i NSMSpecArgs) ToNSMSpecOutputWithContext(ctx context.Context) NSMSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMSpecOutput)
}

func (i NSMSpecArgs) ToNSMSpecPtrOutput() NSMSpecPtrOutput {
	return i.ToNSMSpecPtrOutputWithContext(context.Background())
}

func (i NSMSpecArgs) ToNSMSpecPtrOutputWithContext(ctx context.Context) NSMSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMSpecOutput).ToNSMSpecPtrOutputWithContext(ctx)
}

// NSMSpecPtrInput is an input type that accepts NSMSpecArgs, NSMSpecPtr and NSMSpecPtrOutput values.
// You can construct a concrete instance of `NSMSpecPtrInput` via:
//
//          NSMSpecArgs{...}
//
//  or:
//
//          nil
type NSMSpecPtrInput interface {
	pulumi.Input

	ToNSMSpecPtrOutput() NSMSpecPtrOutput
	ToNSMSpecPtrOutputWithContext(context.Context) NSMSpecPtrOutput
}

type nsmspecPtrType NSMSpecArgs

func NSMSpecPtr(v *NSMSpecArgs) NSMSpecPtrInput {
	return (*nsmspecPtrType)(v)
}

func (*nsmspecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NSMSpec)(nil)).Elem()
}

func (i *nsmspecPtrType) ToNSMSpecPtrOutput() NSMSpecPtrOutput {
	return i.ToNSMSpecPtrOutputWithContext(context.Background())
}

func (i *nsmspecPtrType) ToNSMSpecPtrOutputWithContext(ctx context.Context) NSMSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMSpecPtrOutput)
}

// NSMSpec defines the desired state of NSM
type NSMSpecOutput struct{ *pulumi.OutputState }

func (NSMSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMSpec)(nil)).Elem()
}

func (o NSMSpecOutput) ToNSMSpecOutput() NSMSpecOutput {
	return o
}

func (o NSMSpecOutput) ToNSMSpecOutputWithContext(ctx context.Context) NSMSpecOutput {
	return o
}

func (o NSMSpecOutput) ToNSMSpecPtrOutput() NSMSpecPtrOutput {
	return o.ToNSMSpecPtrOutputWithContext(context.Background())
}

func (o NSMSpecOutput) ToNSMSpecPtrOutputWithContext(ctx context.Context) NSMSpecPtrOutput {
	return o.ApplyT(func(v NSMSpec) *NSMSpec {
		return &v
	}).(NSMSpecPtrOutput)
}
func (o NSMSpecOutput) ForwardingPlaneImage() pulumi.StringOutput {
	return o.ApplyT(func(v NSMSpec) string { return v.ForwardingPlaneImage }).(pulumi.StringOutput)
}

// Forwarding plane configs
func (o NSMSpecOutput) ForwardingPlaneName() pulumi.StringOutput {
	return o.ApplyT(func(v NSMSpec) string { return v.ForwardingPlaneName }).(pulumi.StringOutput)
}

// nsmgr configs true or false
func (o NSMSpecOutput) Insecure() pulumi.BoolOutput {
	return o.ApplyT(func(v NSMSpec) bool { return v.Insecure }).(pulumi.BoolOutput)
}

// Version field for reference on Openshift UI
func (o NSMSpecOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v NSMSpec) string { return v.Version }).(pulumi.StringOutput)
}

type NSMSpecPtrOutput struct{ *pulumi.OutputState }

func (NSMSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NSMSpec)(nil)).Elem()
}

func (o NSMSpecPtrOutput) ToNSMSpecPtrOutput() NSMSpecPtrOutput {
	return o
}

func (o NSMSpecPtrOutput) ToNSMSpecPtrOutputWithContext(ctx context.Context) NSMSpecPtrOutput {
	return o
}

func (o NSMSpecPtrOutput) Elem() NSMSpecOutput {
	return o.ApplyT(func(v *NSMSpec) NSMSpec { return *v }).(NSMSpecOutput)
}

func (o NSMSpecPtrOutput) ForwardingPlaneImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NSMSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ForwardingPlaneImage
	}).(pulumi.StringPtrOutput)
}

// Forwarding plane configs
func (o NSMSpecPtrOutput) ForwardingPlaneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NSMSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ForwardingPlaneName
	}).(pulumi.StringPtrOutput)
}

// nsmgr configs true or false
func (o NSMSpecPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NSMSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// Version field for reference on Openshift UI
func (o NSMSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NSMSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// NSMStatus defines the observed state of NSM
type NSMStatus struct {
	// Operator phases during deployment
	Phase string `pulumi:"phase"`
}

// NSMStatusInput is an input type that accepts NSMStatusArgs and NSMStatusOutput values.
// You can construct a concrete instance of `NSMStatusInput` via:
//
//          NSMStatusArgs{...}
type NSMStatusInput interface {
	pulumi.Input

	ToNSMStatusOutput() NSMStatusOutput
	ToNSMStatusOutputWithContext(context.Context) NSMStatusOutput
}

// NSMStatus defines the observed state of NSM
type NSMStatusArgs struct {
	// Operator phases during deployment
	Phase pulumi.StringInput `pulumi:"phase"`
}

func (NSMStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMStatus)(nil)).Elem()
}

func (i NSMStatusArgs) ToNSMStatusOutput() NSMStatusOutput {
	return i.ToNSMStatusOutputWithContext(context.Background())
}

func (i NSMStatusArgs) ToNSMStatusOutputWithContext(ctx context.Context) NSMStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMStatusOutput)
}

func (i NSMStatusArgs) ToNSMStatusPtrOutput() NSMStatusPtrOutput {
	return i.ToNSMStatusPtrOutputWithContext(context.Background())
}

func (i NSMStatusArgs) ToNSMStatusPtrOutputWithContext(ctx context.Context) NSMStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMStatusOutput).ToNSMStatusPtrOutputWithContext(ctx)
}

// NSMStatusPtrInput is an input type that accepts NSMStatusArgs, NSMStatusPtr and NSMStatusPtrOutput values.
// You can construct a concrete instance of `NSMStatusPtrInput` via:
//
//          NSMStatusArgs{...}
//
//  or:
//
//          nil
type NSMStatusPtrInput interface {
	pulumi.Input

	ToNSMStatusPtrOutput() NSMStatusPtrOutput
	ToNSMStatusPtrOutputWithContext(context.Context) NSMStatusPtrOutput
}

type nsmstatusPtrType NSMStatusArgs

func NSMStatusPtr(v *NSMStatusArgs) NSMStatusPtrInput {
	return (*nsmstatusPtrType)(v)
}

func (*nsmstatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NSMStatus)(nil)).Elem()
}

func (i *nsmstatusPtrType) ToNSMStatusPtrOutput() NSMStatusPtrOutput {
	return i.ToNSMStatusPtrOutputWithContext(context.Background())
}

func (i *nsmstatusPtrType) ToNSMStatusPtrOutputWithContext(ctx context.Context) NSMStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NSMStatusPtrOutput)
}

// NSMStatus defines the observed state of NSM
type NSMStatusOutput struct{ *pulumi.OutputState }

func (NSMStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NSMStatus)(nil)).Elem()
}

func (o NSMStatusOutput) ToNSMStatusOutput() NSMStatusOutput {
	return o
}

func (o NSMStatusOutput) ToNSMStatusOutputWithContext(ctx context.Context) NSMStatusOutput {
	return o
}

func (o NSMStatusOutput) ToNSMStatusPtrOutput() NSMStatusPtrOutput {
	return o.ToNSMStatusPtrOutputWithContext(context.Background())
}

func (o NSMStatusOutput) ToNSMStatusPtrOutputWithContext(ctx context.Context) NSMStatusPtrOutput {
	return o.ApplyT(func(v NSMStatus) *NSMStatus {
		return &v
	}).(NSMStatusPtrOutput)
}

// Operator phases during deployment
func (o NSMStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v NSMStatus) string { return v.Phase }).(pulumi.StringOutput)
}

type NSMStatusPtrOutput struct{ *pulumi.OutputState }

func (NSMStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NSMStatus)(nil)).Elem()
}

func (o NSMStatusPtrOutput) ToNSMStatusPtrOutput() NSMStatusPtrOutput {
	return o
}

func (o NSMStatusPtrOutput) ToNSMStatusPtrOutputWithContext(ctx context.Context) NSMStatusPtrOutput {
	return o
}

func (o NSMStatusPtrOutput) Elem() NSMStatusOutput {
	return o.ApplyT(func(v *NSMStatus) NSMStatus { return *v }).(NSMStatusOutput)
}

// Operator phases during deployment
func (o NSMStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NSMStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NSMTypeOutput{})
	pulumi.RegisterOutputType(NSMMetadataOutput{})
	pulumi.RegisterOutputType(NSMSpecOutput{})
	pulumi.RegisterOutputType(NSMSpecPtrOutput{})
	pulumi.RegisterOutputType(NSMStatusOutput{})
	pulumi.RegisterOutputType(NSMStatusPtrOutput{})
}
