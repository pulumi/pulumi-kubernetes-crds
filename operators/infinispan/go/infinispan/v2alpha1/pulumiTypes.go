// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Backup is the Schema for the backups API
type BackupType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BackupSpec defines the desired state of Backup
	Spec *BackupSpec `pulumi:"spec"`
	// BackupStatus defines the observed state of Backup
	Status *BackupStatus `pulumi:"status"`
}

// BackupTypeInput is an input type that accepts BackupTypeArgs and BackupTypeOutput values.
// You can construct a concrete instance of `BackupTypeInput` via:
//
//          BackupTypeArgs{...}
type BackupTypeInput interface {
	pulumi.Input

	ToBackupTypeOutput() BackupTypeOutput
	ToBackupTypeOutputWithContext(context.Context) BackupTypeOutput
}

// Backup is the Schema for the backups API
type BackupTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BackupSpec defines the desired state of Backup
	Spec BackupSpecPtrInput `pulumi:"spec"`
	// BackupStatus defines the observed state of Backup
	Status BackupStatusPtrInput `pulumi:"status"`
}

func (BackupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupType)(nil)).Elem()
}

func (i BackupTypeArgs) ToBackupTypeOutput() BackupTypeOutput {
	return i.ToBackupTypeOutputWithContext(context.Background())
}

func (i BackupTypeArgs) ToBackupTypeOutputWithContext(ctx context.Context) BackupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupTypeOutput)
}

// Backup is the Schema for the backups API
type BackupTypeOutput struct{ *pulumi.OutputState }

func (BackupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupType)(nil)).Elem()
}

func (o BackupTypeOutput) ToBackupTypeOutput() BackupTypeOutput {
	return o
}

func (o BackupTypeOutput) ToBackupTypeOutputWithContext(ctx context.Context) BackupTypeOutput {
	return o
}

func (o BackupTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o BackupTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o BackupTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v BackupType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BackupSpec defines the desired state of Backup
func (o BackupTypeOutput) Spec() BackupSpecPtrOutput {
	return o.ApplyT(func(v BackupType) *BackupSpec { return v.Spec }).(BackupSpecPtrOutput)
}

// BackupStatus defines the observed state of Backup
func (o BackupTypeOutput) Status() BackupStatusPtrOutput {
	return o.ApplyT(func(v BackupType) *BackupStatus { return v.Status }).(BackupStatusPtrOutput)
}

type BackupMetadata struct {
}

// BackupMetadataInput is an input type that accepts BackupMetadataArgs and BackupMetadataOutput values.
// You can construct a concrete instance of `BackupMetadataInput` via:
//
//          BackupMetadataArgs{...}
type BackupMetadataInput interface {
	pulumi.Input

	ToBackupMetadataOutput() BackupMetadataOutput
	ToBackupMetadataOutputWithContext(context.Context) BackupMetadataOutput
}

type BackupMetadataArgs struct {
}

func (BackupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupMetadata)(nil)).Elem()
}

func (i BackupMetadataArgs) ToBackupMetadataOutput() BackupMetadataOutput {
	return i.ToBackupMetadataOutputWithContext(context.Background())
}

func (i BackupMetadataArgs) ToBackupMetadataOutputWithContext(ctx context.Context) BackupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupMetadataOutput)
}

type BackupMetadataOutput struct{ *pulumi.OutputState }

func (BackupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupMetadata)(nil)).Elem()
}

func (o BackupMetadataOutput) ToBackupMetadataOutput() BackupMetadataOutput {
	return o
}

func (o BackupMetadataOutput) ToBackupMetadataOutputWithContext(ctx context.Context) BackupMetadataOutput {
	return o
}

// BackupSpec defines the desired state of Backup
type BackupSpec struct {
	Cluster string `pulumi:"cluster"`
	// InfinispanContainerSpec specify resource requirements per container
	Container *BackupSpecContainer `pulumi:"container"`
	Resources *BackupSpecResources `pulumi:"resources"`
	Volume    *BackupSpecVolume    `pulumi:"volume"`
}

// BackupSpecInput is an input type that accepts BackupSpecArgs and BackupSpecOutput values.
// You can construct a concrete instance of `BackupSpecInput` via:
//
//          BackupSpecArgs{...}
type BackupSpecInput interface {
	pulumi.Input

	ToBackupSpecOutput() BackupSpecOutput
	ToBackupSpecOutputWithContext(context.Context) BackupSpecOutput
}

// BackupSpec defines the desired state of Backup
type BackupSpecArgs struct {
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// InfinispanContainerSpec specify resource requirements per container
	Container BackupSpecContainerPtrInput `pulumi:"container"`
	Resources BackupSpecResourcesPtrInput `pulumi:"resources"`
	Volume    BackupSpecVolumePtrInput    `pulumi:"volume"`
}

func (BackupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpec)(nil)).Elem()
}

func (i BackupSpecArgs) ToBackupSpecOutput() BackupSpecOutput {
	return i.ToBackupSpecOutputWithContext(context.Background())
}

func (i BackupSpecArgs) ToBackupSpecOutputWithContext(ctx context.Context) BackupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecOutput)
}

func (i BackupSpecArgs) ToBackupSpecPtrOutput() BackupSpecPtrOutput {
	return i.ToBackupSpecPtrOutputWithContext(context.Background())
}

func (i BackupSpecArgs) ToBackupSpecPtrOutputWithContext(ctx context.Context) BackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecOutput).ToBackupSpecPtrOutputWithContext(ctx)
}

// BackupSpecPtrInput is an input type that accepts BackupSpecArgs, BackupSpecPtr and BackupSpecPtrOutput values.
// You can construct a concrete instance of `BackupSpecPtrInput` via:
//
//          BackupSpecArgs{...}
//
//  or:
//
//          nil
type BackupSpecPtrInput interface {
	pulumi.Input

	ToBackupSpecPtrOutput() BackupSpecPtrOutput
	ToBackupSpecPtrOutputWithContext(context.Context) BackupSpecPtrOutput
}

type backupSpecPtrType BackupSpecArgs

func BackupSpecPtr(v *BackupSpecArgs) BackupSpecPtrInput {
	return (*backupSpecPtrType)(v)
}

func (*backupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpec)(nil)).Elem()
}

func (i *backupSpecPtrType) ToBackupSpecPtrOutput() BackupSpecPtrOutput {
	return i.ToBackupSpecPtrOutputWithContext(context.Background())
}

func (i *backupSpecPtrType) ToBackupSpecPtrOutputWithContext(ctx context.Context) BackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecPtrOutput)
}

// BackupSpec defines the desired state of Backup
type BackupSpecOutput struct{ *pulumi.OutputState }

func (BackupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpec)(nil)).Elem()
}

func (o BackupSpecOutput) ToBackupSpecOutput() BackupSpecOutput {
	return o
}

func (o BackupSpecOutput) ToBackupSpecOutputWithContext(ctx context.Context) BackupSpecOutput {
	return o
}

func (o BackupSpecOutput) ToBackupSpecPtrOutput() BackupSpecPtrOutput {
	return o.ToBackupSpecPtrOutputWithContext(context.Background())
}

func (o BackupSpecOutput) ToBackupSpecPtrOutputWithContext(ctx context.Context) BackupSpecPtrOutput {
	return o.ApplyT(func(v BackupSpec) *BackupSpec {
		return &v
	}).(BackupSpecPtrOutput)
}
func (o BackupSpecOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSpec) string { return v.Cluster }).(pulumi.StringOutput)
}

// InfinispanContainerSpec specify resource requirements per container
func (o BackupSpecOutput) Container() BackupSpecContainerPtrOutput {
	return o.ApplyT(func(v BackupSpec) *BackupSpecContainer { return v.Container }).(BackupSpecContainerPtrOutput)
}

func (o BackupSpecOutput) Resources() BackupSpecResourcesPtrOutput {
	return o.ApplyT(func(v BackupSpec) *BackupSpecResources { return v.Resources }).(BackupSpecResourcesPtrOutput)
}

func (o BackupSpecOutput) Volume() BackupSpecVolumePtrOutput {
	return o.ApplyT(func(v BackupSpec) *BackupSpecVolume { return v.Volume }).(BackupSpecVolumePtrOutput)
}

type BackupSpecPtrOutput struct{ *pulumi.OutputState }

func (BackupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpec)(nil)).Elem()
}

func (o BackupSpecPtrOutput) ToBackupSpecPtrOutput() BackupSpecPtrOutput {
	return o
}

func (o BackupSpecPtrOutput) ToBackupSpecPtrOutputWithContext(ctx context.Context) BackupSpecPtrOutput {
	return o
}

func (o BackupSpecPtrOutput) Elem() BackupSpecOutput {
	return o.ApplyT(func(v *BackupSpec) BackupSpec { return *v }).(BackupSpecOutput)
}

func (o BackupSpecPtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(pulumi.StringPtrOutput)
}

// InfinispanContainerSpec specify resource requirements per container
func (o BackupSpecPtrOutput) Container() BackupSpecContainerPtrOutput {
	return o.ApplyT(func(v *BackupSpec) *BackupSpecContainer {
		if v == nil {
			return nil
		}
		return v.Container
	}).(BackupSpecContainerPtrOutput)
}

func (o BackupSpecPtrOutput) Resources() BackupSpecResourcesPtrOutput {
	return o.ApplyT(func(v *BackupSpec) *BackupSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(BackupSpecResourcesPtrOutput)
}

func (o BackupSpecPtrOutput) Volume() BackupSpecVolumePtrOutput {
	return o.ApplyT(func(v *BackupSpec) *BackupSpecVolume {
		if v == nil {
			return nil
		}
		return v.Volume
	}).(BackupSpecVolumePtrOutput)
}

// InfinispanContainerSpec specify resource requirements per container
type BackupSpecContainer struct {
	Cpu          *string `pulumi:"cpu"`
	ExtraJvmOpts *string `pulumi:"extraJvmOpts"`
	Memory       *string `pulumi:"memory"`
}

// BackupSpecContainerInput is an input type that accepts BackupSpecContainerArgs and BackupSpecContainerOutput values.
// You can construct a concrete instance of `BackupSpecContainerInput` via:
//
//          BackupSpecContainerArgs{...}
type BackupSpecContainerInput interface {
	pulumi.Input

	ToBackupSpecContainerOutput() BackupSpecContainerOutput
	ToBackupSpecContainerOutputWithContext(context.Context) BackupSpecContainerOutput
}

// InfinispanContainerSpec specify resource requirements per container
type BackupSpecContainerArgs struct {
	Cpu          pulumi.StringPtrInput `pulumi:"cpu"`
	ExtraJvmOpts pulumi.StringPtrInput `pulumi:"extraJvmOpts"`
	Memory       pulumi.StringPtrInput `pulumi:"memory"`
}

func (BackupSpecContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpecContainer)(nil)).Elem()
}

func (i BackupSpecContainerArgs) ToBackupSpecContainerOutput() BackupSpecContainerOutput {
	return i.ToBackupSpecContainerOutputWithContext(context.Background())
}

func (i BackupSpecContainerArgs) ToBackupSpecContainerOutputWithContext(ctx context.Context) BackupSpecContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecContainerOutput)
}

func (i BackupSpecContainerArgs) ToBackupSpecContainerPtrOutput() BackupSpecContainerPtrOutput {
	return i.ToBackupSpecContainerPtrOutputWithContext(context.Background())
}

func (i BackupSpecContainerArgs) ToBackupSpecContainerPtrOutputWithContext(ctx context.Context) BackupSpecContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecContainerOutput).ToBackupSpecContainerPtrOutputWithContext(ctx)
}

// BackupSpecContainerPtrInput is an input type that accepts BackupSpecContainerArgs, BackupSpecContainerPtr and BackupSpecContainerPtrOutput values.
// You can construct a concrete instance of `BackupSpecContainerPtrInput` via:
//
//          BackupSpecContainerArgs{...}
//
//  or:
//
//          nil
type BackupSpecContainerPtrInput interface {
	pulumi.Input

	ToBackupSpecContainerPtrOutput() BackupSpecContainerPtrOutput
	ToBackupSpecContainerPtrOutputWithContext(context.Context) BackupSpecContainerPtrOutput
}

type backupSpecContainerPtrType BackupSpecContainerArgs

func BackupSpecContainerPtr(v *BackupSpecContainerArgs) BackupSpecContainerPtrInput {
	return (*backupSpecContainerPtrType)(v)
}

func (*backupSpecContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpecContainer)(nil)).Elem()
}

func (i *backupSpecContainerPtrType) ToBackupSpecContainerPtrOutput() BackupSpecContainerPtrOutput {
	return i.ToBackupSpecContainerPtrOutputWithContext(context.Background())
}

func (i *backupSpecContainerPtrType) ToBackupSpecContainerPtrOutputWithContext(ctx context.Context) BackupSpecContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecContainerPtrOutput)
}

// InfinispanContainerSpec specify resource requirements per container
type BackupSpecContainerOutput struct{ *pulumi.OutputState }

func (BackupSpecContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpecContainer)(nil)).Elem()
}

func (o BackupSpecContainerOutput) ToBackupSpecContainerOutput() BackupSpecContainerOutput {
	return o
}

func (o BackupSpecContainerOutput) ToBackupSpecContainerOutputWithContext(ctx context.Context) BackupSpecContainerOutput {
	return o
}

func (o BackupSpecContainerOutput) ToBackupSpecContainerPtrOutput() BackupSpecContainerPtrOutput {
	return o.ToBackupSpecContainerPtrOutputWithContext(context.Background())
}

func (o BackupSpecContainerOutput) ToBackupSpecContainerPtrOutputWithContext(ctx context.Context) BackupSpecContainerPtrOutput {
	return o.ApplyT(func(v BackupSpecContainer) *BackupSpecContainer {
		return &v
	}).(BackupSpecContainerPtrOutput)
}
func (o BackupSpecContainerOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSpecContainer) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

func (o BackupSpecContainerOutput) ExtraJvmOpts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSpecContainer) *string { return v.ExtraJvmOpts }).(pulumi.StringPtrOutput)
}

func (o BackupSpecContainerOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSpecContainer) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type BackupSpecContainerPtrOutput struct{ *pulumi.OutputState }

func (BackupSpecContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpecContainer)(nil)).Elem()
}

func (o BackupSpecContainerPtrOutput) ToBackupSpecContainerPtrOutput() BackupSpecContainerPtrOutput {
	return o
}

func (o BackupSpecContainerPtrOutput) ToBackupSpecContainerPtrOutputWithContext(ctx context.Context) BackupSpecContainerPtrOutput {
	return o
}

func (o BackupSpecContainerPtrOutput) Elem() BackupSpecContainerOutput {
	return o.ApplyT(func(v *BackupSpecContainer) BackupSpecContainer { return *v }).(BackupSpecContainerOutput)
}

func (o BackupSpecContainerPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSpecContainer) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

func (o BackupSpecContainerPtrOutput) ExtraJvmOpts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSpecContainer) *string {
		if v == nil {
			return nil
		}
		return v.ExtraJvmOpts
	}).(pulumi.StringPtrOutput)
}

func (o BackupSpecContainerPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSpecContainer) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

type BackupSpecResources struct {
	CacheConfigs []string `pulumi:"cacheConfigs"`
	Caches       []string `pulumi:"caches"`
	Counters     []string `pulumi:"counters"`
	ProtoSchemas []string `pulumi:"protoSchemas"`
	Scripts      []string `pulumi:"scripts"`
}

// BackupSpecResourcesInput is an input type that accepts BackupSpecResourcesArgs and BackupSpecResourcesOutput values.
// You can construct a concrete instance of `BackupSpecResourcesInput` via:
//
//          BackupSpecResourcesArgs{...}
type BackupSpecResourcesInput interface {
	pulumi.Input

	ToBackupSpecResourcesOutput() BackupSpecResourcesOutput
	ToBackupSpecResourcesOutputWithContext(context.Context) BackupSpecResourcesOutput
}

type BackupSpecResourcesArgs struct {
	CacheConfigs pulumi.StringArrayInput `pulumi:"cacheConfigs"`
	Caches       pulumi.StringArrayInput `pulumi:"caches"`
	Counters     pulumi.StringArrayInput `pulumi:"counters"`
	ProtoSchemas pulumi.StringArrayInput `pulumi:"protoSchemas"`
	Scripts      pulumi.StringArrayInput `pulumi:"scripts"`
}

func (BackupSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpecResources)(nil)).Elem()
}

func (i BackupSpecResourcesArgs) ToBackupSpecResourcesOutput() BackupSpecResourcesOutput {
	return i.ToBackupSpecResourcesOutputWithContext(context.Background())
}

func (i BackupSpecResourcesArgs) ToBackupSpecResourcesOutputWithContext(ctx context.Context) BackupSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecResourcesOutput)
}

func (i BackupSpecResourcesArgs) ToBackupSpecResourcesPtrOutput() BackupSpecResourcesPtrOutput {
	return i.ToBackupSpecResourcesPtrOutputWithContext(context.Background())
}

func (i BackupSpecResourcesArgs) ToBackupSpecResourcesPtrOutputWithContext(ctx context.Context) BackupSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecResourcesOutput).ToBackupSpecResourcesPtrOutputWithContext(ctx)
}

// BackupSpecResourcesPtrInput is an input type that accepts BackupSpecResourcesArgs, BackupSpecResourcesPtr and BackupSpecResourcesPtrOutput values.
// You can construct a concrete instance of `BackupSpecResourcesPtrInput` via:
//
//          BackupSpecResourcesArgs{...}
//
//  or:
//
//          nil
type BackupSpecResourcesPtrInput interface {
	pulumi.Input

	ToBackupSpecResourcesPtrOutput() BackupSpecResourcesPtrOutput
	ToBackupSpecResourcesPtrOutputWithContext(context.Context) BackupSpecResourcesPtrOutput
}

type backupSpecResourcesPtrType BackupSpecResourcesArgs

func BackupSpecResourcesPtr(v *BackupSpecResourcesArgs) BackupSpecResourcesPtrInput {
	return (*backupSpecResourcesPtrType)(v)
}

func (*backupSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpecResources)(nil)).Elem()
}

func (i *backupSpecResourcesPtrType) ToBackupSpecResourcesPtrOutput() BackupSpecResourcesPtrOutput {
	return i.ToBackupSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *backupSpecResourcesPtrType) ToBackupSpecResourcesPtrOutputWithContext(ctx context.Context) BackupSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecResourcesPtrOutput)
}

type BackupSpecResourcesOutput struct{ *pulumi.OutputState }

func (BackupSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpecResources)(nil)).Elem()
}

func (o BackupSpecResourcesOutput) ToBackupSpecResourcesOutput() BackupSpecResourcesOutput {
	return o
}

func (o BackupSpecResourcesOutput) ToBackupSpecResourcesOutputWithContext(ctx context.Context) BackupSpecResourcesOutput {
	return o
}

func (o BackupSpecResourcesOutput) ToBackupSpecResourcesPtrOutput() BackupSpecResourcesPtrOutput {
	return o.ToBackupSpecResourcesPtrOutputWithContext(context.Background())
}

func (o BackupSpecResourcesOutput) ToBackupSpecResourcesPtrOutputWithContext(ctx context.Context) BackupSpecResourcesPtrOutput {
	return o.ApplyT(func(v BackupSpecResources) *BackupSpecResources {
		return &v
	}).(BackupSpecResourcesPtrOutput)
}
func (o BackupSpecResourcesOutput) CacheConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSpecResources) []string { return v.CacheConfigs }).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesOutput) Caches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSpecResources) []string { return v.Caches }).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesOutput) Counters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSpecResources) []string { return v.Counters }).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesOutput) ProtoSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSpecResources) []string { return v.ProtoSchemas }).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesOutput) Scripts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSpecResources) []string { return v.Scripts }).(pulumi.StringArrayOutput)
}

type BackupSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (BackupSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpecResources)(nil)).Elem()
}

func (o BackupSpecResourcesPtrOutput) ToBackupSpecResourcesPtrOutput() BackupSpecResourcesPtrOutput {
	return o
}

func (o BackupSpecResourcesPtrOutput) ToBackupSpecResourcesPtrOutputWithContext(ctx context.Context) BackupSpecResourcesPtrOutput {
	return o
}

func (o BackupSpecResourcesPtrOutput) Elem() BackupSpecResourcesOutput {
	return o.ApplyT(func(v *BackupSpecResources) BackupSpecResources { return *v }).(BackupSpecResourcesOutput)
}

func (o BackupSpecResourcesPtrOutput) CacheConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.CacheConfigs
	}).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesPtrOutput) Caches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.Caches
	}).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesPtrOutput) Counters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.Counters
	}).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesPtrOutput) ProtoSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.ProtoSchemas
	}).(pulumi.StringArrayOutput)
}

func (o BackupSpecResourcesPtrOutput) Scripts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(pulumi.StringArrayOutput)
}

type BackupSpecVolume struct {
	Storage          *string `pulumi:"storage"`
	StorageClassName *string `pulumi:"storageClassName"`
}

// BackupSpecVolumeInput is an input type that accepts BackupSpecVolumeArgs and BackupSpecVolumeOutput values.
// You can construct a concrete instance of `BackupSpecVolumeInput` via:
//
//          BackupSpecVolumeArgs{...}
type BackupSpecVolumeInput interface {
	pulumi.Input

	ToBackupSpecVolumeOutput() BackupSpecVolumeOutput
	ToBackupSpecVolumeOutputWithContext(context.Context) BackupSpecVolumeOutput
}

type BackupSpecVolumeArgs struct {
	Storage          pulumi.StringPtrInput `pulumi:"storage"`
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
}

func (BackupSpecVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpecVolume)(nil)).Elem()
}

func (i BackupSpecVolumeArgs) ToBackupSpecVolumeOutput() BackupSpecVolumeOutput {
	return i.ToBackupSpecVolumeOutputWithContext(context.Background())
}

func (i BackupSpecVolumeArgs) ToBackupSpecVolumeOutputWithContext(ctx context.Context) BackupSpecVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecVolumeOutput)
}

func (i BackupSpecVolumeArgs) ToBackupSpecVolumePtrOutput() BackupSpecVolumePtrOutput {
	return i.ToBackupSpecVolumePtrOutputWithContext(context.Background())
}

func (i BackupSpecVolumeArgs) ToBackupSpecVolumePtrOutputWithContext(ctx context.Context) BackupSpecVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecVolumeOutput).ToBackupSpecVolumePtrOutputWithContext(ctx)
}

// BackupSpecVolumePtrInput is an input type that accepts BackupSpecVolumeArgs, BackupSpecVolumePtr and BackupSpecVolumePtrOutput values.
// You can construct a concrete instance of `BackupSpecVolumePtrInput` via:
//
//          BackupSpecVolumeArgs{...}
//
//  or:
//
//          nil
type BackupSpecVolumePtrInput interface {
	pulumi.Input

	ToBackupSpecVolumePtrOutput() BackupSpecVolumePtrOutput
	ToBackupSpecVolumePtrOutputWithContext(context.Context) BackupSpecVolumePtrOutput
}

type backupSpecVolumePtrType BackupSpecVolumeArgs

func BackupSpecVolumePtr(v *BackupSpecVolumeArgs) BackupSpecVolumePtrInput {
	return (*backupSpecVolumePtrType)(v)
}

func (*backupSpecVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpecVolume)(nil)).Elem()
}

func (i *backupSpecVolumePtrType) ToBackupSpecVolumePtrOutput() BackupSpecVolumePtrOutput {
	return i.ToBackupSpecVolumePtrOutputWithContext(context.Background())
}

func (i *backupSpecVolumePtrType) ToBackupSpecVolumePtrOutputWithContext(ctx context.Context) BackupSpecVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSpecVolumePtrOutput)
}

type BackupSpecVolumeOutput struct{ *pulumi.OutputState }

func (BackupSpecVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSpecVolume)(nil)).Elem()
}

func (o BackupSpecVolumeOutput) ToBackupSpecVolumeOutput() BackupSpecVolumeOutput {
	return o
}

func (o BackupSpecVolumeOutput) ToBackupSpecVolumeOutputWithContext(ctx context.Context) BackupSpecVolumeOutput {
	return o
}

func (o BackupSpecVolumeOutput) ToBackupSpecVolumePtrOutput() BackupSpecVolumePtrOutput {
	return o.ToBackupSpecVolumePtrOutputWithContext(context.Background())
}

func (o BackupSpecVolumeOutput) ToBackupSpecVolumePtrOutputWithContext(ctx context.Context) BackupSpecVolumePtrOutput {
	return o.ApplyT(func(v BackupSpecVolume) *BackupSpecVolume {
		return &v
	}).(BackupSpecVolumePtrOutput)
}
func (o BackupSpecVolumeOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSpecVolume) *string { return v.Storage }).(pulumi.StringPtrOutput)
}

func (o BackupSpecVolumeOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSpecVolume) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

type BackupSpecVolumePtrOutput struct{ *pulumi.OutputState }

func (BackupSpecVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSpecVolume)(nil)).Elem()
}

func (o BackupSpecVolumePtrOutput) ToBackupSpecVolumePtrOutput() BackupSpecVolumePtrOutput {
	return o
}

func (o BackupSpecVolumePtrOutput) ToBackupSpecVolumePtrOutputWithContext(ctx context.Context) BackupSpecVolumePtrOutput {
	return o
}

func (o BackupSpecVolumePtrOutput) Elem() BackupSpecVolumeOutput {
	return o.ApplyT(func(v *BackupSpecVolume) BackupSpecVolume { return *v }).(BackupSpecVolumeOutput)
}

func (o BackupSpecVolumePtrOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSpecVolume) *string {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(pulumi.StringPtrOutput)
}

func (o BackupSpecVolumePtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSpecVolume) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// BackupStatus defines the observed state of Backup
type BackupStatus struct {
	// State indicates the current state of the backup operation
	Phase string `pulumi:"phase"`
	// The name of the created PersistentVolumeClaim used to store the backup
	Pvc *string `pulumi:"pvc"`
	// Reason indicates the reason for any backup related failures.
	Reason *string `pulumi:"reason"`
}

// BackupStatusInput is an input type that accepts BackupStatusArgs and BackupStatusOutput values.
// You can construct a concrete instance of `BackupStatusInput` via:
//
//          BackupStatusArgs{...}
type BackupStatusInput interface {
	pulumi.Input

	ToBackupStatusOutput() BackupStatusOutput
	ToBackupStatusOutputWithContext(context.Context) BackupStatusOutput
}

// BackupStatus defines the observed state of Backup
type BackupStatusArgs struct {
	// State indicates the current state of the backup operation
	Phase pulumi.StringInput `pulumi:"phase"`
	// The name of the created PersistentVolumeClaim used to store the backup
	Pvc pulumi.StringPtrInput `pulumi:"pvc"`
	// Reason indicates the reason for any backup related failures.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (BackupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupStatus)(nil)).Elem()
}

func (i BackupStatusArgs) ToBackupStatusOutput() BackupStatusOutput {
	return i.ToBackupStatusOutputWithContext(context.Background())
}

func (i BackupStatusArgs) ToBackupStatusOutputWithContext(ctx context.Context) BackupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupStatusOutput)
}

func (i BackupStatusArgs) ToBackupStatusPtrOutput() BackupStatusPtrOutput {
	return i.ToBackupStatusPtrOutputWithContext(context.Background())
}

func (i BackupStatusArgs) ToBackupStatusPtrOutputWithContext(ctx context.Context) BackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupStatusOutput).ToBackupStatusPtrOutputWithContext(ctx)
}

// BackupStatusPtrInput is an input type that accepts BackupStatusArgs, BackupStatusPtr and BackupStatusPtrOutput values.
// You can construct a concrete instance of `BackupStatusPtrInput` via:
//
//          BackupStatusArgs{...}
//
//  or:
//
//          nil
type BackupStatusPtrInput interface {
	pulumi.Input

	ToBackupStatusPtrOutput() BackupStatusPtrOutput
	ToBackupStatusPtrOutputWithContext(context.Context) BackupStatusPtrOutput
}

type backupStatusPtrType BackupStatusArgs

func BackupStatusPtr(v *BackupStatusArgs) BackupStatusPtrInput {
	return (*backupStatusPtrType)(v)
}

func (*backupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupStatus)(nil)).Elem()
}

func (i *backupStatusPtrType) ToBackupStatusPtrOutput() BackupStatusPtrOutput {
	return i.ToBackupStatusPtrOutputWithContext(context.Background())
}

func (i *backupStatusPtrType) ToBackupStatusPtrOutputWithContext(ctx context.Context) BackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupStatusPtrOutput)
}

// BackupStatus defines the observed state of Backup
type BackupStatusOutput struct{ *pulumi.OutputState }

func (BackupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupStatus)(nil)).Elem()
}

func (o BackupStatusOutput) ToBackupStatusOutput() BackupStatusOutput {
	return o
}

func (o BackupStatusOutput) ToBackupStatusOutputWithContext(ctx context.Context) BackupStatusOutput {
	return o
}

func (o BackupStatusOutput) ToBackupStatusPtrOutput() BackupStatusPtrOutput {
	return o.ToBackupStatusPtrOutputWithContext(context.Background())
}

func (o BackupStatusOutput) ToBackupStatusPtrOutputWithContext(ctx context.Context) BackupStatusPtrOutput {
	return o.ApplyT(func(v BackupStatus) *BackupStatus {
		return &v
	}).(BackupStatusPtrOutput)
}

// State indicates the current state of the backup operation
func (o BackupStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v BackupStatus) string { return v.Phase }).(pulumi.StringOutput)
}

// The name of the created PersistentVolumeClaim used to store the backup
func (o BackupStatusOutput) Pvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupStatus) *string { return v.Pvc }).(pulumi.StringPtrOutput)
}

// Reason indicates the reason for any backup related failures.
func (o BackupStatusOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupStatus) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type BackupStatusPtrOutput struct{ *pulumi.OutputState }

func (BackupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupStatus)(nil)).Elem()
}

func (o BackupStatusPtrOutput) ToBackupStatusPtrOutput() BackupStatusPtrOutput {
	return o
}

func (o BackupStatusPtrOutput) ToBackupStatusPtrOutputWithContext(ctx context.Context) BackupStatusPtrOutput {
	return o
}

func (o BackupStatusPtrOutput) Elem() BackupStatusOutput {
	return o.ApplyT(func(v *BackupStatus) BackupStatus { return *v }).(BackupStatusOutput)
}

// State indicates the current state of the backup operation
func (o BackupStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// The name of the created PersistentVolumeClaim used to store the backup
func (o BackupStatusPtrOutput) Pvc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Pvc
	}).(pulumi.StringPtrOutput)
}

// Reason indicates the reason for any backup related failures.
func (o BackupStatusPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Cache is the Schema for the caches API
type CacheType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// CacheSpec defines the desired state of Cache
	Spec *CacheSpec `pulumi:"spec"`
	// CacheStatus defines the observed state of Cache
	Status *CacheStatus `pulumi:"status"`
}

// CacheTypeInput is an input type that accepts CacheTypeArgs and CacheTypeOutput values.
// You can construct a concrete instance of `CacheTypeInput` via:
//
//          CacheTypeArgs{...}
type CacheTypeInput interface {
	pulumi.Input

	ToCacheTypeOutput() CacheTypeOutput
	ToCacheTypeOutputWithContext(context.Context) CacheTypeOutput
}

// Cache is the Schema for the caches API
type CacheTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// CacheSpec defines the desired state of Cache
	Spec CacheSpecPtrInput `pulumi:"spec"`
	// CacheStatus defines the observed state of Cache
	Status CacheStatusPtrInput `pulumi:"status"`
}

func (CacheTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheType)(nil)).Elem()
}

func (i CacheTypeArgs) ToCacheTypeOutput() CacheTypeOutput {
	return i.ToCacheTypeOutputWithContext(context.Background())
}

func (i CacheTypeArgs) ToCacheTypeOutputWithContext(ctx context.Context) CacheTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheTypeOutput)
}

// Cache is the Schema for the caches API
type CacheTypeOutput struct{ *pulumi.OutputState }

func (CacheTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheType)(nil)).Elem()
}

func (o CacheTypeOutput) ToCacheTypeOutput() CacheTypeOutput {
	return o
}

func (o CacheTypeOutput) ToCacheTypeOutputWithContext(ctx context.Context) CacheTypeOutput {
	return o
}

func (o CacheTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o CacheTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CacheTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v CacheType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// CacheSpec defines the desired state of Cache
func (o CacheTypeOutput) Spec() CacheSpecPtrOutput {
	return o.ApplyT(func(v CacheType) *CacheSpec { return v.Spec }).(CacheSpecPtrOutput)
}

// CacheStatus defines the observed state of Cache
func (o CacheTypeOutput) Status() CacheStatusPtrOutput {
	return o.ApplyT(func(v CacheType) *CacheStatus { return v.Status }).(CacheStatusPtrOutput)
}

type CacheMetadata struct {
}

// CacheMetadataInput is an input type that accepts CacheMetadataArgs and CacheMetadataOutput values.
// You can construct a concrete instance of `CacheMetadataInput` via:
//
//          CacheMetadataArgs{...}
type CacheMetadataInput interface {
	pulumi.Input

	ToCacheMetadataOutput() CacheMetadataOutput
	ToCacheMetadataOutputWithContext(context.Context) CacheMetadataOutput
}

type CacheMetadataArgs struct {
}

func (CacheMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheMetadata)(nil)).Elem()
}

func (i CacheMetadataArgs) ToCacheMetadataOutput() CacheMetadataOutput {
	return i.ToCacheMetadataOutputWithContext(context.Background())
}

func (i CacheMetadataArgs) ToCacheMetadataOutputWithContext(ctx context.Context) CacheMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheMetadataOutput)
}

type CacheMetadataOutput struct{ *pulumi.OutputState }

func (CacheMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheMetadata)(nil)).Elem()
}

func (o CacheMetadataOutput) ToCacheMetadataOutput() CacheMetadataOutput {
	return o
}

func (o CacheMetadataOutput) ToCacheMetadataOutputWithContext(ctx context.Context) CacheMetadataOutput {
	return o
}

// CacheSpec defines the desired state of Cache
type CacheSpec struct {
	// Authentication info
	AdminAuth *CacheSpecAdminAuth `pulumi:"adminAuth"`
	// Name of the cluster where to create the cache
	ClusterName *string `pulumi:"clusterName"`
	// Name of the cache to be created. If empty ObjectMeta.Name will be used
	Name *string `pulumi:"name"`
	// Cache template in XML format
	Template *string `pulumi:"template"`
	// Name of the template to be used to create this cache
	TemplateName *string `pulumi:"templateName"`
}

// CacheSpecInput is an input type that accepts CacheSpecArgs and CacheSpecOutput values.
// You can construct a concrete instance of `CacheSpecInput` via:
//
//          CacheSpecArgs{...}
type CacheSpecInput interface {
	pulumi.Input

	ToCacheSpecOutput() CacheSpecOutput
	ToCacheSpecOutputWithContext(context.Context) CacheSpecOutput
}

// CacheSpec defines the desired state of Cache
type CacheSpecArgs struct {
	// Authentication info
	AdminAuth CacheSpecAdminAuthPtrInput `pulumi:"adminAuth"`
	// Name of the cluster where to create the cache
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// Name of the cache to be created. If empty ObjectMeta.Name will be used
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Cache template in XML format
	Template pulumi.StringPtrInput `pulumi:"template"`
	// Name of the template to be used to create this cache
	TemplateName pulumi.StringPtrInput `pulumi:"templateName"`
}

func (CacheSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpec)(nil)).Elem()
}

func (i CacheSpecArgs) ToCacheSpecOutput() CacheSpecOutput {
	return i.ToCacheSpecOutputWithContext(context.Background())
}

func (i CacheSpecArgs) ToCacheSpecOutputWithContext(ctx context.Context) CacheSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecOutput)
}

func (i CacheSpecArgs) ToCacheSpecPtrOutput() CacheSpecPtrOutput {
	return i.ToCacheSpecPtrOutputWithContext(context.Background())
}

func (i CacheSpecArgs) ToCacheSpecPtrOutputWithContext(ctx context.Context) CacheSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecOutput).ToCacheSpecPtrOutputWithContext(ctx)
}

// CacheSpecPtrInput is an input type that accepts CacheSpecArgs, CacheSpecPtr and CacheSpecPtrOutput values.
// You can construct a concrete instance of `CacheSpecPtrInput` via:
//
//          CacheSpecArgs{...}
//
//  or:
//
//          nil
type CacheSpecPtrInput interface {
	pulumi.Input

	ToCacheSpecPtrOutput() CacheSpecPtrOutput
	ToCacheSpecPtrOutputWithContext(context.Context) CacheSpecPtrOutput
}

type cacheSpecPtrType CacheSpecArgs

func CacheSpecPtr(v *CacheSpecArgs) CacheSpecPtrInput {
	return (*cacheSpecPtrType)(v)
}

func (*cacheSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpec)(nil)).Elem()
}

func (i *cacheSpecPtrType) ToCacheSpecPtrOutput() CacheSpecPtrOutput {
	return i.ToCacheSpecPtrOutputWithContext(context.Background())
}

func (i *cacheSpecPtrType) ToCacheSpecPtrOutputWithContext(ctx context.Context) CacheSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecPtrOutput)
}

// CacheSpec defines the desired state of Cache
type CacheSpecOutput struct{ *pulumi.OutputState }

func (CacheSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpec)(nil)).Elem()
}

func (o CacheSpecOutput) ToCacheSpecOutput() CacheSpecOutput {
	return o
}

func (o CacheSpecOutput) ToCacheSpecOutputWithContext(ctx context.Context) CacheSpecOutput {
	return o
}

func (o CacheSpecOutput) ToCacheSpecPtrOutput() CacheSpecPtrOutput {
	return o.ToCacheSpecPtrOutputWithContext(context.Background())
}

func (o CacheSpecOutput) ToCacheSpecPtrOutputWithContext(ctx context.Context) CacheSpecPtrOutput {
	return o.ApplyT(func(v CacheSpec) *CacheSpec {
		return &v
	}).(CacheSpecPtrOutput)
}

// Authentication info
func (o CacheSpecOutput) AdminAuth() CacheSpecAdminAuthPtrOutput {
	return o.ApplyT(func(v CacheSpec) *CacheSpecAdminAuth { return v.AdminAuth }).(CacheSpecAdminAuthPtrOutput)
}

// Name of the cluster where to create the cache
func (o CacheSpecOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpec) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// Name of the cache to be created. If empty ObjectMeta.Name will be used
func (o CacheSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Cache template in XML format
func (o CacheSpecOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpec) *string { return v.Template }).(pulumi.StringPtrOutput)
}

// Name of the template to be used to create this cache
func (o CacheSpecOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpec) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

type CacheSpecPtrOutput struct{ *pulumi.OutputState }

func (CacheSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpec)(nil)).Elem()
}

func (o CacheSpecPtrOutput) ToCacheSpecPtrOutput() CacheSpecPtrOutput {
	return o
}

func (o CacheSpecPtrOutput) ToCacheSpecPtrOutputWithContext(ctx context.Context) CacheSpecPtrOutput {
	return o
}

func (o CacheSpecPtrOutput) Elem() CacheSpecOutput {
	return o.ApplyT(func(v *CacheSpec) CacheSpec { return *v }).(CacheSpecOutput)
}

// Authentication info
func (o CacheSpecPtrOutput) AdminAuth() CacheSpecAdminAuthPtrOutput {
	return o.ApplyT(func(v *CacheSpec) *CacheSpecAdminAuth {
		if v == nil {
			return nil
		}
		return v.AdminAuth
	}).(CacheSpecAdminAuthPtrOutput)
}

// Name of the cluster where to create the cache
func (o CacheSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// Name of the cache to be created. If empty ObjectMeta.Name will be used
func (o CacheSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpec) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Cache template in XML format
func (o CacheSpecPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpec) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// Name of the template to be used to create this cache
func (o CacheSpecPtrOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpec) *string {
		if v == nil {
			return nil
		}
		return v.TemplateName
	}).(pulumi.StringPtrOutput)
}

// Authentication info
type CacheSpecAdminAuth struct {
	// Secret and key containing the admin password for authentication.
	Password *CacheSpecAdminAuthPassword `pulumi:"password"`
	// name of the secret containing both admin username and password
	SecretName *string `pulumi:"secretName"`
	// Secret and key containing the admin username for authentication.
	Username *CacheSpecAdminAuthUsername `pulumi:"username"`
}

// CacheSpecAdminAuthInput is an input type that accepts CacheSpecAdminAuthArgs and CacheSpecAdminAuthOutput values.
// You can construct a concrete instance of `CacheSpecAdminAuthInput` via:
//
//          CacheSpecAdminAuthArgs{...}
type CacheSpecAdminAuthInput interface {
	pulumi.Input

	ToCacheSpecAdminAuthOutput() CacheSpecAdminAuthOutput
	ToCacheSpecAdminAuthOutputWithContext(context.Context) CacheSpecAdminAuthOutput
}

// Authentication info
type CacheSpecAdminAuthArgs struct {
	// Secret and key containing the admin password for authentication.
	Password CacheSpecAdminAuthPasswordPtrInput `pulumi:"password"`
	// name of the secret containing both admin username and password
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// Secret and key containing the admin username for authentication.
	Username CacheSpecAdminAuthUsernamePtrInput `pulumi:"username"`
}

func (CacheSpecAdminAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpecAdminAuth)(nil)).Elem()
}

func (i CacheSpecAdminAuthArgs) ToCacheSpecAdminAuthOutput() CacheSpecAdminAuthOutput {
	return i.ToCacheSpecAdminAuthOutputWithContext(context.Background())
}

func (i CacheSpecAdminAuthArgs) ToCacheSpecAdminAuthOutputWithContext(ctx context.Context) CacheSpecAdminAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthOutput)
}

func (i CacheSpecAdminAuthArgs) ToCacheSpecAdminAuthPtrOutput() CacheSpecAdminAuthPtrOutput {
	return i.ToCacheSpecAdminAuthPtrOutputWithContext(context.Background())
}

func (i CacheSpecAdminAuthArgs) ToCacheSpecAdminAuthPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthOutput).ToCacheSpecAdminAuthPtrOutputWithContext(ctx)
}

// CacheSpecAdminAuthPtrInput is an input type that accepts CacheSpecAdminAuthArgs, CacheSpecAdminAuthPtr and CacheSpecAdminAuthPtrOutput values.
// You can construct a concrete instance of `CacheSpecAdminAuthPtrInput` via:
//
//          CacheSpecAdminAuthArgs{...}
//
//  or:
//
//          nil
type CacheSpecAdminAuthPtrInput interface {
	pulumi.Input

	ToCacheSpecAdminAuthPtrOutput() CacheSpecAdminAuthPtrOutput
	ToCacheSpecAdminAuthPtrOutputWithContext(context.Context) CacheSpecAdminAuthPtrOutput
}

type cacheSpecAdminAuthPtrType CacheSpecAdminAuthArgs

func CacheSpecAdminAuthPtr(v *CacheSpecAdminAuthArgs) CacheSpecAdminAuthPtrInput {
	return (*cacheSpecAdminAuthPtrType)(v)
}

func (*cacheSpecAdminAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpecAdminAuth)(nil)).Elem()
}

func (i *cacheSpecAdminAuthPtrType) ToCacheSpecAdminAuthPtrOutput() CacheSpecAdminAuthPtrOutput {
	return i.ToCacheSpecAdminAuthPtrOutputWithContext(context.Background())
}

func (i *cacheSpecAdminAuthPtrType) ToCacheSpecAdminAuthPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthPtrOutput)
}

// Authentication info
type CacheSpecAdminAuthOutput struct{ *pulumi.OutputState }

func (CacheSpecAdminAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpecAdminAuth)(nil)).Elem()
}

func (o CacheSpecAdminAuthOutput) ToCacheSpecAdminAuthOutput() CacheSpecAdminAuthOutput {
	return o
}

func (o CacheSpecAdminAuthOutput) ToCacheSpecAdminAuthOutputWithContext(ctx context.Context) CacheSpecAdminAuthOutput {
	return o
}

func (o CacheSpecAdminAuthOutput) ToCacheSpecAdminAuthPtrOutput() CacheSpecAdminAuthPtrOutput {
	return o.ToCacheSpecAdminAuthPtrOutputWithContext(context.Background())
}

func (o CacheSpecAdminAuthOutput) ToCacheSpecAdminAuthPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuth) *CacheSpecAdminAuth {
		return &v
	}).(CacheSpecAdminAuthPtrOutput)
}

// Secret and key containing the admin password for authentication.
func (o CacheSpecAdminAuthOutput) Password() CacheSpecAdminAuthPasswordPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuth) *CacheSpecAdminAuthPassword { return v.Password }).(CacheSpecAdminAuthPasswordPtrOutput)
}

// name of the secret containing both admin username and password
func (o CacheSpecAdminAuthOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuth) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// Secret and key containing the admin username for authentication.
func (o CacheSpecAdminAuthOutput) Username() CacheSpecAdminAuthUsernamePtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuth) *CacheSpecAdminAuthUsername { return v.Username }).(CacheSpecAdminAuthUsernamePtrOutput)
}

type CacheSpecAdminAuthPtrOutput struct{ *pulumi.OutputState }

func (CacheSpecAdminAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpecAdminAuth)(nil)).Elem()
}

func (o CacheSpecAdminAuthPtrOutput) ToCacheSpecAdminAuthPtrOutput() CacheSpecAdminAuthPtrOutput {
	return o
}

func (o CacheSpecAdminAuthPtrOutput) ToCacheSpecAdminAuthPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPtrOutput {
	return o
}

func (o CacheSpecAdminAuthPtrOutput) Elem() CacheSpecAdminAuthOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuth) CacheSpecAdminAuth { return *v }).(CacheSpecAdminAuthOutput)
}

// Secret and key containing the admin password for authentication.
func (o CacheSpecAdminAuthPtrOutput) Password() CacheSpecAdminAuthPasswordPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuth) *CacheSpecAdminAuthPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(CacheSpecAdminAuthPasswordPtrOutput)
}

// name of the secret containing both admin username and password
func (o CacheSpecAdminAuthPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuth) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Secret and key containing the admin username for authentication.
func (o CacheSpecAdminAuthPtrOutput) Username() CacheSpecAdminAuthUsernamePtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuth) *CacheSpecAdminAuthUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(CacheSpecAdminAuthUsernamePtrOutput)
}

// Secret and key containing the admin password for authentication.
type CacheSpecAdminAuthPassword struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// CacheSpecAdminAuthPasswordInput is an input type that accepts CacheSpecAdminAuthPasswordArgs and CacheSpecAdminAuthPasswordOutput values.
// You can construct a concrete instance of `CacheSpecAdminAuthPasswordInput` via:
//
//          CacheSpecAdminAuthPasswordArgs{...}
type CacheSpecAdminAuthPasswordInput interface {
	pulumi.Input

	ToCacheSpecAdminAuthPasswordOutput() CacheSpecAdminAuthPasswordOutput
	ToCacheSpecAdminAuthPasswordOutputWithContext(context.Context) CacheSpecAdminAuthPasswordOutput
}

// Secret and key containing the admin password for authentication.
type CacheSpecAdminAuthPasswordArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (CacheSpecAdminAuthPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpecAdminAuthPassword)(nil)).Elem()
}

func (i CacheSpecAdminAuthPasswordArgs) ToCacheSpecAdminAuthPasswordOutput() CacheSpecAdminAuthPasswordOutput {
	return i.ToCacheSpecAdminAuthPasswordOutputWithContext(context.Background())
}

func (i CacheSpecAdminAuthPasswordArgs) ToCacheSpecAdminAuthPasswordOutputWithContext(ctx context.Context) CacheSpecAdminAuthPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthPasswordOutput)
}

func (i CacheSpecAdminAuthPasswordArgs) ToCacheSpecAdminAuthPasswordPtrOutput() CacheSpecAdminAuthPasswordPtrOutput {
	return i.ToCacheSpecAdminAuthPasswordPtrOutputWithContext(context.Background())
}

func (i CacheSpecAdminAuthPasswordArgs) ToCacheSpecAdminAuthPasswordPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthPasswordOutput).ToCacheSpecAdminAuthPasswordPtrOutputWithContext(ctx)
}

// CacheSpecAdminAuthPasswordPtrInput is an input type that accepts CacheSpecAdminAuthPasswordArgs, CacheSpecAdminAuthPasswordPtr and CacheSpecAdminAuthPasswordPtrOutput values.
// You can construct a concrete instance of `CacheSpecAdminAuthPasswordPtrInput` via:
//
//          CacheSpecAdminAuthPasswordArgs{...}
//
//  or:
//
//          nil
type CacheSpecAdminAuthPasswordPtrInput interface {
	pulumi.Input

	ToCacheSpecAdminAuthPasswordPtrOutput() CacheSpecAdminAuthPasswordPtrOutput
	ToCacheSpecAdminAuthPasswordPtrOutputWithContext(context.Context) CacheSpecAdminAuthPasswordPtrOutput
}

type cacheSpecAdminAuthPasswordPtrType CacheSpecAdminAuthPasswordArgs

func CacheSpecAdminAuthPasswordPtr(v *CacheSpecAdminAuthPasswordArgs) CacheSpecAdminAuthPasswordPtrInput {
	return (*cacheSpecAdminAuthPasswordPtrType)(v)
}

func (*cacheSpecAdminAuthPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpecAdminAuthPassword)(nil)).Elem()
}

func (i *cacheSpecAdminAuthPasswordPtrType) ToCacheSpecAdminAuthPasswordPtrOutput() CacheSpecAdminAuthPasswordPtrOutput {
	return i.ToCacheSpecAdminAuthPasswordPtrOutputWithContext(context.Background())
}

func (i *cacheSpecAdminAuthPasswordPtrType) ToCacheSpecAdminAuthPasswordPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthPasswordPtrOutput)
}

// Secret and key containing the admin password for authentication.
type CacheSpecAdminAuthPasswordOutput struct{ *pulumi.OutputState }

func (CacheSpecAdminAuthPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpecAdminAuthPassword)(nil)).Elem()
}

func (o CacheSpecAdminAuthPasswordOutput) ToCacheSpecAdminAuthPasswordOutput() CacheSpecAdminAuthPasswordOutput {
	return o
}

func (o CacheSpecAdminAuthPasswordOutput) ToCacheSpecAdminAuthPasswordOutputWithContext(ctx context.Context) CacheSpecAdminAuthPasswordOutput {
	return o
}

func (o CacheSpecAdminAuthPasswordOutput) ToCacheSpecAdminAuthPasswordPtrOutput() CacheSpecAdminAuthPasswordPtrOutput {
	return o.ToCacheSpecAdminAuthPasswordPtrOutputWithContext(context.Background())
}

func (o CacheSpecAdminAuthPasswordOutput) ToCacheSpecAdminAuthPasswordPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPasswordPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthPassword) *CacheSpecAdminAuthPassword {
		return &v
	}).(CacheSpecAdminAuthPasswordPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o CacheSpecAdminAuthPasswordOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthPassword) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o CacheSpecAdminAuthPasswordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthPassword) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o CacheSpecAdminAuthPasswordOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthPassword) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type CacheSpecAdminAuthPasswordPtrOutput struct{ *pulumi.OutputState }

func (CacheSpecAdminAuthPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpecAdminAuthPassword)(nil)).Elem()
}

func (o CacheSpecAdminAuthPasswordPtrOutput) ToCacheSpecAdminAuthPasswordPtrOutput() CacheSpecAdminAuthPasswordPtrOutput {
	return o
}

func (o CacheSpecAdminAuthPasswordPtrOutput) ToCacheSpecAdminAuthPasswordPtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthPasswordPtrOutput {
	return o
}

func (o CacheSpecAdminAuthPasswordPtrOutput) Elem() CacheSpecAdminAuthPasswordOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthPassword) CacheSpecAdminAuthPassword { return *v }).(CacheSpecAdminAuthPasswordOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o CacheSpecAdminAuthPasswordPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthPassword) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o CacheSpecAdminAuthPasswordPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o CacheSpecAdminAuthPasswordPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthPassword) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret and key containing the admin username for authentication.
type CacheSpecAdminAuthUsername struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key string `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// CacheSpecAdminAuthUsernameInput is an input type that accepts CacheSpecAdminAuthUsernameArgs and CacheSpecAdminAuthUsernameOutput values.
// You can construct a concrete instance of `CacheSpecAdminAuthUsernameInput` via:
//
//          CacheSpecAdminAuthUsernameArgs{...}
type CacheSpecAdminAuthUsernameInput interface {
	pulumi.Input

	ToCacheSpecAdminAuthUsernameOutput() CacheSpecAdminAuthUsernameOutput
	ToCacheSpecAdminAuthUsernameOutputWithContext(context.Context) CacheSpecAdminAuthUsernameOutput
}

// Secret and key containing the admin username for authentication.
type CacheSpecAdminAuthUsernameArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (CacheSpecAdminAuthUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpecAdminAuthUsername)(nil)).Elem()
}

func (i CacheSpecAdminAuthUsernameArgs) ToCacheSpecAdminAuthUsernameOutput() CacheSpecAdminAuthUsernameOutput {
	return i.ToCacheSpecAdminAuthUsernameOutputWithContext(context.Background())
}

func (i CacheSpecAdminAuthUsernameArgs) ToCacheSpecAdminAuthUsernameOutputWithContext(ctx context.Context) CacheSpecAdminAuthUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthUsernameOutput)
}

func (i CacheSpecAdminAuthUsernameArgs) ToCacheSpecAdminAuthUsernamePtrOutput() CacheSpecAdminAuthUsernamePtrOutput {
	return i.ToCacheSpecAdminAuthUsernamePtrOutputWithContext(context.Background())
}

func (i CacheSpecAdminAuthUsernameArgs) ToCacheSpecAdminAuthUsernamePtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthUsernameOutput).ToCacheSpecAdminAuthUsernamePtrOutputWithContext(ctx)
}

// CacheSpecAdminAuthUsernamePtrInput is an input type that accepts CacheSpecAdminAuthUsernameArgs, CacheSpecAdminAuthUsernamePtr and CacheSpecAdminAuthUsernamePtrOutput values.
// You can construct a concrete instance of `CacheSpecAdminAuthUsernamePtrInput` via:
//
//          CacheSpecAdminAuthUsernameArgs{...}
//
//  or:
//
//          nil
type CacheSpecAdminAuthUsernamePtrInput interface {
	pulumi.Input

	ToCacheSpecAdminAuthUsernamePtrOutput() CacheSpecAdminAuthUsernamePtrOutput
	ToCacheSpecAdminAuthUsernamePtrOutputWithContext(context.Context) CacheSpecAdminAuthUsernamePtrOutput
}

type cacheSpecAdminAuthUsernamePtrType CacheSpecAdminAuthUsernameArgs

func CacheSpecAdminAuthUsernamePtr(v *CacheSpecAdminAuthUsernameArgs) CacheSpecAdminAuthUsernamePtrInput {
	return (*cacheSpecAdminAuthUsernamePtrType)(v)
}

func (*cacheSpecAdminAuthUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpecAdminAuthUsername)(nil)).Elem()
}

func (i *cacheSpecAdminAuthUsernamePtrType) ToCacheSpecAdminAuthUsernamePtrOutput() CacheSpecAdminAuthUsernamePtrOutput {
	return i.ToCacheSpecAdminAuthUsernamePtrOutputWithContext(context.Background())
}

func (i *cacheSpecAdminAuthUsernamePtrType) ToCacheSpecAdminAuthUsernamePtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheSpecAdminAuthUsernamePtrOutput)
}

// Secret and key containing the admin username for authentication.
type CacheSpecAdminAuthUsernameOutput struct{ *pulumi.OutputState }

func (CacheSpecAdminAuthUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheSpecAdminAuthUsername)(nil)).Elem()
}

func (o CacheSpecAdminAuthUsernameOutput) ToCacheSpecAdminAuthUsernameOutput() CacheSpecAdminAuthUsernameOutput {
	return o
}

func (o CacheSpecAdminAuthUsernameOutput) ToCacheSpecAdminAuthUsernameOutputWithContext(ctx context.Context) CacheSpecAdminAuthUsernameOutput {
	return o
}

func (o CacheSpecAdminAuthUsernameOutput) ToCacheSpecAdminAuthUsernamePtrOutput() CacheSpecAdminAuthUsernamePtrOutput {
	return o.ToCacheSpecAdminAuthUsernamePtrOutputWithContext(context.Background())
}

func (o CacheSpecAdminAuthUsernameOutput) ToCacheSpecAdminAuthUsernamePtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthUsernamePtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthUsername) *CacheSpecAdminAuthUsername {
		return &v
	}).(CacheSpecAdminAuthUsernamePtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o CacheSpecAdminAuthUsernameOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthUsername) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o CacheSpecAdminAuthUsernameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthUsername) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o CacheSpecAdminAuthUsernameOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CacheSpecAdminAuthUsername) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type CacheSpecAdminAuthUsernamePtrOutput struct{ *pulumi.OutputState }

func (CacheSpecAdminAuthUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheSpecAdminAuthUsername)(nil)).Elem()
}

func (o CacheSpecAdminAuthUsernamePtrOutput) ToCacheSpecAdminAuthUsernamePtrOutput() CacheSpecAdminAuthUsernamePtrOutput {
	return o
}

func (o CacheSpecAdminAuthUsernamePtrOutput) ToCacheSpecAdminAuthUsernamePtrOutputWithContext(ctx context.Context) CacheSpecAdminAuthUsernamePtrOutput {
	return o
}

func (o CacheSpecAdminAuthUsernamePtrOutput) Elem() CacheSpecAdminAuthUsernameOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthUsername) CacheSpecAdminAuthUsername { return *v }).(CacheSpecAdminAuthUsernameOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o CacheSpecAdminAuthUsernamePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthUsername) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o CacheSpecAdminAuthUsernamePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o CacheSpecAdminAuthUsernamePtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CacheSpecAdminAuthUsername) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// CacheStatus defines the observed state of Cache
type CacheStatus struct {
	// Conditions list for this cache
	Conditions []CacheStatusConditions `pulumi:"conditions"`
	// Service name that exposes the cache inside the cluster
	ServiceName *string `pulumi:"serviceName"`
}

// CacheStatusInput is an input type that accepts CacheStatusArgs and CacheStatusOutput values.
// You can construct a concrete instance of `CacheStatusInput` via:
//
//          CacheStatusArgs{...}
type CacheStatusInput interface {
	pulumi.Input

	ToCacheStatusOutput() CacheStatusOutput
	ToCacheStatusOutputWithContext(context.Context) CacheStatusOutput
}

// CacheStatus defines the observed state of Cache
type CacheStatusArgs struct {
	// Conditions list for this cache
	Conditions CacheStatusConditionsArrayInput `pulumi:"conditions"`
	// Service name that exposes the cache inside the cluster
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (CacheStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheStatus)(nil)).Elem()
}

func (i CacheStatusArgs) ToCacheStatusOutput() CacheStatusOutput {
	return i.ToCacheStatusOutputWithContext(context.Background())
}

func (i CacheStatusArgs) ToCacheStatusOutputWithContext(ctx context.Context) CacheStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheStatusOutput)
}

func (i CacheStatusArgs) ToCacheStatusPtrOutput() CacheStatusPtrOutput {
	return i.ToCacheStatusPtrOutputWithContext(context.Background())
}

func (i CacheStatusArgs) ToCacheStatusPtrOutputWithContext(ctx context.Context) CacheStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheStatusOutput).ToCacheStatusPtrOutputWithContext(ctx)
}

// CacheStatusPtrInput is an input type that accepts CacheStatusArgs, CacheStatusPtr and CacheStatusPtrOutput values.
// You can construct a concrete instance of `CacheStatusPtrInput` via:
//
//          CacheStatusArgs{...}
//
//  or:
//
//          nil
type CacheStatusPtrInput interface {
	pulumi.Input

	ToCacheStatusPtrOutput() CacheStatusPtrOutput
	ToCacheStatusPtrOutputWithContext(context.Context) CacheStatusPtrOutput
}

type cacheStatusPtrType CacheStatusArgs

func CacheStatusPtr(v *CacheStatusArgs) CacheStatusPtrInput {
	return (*cacheStatusPtrType)(v)
}

func (*cacheStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheStatus)(nil)).Elem()
}

func (i *cacheStatusPtrType) ToCacheStatusPtrOutput() CacheStatusPtrOutput {
	return i.ToCacheStatusPtrOutputWithContext(context.Background())
}

func (i *cacheStatusPtrType) ToCacheStatusPtrOutputWithContext(ctx context.Context) CacheStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheStatusPtrOutput)
}

// CacheStatus defines the observed state of Cache
type CacheStatusOutput struct{ *pulumi.OutputState }

func (CacheStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheStatus)(nil)).Elem()
}

func (o CacheStatusOutput) ToCacheStatusOutput() CacheStatusOutput {
	return o
}

func (o CacheStatusOutput) ToCacheStatusOutputWithContext(ctx context.Context) CacheStatusOutput {
	return o
}

func (o CacheStatusOutput) ToCacheStatusPtrOutput() CacheStatusPtrOutput {
	return o.ToCacheStatusPtrOutputWithContext(context.Background())
}

func (o CacheStatusOutput) ToCacheStatusPtrOutputWithContext(ctx context.Context) CacheStatusPtrOutput {
	return o.ApplyT(func(v CacheStatus) *CacheStatus {
		return &v
	}).(CacheStatusPtrOutput)
}

// Conditions list for this cache
func (o CacheStatusOutput) Conditions() CacheStatusConditionsArrayOutput {
	return o.ApplyT(func(v CacheStatus) []CacheStatusConditions { return v.Conditions }).(CacheStatusConditionsArrayOutput)
}

// Service name that exposes the cache inside the cluster
func (o CacheStatusOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheStatus) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type CacheStatusPtrOutput struct{ *pulumi.OutputState }

func (CacheStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheStatus)(nil)).Elem()
}

func (o CacheStatusPtrOutput) ToCacheStatusPtrOutput() CacheStatusPtrOutput {
	return o
}

func (o CacheStatusPtrOutput) ToCacheStatusPtrOutputWithContext(ctx context.Context) CacheStatusPtrOutput {
	return o
}

func (o CacheStatusPtrOutput) Elem() CacheStatusOutput {
	return o.ApplyT(func(v *CacheStatus) CacheStatus { return *v }).(CacheStatusOutput)
}

// Conditions list for this cache
func (o CacheStatusPtrOutput) Conditions() CacheStatusConditionsArrayOutput {
	return o.ApplyT(func(v *CacheStatus) []CacheStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(CacheStatusConditionsArrayOutput)
}

// Service name that exposes the cache inside the cluster
func (o CacheStatusPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheStatus) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// CacheCondition define a condition of the cluster
type CacheStatusConditions struct {
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// Status is the status of the condition.
	Status string `pulumi:"status"`
	// Type is the type of the condition.
	Type string `pulumi:"type"`
}

// CacheStatusConditionsInput is an input type that accepts CacheStatusConditionsArgs and CacheStatusConditionsOutput values.
// You can construct a concrete instance of `CacheStatusConditionsInput` via:
//
//          CacheStatusConditionsArgs{...}
type CacheStatusConditionsInput interface {
	pulumi.Input

	ToCacheStatusConditionsOutput() CacheStatusConditionsOutput
	ToCacheStatusConditionsOutputWithContext(context.Context) CacheStatusConditionsOutput
}

// CacheCondition define a condition of the cluster
type CacheStatusConditionsArgs struct {
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Status is the status of the condition.
	Status pulumi.StringInput `pulumi:"status"`
	// Type is the type of the condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CacheStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheStatusConditions)(nil)).Elem()
}

func (i CacheStatusConditionsArgs) ToCacheStatusConditionsOutput() CacheStatusConditionsOutput {
	return i.ToCacheStatusConditionsOutputWithContext(context.Background())
}

func (i CacheStatusConditionsArgs) ToCacheStatusConditionsOutputWithContext(ctx context.Context) CacheStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheStatusConditionsOutput)
}

// CacheStatusConditionsArrayInput is an input type that accepts CacheStatusConditionsArray and CacheStatusConditionsArrayOutput values.
// You can construct a concrete instance of `CacheStatusConditionsArrayInput` via:
//
//          CacheStatusConditionsArray{ CacheStatusConditionsArgs{...} }
type CacheStatusConditionsArrayInput interface {
	pulumi.Input

	ToCacheStatusConditionsArrayOutput() CacheStatusConditionsArrayOutput
	ToCacheStatusConditionsArrayOutputWithContext(context.Context) CacheStatusConditionsArrayOutput
}

type CacheStatusConditionsArray []CacheStatusConditionsInput

func (CacheStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CacheStatusConditions)(nil)).Elem()
}

func (i CacheStatusConditionsArray) ToCacheStatusConditionsArrayOutput() CacheStatusConditionsArrayOutput {
	return i.ToCacheStatusConditionsArrayOutputWithContext(context.Background())
}

func (i CacheStatusConditionsArray) ToCacheStatusConditionsArrayOutputWithContext(ctx context.Context) CacheStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheStatusConditionsArrayOutput)
}

// CacheCondition define a condition of the cluster
type CacheStatusConditionsOutput struct{ *pulumi.OutputState }

func (CacheStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheStatusConditions)(nil)).Elem()
}

func (o CacheStatusConditionsOutput) ToCacheStatusConditionsOutput() CacheStatusConditionsOutput {
	return o
}

func (o CacheStatusConditionsOutput) ToCacheStatusConditionsOutputWithContext(ctx context.Context) CacheStatusConditionsOutput {
	return o
}

// Human-readable message indicating details about last transition.
func (o CacheStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Status is the status of the condition.
func (o CacheStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CacheStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type is the type of the condition.
func (o CacheStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CacheStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type CacheStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (CacheStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CacheStatusConditions)(nil)).Elem()
}

func (o CacheStatusConditionsArrayOutput) ToCacheStatusConditionsArrayOutput() CacheStatusConditionsArrayOutput {
	return o
}

func (o CacheStatusConditionsArrayOutput) ToCacheStatusConditionsArrayOutputWithContext(ctx context.Context) CacheStatusConditionsArrayOutput {
	return o
}

func (o CacheStatusConditionsArrayOutput) Index(i pulumi.IntInput) CacheStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CacheStatusConditions {
		return vs[0].([]CacheStatusConditions)[vs[1].(int)]
	}).(CacheStatusConditionsOutput)
}

// Restore is the Schema for the restores API
type RestoreType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// BackupSpec defines the desired state of Backup
	Spec *RestoreSpec `pulumi:"spec"`
	// RestoreStatus defines the observed state of Restore
	Status *RestoreStatus `pulumi:"status"`
}

// RestoreTypeInput is an input type that accepts RestoreTypeArgs and RestoreTypeOutput values.
// You can construct a concrete instance of `RestoreTypeInput` via:
//
//          RestoreTypeArgs{...}
type RestoreTypeInput interface {
	pulumi.Input

	ToRestoreTypeOutput() RestoreTypeOutput
	ToRestoreTypeOutputWithContext(context.Context) RestoreTypeOutput
}

// Restore is the Schema for the restores API
type RestoreTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// BackupSpec defines the desired state of Backup
	Spec RestoreSpecPtrInput `pulumi:"spec"`
	// RestoreStatus defines the observed state of Restore
	Status RestoreStatusPtrInput `pulumi:"status"`
}

func (RestoreTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreType)(nil)).Elem()
}

func (i RestoreTypeArgs) ToRestoreTypeOutput() RestoreTypeOutput {
	return i.ToRestoreTypeOutputWithContext(context.Background())
}

func (i RestoreTypeArgs) ToRestoreTypeOutputWithContext(ctx context.Context) RestoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreTypeOutput)
}

// Restore is the Schema for the restores API
type RestoreTypeOutput struct{ *pulumi.OutputState }

func (RestoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreType)(nil)).Elem()
}

func (o RestoreTypeOutput) ToRestoreTypeOutput() RestoreTypeOutput {
	return o
}

func (o RestoreTypeOutput) ToRestoreTypeOutputWithContext(ctx context.Context) RestoreTypeOutput {
	return o
}

func (o RestoreTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o RestoreTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o RestoreTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v RestoreType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// BackupSpec defines the desired state of Backup
func (o RestoreTypeOutput) Spec() RestoreSpecPtrOutput {
	return o.ApplyT(func(v RestoreType) *RestoreSpec { return v.Spec }).(RestoreSpecPtrOutput)
}

// RestoreStatus defines the observed state of Restore
func (o RestoreTypeOutput) Status() RestoreStatusPtrOutput {
	return o.ApplyT(func(v RestoreType) *RestoreStatus { return v.Status }).(RestoreStatusPtrOutput)
}

type RestoreMetadata struct {
}

// RestoreMetadataInput is an input type that accepts RestoreMetadataArgs and RestoreMetadataOutput values.
// You can construct a concrete instance of `RestoreMetadataInput` via:
//
//          RestoreMetadataArgs{...}
type RestoreMetadataInput interface {
	pulumi.Input

	ToRestoreMetadataOutput() RestoreMetadataOutput
	ToRestoreMetadataOutputWithContext(context.Context) RestoreMetadataOutput
}

type RestoreMetadataArgs struct {
}

func (RestoreMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreMetadata)(nil)).Elem()
}

func (i RestoreMetadataArgs) ToRestoreMetadataOutput() RestoreMetadataOutput {
	return i.ToRestoreMetadataOutputWithContext(context.Background())
}

func (i RestoreMetadataArgs) ToRestoreMetadataOutputWithContext(ctx context.Context) RestoreMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreMetadataOutput)
}

type RestoreMetadataOutput struct{ *pulumi.OutputState }

func (RestoreMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreMetadata)(nil)).Elem()
}

func (o RestoreMetadataOutput) ToRestoreMetadataOutput() RestoreMetadataOutput {
	return o
}

func (o RestoreMetadataOutput) ToRestoreMetadataOutputWithContext(ctx context.Context) RestoreMetadataOutput {
	return o
}

// BackupSpec defines the desired state of Backup
type RestoreSpec struct {
	Backup  string `pulumi:"backup"`
	Cluster string `pulumi:"cluster"`
	// InfinispanContainerSpec specify resource requirements per container
	Container *RestoreSpecContainer `pulumi:"container"`
	Resources *RestoreSpecResources `pulumi:"resources"`
}

// RestoreSpecInput is an input type that accepts RestoreSpecArgs and RestoreSpecOutput values.
// You can construct a concrete instance of `RestoreSpecInput` via:
//
//          RestoreSpecArgs{...}
type RestoreSpecInput interface {
	pulumi.Input

	ToRestoreSpecOutput() RestoreSpecOutput
	ToRestoreSpecOutputWithContext(context.Context) RestoreSpecOutput
}

// BackupSpec defines the desired state of Backup
type RestoreSpecArgs struct {
	Backup  pulumi.StringInput `pulumi:"backup"`
	Cluster pulumi.StringInput `pulumi:"cluster"`
	// InfinispanContainerSpec specify resource requirements per container
	Container RestoreSpecContainerPtrInput `pulumi:"container"`
	Resources RestoreSpecResourcesPtrInput `pulumi:"resources"`
}

func (RestoreSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSpec)(nil)).Elem()
}

func (i RestoreSpecArgs) ToRestoreSpecOutput() RestoreSpecOutput {
	return i.ToRestoreSpecOutputWithContext(context.Background())
}

func (i RestoreSpecArgs) ToRestoreSpecOutputWithContext(ctx context.Context) RestoreSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecOutput)
}

func (i RestoreSpecArgs) ToRestoreSpecPtrOutput() RestoreSpecPtrOutput {
	return i.ToRestoreSpecPtrOutputWithContext(context.Background())
}

func (i RestoreSpecArgs) ToRestoreSpecPtrOutputWithContext(ctx context.Context) RestoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecOutput).ToRestoreSpecPtrOutputWithContext(ctx)
}

// RestoreSpecPtrInput is an input type that accepts RestoreSpecArgs, RestoreSpecPtr and RestoreSpecPtrOutput values.
// You can construct a concrete instance of `RestoreSpecPtrInput` via:
//
//          RestoreSpecArgs{...}
//
//  or:
//
//          nil
type RestoreSpecPtrInput interface {
	pulumi.Input

	ToRestoreSpecPtrOutput() RestoreSpecPtrOutput
	ToRestoreSpecPtrOutputWithContext(context.Context) RestoreSpecPtrOutput
}

type restoreSpecPtrType RestoreSpecArgs

func RestoreSpecPtr(v *RestoreSpecArgs) RestoreSpecPtrInput {
	return (*restoreSpecPtrType)(v)
}

func (*restoreSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSpec)(nil)).Elem()
}

func (i *restoreSpecPtrType) ToRestoreSpecPtrOutput() RestoreSpecPtrOutput {
	return i.ToRestoreSpecPtrOutputWithContext(context.Background())
}

func (i *restoreSpecPtrType) ToRestoreSpecPtrOutputWithContext(ctx context.Context) RestoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecPtrOutput)
}

// BackupSpec defines the desired state of Backup
type RestoreSpecOutput struct{ *pulumi.OutputState }

func (RestoreSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSpec)(nil)).Elem()
}

func (o RestoreSpecOutput) ToRestoreSpecOutput() RestoreSpecOutput {
	return o
}

func (o RestoreSpecOutput) ToRestoreSpecOutputWithContext(ctx context.Context) RestoreSpecOutput {
	return o
}

func (o RestoreSpecOutput) ToRestoreSpecPtrOutput() RestoreSpecPtrOutput {
	return o.ToRestoreSpecPtrOutputWithContext(context.Background())
}

func (o RestoreSpecOutput) ToRestoreSpecPtrOutputWithContext(ctx context.Context) RestoreSpecPtrOutput {
	return o.ApplyT(func(v RestoreSpec) *RestoreSpec {
		return &v
	}).(RestoreSpecPtrOutput)
}
func (o RestoreSpecOutput) Backup() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreSpec) string { return v.Backup }).(pulumi.StringOutput)
}

func (o RestoreSpecOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreSpec) string { return v.Cluster }).(pulumi.StringOutput)
}

// InfinispanContainerSpec specify resource requirements per container
func (o RestoreSpecOutput) Container() RestoreSpecContainerPtrOutput {
	return o.ApplyT(func(v RestoreSpec) *RestoreSpecContainer { return v.Container }).(RestoreSpecContainerPtrOutput)
}

func (o RestoreSpecOutput) Resources() RestoreSpecResourcesPtrOutput {
	return o.ApplyT(func(v RestoreSpec) *RestoreSpecResources { return v.Resources }).(RestoreSpecResourcesPtrOutput)
}

type RestoreSpecPtrOutput struct{ *pulumi.OutputState }

func (RestoreSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSpec)(nil)).Elem()
}

func (o RestoreSpecPtrOutput) ToRestoreSpecPtrOutput() RestoreSpecPtrOutput {
	return o
}

func (o RestoreSpecPtrOutput) ToRestoreSpecPtrOutputWithContext(ctx context.Context) RestoreSpecPtrOutput {
	return o
}

func (o RestoreSpecPtrOutput) Elem() RestoreSpecOutput {
	return o.ApplyT(func(v *RestoreSpec) RestoreSpec { return *v }).(RestoreSpecOutput)
}

func (o RestoreSpecPtrOutput) Backup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Backup
	}).(pulumi.StringPtrOutput)
}

func (o RestoreSpecPtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(pulumi.StringPtrOutput)
}

// InfinispanContainerSpec specify resource requirements per container
func (o RestoreSpecPtrOutput) Container() RestoreSpecContainerPtrOutput {
	return o.ApplyT(func(v *RestoreSpec) *RestoreSpecContainer {
		if v == nil {
			return nil
		}
		return v.Container
	}).(RestoreSpecContainerPtrOutput)
}

func (o RestoreSpecPtrOutput) Resources() RestoreSpecResourcesPtrOutput {
	return o.ApplyT(func(v *RestoreSpec) *RestoreSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(RestoreSpecResourcesPtrOutput)
}

// InfinispanContainerSpec specify resource requirements per container
type RestoreSpecContainer struct {
	Cpu          *string `pulumi:"cpu"`
	ExtraJvmOpts *string `pulumi:"extraJvmOpts"`
	Memory       *string `pulumi:"memory"`
}

// RestoreSpecContainerInput is an input type that accepts RestoreSpecContainerArgs and RestoreSpecContainerOutput values.
// You can construct a concrete instance of `RestoreSpecContainerInput` via:
//
//          RestoreSpecContainerArgs{...}
type RestoreSpecContainerInput interface {
	pulumi.Input

	ToRestoreSpecContainerOutput() RestoreSpecContainerOutput
	ToRestoreSpecContainerOutputWithContext(context.Context) RestoreSpecContainerOutput
}

// InfinispanContainerSpec specify resource requirements per container
type RestoreSpecContainerArgs struct {
	Cpu          pulumi.StringPtrInput `pulumi:"cpu"`
	ExtraJvmOpts pulumi.StringPtrInput `pulumi:"extraJvmOpts"`
	Memory       pulumi.StringPtrInput `pulumi:"memory"`
}

func (RestoreSpecContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSpecContainer)(nil)).Elem()
}

func (i RestoreSpecContainerArgs) ToRestoreSpecContainerOutput() RestoreSpecContainerOutput {
	return i.ToRestoreSpecContainerOutputWithContext(context.Background())
}

func (i RestoreSpecContainerArgs) ToRestoreSpecContainerOutputWithContext(ctx context.Context) RestoreSpecContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecContainerOutput)
}

func (i RestoreSpecContainerArgs) ToRestoreSpecContainerPtrOutput() RestoreSpecContainerPtrOutput {
	return i.ToRestoreSpecContainerPtrOutputWithContext(context.Background())
}

func (i RestoreSpecContainerArgs) ToRestoreSpecContainerPtrOutputWithContext(ctx context.Context) RestoreSpecContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecContainerOutput).ToRestoreSpecContainerPtrOutputWithContext(ctx)
}

// RestoreSpecContainerPtrInput is an input type that accepts RestoreSpecContainerArgs, RestoreSpecContainerPtr and RestoreSpecContainerPtrOutput values.
// You can construct a concrete instance of `RestoreSpecContainerPtrInput` via:
//
//          RestoreSpecContainerArgs{...}
//
//  or:
//
//          nil
type RestoreSpecContainerPtrInput interface {
	pulumi.Input

	ToRestoreSpecContainerPtrOutput() RestoreSpecContainerPtrOutput
	ToRestoreSpecContainerPtrOutputWithContext(context.Context) RestoreSpecContainerPtrOutput
}

type restoreSpecContainerPtrType RestoreSpecContainerArgs

func RestoreSpecContainerPtr(v *RestoreSpecContainerArgs) RestoreSpecContainerPtrInput {
	return (*restoreSpecContainerPtrType)(v)
}

func (*restoreSpecContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSpecContainer)(nil)).Elem()
}

func (i *restoreSpecContainerPtrType) ToRestoreSpecContainerPtrOutput() RestoreSpecContainerPtrOutput {
	return i.ToRestoreSpecContainerPtrOutputWithContext(context.Background())
}

func (i *restoreSpecContainerPtrType) ToRestoreSpecContainerPtrOutputWithContext(ctx context.Context) RestoreSpecContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecContainerPtrOutput)
}

// InfinispanContainerSpec specify resource requirements per container
type RestoreSpecContainerOutput struct{ *pulumi.OutputState }

func (RestoreSpecContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSpecContainer)(nil)).Elem()
}

func (o RestoreSpecContainerOutput) ToRestoreSpecContainerOutput() RestoreSpecContainerOutput {
	return o
}

func (o RestoreSpecContainerOutput) ToRestoreSpecContainerOutputWithContext(ctx context.Context) RestoreSpecContainerOutput {
	return o
}

func (o RestoreSpecContainerOutput) ToRestoreSpecContainerPtrOutput() RestoreSpecContainerPtrOutput {
	return o.ToRestoreSpecContainerPtrOutputWithContext(context.Background())
}

func (o RestoreSpecContainerOutput) ToRestoreSpecContainerPtrOutputWithContext(ctx context.Context) RestoreSpecContainerPtrOutput {
	return o.ApplyT(func(v RestoreSpecContainer) *RestoreSpecContainer {
		return &v
	}).(RestoreSpecContainerPtrOutput)
}
func (o RestoreSpecContainerOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreSpecContainer) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

func (o RestoreSpecContainerOutput) ExtraJvmOpts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreSpecContainer) *string { return v.ExtraJvmOpts }).(pulumi.StringPtrOutput)
}

func (o RestoreSpecContainerOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreSpecContainer) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type RestoreSpecContainerPtrOutput struct{ *pulumi.OutputState }

func (RestoreSpecContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSpecContainer)(nil)).Elem()
}

func (o RestoreSpecContainerPtrOutput) ToRestoreSpecContainerPtrOutput() RestoreSpecContainerPtrOutput {
	return o
}

func (o RestoreSpecContainerPtrOutput) ToRestoreSpecContainerPtrOutputWithContext(ctx context.Context) RestoreSpecContainerPtrOutput {
	return o
}

func (o RestoreSpecContainerPtrOutput) Elem() RestoreSpecContainerOutput {
	return o.ApplyT(func(v *RestoreSpecContainer) RestoreSpecContainer { return *v }).(RestoreSpecContainerOutput)
}

func (o RestoreSpecContainerPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreSpecContainer) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

func (o RestoreSpecContainerPtrOutput) ExtraJvmOpts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreSpecContainer) *string {
		if v == nil {
			return nil
		}
		return v.ExtraJvmOpts
	}).(pulumi.StringPtrOutput)
}

func (o RestoreSpecContainerPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreSpecContainer) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

type RestoreSpecResources struct {
	CacheConfigs []string `pulumi:"cacheConfigs"`
	Caches       []string `pulumi:"caches"`
	Counters     []string `pulumi:"counters"`
	ProtoSchemas []string `pulumi:"protoSchemas"`
	Scripts      []string `pulumi:"scripts"`
}

// RestoreSpecResourcesInput is an input type that accepts RestoreSpecResourcesArgs and RestoreSpecResourcesOutput values.
// You can construct a concrete instance of `RestoreSpecResourcesInput` via:
//
//          RestoreSpecResourcesArgs{...}
type RestoreSpecResourcesInput interface {
	pulumi.Input

	ToRestoreSpecResourcesOutput() RestoreSpecResourcesOutput
	ToRestoreSpecResourcesOutputWithContext(context.Context) RestoreSpecResourcesOutput
}

type RestoreSpecResourcesArgs struct {
	CacheConfigs pulumi.StringArrayInput `pulumi:"cacheConfigs"`
	Caches       pulumi.StringArrayInput `pulumi:"caches"`
	Counters     pulumi.StringArrayInput `pulumi:"counters"`
	ProtoSchemas pulumi.StringArrayInput `pulumi:"protoSchemas"`
	Scripts      pulumi.StringArrayInput `pulumi:"scripts"`
}

func (RestoreSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSpecResources)(nil)).Elem()
}

func (i RestoreSpecResourcesArgs) ToRestoreSpecResourcesOutput() RestoreSpecResourcesOutput {
	return i.ToRestoreSpecResourcesOutputWithContext(context.Background())
}

func (i RestoreSpecResourcesArgs) ToRestoreSpecResourcesOutputWithContext(ctx context.Context) RestoreSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecResourcesOutput)
}

func (i RestoreSpecResourcesArgs) ToRestoreSpecResourcesPtrOutput() RestoreSpecResourcesPtrOutput {
	return i.ToRestoreSpecResourcesPtrOutputWithContext(context.Background())
}

func (i RestoreSpecResourcesArgs) ToRestoreSpecResourcesPtrOutputWithContext(ctx context.Context) RestoreSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecResourcesOutput).ToRestoreSpecResourcesPtrOutputWithContext(ctx)
}

// RestoreSpecResourcesPtrInput is an input type that accepts RestoreSpecResourcesArgs, RestoreSpecResourcesPtr and RestoreSpecResourcesPtrOutput values.
// You can construct a concrete instance of `RestoreSpecResourcesPtrInput` via:
//
//          RestoreSpecResourcesArgs{...}
//
//  or:
//
//          nil
type RestoreSpecResourcesPtrInput interface {
	pulumi.Input

	ToRestoreSpecResourcesPtrOutput() RestoreSpecResourcesPtrOutput
	ToRestoreSpecResourcesPtrOutputWithContext(context.Context) RestoreSpecResourcesPtrOutput
}

type restoreSpecResourcesPtrType RestoreSpecResourcesArgs

func RestoreSpecResourcesPtr(v *RestoreSpecResourcesArgs) RestoreSpecResourcesPtrInput {
	return (*restoreSpecResourcesPtrType)(v)
}

func (*restoreSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSpecResources)(nil)).Elem()
}

func (i *restoreSpecResourcesPtrType) ToRestoreSpecResourcesPtrOutput() RestoreSpecResourcesPtrOutput {
	return i.ToRestoreSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *restoreSpecResourcesPtrType) ToRestoreSpecResourcesPtrOutputWithContext(ctx context.Context) RestoreSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSpecResourcesPtrOutput)
}

type RestoreSpecResourcesOutput struct{ *pulumi.OutputState }

func (RestoreSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSpecResources)(nil)).Elem()
}

func (o RestoreSpecResourcesOutput) ToRestoreSpecResourcesOutput() RestoreSpecResourcesOutput {
	return o
}

func (o RestoreSpecResourcesOutput) ToRestoreSpecResourcesOutputWithContext(ctx context.Context) RestoreSpecResourcesOutput {
	return o
}

func (o RestoreSpecResourcesOutput) ToRestoreSpecResourcesPtrOutput() RestoreSpecResourcesPtrOutput {
	return o.ToRestoreSpecResourcesPtrOutputWithContext(context.Background())
}

func (o RestoreSpecResourcesOutput) ToRestoreSpecResourcesPtrOutputWithContext(ctx context.Context) RestoreSpecResourcesPtrOutput {
	return o.ApplyT(func(v RestoreSpecResources) *RestoreSpecResources {
		return &v
	}).(RestoreSpecResourcesPtrOutput)
}
func (o RestoreSpecResourcesOutput) CacheConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreSpecResources) []string { return v.CacheConfigs }).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesOutput) Caches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreSpecResources) []string { return v.Caches }).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesOutput) Counters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreSpecResources) []string { return v.Counters }).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesOutput) ProtoSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreSpecResources) []string { return v.ProtoSchemas }).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesOutput) Scripts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreSpecResources) []string { return v.Scripts }).(pulumi.StringArrayOutput)
}

type RestoreSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (RestoreSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSpecResources)(nil)).Elem()
}

func (o RestoreSpecResourcesPtrOutput) ToRestoreSpecResourcesPtrOutput() RestoreSpecResourcesPtrOutput {
	return o
}

func (o RestoreSpecResourcesPtrOutput) ToRestoreSpecResourcesPtrOutputWithContext(ctx context.Context) RestoreSpecResourcesPtrOutput {
	return o
}

func (o RestoreSpecResourcesPtrOutput) Elem() RestoreSpecResourcesOutput {
	return o.ApplyT(func(v *RestoreSpecResources) RestoreSpecResources { return *v }).(RestoreSpecResourcesOutput)
}

func (o RestoreSpecResourcesPtrOutput) CacheConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.CacheConfigs
	}).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesPtrOutput) Caches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.Caches
	}).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesPtrOutput) Counters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.Counters
	}).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesPtrOutput) ProtoSchemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.ProtoSchemas
	}).(pulumi.StringArrayOutput)
}

func (o RestoreSpecResourcesPtrOutput) Scripts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreSpecResources) []string {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(pulumi.StringArrayOutput)
}

// RestoreStatus defines the observed state of Restore
type RestoreStatus struct {
	// State indicates the current state of the restore operation
	Phase string `pulumi:"phase"`
	// Reason indicates the reason for any Restore related failures.
	Reason *string `pulumi:"reason"`
}

// RestoreStatusInput is an input type that accepts RestoreStatusArgs and RestoreStatusOutput values.
// You can construct a concrete instance of `RestoreStatusInput` via:
//
//          RestoreStatusArgs{...}
type RestoreStatusInput interface {
	pulumi.Input

	ToRestoreStatusOutput() RestoreStatusOutput
	ToRestoreStatusOutputWithContext(context.Context) RestoreStatusOutput
}

// RestoreStatus defines the observed state of Restore
type RestoreStatusArgs struct {
	// State indicates the current state of the restore operation
	Phase pulumi.StringInput `pulumi:"phase"`
	// Reason indicates the reason for any Restore related failures.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (RestoreStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreStatus)(nil)).Elem()
}

func (i RestoreStatusArgs) ToRestoreStatusOutput() RestoreStatusOutput {
	return i.ToRestoreStatusOutputWithContext(context.Background())
}

func (i RestoreStatusArgs) ToRestoreStatusOutputWithContext(ctx context.Context) RestoreStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreStatusOutput)
}

func (i RestoreStatusArgs) ToRestoreStatusPtrOutput() RestoreStatusPtrOutput {
	return i.ToRestoreStatusPtrOutputWithContext(context.Background())
}

func (i RestoreStatusArgs) ToRestoreStatusPtrOutputWithContext(ctx context.Context) RestoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreStatusOutput).ToRestoreStatusPtrOutputWithContext(ctx)
}

// RestoreStatusPtrInput is an input type that accepts RestoreStatusArgs, RestoreStatusPtr and RestoreStatusPtrOutput values.
// You can construct a concrete instance of `RestoreStatusPtrInput` via:
//
//          RestoreStatusArgs{...}
//
//  or:
//
//          nil
type RestoreStatusPtrInput interface {
	pulumi.Input

	ToRestoreStatusPtrOutput() RestoreStatusPtrOutput
	ToRestoreStatusPtrOutputWithContext(context.Context) RestoreStatusPtrOutput
}

type restoreStatusPtrType RestoreStatusArgs

func RestoreStatusPtr(v *RestoreStatusArgs) RestoreStatusPtrInput {
	return (*restoreStatusPtrType)(v)
}

func (*restoreStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreStatus)(nil)).Elem()
}

func (i *restoreStatusPtrType) ToRestoreStatusPtrOutput() RestoreStatusPtrOutput {
	return i.ToRestoreStatusPtrOutputWithContext(context.Background())
}

func (i *restoreStatusPtrType) ToRestoreStatusPtrOutputWithContext(ctx context.Context) RestoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreStatusPtrOutput)
}

// RestoreStatus defines the observed state of Restore
type RestoreStatusOutput struct{ *pulumi.OutputState }

func (RestoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreStatus)(nil)).Elem()
}

func (o RestoreStatusOutput) ToRestoreStatusOutput() RestoreStatusOutput {
	return o
}

func (o RestoreStatusOutput) ToRestoreStatusOutputWithContext(ctx context.Context) RestoreStatusOutput {
	return o
}

func (o RestoreStatusOutput) ToRestoreStatusPtrOutput() RestoreStatusPtrOutput {
	return o.ToRestoreStatusPtrOutputWithContext(context.Background())
}

func (o RestoreStatusOutput) ToRestoreStatusPtrOutputWithContext(ctx context.Context) RestoreStatusPtrOutput {
	return o.ApplyT(func(v RestoreStatus) *RestoreStatus {
		return &v
	}).(RestoreStatusPtrOutput)
}

// State indicates the current state of the restore operation
func (o RestoreStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreStatus) string { return v.Phase }).(pulumi.StringOutput)
}

// Reason indicates the reason for any Restore related failures.
func (o RestoreStatusOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreStatus) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type RestoreStatusPtrOutput struct{ *pulumi.OutputState }

func (RestoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreStatus)(nil)).Elem()
}

func (o RestoreStatusPtrOutput) ToRestoreStatusPtrOutput() RestoreStatusPtrOutput {
	return o
}

func (o RestoreStatusPtrOutput) ToRestoreStatusPtrOutputWithContext(ctx context.Context) RestoreStatusPtrOutput {
	return o
}

func (o RestoreStatusPtrOutput) Elem() RestoreStatusOutput {
	return o.ApplyT(func(v *RestoreStatus) RestoreStatus { return *v }).(RestoreStatusOutput)
}

// State indicates the current state of the restore operation
func (o RestoreStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Phase
	}).(pulumi.StringPtrOutput)
}

// Reason indicates the reason for any Restore related failures.
func (o RestoreStatusPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreStatus) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupTypeOutput{})
	pulumi.RegisterOutputType(BackupMetadataOutput{})
	pulumi.RegisterOutputType(BackupSpecOutput{})
	pulumi.RegisterOutputType(BackupSpecPtrOutput{})
	pulumi.RegisterOutputType(BackupSpecContainerOutput{})
	pulumi.RegisterOutputType(BackupSpecContainerPtrOutput{})
	pulumi.RegisterOutputType(BackupSpecResourcesOutput{})
	pulumi.RegisterOutputType(BackupSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(BackupSpecVolumeOutput{})
	pulumi.RegisterOutputType(BackupSpecVolumePtrOutput{})
	pulumi.RegisterOutputType(BackupStatusOutput{})
	pulumi.RegisterOutputType(BackupStatusPtrOutput{})
	pulumi.RegisterOutputType(CacheTypeOutput{})
	pulumi.RegisterOutputType(CacheMetadataOutput{})
	pulumi.RegisterOutputType(CacheSpecOutput{})
	pulumi.RegisterOutputType(CacheSpecPtrOutput{})
	pulumi.RegisterOutputType(CacheSpecAdminAuthOutput{})
	pulumi.RegisterOutputType(CacheSpecAdminAuthPtrOutput{})
	pulumi.RegisterOutputType(CacheSpecAdminAuthPasswordOutput{})
	pulumi.RegisterOutputType(CacheSpecAdminAuthPasswordPtrOutput{})
	pulumi.RegisterOutputType(CacheSpecAdminAuthUsernameOutput{})
	pulumi.RegisterOutputType(CacheSpecAdminAuthUsernamePtrOutput{})
	pulumi.RegisterOutputType(CacheStatusOutput{})
	pulumi.RegisterOutputType(CacheStatusPtrOutput{})
	pulumi.RegisterOutputType(CacheStatusConditionsOutput{})
	pulumi.RegisterOutputType(CacheStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(RestoreTypeOutput{})
	pulumi.RegisterOutputType(RestoreMetadataOutput{})
	pulumi.RegisterOutputType(RestoreSpecOutput{})
	pulumi.RegisterOutputType(RestoreSpecPtrOutput{})
	pulumi.RegisterOutputType(RestoreSpecContainerOutput{})
	pulumi.RegisterOutputType(RestoreSpecContainerPtrOutput{})
	pulumi.RegisterOutputType(RestoreSpecResourcesOutput{})
	pulumi.RegisterOutputType(RestoreSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(RestoreStatusOutput{})
	pulumi.RegisterOutputType(RestoreStatusPtrOutput{})
}
