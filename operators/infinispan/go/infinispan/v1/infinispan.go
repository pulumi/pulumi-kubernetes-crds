// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Infinispan is the Schema for the infinispans API
type Infinispan struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// InfinispanSpec defines the desired state of Infinispan
	Spec InfinispanSpecPtrOutput `pulumi:"spec"`
	// InfinispanStatus defines the observed state of Infinispan
	Status InfinispanStatusPtrOutput `pulumi:"status"`
}

// NewInfinispan registers a new resource with the given unique name, arguments, and options.
func NewInfinispan(ctx *pulumi.Context,
	name string, args *InfinispanArgs, opts ...pulumi.ResourceOption) (*Infinispan, error) {
	if args == nil {
		args = &InfinispanArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("infinispan.org/v1")
	args.Kind = pulumi.StringPtr("Infinispan")
	var resource Infinispan
	err := ctx.RegisterResource("kubernetes:infinispan.org/v1:Infinispan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfinispan gets an existing Infinispan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfinispan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfinispanState, opts ...pulumi.ResourceOption) (*Infinispan, error) {
	var resource Infinispan
	err := ctx.ReadResource("kubernetes:infinispan.org/v1:Infinispan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Infinispan resources.
type infinispanState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// InfinispanSpec defines the desired state of Infinispan
	Spec *InfinispanSpec `pulumi:"spec"`
	// InfinispanStatus defines the observed state of Infinispan
	Status *InfinispanStatus `pulumi:"status"`
}

type InfinispanState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// InfinispanSpec defines the desired state of Infinispan
	Spec InfinispanSpecPtrInput
	// InfinispanStatus defines the observed state of Infinispan
	Status InfinispanStatusPtrInput
}

func (InfinispanState) ElementType() reflect.Type {
	return reflect.TypeOf((*infinispanState)(nil)).Elem()
}

type infinispanArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// InfinispanSpec defines the desired state of Infinispan
	Spec *InfinispanSpec `pulumi:"spec"`
	// InfinispanStatus defines the observed state of Infinispan
	Status *InfinispanStatus `pulumi:"status"`
}

// The set of arguments for constructing a Infinispan resource.
type InfinispanArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// InfinispanSpec defines the desired state of Infinispan
	Spec InfinispanSpecPtrInput
	// InfinispanStatus defines the observed state of Infinispan
	Status InfinispanStatusPtrInput
}

func (InfinispanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*infinispanArgs)(nil)).Elem()
}
