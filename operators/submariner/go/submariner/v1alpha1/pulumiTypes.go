// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Submariner is the Schema for the submariners API
type SubmarinerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SubmarinerSpec defines the desired state of Submariner
	Spec *SubmarinerSpec `pulumi:"spec"`
	// SubmarinerStatus defines the observed state of Submariner
	Status *SubmarinerStatus `pulumi:"status"`
}

// SubmarinerTypeInput is an input type that accepts SubmarinerTypeArgs and SubmarinerTypeOutput values.
// You can construct a concrete instance of `SubmarinerTypeInput` via:
//
//          SubmarinerTypeArgs{...}
type SubmarinerTypeInput interface {
	pulumi.Input

	ToSubmarinerTypeOutput() SubmarinerTypeOutput
	ToSubmarinerTypeOutputWithContext(context.Context) SubmarinerTypeOutput
}

// Submariner is the Schema for the submariners API
type SubmarinerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// SubmarinerSpec defines the desired state of Submariner
	Spec SubmarinerSpecPtrInput `pulumi:"spec"`
	// SubmarinerStatus defines the observed state of Submariner
	Status SubmarinerStatusPtrInput `pulumi:"status"`
}

func (SubmarinerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerType)(nil)).Elem()
}

func (i SubmarinerTypeArgs) ToSubmarinerTypeOutput() SubmarinerTypeOutput {
	return i.ToSubmarinerTypeOutputWithContext(context.Background())
}

func (i SubmarinerTypeArgs) ToSubmarinerTypeOutputWithContext(ctx context.Context) SubmarinerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerTypeOutput)
}

// Submariner is the Schema for the submariners API
type SubmarinerTypeOutput struct{ *pulumi.OutputState }

func (SubmarinerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerType)(nil)).Elem()
}

func (o SubmarinerTypeOutput) ToSubmarinerTypeOutput() SubmarinerTypeOutput {
	return o
}

func (o SubmarinerTypeOutput) ToSubmarinerTypeOutputWithContext(ctx context.Context) SubmarinerTypeOutput {
	return o
}

func (o SubmarinerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o SubmarinerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o SubmarinerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// SubmarinerSpec defines the desired state of Submariner
func (o SubmarinerTypeOutput) Spec() SubmarinerSpecPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *SubmarinerSpec { return v.Spec }).(SubmarinerSpecPtrOutput)
}

// SubmarinerStatus defines the observed state of Submariner
func (o SubmarinerTypeOutput) Status() SubmarinerStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *SubmarinerStatus { return v.Status }).(SubmarinerStatusPtrOutput)
}

type SubmarinerMetadata struct {
}

// SubmarinerMetadataInput is an input type that accepts SubmarinerMetadataArgs and SubmarinerMetadataOutput values.
// You can construct a concrete instance of `SubmarinerMetadataInput` via:
//
//          SubmarinerMetadataArgs{...}
type SubmarinerMetadataInput interface {
	pulumi.Input

	ToSubmarinerMetadataOutput() SubmarinerMetadataOutput
	ToSubmarinerMetadataOutputWithContext(context.Context) SubmarinerMetadataOutput
}

type SubmarinerMetadataArgs struct {
}

func (SubmarinerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerMetadata)(nil)).Elem()
}

func (i SubmarinerMetadataArgs) ToSubmarinerMetadataOutput() SubmarinerMetadataOutput {
	return i.ToSubmarinerMetadataOutputWithContext(context.Background())
}

func (i SubmarinerMetadataArgs) ToSubmarinerMetadataOutputWithContext(ctx context.Context) SubmarinerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerMetadataOutput)
}

type SubmarinerMetadataOutput struct{ *pulumi.OutputState }

func (SubmarinerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerMetadata)(nil)).Elem()
}

func (o SubmarinerMetadataOutput) ToSubmarinerMetadataOutput() SubmarinerMetadataOutput {
	return o
}

func (o SubmarinerMetadataOutput) ToSubmarinerMetadataOutputWithContext(ctx context.Context) SubmarinerMetadataOutput {
	return o
}

// SubmarinerSpec defines the desired state of Submariner
type SubmarinerSpec struct {
	Broker                   string                               `pulumi:"broker"`
	BrokerK8sApiServer       string                               `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  string                               `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              string                               `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace string                               `pulumi:"brokerK8sRemoteNamespace"`
	CableDriver              *string                              `pulumi:"cableDriver"`
	CeIPSecDebug             bool                                 `pulumi:"ceIPSecDebug"`
	CeIPSecIKEPort           *int                                 `pulumi:"ceIPSecIKEPort"`
	CeIPSecNATTPort          *int                                 `pulumi:"ceIPSecNATTPort"`
	CeIPSecPSK               string                               `pulumi:"ceIPSecPSK"`
	ClusterCIDR              string                               `pulumi:"clusterCIDR"`
	ClusterID                string                               `pulumi:"clusterID"`
	ColorCodes               *string                              `pulumi:"colorCodes"`
	ConnectionHealthCheck    *SubmarinerSpecConnectionHealthCheck `pulumi:"connectionHealthCheck"`
	CustomDomains            []string                             `pulumi:"customDomains"`
	Debug                    bool                                 `pulumi:"debug"`
	GlobalCIDR               *string                              `pulumi:"globalCIDR"`
	ImageOverrides           map[string]string                    `pulumi:"imageOverrides"`
	Namespace                string                               `pulumi:"namespace"`
	NatEnabled               bool                                 `pulumi:"natEnabled"`
	Repository               *string                              `pulumi:"repository"`
	ServiceCIDR              string                               `pulumi:"serviceCIDR"`
	ServiceDiscoveryEnabled  *bool                                `pulumi:"serviceDiscoveryEnabled"`
	Version                  *string                              `pulumi:"version"`
}

// SubmarinerSpecInput is an input type that accepts SubmarinerSpecArgs and SubmarinerSpecOutput values.
// You can construct a concrete instance of `SubmarinerSpecInput` via:
//
//          SubmarinerSpecArgs{...}
type SubmarinerSpecInput interface {
	pulumi.Input

	ToSubmarinerSpecOutput() SubmarinerSpecOutput
	ToSubmarinerSpecOutputWithContext(context.Context) SubmarinerSpecOutput
}

// SubmarinerSpec defines the desired state of Submariner
type SubmarinerSpecArgs struct {
	Broker                   pulumi.StringInput                          `pulumi:"broker"`
	BrokerK8sApiServer       pulumi.StringInput                          `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  pulumi.StringInput                          `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              pulumi.StringInput                          `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace pulumi.StringInput                          `pulumi:"brokerK8sRemoteNamespace"`
	CableDriver              pulumi.StringPtrInput                       `pulumi:"cableDriver"`
	CeIPSecDebug             pulumi.BoolInput                            `pulumi:"ceIPSecDebug"`
	CeIPSecIKEPort           pulumi.IntPtrInput                          `pulumi:"ceIPSecIKEPort"`
	CeIPSecNATTPort          pulumi.IntPtrInput                          `pulumi:"ceIPSecNATTPort"`
	CeIPSecPSK               pulumi.StringInput                          `pulumi:"ceIPSecPSK"`
	ClusterCIDR              pulumi.StringInput                          `pulumi:"clusterCIDR"`
	ClusterID                pulumi.StringInput                          `pulumi:"clusterID"`
	ColorCodes               pulumi.StringPtrInput                       `pulumi:"colorCodes"`
	ConnectionHealthCheck    SubmarinerSpecConnectionHealthCheckPtrInput `pulumi:"connectionHealthCheck"`
	CustomDomains            pulumi.StringArrayInput                     `pulumi:"customDomains"`
	Debug                    pulumi.BoolInput                            `pulumi:"debug"`
	GlobalCIDR               pulumi.StringPtrInput                       `pulumi:"globalCIDR"`
	ImageOverrides           pulumi.StringMapInput                       `pulumi:"imageOverrides"`
	Namespace                pulumi.StringInput                          `pulumi:"namespace"`
	NatEnabled               pulumi.BoolInput                            `pulumi:"natEnabled"`
	Repository               pulumi.StringPtrInput                       `pulumi:"repository"`
	ServiceCIDR              pulumi.StringInput                          `pulumi:"serviceCIDR"`
	ServiceDiscoveryEnabled  pulumi.BoolPtrInput                         `pulumi:"serviceDiscoveryEnabled"`
	Version                  pulumi.StringPtrInput                       `pulumi:"version"`
}

func (SubmarinerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpec)(nil)).Elem()
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecOutput() SubmarinerSpecOutput {
	return i.ToSubmarinerSpecOutputWithContext(context.Background())
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecOutputWithContext(ctx context.Context) SubmarinerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecOutput)
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return i.ToSubmarinerSpecPtrOutputWithContext(context.Background())
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecOutput).ToSubmarinerSpecPtrOutputWithContext(ctx)
}

// SubmarinerSpecPtrInput is an input type that accepts SubmarinerSpecArgs, SubmarinerSpecPtr and SubmarinerSpecPtrOutput values.
// You can construct a concrete instance of `SubmarinerSpecPtrInput` via:
//
//          SubmarinerSpecArgs{...}
//
//  or:
//
//          nil
type SubmarinerSpecPtrInput interface {
	pulumi.Input

	ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput
	ToSubmarinerSpecPtrOutputWithContext(context.Context) SubmarinerSpecPtrOutput
}

type submarinerSpecPtrType SubmarinerSpecArgs

func SubmarinerSpecPtr(v *SubmarinerSpecArgs) SubmarinerSpecPtrInput {
	return (*submarinerSpecPtrType)(v)
}

func (*submarinerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerSpec)(nil)).Elem()
}

func (i *submarinerSpecPtrType) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return i.ToSubmarinerSpecPtrOutputWithContext(context.Background())
}

func (i *submarinerSpecPtrType) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecPtrOutput)
}

// SubmarinerSpec defines the desired state of Submariner
type SubmarinerSpecOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpec)(nil)).Elem()
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecOutput() SubmarinerSpecOutput {
	return o
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecOutputWithContext(ctx context.Context) SubmarinerSpecOutput {
	return o
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return o.ToSubmarinerSpecPtrOutputWithContext(context.Background())
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *SubmarinerSpec {
		return &v
	}).(SubmarinerSpecPtrOutput)
}
func (o SubmarinerSpecOutput) Broker() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.Broker }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sApiServer() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sApiServer }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sApiServerToken() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sApiServerToken }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sCA() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sCA }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sRemoteNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sRemoteNamespace }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) CableDriver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.CableDriver }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) CeIPSecDebug() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerSpec) bool { return v.CeIPSecDebug }).(pulumi.BoolOutput)
}

func (o SubmarinerSpecOutput) CeIPSecIKEPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *int { return v.CeIPSecIKEPort }).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecOutput) CeIPSecNATTPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *int { return v.CeIPSecNATTPort }).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecOutput) CeIPSecPSK() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.CeIPSecPSK }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ClusterCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.ClusterCIDR }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ClusterID() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.ClusterID }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.ColorCodes }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) ConnectionHealthCheck() SubmarinerSpecConnectionHealthCheckPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *SubmarinerSpecConnectionHealthCheck { return v.ConnectionHealthCheck }).(SubmarinerSpecConnectionHealthCheckPtrOutput)
}

func (o SubmarinerSpecOutput) CustomDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubmarinerSpec) []string { return v.CustomDomains }).(pulumi.StringArrayOutput)
}

func (o SubmarinerSpecOutput) Debug() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerSpec) bool { return v.Debug }).(pulumi.BoolOutput)
}

func (o SubmarinerSpecOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.GlobalCIDR }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) ImageOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubmarinerSpec) map[string]string { return v.ImageOverrides }).(pulumi.StringMapOutput)
}

func (o SubmarinerSpecOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) NatEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerSpec) bool { return v.NatEnabled }).(pulumi.BoolOutput)
}

func (o SubmarinerSpecOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) ServiceCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.ServiceCIDR }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ServiceDiscoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *bool { return v.ServiceDiscoveryEnabled }).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SubmarinerSpecPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerSpec)(nil)).Elem()
}

func (o SubmarinerSpecPtrOutput) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return o
}

func (o SubmarinerSpecPtrOutput) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return o
}

func (o SubmarinerSpecPtrOutput) Elem() SubmarinerSpecOutput {
	return o.ApplyT(func(v *SubmarinerSpec) SubmarinerSpec { return *v }).(SubmarinerSpecOutput)
}

func (o SubmarinerSpecPtrOutput) Broker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Broker
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sApiServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServer
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sApiServerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServerToken
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sCA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sCA
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sRemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sRemoteNamespace
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CableDriver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.CableDriver
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecDebug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.CeIPSecDebug
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecIKEPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *int {
		if v == nil {
			return nil
		}
		return v.CeIPSecIKEPort
	}).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecNATTPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *int {
		if v == nil {
			return nil
		}
		return v.CeIPSecNATTPort
	}).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecPSK() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.CeIPSecPSK
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ClusterCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ClusterID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterID
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.ColorCodes
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ConnectionHealthCheck() SubmarinerSpecConnectionHealthCheckPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *SubmarinerSpecConnectionHealthCheck {
		if v == nil {
			return nil
		}
		return v.ConnectionHealthCheck
	}).(SubmarinerSpecConnectionHealthCheckPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CustomDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubmarinerSpec) []string {
		if v == nil {
			return nil
		}
		return v.CustomDomains
	}).(pulumi.StringArrayOutput)
}

func (o SubmarinerSpecPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Debug
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.GlobalCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ImageOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SubmarinerSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.ImageOverrides
	}).(pulumi.StringMapOutput)
}

func (o SubmarinerSpecPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) NatEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.NatEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ServiceDiscoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceDiscoveryEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type SubmarinerSpecConnectionHealthCheck struct {
	Enabled *bool `pulumi:"enabled"`
	// The interval at which health check pings are sent.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The maximum number of packets lost at which the health checker will mark the connection as down.
	MaxPacketLossCount *int `pulumi:"maxPacketLossCount"`
}

// SubmarinerSpecConnectionHealthCheckInput is an input type that accepts SubmarinerSpecConnectionHealthCheckArgs and SubmarinerSpecConnectionHealthCheckOutput values.
// You can construct a concrete instance of `SubmarinerSpecConnectionHealthCheckInput` via:
//
//          SubmarinerSpecConnectionHealthCheckArgs{...}
type SubmarinerSpecConnectionHealthCheckInput interface {
	pulumi.Input

	ToSubmarinerSpecConnectionHealthCheckOutput() SubmarinerSpecConnectionHealthCheckOutput
	ToSubmarinerSpecConnectionHealthCheckOutputWithContext(context.Context) SubmarinerSpecConnectionHealthCheckOutput
}

type SubmarinerSpecConnectionHealthCheckArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The interval at which health check pings are sent.
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The maximum number of packets lost at which the health checker will mark the connection as down.
	MaxPacketLossCount pulumi.IntPtrInput `pulumi:"maxPacketLossCount"`
}

func (SubmarinerSpecConnectionHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpecConnectionHealthCheck)(nil)).Elem()
}

func (i SubmarinerSpecConnectionHealthCheckArgs) ToSubmarinerSpecConnectionHealthCheckOutput() SubmarinerSpecConnectionHealthCheckOutput {
	return i.ToSubmarinerSpecConnectionHealthCheckOutputWithContext(context.Background())
}

func (i SubmarinerSpecConnectionHealthCheckArgs) ToSubmarinerSpecConnectionHealthCheckOutputWithContext(ctx context.Context) SubmarinerSpecConnectionHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecConnectionHealthCheckOutput)
}

func (i SubmarinerSpecConnectionHealthCheckArgs) ToSubmarinerSpecConnectionHealthCheckPtrOutput() SubmarinerSpecConnectionHealthCheckPtrOutput {
	return i.ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(context.Background())
}

func (i SubmarinerSpecConnectionHealthCheckArgs) ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(ctx context.Context) SubmarinerSpecConnectionHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecConnectionHealthCheckOutput).ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(ctx)
}

// SubmarinerSpecConnectionHealthCheckPtrInput is an input type that accepts SubmarinerSpecConnectionHealthCheckArgs, SubmarinerSpecConnectionHealthCheckPtr and SubmarinerSpecConnectionHealthCheckPtrOutput values.
// You can construct a concrete instance of `SubmarinerSpecConnectionHealthCheckPtrInput` via:
//
//          SubmarinerSpecConnectionHealthCheckArgs{...}
//
//  or:
//
//          nil
type SubmarinerSpecConnectionHealthCheckPtrInput interface {
	pulumi.Input

	ToSubmarinerSpecConnectionHealthCheckPtrOutput() SubmarinerSpecConnectionHealthCheckPtrOutput
	ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(context.Context) SubmarinerSpecConnectionHealthCheckPtrOutput
}

type submarinerSpecConnectionHealthCheckPtrType SubmarinerSpecConnectionHealthCheckArgs

func SubmarinerSpecConnectionHealthCheckPtr(v *SubmarinerSpecConnectionHealthCheckArgs) SubmarinerSpecConnectionHealthCheckPtrInput {
	return (*submarinerSpecConnectionHealthCheckPtrType)(v)
}

func (*submarinerSpecConnectionHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerSpecConnectionHealthCheck)(nil)).Elem()
}

func (i *submarinerSpecConnectionHealthCheckPtrType) ToSubmarinerSpecConnectionHealthCheckPtrOutput() SubmarinerSpecConnectionHealthCheckPtrOutput {
	return i.ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(context.Background())
}

func (i *submarinerSpecConnectionHealthCheckPtrType) ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(ctx context.Context) SubmarinerSpecConnectionHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecConnectionHealthCheckPtrOutput)
}

type SubmarinerSpecConnectionHealthCheckOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecConnectionHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpecConnectionHealthCheck)(nil)).Elem()
}

func (o SubmarinerSpecConnectionHealthCheckOutput) ToSubmarinerSpecConnectionHealthCheckOutput() SubmarinerSpecConnectionHealthCheckOutput {
	return o
}

func (o SubmarinerSpecConnectionHealthCheckOutput) ToSubmarinerSpecConnectionHealthCheckOutputWithContext(ctx context.Context) SubmarinerSpecConnectionHealthCheckOutput {
	return o
}

func (o SubmarinerSpecConnectionHealthCheckOutput) ToSubmarinerSpecConnectionHealthCheckPtrOutput() SubmarinerSpecConnectionHealthCheckPtrOutput {
	return o.ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(context.Background())
}

func (o SubmarinerSpecConnectionHealthCheckOutput) ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(ctx context.Context) SubmarinerSpecConnectionHealthCheckPtrOutput {
	return o.ApplyT(func(v SubmarinerSpecConnectionHealthCheck) *SubmarinerSpecConnectionHealthCheck {
		return &v
	}).(SubmarinerSpecConnectionHealthCheckPtrOutput)
}
func (o SubmarinerSpecConnectionHealthCheckOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubmarinerSpecConnectionHealthCheck) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval at which health check pings are sent.
func (o SubmarinerSpecConnectionHealthCheckOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerSpecConnectionHealthCheck) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The maximum number of packets lost at which the health checker will mark the connection as down.
func (o SubmarinerSpecConnectionHealthCheckOutput) MaxPacketLossCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerSpecConnectionHealthCheck) *int { return v.MaxPacketLossCount }).(pulumi.IntPtrOutput)
}

type SubmarinerSpecConnectionHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecConnectionHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerSpecConnectionHealthCheck)(nil)).Elem()
}

func (o SubmarinerSpecConnectionHealthCheckPtrOutput) ToSubmarinerSpecConnectionHealthCheckPtrOutput() SubmarinerSpecConnectionHealthCheckPtrOutput {
	return o
}

func (o SubmarinerSpecConnectionHealthCheckPtrOutput) ToSubmarinerSpecConnectionHealthCheckPtrOutputWithContext(ctx context.Context) SubmarinerSpecConnectionHealthCheckPtrOutput {
	return o
}

func (o SubmarinerSpecConnectionHealthCheckPtrOutput) Elem() SubmarinerSpecConnectionHealthCheckOutput {
	return o.ApplyT(func(v *SubmarinerSpecConnectionHealthCheck) SubmarinerSpecConnectionHealthCheck { return *v }).(SubmarinerSpecConnectionHealthCheckOutput)
}

func (o SubmarinerSpecConnectionHealthCheckPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpecConnectionHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval at which health check pings are sent.
func (o SubmarinerSpecConnectionHealthCheckPtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpecConnectionHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum number of packets lost at which the health checker will mark the connection as down.
func (o SubmarinerSpecConnectionHealthCheckPtrOutput) MaxPacketLossCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpecConnectionHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.MaxPacketLossCount
	}).(pulumi.IntPtrOutput)
}

type SubmarinerSpecImageOverrides struct {
}

// SubmarinerSpecImageOverridesInput is an input type that accepts SubmarinerSpecImageOverridesArgs and SubmarinerSpecImageOverridesOutput values.
// You can construct a concrete instance of `SubmarinerSpecImageOverridesInput` via:
//
//          SubmarinerSpecImageOverridesArgs{...}
type SubmarinerSpecImageOverridesInput interface {
	pulumi.Input

	ToSubmarinerSpecImageOverridesOutput() SubmarinerSpecImageOverridesOutput
	ToSubmarinerSpecImageOverridesOutputWithContext(context.Context) SubmarinerSpecImageOverridesOutput
}

type SubmarinerSpecImageOverridesArgs struct {
}

func (SubmarinerSpecImageOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpecImageOverrides)(nil)).Elem()
}

func (i SubmarinerSpecImageOverridesArgs) ToSubmarinerSpecImageOverridesOutput() SubmarinerSpecImageOverridesOutput {
	return i.ToSubmarinerSpecImageOverridesOutputWithContext(context.Background())
}

func (i SubmarinerSpecImageOverridesArgs) ToSubmarinerSpecImageOverridesOutputWithContext(ctx context.Context) SubmarinerSpecImageOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecImageOverridesOutput)
}

type SubmarinerSpecImageOverridesOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecImageOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpecImageOverrides)(nil)).Elem()
}

func (o SubmarinerSpecImageOverridesOutput) ToSubmarinerSpecImageOverridesOutput() SubmarinerSpecImageOverridesOutput {
	return o
}

func (o SubmarinerSpecImageOverridesOutput) ToSubmarinerSpecImageOverridesOutputWithContext(ctx context.Context) SubmarinerSpecImageOverridesOutput {
	return o
}

// SubmarinerStatus defines the observed state of Submariner
type SubmarinerStatus struct {
	ClusterCIDR               *string                                    `pulumi:"clusterCIDR"`
	ClusterID                 string                                     `pulumi:"clusterID"`
	ColorCodes                *string                                    `pulumi:"colorCodes"`
	EngineDaemonSetStatus     *SubmarinerStatusEngineDaemonSetStatus     `pulumi:"engineDaemonSetStatus"`
	Gateways                  []SubmarinerStatusGateways                 `pulumi:"gateways"`
	GlobalCIDR                *string                                    `pulumi:"globalCIDR"`
	GlobalnetDaemonSetStatus  *SubmarinerStatusGlobalnetDaemonSetStatus  `pulumi:"globalnetDaemonSetStatus"`
	NatEnabled                bool                                       `pulumi:"natEnabled"`
	NetworkPlugin             *string                                    `pulumi:"networkPlugin"`
	RouteAgentDaemonSetStatus *SubmarinerStatusRouteAgentDaemonSetStatus `pulumi:"routeAgentDaemonSetStatus"`
	ServiceCIDR               *string                                    `pulumi:"serviceCIDR"`
}

// SubmarinerStatusInput is an input type that accepts SubmarinerStatusArgs and SubmarinerStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusInput` via:
//
//          SubmarinerStatusArgs{...}
type SubmarinerStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusOutput() SubmarinerStatusOutput
	ToSubmarinerStatusOutputWithContext(context.Context) SubmarinerStatusOutput
}

// SubmarinerStatus defines the observed state of Submariner
type SubmarinerStatusArgs struct {
	ClusterCIDR               pulumi.StringPtrInput                             `pulumi:"clusterCIDR"`
	ClusterID                 pulumi.StringInput                                `pulumi:"clusterID"`
	ColorCodes                pulumi.StringPtrInput                             `pulumi:"colorCodes"`
	EngineDaemonSetStatus     SubmarinerStatusEngineDaemonSetStatusPtrInput     `pulumi:"engineDaemonSetStatus"`
	Gateways                  SubmarinerStatusGatewaysArrayInput                `pulumi:"gateways"`
	GlobalCIDR                pulumi.StringPtrInput                             `pulumi:"globalCIDR"`
	GlobalnetDaemonSetStatus  SubmarinerStatusGlobalnetDaemonSetStatusPtrInput  `pulumi:"globalnetDaemonSetStatus"`
	NatEnabled                pulumi.BoolInput                                  `pulumi:"natEnabled"`
	NetworkPlugin             pulumi.StringPtrInput                             `pulumi:"networkPlugin"`
	RouteAgentDaemonSetStatus SubmarinerStatusRouteAgentDaemonSetStatusPtrInput `pulumi:"routeAgentDaemonSetStatus"`
	ServiceCIDR               pulumi.StringPtrInput                             `pulumi:"serviceCIDR"`
}

func (SubmarinerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatus)(nil)).Elem()
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusOutput() SubmarinerStatusOutput {
	return i.ToSubmarinerStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusOutputWithContext(ctx context.Context) SubmarinerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusOutput)
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return i.ToSubmarinerStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusOutput).ToSubmarinerStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusPtrInput is an input type that accepts SubmarinerStatusArgs, SubmarinerStatusPtr and SubmarinerStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusPtrInput` via:
//
//          SubmarinerStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput
	ToSubmarinerStatusPtrOutputWithContext(context.Context) SubmarinerStatusPtrOutput
}

type submarinerStatusPtrType SubmarinerStatusArgs

func SubmarinerStatusPtr(v *SubmarinerStatusArgs) SubmarinerStatusPtrInput {
	return (*submarinerStatusPtrType)(v)
}

func (*submarinerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatus)(nil)).Elem()
}

func (i *submarinerStatusPtrType) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return i.ToSubmarinerStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusPtrType) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusPtrOutput)
}

// SubmarinerStatus defines the observed state of Submariner
type SubmarinerStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatus)(nil)).Elem()
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusOutput() SubmarinerStatusOutput {
	return o
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusOutputWithContext(ctx context.Context) SubmarinerStatusOutput {
	return o
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return o.ToSubmarinerStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatus {
		return &v
	}).(SubmarinerStatusPtrOutput)
}
func (o SubmarinerStatusOutput) ClusterCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.ClusterCIDR }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusOutput) ClusterID() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatus) string { return v.ClusterID }).(pulumi.StringOutput)
}

func (o SubmarinerStatusOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.ColorCodes }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusOutput) EngineDaemonSetStatus() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatusEngineDaemonSetStatus { return v.EngineDaemonSetStatus }).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusOutput) Gateways() SubmarinerStatusGatewaysArrayOutput {
	return o.ApplyT(func(v SubmarinerStatus) []SubmarinerStatusGateways { return v.Gateways }).(SubmarinerStatusGatewaysArrayOutput)
}

func (o SubmarinerStatusOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.GlobalCIDR }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusOutput) GlobalnetDaemonSetStatus() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatusGlobalnetDaemonSetStatus { return v.GlobalnetDaemonSetStatus }).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusOutput) NatEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatus) bool { return v.NatEnabled }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusOutput) RouteAgentDaemonSetStatus() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatusRouteAgentDaemonSetStatus {
		return v.RouteAgentDaemonSetStatus
	}).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.ServiceCIDR }).(pulumi.StringPtrOutput)
}

type SubmarinerStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatus)(nil)).Elem()
}

func (o SubmarinerStatusPtrOutput) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return o
}

func (o SubmarinerStatusPtrOutput) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return o
}

func (o SubmarinerStatusPtrOutput) Elem() SubmarinerStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatus) SubmarinerStatus { return *v }).(SubmarinerStatusOutput)
}

func (o SubmarinerStatusPtrOutput) ClusterCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) ClusterID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterID
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.ColorCodes
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) EngineDaemonSetStatus() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *SubmarinerStatusEngineDaemonSetStatus {
		if v == nil {
			return nil
		}
		return v.EngineDaemonSetStatus
	}).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusPtrOutput) Gateways() SubmarinerStatusGatewaysArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatus) []SubmarinerStatusGateways {
		if v == nil {
			return nil
		}
		return v.Gateways
	}).(SubmarinerStatusGatewaysArrayOutput)
}

func (o SubmarinerStatusPtrOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.GlobalCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) GlobalnetDaemonSetStatus() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *SubmarinerStatusGlobalnetDaemonSetStatus {
		if v == nil {
			return nil
		}
		return v.GlobalnetDaemonSetStatus
	}).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusPtrOutput) NatEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.NatEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerStatusPtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) RouteAgentDaemonSetStatus() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *SubmarinerStatusRouteAgentDaemonSetStatus {
		if v == nil {
			return nil
		}
		return v.RouteAgentDaemonSetStatus
	}).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusPtrOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCIDR
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatus struct {
	LastResourceVersion       *string                                                        `pulumi:"lastResourceVersion"`
	MismatchedContainerImages bool                                                           `pulumi:"mismatchedContainerImages"`
	NonReadyContainerStates   []SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates `pulumi:"nonReadyContainerStates"`
	// DaemonSetStatus represents the current status of a daemon set.
	Status *SubmarinerStatusEngineDaemonSetStatusStatus `pulumi:"status"`
}

// SubmarinerStatusEngineDaemonSetStatusInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusArgs and SubmarinerStatusEngineDaemonSetStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusArgs{...}
type SubmarinerStatusEngineDaemonSetStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusOutput() SubmarinerStatusEngineDaemonSetStatusOutput
	ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusOutput
}

type SubmarinerStatusEngineDaemonSetStatusArgs struct {
	LastResourceVersion       pulumi.StringPtrInput                                                  `pulumi:"lastResourceVersion"`
	MismatchedContainerImages pulumi.BoolInput                                                       `pulumi:"mismatchedContainerImages"`
	NonReadyContainerStates   SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayInput `pulumi:"nonReadyContainerStates"`
	// DaemonSetStatus represents the current status of a daemon set.
	Status SubmarinerStatusEngineDaemonSetStatusStatusPtrInput `pulumi:"status"`
}

func (SubmarinerStatusEngineDaemonSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusOutput() SubmarinerStatusEngineDaemonSetStatusOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusOutput)
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusOutput).ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusEngineDaemonSetStatusPtrInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusArgs, SubmarinerStatusEngineDaemonSetStatusPtr and SubmarinerStatusEngineDaemonSetStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusPtrInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusEngineDaemonSetStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput
	ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput
}

type submarinerStatusEngineDaemonSetStatusPtrType SubmarinerStatusEngineDaemonSetStatusArgs

func SubmarinerStatusEngineDaemonSetStatusPtr(v *SubmarinerStatusEngineDaemonSetStatusArgs) SubmarinerStatusEngineDaemonSetStatusPtrInput {
	return (*submarinerStatusEngineDaemonSetStatusPtrType)(v)
}

func (*submarinerStatusEngineDaemonSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (i *submarinerStatusEngineDaemonSetStatusPtrType) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusEngineDaemonSetStatusPtrType) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusOutput() SubmarinerStatusEngineDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *SubmarinerStatusEngineDaemonSetStatus {
		return &v
	}).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}
func (o SubmarinerStatusEngineDaemonSetStatusOutput) LastResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *string { return v.LastResourceVersion }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) MismatchedContainerImages() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) bool { return v.MismatchedContainerImages }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) NonReadyContainerStates() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) []SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates {
		return v.NonReadyContainerStates
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusEngineDaemonSetStatusOutput) Status() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *SubmarinerStatusEngineDaemonSetStatusStatus {
		return v.Status
	}).(SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) Elem() SubmarinerStatusEngineDaemonSetStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) SubmarinerStatusEngineDaemonSetStatus { return *v }).(SubmarinerStatusEngineDaemonSetStatusOutput)
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) LastResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastResourceVersion
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) MismatchedContainerImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.MismatchedContainerImages
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) NonReadyContainerStates() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) []SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates {
		if v == nil {
			return nil
		}
		return v.NonReadyContainerStates
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) Status() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *SubmarinerStatusEngineDaemonSetStatusStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput)
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates struct {
	// Details about a running container
	Running *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning `pulumi:"running"`
	// Details about a terminated container
	Terminated *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated `pulumi:"terminated"`
	// Details about a waiting container
	Waiting *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting `pulumi:"waiting"`
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs{...}
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs struct {
	// Details about a running container
	Running SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrInput `pulumi:"running"`
	// Details about a terminated container
	Terminated SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput `pulumi:"terminated"`
	// Details about a waiting container
	Waiting SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrInput `pulumi:"waiting"`
}

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput)
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArray and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArray{ SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArgs{...} }
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput
}

type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArray []SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesInput

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArray) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArray) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput {
	return o
}

// Details about a running container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput) Running() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning {
		return v.Running
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Details about a terminated container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput) Terminated() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated {
		return v.Terminated
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Details about a waiting container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput) Waiting() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting {
		return v.Waiting
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates {
		return vs[0].([]SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStates)[vs[1].(int)]
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput)
}

// Details about a running container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning struct {
	// Time at which the container was last (re-)started
	StartedAt *string `pulumi:"startedAt"`
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs{...}
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput
}

// Details about a running container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs struct {
	// Time at which the container was last (re-)started
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput)
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput).ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx)
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs, SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtr and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput
}

type submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrType SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs

func SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtr(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningArgs) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrInput {
	return (*submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrType)(v)
}

func (*submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (i *submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrType) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrType) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Details about a running container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning) *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning {
		return &v
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Time at which the container was last (re-)started
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning) *string {
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) Elem() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning {
		return *v
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput)
}

// Time at which the container was last (re-)started
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunning) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Details about a terminated container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated struct {
	// Container's ID in the format 'docker://<container_id>'
	ContainerID *string `pulumi:"containerID"`
	// Exit status from the last termination of the container
	ExitCode int `pulumi:"exitCode"`
	// Time at which the container last terminated
	FinishedAt *string `pulumi:"finishedAt"`
	// Message regarding the last termination of the container
	Message *string `pulumi:"message"`
	// (brief) reason from the last termination of the container
	Reason *string `pulumi:"reason"`
	// Signal from the last termination of the container
	Signal *int `pulumi:"signal"`
	// Time at which previous execution of the container started
	StartedAt *string `pulumi:"startedAt"`
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs{...}
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput
}

// Details about a terminated container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs struct {
	// Container's ID in the format 'docker://<container_id>'
	ContainerID pulumi.StringPtrInput `pulumi:"containerID"`
	// Exit status from the last termination of the container
	ExitCode pulumi.IntInput `pulumi:"exitCode"`
	// Time at which the container last terminated
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message regarding the last termination of the container
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (brief) reason from the last termination of the container
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Signal from the last termination of the container
	Signal pulumi.IntPtrInput `pulumi:"signal"`
	// Time at which previous execution of the container started
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput)
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput).ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx)
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs, SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtr and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput
}

type submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrType SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs

func SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtr(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedArgs) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput {
	return (*submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrType)(v)
}

func (*submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (i *submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Details about a terminated container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated {
		return &v
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Container's ID in the format 'docker://<container_id>'
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ContainerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.ContainerID
	}).(pulumi.StringPtrOutput)
}

// Exit status from the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) int { return v.ExitCode }).(pulumi.IntOutput)
}

// Time at which the container last terminated
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message regarding the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason from the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Signal from the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Signal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *int { return v.Signal }).(pulumi.IntPtrOutput)
}

// Time at which previous execution of the container started
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Elem() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated {
		return *v
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput)
}

// Container's ID in the format 'docker://<container_id>'
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ContainerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.ContainerID
	}).(pulumi.StringPtrOutput)
}

// Exit status from the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ExitCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		if v == nil {
			return nil
		}
		return &v.ExitCode
	}).(pulumi.IntPtrOutput)
}

// Time at which the container last terminated
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message regarding the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason from the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Signal from the last termination of the container
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Signal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.IntPtrOutput)
}

// Time at which previous execution of the container started
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Details about a waiting container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting struct {
	// Message regarding why the container is not yet running.
	Message *string `pulumi:"message"`
	// (brief) reason the container is not yet running.
	Reason *string `pulumi:"reason"`
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs{...}
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput
}

// Details about a waiting container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs struct {
	// Message regarding why the container is not yet running.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (brief) reason the container is not yet running.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput)
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput).ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx)
}

// SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs, SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtr and SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput
	ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput
}

type submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrType SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs

func SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtr(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingArgs) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrInput {
	return (*submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrType)(v)
}

func (*submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (i *submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

// Details about a waiting container
type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting) *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting {
		return &v
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

// Message regarding why the container is not yet running.
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// (brief) reason the container is not yet running.
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Elem() SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting) SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting {
		return *v
	}).(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput)
}

// Message regarding why the container is not yet running.
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason the container is not yet running.
func (o SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusEngineDaemonSetStatusStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []SubmarinerStatusEngineDaemonSetStatusStatusConditions `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady int `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`
}

// SubmarinerStatusEngineDaemonSetStatusStatusInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusStatusArgs and SubmarinerStatusEngineDaemonSetStatusStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusStatusInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusStatusArgs{...}
type SubmarinerStatusEngineDaemonSetStatusStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusStatusOutput() SubmarinerStatusEngineDaemonSetStatusStatusOutput
	ToSubmarinerStatusEngineDaemonSetStatusStatusOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusStatusOutput
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusEngineDaemonSetStatusStatusArgs struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayInput `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntPtrInput `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntPtrInput `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntPtrInput `pulumi:"updatedNumberScheduled"`
}

func (SubmarinerStatusEngineDaemonSetStatusStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusStatus)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusStatusOutput() SubmarinerStatusEngineDaemonSetStatusStatusOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusStatusOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusStatusOutput)
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusStatusOutput).ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusEngineDaemonSetStatusStatusPtrInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusStatusArgs, SubmarinerStatusEngineDaemonSetStatusStatusPtr and SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusStatusPtrInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusEngineDaemonSetStatusStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput
	ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput
}

type submarinerStatusEngineDaemonSetStatusStatusPtrType SubmarinerStatusEngineDaemonSetStatusStatusArgs

func SubmarinerStatusEngineDaemonSetStatusStatusPtr(v *SubmarinerStatusEngineDaemonSetStatusStatusArgs) SubmarinerStatusEngineDaemonSetStatusStatusPtrInput {
	return (*submarinerStatusEngineDaemonSetStatusStatusPtrType)(v)
}

func (*submarinerStatusEngineDaemonSetStatusStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusStatus)(nil)).Elem()
}

func (i *submarinerStatusEngineDaemonSetStatusStatusPtrType) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusEngineDaemonSetStatusStatusPtrType) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusEngineDaemonSetStatusStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusStatus)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusOutput() SubmarinerStatusEngineDaemonSetStatusStatusOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return o.ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) *SubmarinerStatusEngineDaemonSetStatusStatus {
		return &v
	}).(SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) Conditions() SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) []SubmarinerStatusEngineDaemonSetStatusStatusConditions {
		return v.Conditions
	}).(SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) int { return v.CurrentNumberScheduled }).(pulumi.IntOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) int { return v.DesiredNumberScheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) *int { return v.NumberAvailable }).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) int { return v.NumberMisscheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) NumberReady() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) int { return v.NumberReady }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) *int { return v.NumberUnavailable }).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusEngineDaemonSetStatusStatusOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatus) *int { return v.UpdatedNumberScheduled }).(pulumi.IntPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatusStatus)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) Elem() SubmarinerStatusEngineDaemonSetStatusStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) SubmarinerStatusEngineDaemonSetStatusStatus {
		return *v
	}).(SubmarinerStatusEngineDaemonSetStatusStatusOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) Conditions() SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) []SubmarinerStatusEngineDaemonSetStatusStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) CurrentNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) DesiredNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberAvailable
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) NumberMisscheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberMisscheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) NumberReady() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberReady
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberUnavailable
	}).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusEngineDaemonSetStatusStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of DaemonSet condition.
	Type string `pulumi:"type"`
}

// SubmarinerStatusEngineDaemonSetStatusStatusConditionsInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs and SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusStatusConditionsInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs{...}
type SubmarinerStatusEngineDaemonSetStatusStatusConditionsInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput() SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput
	ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of DaemonSet condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput() SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput)
}

// SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusStatusConditionsArray and SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusStatusConditionsArray{ SubmarinerStatusEngineDaemonSetStatusStatusConditionsArgs{...} }
type SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput
	ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput
}

type SubmarinerStatusEngineDaemonSetStatusStatusConditionsArray []SubmarinerStatusEngineDaemonSetStatusStatusConditionsInput

func (SubmarinerStatusEngineDaemonSetStatusStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusEngineDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusConditionsArray) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusStatusConditionsArray) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput() SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of DaemonSet condition.
func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusEngineDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput) ToSubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusEngineDaemonSetStatusStatusConditions {
		return vs[0].([]SubmarinerStatusEngineDaemonSetStatusStatusConditions)[vs[1].(int)]
	}).(SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput)
}

type SubmarinerStatusGateways struct {
	Connections   []SubmarinerStatusGatewaysConnections `pulumi:"connections"`
	HaStatus      string                                `pulumi:"haStatus"`
	LocalEndpoint SubmarinerStatusGatewaysLocalEndpoint `pulumi:"localEndpoint"`
	StatusFailure string                                `pulumi:"statusFailure"`
	Version       string                                `pulumi:"version"`
}

// SubmarinerStatusGatewaysInput is an input type that accepts SubmarinerStatusGatewaysArgs and SubmarinerStatusGatewaysOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysInput` via:
//
//          SubmarinerStatusGatewaysArgs{...}
type SubmarinerStatusGatewaysInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysOutput() SubmarinerStatusGatewaysOutput
	ToSubmarinerStatusGatewaysOutputWithContext(context.Context) SubmarinerStatusGatewaysOutput
}

type SubmarinerStatusGatewaysArgs struct {
	Connections   SubmarinerStatusGatewaysConnectionsArrayInput `pulumi:"connections"`
	HaStatus      pulumi.StringInput                            `pulumi:"haStatus"`
	LocalEndpoint SubmarinerStatusGatewaysLocalEndpointInput    `pulumi:"localEndpoint"`
	StatusFailure pulumi.StringInput                            `pulumi:"statusFailure"`
	Version       pulumi.StringInput                            `pulumi:"version"`
}

func (SubmarinerStatusGatewaysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGateways)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysArgs) ToSubmarinerStatusGatewaysOutput() SubmarinerStatusGatewaysOutput {
	return i.ToSubmarinerStatusGatewaysOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysArgs) ToSubmarinerStatusGatewaysOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysOutput)
}

// SubmarinerStatusGatewaysArrayInput is an input type that accepts SubmarinerStatusGatewaysArray and SubmarinerStatusGatewaysArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysArrayInput` via:
//
//          SubmarinerStatusGatewaysArray{ SubmarinerStatusGatewaysArgs{...} }
type SubmarinerStatusGatewaysArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysArrayOutput() SubmarinerStatusGatewaysArrayOutput
	ToSubmarinerStatusGatewaysArrayOutputWithContext(context.Context) SubmarinerStatusGatewaysArrayOutput
}

type SubmarinerStatusGatewaysArray []SubmarinerStatusGatewaysInput

func (SubmarinerStatusGatewaysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGateways)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysArray) ToSubmarinerStatusGatewaysArrayOutput() SubmarinerStatusGatewaysArrayOutput {
	return i.ToSubmarinerStatusGatewaysArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysArray) ToSubmarinerStatusGatewaysArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysArrayOutput)
}

type SubmarinerStatusGatewaysOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGateways)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysOutput) ToSubmarinerStatusGatewaysOutput() SubmarinerStatusGatewaysOutput {
	return o
}

func (o SubmarinerStatusGatewaysOutput) ToSubmarinerStatusGatewaysOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysOutput {
	return o
}

func (o SubmarinerStatusGatewaysOutput) Connections() SubmarinerStatusGatewaysConnectionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) []SubmarinerStatusGatewaysConnections { return v.Connections }).(SubmarinerStatusGatewaysConnectionsArrayOutput)
}

func (o SubmarinerStatusGatewaysOutput) HaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) string { return v.HaStatus }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysOutput) LocalEndpoint() SubmarinerStatusGatewaysLocalEndpointOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) SubmarinerStatusGatewaysLocalEndpoint { return v.LocalEndpoint }).(SubmarinerStatusGatewaysLocalEndpointOutput)
}

func (o SubmarinerStatusGatewaysOutput) StatusFailure() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) string { return v.StatusFailure }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) string { return v.Version }).(pulumi.StringOutput)
}

type SubmarinerStatusGatewaysArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGateways)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysArrayOutput) ToSubmarinerStatusGatewaysArrayOutput() SubmarinerStatusGatewaysArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysArrayOutput) ToSubmarinerStatusGatewaysArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGatewaysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGateways {
		return vs[0].([]SubmarinerStatusGateways)[vs[1].(int)]
	}).(SubmarinerStatusGatewaysOutput)
}

type SubmarinerStatusGatewaysConnections struct {
	Endpoint SubmarinerStatusGatewaysConnectionsEndpoint `pulumi:"endpoint"`
	// LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
	LatencyRTT    *SubmarinerStatusGatewaysConnectionsLatencyRTT `pulumi:"latencyRTT"`
	Status        string                                         `pulumi:"status"`
	StatusMessage string                                         `pulumi:"statusMessage"`
}

// SubmarinerStatusGatewaysConnectionsInput is an input type that accepts SubmarinerStatusGatewaysConnectionsArgs and SubmarinerStatusGatewaysConnectionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysConnectionsInput` via:
//
//          SubmarinerStatusGatewaysConnectionsArgs{...}
type SubmarinerStatusGatewaysConnectionsInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysConnectionsOutput() SubmarinerStatusGatewaysConnectionsOutput
	ToSubmarinerStatusGatewaysConnectionsOutputWithContext(context.Context) SubmarinerStatusGatewaysConnectionsOutput
}

type SubmarinerStatusGatewaysConnectionsArgs struct {
	Endpoint SubmarinerStatusGatewaysConnectionsEndpointInput `pulumi:"endpoint"`
	// LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
	LatencyRTT    SubmarinerStatusGatewaysConnectionsLatencyRTTPtrInput `pulumi:"latencyRTT"`
	Status        pulumi.StringInput                                    `pulumi:"status"`
	StatusMessage pulumi.StringInput                                    `pulumi:"statusMessage"`
}

func (SubmarinerStatusGatewaysConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnections)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysConnectionsArgs) ToSubmarinerStatusGatewaysConnectionsOutput() SubmarinerStatusGatewaysConnectionsOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysConnectionsArgs) ToSubmarinerStatusGatewaysConnectionsOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsOutput)
}

// SubmarinerStatusGatewaysConnectionsArrayInput is an input type that accepts SubmarinerStatusGatewaysConnectionsArray and SubmarinerStatusGatewaysConnectionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysConnectionsArrayInput` via:
//
//          SubmarinerStatusGatewaysConnectionsArray{ SubmarinerStatusGatewaysConnectionsArgs{...} }
type SubmarinerStatusGatewaysConnectionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysConnectionsArrayOutput() SubmarinerStatusGatewaysConnectionsArrayOutput
	ToSubmarinerStatusGatewaysConnectionsArrayOutputWithContext(context.Context) SubmarinerStatusGatewaysConnectionsArrayOutput
}

type SubmarinerStatusGatewaysConnectionsArray []SubmarinerStatusGatewaysConnectionsInput

func (SubmarinerStatusGatewaysConnectionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGatewaysConnections)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysConnectionsArray) ToSubmarinerStatusGatewaysConnectionsArrayOutput() SubmarinerStatusGatewaysConnectionsArrayOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysConnectionsArray) ToSubmarinerStatusGatewaysConnectionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsArrayOutput)
}

type SubmarinerStatusGatewaysConnectionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnections)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysConnectionsOutput) ToSubmarinerStatusGatewaysConnectionsOutput() SubmarinerStatusGatewaysConnectionsOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsOutput) ToSubmarinerStatusGatewaysConnectionsOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsOutput) Endpoint() SubmarinerStatusGatewaysConnectionsEndpointOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnections) SubmarinerStatusGatewaysConnectionsEndpoint {
		return v.Endpoint
	}).(SubmarinerStatusGatewaysConnectionsEndpointOutput)
}

// LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
func (o SubmarinerStatusGatewaysConnectionsOutput) LatencyRTT() SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnections) *SubmarinerStatusGatewaysConnectionsLatencyRTT {
		return v.LatencyRTT
	}).(SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnections) string { return v.Status }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnections) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type SubmarinerStatusGatewaysConnectionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysConnectionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGatewaysConnections)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysConnectionsArrayOutput) ToSubmarinerStatusGatewaysConnectionsArrayOutput() SubmarinerStatusGatewaysConnectionsArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsArrayOutput) ToSubmarinerStatusGatewaysConnectionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGatewaysConnectionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGatewaysConnections {
		return vs[0].([]SubmarinerStatusGatewaysConnections)[vs[1].(int)]
	}).(SubmarinerStatusGatewaysConnectionsOutput)
}

type SubmarinerStatusGatewaysConnectionsEndpoint struct {
	Backend        string            `pulumi:"backend"`
	Backend_config map[string]string `pulumi:"backend_config"`
	Cable_name     string            `pulumi:"cable_name"`
	Cluster_id     string            `pulumi:"cluster_id"`
	HealthCheckIP  *string           `pulumi:"healthCheckIP"`
	Hostname       string            `pulumi:"hostname"`
	Nat_enabled    bool              `pulumi:"nat_enabled"`
	Private_ip     string            `pulumi:"private_ip"`
	Public_ip      string            `pulumi:"public_ip"`
	Subnets        []string          `pulumi:"subnets"`
}

// SubmarinerStatusGatewaysConnectionsEndpointInput is an input type that accepts SubmarinerStatusGatewaysConnectionsEndpointArgs and SubmarinerStatusGatewaysConnectionsEndpointOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysConnectionsEndpointInput` via:
//
//          SubmarinerStatusGatewaysConnectionsEndpointArgs{...}
type SubmarinerStatusGatewaysConnectionsEndpointInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysConnectionsEndpointOutput() SubmarinerStatusGatewaysConnectionsEndpointOutput
	ToSubmarinerStatusGatewaysConnectionsEndpointOutputWithContext(context.Context) SubmarinerStatusGatewaysConnectionsEndpointOutput
}

type SubmarinerStatusGatewaysConnectionsEndpointArgs struct {
	Backend        pulumi.StringInput      `pulumi:"backend"`
	Backend_config pulumi.StringMapInput   `pulumi:"backend_config"`
	Cable_name     pulumi.StringInput      `pulumi:"cable_name"`
	Cluster_id     pulumi.StringInput      `pulumi:"cluster_id"`
	HealthCheckIP  pulumi.StringPtrInput   `pulumi:"healthCheckIP"`
	Hostname       pulumi.StringInput      `pulumi:"hostname"`
	Nat_enabled    pulumi.BoolInput        `pulumi:"nat_enabled"`
	Private_ip     pulumi.StringInput      `pulumi:"private_ip"`
	Public_ip      pulumi.StringInput      `pulumi:"public_ip"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (SubmarinerStatusGatewaysConnectionsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnectionsEndpoint)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysConnectionsEndpointArgs) ToSubmarinerStatusGatewaysConnectionsEndpointOutput() SubmarinerStatusGatewaysConnectionsEndpointOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsEndpointOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysConnectionsEndpointArgs) ToSubmarinerStatusGatewaysConnectionsEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsEndpointOutput)
}

type SubmarinerStatusGatewaysConnectionsEndpointOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysConnectionsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnectionsEndpoint)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) ToSubmarinerStatusGatewaysConnectionsEndpointOutput() SubmarinerStatusGatewaysConnectionsEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) ToSubmarinerStatusGatewaysConnectionsEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) string { return v.Backend }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Backend_config() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) map[string]string { return v.Backend_config }).(pulumi.StringMapOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Cable_name() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) string { return v.Cable_name }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Cluster_id() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) string { return v.Cluster_id }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) HealthCheckIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) *string { return v.HealthCheckIP }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Nat_enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) bool { return v.Nat_enabled }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Private_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) string { return v.Private_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Public_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) string { return v.Public_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysConnectionsEndpointOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsEndpoint) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type SubmarinerStatusGatewaysConnectionsEndpointBackend_config struct {
}

// SubmarinerStatusGatewaysConnectionsEndpointBackend_configInput is an input type that accepts SubmarinerStatusGatewaysConnectionsEndpointBackend_configArgs and SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysConnectionsEndpointBackend_configInput` via:
//
//          SubmarinerStatusGatewaysConnectionsEndpointBackend_configArgs{...}
type SubmarinerStatusGatewaysConnectionsEndpointBackend_configInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput() SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput
	ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutputWithContext(context.Context) SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput
}

type SubmarinerStatusGatewaysConnectionsEndpointBackend_configArgs struct {
}

func (SubmarinerStatusGatewaysConnectionsEndpointBackend_configArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnectionsEndpointBackend_config)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysConnectionsEndpointBackend_configArgs) ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput() SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysConnectionsEndpointBackend_configArgs) ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput)
}

type SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnectionsEndpointBackend_config)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput) ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput() SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput) ToSubmarinerStatusGatewaysConnectionsEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput {
	return o
}

// LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
type SubmarinerStatusGatewaysConnectionsLatencyRTT struct {
	Average *string `pulumi:"average"`
	Last    *string `pulumi:"last"`
	Max     *string `pulumi:"max"`
	Min     *string `pulumi:"min"`
	StdDev  *string `pulumi:"stdDev"`
}

// SubmarinerStatusGatewaysConnectionsLatencyRTTInput is an input type that accepts SubmarinerStatusGatewaysConnectionsLatencyRTTArgs and SubmarinerStatusGatewaysConnectionsLatencyRTTOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysConnectionsLatencyRTTInput` via:
//
//          SubmarinerStatusGatewaysConnectionsLatencyRTTArgs{...}
type SubmarinerStatusGatewaysConnectionsLatencyRTTInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTOutput
	ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutputWithContext(context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTOutput
}

// LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
type SubmarinerStatusGatewaysConnectionsLatencyRTTArgs struct {
	Average pulumi.StringPtrInput `pulumi:"average"`
	Last    pulumi.StringPtrInput `pulumi:"last"`
	Max     pulumi.StringPtrInput `pulumi:"max"`
	Min     pulumi.StringPtrInput `pulumi:"min"`
	StdDev  pulumi.StringPtrInput `pulumi:"stdDev"`
}

func (SubmarinerStatusGatewaysConnectionsLatencyRTTArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnectionsLatencyRTT)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysConnectionsLatencyRTTArgs) ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysConnectionsLatencyRTTArgs) ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsLatencyRTTOutput)
}

func (i SubmarinerStatusGatewaysConnectionsLatencyRTTArgs) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysConnectionsLatencyRTTArgs) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsLatencyRTTOutput).ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(ctx)
}

// SubmarinerStatusGatewaysConnectionsLatencyRTTPtrInput is an input type that accepts SubmarinerStatusGatewaysConnectionsLatencyRTTArgs, SubmarinerStatusGatewaysConnectionsLatencyRTTPtr and SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysConnectionsLatencyRTTPtrInput` via:
//
//          SubmarinerStatusGatewaysConnectionsLatencyRTTArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGatewaysConnectionsLatencyRTTPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput
	ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput
}

type submarinerStatusGatewaysConnectionsLatencyRTTPtrType SubmarinerStatusGatewaysConnectionsLatencyRTTArgs

func SubmarinerStatusGatewaysConnectionsLatencyRTTPtr(v *SubmarinerStatusGatewaysConnectionsLatencyRTTArgs) SubmarinerStatusGatewaysConnectionsLatencyRTTPtrInput {
	return (*submarinerStatusGatewaysConnectionsLatencyRTTPtrType)(v)
}

func (*submarinerStatusGatewaysConnectionsLatencyRTTPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGatewaysConnectionsLatencyRTT)(nil)).Elem()
}

func (i *submarinerStatusGatewaysConnectionsLatencyRTTPtrType) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return i.ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGatewaysConnectionsLatencyRTTPtrType) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput)
}

// LatencySpec describes the round trip time information for a packet between the gateway pods of two clusters.
type SubmarinerStatusGatewaysConnectionsLatencyRTTOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysConnectionsLatencyRTT)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) ToSubmarinerStatusGatewaysConnectionsLatencyRTTOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return o.ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsLatencyRTT) *SubmarinerStatusGatewaysConnectionsLatencyRTT {
		return &v
	}).(SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput)
}
func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) Average() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsLatencyRTT) *string { return v.Average }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsLatencyRTT) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsLatencyRTT) *string { return v.Max }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsLatencyRTT) *string { return v.Min }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTOutput) StdDev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysConnectionsLatencyRTT) *string { return v.StdDev }).(pulumi.StringPtrOutput)
}

type SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGatewaysConnectionsLatencyRTT)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput() SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) ToSubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput {
	return o
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) Elem() SubmarinerStatusGatewaysConnectionsLatencyRTTOutput {
	return o.ApplyT(func(v *SubmarinerStatusGatewaysConnectionsLatencyRTT) SubmarinerStatusGatewaysConnectionsLatencyRTT {
		return *v
	}).(SubmarinerStatusGatewaysConnectionsLatencyRTTOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) Average() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGatewaysConnectionsLatencyRTT) *string {
		if v == nil {
			return nil
		}
		return v.Average
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGatewaysConnectionsLatencyRTT) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGatewaysConnectionsLatencyRTT) *string {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGatewaysConnectionsLatencyRTT) *string {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput) StdDev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGatewaysConnectionsLatencyRTT) *string {
		if v == nil {
			return nil
		}
		return v.StdDev
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusGatewaysLocalEndpoint struct {
	Backend        string            `pulumi:"backend"`
	Backend_config map[string]string `pulumi:"backend_config"`
	Cable_name     string            `pulumi:"cable_name"`
	Cluster_id     string            `pulumi:"cluster_id"`
	HealthCheckIP  *string           `pulumi:"healthCheckIP"`
	Hostname       string            `pulumi:"hostname"`
	Nat_enabled    bool              `pulumi:"nat_enabled"`
	Private_ip     string            `pulumi:"private_ip"`
	Public_ip      string            `pulumi:"public_ip"`
	Subnets        []string          `pulumi:"subnets"`
}

// SubmarinerStatusGatewaysLocalEndpointInput is an input type that accepts SubmarinerStatusGatewaysLocalEndpointArgs and SubmarinerStatusGatewaysLocalEndpointOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysLocalEndpointInput` via:
//
//          SubmarinerStatusGatewaysLocalEndpointArgs{...}
type SubmarinerStatusGatewaysLocalEndpointInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysLocalEndpointOutput() SubmarinerStatusGatewaysLocalEndpointOutput
	ToSubmarinerStatusGatewaysLocalEndpointOutputWithContext(context.Context) SubmarinerStatusGatewaysLocalEndpointOutput
}

type SubmarinerStatusGatewaysLocalEndpointArgs struct {
	Backend        pulumi.StringInput      `pulumi:"backend"`
	Backend_config pulumi.StringMapInput   `pulumi:"backend_config"`
	Cable_name     pulumi.StringInput      `pulumi:"cable_name"`
	Cluster_id     pulumi.StringInput      `pulumi:"cluster_id"`
	HealthCheckIP  pulumi.StringPtrInput   `pulumi:"healthCheckIP"`
	Hostname       pulumi.StringInput      `pulumi:"hostname"`
	Nat_enabled    pulumi.BoolInput        `pulumi:"nat_enabled"`
	Private_ip     pulumi.StringInput      `pulumi:"private_ip"`
	Public_ip      pulumi.StringInput      `pulumi:"public_ip"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (SubmarinerStatusGatewaysLocalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysLocalEndpoint)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysLocalEndpointArgs) ToSubmarinerStatusGatewaysLocalEndpointOutput() SubmarinerStatusGatewaysLocalEndpointOutput {
	return i.ToSubmarinerStatusGatewaysLocalEndpointOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysLocalEndpointArgs) ToSubmarinerStatusGatewaysLocalEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysLocalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysLocalEndpointOutput)
}

type SubmarinerStatusGatewaysLocalEndpointOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysLocalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysLocalEndpoint)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) ToSubmarinerStatusGatewaysLocalEndpointOutput() SubmarinerStatusGatewaysLocalEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) ToSubmarinerStatusGatewaysLocalEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysLocalEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) string { return v.Backend }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Backend_config() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) map[string]string { return v.Backend_config }).(pulumi.StringMapOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Cable_name() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) string { return v.Cable_name }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Cluster_id() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) string { return v.Cluster_id }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) HealthCheckIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) *string { return v.HealthCheckIP }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Nat_enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) bool { return v.Nat_enabled }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Private_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) string { return v.Private_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Public_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) string { return v.Public_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysLocalEndpointOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysLocalEndpoint) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type SubmarinerStatusGatewaysLocalEndpointBackend_config struct {
}

// SubmarinerStatusGatewaysLocalEndpointBackend_configInput is an input type that accepts SubmarinerStatusGatewaysLocalEndpointBackend_configArgs and SubmarinerStatusGatewaysLocalEndpointBackend_configOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysLocalEndpointBackend_configInput` via:
//
//          SubmarinerStatusGatewaysLocalEndpointBackend_configArgs{...}
type SubmarinerStatusGatewaysLocalEndpointBackend_configInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutput() SubmarinerStatusGatewaysLocalEndpointBackend_configOutput
	ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutputWithContext(context.Context) SubmarinerStatusGatewaysLocalEndpointBackend_configOutput
}

type SubmarinerStatusGatewaysLocalEndpointBackend_configArgs struct {
}

func (SubmarinerStatusGatewaysLocalEndpointBackend_configArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysLocalEndpointBackend_config)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysLocalEndpointBackend_configArgs) ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutput() SubmarinerStatusGatewaysLocalEndpointBackend_configOutput {
	return i.ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysLocalEndpointBackend_configArgs) ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysLocalEndpointBackend_configOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysLocalEndpointBackend_configOutput)
}

type SubmarinerStatusGatewaysLocalEndpointBackend_configOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysLocalEndpointBackend_configOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysLocalEndpointBackend_config)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysLocalEndpointBackend_configOutput) ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutput() SubmarinerStatusGatewaysLocalEndpointBackend_configOutput {
	return o
}

func (o SubmarinerStatusGatewaysLocalEndpointBackend_configOutput) ToSubmarinerStatusGatewaysLocalEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysLocalEndpointBackend_configOutput {
	return o
}

type SubmarinerStatusGlobalnetDaemonSetStatus struct {
	LastResourceVersion       *string                                                           `pulumi:"lastResourceVersion"`
	MismatchedContainerImages bool                                                              `pulumi:"mismatchedContainerImages"`
	NonReadyContainerStates   []SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates `pulumi:"nonReadyContainerStates"`
	// DaemonSetStatus represents the current status of a daemon set.
	Status *SubmarinerStatusGlobalnetDaemonSetStatusStatus `pulumi:"status"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusArgs and SubmarinerStatusGlobalnetDaemonSetStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusOutput
}

type SubmarinerStatusGlobalnetDaemonSetStatusArgs struct {
	LastResourceVersion       pulumi.StringPtrInput                                                     `pulumi:"lastResourceVersion"`
	MismatchedContainerImages pulumi.BoolInput                                                          `pulumi:"mismatchedContainerImages"`
	NonReadyContainerStates   SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayInput `pulumi:"nonReadyContainerStates"`
	// DaemonSetStatus represents the current status of a daemon set.
	Status SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrInput `pulumi:"status"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusOutput)
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusOutput).ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusGlobalnetDaemonSetStatusPtrInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusArgs, SubmarinerStatusGlobalnetDaemonSetStatusPtr and SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusPtrInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGlobalnetDaemonSetStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput
}

type submarinerStatusGlobalnetDaemonSetStatusPtrType SubmarinerStatusGlobalnetDaemonSetStatusArgs

func SubmarinerStatusGlobalnetDaemonSetStatusPtr(v *SubmarinerStatusGlobalnetDaemonSetStatusArgs) SubmarinerStatusGlobalnetDaemonSetStatusPtrInput {
	return (*submarinerStatusGlobalnetDaemonSetStatusPtrType)(v)
}

func (*submarinerStatusGlobalnetDaemonSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (i *submarinerStatusGlobalnetDaemonSetStatusPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGlobalnetDaemonSetStatusPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *SubmarinerStatusGlobalnetDaemonSetStatus {
		return &v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) LastResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *string { return v.LastResourceVersion }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) MismatchedContainerImages() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) bool { return v.MismatchedContainerImages }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) NonReadyContainerStates() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) []SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates {
		return v.NonReadyContainerStates
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) Status() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *SubmarinerStatusGlobalnetDaemonSetStatusStatus {
		return v.Status
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) Elem() SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) SubmarinerStatusGlobalnetDaemonSetStatus { return *v }).(SubmarinerStatusGlobalnetDaemonSetStatusOutput)
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) LastResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastResourceVersion
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) MismatchedContainerImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.MismatchedContainerImages
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) NonReadyContainerStates() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) []SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates {
		if v == nil {
			return nil
		}
		return v.NonReadyContainerStates
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) Status() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *SubmarinerStatusGlobalnetDaemonSetStatusStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput)
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates struct {
	// Details about a running container
	Running *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning `pulumi:"running"`
	// Details about a terminated container
	Terminated *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated `pulumi:"terminated"`
	// Details about a waiting container
	Waiting *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting `pulumi:"waiting"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs struct {
	// Details about a running container
	Running SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrInput `pulumi:"running"`
	// Details about a terminated container
	Terminated SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput `pulumi:"terminated"`
	// Details about a waiting container
	Waiting SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrInput `pulumi:"waiting"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput)
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArray and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArray{ SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArgs{...} }
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput
}

type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArray []SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesInput

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArray) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArray) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput {
	return o
}

// Details about a running container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput) Running() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning {
		return v.Running
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Details about a terminated container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput) Terminated() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated {
		return v.Terminated
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Details about a waiting container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput) Waiting() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting {
		return v.Waiting
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates {
		return vs[0].([]SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStates)[vs[1].(int)]
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput)
}

// Details about a running container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning struct {
	// Time at which the container was last (re-)started
	StartedAt *string `pulumi:"startedAt"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput
}

// Details about a running container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs struct {
	// Time at which the container was last (re-)started
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput)
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput).ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx)
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs, SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtr and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput
}

type submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrType SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs

func SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtr(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningArgs) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrInput {
	return (*submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrType)(v)
}

func (*submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (i *submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Details about a running container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning) *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning {
		return &v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Time at which the container was last (re-)started
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning) *string {
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) Elem() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning {
		return *v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput)
}

// Time at which the container was last (re-)started
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunning) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Details about a terminated container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated struct {
	// Container's ID in the format 'docker://<container_id>'
	ContainerID *string `pulumi:"containerID"`
	// Exit status from the last termination of the container
	ExitCode int `pulumi:"exitCode"`
	// Time at which the container last terminated
	FinishedAt *string `pulumi:"finishedAt"`
	// Message regarding the last termination of the container
	Message *string `pulumi:"message"`
	// (brief) reason from the last termination of the container
	Reason *string `pulumi:"reason"`
	// Signal from the last termination of the container
	Signal *int `pulumi:"signal"`
	// Time at which previous execution of the container started
	StartedAt *string `pulumi:"startedAt"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput
}

// Details about a terminated container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs struct {
	// Container's ID in the format 'docker://<container_id>'
	ContainerID pulumi.StringPtrInput `pulumi:"containerID"`
	// Exit status from the last termination of the container
	ExitCode pulumi.IntInput `pulumi:"exitCode"`
	// Time at which the container last terminated
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message regarding the last termination of the container
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (brief) reason from the last termination of the container
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Signal from the last termination of the container
	Signal pulumi.IntPtrInput `pulumi:"signal"`
	// Time at which previous execution of the container started
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput)
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput).ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx)
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs, SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtr and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput
}

type submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrType SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs

func SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtr(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedArgs) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput {
	return (*submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrType)(v)
}

func (*submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (i *submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Details about a terminated container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated {
		return &v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Container's ID in the format 'docker://<container_id>'
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ContainerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.ContainerID
	}).(pulumi.StringPtrOutput)
}

// Exit status from the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) int {
		return v.ExitCode
	}).(pulumi.IntOutput)
}

// Time at which the container last terminated
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message regarding the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason from the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Signal from the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Signal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		return v.Signal
	}).(pulumi.IntPtrOutput)
}

// Time at which previous execution of the container started
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Elem() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated {
		return *v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput)
}

// Container's ID in the format 'docker://<container_id>'
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ContainerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.ContainerID
	}).(pulumi.StringPtrOutput)
}

// Exit status from the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ExitCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		if v == nil {
			return nil
		}
		return &v.ExitCode
	}).(pulumi.IntPtrOutput)
}

// Time at which the container last terminated
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message regarding the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason from the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Signal from the last termination of the container
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Signal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.IntPtrOutput)
}

// Time at which previous execution of the container started
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Details about a waiting container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting struct {
	// Message regarding why the container is not yet running.
	Message *string `pulumi:"message"`
	// (brief) reason the container is not yet running.
	Reason *string `pulumi:"reason"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput
}

// Details about a waiting container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs struct {
	// Message regarding why the container is not yet running.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (brief) reason the container is not yet running.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput)
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput).ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx)
}

// SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs, SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtr and SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput
}

type submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrType SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs

func SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtr(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingArgs) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrInput {
	return (*submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrType)(v)
}

func (*submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (i *submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

// Details about a waiting container
type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting) *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting {
		return &v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

// Message regarding why the container is not yet running.
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason the container is not yet running.
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Elem() SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting) SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting {
		return *v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput)
}

// Message regarding why the container is not yet running.
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason the container is not yet running.
func (o SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusGlobalnetDaemonSetStatusStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady int `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusStatusInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs and SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusStatusInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayInput `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntPtrInput `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntPtrInput `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntPtrInput `pulumi:"updatedNumberScheduled"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusStatus)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput)
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput).ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs, SubmarinerStatusGlobalnetDaemonSetStatusStatusPtr and SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput
}

type submarinerStatusGlobalnetDaemonSetStatusStatusPtrType SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs

func SubmarinerStatusGlobalnetDaemonSetStatusStatusPtr(v *SubmarinerStatusGlobalnetDaemonSetStatusStatusArgs) SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrInput {
	return (*submarinerStatusGlobalnetDaemonSetStatusStatusPtrType)(v)
}

func (*submarinerStatusGlobalnetDaemonSetStatusStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusStatus)(nil)).Elem()
}

func (i *submarinerStatusGlobalnetDaemonSetStatusStatusPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGlobalnetDaemonSetStatusStatusPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusStatus)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return o.ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) *SubmarinerStatusGlobalnetDaemonSetStatusStatus {
		return &v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) Conditions() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) []SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions {
		return v.Conditions
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) int { return v.CurrentNumberScheduled }).(pulumi.IntOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) int { return v.DesiredNumberScheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int { return v.NumberAvailable }).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) int { return v.NumberMisscheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) NumberReady() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) int { return v.NumberReady }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int { return v.NumberUnavailable }).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int { return v.UpdatedNumberScheduled }).(pulumi.IntPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatusStatus)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) Elem() SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) SubmarinerStatusGlobalnetDaemonSetStatusStatus {
		return *v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) Conditions() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) []SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) CurrentNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) DesiredNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberAvailable
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) NumberMisscheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberMisscheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) NumberReady() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberReady
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberUnavailable
	}).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of DaemonSet condition.
	Type string `pulumi:"type"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs and SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of DaemonSet condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput)
}

// SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArray and SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArray{ SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArgs{...} }
type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput
}

type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArray []SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsInput

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArray) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArray) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of DaemonSet condition.
func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions {
		return vs[0].([]SubmarinerStatusGlobalnetDaemonSetStatusStatusConditions)[vs[1].(int)]
	}).(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatus struct {
	LastResourceVersion       *string                                                            `pulumi:"lastResourceVersion"`
	MismatchedContainerImages bool                                                               `pulumi:"mismatchedContainerImages"`
	NonReadyContainerStates   []SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates `pulumi:"nonReadyContainerStates"`
	// DaemonSetStatus represents the current status of a daemon set.
	Status *SubmarinerStatusRouteAgentDaemonSetStatusStatus `pulumi:"status"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusArgs and SubmarinerStatusRouteAgentDaemonSetStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusOutput
}

type SubmarinerStatusRouteAgentDaemonSetStatusArgs struct {
	LastResourceVersion       pulumi.StringPtrInput                                                      `pulumi:"lastResourceVersion"`
	MismatchedContainerImages pulumi.BoolInput                                                           `pulumi:"mismatchedContainerImages"`
	NonReadyContainerStates   SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayInput `pulumi:"nonReadyContainerStates"`
	// DaemonSetStatus represents the current status of a daemon set.
	Status SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrInput `pulumi:"status"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusOutput)
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusOutput).ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusRouteAgentDaemonSetStatusPtrInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusArgs, SubmarinerStatusRouteAgentDaemonSetStatusPtr and SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusPtrInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusRouteAgentDaemonSetStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput
}

type submarinerStatusRouteAgentDaemonSetStatusPtrType SubmarinerStatusRouteAgentDaemonSetStatusArgs

func SubmarinerStatusRouteAgentDaemonSetStatusPtr(v *SubmarinerStatusRouteAgentDaemonSetStatusArgs) SubmarinerStatusRouteAgentDaemonSetStatusPtrInput {
	return (*submarinerStatusRouteAgentDaemonSetStatusPtrType)(v)
}

func (*submarinerStatusRouteAgentDaemonSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (i *submarinerStatusRouteAgentDaemonSetStatusPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusRouteAgentDaemonSetStatusPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *SubmarinerStatusRouteAgentDaemonSetStatus {
		return &v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) LastResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *string { return v.LastResourceVersion }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) MismatchedContainerImages() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) bool { return v.MismatchedContainerImages }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) NonReadyContainerStates() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) []SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates {
		return v.NonReadyContainerStates
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) Status() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *SubmarinerStatusRouteAgentDaemonSetStatusStatus {
		return v.Status
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) Elem() SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) SubmarinerStatusRouteAgentDaemonSetStatus {
		return *v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusOutput)
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) LastResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastResourceVersion
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) MismatchedContainerImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.MismatchedContainerImages
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) NonReadyContainerStates() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) []SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates {
		if v == nil {
			return nil
		}
		return v.NonReadyContainerStates
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) Status() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *SubmarinerStatusRouteAgentDaemonSetStatusStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput)
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates struct {
	// Details about a running container
	Running *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning `pulumi:"running"`
	// Details about a terminated container
	Terminated *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated `pulumi:"terminated"`
	// Details about a waiting container
	Waiting *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting `pulumi:"waiting"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs struct {
	// Details about a running container
	Running SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrInput `pulumi:"running"`
	// Details about a terminated container
	Terminated SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput `pulumi:"terminated"`
	// Details about a waiting container
	Waiting SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrInput `pulumi:"waiting"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput)
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArray and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArray{ SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArgs{...} }
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput
}

type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArray []SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesInput

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArray) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArray) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput)
}

// ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput {
	return o
}

// Details about a running container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput) Running() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning {
		return v.Running
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Details about a terminated container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput) Terminated() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated {
		return v.Terminated
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Details about a waiting container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput) Waiting() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates) *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting {
		return v.Waiting
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates {
		return vs[0].([]SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStates)[vs[1].(int)]
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput)
}

// Details about a running container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning struct {
	// Time at which the container was last (re-)started
	StartedAt *string `pulumi:"startedAt"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput
}

// Details about a running container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs struct {
	// Time at which the container was last (re-)started
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput)
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput).ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx)
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs, SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtr and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput
}

type submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrType SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs

func SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtr(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningArgs) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrInput {
	return (*submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrType)(v)
}

func (*submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (i *submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Details about a running container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning) *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning {
		return &v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput)
}

// Time at which the container was last (re-)started
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning) *string {
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) Elem() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning {
		return *v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput)
}

// Time at which the container was last (re-)started
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunning) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Details about a terminated container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated struct {
	// Container's ID in the format 'docker://<container_id>'
	ContainerID *string `pulumi:"containerID"`
	// Exit status from the last termination of the container
	ExitCode int `pulumi:"exitCode"`
	// Time at which the container last terminated
	FinishedAt *string `pulumi:"finishedAt"`
	// Message regarding the last termination of the container
	Message *string `pulumi:"message"`
	// (brief) reason from the last termination of the container
	Reason *string `pulumi:"reason"`
	// Signal from the last termination of the container
	Signal *int `pulumi:"signal"`
	// Time at which previous execution of the container started
	StartedAt *string `pulumi:"startedAt"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput
}

// Details about a terminated container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs struct {
	// Container's ID in the format 'docker://<container_id>'
	ContainerID pulumi.StringPtrInput `pulumi:"containerID"`
	// Exit status from the last termination of the container
	ExitCode pulumi.IntInput `pulumi:"exitCode"`
	// Time at which the container last terminated
	FinishedAt pulumi.StringPtrInput `pulumi:"finishedAt"`
	// Message regarding the last termination of the container
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (brief) reason from the last termination of the container
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Signal from the last termination of the container
	Signal pulumi.IntPtrInput `pulumi:"signal"`
	// Time at which previous execution of the container started
	StartedAt pulumi.StringPtrInput `pulumi:"startedAt"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput)
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput).ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx)
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs, SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtr and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput
}

type submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrType SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs

func SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtr(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedArgs) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrInput {
	return (*submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrType)(v)
}

func (*submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (i *submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Details about a terminated container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated {
		return &v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput)
}

// Container's ID in the format 'docker://<container_id>'
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ContainerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.ContainerID
	}).(pulumi.StringPtrOutput)
}

// Exit status from the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) int {
		return v.ExitCode
	}).(pulumi.IntOutput)
}

// Time at which the container last terminated
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message regarding the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason from the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Signal from the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) Signal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		return v.Signal
	}).(pulumi.IntPtrOutput)
}

// Time at which previous execution of the container started
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Elem() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated {
		return *v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput)
}

// Container's ID in the format 'docker://<container_id>'
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ContainerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.ContainerID
	}).(pulumi.StringPtrOutput)
}

// Exit status from the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) ExitCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		if v == nil {
			return nil
		}
		return &v.ExitCode
	}).(pulumi.IntPtrOutput)
}

// Time at which the container last terminated
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) FinishedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.FinishedAt
	}).(pulumi.StringPtrOutput)
}

// Message regarding the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason from the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Signal from the last termination of the container
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) Signal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *int {
		if v == nil {
			return nil
		}
		return v.Signal
	}).(pulumi.IntPtrOutput)
}

// Time at which previous execution of the container started
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminated) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

// Details about a waiting container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting struct {
	// Message regarding why the container is not yet running.
	Message *string `pulumi:"message"`
	// (brief) reason the container is not yet running.
	Reason *string `pulumi:"reason"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput
}

// Details about a waiting container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs struct {
	// Message regarding why the container is not yet running.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (brief) reason the container is not yet running.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput)
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput).ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx)
}

// SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs, SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtr and SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput
}

type submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrType SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs

func SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtr(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingArgs) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrInput {
	return (*submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrType)(v)
}

func (*submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (i *submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

// Details about a waiting container
type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting) *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting {
		return &v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput)
}

// Message regarding why the container is not yet running.
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason the container is not yet running.
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Elem() SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting) SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting {
		return *v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput)
}

// Message regarding why the container is not yet running.
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// (brief) reason the container is not yet running.
func (o SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaiting) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusRouteAgentDaemonSetStatusStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady int `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusStatusInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs and SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusStatusInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayInput `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntPtrInput `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntPtrInput `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntPtrInput `pulumi:"updatedNumberScheduled"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusStatus)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput)
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput).ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs, SubmarinerStatusRouteAgentDaemonSetStatusStatusPtr and SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput
}

type submarinerStatusRouteAgentDaemonSetStatusStatusPtrType SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs

func SubmarinerStatusRouteAgentDaemonSetStatusStatusPtr(v *SubmarinerStatusRouteAgentDaemonSetStatusStatusArgs) SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrInput {
	return (*submarinerStatusRouteAgentDaemonSetStatusStatusPtrType)(v)
}

func (*submarinerStatusRouteAgentDaemonSetStatusStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusStatus)(nil)).Elem()
}

func (i *submarinerStatusRouteAgentDaemonSetStatusStatusPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusRouteAgentDaemonSetStatusStatusPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusStatus)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return o.ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) *SubmarinerStatusRouteAgentDaemonSetStatusStatus {
		return &v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) Conditions() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) []SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions {
		return v.Conditions
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) int { return v.CurrentNumberScheduled }).(pulumi.IntOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) int { return v.DesiredNumberScheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int { return v.NumberAvailable }).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) int { return v.NumberMisscheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) NumberReady() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) int { return v.NumberReady }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int { return v.NumberUnavailable }).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int { return v.UpdatedNumberScheduled }).(pulumi.IntPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatusStatus)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) Elem() SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) SubmarinerStatusRouteAgentDaemonSetStatusStatus {
		return *v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) Conditions() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) []SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) CurrentNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) DesiredNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberAvailable
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) NumberMisscheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberMisscheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) NumberReady() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberReady
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberUnavailable
	}).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatusStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of DaemonSet condition.
	Type string `pulumi:"type"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs and SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of DaemonSet condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput)
}

// SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArray and SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArray{ SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArgs{...} }
type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput
}

type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArray []SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsInput

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArray) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArray) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of DaemonSet condition.
func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions {
		return vs[0].([]SubmarinerStatusRouteAgentDaemonSetStatusStatusConditions)[vs[1].(int)]
	}).(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(SubmarinerTypeOutput{})
	pulumi.RegisterOutputType(SubmarinerMetadataOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecConnectionHealthCheckOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecConnectionHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecImageOverridesOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesRunningPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusStatusConditionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysConnectionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysConnectionsArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysConnectionsEndpointOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysConnectionsEndpointBackend_configOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysConnectionsLatencyRTTOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysConnectionsLatencyRTTPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysLocalEndpointOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysLocalEndpointBackend_configOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesRunningPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesRunningPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesTerminatedPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusNonReadyContainerStatesWaitingPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusStatusConditionsArrayOutput{})
}
