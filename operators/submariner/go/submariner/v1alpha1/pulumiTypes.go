// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ServiceDiscovery is the Schema for the servicediscoveries API
type ServiceDiscoveryType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
	Spec *ServiceDiscoverySpec `pulumi:"spec"`
	// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
	Status map[string]interface{} `pulumi:"status"`
}

// ServiceDiscoveryTypeInput is an input type that accepts ServiceDiscoveryTypeArgs and ServiceDiscoveryTypeOutput values.
// You can construct a concrete instance of `ServiceDiscoveryTypeInput` via:
//
//          ServiceDiscoveryTypeArgs{...}
type ServiceDiscoveryTypeInput interface {
	pulumi.Input

	ToServiceDiscoveryTypeOutput() ServiceDiscoveryTypeOutput
	ToServiceDiscoveryTypeOutputWithContext(context.Context) ServiceDiscoveryTypeOutput
}

// ServiceDiscovery is the Schema for the servicediscoveries API
type ServiceDiscoveryTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
	Spec ServiceDiscoverySpecPtrInput `pulumi:"spec"`
	// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
	Status pulumi.MapInput `pulumi:"status"`
}

func (ServiceDiscoveryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryType)(nil)).Elem()
}

func (i ServiceDiscoveryTypeArgs) ToServiceDiscoveryTypeOutput() ServiceDiscoveryTypeOutput {
	return i.ToServiceDiscoveryTypeOutputWithContext(context.Background())
}

func (i ServiceDiscoveryTypeArgs) ToServiceDiscoveryTypeOutputWithContext(ctx context.Context) ServiceDiscoveryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryTypeOutput)
}

// ServiceDiscovery is the Schema for the servicediscoveries API
type ServiceDiscoveryTypeOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryType)(nil)).Elem()
}

func (o ServiceDiscoveryTypeOutput) ToServiceDiscoveryTypeOutput() ServiceDiscoveryTypeOutput {
	return o
}

func (o ServiceDiscoveryTypeOutput) ToServiceDiscoveryTypeOutputWithContext(ctx context.Context) ServiceDiscoveryTypeOutput {
	return o
}

func (o ServiceDiscoveryTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoveryTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoveryTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
func (o ServiceDiscoveryTypeOutput) Spec() ServiceDiscoverySpecPtrOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) *ServiceDiscoverySpec { return v.Spec }).(ServiceDiscoverySpecPtrOutput)
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
func (o ServiceDiscoveryTypeOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ServiceDiscoveryType) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

type ServiceDiscoveryMetadata struct {
}

// ServiceDiscoveryMetadataInput is an input type that accepts ServiceDiscoveryMetadataArgs and ServiceDiscoveryMetadataOutput values.
// You can construct a concrete instance of `ServiceDiscoveryMetadataInput` via:
//
//          ServiceDiscoveryMetadataArgs{...}
type ServiceDiscoveryMetadataInput interface {
	pulumi.Input

	ToServiceDiscoveryMetadataOutput() ServiceDiscoveryMetadataOutput
	ToServiceDiscoveryMetadataOutputWithContext(context.Context) ServiceDiscoveryMetadataOutput
}

type ServiceDiscoveryMetadataArgs struct {
}

func (ServiceDiscoveryMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryMetadata)(nil)).Elem()
}

func (i ServiceDiscoveryMetadataArgs) ToServiceDiscoveryMetadataOutput() ServiceDiscoveryMetadataOutput {
	return i.ToServiceDiscoveryMetadataOutputWithContext(context.Background())
}

func (i ServiceDiscoveryMetadataArgs) ToServiceDiscoveryMetadataOutputWithContext(ctx context.Context) ServiceDiscoveryMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryMetadataOutput)
}

type ServiceDiscoveryMetadataOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryMetadata)(nil)).Elem()
}

func (o ServiceDiscoveryMetadataOutput) ToServiceDiscoveryMetadataOutput() ServiceDiscoveryMetadataOutput {
	return o
}

func (o ServiceDiscoveryMetadataOutput) ToServiceDiscoveryMetadataOutputWithContext(ctx context.Context) ServiceDiscoveryMetadataOutput {
	return o
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
type ServiceDiscoverySpec struct {
	BrokerK8sApiServer       string  `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  string  `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              string  `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace string  `pulumi:"brokerK8sRemoteNamespace"`
	ClusterID                string  `pulumi:"clusterID"`
	Debug                    bool    `pulumi:"debug"`
	GlobalnetEnabled         *bool   `pulumi:"globalnetEnabled"`
	Namespace                string  `pulumi:"namespace"`
	Repository               *string `pulumi:"repository"`
	Version                  *string `pulumi:"version"`
}

// ServiceDiscoverySpecInput is an input type that accepts ServiceDiscoverySpecArgs and ServiceDiscoverySpecOutput values.
// You can construct a concrete instance of `ServiceDiscoverySpecInput` via:
//
//          ServiceDiscoverySpecArgs{...}
type ServiceDiscoverySpecInput interface {
	pulumi.Input

	ToServiceDiscoverySpecOutput() ServiceDiscoverySpecOutput
	ToServiceDiscoverySpecOutputWithContext(context.Context) ServiceDiscoverySpecOutput
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
type ServiceDiscoverySpecArgs struct {
	BrokerK8sApiServer       pulumi.StringInput    `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  pulumi.StringInput    `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              pulumi.StringInput    `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace pulumi.StringInput    `pulumi:"brokerK8sRemoteNamespace"`
	ClusterID                pulumi.StringInput    `pulumi:"clusterID"`
	Debug                    pulumi.BoolInput      `pulumi:"debug"`
	GlobalnetEnabled         pulumi.BoolPtrInput   `pulumi:"globalnetEnabled"`
	Namespace                pulumi.StringInput    `pulumi:"namespace"`
	Repository               pulumi.StringPtrInput `pulumi:"repository"`
	Version                  pulumi.StringPtrInput `pulumi:"version"`
}

func (ServiceDiscoverySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoverySpec)(nil)).Elem()
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecOutput() ServiceDiscoverySpecOutput {
	return i.ToServiceDiscoverySpecOutputWithContext(context.Background())
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecOutputWithContext(ctx context.Context) ServiceDiscoverySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoverySpecOutput)
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return i.ToServiceDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i ServiceDiscoverySpecArgs) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoverySpecOutput).ToServiceDiscoverySpecPtrOutputWithContext(ctx)
}

// ServiceDiscoverySpecPtrInput is an input type that accepts ServiceDiscoverySpecArgs, ServiceDiscoverySpecPtr and ServiceDiscoverySpecPtrOutput values.
// You can construct a concrete instance of `ServiceDiscoverySpecPtrInput` via:
//
//          ServiceDiscoverySpecArgs{...}
//
//  or:
//
//          nil
type ServiceDiscoverySpecPtrInput interface {
	pulumi.Input

	ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput
	ToServiceDiscoverySpecPtrOutputWithContext(context.Context) ServiceDiscoverySpecPtrOutput
}

type serviceDiscoverySpecPtrType ServiceDiscoverySpecArgs

func ServiceDiscoverySpecPtr(v *ServiceDiscoverySpecArgs) ServiceDiscoverySpecPtrInput {
	return (*serviceDiscoverySpecPtrType)(v)
}

func (*serviceDiscoverySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDiscoverySpec)(nil)).Elem()
}

func (i *serviceDiscoverySpecPtrType) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return i.ToServiceDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i *serviceDiscoverySpecPtrType) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoverySpecPtrOutput)
}

// ServiceDiscoverySpec defines the desired state of ServiceDiscovery
type ServiceDiscoverySpecOutput struct{ *pulumi.OutputState }

func (ServiceDiscoverySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoverySpec)(nil)).Elem()
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecOutput() ServiceDiscoverySpecOutput {
	return o
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecOutputWithContext(ctx context.Context) ServiceDiscoverySpecOutput {
	return o
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return o.ToServiceDiscoverySpecPtrOutputWithContext(context.Background())
}

func (o ServiceDiscoverySpecOutput) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *ServiceDiscoverySpec {
		return &v
	}).(ServiceDiscoverySpecPtrOutput)
}
func (o ServiceDiscoverySpecOutput) BrokerK8sApiServer() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sApiServer }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) BrokerK8sApiServerToken() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sApiServerToken }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) BrokerK8sCA() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sCA }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) BrokerK8sRemoteNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.BrokerK8sRemoteNamespace }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) ClusterID() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.ClusterID }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) Debug() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) bool { return v.Debug }).(pulumi.BoolOutput)
}

func (o ServiceDiscoverySpecOutput) GlobalnetEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *bool { return v.GlobalnetEnabled }).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoverySpecOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ServiceDiscoverySpecOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDiscoverySpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ServiceDiscoverySpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceDiscoverySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDiscoverySpec)(nil)).Elem()
}

func (o ServiceDiscoverySpecPtrOutput) ToServiceDiscoverySpecPtrOutput() ServiceDiscoverySpecPtrOutput {
	return o
}

func (o ServiceDiscoverySpecPtrOutput) ToServiceDiscoverySpecPtrOutputWithContext(ctx context.Context) ServiceDiscoverySpecPtrOutput {
	return o
}

func (o ServiceDiscoverySpecPtrOutput) Elem() ServiceDiscoverySpecOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) ServiceDiscoverySpec { return *v }).(ServiceDiscoverySpecOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sApiServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServer
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sApiServerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServerToken
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sCA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sCA
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) BrokerK8sRemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sRemoteNamespace
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) ClusterID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterID
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Debug
	}).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) GlobalnetEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *bool {
		if v == nil {
			return nil
		}
		return v.GlobalnetEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoverySpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
type ServiceDiscoveryStatus struct {
}

// ServiceDiscoveryStatusInput is an input type that accepts ServiceDiscoveryStatusArgs and ServiceDiscoveryStatusOutput values.
// You can construct a concrete instance of `ServiceDiscoveryStatusInput` via:
//
//          ServiceDiscoveryStatusArgs{...}
type ServiceDiscoveryStatusInput interface {
	pulumi.Input

	ToServiceDiscoveryStatusOutput() ServiceDiscoveryStatusOutput
	ToServiceDiscoveryStatusOutputWithContext(context.Context) ServiceDiscoveryStatusOutput
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
type ServiceDiscoveryStatusArgs struct {
}

func (ServiceDiscoveryStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryStatus)(nil)).Elem()
}

func (i ServiceDiscoveryStatusArgs) ToServiceDiscoveryStatusOutput() ServiceDiscoveryStatusOutput {
	return i.ToServiceDiscoveryStatusOutputWithContext(context.Background())
}

func (i ServiceDiscoveryStatusArgs) ToServiceDiscoveryStatusOutputWithContext(ctx context.Context) ServiceDiscoveryStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryStatusOutput)
}

// ServiceDiscoveryStatus defines the observed state of ServiceDiscovery
type ServiceDiscoveryStatusOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDiscoveryStatus)(nil)).Elem()
}

func (o ServiceDiscoveryStatusOutput) ToServiceDiscoveryStatusOutput() ServiceDiscoveryStatusOutput {
	return o
}

func (o ServiceDiscoveryStatusOutput) ToServiceDiscoveryStatusOutputWithContext(ctx context.Context) ServiceDiscoveryStatusOutput {
	return o
}

// Submariner is the Schema for the submariners API
type SubmarinerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SubmarinerSpec defines the desired state of Submariner
	Spec *SubmarinerSpec `pulumi:"spec"`
	// SubmarinerStatus defines the observed state of Submariner
	Status *SubmarinerStatus `pulumi:"status"`
}

// SubmarinerTypeInput is an input type that accepts SubmarinerTypeArgs and SubmarinerTypeOutput values.
// You can construct a concrete instance of `SubmarinerTypeInput` via:
//
//          SubmarinerTypeArgs{...}
type SubmarinerTypeInput interface {
	pulumi.Input

	ToSubmarinerTypeOutput() SubmarinerTypeOutput
	ToSubmarinerTypeOutputWithContext(context.Context) SubmarinerTypeOutput
}

// Submariner is the Schema for the submariners API
type SubmarinerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// SubmarinerSpec defines the desired state of Submariner
	Spec SubmarinerSpecPtrInput `pulumi:"spec"`
	// SubmarinerStatus defines the observed state of Submariner
	Status SubmarinerStatusPtrInput `pulumi:"status"`
}

func (SubmarinerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerType)(nil)).Elem()
}

func (i SubmarinerTypeArgs) ToSubmarinerTypeOutput() SubmarinerTypeOutput {
	return i.ToSubmarinerTypeOutputWithContext(context.Background())
}

func (i SubmarinerTypeArgs) ToSubmarinerTypeOutputWithContext(ctx context.Context) SubmarinerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerTypeOutput)
}

// Submariner is the Schema for the submariners API
type SubmarinerTypeOutput struct{ *pulumi.OutputState }

func (SubmarinerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerType)(nil)).Elem()
}

func (o SubmarinerTypeOutput) ToSubmarinerTypeOutput() SubmarinerTypeOutput {
	return o
}

func (o SubmarinerTypeOutput) ToSubmarinerTypeOutputWithContext(ctx context.Context) SubmarinerTypeOutput {
	return o
}

func (o SubmarinerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o SubmarinerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o SubmarinerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// SubmarinerSpec defines the desired state of Submariner
func (o SubmarinerTypeOutput) Spec() SubmarinerSpecPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *SubmarinerSpec { return v.Spec }).(SubmarinerSpecPtrOutput)
}

// SubmarinerStatus defines the observed state of Submariner
func (o SubmarinerTypeOutput) Status() SubmarinerStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerType) *SubmarinerStatus { return v.Status }).(SubmarinerStatusPtrOutput)
}

type SubmarinerMetadata struct {
}

// SubmarinerMetadataInput is an input type that accepts SubmarinerMetadataArgs and SubmarinerMetadataOutput values.
// You can construct a concrete instance of `SubmarinerMetadataInput` via:
//
//          SubmarinerMetadataArgs{...}
type SubmarinerMetadataInput interface {
	pulumi.Input

	ToSubmarinerMetadataOutput() SubmarinerMetadataOutput
	ToSubmarinerMetadataOutputWithContext(context.Context) SubmarinerMetadataOutput
}

type SubmarinerMetadataArgs struct {
}

func (SubmarinerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerMetadata)(nil)).Elem()
}

func (i SubmarinerMetadataArgs) ToSubmarinerMetadataOutput() SubmarinerMetadataOutput {
	return i.ToSubmarinerMetadataOutputWithContext(context.Background())
}

func (i SubmarinerMetadataArgs) ToSubmarinerMetadataOutputWithContext(ctx context.Context) SubmarinerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerMetadataOutput)
}

type SubmarinerMetadataOutput struct{ *pulumi.OutputState }

func (SubmarinerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerMetadata)(nil)).Elem()
}

func (o SubmarinerMetadataOutput) ToSubmarinerMetadataOutput() SubmarinerMetadataOutput {
	return o
}

func (o SubmarinerMetadataOutput) ToSubmarinerMetadataOutputWithContext(ctx context.Context) SubmarinerMetadataOutput {
	return o
}

// SubmarinerSpec defines the desired state of Submariner
type SubmarinerSpec struct {
	Broker                   string  `pulumi:"broker"`
	BrokerK8sApiServer       string  `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  string  `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              string  `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace string  `pulumi:"brokerK8sRemoteNamespace"`
	CableDriver              *string `pulumi:"cableDriver"`
	CeIPSecDebug             bool    `pulumi:"ceIPSecDebug"`
	CeIPSecIKEPort           *int    `pulumi:"ceIPSecIKEPort"`
	CeIPSecNATTPort          *int    `pulumi:"ceIPSecNATTPort"`
	CeIPSecPSK               string  `pulumi:"ceIPSecPSK"`
	ClusterCIDR              string  `pulumi:"clusterCIDR"`
	ClusterID                string  `pulumi:"clusterID"`
	ColorCodes               *string `pulumi:"colorCodes"`
	Debug                    bool    `pulumi:"debug"`
	GlobalCIDR               *string `pulumi:"globalCIDR"`
	Namespace                string  `pulumi:"namespace"`
	NatEnabled               bool    `pulumi:"natEnabled"`
	Repository               *string `pulumi:"repository"`
	ServiceCIDR              string  `pulumi:"serviceCIDR"`
	ServiceDiscoveryEnabled  *bool   `pulumi:"serviceDiscoveryEnabled"`
	Version                  *string `pulumi:"version"`
}

// SubmarinerSpecInput is an input type that accepts SubmarinerSpecArgs and SubmarinerSpecOutput values.
// You can construct a concrete instance of `SubmarinerSpecInput` via:
//
//          SubmarinerSpecArgs{...}
type SubmarinerSpecInput interface {
	pulumi.Input

	ToSubmarinerSpecOutput() SubmarinerSpecOutput
	ToSubmarinerSpecOutputWithContext(context.Context) SubmarinerSpecOutput
}

// SubmarinerSpec defines the desired state of Submariner
type SubmarinerSpecArgs struct {
	Broker                   pulumi.StringInput    `pulumi:"broker"`
	BrokerK8sApiServer       pulumi.StringInput    `pulumi:"brokerK8sApiServer"`
	BrokerK8sApiServerToken  pulumi.StringInput    `pulumi:"brokerK8sApiServerToken"`
	BrokerK8sCA              pulumi.StringInput    `pulumi:"brokerK8sCA"`
	BrokerK8sRemoteNamespace pulumi.StringInput    `pulumi:"brokerK8sRemoteNamespace"`
	CableDriver              pulumi.StringPtrInput `pulumi:"cableDriver"`
	CeIPSecDebug             pulumi.BoolInput      `pulumi:"ceIPSecDebug"`
	CeIPSecIKEPort           pulumi.IntPtrInput    `pulumi:"ceIPSecIKEPort"`
	CeIPSecNATTPort          pulumi.IntPtrInput    `pulumi:"ceIPSecNATTPort"`
	CeIPSecPSK               pulumi.StringInput    `pulumi:"ceIPSecPSK"`
	ClusterCIDR              pulumi.StringInput    `pulumi:"clusterCIDR"`
	ClusterID                pulumi.StringInput    `pulumi:"clusterID"`
	ColorCodes               pulumi.StringPtrInput `pulumi:"colorCodes"`
	Debug                    pulumi.BoolInput      `pulumi:"debug"`
	GlobalCIDR               pulumi.StringPtrInput `pulumi:"globalCIDR"`
	Namespace                pulumi.StringInput    `pulumi:"namespace"`
	NatEnabled               pulumi.BoolInput      `pulumi:"natEnabled"`
	Repository               pulumi.StringPtrInput `pulumi:"repository"`
	ServiceCIDR              pulumi.StringInput    `pulumi:"serviceCIDR"`
	ServiceDiscoveryEnabled  pulumi.BoolPtrInput   `pulumi:"serviceDiscoveryEnabled"`
	Version                  pulumi.StringPtrInput `pulumi:"version"`
}

func (SubmarinerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpec)(nil)).Elem()
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecOutput() SubmarinerSpecOutput {
	return i.ToSubmarinerSpecOutputWithContext(context.Background())
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecOutputWithContext(ctx context.Context) SubmarinerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecOutput)
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return i.ToSubmarinerSpecPtrOutputWithContext(context.Background())
}

func (i SubmarinerSpecArgs) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecOutput).ToSubmarinerSpecPtrOutputWithContext(ctx)
}

// SubmarinerSpecPtrInput is an input type that accepts SubmarinerSpecArgs, SubmarinerSpecPtr and SubmarinerSpecPtrOutput values.
// You can construct a concrete instance of `SubmarinerSpecPtrInput` via:
//
//          SubmarinerSpecArgs{...}
//
//  or:
//
//          nil
type SubmarinerSpecPtrInput interface {
	pulumi.Input

	ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput
	ToSubmarinerSpecPtrOutputWithContext(context.Context) SubmarinerSpecPtrOutput
}

type submarinerSpecPtrType SubmarinerSpecArgs

func SubmarinerSpecPtr(v *SubmarinerSpecArgs) SubmarinerSpecPtrInput {
	return (*submarinerSpecPtrType)(v)
}

func (*submarinerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerSpec)(nil)).Elem()
}

func (i *submarinerSpecPtrType) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return i.ToSubmarinerSpecPtrOutputWithContext(context.Background())
}

func (i *submarinerSpecPtrType) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerSpecPtrOutput)
}

// SubmarinerSpec defines the desired state of Submariner
type SubmarinerSpecOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerSpec)(nil)).Elem()
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecOutput() SubmarinerSpecOutput {
	return o
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecOutputWithContext(ctx context.Context) SubmarinerSpecOutput {
	return o
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return o.ToSubmarinerSpecPtrOutputWithContext(context.Background())
}

func (o SubmarinerSpecOutput) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *SubmarinerSpec {
		return &v
	}).(SubmarinerSpecPtrOutput)
}
func (o SubmarinerSpecOutput) Broker() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.Broker }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sApiServer() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sApiServer }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sApiServerToken() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sApiServerToken }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sCA() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sCA }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) BrokerK8sRemoteNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.BrokerK8sRemoteNamespace }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) CableDriver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.CableDriver }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) CeIPSecDebug() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerSpec) bool { return v.CeIPSecDebug }).(pulumi.BoolOutput)
}

func (o SubmarinerSpecOutput) CeIPSecIKEPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *int { return v.CeIPSecIKEPort }).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecOutput) CeIPSecNATTPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *int { return v.CeIPSecNATTPort }).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecOutput) CeIPSecPSK() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.CeIPSecPSK }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ClusterCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.ClusterCIDR }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ClusterID() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.ClusterID }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.ColorCodes }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) Debug() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerSpec) bool { return v.Debug }).(pulumi.BoolOutput)
}

func (o SubmarinerSpecOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.GlobalCIDR }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) NatEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerSpec) bool { return v.NatEnabled }).(pulumi.BoolOutput)
}

func (o SubmarinerSpecOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecOutput) ServiceCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerSpec) string { return v.ServiceCIDR }).(pulumi.StringOutput)
}

func (o SubmarinerSpecOutput) ServiceDiscoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *bool { return v.ServiceDiscoveryEnabled }).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SubmarinerSpecPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerSpec)(nil)).Elem()
}

func (o SubmarinerSpecPtrOutput) ToSubmarinerSpecPtrOutput() SubmarinerSpecPtrOutput {
	return o
}

func (o SubmarinerSpecPtrOutput) ToSubmarinerSpecPtrOutputWithContext(ctx context.Context) SubmarinerSpecPtrOutput {
	return o
}

func (o SubmarinerSpecPtrOutput) Elem() SubmarinerSpecOutput {
	return o.ApplyT(func(v *SubmarinerSpec) SubmarinerSpec { return *v }).(SubmarinerSpecOutput)
}

func (o SubmarinerSpecPtrOutput) Broker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Broker
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sApiServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServer
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sApiServerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sApiServerToken
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sCA() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sCA
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) BrokerK8sRemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.BrokerK8sRemoteNamespace
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CableDriver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.CableDriver
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecDebug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.CeIPSecDebug
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecIKEPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *int {
		if v == nil {
			return nil
		}
		return v.CeIPSecIKEPort
	}).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecNATTPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *int {
		if v == nil {
			return nil
		}
		return v.CeIPSecNATTPort
	}).(pulumi.IntPtrOutput)
}

func (o SubmarinerSpecPtrOutput) CeIPSecPSK() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.CeIPSecPSK
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ClusterCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ClusterID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterID
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.ColorCodes
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Debug
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.GlobalCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) NatEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.NatEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerSpecPtrOutput) ServiceDiscoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceDiscoveryEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SubmarinerSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// SubmarinerStatus defines the observed state of Submariner
type SubmarinerStatus struct {
	ClusterCIDR string  `pulumi:"clusterCIDR"`
	ClusterID   string  `pulumi:"clusterID"`
	ColorCodes  *string `pulumi:"colorCodes"`
	// DaemonSetStatus represents the current status of a daemon set.
	EngineDaemonSetStatus *SubmarinerStatusEngineDaemonSetStatus `pulumi:"engineDaemonSetStatus"`
	Gateways              []SubmarinerStatusGateways             `pulumi:"gateways"`
	GlobalCIDR            *string                                `pulumi:"globalCIDR"`
	// DaemonSetStatus represents the current status of a daemon set.
	GlobalnetDaemonSetStatus *SubmarinerStatusGlobalnetDaemonSetStatus `pulumi:"globalnetDaemonSetStatus"`
	NatEnabled               bool                                      `pulumi:"natEnabled"`
	// DaemonSetStatus represents the current status of a daemon set.
	RouteAgentDaemonSetStatus *SubmarinerStatusRouteAgentDaemonSetStatus `pulumi:"routeAgentDaemonSetStatus"`
	ServiceCIDR               string                                     `pulumi:"serviceCIDR"`
}

// SubmarinerStatusInput is an input type that accepts SubmarinerStatusArgs and SubmarinerStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusInput` via:
//
//          SubmarinerStatusArgs{...}
type SubmarinerStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusOutput() SubmarinerStatusOutput
	ToSubmarinerStatusOutputWithContext(context.Context) SubmarinerStatusOutput
}

// SubmarinerStatus defines the observed state of Submariner
type SubmarinerStatusArgs struct {
	ClusterCIDR pulumi.StringInput    `pulumi:"clusterCIDR"`
	ClusterID   pulumi.StringInput    `pulumi:"clusterID"`
	ColorCodes  pulumi.StringPtrInput `pulumi:"colorCodes"`
	// DaemonSetStatus represents the current status of a daemon set.
	EngineDaemonSetStatus SubmarinerStatusEngineDaemonSetStatusPtrInput `pulumi:"engineDaemonSetStatus"`
	Gateways              SubmarinerStatusGatewaysArrayInput            `pulumi:"gateways"`
	GlobalCIDR            pulumi.StringPtrInput                         `pulumi:"globalCIDR"`
	// DaemonSetStatus represents the current status of a daemon set.
	GlobalnetDaemonSetStatus SubmarinerStatusGlobalnetDaemonSetStatusPtrInput `pulumi:"globalnetDaemonSetStatus"`
	NatEnabled               pulumi.BoolInput                                 `pulumi:"natEnabled"`
	// DaemonSetStatus represents the current status of a daemon set.
	RouteAgentDaemonSetStatus SubmarinerStatusRouteAgentDaemonSetStatusPtrInput `pulumi:"routeAgentDaemonSetStatus"`
	ServiceCIDR               pulumi.StringInput                                `pulumi:"serviceCIDR"`
}

func (SubmarinerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatus)(nil)).Elem()
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusOutput() SubmarinerStatusOutput {
	return i.ToSubmarinerStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusOutputWithContext(ctx context.Context) SubmarinerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusOutput)
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return i.ToSubmarinerStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusArgs) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusOutput).ToSubmarinerStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusPtrInput is an input type that accepts SubmarinerStatusArgs, SubmarinerStatusPtr and SubmarinerStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusPtrInput` via:
//
//          SubmarinerStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput
	ToSubmarinerStatusPtrOutputWithContext(context.Context) SubmarinerStatusPtrOutput
}

type submarinerStatusPtrType SubmarinerStatusArgs

func SubmarinerStatusPtr(v *SubmarinerStatusArgs) SubmarinerStatusPtrInput {
	return (*submarinerStatusPtrType)(v)
}

func (*submarinerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatus)(nil)).Elem()
}

func (i *submarinerStatusPtrType) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return i.ToSubmarinerStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusPtrType) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusPtrOutput)
}

// SubmarinerStatus defines the observed state of Submariner
type SubmarinerStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatus)(nil)).Elem()
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusOutput() SubmarinerStatusOutput {
	return o
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusOutputWithContext(ctx context.Context) SubmarinerStatusOutput {
	return o
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return o.ToSubmarinerStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusOutput) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatus {
		return &v
	}).(SubmarinerStatusPtrOutput)
}
func (o SubmarinerStatusOutput) ClusterCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatus) string { return v.ClusterCIDR }).(pulumi.StringOutput)
}

func (o SubmarinerStatusOutput) ClusterID() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatus) string { return v.ClusterID }).(pulumi.StringOutput)
}

func (o SubmarinerStatusOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.ColorCodes }).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusOutput) EngineDaemonSetStatus() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatusEngineDaemonSetStatus { return v.EngineDaemonSetStatus }).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusOutput) Gateways() SubmarinerStatusGatewaysArrayOutput {
	return o.ApplyT(func(v SubmarinerStatus) []SubmarinerStatusGateways { return v.Gateways }).(SubmarinerStatusGatewaysArrayOutput)
}

func (o SubmarinerStatusOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *string { return v.GlobalCIDR }).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusOutput) GlobalnetDaemonSetStatus() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatusGlobalnetDaemonSetStatus { return v.GlobalnetDaemonSetStatus }).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusOutput) NatEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatus) bool { return v.NatEnabled }).(pulumi.BoolOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusOutput) RouteAgentDaemonSetStatus() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatus) *SubmarinerStatusRouteAgentDaemonSetStatus {
		return v.RouteAgentDaemonSetStatus
	}).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusOutput) ServiceCIDR() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatus) string { return v.ServiceCIDR }).(pulumi.StringOutput)
}

type SubmarinerStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatus)(nil)).Elem()
}

func (o SubmarinerStatusPtrOutput) ToSubmarinerStatusPtrOutput() SubmarinerStatusPtrOutput {
	return o
}

func (o SubmarinerStatusPtrOutput) ToSubmarinerStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusPtrOutput {
	return o
}

func (o SubmarinerStatusPtrOutput) Elem() SubmarinerStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatus) SubmarinerStatus { return *v }).(SubmarinerStatusOutput)
}

func (o SubmarinerStatusPtrOutput) ClusterCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterCIDR
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) ClusterID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterID
	}).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusPtrOutput) ColorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.ColorCodes
	}).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusPtrOutput) EngineDaemonSetStatus() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *SubmarinerStatusEngineDaemonSetStatus {
		if v == nil {
			return nil
		}
		return v.EngineDaemonSetStatus
	}).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusPtrOutput) Gateways() SubmarinerStatusGatewaysArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatus) []SubmarinerStatusGateways {
		if v == nil {
			return nil
		}
		return v.Gateways
	}).(SubmarinerStatusGatewaysArrayOutput)
}

func (o SubmarinerStatusPtrOutput) GlobalCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return v.GlobalCIDR
	}).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusPtrOutput) GlobalnetDaemonSetStatus() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *SubmarinerStatusGlobalnetDaemonSetStatus {
		if v == nil {
			return nil
		}
		return v.GlobalnetDaemonSetStatus
	}).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusPtrOutput) NatEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.NatEnabled
	}).(pulumi.BoolPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
func (o SubmarinerStatusPtrOutput) RouteAgentDaemonSetStatus() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *SubmarinerStatusRouteAgentDaemonSetStatus {
		if v == nil {
			return nil
		}
		return v.RouteAgentDaemonSetStatus
	}).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

func (o SubmarinerStatusPtrOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatus) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceCIDR
	}).(pulumi.StringPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusEngineDaemonSetStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []SubmarinerStatusEngineDaemonSetStatusConditions `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady int `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`
}

// SubmarinerStatusEngineDaemonSetStatusInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusArgs and SubmarinerStatusEngineDaemonSetStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusArgs{...}
type SubmarinerStatusEngineDaemonSetStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusOutput() SubmarinerStatusEngineDaemonSetStatusOutput
	ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusOutput
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusEngineDaemonSetStatusArgs struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions SubmarinerStatusEngineDaemonSetStatusConditionsArrayInput `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntPtrInput `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntPtrInput `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntPtrInput `pulumi:"updatedNumberScheduled"`
}

func (SubmarinerStatusEngineDaemonSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusOutput() SubmarinerStatusEngineDaemonSetStatusOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusOutput)
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusArgs) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusOutput).ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusEngineDaemonSetStatusPtrInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusArgs, SubmarinerStatusEngineDaemonSetStatusPtr and SubmarinerStatusEngineDaemonSetStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusPtrInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusEngineDaemonSetStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput
	ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput
}

type submarinerStatusEngineDaemonSetStatusPtrType SubmarinerStatusEngineDaemonSetStatusArgs

func SubmarinerStatusEngineDaemonSetStatusPtr(v *SubmarinerStatusEngineDaemonSetStatusArgs) SubmarinerStatusEngineDaemonSetStatusPtrInput {
	return (*submarinerStatusEngineDaemonSetStatusPtrType)(v)
}

func (*submarinerStatusEngineDaemonSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (i *submarinerStatusEngineDaemonSetStatusPtrType) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusEngineDaemonSetStatusPtrType) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusEngineDaemonSetStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusOutput() SubmarinerStatusEngineDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusEngineDaemonSetStatusOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *SubmarinerStatusEngineDaemonSetStatus {
		return &v
	}).(SubmarinerStatusEngineDaemonSetStatusPtrOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusEngineDaemonSetStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusEngineDaemonSetStatusOutput) Conditions() SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) []SubmarinerStatusEngineDaemonSetStatusConditions {
		return v.Conditions
	}).(SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) int { return v.CurrentNumberScheduled }).(pulumi.IntOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) int { return v.DesiredNumberScheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *int { return v.NumberAvailable }).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) int { return v.NumberMisscheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusEngineDaemonSetStatusOutput) NumberReady() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) int { return v.NumberReady }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *int { return v.NumberUnavailable }).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusEngineDaemonSetStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusEngineDaemonSetStatusOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatus) *int { return v.UpdatedNumberScheduled }).(pulumi.IntPtrOutput)
}

type SubmarinerStatusEngineDaemonSetStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusEngineDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutput() SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) ToSubmarinerStatusEngineDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) Elem() SubmarinerStatusEngineDaemonSetStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) SubmarinerStatusEngineDaemonSetStatus { return *v }).(SubmarinerStatusEngineDaemonSetStatusOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) Conditions() SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) []SubmarinerStatusEngineDaemonSetStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) CurrentNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) DesiredNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberAvailable
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) NumberMisscheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberMisscheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) NumberReady() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberReady
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberUnavailable
	}).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusEngineDaemonSetStatusPtrOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusEngineDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusEngineDaemonSetStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of DaemonSet condition.
	Type string `pulumi:"type"`
}

// SubmarinerStatusEngineDaemonSetStatusConditionsInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusConditionsArgs and SubmarinerStatusEngineDaemonSetStatusConditionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusConditionsInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusConditionsArgs{...}
type SubmarinerStatusEngineDaemonSetStatusConditionsInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusConditionsOutput() SubmarinerStatusEngineDaemonSetStatusConditionsOutput
	ToSubmarinerStatusEngineDaemonSetStatusConditionsOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusConditionsOutput
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusEngineDaemonSetStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of DaemonSet condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubmarinerStatusEngineDaemonSetStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusConditionsArgs) ToSubmarinerStatusEngineDaemonSetStatusConditionsOutput() SubmarinerStatusEngineDaemonSetStatusConditionsOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusConditionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusConditionsArgs) ToSubmarinerStatusEngineDaemonSetStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusConditionsOutput)
}

// SubmarinerStatusEngineDaemonSetStatusConditionsArrayInput is an input type that accepts SubmarinerStatusEngineDaemonSetStatusConditionsArray and SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusEngineDaemonSetStatusConditionsArrayInput` via:
//
//          SubmarinerStatusEngineDaemonSetStatusConditionsArray{ SubmarinerStatusEngineDaemonSetStatusConditionsArgs{...} }
type SubmarinerStatusEngineDaemonSetStatusConditionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput() SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput
	ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutputWithContext(context.Context) SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput
}

type SubmarinerStatusEngineDaemonSetStatusConditionsArray []SubmarinerStatusEngineDaemonSetStatusConditionsInput

func (SubmarinerStatusEngineDaemonSetStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusEngineDaemonSetStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusEngineDaemonSetStatusConditionsArray) ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput() SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput {
	return i.ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusEngineDaemonSetStatusConditionsArray) ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusEngineDaemonSetStatusConditionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusEngineDaemonSetStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) ToSubmarinerStatusEngineDaemonSetStatusConditionsOutput() SubmarinerStatusEngineDaemonSetStatusConditionsOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) ToSubmarinerStatusEngineDaemonSetStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of DaemonSet condition.
func (o SubmarinerStatusEngineDaemonSetStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusEngineDaemonSetStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusEngineDaemonSetStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput) ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput() SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput) ToSubmarinerStatusEngineDaemonSetStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusEngineDaemonSetStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusEngineDaemonSetStatusConditions {
		return vs[0].([]SubmarinerStatusEngineDaemonSetStatusConditions)[vs[1].(int)]
	}).(SubmarinerStatusEngineDaemonSetStatusConditionsOutput)
}

type SubmarinerStatusGateways struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind     *string                        `pulumi:"kind"`
	Metadata map[string]interface{}         `pulumi:"metadata"`
	Status   SubmarinerStatusGatewaysStatus `pulumi:"status"`
}

// SubmarinerStatusGatewaysInput is an input type that accepts SubmarinerStatusGatewaysArgs and SubmarinerStatusGatewaysOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysInput` via:
//
//          SubmarinerStatusGatewaysArgs{...}
type SubmarinerStatusGatewaysInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysOutput() SubmarinerStatusGatewaysOutput
	ToSubmarinerStatusGatewaysOutputWithContext(context.Context) SubmarinerStatusGatewaysOutput
}

type SubmarinerStatusGatewaysArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind     pulumi.StringPtrInput               `pulumi:"kind"`
	Metadata pulumi.MapInput                     `pulumi:"metadata"`
	Status   SubmarinerStatusGatewaysStatusInput `pulumi:"status"`
}

func (SubmarinerStatusGatewaysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGateways)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysArgs) ToSubmarinerStatusGatewaysOutput() SubmarinerStatusGatewaysOutput {
	return i.ToSubmarinerStatusGatewaysOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysArgs) ToSubmarinerStatusGatewaysOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysOutput)
}

// SubmarinerStatusGatewaysArrayInput is an input type that accepts SubmarinerStatusGatewaysArray and SubmarinerStatusGatewaysArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysArrayInput` via:
//
//          SubmarinerStatusGatewaysArray{ SubmarinerStatusGatewaysArgs{...} }
type SubmarinerStatusGatewaysArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysArrayOutput() SubmarinerStatusGatewaysArrayOutput
	ToSubmarinerStatusGatewaysArrayOutputWithContext(context.Context) SubmarinerStatusGatewaysArrayOutput
}

type SubmarinerStatusGatewaysArray []SubmarinerStatusGatewaysInput

func (SubmarinerStatusGatewaysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGateways)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysArray) ToSubmarinerStatusGatewaysArrayOutput() SubmarinerStatusGatewaysArrayOutput {
	return i.ToSubmarinerStatusGatewaysArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysArray) ToSubmarinerStatusGatewaysArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysArrayOutput)
}

type SubmarinerStatusGatewaysOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGateways)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysOutput) ToSubmarinerStatusGatewaysOutput() SubmarinerStatusGatewaysOutput {
	return o
}

func (o SubmarinerStatusGatewaysOutput) ToSubmarinerStatusGatewaysOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
func (o SubmarinerStatusGatewaysOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
func (o SubmarinerStatusGatewaysOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o SubmarinerStatusGatewaysOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

func (o SubmarinerStatusGatewaysOutput) Status() SubmarinerStatusGatewaysStatusOutput {
	return o.ApplyT(func(v SubmarinerStatusGateways) SubmarinerStatusGatewaysStatus { return v.Status }).(SubmarinerStatusGatewaysStatusOutput)
}

type SubmarinerStatusGatewaysArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGateways)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysArrayOutput) ToSubmarinerStatusGatewaysArrayOutput() SubmarinerStatusGatewaysArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysArrayOutput) ToSubmarinerStatusGatewaysArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGatewaysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGateways {
		return vs[0].([]SubmarinerStatusGateways)[vs[1].(int)]
	}).(SubmarinerStatusGatewaysOutput)
}

type SubmarinerStatusGatewaysMetadata struct {
}

// SubmarinerStatusGatewaysMetadataInput is an input type that accepts SubmarinerStatusGatewaysMetadataArgs and SubmarinerStatusGatewaysMetadataOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysMetadataInput` via:
//
//          SubmarinerStatusGatewaysMetadataArgs{...}
type SubmarinerStatusGatewaysMetadataInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysMetadataOutput() SubmarinerStatusGatewaysMetadataOutput
	ToSubmarinerStatusGatewaysMetadataOutputWithContext(context.Context) SubmarinerStatusGatewaysMetadataOutput
}

type SubmarinerStatusGatewaysMetadataArgs struct {
}

func (SubmarinerStatusGatewaysMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysMetadata)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysMetadataArgs) ToSubmarinerStatusGatewaysMetadataOutput() SubmarinerStatusGatewaysMetadataOutput {
	return i.ToSubmarinerStatusGatewaysMetadataOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysMetadataArgs) ToSubmarinerStatusGatewaysMetadataOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysMetadataOutput)
}

type SubmarinerStatusGatewaysMetadataOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysMetadata)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysMetadataOutput) ToSubmarinerStatusGatewaysMetadataOutput() SubmarinerStatusGatewaysMetadataOutput {
	return o
}

func (o SubmarinerStatusGatewaysMetadataOutput) ToSubmarinerStatusGatewaysMetadataOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysMetadataOutput {
	return o
}

type SubmarinerStatusGatewaysStatus struct {
	Connections   []SubmarinerStatusGatewaysStatusConnections `pulumi:"connections"`
	HaStatus      string                                      `pulumi:"haStatus"`
	LocalEndpoint SubmarinerStatusGatewaysStatusLocalEndpoint `pulumi:"localEndpoint"`
	StatusFailure string                                      `pulumi:"statusFailure"`
	Version       string                                      `pulumi:"version"`
}

// SubmarinerStatusGatewaysStatusInput is an input type that accepts SubmarinerStatusGatewaysStatusArgs and SubmarinerStatusGatewaysStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusInput` via:
//
//          SubmarinerStatusGatewaysStatusArgs{...}
type SubmarinerStatusGatewaysStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusOutput() SubmarinerStatusGatewaysStatusOutput
	ToSubmarinerStatusGatewaysStatusOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusOutput
}

type SubmarinerStatusGatewaysStatusArgs struct {
	Connections   SubmarinerStatusGatewaysStatusConnectionsArrayInput `pulumi:"connections"`
	HaStatus      pulumi.StringInput                                  `pulumi:"haStatus"`
	LocalEndpoint SubmarinerStatusGatewaysStatusLocalEndpointInput    `pulumi:"localEndpoint"`
	StatusFailure pulumi.StringInput                                  `pulumi:"statusFailure"`
	Version       pulumi.StringInput                                  `pulumi:"version"`
}

func (SubmarinerStatusGatewaysStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatus)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusArgs) ToSubmarinerStatusGatewaysStatusOutput() SubmarinerStatusGatewaysStatusOutput {
	return i.ToSubmarinerStatusGatewaysStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusArgs) ToSubmarinerStatusGatewaysStatusOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusOutput)
}

type SubmarinerStatusGatewaysStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatus)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusOutput) ToSubmarinerStatusGatewaysStatusOutput() SubmarinerStatusGatewaysStatusOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusOutput) ToSubmarinerStatusGatewaysStatusOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusOutput) Connections() SubmarinerStatusGatewaysStatusConnectionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatus) []SubmarinerStatusGatewaysStatusConnections {
		return v.Connections
	}).(SubmarinerStatusGatewaysStatusConnectionsArrayOutput)
}

func (o SubmarinerStatusGatewaysStatusOutput) HaStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatus) string { return v.HaStatus }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusOutput) LocalEndpoint() SubmarinerStatusGatewaysStatusLocalEndpointOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatus) SubmarinerStatusGatewaysStatusLocalEndpoint {
		return v.LocalEndpoint
	}).(SubmarinerStatusGatewaysStatusLocalEndpointOutput)
}

func (o SubmarinerStatusGatewaysStatusOutput) StatusFailure() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatus) string { return v.StatusFailure }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatus) string { return v.Version }).(pulumi.StringOutput)
}

type SubmarinerStatusGatewaysStatusConnections struct {
	Endpoint      SubmarinerStatusGatewaysStatusConnectionsEndpoint `pulumi:"endpoint"`
	Status        string                                            `pulumi:"status"`
	StatusMessage string                                            `pulumi:"statusMessage"`
}

// SubmarinerStatusGatewaysStatusConnectionsInput is an input type that accepts SubmarinerStatusGatewaysStatusConnectionsArgs and SubmarinerStatusGatewaysStatusConnectionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusConnectionsInput` via:
//
//          SubmarinerStatusGatewaysStatusConnectionsArgs{...}
type SubmarinerStatusGatewaysStatusConnectionsInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusConnectionsOutput() SubmarinerStatusGatewaysStatusConnectionsOutput
	ToSubmarinerStatusGatewaysStatusConnectionsOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusConnectionsOutput
}

type SubmarinerStatusGatewaysStatusConnectionsArgs struct {
	Endpoint      SubmarinerStatusGatewaysStatusConnectionsEndpointInput `pulumi:"endpoint"`
	Status        pulumi.StringInput                                     `pulumi:"status"`
	StatusMessage pulumi.StringInput                                     `pulumi:"statusMessage"`
}

func (SubmarinerStatusGatewaysStatusConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusConnections)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusConnectionsArgs) ToSubmarinerStatusGatewaysStatusConnectionsOutput() SubmarinerStatusGatewaysStatusConnectionsOutput {
	return i.ToSubmarinerStatusGatewaysStatusConnectionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusConnectionsArgs) ToSubmarinerStatusGatewaysStatusConnectionsOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusConnectionsOutput)
}

// SubmarinerStatusGatewaysStatusConnectionsArrayInput is an input type that accepts SubmarinerStatusGatewaysStatusConnectionsArray and SubmarinerStatusGatewaysStatusConnectionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusConnectionsArrayInput` via:
//
//          SubmarinerStatusGatewaysStatusConnectionsArray{ SubmarinerStatusGatewaysStatusConnectionsArgs{...} }
type SubmarinerStatusGatewaysStatusConnectionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusConnectionsArrayOutput() SubmarinerStatusGatewaysStatusConnectionsArrayOutput
	ToSubmarinerStatusGatewaysStatusConnectionsArrayOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusConnectionsArrayOutput
}

type SubmarinerStatusGatewaysStatusConnectionsArray []SubmarinerStatusGatewaysStatusConnectionsInput

func (SubmarinerStatusGatewaysStatusConnectionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGatewaysStatusConnections)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusConnectionsArray) ToSubmarinerStatusGatewaysStatusConnectionsArrayOutput() SubmarinerStatusGatewaysStatusConnectionsArrayOutput {
	return i.ToSubmarinerStatusGatewaysStatusConnectionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusConnectionsArray) ToSubmarinerStatusGatewaysStatusConnectionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusConnectionsArrayOutput)
}

type SubmarinerStatusGatewaysStatusConnectionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusConnections)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusConnectionsOutput) ToSubmarinerStatusGatewaysStatusConnectionsOutput() SubmarinerStatusGatewaysStatusConnectionsOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsOutput) ToSubmarinerStatusGatewaysStatusConnectionsOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsOutput) Endpoint() SubmarinerStatusGatewaysStatusConnectionsEndpointOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnections) SubmarinerStatusGatewaysStatusConnectionsEndpoint {
		return v.Endpoint
	}).(SubmarinerStatusGatewaysStatusConnectionsEndpointOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnections) string { return v.Status }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnections) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type SubmarinerStatusGatewaysStatusConnectionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusConnectionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGatewaysStatusConnections)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusConnectionsArrayOutput) ToSubmarinerStatusGatewaysStatusConnectionsArrayOutput() SubmarinerStatusGatewaysStatusConnectionsArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsArrayOutput) ToSubmarinerStatusGatewaysStatusConnectionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsArrayOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGatewaysStatusConnectionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGatewaysStatusConnections {
		return vs[0].([]SubmarinerStatusGatewaysStatusConnections)[vs[1].(int)]
	}).(SubmarinerStatusGatewaysStatusConnectionsOutput)
}

type SubmarinerStatusGatewaysStatusConnectionsEndpoint struct {
	Backend        string            `pulumi:"backend"`
	Backend_config map[string]string `pulumi:"backend_config"`
	Cable_name     string            `pulumi:"cable_name"`
	Cluster_id     string            `pulumi:"cluster_id"`
	Hostname       string            `pulumi:"hostname"`
	Nat_enabled    bool              `pulumi:"nat_enabled"`
	Private_ip     string            `pulumi:"private_ip"`
	Public_ip      string            `pulumi:"public_ip"`
	Subnets        []string          `pulumi:"subnets"`
}

// SubmarinerStatusGatewaysStatusConnectionsEndpointInput is an input type that accepts SubmarinerStatusGatewaysStatusConnectionsEndpointArgs and SubmarinerStatusGatewaysStatusConnectionsEndpointOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusConnectionsEndpointInput` via:
//
//          SubmarinerStatusGatewaysStatusConnectionsEndpointArgs{...}
type SubmarinerStatusGatewaysStatusConnectionsEndpointInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutput() SubmarinerStatusGatewaysStatusConnectionsEndpointOutput
	ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusConnectionsEndpointOutput
}

type SubmarinerStatusGatewaysStatusConnectionsEndpointArgs struct {
	Backend        pulumi.StringInput      `pulumi:"backend"`
	Backend_config pulumi.StringMapInput   `pulumi:"backend_config"`
	Cable_name     pulumi.StringInput      `pulumi:"cable_name"`
	Cluster_id     pulumi.StringInput      `pulumi:"cluster_id"`
	Hostname       pulumi.StringInput      `pulumi:"hostname"`
	Nat_enabled    pulumi.BoolInput        `pulumi:"nat_enabled"`
	Private_ip     pulumi.StringInput      `pulumi:"private_ip"`
	Public_ip      pulumi.StringInput      `pulumi:"public_ip"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (SubmarinerStatusGatewaysStatusConnectionsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusConnectionsEndpoint)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusConnectionsEndpointArgs) ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutput() SubmarinerStatusGatewaysStatusConnectionsEndpointOutput {
	return i.ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusConnectionsEndpointArgs) ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusConnectionsEndpointOutput)
}

type SubmarinerStatusGatewaysStatusConnectionsEndpointOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusConnectionsEndpoint)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutput() SubmarinerStatusGatewaysStatusConnectionsEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) ToSubmarinerStatusGatewaysStatusConnectionsEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) string { return v.Backend }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Backend_config() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) map[string]string { return v.Backend_config }).(pulumi.StringMapOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Cable_name() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) string { return v.Cable_name }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Cluster_id() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) string { return v.Cluster_id }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Nat_enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) bool { return v.Nat_enabled }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Private_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) string { return v.Private_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Public_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) string { return v.Public_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusConnectionsEndpoint) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_config struct {
}

// SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configInput is an input type that accepts SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configArgs and SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configInput` via:
//
//          SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configArgs{...}
type SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput() SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput
	ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput
}

type SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configArgs struct {
}

func (SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_config)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configArgs) ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput() SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput {
	return i.ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configArgs) ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput)
}

type SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_config)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput) ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput() SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput) ToSubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput {
	return o
}

type SubmarinerStatusGatewaysStatusLocalEndpoint struct {
	Backend        string            `pulumi:"backend"`
	Backend_config map[string]string `pulumi:"backend_config"`
	Cable_name     string            `pulumi:"cable_name"`
	Cluster_id     string            `pulumi:"cluster_id"`
	Hostname       string            `pulumi:"hostname"`
	Nat_enabled    bool              `pulumi:"nat_enabled"`
	Private_ip     string            `pulumi:"private_ip"`
	Public_ip      string            `pulumi:"public_ip"`
	Subnets        []string          `pulumi:"subnets"`
}

// SubmarinerStatusGatewaysStatusLocalEndpointInput is an input type that accepts SubmarinerStatusGatewaysStatusLocalEndpointArgs and SubmarinerStatusGatewaysStatusLocalEndpointOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusLocalEndpointInput` via:
//
//          SubmarinerStatusGatewaysStatusLocalEndpointArgs{...}
type SubmarinerStatusGatewaysStatusLocalEndpointInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusLocalEndpointOutput() SubmarinerStatusGatewaysStatusLocalEndpointOutput
	ToSubmarinerStatusGatewaysStatusLocalEndpointOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusLocalEndpointOutput
}

type SubmarinerStatusGatewaysStatusLocalEndpointArgs struct {
	Backend        pulumi.StringInput      `pulumi:"backend"`
	Backend_config pulumi.StringMapInput   `pulumi:"backend_config"`
	Cable_name     pulumi.StringInput      `pulumi:"cable_name"`
	Cluster_id     pulumi.StringInput      `pulumi:"cluster_id"`
	Hostname       pulumi.StringInput      `pulumi:"hostname"`
	Nat_enabled    pulumi.BoolInput        `pulumi:"nat_enabled"`
	Private_ip     pulumi.StringInput      `pulumi:"private_ip"`
	Public_ip      pulumi.StringInput      `pulumi:"public_ip"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (SubmarinerStatusGatewaysStatusLocalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusLocalEndpoint)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusLocalEndpointArgs) ToSubmarinerStatusGatewaysStatusLocalEndpointOutput() SubmarinerStatusGatewaysStatusLocalEndpointOutput {
	return i.ToSubmarinerStatusGatewaysStatusLocalEndpointOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusLocalEndpointArgs) ToSubmarinerStatusGatewaysStatusLocalEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusLocalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusLocalEndpointOutput)
}

type SubmarinerStatusGatewaysStatusLocalEndpointOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusLocalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusLocalEndpoint)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) ToSubmarinerStatusGatewaysStatusLocalEndpointOutput() SubmarinerStatusGatewaysStatusLocalEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) ToSubmarinerStatusGatewaysStatusLocalEndpointOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusLocalEndpointOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Backend() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) string { return v.Backend }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Backend_config() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) map[string]string { return v.Backend_config }).(pulumi.StringMapOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Cable_name() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) string { return v.Cable_name }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Cluster_id() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) string { return v.Cluster_id }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Nat_enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) bool { return v.Nat_enabled }).(pulumi.BoolOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Private_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) string { return v.Private_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Public_ip() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) string { return v.Public_ip }).(pulumi.StringOutput)
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGatewaysStatusLocalEndpoint) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type SubmarinerStatusGatewaysStatusLocalEndpointBackend_config struct {
}

// SubmarinerStatusGatewaysStatusLocalEndpointBackend_configInput is an input type that accepts SubmarinerStatusGatewaysStatusLocalEndpointBackend_configArgs and SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput values.
// You can construct a concrete instance of `SubmarinerStatusGatewaysStatusLocalEndpointBackend_configInput` via:
//
//          SubmarinerStatusGatewaysStatusLocalEndpointBackend_configArgs{...}
type SubmarinerStatusGatewaysStatusLocalEndpointBackend_configInput interface {
	pulumi.Input

	ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput() SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput
	ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutputWithContext(context.Context) SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput
}

type SubmarinerStatusGatewaysStatusLocalEndpointBackend_configArgs struct {
}

func (SubmarinerStatusGatewaysStatusLocalEndpointBackend_configArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusLocalEndpointBackend_config)(nil)).Elem()
}

func (i SubmarinerStatusGatewaysStatusLocalEndpointBackend_configArgs) ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput() SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput {
	return i.ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutputWithContext(context.Background())
}

func (i SubmarinerStatusGatewaysStatusLocalEndpointBackend_configArgs) ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput)
}

type SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGatewaysStatusLocalEndpointBackend_config)(nil)).Elem()
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput) ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput() SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput {
	return o
}

func (o SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput) ToSubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutputWithContext(ctx context.Context) SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput {
	return o
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusGlobalnetDaemonSetStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []SubmarinerStatusGlobalnetDaemonSetStatusConditions `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady int `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusArgs and SubmarinerStatusGlobalnetDaemonSetStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusOutput
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusGlobalnetDaemonSetStatusArgs struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayInput `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntPtrInput `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntPtrInput `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntPtrInput `pulumi:"updatedNumberScheduled"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusOutput)
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusOutput).ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusGlobalnetDaemonSetStatusPtrInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusArgs, SubmarinerStatusGlobalnetDaemonSetStatusPtr and SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusPtrInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusGlobalnetDaemonSetStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput
}

type submarinerStatusGlobalnetDaemonSetStatusPtrType SubmarinerStatusGlobalnetDaemonSetStatusArgs

func SubmarinerStatusGlobalnetDaemonSetStatusPtr(v *SubmarinerStatusGlobalnetDaemonSetStatusArgs) SubmarinerStatusGlobalnetDaemonSetStatusPtrInput {
	return (*submarinerStatusGlobalnetDaemonSetStatusPtrType)(v)
}

func (*submarinerStatusGlobalnetDaemonSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (i *submarinerStatusGlobalnetDaemonSetStatusPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusGlobalnetDaemonSetStatusPtrType) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusGlobalnetDaemonSetStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusOutput() SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *SubmarinerStatusGlobalnetDaemonSetStatus {
		return &v
	}).(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) Conditions() SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) []SubmarinerStatusGlobalnetDaemonSetStatusConditions {
		return v.Conditions
	}).(SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) int { return v.CurrentNumberScheduled }).(pulumi.IntOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) int { return v.DesiredNumberScheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *int { return v.NumberAvailable }).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) int { return v.NumberMisscheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) NumberReady() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) int { return v.NumberReady }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *int { return v.NumberUnavailable }).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusGlobalnetDaemonSetStatusOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatus) *int { return v.UpdatedNumberScheduled }).(pulumi.IntPtrOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusGlobalnetDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutput() SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) Elem() SubmarinerStatusGlobalnetDaemonSetStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) SubmarinerStatusGlobalnetDaemonSetStatus { return *v }).(SubmarinerStatusGlobalnetDaemonSetStatusOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) Conditions() SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) []SubmarinerStatusGlobalnetDaemonSetStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) CurrentNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) DesiredNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberAvailable
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) NumberMisscheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberMisscheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) NumberReady() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberReady
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberUnavailable
	}).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusGlobalnetDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusGlobalnetDaemonSetStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of DaemonSet condition.
	Type string `pulumi:"type"`
}

// SubmarinerStatusGlobalnetDaemonSetStatusConditionsInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs and SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusConditionsInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs{...}
type SubmarinerStatusGlobalnetDaemonSetStatusConditionsInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput() SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of DaemonSet condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput() SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput)
}

// SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayInput is an input type that accepts SubmarinerStatusGlobalnetDaemonSetStatusConditionsArray and SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayInput` via:
//
//          SubmarinerStatusGlobalnetDaemonSetStatusConditionsArray{ SubmarinerStatusGlobalnetDaemonSetStatusConditionsArgs{...} }
type SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput
	ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutputWithContext(context.Context) SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput
}

type SubmarinerStatusGlobalnetDaemonSetStatusConditionsArray []SubmarinerStatusGlobalnetDaemonSetStatusConditionsInput

func (SubmarinerStatusGlobalnetDaemonSetStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGlobalnetDaemonSetStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusConditionsArray) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput {
	return i.ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusGlobalnetDaemonSetStatusConditionsArray) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusGlobalnetDaemonSetStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput() SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of DaemonSet condition.
func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusGlobalnetDaemonSetStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusGlobalnetDaemonSetStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput() SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput) ToSubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusGlobalnetDaemonSetStatusConditions {
		return vs[0].([]SubmarinerStatusGlobalnetDaemonSetStatusConditions)[vs[1].(int)]
	}).(SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusRouteAgentDaemonSetStatus struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount *int `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions []SubmarinerStatusRouteAgentDaemonSetStatusConditions `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled int `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled int `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable *int `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled int `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady int `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable *int `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled *int `pulumi:"updatedNumberScheduled"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusArgs and SubmarinerStatusRouteAgentDaemonSetStatusOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusOutput
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusRouteAgentDaemonSetStatusArgs struct {
	// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
	CollisionCount pulumi.IntPtrInput `pulumi:"collisionCount"`
	// Represents the latest available observations of a DaemonSet's current state.
	Conditions SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayInput `pulumi:"conditions"`
	// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	CurrentNumberScheduled pulumi.IntInput `pulumi:"currentNumberScheduled"`
	// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	DesiredNumberScheduled pulumi.IntInput `pulumi:"desiredNumberScheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberAvailable pulumi.IntPtrInput `pulumi:"numberAvailable"`
	// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
	NumberMisscheduled pulumi.IntInput `pulumi:"numberMisscheduled"`
	// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
	NumberReady pulumi.IntInput `pulumi:"numberReady"`
	// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
	NumberUnavailable pulumi.IntPtrInput `pulumi:"numberUnavailable"`
	// The most recent generation observed by the daemon set controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The total number of nodes that are running updated daemon pod
	UpdatedNumberScheduled pulumi.IntPtrInput `pulumi:"updatedNumberScheduled"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusOutput)
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusOutput).ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx)
}

// SubmarinerStatusRouteAgentDaemonSetStatusPtrInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusArgs, SubmarinerStatusRouteAgentDaemonSetStatusPtr and SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusPtrInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusArgs{...}
//
//  or:
//
//          nil
type SubmarinerStatusRouteAgentDaemonSetStatusPtrInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput
}

type submarinerStatusRouteAgentDaemonSetStatusPtrType SubmarinerStatusRouteAgentDaemonSetStatusArgs

func SubmarinerStatusRouteAgentDaemonSetStatusPtr(v *SubmarinerStatusRouteAgentDaemonSetStatusArgs) SubmarinerStatusRouteAgentDaemonSetStatusPtrInput {
	return (*submarinerStatusRouteAgentDaemonSetStatusPtrType)(v)
}

func (*submarinerStatusRouteAgentDaemonSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (i *submarinerStatusRouteAgentDaemonSetStatusPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (i *submarinerStatusRouteAgentDaemonSetStatusPtrType) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

// DaemonSetStatus represents the current status of a daemon set.
type SubmarinerStatusRouteAgentDaemonSetStatusOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusOutput() SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(context.Background())
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *SubmarinerStatusRouteAgentDaemonSetStatus {
		return &v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *int { return v.CollisionCount }).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) Conditions() SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) []SubmarinerStatusRouteAgentDaemonSetStatusConditions {
		return v.Conditions
	}).(SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) CurrentNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) int { return v.CurrentNumberScheduled }).(pulumi.IntOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) DesiredNumberScheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) int { return v.DesiredNumberScheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *int { return v.NumberAvailable }).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) NumberMisscheduled() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) int { return v.NumberMisscheduled }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) NumberReady() pulumi.IntOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) int { return v.NumberReady }).(pulumi.IntOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *int { return v.NumberUnavailable }).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusRouteAgentDaemonSetStatusOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatus) *int { return v.UpdatedNumberScheduled }).(pulumi.IntPtrOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubmarinerStatusRouteAgentDaemonSetStatus)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutput() SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusPtrOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) Elem() SubmarinerStatusRouteAgentDaemonSetStatusOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) SubmarinerStatusRouteAgentDaemonSetStatus {
		return *v
	}).(SubmarinerStatusRouteAgentDaemonSetStatusOutput)
}

// Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) CollisionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.CollisionCount
	}).(pulumi.IntPtrOutput)
}

// Represents the latest available observations of a DaemonSet's current state.
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) Conditions() SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) []SubmarinerStatusRouteAgentDaemonSetStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput)
}

// The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) CurrentNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) DesiredNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) NumberAvailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberAvailable
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) NumberMisscheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberMisscheduled
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) NumberReady() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return &v.NumberReady
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) NumberUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.NumberUnavailable
	}).(pulumi.IntPtrOutput)
}

// The most recent generation observed by the daemon set controller.
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The total number of nodes that are running updated daemon pod
func (o SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput) UpdatedNumberScheduled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubmarinerStatusRouteAgentDaemonSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedNumberScheduled
	}).(pulumi.IntPtrOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusRouteAgentDaemonSetStatusConditions struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of DaemonSet condition.
	Type string `pulumi:"type"`
}

// SubmarinerStatusRouteAgentDaemonSetStatusConditionsInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs and SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusConditionsInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs{...}
type SubmarinerStatusRouteAgentDaemonSetStatusConditionsInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput() SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of DaemonSet condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput() SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput)
}

// SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayInput is an input type that accepts SubmarinerStatusRouteAgentDaemonSetStatusConditionsArray and SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayInput` via:
//
//          SubmarinerStatusRouteAgentDaemonSetStatusConditionsArray{ SubmarinerStatusRouteAgentDaemonSetStatusConditionsArgs{...} }
type SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayInput interface {
	pulumi.Input

	ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput
	ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutputWithContext(context.Context) SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput
}

type SubmarinerStatusRouteAgentDaemonSetStatusConditionsArray []SubmarinerStatusRouteAgentDaemonSetStatusConditionsInput

func (SubmarinerStatusRouteAgentDaemonSetStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusRouteAgentDaemonSetStatusConditions)(nil)).Elem()
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusConditionsArray) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput {
	return i.ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SubmarinerStatusRouteAgentDaemonSetStatusConditionsArray) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput)
}

// DaemonSetCondition describes the state of a DaemonSet at a certain point.
type SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubmarinerStatusRouteAgentDaemonSetStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput() SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another.
func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about the transition.
func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition.
func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of DaemonSet condition.
func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubmarinerStatusRouteAgentDaemonSetStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubmarinerStatusRouteAgentDaemonSetStatusConditions)(nil)).Elem()
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput() SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput) ToSubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutputWithContext(ctx context.Context) SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput {
	return o
}

func (o SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput) Index(i pulumi.IntInput) SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubmarinerStatusRouteAgentDaemonSetStatusConditions {
		return vs[0].([]SubmarinerStatusRouteAgentDaemonSetStatusConditions)[vs[1].(int)]
	}).(SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceDiscoveryTypeOutput{})
	pulumi.RegisterOutputType(ServiceDiscoveryMetadataOutput{})
	pulumi.RegisterOutputType(ServiceDiscoverySpecOutput{})
	pulumi.RegisterOutputType(ServiceDiscoverySpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceDiscoveryStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerTypeOutput{})
	pulumi.RegisterOutputType(SubmarinerMetadataOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecOutput{})
	pulumi.RegisterOutputType(SubmarinerSpecPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusConditionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusEngineDaemonSetStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysMetadataOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusConnectionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusConnectionsArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusConnectionsEndpointOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusConnectionsEndpointBackend_configOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusLocalEndpointOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGatewaysStatusLocalEndpointBackend_configOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusConditionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusGlobalnetDaemonSetStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusPtrOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusConditionsOutput{})
	pulumi.RegisterOutputType(SubmarinerStatusRouteAgentDaemonSetStatusConditionsArrayOutput{})
}
