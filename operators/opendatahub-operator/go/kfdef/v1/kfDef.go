// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// KfDef is the Schema for the kfdefs API
type KfDef struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// KfDefSpec defines the desired state of KfDef
	Spec pulumi.MapOutput `pulumi:"spec"`
	// KfDefStatus defines the observed state of KfDef
	Status pulumi.MapOutput `pulumi:"status"`
}

// NewKfDef registers a new resource with the given unique name, arguments, and options.
func NewKfDef(ctx *pulumi.Context,
	name string, args *KfDefArgs, opts ...pulumi.ResourceOption) (*KfDef, error) {
	if args == nil {
		args = &KfDefArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("kfdef.apps.kubeflow.org/v1")
	args.Kind = pulumi.StringPtr("KfDef")
	var resource KfDef
	err := ctx.RegisterResource("kubernetes:kfdef.apps.kubeflow.org/v1:KfDef", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKfDef gets an existing KfDef resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKfDef(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KfDefState, opts ...pulumi.ResourceOption) (*KfDef, error) {
	var resource KfDef
	err := ctx.ReadResource("kubernetes:kfdef.apps.kubeflow.org/v1:KfDef", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KfDef resources.
type kfDefState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KfDefSpec defines the desired state of KfDef
	Spec map[string]interface{} `pulumi:"spec"`
	// KfDefStatus defines the observed state of KfDef
	Status map[string]interface{} `pulumi:"status"`
}

type KfDefState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KfDefSpec defines the desired state of KfDef
	Spec pulumi.MapInput
	// KfDefStatus defines the observed state of KfDef
	Status pulumi.MapInput
}

func (KfDefState) ElementType() reflect.Type {
	return reflect.TypeOf((*kfDefState)(nil)).Elem()
}

type kfDefArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KfDefSpec defines the desired state of KfDef
	Spec map[string]interface{} `pulumi:"spec"`
	// KfDefStatus defines the observed state of KfDef
	Status map[string]interface{} `pulumi:"status"`
}

// The set of arguments for constructing a KfDef resource.
type KfDefArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KfDefSpec defines the desired state of KfDef
	Spec pulumi.MapInput
	// KfDefStatus defines the observed state of KfDef
	Status pulumi.MapInput
}

func (KfDefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kfDefArgs)(nil)).Elem()
}
