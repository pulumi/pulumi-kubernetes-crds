// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Integration is the Schema for the integrations API
type Integration struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// IntegrationSpec defines the desired state of Integration
	Spec IntegrationSpecPtrOutput `pulumi:"spec"`
	// IntegrationStatus defines the observed state of Integration
	Status IntegrationStatusPtrOutput `pulumi:"status"`
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOption) (*Integration, error) {
	if args == nil {
		args = &IntegrationArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("camel.apache.org/v1")
	args.Kind = pulumi.StringPtr("Integration")
	var resource Integration
	err := ctx.RegisterResource("kubernetes:camel.apache.org/v1:Integration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationState, opts ...pulumi.ResourceOption) (*Integration, error) {
	var resource Integration
	err := ctx.ReadResource("kubernetes:camel.apache.org/v1:Integration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Integration resources.
type integrationState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IntegrationSpec defines the desired state of Integration
	Spec *IntegrationSpec `pulumi:"spec"`
	// IntegrationStatus defines the observed state of Integration
	Status *IntegrationStatus `pulumi:"status"`
}

type IntegrationState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// IntegrationSpec defines the desired state of Integration
	Spec IntegrationSpecPtrInput
	// IntegrationStatus defines the observed state of Integration
	Status IntegrationStatusPtrInput
}

func (IntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationState)(nil)).Elem()
}

type integrationArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IntegrationSpec defines the desired state of Integration
	Spec *IntegrationSpec `pulumi:"spec"`
	// IntegrationStatus defines the observed state of Integration
	Status *IntegrationStatus `pulumi:"status"`
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// IntegrationSpec defines the desired state of Integration
	Spec IntegrationSpecPtrInput
	// IntegrationStatus defines the observed state of Integration
	Status IntegrationStatusPtrInput
}

func (IntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationArgs)(nil)).Elem()
}
