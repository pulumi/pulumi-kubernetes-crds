// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An InfrastructureDefinition defines a new kind of composite infrastructure resource. The new resource is composed of other composite or managed infrastructure resources.
type InfrastructureDefinition struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// InfrastructureDefinitionSpec specifies the desired state of the definition.
	Spec InfrastructureDefinitionSpecPtrOutput `pulumi:"spec"`
	// InfrastructureDefinitionStatus shows the observed state of the definition.
	Status InfrastructureDefinitionStatusPtrOutput `pulumi:"status"`
}

// NewInfrastructureDefinition registers a new resource with the given unique name, arguments, and options.
func NewInfrastructureDefinition(ctx *pulumi.Context,
	name string, args *InfrastructureDefinitionArgs, opts ...pulumi.ResourceOption) (*InfrastructureDefinition, error) {
	if args == nil {
		args = &InfrastructureDefinitionArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("apiextensions.crossplane.io/v1alpha1")
	args.Kind = pulumi.StringPtr("InfrastructureDefinition")
	var resource InfrastructureDefinition
	err := ctx.RegisterResource("kubernetes:apiextensions.crossplane.io/v1alpha1:InfrastructureDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInfrastructureDefinition gets an existing InfrastructureDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInfrastructureDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InfrastructureDefinitionState, opts ...pulumi.ResourceOption) (*InfrastructureDefinition, error) {
	var resource InfrastructureDefinition
	err := ctx.ReadResource("kubernetes:apiextensions.crossplane.io/v1alpha1:InfrastructureDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InfrastructureDefinition resources.
type infrastructureDefinitionState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// InfrastructureDefinitionSpec specifies the desired state of the definition.
	Spec *InfrastructureDefinitionSpec `pulumi:"spec"`
	// InfrastructureDefinitionStatus shows the observed state of the definition.
	Status *InfrastructureDefinitionStatus `pulumi:"status"`
}

type InfrastructureDefinitionState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// InfrastructureDefinitionSpec specifies the desired state of the definition.
	Spec InfrastructureDefinitionSpecPtrInput
	// InfrastructureDefinitionStatus shows the observed state of the definition.
	Status InfrastructureDefinitionStatusPtrInput
}

func (InfrastructureDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureDefinitionState)(nil)).Elem()
}

type infrastructureDefinitionArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// InfrastructureDefinitionSpec specifies the desired state of the definition.
	Spec *InfrastructureDefinitionSpec `pulumi:"spec"`
	// InfrastructureDefinitionStatus shows the observed state of the definition.
	Status *InfrastructureDefinitionStatus `pulumi:"status"`
}

// The set of arguments for constructing a InfrastructureDefinition resource.
type InfrastructureDefinitionArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// InfrastructureDefinitionSpec specifies the desired state of the definition.
	Spec InfrastructureDefinitionSpecPtrInput
	// InfrastructureDefinitionStatus shows the observed state of the definition.
	Status InfrastructureDefinitionStatusPtrInput
}

func (InfrastructureDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*infrastructureDefinitionArgs)(nil)).Elem()
}
