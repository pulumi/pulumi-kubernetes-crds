// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An ApplicationConfiguration represents an OAM application.
type ApplicationConfigurationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
	Spec *ApplicationConfigurationSpec `pulumi:"spec"`
	// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
	Status *ApplicationConfigurationStatus `pulumi:"status"`
}

// ApplicationConfigurationTypeInput is an input type that accepts ApplicationConfigurationTypeArgs and ApplicationConfigurationTypeOutput values.
// You can construct a concrete instance of `ApplicationConfigurationTypeInput` via:
//
//          ApplicationConfigurationTypeArgs{...}
type ApplicationConfigurationTypeInput interface {
	pulumi.Input

	ToApplicationConfigurationTypeOutput() ApplicationConfigurationTypeOutput
	ToApplicationConfigurationTypeOutputWithContext(context.Context) ApplicationConfigurationTypeOutput
}

// An ApplicationConfiguration represents an OAM application.
type ApplicationConfigurationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
	Spec ApplicationConfigurationSpecPtrInput `pulumi:"spec"`
	// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
	Status ApplicationConfigurationStatusPtrInput `pulumi:"status"`
}

func (ApplicationConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationType)(nil)).Elem()
}

func (i ApplicationConfigurationTypeArgs) ToApplicationConfigurationTypeOutput() ApplicationConfigurationTypeOutput {
	return i.ToApplicationConfigurationTypeOutputWithContext(context.Background())
}

func (i ApplicationConfigurationTypeArgs) ToApplicationConfigurationTypeOutputWithContext(ctx context.Context) ApplicationConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationTypeOutput)
}

// An ApplicationConfiguration represents an OAM application.
type ApplicationConfigurationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationType)(nil)).Elem()
}

func (o ApplicationConfigurationTypeOutput) ToApplicationConfigurationTypeOutput() ApplicationConfigurationTypeOutput {
	return o
}

func (o ApplicationConfigurationTypeOutput) ToApplicationConfigurationTypeOutputWithContext(ctx context.Context) ApplicationConfigurationTypeOutput {
	return o
}

func (o ApplicationConfigurationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ApplicationConfigurationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ApplicationConfigurationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
func (o ApplicationConfigurationTypeOutput) Spec() ApplicationConfigurationSpecPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *ApplicationConfigurationSpec { return v.Spec }).(ApplicationConfigurationSpecPtrOutput)
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
func (o ApplicationConfigurationTypeOutput) Status() ApplicationConfigurationStatusPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationType) *ApplicationConfigurationStatus { return v.Status }).(ApplicationConfigurationStatusPtrOutput)
}

type ApplicationConfigurationMetadata struct {
}

// ApplicationConfigurationMetadataInput is an input type that accepts ApplicationConfigurationMetadataArgs and ApplicationConfigurationMetadataOutput values.
// You can construct a concrete instance of `ApplicationConfigurationMetadataInput` via:
//
//          ApplicationConfigurationMetadataArgs{...}
type ApplicationConfigurationMetadataInput interface {
	pulumi.Input

	ToApplicationConfigurationMetadataOutput() ApplicationConfigurationMetadataOutput
	ToApplicationConfigurationMetadataOutputWithContext(context.Context) ApplicationConfigurationMetadataOutput
}

type ApplicationConfigurationMetadataArgs struct {
}

func (ApplicationConfigurationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationMetadata)(nil)).Elem()
}

func (i ApplicationConfigurationMetadataArgs) ToApplicationConfigurationMetadataOutput() ApplicationConfigurationMetadataOutput {
	return i.ToApplicationConfigurationMetadataOutputWithContext(context.Background())
}

func (i ApplicationConfigurationMetadataArgs) ToApplicationConfigurationMetadataOutputWithContext(ctx context.Context) ApplicationConfigurationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationMetadataOutput)
}

type ApplicationConfigurationMetadataOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationMetadata)(nil)).Elem()
}

func (o ApplicationConfigurationMetadataOutput) ToApplicationConfigurationMetadataOutput() ApplicationConfigurationMetadataOutput {
	return o
}

func (o ApplicationConfigurationMetadataOutput) ToApplicationConfigurationMetadataOutputWithContext(ctx context.Context) ApplicationConfigurationMetadataOutput {
	return o
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
type ApplicationConfigurationSpec struct {
	// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
	Components []ApplicationConfigurationSpecComponents `pulumi:"components"`
}

// ApplicationConfigurationSpecInput is an input type that accepts ApplicationConfigurationSpecArgs and ApplicationConfigurationSpecOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecInput` via:
//
//          ApplicationConfigurationSpecArgs{...}
type ApplicationConfigurationSpecInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecOutput() ApplicationConfigurationSpecOutput
	ToApplicationConfigurationSpecOutputWithContext(context.Context) ApplicationConfigurationSpecOutput
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
type ApplicationConfigurationSpecArgs struct {
	// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
	Components ApplicationConfigurationSpecComponentsArrayInput `pulumi:"components"`
}

func (ApplicationConfigurationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpec)(nil)).Elem()
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecOutput() ApplicationConfigurationSpecOutput {
	return i.ToApplicationConfigurationSpecOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecOutputWithContext(ctx context.Context) ApplicationConfigurationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecOutput)
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return i.ToApplicationConfigurationSpecPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecArgs) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecOutput).ToApplicationConfigurationSpecPtrOutputWithContext(ctx)
}

// ApplicationConfigurationSpecPtrInput is an input type that accepts ApplicationConfigurationSpecArgs, ApplicationConfigurationSpecPtr and ApplicationConfigurationSpecPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecPtrInput` via:
//
//          ApplicationConfigurationSpecArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationSpecPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput
	ToApplicationConfigurationSpecPtrOutputWithContext(context.Context) ApplicationConfigurationSpecPtrOutput
}

type applicationConfigurationSpecPtrType ApplicationConfigurationSpecArgs

func ApplicationConfigurationSpecPtr(v *ApplicationConfigurationSpecArgs) ApplicationConfigurationSpecPtrInput {
	return (*applicationConfigurationSpecPtrType)(v)
}

func (*applicationConfigurationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationSpec)(nil)).Elem()
}

func (i *applicationConfigurationSpecPtrType) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return i.ToApplicationConfigurationSpecPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationSpecPtrType) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecPtrOutput)
}

// An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.
type ApplicationConfigurationSpecOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpec)(nil)).Elem()
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecOutput() ApplicationConfigurationSpecOutput {
	return o
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecOutputWithContext(ctx context.Context) ApplicationConfigurationSpecOutput {
	return o
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return o.ToApplicationConfigurationSpecPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationSpecOutput) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpec) *ApplicationConfigurationSpec {
		return &v
	}).(ApplicationConfigurationSpecPtrOutput)
}

// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
func (o ApplicationConfigurationSpecOutput) Components() ApplicationConfigurationSpecComponentsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpec) []ApplicationConfigurationSpecComponents { return v.Components }).(ApplicationConfigurationSpecComponentsArrayOutput)
}

type ApplicationConfigurationSpecPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationSpec)(nil)).Elem()
}

func (o ApplicationConfigurationSpecPtrOutput) ToApplicationConfigurationSpecPtrOutput() ApplicationConfigurationSpecPtrOutput {
	return o
}

func (o ApplicationConfigurationSpecPtrOutput) ToApplicationConfigurationSpecPtrOutputWithContext(ctx context.Context) ApplicationConfigurationSpecPtrOutput {
	return o
}

func (o ApplicationConfigurationSpecPtrOutput) Elem() ApplicationConfigurationSpecOutput {
	return o.ApplyT(func(v *ApplicationConfigurationSpec) ApplicationConfigurationSpec { return *v }).(ApplicationConfigurationSpecOutput)
}

// Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.
func (o ApplicationConfigurationSpecPtrOutput) Components() ApplicationConfigurationSpecComponentsArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationSpec) []ApplicationConfigurationSpecComponents {
		if v == nil {
			return nil
		}
		return v.Components
	}).(ApplicationConfigurationSpecComponentsArrayOutput)
}

// An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
type ApplicationConfigurationSpecComponents struct {
	// ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
	ComponentName string `pulumi:"componentName"`
	// ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
	ParameterValues []ApplicationConfigurationSpecComponentsParameterValues `pulumi:"parameterValues"`
	// Scopes in which the specified component should exist.
	Scopes []ApplicationConfigurationSpecComponentsScopes `pulumi:"scopes"`
	// Traits of the specified component.
	Traits []ApplicationConfigurationSpecComponentsTraits `pulumi:"traits"`
}

// ApplicationConfigurationSpecComponentsInput is an input type that accepts ApplicationConfigurationSpecComponentsArgs and ApplicationConfigurationSpecComponentsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsInput` via:
//
//          ApplicationConfigurationSpecComponentsArgs{...}
type ApplicationConfigurationSpecComponentsInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsOutput() ApplicationConfigurationSpecComponentsOutput
	ToApplicationConfigurationSpecComponentsOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsOutput
}

// An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
type ApplicationConfigurationSpecComponentsArgs struct {
	// ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
	ComponentName pulumi.StringInput `pulumi:"componentName"`
	// ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
	ParameterValues ApplicationConfigurationSpecComponentsParameterValuesArrayInput `pulumi:"parameterValues"`
	// Scopes in which the specified component should exist.
	Scopes ApplicationConfigurationSpecComponentsScopesArrayInput `pulumi:"scopes"`
	// Traits of the specified component.
	Traits ApplicationConfigurationSpecComponentsTraitsArrayInput `pulumi:"traits"`
}

func (ApplicationConfigurationSpecComponentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsArgs) ToApplicationConfigurationSpecComponentsOutput() ApplicationConfigurationSpecComponentsOutput {
	return i.ToApplicationConfigurationSpecComponentsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsArgs) ToApplicationConfigurationSpecComponentsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsOutput)
}

// ApplicationConfigurationSpecComponentsArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsArray and ApplicationConfigurationSpecComponentsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsArray{ ApplicationConfigurationSpecComponentsArgs{...} }
type ApplicationConfigurationSpecComponentsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsArrayOutput() ApplicationConfigurationSpecComponentsArrayOutput
	ToApplicationConfigurationSpecComponentsArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsArrayOutput
}

type ApplicationConfigurationSpecComponentsArray []ApplicationConfigurationSpecComponentsInput

func (ApplicationConfigurationSpecComponentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsArray) ToApplicationConfigurationSpecComponentsArrayOutput() ApplicationConfigurationSpecComponentsArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsArray) ToApplicationConfigurationSpecComponentsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsArrayOutput)
}

// An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.
type ApplicationConfigurationSpecComponentsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsOutput) ToApplicationConfigurationSpecComponentsOutput() ApplicationConfigurationSpecComponentsOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsOutput) ToApplicationConfigurationSpecComponentsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsOutput {
	return o
}

// ComponentName specifies a component of which an ApplicationConfiguration should consist. The named component must exist.
func (o ApplicationConfigurationSpecComponentsOutput) ComponentName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) string { return v.ComponentName }).(pulumi.StringOutput)
}

// ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.
func (o ApplicationConfigurationSpecComponentsOutput) ParameterValues() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) []ApplicationConfigurationSpecComponentsParameterValues {
		return v.ParameterValues
	}).(ApplicationConfigurationSpecComponentsParameterValuesArrayOutput)
}

// Scopes in which the specified component should exist.
func (o ApplicationConfigurationSpecComponentsOutput) Scopes() ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) []ApplicationConfigurationSpecComponentsScopes {
		return v.Scopes
	}).(ApplicationConfigurationSpecComponentsScopesArrayOutput)
}

// Traits of the specified component.
func (o ApplicationConfigurationSpecComponentsOutput) Traits() ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponents) []ApplicationConfigurationSpecComponentsTraits {
		return v.Traits
	}).(ApplicationConfigurationSpecComponentsTraitsArrayOutput)
}

type ApplicationConfigurationSpecComponentsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponents)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsArrayOutput) ToApplicationConfigurationSpecComponentsArrayOutput() ApplicationConfigurationSpecComponentsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsArrayOutput) ToApplicationConfigurationSpecComponentsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponents {
		return vs[0].([]ApplicationConfigurationSpecComponents)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsOutput)
}

// A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
type ApplicationConfigurationSpecComponentsParameterValues struct {
	// Name of the component parameter to set.
	Name string `pulumi:"name"`
	// Value to set.
	Value ApplicationConfigurationSpecComponentsParameterValuesValue `pulumi:"value"`
}

// ApplicationConfigurationSpecComponentsParameterValuesInput is an input type that accepts ApplicationConfigurationSpecComponentsParameterValuesArgs and ApplicationConfigurationSpecComponentsParameterValuesOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsParameterValuesInput` via:
//
//          ApplicationConfigurationSpecComponentsParameterValuesArgs{...}
type ApplicationConfigurationSpecComponentsParameterValuesInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsParameterValuesOutput() ApplicationConfigurationSpecComponentsParameterValuesOutput
	ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsParameterValuesOutput
}

// A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
type ApplicationConfigurationSpecComponentsParameterValuesArgs struct {
	// Name of the component parameter to set.
	Name pulumi.StringInput `pulumi:"name"`
	// Value to set.
	Value ApplicationConfigurationSpecComponentsParameterValuesValueInput `pulumi:"value"`
}

func (ApplicationConfigurationSpecComponentsParameterValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArgs) ToApplicationConfigurationSpecComponentsParameterValuesOutput() ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return i.ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArgs) ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsParameterValuesOutput)
}

// ApplicationConfigurationSpecComponentsParameterValuesArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsParameterValuesArray and ApplicationConfigurationSpecComponentsParameterValuesArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsParameterValuesArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsParameterValuesArray{ ApplicationConfigurationSpecComponentsParameterValuesArgs{...} }
type ApplicationConfigurationSpecComponentsParameterValuesArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsParameterValuesArrayOutput() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput
	ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsParameterValuesArrayOutput
}

type ApplicationConfigurationSpecComponentsParameterValuesArray []ApplicationConfigurationSpecComponentsParameterValuesInput

func (ApplicationConfigurationSpecComponentsParameterValuesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArray) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutput() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsParameterValuesArray) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsParameterValuesArrayOutput)
}

// A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.
type ApplicationConfigurationSpecComponentsParameterValuesOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsParameterValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) ToApplicationConfigurationSpecComponentsParameterValuesOutput() ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) ToApplicationConfigurationSpecComponentsParameterValuesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return o
}

// Name of the component parameter to set.
func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsParameterValues) string { return v.Name }).(pulumi.StringOutput)
}

// Value to set.
func (o ApplicationConfigurationSpecComponentsParameterValuesOutput) Value() ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsParameterValues) ApplicationConfigurationSpecComponentsParameterValuesValue {
		return v.Value
	}).(ApplicationConfigurationSpecComponentsParameterValuesValueOutput)
}

type ApplicationConfigurationSpecComponentsParameterValuesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsParameterValues)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutput() ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) ToApplicationConfigurationSpecComponentsParameterValuesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsParameterValuesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponentsParameterValues {
		return vs[0].([]ApplicationConfigurationSpecComponentsParameterValues)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsParameterValuesOutput)
}

type ApplicationConfigurationSpecComponentsParameterValuesValue struct {
}

// ApplicationConfigurationSpecComponentsParameterValuesValueInput is an input type that accepts ApplicationConfigurationSpecComponentsParameterValuesValueArgs and ApplicationConfigurationSpecComponentsParameterValuesValueOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsParameterValuesValueInput` via:
//
//          ApplicationConfigurationSpecComponentsParameterValuesValueArgs{...}
type ApplicationConfigurationSpecComponentsParameterValuesValueInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsParameterValuesValueOutput() ApplicationConfigurationSpecComponentsParameterValuesValueOutput
	ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsParameterValuesValueOutput
}

type ApplicationConfigurationSpecComponentsParameterValuesValueArgs struct {
}

func (ApplicationConfigurationSpecComponentsParameterValuesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValuesValue)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsParameterValuesValueArgs) ToApplicationConfigurationSpecComponentsParameterValuesValueOutput() ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return i.ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsParameterValuesValueArgs) ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsParameterValuesValueOutput)
}

type ApplicationConfigurationSpecComponentsParameterValuesValueOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsParameterValuesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsParameterValuesValue)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsParameterValuesValueOutput) ToApplicationConfigurationSpecComponentsParameterValuesValueOutput() ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsParameterValuesValueOutput) ToApplicationConfigurationSpecComponentsParameterValuesValueOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsParameterValuesValueOutput {
	return o
}

// A ComponentScope specifies a scope in which a component should exist.
type ApplicationConfigurationSpecComponentsScopes struct {
	// A ScopeReference must refer to an OAM scope resource.
	ScopeRef ApplicationConfigurationSpecComponentsScopesScopeRef `pulumi:"scopeRef"`
}

// ApplicationConfigurationSpecComponentsScopesInput is an input type that accepts ApplicationConfigurationSpecComponentsScopesArgs and ApplicationConfigurationSpecComponentsScopesOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsScopesInput` via:
//
//          ApplicationConfigurationSpecComponentsScopesArgs{...}
type ApplicationConfigurationSpecComponentsScopesInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsScopesOutput() ApplicationConfigurationSpecComponentsScopesOutput
	ToApplicationConfigurationSpecComponentsScopesOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsScopesOutput
}

// A ComponentScope specifies a scope in which a component should exist.
type ApplicationConfigurationSpecComponentsScopesArgs struct {
	// A ScopeReference must refer to an OAM scope resource.
	ScopeRef ApplicationConfigurationSpecComponentsScopesScopeRefInput `pulumi:"scopeRef"`
}

func (ApplicationConfigurationSpecComponentsScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsScopesArgs) ToApplicationConfigurationSpecComponentsScopesOutput() ApplicationConfigurationSpecComponentsScopesOutput {
	return i.ToApplicationConfigurationSpecComponentsScopesOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsScopesArgs) ToApplicationConfigurationSpecComponentsScopesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsScopesOutput)
}

// ApplicationConfigurationSpecComponentsScopesArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsScopesArray and ApplicationConfigurationSpecComponentsScopesArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsScopesArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsScopesArray{ ApplicationConfigurationSpecComponentsScopesArgs{...} }
type ApplicationConfigurationSpecComponentsScopesArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsScopesArrayOutput() ApplicationConfigurationSpecComponentsScopesArrayOutput
	ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsScopesArrayOutput
}

type ApplicationConfigurationSpecComponentsScopesArray []ApplicationConfigurationSpecComponentsScopesInput

func (ApplicationConfigurationSpecComponentsScopesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsScopesArray) ToApplicationConfigurationSpecComponentsScopesArrayOutput() ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsScopesArray) ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsScopesArrayOutput)
}

// A ComponentScope specifies a scope in which a component should exist.
type ApplicationConfigurationSpecComponentsScopesOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsScopesOutput) ToApplicationConfigurationSpecComponentsScopesOutput() ApplicationConfigurationSpecComponentsScopesOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesOutput) ToApplicationConfigurationSpecComponentsScopesOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesOutput {
	return o
}

// A ScopeReference must refer to an OAM scope resource.
func (o ApplicationConfigurationSpecComponentsScopesOutput) ScopeRef() ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopes) ApplicationConfigurationSpecComponentsScopesScopeRef {
		return v.ScopeRef
	}).(ApplicationConfigurationSpecComponentsScopesScopeRefOutput)
}

type ApplicationConfigurationSpecComponentsScopesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsScopesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsScopes)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsScopesArrayOutput) ToApplicationConfigurationSpecComponentsScopesArrayOutput() ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesArrayOutput) ToApplicationConfigurationSpecComponentsScopesArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsScopesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponentsScopes {
		return vs[0].([]ApplicationConfigurationSpecComponentsScopes)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsScopesOutput)
}

// A ScopeReference must refer to an OAM scope resource.
type ApplicationConfigurationSpecComponentsScopesScopeRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ApplicationConfigurationSpecComponentsScopesScopeRefInput is an input type that accepts ApplicationConfigurationSpecComponentsScopesScopeRefArgs and ApplicationConfigurationSpecComponentsScopesScopeRefOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsScopesScopeRefInput` via:
//
//          ApplicationConfigurationSpecComponentsScopesScopeRefArgs{...}
type ApplicationConfigurationSpecComponentsScopesScopeRefInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsScopesScopeRefOutput() ApplicationConfigurationSpecComponentsScopesScopeRefOutput
	ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsScopesScopeRefOutput
}

// A ScopeReference must refer to an OAM scope resource.
type ApplicationConfigurationSpecComponentsScopesScopeRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationConfigurationSpecComponentsScopesScopeRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopesScopeRef)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsScopesScopeRefArgs) ToApplicationConfigurationSpecComponentsScopesScopeRefOutput() ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return i.ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsScopesScopeRefArgs) ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsScopesScopeRefOutput)
}

// A ScopeReference must refer to an OAM scope resource.
type ApplicationConfigurationSpecComponentsScopesScopeRefOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsScopesScopeRef)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ToApplicationConfigurationSpecComponentsScopesScopeRefOutput() ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ToApplicationConfigurationSpecComponentsScopesScopeRefOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsScopesScopeRefOutput {
	return o
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationSpecComponentsScopesScopeRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsScopesScopeRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

// A ComponentTrait specifies a trait that should be applied to a component.
type ApplicationConfigurationSpecComponentsTraits struct {
	// A Trait that will be created for the component
	Trait map[string]interface{} `pulumi:"trait"`
}

// ApplicationConfigurationSpecComponentsTraitsInput is an input type that accepts ApplicationConfigurationSpecComponentsTraitsArgs and ApplicationConfigurationSpecComponentsTraitsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsTraitsInput` via:
//
//          ApplicationConfigurationSpecComponentsTraitsArgs{...}
type ApplicationConfigurationSpecComponentsTraitsInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsTraitsOutput() ApplicationConfigurationSpecComponentsTraitsOutput
	ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsTraitsOutput
}

// A ComponentTrait specifies a trait that should be applied to a component.
type ApplicationConfigurationSpecComponentsTraitsArgs struct {
	// A Trait that will be created for the component
	Trait pulumi.MapInput `pulumi:"trait"`
}

func (ApplicationConfigurationSpecComponentsTraitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsTraitsArgs) ToApplicationConfigurationSpecComponentsTraitsOutput() ApplicationConfigurationSpecComponentsTraitsOutput {
	return i.ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsTraitsArgs) ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsTraitsOutput)
}

// ApplicationConfigurationSpecComponentsTraitsArrayInput is an input type that accepts ApplicationConfigurationSpecComponentsTraitsArray and ApplicationConfigurationSpecComponentsTraitsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationSpecComponentsTraitsArrayInput` via:
//
//          ApplicationConfigurationSpecComponentsTraitsArray{ ApplicationConfigurationSpecComponentsTraitsArgs{...} }
type ApplicationConfigurationSpecComponentsTraitsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationSpecComponentsTraitsArrayOutput() ApplicationConfigurationSpecComponentsTraitsArrayOutput
	ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(context.Context) ApplicationConfigurationSpecComponentsTraitsArrayOutput
}

type ApplicationConfigurationSpecComponentsTraitsArray []ApplicationConfigurationSpecComponentsTraitsInput

func (ApplicationConfigurationSpecComponentsTraitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationSpecComponentsTraitsArray) ToApplicationConfigurationSpecComponentsTraitsArrayOutput() ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return i.ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationSpecComponentsTraitsArray) ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationSpecComponentsTraitsArrayOutput)
}

// A ComponentTrait specifies a trait that should be applied to a component.
type ApplicationConfigurationSpecComponentsTraitsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsTraitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsTraitsOutput) ToApplicationConfigurationSpecComponentsTraitsOutput() ApplicationConfigurationSpecComponentsTraitsOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsTraitsOutput) ToApplicationConfigurationSpecComponentsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsOutput {
	return o
}

// A Trait that will be created for the component
func (o ApplicationConfigurationSpecComponentsTraitsOutput) Trait() pulumi.MapOutput {
	return o.ApplyT(func(v ApplicationConfigurationSpecComponentsTraits) map[string]interface{} { return v.Trait }).(pulumi.MapOutput)
}

type ApplicationConfigurationSpecComponentsTraitsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationSpecComponentsTraitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationSpecComponentsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationSpecComponentsTraitsArrayOutput) ToApplicationConfigurationSpecComponentsTraitsArrayOutput() ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsTraitsArrayOutput) ToApplicationConfigurationSpecComponentsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationSpecComponentsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationSpecComponentsTraitsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationSpecComponentsTraitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationSpecComponentsTraits {
		return vs[0].([]ApplicationConfigurationSpecComponentsTraits)[vs[1].(int)]
	}).(ApplicationConfigurationSpecComponentsTraitsOutput)
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
type ApplicationConfigurationStatus struct {
	// Conditions of the resource.
	Conditions []ApplicationConfigurationStatusConditions `pulumi:"conditions"`
	// Workloads created by this ApplicationConfiguration.
	Workloads []ApplicationConfigurationStatusWorkloads `pulumi:"workloads"`
}

// ApplicationConfigurationStatusInput is an input type that accepts ApplicationConfigurationStatusArgs and ApplicationConfigurationStatusOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusInput` via:
//
//          ApplicationConfigurationStatusArgs{...}
type ApplicationConfigurationStatusInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusOutput() ApplicationConfigurationStatusOutput
	ToApplicationConfigurationStatusOutputWithContext(context.Context) ApplicationConfigurationStatusOutput
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
type ApplicationConfigurationStatusArgs struct {
	// Conditions of the resource.
	Conditions ApplicationConfigurationStatusConditionsArrayInput `pulumi:"conditions"`
	// Workloads created by this ApplicationConfiguration.
	Workloads ApplicationConfigurationStatusWorkloadsArrayInput `pulumi:"workloads"`
}

func (ApplicationConfigurationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatus)(nil)).Elem()
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusOutput() ApplicationConfigurationStatusOutput {
	return i.ToApplicationConfigurationStatusOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusOutputWithContext(ctx context.Context) ApplicationConfigurationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusOutput)
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return i.ToApplicationConfigurationStatusPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusArgs) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusOutput).ToApplicationConfigurationStatusPtrOutputWithContext(ctx)
}

// ApplicationConfigurationStatusPtrInput is an input type that accepts ApplicationConfigurationStatusArgs, ApplicationConfigurationStatusPtr and ApplicationConfigurationStatusPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusPtrInput` via:
//
//          ApplicationConfigurationStatusArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationStatusPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput
	ToApplicationConfigurationStatusPtrOutputWithContext(context.Context) ApplicationConfigurationStatusPtrOutput
}

type applicationConfigurationStatusPtrType ApplicationConfigurationStatusArgs

func ApplicationConfigurationStatusPtr(v *ApplicationConfigurationStatusArgs) ApplicationConfigurationStatusPtrInput {
	return (*applicationConfigurationStatusPtrType)(v)
}

func (*applicationConfigurationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatus)(nil)).Elem()
}

func (i *applicationConfigurationStatusPtrType) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return i.ToApplicationConfigurationStatusPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationStatusPtrType) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusPtrOutput)
}

// An ApplicationConfigurationStatus represents the observed state of a ApplicationConfiguration.
type ApplicationConfigurationStatusOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatus)(nil)).Elem()
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusOutput() ApplicationConfigurationStatusOutput {
	return o
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusOutputWithContext(ctx context.Context) ApplicationConfigurationStatusOutput {
	return o
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return o.ToApplicationConfigurationStatusPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationStatusOutput) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatus) *ApplicationConfigurationStatus {
		return &v
	}).(ApplicationConfigurationStatusPtrOutput)
}

// Conditions of the resource.
func (o ApplicationConfigurationStatusOutput) Conditions() ApplicationConfigurationStatusConditionsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatus) []ApplicationConfigurationStatusConditions { return v.Conditions }).(ApplicationConfigurationStatusConditionsArrayOutput)
}

// Workloads created by this ApplicationConfiguration.
func (o ApplicationConfigurationStatusOutput) Workloads() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatus) []ApplicationConfigurationStatusWorkloads { return v.Workloads }).(ApplicationConfigurationStatusWorkloadsArrayOutput)
}

type ApplicationConfigurationStatusPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatus)(nil)).Elem()
}

func (o ApplicationConfigurationStatusPtrOutput) ToApplicationConfigurationStatusPtrOutput() ApplicationConfigurationStatusPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusPtrOutput) ToApplicationConfigurationStatusPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusPtrOutput) Elem() ApplicationConfigurationStatusOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatus) ApplicationConfigurationStatus { return *v }).(ApplicationConfigurationStatusOutput)
}

// Conditions of the resource.
func (o ApplicationConfigurationStatusPtrOutput) Conditions() ApplicationConfigurationStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatus) []ApplicationConfigurationStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ApplicationConfigurationStatusConditionsArrayOutput)
}

// Workloads created by this ApplicationConfiguration.
func (o ApplicationConfigurationStatusPtrOutput) Workloads() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatus) []ApplicationConfigurationStatusWorkloads {
		if v == nil {
			return nil
		}
		return v.Workloads
	}).(ApplicationConfigurationStatusWorkloadsArrayOutput)
}

// A Condition that may apply to a resource.
type ApplicationConfigurationStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// ApplicationConfigurationStatusConditionsInput is an input type that accepts ApplicationConfigurationStatusConditionsArgs and ApplicationConfigurationStatusConditionsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusConditionsInput` via:
//
//          ApplicationConfigurationStatusConditionsArgs{...}
type ApplicationConfigurationStatusConditionsInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusConditionsOutput() ApplicationConfigurationStatusConditionsOutput
	ToApplicationConfigurationStatusConditionsOutputWithContext(context.Context) ApplicationConfigurationStatusConditionsOutput
}

// A Condition that may apply to a resource.
type ApplicationConfigurationStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationConfigurationStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (i ApplicationConfigurationStatusConditionsArgs) ToApplicationConfigurationStatusConditionsOutput() ApplicationConfigurationStatusConditionsOutput {
	return i.ToApplicationConfigurationStatusConditionsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusConditionsArgs) ToApplicationConfigurationStatusConditionsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusConditionsOutput)
}

// ApplicationConfigurationStatusConditionsArrayInput is an input type that accepts ApplicationConfigurationStatusConditionsArray and ApplicationConfigurationStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusConditionsArrayInput` via:
//
//          ApplicationConfigurationStatusConditionsArray{ ApplicationConfigurationStatusConditionsArgs{...} }
type ApplicationConfigurationStatusConditionsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusConditionsArrayOutput() ApplicationConfigurationStatusConditionsArrayOutput
	ToApplicationConfigurationStatusConditionsArrayOutputWithContext(context.Context) ApplicationConfigurationStatusConditionsArrayOutput
}

type ApplicationConfigurationStatusConditionsArray []ApplicationConfigurationStatusConditionsInput

func (ApplicationConfigurationStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (i ApplicationConfigurationStatusConditionsArray) ToApplicationConfigurationStatusConditionsArrayOutput() ApplicationConfigurationStatusConditionsArrayOutput {
	return i.ToApplicationConfigurationStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusConditionsArray) ToApplicationConfigurationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ApplicationConfigurationStatusConditionsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (o ApplicationConfigurationStatusConditionsOutput) ToApplicationConfigurationStatusConditionsOutput() ApplicationConfigurationStatusConditionsOutput {
	return o
}

func (o ApplicationConfigurationStatusConditionsOutput) ToApplicationConfigurationStatusConditionsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o ApplicationConfigurationStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o ApplicationConfigurationStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o ApplicationConfigurationStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o ApplicationConfigurationStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o ApplicationConfigurationStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationConfigurationStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusConditions)(nil)).Elem()
}

func (o ApplicationConfigurationStatusConditionsArrayOutput) ToApplicationConfigurationStatusConditionsArrayOutput() ApplicationConfigurationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusConditionsArrayOutput) ToApplicationConfigurationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusConditionsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationStatusConditions {
		return vs[0].([]ApplicationConfigurationStatusConditions)[vs[1].(int)]
	}).(ApplicationConfigurationStatusConditionsOutput)
}

// A WorkloadStatus represents the status of a workload.
type ApplicationConfigurationStatusWorkloads struct {
	// ComponentName that produced this workload.
	ComponentName *string `pulumi:"componentName"`
	// Traits associated with this workload.
	Traits []ApplicationConfigurationStatusWorkloadsTraits `pulumi:"traits"`
	// Reference to a workload created by an ApplicationConfiguration.
	WorkloadRef *ApplicationConfigurationStatusWorkloadsWorkloadRef `pulumi:"workloadRef"`
}

// ApplicationConfigurationStatusWorkloadsInput is an input type that accepts ApplicationConfigurationStatusWorkloadsArgs and ApplicationConfigurationStatusWorkloadsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsInput` via:
//
//          ApplicationConfigurationStatusWorkloadsArgs{...}
type ApplicationConfigurationStatusWorkloadsInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsOutput() ApplicationConfigurationStatusWorkloadsOutput
	ToApplicationConfigurationStatusWorkloadsOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsOutput
}

// A WorkloadStatus represents the status of a workload.
type ApplicationConfigurationStatusWorkloadsArgs struct {
	// ComponentName that produced this workload.
	ComponentName pulumi.StringPtrInput `pulumi:"componentName"`
	// Traits associated with this workload.
	Traits ApplicationConfigurationStatusWorkloadsTraitsArrayInput `pulumi:"traits"`
	// Reference to a workload created by an ApplicationConfiguration.
	WorkloadRef ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput `pulumi:"workloadRef"`
}

func (ApplicationConfigurationStatusWorkloadsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsArgs) ToApplicationConfigurationStatusWorkloadsOutput() ApplicationConfigurationStatusWorkloadsOutput {
	return i.ToApplicationConfigurationStatusWorkloadsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsArgs) ToApplicationConfigurationStatusWorkloadsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsOutput)
}

// ApplicationConfigurationStatusWorkloadsArrayInput is an input type that accepts ApplicationConfigurationStatusWorkloadsArray and ApplicationConfigurationStatusWorkloadsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsArrayInput` via:
//
//          ApplicationConfigurationStatusWorkloadsArray{ ApplicationConfigurationStatusWorkloadsArgs{...} }
type ApplicationConfigurationStatusWorkloadsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsArrayOutput() ApplicationConfigurationStatusWorkloadsArrayOutput
	ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsArrayOutput
}

type ApplicationConfigurationStatusWorkloadsArray []ApplicationConfigurationStatusWorkloadsInput

func (ApplicationConfigurationStatusWorkloadsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsArray) ToApplicationConfigurationStatusWorkloadsArrayOutput() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return i.ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsArray) ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsArrayOutput)
}

// A WorkloadStatus represents the status of a workload.
type ApplicationConfigurationStatusWorkloadsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsOutput) ToApplicationConfigurationStatusWorkloadsOutput() ApplicationConfigurationStatusWorkloadsOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsOutput) ToApplicationConfigurationStatusWorkloadsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsOutput {
	return o
}

// ComponentName that produced this workload.
func (o ApplicationConfigurationStatusWorkloadsOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloads) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// Traits associated with this workload.
func (o ApplicationConfigurationStatusWorkloadsOutput) Traits() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloads) []ApplicationConfigurationStatusWorkloadsTraits {
		return v.Traits
	}).(ApplicationConfigurationStatusWorkloadsTraitsArrayOutput)
}

// Reference to a workload created by an ApplicationConfiguration.
func (o ApplicationConfigurationStatusWorkloadsOutput) WorkloadRef() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloads) *ApplicationConfigurationStatusWorkloadsWorkloadRef {
		return v.WorkloadRef
	}).(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput)
}

type ApplicationConfigurationStatusWorkloadsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloads)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsArrayOutput) ToApplicationConfigurationStatusWorkloadsArrayOutput() ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsArrayOutput) ToApplicationConfigurationStatusWorkloadsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationStatusWorkloadsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationStatusWorkloads {
		return vs[0].([]ApplicationConfigurationStatusWorkloads)[vs[1].(int)]
	}).(ApplicationConfigurationStatusWorkloadsOutput)
}

// A WorkloadTrait represents a trait associated with a workload.
type ApplicationConfigurationStatusWorkloadsTraits struct {
	// Reference to a trait created by an ApplicationConfiguration.
	TraitRef ApplicationConfigurationStatusWorkloadsTraitsTraitRef `pulumi:"traitRef"`
}

// ApplicationConfigurationStatusWorkloadsTraitsInput is an input type that accepts ApplicationConfigurationStatusWorkloadsTraitsArgs and ApplicationConfigurationStatusWorkloadsTraitsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsTraitsInput` via:
//
//          ApplicationConfigurationStatusWorkloadsTraitsArgs{...}
type ApplicationConfigurationStatusWorkloadsTraitsInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsTraitsOutput() ApplicationConfigurationStatusWorkloadsTraitsOutput
	ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsTraitsOutput
}

// A WorkloadTrait represents a trait associated with a workload.
type ApplicationConfigurationStatusWorkloadsTraitsArgs struct {
	// Reference to a trait created by an ApplicationConfiguration.
	TraitRef ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput `pulumi:"traitRef"`
}

func (ApplicationConfigurationStatusWorkloadsTraitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArgs) ToApplicationConfigurationStatusWorkloadsTraitsOutput() ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return i.ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArgs) ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsTraitsOutput)
}

// ApplicationConfigurationStatusWorkloadsTraitsArrayInput is an input type that accepts ApplicationConfigurationStatusWorkloadsTraitsArray and ApplicationConfigurationStatusWorkloadsTraitsArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsTraitsArrayInput` via:
//
//          ApplicationConfigurationStatusWorkloadsTraitsArray{ ApplicationConfigurationStatusWorkloadsTraitsArgs{...} }
type ApplicationConfigurationStatusWorkloadsTraitsArrayInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsTraitsArrayOutput() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput
	ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsTraitsArrayOutput
}

type ApplicationConfigurationStatusWorkloadsTraitsArray []ApplicationConfigurationStatusWorkloadsTraitsInput

func (ApplicationConfigurationStatusWorkloadsTraitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArray) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutput() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return i.ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsTraitsArray) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsTraitsArrayOutput)
}

// A WorkloadTrait represents a trait associated with a workload.
type ApplicationConfigurationStatusWorkloadsTraitsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsTraitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsTraitsOutput) ToApplicationConfigurationStatusWorkloadsTraitsOutput() ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsOutput) ToApplicationConfigurationStatusWorkloadsTraitsOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return o
}

// Reference to a trait created by an ApplicationConfiguration.
func (o ApplicationConfigurationStatusWorkloadsTraitsOutput) TraitRef() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraits) ApplicationConfigurationStatusWorkloadsTraitsTraitRef {
		return v.TraitRef
	}).(ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput)
}

type ApplicationConfigurationStatusWorkloadsTraitsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationConfigurationStatusWorkloadsTraits)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutput() ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) ToApplicationConfigurationStatusWorkloadsTraitsArrayOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsArrayOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsArrayOutput) Index(i pulumi.IntInput) ApplicationConfigurationStatusWorkloadsTraitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationConfigurationStatusWorkloadsTraits {
		return vs[0].([]ApplicationConfigurationStatusWorkloadsTraits)[vs[1].(int)]
	}).(ApplicationConfigurationStatusWorkloadsTraitsOutput)
}

// Reference to a trait created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsTraitsTraitRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput is an input type that accepts ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs and ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput` via:
//
//          ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs{...}
type ApplicationConfigurationStatusWorkloadsTraitsTraitRefInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput
	ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput
}

// Reference to a trait created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraitsTraitRef)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return i.ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsTraitsTraitRefArgs) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput)
}

// Reference to a trait created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsTraitsTraitRef)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput() ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ToApplicationConfigurationStatusWorkloadsTraitsTraitRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput {
	return o
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsTraitsTraitRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

// Reference to a workload created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsWorkloadRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ApplicationConfigurationStatusWorkloadsWorkloadRefInput is an input type that accepts ApplicationConfigurationStatusWorkloadsWorkloadRefArgs and ApplicationConfigurationStatusWorkloadsWorkloadRefOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsWorkloadRefInput` via:
//
//          ApplicationConfigurationStatusWorkloadsWorkloadRefArgs{...}
type ApplicationConfigurationStatusWorkloadsWorkloadRefInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsWorkloadRefOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput
	ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefOutput
}

// Reference to a workload created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsWorkloadRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return i.ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput)
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return i.ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput).ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx)
}

// ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput is an input type that accepts ApplicationConfigurationStatusWorkloadsWorkloadRefArgs, ApplicationConfigurationStatusWorkloadsWorkloadRefPtr and ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput` via:
//
//          ApplicationConfigurationStatusWorkloadsWorkloadRefArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput
	ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput
}

type applicationConfigurationStatusWorkloadsWorkloadRefPtrType ApplicationConfigurationStatusWorkloadsWorkloadRefArgs

func ApplicationConfigurationStatusWorkloadsWorkloadRefPtr(v *ApplicationConfigurationStatusWorkloadsWorkloadRefArgs) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrInput {
	return (*applicationConfigurationStatusWorkloadsWorkloadRefPtrType)(v)
}

func (*applicationConfigurationStatusWorkloadsWorkloadRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (i *applicationConfigurationStatusWorkloadsWorkloadRefPtrType) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return i.ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationStatusWorkloadsWorkloadRefPtrType) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput)
}

// Reference to a workload created by an ApplicationConfiguration.
type ApplicationConfigurationStatusWorkloadsWorkloadRefOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o.ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) *ApplicationConfigurationStatusWorkloadsWorkloadRef {
		return &v
	}).(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput)
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationStatusWorkloadsWorkloadRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationStatusWorkloadsWorkloadRef)(nil)).Elem()
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput() ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ToApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutputWithContext(ctx context.Context) ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput {
	return o
}

func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Elem() ApplicationConfigurationStatusWorkloadsWorkloadRefOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) ApplicationConfigurationStatusWorkloadsWorkloadRef {
		return *v
	}).(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput)
}

// APIVersion of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Kind of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// UID of the referenced object.
func (o ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationStatusWorkloadsWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// A Component describes how an OAM workload kind may be instantiated.
type ComponentType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A ComponentSpec defines the desired state of a Component.
	Spec *ComponentSpec `pulumi:"spec"`
	// A ComponentStatus represents the observed state of a Component.
	Status *ComponentStatus `pulumi:"status"`
}

// ComponentTypeInput is an input type that accepts ComponentTypeArgs and ComponentTypeOutput values.
// You can construct a concrete instance of `ComponentTypeInput` via:
//
//          ComponentTypeArgs{...}
type ComponentTypeInput interface {
	pulumi.Input

	ToComponentTypeOutput() ComponentTypeOutput
	ToComponentTypeOutputWithContext(context.Context) ComponentTypeOutput
}

// A Component describes how an OAM workload kind may be instantiated.
type ComponentTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A ComponentSpec defines the desired state of a Component.
	Spec ComponentSpecPtrInput `pulumi:"spec"`
	// A ComponentStatus represents the observed state of a Component.
	Status ComponentStatusPtrInput `pulumi:"status"`
}

func (ComponentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentType)(nil)).Elem()
}

func (i ComponentTypeArgs) ToComponentTypeOutput() ComponentTypeOutput {
	return i.ToComponentTypeOutputWithContext(context.Background())
}

func (i ComponentTypeArgs) ToComponentTypeOutputWithContext(ctx context.Context) ComponentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentTypeOutput)
}

// A Component describes how an OAM workload kind may be instantiated.
type ComponentTypeOutput struct{ *pulumi.OutputState }

func (ComponentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentType)(nil)).Elem()
}

func (o ComponentTypeOutput) ToComponentTypeOutput() ComponentTypeOutput {
	return o
}

func (o ComponentTypeOutput) ToComponentTypeOutputWithContext(ctx context.Context) ComponentTypeOutput {
	return o
}

func (o ComponentTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ComponentTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ComponentTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ComponentType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A ComponentSpec defines the desired state of a Component.
func (o ComponentTypeOutput) Spec() ComponentSpecPtrOutput {
	return o.ApplyT(func(v ComponentType) *ComponentSpec { return v.Spec }).(ComponentSpecPtrOutput)
}

// A ComponentStatus represents the observed state of a Component.
func (o ComponentTypeOutput) Status() ComponentStatusPtrOutput {
	return o.ApplyT(func(v ComponentType) *ComponentStatus { return v.Status }).(ComponentStatusPtrOutput)
}

type ComponentMetadata struct {
}

// ComponentMetadataInput is an input type that accepts ComponentMetadataArgs and ComponentMetadataOutput values.
// You can construct a concrete instance of `ComponentMetadataInput` via:
//
//          ComponentMetadataArgs{...}
type ComponentMetadataInput interface {
	pulumi.Input

	ToComponentMetadataOutput() ComponentMetadataOutput
	ToComponentMetadataOutputWithContext(context.Context) ComponentMetadataOutput
}

type ComponentMetadataArgs struct {
}

func (ComponentMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentMetadata)(nil)).Elem()
}

func (i ComponentMetadataArgs) ToComponentMetadataOutput() ComponentMetadataOutput {
	return i.ToComponentMetadataOutputWithContext(context.Background())
}

func (i ComponentMetadataArgs) ToComponentMetadataOutputWithContext(ctx context.Context) ComponentMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentMetadataOutput)
}

type ComponentMetadataOutput struct{ *pulumi.OutputState }

func (ComponentMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentMetadata)(nil)).Elem()
}

func (o ComponentMetadataOutput) ToComponentMetadataOutput() ComponentMetadataOutput {
	return o
}

func (o ComponentMetadataOutput) ToComponentMetadataOutputWithContext(ctx context.Context) ComponentMetadataOutput {
	return o
}

// A ComponentSpec defines the desired state of a Component.
type ComponentSpec struct {
	// Parameters exposed by this component. ApplicationConfigurations that reference this component may specify values for these parameters, which will in turn be injected into the embedded workload.
	Parameters []ComponentSpecParameters `pulumi:"parameters"`
	// A Workload that will be created for each ApplicationConfiguration that includes this Component. Workloads must be defined by a WorkloadDefinition.
	Workload map[string]interface{} `pulumi:"workload"`
}

// ComponentSpecInput is an input type that accepts ComponentSpecArgs and ComponentSpecOutput values.
// You can construct a concrete instance of `ComponentSpecInput` via:
//
//          ComponentSpecArgs{...}
type ComponentSpecInput interface {
	pulumi.Input

	ToComponentSpecOutput() ComponentSpecOutput
	ToComponentSpecOutputWithContext(context.Context) ComponentSpecOutput
}

// A ComponentSpec defines the desired state of a Component.
type ComponentSpecArgs struct {
	// Parameters exposed by this component. ApplicationConfigurations that reference this component may specify values for these parameters, which will in turn be injected into the embedded workload.
	Parameters ComponentSpecParametersArrayInput `pulumi:"parameters"`
	// A Workload that will be created for each ApplicationConfiguration that includes this Component. Workloads must be defined by a WorkloadDefinition.
	Workload pulumi.MapInput `pulumi:"workload"`
}

func (ComponentSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentSpec)(nil)).Elem()
}

func (i ComponentSpecArgs) ToComponentSpecOutput() ComponentSpecOutput {
	return i.ToComponentSpecOutputWithContext(context.Background())
}

func (i ComponentSpecArgs) ToComponentSpecOutputWithContext(ctx context.Context) ComponentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSpecOutput)
}

func (i ComponentSpecArgs) ToComponentSpecPtrOutput() ComponentSpecPtrOutput {
	return i.ToComponentSpecPtrOutputWithContext(context.Background())
}

func (i ComponentSpecArgs) ToComponentSpecPtrOutputWithContext(ctx context.Context) ComponentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSpecOutput).ToComponentSpecPtrOutputWithContext(ctx)
}

// ComponentSpecPtrInput is an input type that accepts ComponentSpecArgs, ComponentSpecPtr and ComponentSpecPtrOutput values.
// You can construct a concrete instance of `ComponentSpecPtrInput` via:
//
//          ComponentSpecArgs{...}
//
//  or:
//
//          nil
type ComponentSpecPtrInput interface {
	pulumi.Input

	ToComponentSpecPtrOutput() ComponentSpecPtrOutput
	ToComponentSpecPtrOutputWithContext(context.Context) ComponentSpecPtrOutput
}

type componentSpecPtrType ComponentSpecArgs

func ComponentSpecPtr(v *ComponentSpecArgs) ComponentSpecPtrInput {
	return (*componentSpecPtrType)(v)
}

func (*componentSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentSpec)(nil)).Elem()
}

func (i *componentSpecPtrType) ToComponentSpecPtrOutput() ComponentSpecPtrOutput {
	return i.ToComponentSpecPtrOutputWithContext(context.Background())
}

func (i *componentSpecPtrType) ToComponentSpecPtrOutputWithContext(ctx context.Context) ComponentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSpecPtrOutput)
}

// A ComponentSpec defines the desired state of a Component.
type ComponentSpecOutput struct{ *pulumi.OutputState }

func (ComponentSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentSpec)(nil)).Elem()
}

func (o ComponentSpecOutput) ToComponentSpecOutput() ComponentSpecOutput {
	return o
}

func (o ComponentSpecOutput) ToComponentSpecOutputWithContext(ctx context.Context) ComponentSpecOutput {
	return o
}

func (o ComponentSpecOutput) ToComponentSpecPtrOutput() ComponentSpecPtrOutput {
	return o.ToComponentSpecPtrOutputWithContext(context.Background())
}

func (o ComponentSpecOutput) ToComponentSpecPtrOutputWithContext(ctx context.Context) ComponentSpecPtrOutput {
	return o.ApplyT(func(v ComponentSpec) *ComponentSpec {
		return &v
	}).(ComponentSpecPtrOutput)
}

// Parameters exposed by this component. ApplicationConfigurations that reference this component may specify values for these parameters, which will in turn be injected into the embedded workload.
func (o ComponentSpecOutput) Parameters() ComponentSpecParametersArrayOutput {
	return o.ApplyT(func(v ComponentSpec) []ComponentSpecParameters { return v.Parameters }).(ComponentSpecParametersArrayOutput)
}

// A Workload that will be created for each ApplicationConfiguration that includes this Component. Workloads must be defined by a WorkloadDefinition.
func (o ComponentSpecOutput) Workload() pulumi.MapOutput {
	return o.ApplyT(func(v ComponentSpec) map[string]interface{} { return v.Workload }).(pulumi.MapOutput)
}

type ComponentSpecPtrOutput struct{ *pulumi.OutputState }

func (ComponentSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentSpec)(nil)).Elem()
}

func (o ComponentSpecPtrOutput) ToComponentSpecPtrOutput() ComponentSpecPtrOutput {
	return o
}

func (o ComponentSpecPtrOutput) ToComponentSpecPtrOutputWithContext(ctx context.Context) ComponentSpecPtrOutput {
	return o
}

func (o ComponentSpecPtrOutput) Elem() ComponentSpecOutput {
	return o.ApplyT(func(v *ComponentSpec) ComponentSpec { return *v }).(ComponentSpecOutput)
}

// Parameters exposed by this component. ApplicationConfigurations that reference this component may specify values for these parameters, which will in turn be injected into the embedded workload.
func (o ComponentSpecPtrOutput) Parameters() ComponentSpecParametersArrayOutput {
	return o.ApplyT(func(v *ComponentSpec) []ComponentSpecParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ComponentSpecParametersArrayOutput)
}

// A Workload that will be created for each ApplicationConfiguration that includes this Component. Workloads must be defined by a WorkloadDefinition.
func (o ComponentSpecPtrOutput) Workload() pulumi.MapOutput {
	return o.ApplyT(func(v *ComponentSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Workload
	}).(pulumi.MapOutput)
}

// A ComponentParameter defines a configurable parameter of a component.
type ComponentSpecParameters struct {
	// Description of this parameter.
	Description *string `pulumi:"description"`
	// FieldPaths specifies an array of fields within this Component's workload that will be overwritten by the value of this parameter. The type of the parameter (e.g. int, string) is inferred from the type of these fields; All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
	FieldPaths []string `pulumi:"fieldPaths"`
	// Name of this parameter. OAM ApplicationConfigurations will specify parameter values using this name.
	Name string `pulumi:"name"`
	// Required specifies whether or not a value for this parameter must be supplied when authoring an ApplicationConfiguration.
	Required *bool `pulumi:"required"`
}

// ComponentSpecParametersInput is an input type that accepts ComponentSpecParametersArgs and ComponentSpecParametersOutput values.
// You can construct a concrete instance of `ComponentSpecParametersInput` via:
//
//          ComponentSpecParametersArgs{...}
type ComponentSpecParametersInput interface {
	pulumi.Input

	ToComponentSpecParametersOutput() ComponentSpecParametersOutput
	ToComponentSpecParametersOutputWithContext(context.Context) ComponentSpecParametersOutput
}

// A ComponentParameter defines a configurable parameter of a component.
type ComponentSpecParametersArgs struct {
	// Description of this parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// FieldPaths specifies an array of fields within this Component's workload that will be overwritten by the value of this parameter. The type of the parameter (e.g. int, string) is inferred from the type of these fields; All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
	FieldPaths pulumi.StringArrayInput `pulumi:"fieldPaths"`
	// Name of this parameter. OAM ApplicationConfigurations will specify parameter values using this name.
	Name pulumi.StringInput `pulumi:"name"`
	// Required specifies whether or not a value for this parameter must be supplied when authoring an ApplicationConfiguration.
	Required pulumi.BoolPtrInput `pulumi:"required"`
}

func (ComponentSpecParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentSpecParameters)(nil)).Elem()
}

func (i ComponentSpecParametersArgs) ToComponentSpecParametersOutput() ComponentSpecParametersOutput {
	return i.ToComponentSpecParametersOutputWithContext(context.Background())
}

func (i ComponentSpecParametersArgs) ToComponentSpecParametersOutputWithContext(ctx context.Context) ComponentSpecParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSpecParametersOutput)
}

// ComponentSpecParametersArrayInput is an input type that accepts ComponentSpecParametersArray and ComponentSpecParametersArrayOutput values.
// You can construct a concrete instance of `ComponentSpecParametersArrayInput` via:
//
//          ComponentSpecParametersArray{ ComponentSpecParametersArgs{...} }
type ComponentSpecParametersArrayInput interface {
	pulumi.Input

	ToComponentSpecParametersArrayOutput() ComponentSpecParametersArrayOutput
	ToComponentSpecParametersArrayOutputWithContext(context.Context) ComponentSpecParametersArrayOutput
}

type ComponentSpecParametersArray []ComponentSpecParametersInput

func (ComponentSpecParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentSpecParameters)(nil)).Elem()
}

func (i ComponentSpecParametersArray) ToComponentSpecParametersArrayOutput() ComponentSpecParametersArrayOutput {
	return i.ToComponentSpecParametersArrayOutputWithContext(context.Background())
}

func (i ComponentSpecParametersArray) ToComponentSpecParametersArrayOutputWithContext(ctx context.Context) ComponentSpecParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSpecParametersArrayOutput)
}

// A ComponentParameter defines a configurable parameter of a component.
type ComponentSpecParametersOutput struct{ *pulumi.OutputState }

func (ComponentSpecParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentSpecParameters)(nil)).Elem()
}

func (o ComponentSpecParametersOutput) ToComponentSpecParametersOutput() ComponentSpecParametersOutput {
	return o
}

func (o ComponentSpecParametersOutput) ToComponentSpecParametersOutputWithContext(ctx context.Context) ComponentSpecParametersOutput {
	return o
}

// Description of this parameter.
func (o ComponentSpecParametersOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentSpecParameters) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// FieldPaths specifies an array of fields within this Component's workload that will be overwritten by the value of this parameter. The type of the parameter (e.g. int, string) is inferred from the type of these fields; All fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.
func (o ComponentSpecParametersOutput) FieldPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentSpecParameters) []string { return v.FieldPaths }).(pulumi.StringArrayOutput)
}

// Name of this parameter. OAM ApplicationConfigurations will specify parameter values using this name.
func (o ComponentSpecParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentSpecParameters) string { return v.Name }).(pulumi.StringOutput)
}

// Required specifies whether or not a value for this parameter must be supplied when authoring an ApplicationConfiguration.
func (o ComponentSpecParametersOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComponentSpecParameters) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type ComponentSpecParametersArrayOutput struct{ *pulumi.OutputState }

func (ComponentSpecParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentSpecParameters)(nil)).Elem()
}

func (o ComponentSpecParametersArrayOutput) ToComponentSpecParametersArrayOutput() ComponentSpecParametersArrayOutput {
	return o
}

func (o ComponentSpecParametersArrayOutput) ToComponentSpecParametersArrayOutputWithContext(ctx context.Context) ComponentSpecParametersArrayOutput {
	return o
}

func (o ComponentSpecParametersArrayOutput) Index(i pulumi.IntInput) ComponentSpecParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentSpecParameters {
		return vs[0].([]ComponentSpecParameters)[vs[1].(int)]
	}).(ComponentSpecParametersOutput)
}

// A ComponentStatus represents the observed state of a Component.
type ComponentStatus struct {
	// Conditions of the resource.
	Conditions []ComponentStatusConditions `pulumi:"conditions"`
}

// ComponentStatusInput is an input type that accepts ComponentStatusArgs and ComponentStatusOutput values.
// You can construct a concrete instance of `ComponentStatusInput` via:
//
//          ComponentStatusArgs{...}
type ComponentStatusInput interface {
	pulumi.Input

	ToComponentStatusOutput() ComponentStatusOutput
	ToComponentStatusOutputWithContext(context.Context) ComponentStatusOutput
}

// A ComponentStatus represents the observed state of a Component.
type ComponentStatusArgs struct {
	// Conditions of the resource.
	Conditions ComponentStatusConditionsArrayInput `pulumi:"conditions"`
}

func (ComponentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentStatus)(nil)).Elem()
}

func (i ComponentStatusArgs) ToComponentStatusOutput() ComponentStatusOutput {
	return i.ToComponentStatusOutputWithContext(context.Background())
}

func (i ComponentStatusArgs) ToComponentStatusOutputWithContext(ctx context.Context) ComponentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentStatusOutput)
}

func (i ComponentStatusArgs) ToComponentStatusPtrOutput() ComponentStatusPtrOutput {
	return i.ToComponentStatusPtrOutputWithContext(context.Background())
}

func (i ComponentStatusArgs) ToComponentStatusPtrOutputWithContext(ctx context.Context) ComponentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentStatusOutput).ToComponentStatusPtrOutputWithContext(ctx)
}

// ComponentStatusPtrInput is an input type that accepts ComponentStatusArgs, ComponentStatusPtr and ComponentStatusPtrOutput values.
// You can construct a concrete instance of `ComponentStatusPtrInput` via:
//
//          ComponentStatusArgs{...}
//
//  or:
//
//          nil
type ComponentStatusPtrInput interface {
	pulumi.Input

	ToComponentStatusPtrOutput() ComponentStatusPtrOutput
	ToComponentStatusPtrOutputWithContext(context.Context) ComponentStatusPtrOutput
}

type componentStatusPtrType ComponentStatusArgs

func ComponentStatusPtr(v *ComponentStatusArgs) ComponentStatusPtrInput {
	return (*componentStatusPtrType)(v)
}

func (*componentStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentStatus)(nil)).Elem()
}

func (i *componentStatusPtrType) ToComponentStatusPtrOutput() ComponentStatusPtrOutput {
	return i.ToComponentStatusPtrOutputWithContext(context.Background())
}

func (i *componentStatusPtrType) ToComponentStatusPtrOutputWithContext(ctx context.Context) ComponentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentStatusPtrOutput)
}

// A ComponentStatus represents the observed state of a Component.
type ComponentStatusOutput struct{ *pulumi.OutputState }

func (ComponentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentStatus)(nil)).Elem()
}

func (o ComponentStatusOutput) ToComponentStatusOutput() ComponentStatusOutput {
	return o
}

func (o ComponentStatusOutput) ToComponentStatusOutputWithContext(ctx context.Context) ComponentStatusOutput {
	return o
}

func (o ComponentStatusOutput) ToComponentStatusPtrOutput() ComponentStatusPtrOutput {
	return o.ToComponentStatusPtrOutputWithContext(context.Background())
}

func (o ComponentStatusOutput) ToComponentStatusPtrOutputWithContext(ctx context.Context) ComponentStatusPtrOutput {
	return o.ApplyT(func(v ComponentStatus) *ComponentStatus {
		return &v
	}).(ComponentStatusPtrOutput)
}

// Conditions of the resource.
func (o ComponentStatusOutput) Conditions() ComponentStatusConditionsArrayOutput {
	return o.ApplyT(func(v ComponentStatus) []ComponentStatusConditions { return v.Conditions }).(ComponentStatusConditionsArrayOutput)
}

type ComponentStatusPtrOutput struct{ *pulumi.OutputState }

func (ComponentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentStatus)(nil)).Elem()
}

func (o ComponentStatusPtrOutput) ToComponentStatusPtrOutput() ComponentStatusPtrOutput {
	return o
}

func (o ComponentStatusPtrOutput) ToComponentStatusPtrOutputWithContext(ctx context.Context) ComponentStatusPtrOutput {
	return o
}

func (o ComponentStatusPtrOutput) Elem() ComponentStatusOutput {
	return o.ApplyT(func(v *ComponentStatus) ComponentStatus { return *v }).(ComponentStatusOutput)
}

// Conditions of the resource.
func (o ComponentStatusPtrOutput) Conditions() ComponentStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ComponentStatus) []ComponentStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ComponentStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ComponentStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// ComponentStatusConditionsInput is an input type that accepts ComponentStatusConditionsArgs and ComponentStatusConditionsOutput values.
// You can construct a concrete instance of `ComponentStatusConditionsInput` via:
//
//          ComponentStatusConditionsArgs{...}
type ComponentStatusConditionsInput interface {
	pulumi.Input

	ToComponentStatusConditionsOutput() ComponentStatusConditionsOutput
	ToComponentStatusConditionsOutputWithContext(context.Context) ComponentStatusConditionsOutput
}

// A Condition that may apply to a resource.
type ComponentStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentStatusConditions)(nil)).Elem()
}

func (i ComponentStatusConditionsArgs) ToComponentStatusConditionsOutput() ComponentStatusConditionsOutput {
	return i.ToComponentStatusConditionsOutputWithContext(context.Background())
}

func (i ComponentStatusConditionsArgs) ToComponentStatusConditionsOutputWithContext(ctx context.Context) ComponentStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentStatusConditionsOutput)
}

// ComponentStatusConditionsArrayInput is an input type that accepts ComponentStatusConditionsArray and ComponentStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ComponentStatusConditionsArrayInput` via:
//
//          ComponentStatusConditionsArray{ ComponentStatusConditionsArgs{...} }
type ComponentStatusConditionsArrayInput interface {
	pulumi.Input

	ToComponentStatusConditionsArrayOutput() ComponentStatusConditionsArrayOutput
	ToComponentStatusConditionsArrayOutputWithContext(context.Context) ComponentStatusConditionsArrayOutput
}

type ComponentStatusConditionsArray []ComponentStatusConditionsInput

func (ComponentStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentStatusConditions)(nil)).Elem()
}

func (i ComponentStatusConditionsArray) ToComponentStatusConditionsArrayOutput() ComponentStatusConditionsArrayOutput {
	return i.ToComponentStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ComponentStatusConditionsArray) ToComponentStatusConditionsArrayOutputWithContext(ctx context.Context) ComponentStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ComponentStatusConditionsOutput struct{ *pulumi.OutputState }

func (ComponentStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentStatusConditions)(nil)).Elem()
}

func (o ComponentStatusConditionsOutput) ToComponentStatusConditionsOutput() ComponentStatusConditionsOutput {
	return o
}

func (o ComponentStatusConditionsOutput) ToComponentStatusConditionsOutputWithContext(ctx context.Context) ComponentStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o ComponentStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o ComponentStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o ComponentStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o ComponentStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o ComponentStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ComponentStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentStatusConditions)(nil)).Elem()
}

func (o ComponentStatusConditionsArrayOutput) ToComponentStatusConditionsArrayOutput() ComponentStatusConditionsArrayOutput {
	return o
}

func (o ComponentStatusConditionsArrayOutput) ToComponentStatusConditionsArrayOutputWithContext(ctx context.Context) ComponentStatusConditionsArrayOutput {
	return o
}

func (o ComponentStatusConditionsArrayOutput) Index(i pulumi.IntInput) ComponentStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentStatusConditions {
		return vs[0].([]ComponentStatusConditions)[vs[1].(int)]
	}).(ComponentStatusConditionsOutput)
}

// A ContainerizedWorkload is a workload that runs OCI containers.
type ContainerizedWorkloadType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
	Spec *ContainerizedWorkloadSpec `pulumi:"spec"`
	// A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
	Status *ContainerizedWorkloadStatus `pulumi:"status"`
}

// ContainerizedWorkloadTypeInput is an input type that accepts ContainerizedWorkloadTypeArgs and ContainerizedWorkloadTypeOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadTypeInput` via:
//
//          ContainerizedWorkloadTypeArgs{...}
type ContainerizedWorkloadTypeInput interface {
	pulumi.Input

	ToContainerizedWorkloadTypeOutput() ContainerizedWorkloadTypeOutput
	ToContainerizedWorkloadTypeOutputWithContext(context.Context) ContainerizedWorkloadTypeOutput
}

// A ContainerizedWorkload is a workload that runs OCI containers.
type ContainerizedWorkloadTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
	Spec ContainerizedWorkloadSpecPtrInput `pulumi:"spec"`
	// A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
	Status ContainerizedWorkloadStatusPtrInput `pulumi:"status"`
}

func (ContainerizedWorkloadTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadType)(nil)).Elem()
}

func (i ContainerizedWorkloadTypeArgs) ToContainerizedWorkloadTypeOutput() ContainerizedWorkloadTypeOutput {
	return i.ToContainerizedWorkloadTypeOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadTypeArgs) ToContainerizedWorkloadTypeOutputWithContext(ctx context.Context) ContainerizedWorkloadTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadTypeOutput)
}

// A ContainerizedWorkload is a workload that runs OCI containers.
type ContainerizedWorkloadTypeOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadType)(nil)).Elem()
}

func (o ContainerizedWorkloadTypeOutput) ToContainerizedWorkloadTypeOutput() ContainerizedWorkloadTypeOutput {
	return o
}

func (o ContainerizedWorkloadTypeOutput) ToContainerizedWorkloadTypeOutputWithContext(ctx context.Context) ContainerizedWorkloadTypeOutput {
	return o
}

func (o ContainerizedWorkloadTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ContainerizedWorkloadTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ContainerizedWorkloadTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
func (o ContainerizedWorkloadTypeOutput) Spec() ContainerizedWorkloadSpecPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadType) *ContainerizedWorkloadSpec { return v.Spec }).(ContainerizedWorkloadSpecPtrOutput)
}

// A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
func (o ContainerizedWorkloadTypeOutput) Status() ContainerizedWorkloadStatusPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadType) *ContainerizedWorkloadStatus { return v.Status }).(ContainerizedWorkloadStatusPtrOutput)
}

type ContainerizedWorkloadMetadata struct {
}

// ContainerizedWorkloadMetadataInput is an input type that accepts ContainerizedWorkloadMetadataArgs and ContainerizedWorkloadMetadataOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadMetadataInput` via:
//
//          ContainerizedWorkloadMetadataArgs{...}
type ContainerizedWorkloadMetadataInput interface {
	pulumi.Input

	ToContainerizedWorkloadMetadataOutput() ContainerizedWorkloadMetadataOutput
	ToContainerizedWorkloadMetadataOutputWithContext(context.Context) ContainerizedWorkloadMetadataOutput
}

type ContainerizedWorkloadMetadataArgs struct {
}

func (ContainerizedWorkloadMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadMetadata)(nil)).Elem()
}

func (i ContainerizedWorkloadMetadataArgs) ToContainerizedWorkloadMetadataOutput() ContainerizedWorkloadMetadataOutput {
	return i.ToContainerizedWorkloadMetadataOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadMetadataArgs) ToContainerizedWorkloadMetadataOutputWithContext(ctx context.Context) ContainerizedWorkloadMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadMetadataOutput)
}

type ContainerizedWorkloadMetadataOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadMetadata)(nil)).Elem()
}

func (o ContainerizedWorkloadMetadataOutput) ToContainerizedWorkloadMetadataOutput() ContainerizedWorkloadMetadataOutput {
	return o
}

func (o ContainerizedWorkloadMetadataOutput) ToContainerizedWorkloadMetadataOutputWithContext(ctx context.Context) ContainerizedWorkloadMetadataOutput {
	return o
}

// A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
type ContainerizedWorkloadSpec struct {
	// CPUArchitecture required by this workload.
	Arch *string `pulumi:"arch"`
	// Containers of which this workload consists.
	Containers []ContainerizedWorkloadSpecContainers `pulumi:"containers"`
	// OperatingSystem required by this workload.
	OsType *string `pulumi:"osType"`
}

// ContainerizedWorkloadSpecInput is an input type that accepts ContainerizedWorkloadSpecArgs and ContainerizedWorkloadSpecOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecInput` via:
//
//          ContainerizedWorkloadSpecArgs{...}
type ContainerizedWorkloadSpecInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecOutput() ContainerizedWorkloadSpecOutput
	ToContainerizedWorkloadSpecOutputWithContext(context.Context) ContainerizedWorkloadSpecOutput
}

// A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
type ContainerizedWorkloadSpecArgs struct {
	// CPUArchitecture required by this workload.
	Arch pulumi.StringPtrInput `pulumi:"arch"`
	// Containers of which this workload consists.
	Containers ContainerizedWorkloadSpecContainersArrayInput `pulumi:"containers"`
	// OperatingSystem required by this workload.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
}

func (ContainerizedWorkloadSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpec)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecArgs) ToContainerizedWorkloadSpecOutput() ContainerizedWorkloadSpecOutput {
	return i.ToContainerizedWorkloadSpecOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecArgs) ToContainerizedWorkloadSpecOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecOutput)
}

func (i ContainerizedWorkloadSpecArgs) ToContainerizedWorkloadSpecPtrOutput() ContainerizedWorkloadSpecPtrOutput {
	return i.ToContainerizedWorkloadSpecPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecArgs) ToContainerizedWorkloadSpecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecOutput).ToContainerizedWorkloadSpecPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecPtrInput is an input type that accepts ContainerizedWorkloadSpecArgs, ContainerizedWorkloadSpecPtr and ContainerizedWorkloadSpecPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecPtrInput` via:
//
//          ContainerizedWorkloadSpecArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecPtrOutput() ContainerizedWorkloadSpecPtrOutput
	ToContainerizedWorkloadSpecPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecPtrOutput
}

type containerizedWorkloadSpecPtrType ContainerizedWorkloadSpecArgs

func ContainerizedWorkloadSpecPtr(v *ContainerizedWorkloadSpecArgs) ContainerizedWorkloadSpecPtrInput {
	return (*containerizedWorkloadSpecPtrType)(v)
}

func (*containerizedWorkloadSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpec)(nil)).Elem()
}

func (i *containerizedWorkloadSpecPtrType) ToContainerizedWorkloadSpecPtrOutput() ContainerizedWorkloadSpecPtrOutput {
	return i.ToContainerizedWorkloadSpecPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecPtrType) ToContainerizedWorkloadSpecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecPtrOutput)
}

// A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
type ContainerizedWorkloadSpecOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpec)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecOutput) ToContainerizedWorkloadSpecOutput() ContainerizedWorkloadSpecOutput {
	return o
}

func (o ContainerizedWorkloadSpecOutput) ToContainerizedWorkloadSpecOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecOutput {
	return o
}

func (o ContainerizedWorkloadSpecOutput) ToContainerizedWorkloadSpecPtrOutput() ContainerizedWorkloadSpecPtrOutput {
	return o.ToContainerizedWorkloadSpecPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecOutput) ToContainerizedWorkloadSpecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpec) *ContainerizedWorkloadSpec {
		return &v
	}).(ContainerizedWorkloadSpecPtrOutput)
}

// CPUArchitecture required by this workload.
func (o ContainerizedWorkloadSpecOutput) Arch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpec) *string { return v.Arch }).(pulumi.StringPtrOutput)
}

// Containers of which this workload consists.
func (o ContainerizedWorkloadSpecOutput) Containers() ContainerizedWorkloadSpecContainersArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpec) []ContainerizedWorkloadSpecContainers { return v.Containers }).(ContainerizedWorkloadSpecContainersArrayOutput)
}

// OperatingSystem required by this workload.
func (o ContainerizedWorkloadSpecOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpec) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

type ContainerizedWorkloadSpecPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpec)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecPtrOutput) ToContainerizedWorkloadSpecPtrOutput() ContainerizedWorkloadSpecPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecPtrOutput) ToContainerizedWorkloadSpecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecPtrOutput) Elem() ContainerizedWorkloadSpecOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpec) ContainerizedWorkloadSpec { return *v }).(ContainerizedWorkloadSpecOutput)
}

// CPUArchitecture required by this workload.
func (o ContainerizedWorkloadSpecPtrOutput) Arch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpec) *string {
		if v == nil {
			return nil
		}
		return v.Arch
	}).(pulumi.StringPtrOutput)
}

// Containers of which this workload consists.
func (o ContainerizedWorkloadSpecPtrOutput) Containers() ContainerizedWorkloadSpecContainersArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpec) []ContainerizedWorkloadSpecContainers {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ContainerizedWorkloadSpecContainersArrayOutput)
}

// OperatingSystem required by this workload.
func (o ContainerizedWorkloadSpecPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpec) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// A Container represents an Open Containers Initiative (OCI) container.
type ContainerizedWorkloadSpecContainers struct {
	// Arguments to be passed to the command run by this container.
	Args []string `pulumi:"args"`
	// Command to be run by this container.
	Command []string `pulumi:"command"`
	// ConfigFiles that should be written within this container.
	Config []ContainerizedWorkloadSpecContainersConfig `pulumi:"config"`
	// Environment variables that should be set within this container.
	Env []ContainerizedWorkloadSpecContainersEnv `pulumi:"env"`
	// Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.
	Image string `pulumi:"image"`
	// ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.
	ImagePullSecret *string `pulumi:"imagePullSecret"`
	// A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
	LivenessProbe *ContainerizedWorkloadSpecContainersLivenessProbe `pulumi:"livenessProbe"`
	// Name of this container. Must be unique within its workload.
	Name string `pulumi:"name"`
	// Ports exposed by this container.
	Ports []ContainerizedWorkloadSpecContainersPorts `pulumi:"ports"`
	// A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
	ReadinessProbe *ContainerizedWorkloadSpecContainersReadinessProbe `pulumi:"readinessProbe"`
	// Resources required by this container
	Resources *ContainerizedWorkloadSpecContainersResources `pulumi:"resources"`
}

// ContainerizedWorkloadSpecContainersInput is an input type that accepts ContainerizedWorkloadSpecContainersArgs and ContainerizedWorkloadSpecContainersOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersInput` via:
//
//          ContainerizedWorkloadSpecContainersArgs{...}
type ContainerizedWorkloadSpecContainersInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersOutput() ContainerizedWorkloadSpecContainersOutput
	ToContainerizedWorkloadSpecContainersOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersOutput
}

// A Container represents an Open Containers Initiative (OCI) container.
type ContainerizedWorkloadSpecContainersArgs struct {
	// Arguments to be passed to the command run by this container.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Command to be run by this container.
	Command pulumi.StringArrayInput `pulumi:"command"`
	// ConfigFiles that should be written within this container.
	Config ContainerizedWorkloadSpecContainersConfigArrayInput `pulumi:"config"`
	// Environment variables that should be set within this container.
	Env ContainerizedWorkloadSpecContainersEnvArrayInput `pulumi:"env"`
	// Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.
	Image pulumi.StringInput `pulumi:"image"`
	// ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.
	ImagePullSecret pulumi.StringPtrInput `pulumi:"imagePullSecret"`
	// A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
	LivenessProbe ContainerizedWorkloadSpecContainersLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Name of this container. Must be unique within its workload.
	Name pulumi.StringInput `pulumi:"name"`
	// Ports exposed by this container.
	Ports ContainerizedWorkloadSpecContainersPortsArrayInput `pulumi:"ports"`
	// A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
	ReadinessProbe ContainerizedWorkloadSpecContainersReadinessProbePtrInput `pulumi:"readinessProbe"`
	// Resources required by this container
	Resources ContainerizedWorkloadSpecContainersResourcesPtrInput `pulumi:"resources"`
}

func (ContainerizedWorkloadSpecContainersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainers)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersArgs) ToContainerizedWorkloadSpecContainersOutput() ContainerizedWorkloadSpecContainersOutput {
	return i.ToContainerizedWorkloadSpecContainersOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersArgs) ToContainerizedWorkloadSpecContainersOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersOutput)
}

// ContainerizedWorkloadSpecContainersArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersArray and ContainerizedWorkloadSpecContainersArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersArray{ ContainerizedWorkloadSpecContainersArgs{...} }
type ContainerizedWorkloadSpecContainersArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersArrayOutput() ContainerizedWorkloadSpecContainersArrayOutput
	ToContainerizedWorkloadSpecContainersArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersArrayOutput
}

type ContainerizedWorkloadSpecContainersArray []ContainerizedWorkloadSpecContainersInput

func (ContainerizedWorkloadSpecContainersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainers)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersArray) ToContainerizedWorkloadSpecContainersArrayOutput() ContainerizedWorkloadSpecContainersArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersArray) ToContainerizedWorkloadSpecContainersArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersArrayOutput)
}

// A Container represents an Open Containers Initiative (OCI) container.
type ContainerizedWorkloadSpecContainersOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainers)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersOutput) ToContainerizedWorkloadSpecContainersOutput() ContainerizedWorkloadSpecContainersOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersOutput) ToContainerizedWorkloadSpecContainersOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersOutput {
	return o
}

// Arguments to be passed to the command run by this container.
func (o ContainerizedWorkloadSpecContainersOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Command to be run by this container.
func (o ContainerizedWorkloadSpecContainersOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// ConfigFiles that should be written within this container.
func (o ContainerizedWorkloadSpecContainersOutput) Config() ContainerizedWorkloadSpecContainersConfigArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) []ContainerizedWorkloadSpecContainersConfig {
		return v.Config
	}).(ContainerizedWorkloadSpecContainersConfigArrayOutput)
}

// Environment variables that should be set within this container.
func (o ContainerizedWorkloadSpecContainersOutput) Env() ContainerizedWorkloadSpecContainersEnvArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) []ContainerizedWorkloadSpecContainersEnv { return v.Env }).(ContainerizedWorkloadSpecContainersEnvArrayOutput)
}

// Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.
func (o ContainerizedWorkloadSpecContainersOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) string { return v.Image }).(pulumi.StringOutput)
}

// ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.
func (o ContainerizedWorkloadSpecContainersOutput) ImagePullSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) *string { return v.ImagePullSecret }).(pulumi.StringPtrOutput)
}

// A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
func (o ContainerizedWorkloadSpecContainersOutput) LivenessProbe() ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) *ContainerizedWorkloadSpecContainersLivenessProbe {
		return v.LivenessProbe
	}).(ContainerizedWorkloadSpecContainersLivenessProbePtrOutput)
}

// Name of this container. Must be unique within its workload.
func (o ContainerizedWorkloadSpecContainersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) string { return v.Name }).(pulumi.StringOutput)
}

// Ports exposed by this container.
func (o ContainerizedWorkloadSpecContainersOutput) Ports() ContainerizedWorkloadSpecContainersPortsArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) []ContainerizedWorkloadSpecContainersPorts { return v.Ports }).(ContainerizedWorkloadSpecContainersPortsArrayOutput)
}

// A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
func (o ContainerizedWorkloadSpecContainersOutput) ReadinessProbe() ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) *ContainerizedWorkloadSpecContainersReadinessProbe {
		return v.ReadinessProbe
	}).(ContainerizedWorkloadSpecContainersReadinessProbePtrOutput)
}

// Resources required by this container
func (o ContainerizedWorkloadSpecContainersOutput) Resources() ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainers) *ContainerizedWorkloadSpecContainersResources {
		return v.Resources
	}).(ContainerizedWorkloadSpecContainersResourcesPtrOutput)
}

type ContainerizedWorkloadSpecContainersArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainers)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersArrayOutput) ToContainerizedWorkloadSpecContainersArrayOutput() ContainerizedWorkloadSpecContainersArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersArrayOutput) ToContainerizedWorkloadSpecContainersArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainers {
		return vs[0].([]ContainerizedWorkloadSpecContainers)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersOutput)
}

// A ContainerConfigFile specifies a configuration file that should be written within a container.
type ContainerizedWorkloadSpecContainersConfig struct {
	// FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
	FromSecret *ContainerizedWorkloadSpecContainersConfigFromSecret `pulumi:"fromSecret"`
	// Path within the container at which the configuration file should be written.
	Path string `pulumi:"path"`
	// Value that should be written to the configuration file.
	Value *string `pulumi:"value"`
}

// ContainerizedWorkloadSpecContainersConfigInput is an input type that accepts ContainerizedWorkloadSpecContainersConfigArgs and ContainerizedWorkloadSpecContainersConfigOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersConfigInput` via:
//
//          ContainerizedWorkloadSpecContainersConfigArgs{...}
type ContainerizedWorkloadSpecContainersConfigInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersConfigOutput() ContainerizedWorkloadSpecContainersConfigOutput
	ToContainerizedWorkloadSpecContainersConfigOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersConfigOutput
}

// A ContainerConfigFile specifies a configuration file that should be written within a container.
type ContainerizedWorkloadSpecContainersConfigArgs struct {
	// FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
	FromSecret ContainerizedWorkloadSpecContainersConfigFromSecretPtrInput `pulumi:"fromSecret"`
	// Path within the container at which the configuration file should be written.
	Path pulumi.StringInput `pulumi:"path"`
	// Value that should be written to the configuration file.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ContainerizedWorkloadSpecContainersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersConfig)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersConfigArgs) ToContainerizedWorkloadSpecContainersConfigOutput() ContainerizedWorkloadSpecContainersConfigOutput {
	return i.ToContainerizedWorkloadSpecContainersConfigOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersConfigArgs) ToContainerizedWorkloadSpecContainersConfigOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersConfigOutput)
}

// ContainerizedWorkloadSpecContainersConfigArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersConfigArray and ContainerizedWorkloadSpecContainersConfigArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersConfigArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersConfigArray{ ContainerizedWorkloadSpecContainersConfigArgs{...} }
type ContainerizedWorkloadSpecContainersConfigArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersConfigArrayOutput() ContainerizedWorkloadSpecContainersConfigArrayOutput
	ToContainerizedWorkloadSpecContainersConfigArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersConfigArrayOutput
}

type ContainerizedWorkloadSpecContainersConfigArray []ContainerizedWorkloadSpecContainersConfigInput

func (ContainerizedWorkloadSpecContainersConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersConfig)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersConfigArray) ToContainerizedWorkloadSpecContainersConfigArrayOutput() ContainerizedWorkloadSpecContainersConfigArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersConfigArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersConfigArray) ToContainerizedWorkloadSpecContainersConfigArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersConfigArrayOutput)
}

// A ContainerConfigFile specifies a configuration file that should be written within a container.
type ContainerizedWorkloadSpecContainersConfigOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersConfig)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersConfigOutput) ToContainerizedWorkloadSpecContainersConfigOutput() ContainerizedWorkloadSpecContainersConfigOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigOutput) ToContainerizedWorkloadSpecContainersConfigOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigOutput {
	return o
}

// FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
func (o ContainerizedWorkloadSpecContainersConfigOutput) FromSecret() ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersConfig) *ContainerizedWorkloadSpecContainersConfigFromSecret {
		return v.FromSecret
	}).(ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput)
}

// Path within the container at which the configuration file should be written.
func (o ContainerizedWorkloadSpecContainersConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersConfig) string { return v.Path }).(pulumi.StringOutput)
}

// Value that should be written to the configuration file.
func (o ContainerizedWorkloadSpecContainersConfigOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersConfig) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ContainerizedWorkloadSpecContainersConfigArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersConfig)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersConfigArrayOutput) ToContainerizedWorkloadSpecContainersConfigArrayOutput() ContainerizedWorkloadSpecContainersConfigArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigArrayOutput) ToContainerizedWorkloadSpecContainersConfigArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersConfig {
		return vs[0].([]ContainerizedWorkloadSpecContainersConfig)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersConfigOutput)
}

// FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
type ContainerizedWorkloadSpecContainersConfigFromSecret struct {
	// The key to select.
	Key string `pulumi:"key"`
	// The name of the secret.
	Name string `pulumi:"name"`
}

// ContainerizedWorkloadSpecContainersConfigFromSecretInput is an input type that accepts ContainerizedWorkloadSpecContainersConfigFromSecretArgs and ContainerizedWorkloadSpecContainersConfigFromSecretOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersConfigFromSecretInput` via:
//
//          ContainerizedWorkloadSpecContainersConfigFromSecretArgs{...}
type ContainerizedWorkloadSpecContainersConfigFromSecretInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersConfigFromSecretOutput() ContainerizedWorkloadSpecContainersConfigFromSecretOutput
	ToContainerizedWorkloadSpecContainersConfigFromSecretOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretOutput
}

// FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
type ContainerizedWorkloadSpecContainersConfigFromSecretArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// The name of the secret.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ContainerizedWorkloadSpecContainersConfigFromSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersConfigFromSecret)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersConfigFromSecretArgs) ToContainerizedWorkloadSpecContainersConfigFromSecretOutput() ContainerizedWorkloadSpecContainersConfigFromSecretOutput {
	return i.ToContainerizedWorkloadSpecContainersConfigFromSecretOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersConfigFromSecretArgs) ToContainerizedWorkloadSpecContainersConfigFromSecretOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersConfigFromSecretOutput)
}

func (i ContainerizedWorkloadSpecContainersConfigFromSecretArgs) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput() ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersConfigFromSecretArgs) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersConfigFromSecretOutput).ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersConfigFromSecretPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersConfigFromSecretArgs, ContainerizedWorkloadSpecContainersConfigFromSecretPtr and ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersConfigFromSecretPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersConfigFromSecretArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersConfigFromSecretPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput() ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput
	ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput
}

type containerizedWorkloadSpecContainersConfigFromSecretPtrType ContainerizedWorkloadSpecContainersConfigFromSecretArgs

func ContainerizedWorkloadSpecContainersConfigFromSecretPtr(v *ContainerizedWorkloadSpecContainersConfigFromSecretArgs) ContainerizedWorkloadSpecContainersConfigFromSecretPtrInput {
	return (*containerizedWorkloadSpecContainersConfigFromSecretPtrType)(v)
}

func (*containerizedWorkloadSpecContainersConfigFromSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersConfigFromSecret)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersConfigFromSecretPtrType) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput() ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersConfigFromSecretPtrType) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput)
}

// FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
type ContainerizedWorkloadSpecContainersConfigFromSecretOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersConfigFromSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersConfigFromSecret)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretOutput) ToContainerizedWorkloadSpecContainersConfigFromSecretOutput() ContainerizedWorkloadSpecContainersConfigFromSecretOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretOutput) ToContainerizedWorkloadSpecContainersConfigFromSecretOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretOutput) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput() ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretOutput) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersConfigFromSecret) *ContainerizedWorkloadSpecContainersConfigFromSecret {
		return &v
	}).(ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput)
}

// The key to select.
func (o ContainerizedWorkloadSpecContainersConfigFromSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersConfigFromSecret) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the secret.
func (o ContainerizedWorkloadSpecContainersConfigFromSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersConfigFromSecret) string { return v.Name }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersConfigFromSecret)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput() ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput) ToContainerizedWorkloadSpecContainersConfigFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput) Elem() ContainerizedWorkloadSpecContainersConfigFromSecretOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersConfigFromSecret) ContainerizedWorkloadSpecContainersConfigFromSecret {
		return *v
	}).(ContainerizedWorkloadSpecContainersConfigFromSecretOutput)
}

// The key to select.
func (o ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersConfigFromSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the secret.
func (o ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersConfigFromSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A ContainerEnvVar specifies an environment variable that should be set within a container.
type ContainerizedWorkloadSpecContainersEnv struct {
	// FromSecret is a secret key reference which can be used to assign a value to the environment variable.
	FromSecret *ContainerizedWorkloadSpecContainersEnvFromSecret `pulumi:"fromSecret"`
	// Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.
	Name string `pulumi:"name"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// ContainerizedWorkloadSpecContainersEnvInput is an input type that accepts ContainerizedWorkloadSpecContainersEnvArgs and ContainerizedWorkloadSpecContainersEnvOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersEnvInput` via:
//
//          ContainerizedWorkloadSpecContainersEnvArgs{...}
type ContainerizedWorkloadSpecContainersEnvInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersEnvOutput() ContainerizedWorkloadSpecContainersEnvOutput
	ToContainerizedWorkloadSpecContainersEnvOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersEnvOutput
}

// A ContainerEnvVar specifies an environment variable that should be set within a container.
type ContainerizedWorkloadSpecContainersEnvArgs struct {
	// FromSecret is a secret key reference which can be used to assign a value to the environment variable.
	FromSecret ContainerizedWorkloadSpecContainersEnvFromSecretPtrInput `pulumi:"fromSecret"`
	// Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ContainerizedWorkloadSpecContainersEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersEnv)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersEnvArgs) ToContainerizedWorkloadSpecContainersEnvOutput() ContainerizedWorkloadSpecContainersEnvOutput {
	return i.ToContainerizedWorkloadSpecContainersEnvOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersEnvArgs) ToContainerizedWorkloadSpecContainersEnvOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersEnvOutput)
}

// ContainerizedWorkloadSpecContainersEnvArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersEnvArray and ContainerizedWorkloadSpecContainersEnvArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersEnvArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersEnvArray{ ContainerizedWorkloadSpecContainersEnvArgs{...} }
type ContainerizedWorkloadSpecContainersEnvArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersEnvArrayOutput() ContainerizedWorkloadSpecContainersEnvArrayOutput
	ToContainerizedWorkloadSpecContainersEnvArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersEnvArrayOutput
}

type ContainerizedWorkloadSpecContainersEnvArray []ContainerizedWorkloadSpecContainersEnvInput

func (ContainerizedWorkloadSpecContainersEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersEnv)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersEnvArray) ToContainerizedWorkloadSpecContainersEnvArrayOutput() ContainerizedWorkloadSpecContainersEnvArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersEnvArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersEnvArray) ToContainerizedWorkloadSpecContainersEnvArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersEnvArrayOutput)
}

// A ContainerEnvVar specifies an environment variable that should be set within a container.
type ContainerizedWorkloadSpecContainersEnvOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersEnv)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersEnvOutput) ToContainerizedWorkloadSpecContainersEnvOutput() ContainerizedWorkloadSpecContainersEnvOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvOutput) ToContainerizedWorkloadSpecContainersEnvOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvOutput {
	return o
}

// FromSecret is a secret key reference which can be used to assign a value to the environment variable.
func (o ContainerizedWorkloadSpecContainersEnvOutput) FromSecret() ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersEnv) *ContainerizedWorkloadSpecContainersEnvFromSecret {
		return v.FromSecret
	}).(ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput)
}

// Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.
func (o ContainerizedWorkloadSpecContainersEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersEnv) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o ContainerizedWorkloadSpecContainersEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ContainerizedWorkloadSpecContainersEnvArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersEnv)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersEnvArrayOutput) ToContainerizedWorkloadSpecContainersEnvArrayOutput() ContainerizedWorkloadSpecContainersEnvArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvArrayOutput) ToContainerizedWorkloadSpecContainersEnvArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersEnv {
		return vs[0].([]ContainerizedWorkloadSpecContainersEnv)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersEnvOutput)
}

// FromSecret is a secret key reference which can be used to assign a value to the environment variable.
type ContainerizedWorkloadSpecContainersEnvFromSecret struct {
	// The key to select.
	Key string `pulumi:"key"`
	// The name of the secret.
	Name string `pulumi:"name"`
}

// ContainerizedWorkloadSpecContainersEnvFromSecretInput is an input type that accepts ContainerizedWorkloadSpecContainersEnvFromSecretArgs and ContainerizedWorkloadSpecContainersEnvFromSecretOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersEnvFromSecretInput` via:
//
//          ContainerizedWorkloadSpecContainersEnvFromSecretArgs{...}
type ContainerizedWorkloadSpecContainersEnvFromSecretInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersEnvFromSecretOutput() ContainerizedWorkloadSpecContainersEnvFromSecretOutput
	ToContainerizedWorkloadSpecContainersEnvFromSecretOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretOutput
}

// FromSecret is a secret key reference which can be used to assign a value to the environment variable.
type ContainerizedWorkloadSpecContainersEnvFromSecretArgs struct {
	// The key to select.
	Key pulumi.StringInput `pulumi:"key"`
	// The name of the secret.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ContainerizedWorkloadSpecContainersEnvFromSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersEnvFromSecret)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersEnvFromSecretArgs) ToContainerizedWorkloadSpecContainersEnvFromSecretOutput() ContainerizedWorkloadSpecContainersEnvFromSecretOutput {
	return i.ToContainerizedWorkloadSpecContainersEnvFromSecretOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersEnvFromSecretArgs) ToContainerizedWorkloadSpecContainersEnvFromSecretOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersEnvFromSecretOutput)
}

func (i ContainerizedWorkloadSpecContainersEnvFromSecretArgs) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput() ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersEnvFromSecretArgs) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersEnvFromSecretOutput).ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersEnvFromSecretPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersEnvFromSecretArgs, ContainerizedWorkloadSpecContainersEnvFromSecretPtr and ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersEnvFromSecretPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersEnvFromSecretArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersEnvFromSecretPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput() ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput
	ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput
}

type containerizedWorkloadSpecContainersEnvFromSecretPtrType ContainerizedWorkloadSpecContainersEnvFromSecretArgs

func ContainerizedWorkloadSpecContainersEnvFromSecretPtr(v *ContainerizedWorkloadSpecContainersEnvFromSecretArgs) ContainerizedWorkloadSpecContainersEnvFromSecretPtrInput {
	return (*containerizedWorkloadSpecContainersEnvFromSecretPtrType)(v)
}

func (*containerizedWorkloadSpecContainersEnvFromSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersEnvFromSecret)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersEnvFromSecretPtrType) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput() ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersEnvFromSecretPtrType) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput)
}

// FromSecret is a secret key reference which can be used to assign a value to the environment variable.
type ContainerizedWorkloadSpecContainersEnvFromSecretOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersEnvFromSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersEnvFromSecret)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretOutput) ToContainerizedWorkloadSpecContainersEnvFromSecretOutput() ContainerizedWorkloadSpecContainersEnvFromSecretOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretOutput) ToContainerizedWorkloadSpecContainersEnvFromSecretOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretOutput) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput() ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretOutput) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersEnvFromSecret) *ContainerizedWorkloadSpecContainersEnvFromSecret {
		return &v
	}).(ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput)
}

// The key to select.
func (o ContainerizedWorkloadSpecContainersEnvFromSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersEnvFromSecret) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the secret.
func (o ContainerizedWorkloadSpecContainersEnvFromSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersEnvFromSecret) string { return v.Name }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersEnvFromSecret)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput() ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput) ToContainerizedWorkloadSpecContainersEnvFromSecretPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput) Elem() ContainerizedWorkloadSpecContainersEnvFromSecretOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersEnvFromSecret) ContainerizedWorkloadSpecContainersEnvFromSecret {
		return *v
	}).(ContainerizedWorkloadSpecContainersEnvFromSecretOutput)
}

// The key to select.
func (o ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersEnvFromSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the secret.
func (o ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersEnvFromSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
type ContainerizedWorkloadSpecContainersLivenessProbe struct {
	// Exec probes a container's health by executing a command.
	Exec *ContainerizedWorkloadSpecContainersLivenessProbeExec `pulumi:"exec"`
	// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet probes a container's health by sending an HTTP GET request.
	HttpGet *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet `pulumi:"httpGet"`
	// InitialDelaySeconds after a container starts before the first probe.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// PeriodSeconds between probes.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocketProbe probes a container's health by connecting to a TCP socket.
	TcpSocket *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket `pulumi:"tcpSocket"`
	// TimeoutSeconds after which the probe times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ContainerizedWorkloadSpecContainersLivenessProbeInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeArgs and ContainerizedWorkloadSpecContainersLivenessProbeOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeArgs{...}
type ContainerizedWorkloadSpecContainersLivenessProbeInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeOutput() ContainerizedWorkloadSpecContainersLivenessProbeOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeOutput
}

// A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
type ContainerizedWorkloadSpecContainersLivenessProbeArgs struct {
	// Exec probes a container's health by executing a command.
	Exec ContainerizedWorkloadSpecContainersLivenessProbeExecPtrInput `pulumi:"exec"`
	// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet probes a container's health by sending an HTTP GET request.
	HttpGet ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// InitialDelaySeconds after a container starts before the first probe.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// PeriodSeconds between probes.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocketProbe probes a container's health by connecting to a TCP socket.
	TcpSocket ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// TimeoutSeconds after which the probe times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ContainerizedWorkloadSpecContainersLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbe)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeArgs) ToContainerizedWorkloadSpecContainersLivenessProbeOutput() ContainerizedWorkloadSpecContainersLivenessProbeOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeArgs) ToContainerizedWorkloadSpecContainersLivenessProbeOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeOutput)
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeArgs) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutput() ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeArgs) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeOutput).ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersLivenessProbePtrInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeArgs, ContainerizedWorkloadSpecContainersLivenessProbePtr and ContainerizedWorkloadSpecContainersLivenessProbePtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbePtrInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersLivenessProbePtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbePtrOutput() ContainerizedWorkloadSpecContainersLivenessProbePtrOutput
	ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbePtrOutput
}

type containerizedWorkloadSpecContainersLivenessProbePtrType ContainerizedWorkloadSpecContainersLivenessProbeArgs

func ContainerizedWorkloadSpecContainersLivenessProbePtr(v *ContainerizedWorkloadSpecContainersLivenessProbeArgs) ContainerizedWorkloadSpecContainersLivenessProbePtrInput {
	return (*containerizedWorkloadSpecContainersLivenessProbePtrType)(v)
}

func (*containerizedWorkloadSpecContainersLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbe)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersLivenessProbePtrType) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutput() ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersLivenessProbePtrType) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbePtrOutput)
}

// A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
type ContainerizedWorkloadSpecContainersLivenessProbeOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbe)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) ToContainerizedWorkloadSpecContainersLivenessProbeOutput() ContainerizedWorkloadSpecContainersLivenessProbeOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) ToContainerizedWorkloadSpecContainersLivenessProbeOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutput() ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return o.ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbe {
		return &v
	}).(ContainerizedWorkloadSpecContainersLivenessProbePtrOutput)
}

// Exec probes a container's health by executing a command.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) Exec() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbeExec {
		return v.Exec
	}).(ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput)
}

// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) HttpGet() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet {
		return v.HttpGet
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput)
}

// InitialDelaySeconds after a container starts before the first probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// PeriodSeconds between probes.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) TcpSocket() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket {
		return v.TcpSocket
	}).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput)
}

// TimeoutSeconds after which the probe times out.
func (o ContainerizedWorkloadSpecContainersLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ContainerizedWorkloadSpecContainersLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbe)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutput() ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbePtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) Elem() ContainerizedWorkloadSpecContainersLivenessProbeOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) ContainerizedWorkloadSpecContainersLivenessProbe {
		return *v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeOutput)
}

// Exec probes a container's health by executing a command.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) Exec() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput)
}

// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) HttpGet() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput)
}

// InitialDelaySeconds after a container starts before the first probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// PeriodSeconds between probes.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) TcpSocket() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput)
}

// TimeoutSeconds after which the probe times out.
func (o ContainerizedWorkloadSpecContainersLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Exec probes a container's health by executing a command.
type ContainerizedWorkloadSpecContainersLivenessProbeExec struct {
	// Command to be run by this probe.
	Command []string `pulumi:"command"`
}

// ContainerizedWorkloadSpecContainersLivenessProbeExecInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeExecArgs and ContainerizedWorkloadSpecContainersLivenessProbeExecOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeExecInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeExecArgs{...}
type ContainerizedWorkloadSpecContainersLivenessProbeExecInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeExecOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeExecOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecOutput
}

// Exec probes a container's health by executing a command.
type ContainerizedWorkloadSpecContainersLivenessProbeExecArgs struct {
	// Command to be run by this probe.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ContainerizedWorkloadSpecContainersLivenessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeExec)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeExecArgs) ToContainerizedWorkloadSpecContainersLivenessProbeExecOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeExecOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeExecArgs) ToContainerizedWorkloadSpecContainersLivenessProbeExecOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeExecOutput)
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeExecArgs) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeExecArgs) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeExecOutput).ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersLivenessProbeExecPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeExecArgs, ContainerizedWorkloadSpecContainersLivenessProbeExecPtr and ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeExecPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeExecArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersLivenessProbeExecPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput
}

type containerizedWorkloadSpecContainersLivenessProbeExecPtrType ContainerizedWorkloadSpecContainersLivenessProbeExecArgs

func ContainerizedWorkloadSpecContainersLivenessProbeExecPtr(v *ContainerizedWorkloadSpecContainersLivenessProbeExecArgs) ContainerizedWorkloadSpecContainersLivenessProbeExecPtrInput {
	return (*containerizedWorkloadSpecContainersLivenessProbeExecPtrType)(v)
}

func (*containerizedWorkloadSpecContainersLivenessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbeExec)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersLivenessProbeExecPtrType) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersLivenessProbeExecPtrType) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput)
}

// Exec probes a container's health by executing a command.
type ContainerizedWorkloadSpecContainersLivenessProbeExecOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeExec)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecOutput) ToContainerizedWorkloadSpecContainersLivenessProbeExecOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecOutput) ToContainerizedWorkloadSpecContainersLivenessProbeExecOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecOutput) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecOutput) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeExec) *ContainerizedWorkloadSpecContainersLivenessProbeExec {
		return &v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput)
}

// Command to be run by this probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbeExec)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput) Elem() ContainerizedWorkloadSpecContainersLivenessProbeExecOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeExec) ContainerizedWorkloadSpecContainersLivenessProbeExec {
		return *v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeExecOutput)
}

// Command to be run by this probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGet struct {
	// HTTPHeaders to send with the GET request.
	HttpHeaders []ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to probe, e.g. '/healthz'.
	Path string `pulumi:"path"`
	// Port to probe.
	Port int `pulumi:"port"`
}

// ContainerizedWorkloadSpecContainersLivenessProbeHttpGetInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs and ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeHttpGetInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs{...}
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput
}

// HTTPGet probes a container's health by sending an HTTP GET request.
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs struct {
	// HTTPHeaders to send with the GET request.
	HttpHeaders ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to probe, e.g. '/healthz'.
	Path pulumi.StringInput `pulumi:"path"`
	// Port to probe.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput)
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput).ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs, ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtr and ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput
}

type containerizedWorkloadSpecContainersLivenessProbeHttpGetPtrType ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs

func ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtr(v *ContainerizedWorkloadSpecContainersLivenessProbeHttpGetArgs) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrInput {
	return (*containerizedWorkloadSpecContainersLivenessProbeHttpGetPtrType)(v)
}

func (*containerizedWorkloadSpecContainersLivenessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersLivenessProbeHttpGetPtrType) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersLivenessProbeHttpGetPtrType) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet {
		return &v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput)
}

// HTTPHeaders to send with the GET request.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) HttpHeaders() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) []ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to probe, e.g. '/healthz'.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) string { return v.Path }).(pulumi.StringOutput)
}

// Port to probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) int { return v.Port }).(pulumi.IntOutput)
}

type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) Elem() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) ContainerizedWorkloadSpecContainersLivenessProbeHttpGet {
		return *v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput)
}

// HTTPHeaders to send with the GET request.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) HttpHeaders() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) []ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to probe, e.g. '/healthz'.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Port to probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// A HTTPHeader to be passed when probing a container.
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders struct {
	// Name of this HTTP header. Must be unique per probe.
	Name string `pulumi:"name"`
	// Value of this HTTP header.
	Value string `pulumi:"value"`
}

// ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs and ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs{...}
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput
}

// A HTTPHeader to be passed when probing a container.
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs struct {
	// Name of this HTTP header. Must be unique per probe.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of this HTTP header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput)
}

// ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArray and ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArray{ ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArgs{...} }
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput
}

type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArray []ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersInput

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArray) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArray) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// A HTTPHeader to be passed when probing a container.
type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

// Name of this HTTP header. Must be unique per probe.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// Value of this HTTP header.
func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput() ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput) ToContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders {
		return vs[0].([]ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
type ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket struct {
	// Port this probe should connect to.
	Port int `pulumi:"port"`
}

// ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs and ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs{...}
type ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
type ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs struct {
	// Port this probe should connect to.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput)
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput).ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs, ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtr and ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput
	ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput
}

type containerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrType ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs

func ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtr(v *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketArgs) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrInput {
	return (*containerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrType)(v)
}

func (*containerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrType) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrType) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
type ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket) *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket {
		return &v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput)
}

// Port this probe should connect to.
func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket) int { return v.Port }).(pulumi.IntOutput)
}

type ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput) ToContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput) Elem() ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket) ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket {
		return *v
	}).(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput)
}

// Port this probe should connect to.
func (o ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersLivenessProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// A ContainerPort specifies a port that is exposed by a container.
type ContainerizedWorkloadSpecContainersPorts struct {
	// Port number. Must be unique within its container.
	ContainerPort int `pulumi:"containerPort"`
	// Name of this port. Must be unique within its container. Must be lowercase alphabetical characters.
	Name string `pulumi:"name"`
	// Protocol used by the server listening on this port.
	Protocol *string `pulumi:"protocol"`
}

// ContainerizedWorkloadSpecContainersPortsInput is an input type that accepts ContainerizedWorkloadSpecContainersPortsArgs and ContainerizedWorkloadSpecContainersPortsOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersPortsInput` via:
//
//          ContainerizedWorkloadSpecContainersPortsArgs{...}
type ContainerizedWorkloadSpecContainersPortsInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersPortsOutput() ContainerizedWorkloadSpecContainersPortsOutput
	ToContainerizedWorkloadSpecContainersPortsOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersPortsOutput
}

// A ContainerPort specifies a port that is exposed by a container.
type ContainerizedWorkloadSpecContainersPortsArgs struct {
	// Port number. Must be unique within its container.
	ContainerPort pulumi.IntInput `pulumi:"containerPort"`
	// Name of this port. Must be unique within its container. Must be lowercase alphabetical characters.
	Name pulumi.StringInput `pulumi:"name"`
	// Protocol used by the server listening on this port.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ContainerizedWorkloadSpecContainersPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersPorts)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersPortsArgs) ToContainerizedWorkloadSpecContainersPortsOutput() ContainerizedWorkloadSpecContainersPortsOutput {
	return i.ToContainerizedWorkloadSpecContainersPortsOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersPortsArgs) ToContainerizedWorkloadSpecContainersPortsOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersPortsOutput)
}

// ContainerizedWorkloadSpecContainersPortsArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersPortsArray and ContainerizedWorkloadSpecContainersPortsArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersPortsArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersPortsArray{ ContainerizedWorkloadSpecContainersPortsArgs{...} }
type ContainerizedWorkloadSpecContainersPortsArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersPortsArrayOutput() ContainerizedWorkloadSpecContainersPortsArrayOutput
	ToContainerizedWorkloadSpecContainersPortsArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersPortsArrayOutput
}

type ContainerizedWorkloadSpecContainersPortsArray []ContainerizedWorkloadSpecContainersPortsInput

func (ContainerizedWorkloadSpecContainersPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersPorts)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersPortsArray) ToContainerizedWorkloadSpecContainersPortsArrayOutput() ContainerizedWorkloadSpecContainersPortsArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersPortsArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersPortsArray) ToContainerizedWorkloadSpecContainersPortsArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersPortsArrayOutput)
}

// A ContainerPort specifies a port that is exposed by a container.
type ContainerizedWorkloadSpecContainersPortsOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersPorts)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersPortsOutput) ToContainerizedWorkloadSpecContainersPortsOutput() ContainerizedWorkloadSpecContainersPortsOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersPortsOutput) ToContainerizedWorkloadSpecContainersPortsOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersPortsOutput {
	return o
}

// Port number. Must be unique within its container.
func (o ContainerizedWorkloadSpecContainersPortsOutput) ContainerPort() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersPorts) int { return v.ContainerPort }).(pulumi.IntOutput)
}

// Name of this port. Must be unique within its container. Must be lowercase alphabetical characters.
func (o ContainerizedWorkloadSpecContainersPortsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersPorts) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol used by the server listening on this port.
func (o ContainerizedWorkloadSpecContainersPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ContainerizedWorkloadSpecContainersPortsArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersPorts)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersPortsArrayOutput) ToContainerizedWorkloadSpecContainersPortsArrayOutput() ContainerizedWorkloadSpecContainersPortsArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersPortsArrayOutput) ToContainerizedWorkloadSpecContainersPortsArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersPortsArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersPortsArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersPorts {
		return vs[0].([]ContainerizedWorkloadSpecContainersPorts)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersPortsOutput)
}

// A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
type ContainerizedWorkloadSpecContainersReadinessProbe struct {
	// Exec probes a container's health by executing a command.
	Exec *ContainerizedWorkloadSpecContainersReadinessProbeExec `pulumi:"exec"`
	// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// HTTPGet probes a container's health by sending an HTTP GET request.
	HttpGet *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet `pulumi:"httpGet"`
	// InitialDelaySeconds after a container starts before the first probe.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// PeriodSeconds between probes.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocketProbe probes a container's health by connecting to a TCP socket.
	TcpSocket *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket `pulumi:"tcpSocket"`
	// TimeoutSeconds after which the probe times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// ContainerizedWorkloadSpecContainersReadinessProbeInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeArgs and ContainerizedWorkloadSpecContainersReadinessProbeOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeArgs{...}
type ContainerizedWorkloadSpecContainersReadinessProbeInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeOutput() ContainerizedWorkloadSpecContainersReadinessProbeOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeOutput
}

// A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
type ContainerizedWorkloadSpecContainersReadinessProbeArgs struct {
	// Exec probes a container's health by executing a command.
	Exec ContainerizedWorkloadSpecContainersReadinessProbeExecPtrInput `pulumi:"exec"`
	// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// HTTPGet probes a container's health by sending an HTTP GET request.
	HttpGet ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// InitialDelaySeconds after a container starts before the first probe.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// PeriodSeconds between probes.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocketProbe probes a container's health by connecting to a TCP socket.
	TcpSocket ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// TimeoutSeconds after which the probe times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (ContainerizedWorkloadSpecContainersReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbe)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeArgs) ToContainerizedWorkloadSpecContainersReadinessProbeOutput() ContainerizedWorkloadSpecContainersReadinessProbeOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeArgs) ToContainerizedWorkloadSpecContainersReadinessProbeOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeOutput)
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeArgs) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutput() ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeArgs) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeOutput).ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersReadinessProbePtrInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeArgs, ContainerizedWorkloadSpecContainersReadinessProbePtr and ContainerizedWorkloadSpecContainersReadinessProbePtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbePtrInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersReadinessProbePtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbePtrOutput() ContainerizedWorkloadSpecContainersReadinessProbePtrOutput
	ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbePtrOutput
}

type containerizedWorkloadSpecContainersReadinessProbePtrType ContainerizedWorkloadSpecContainersReadinessProbeArgs

func ContainerizedWorkloadSpecContainersReadinessProbePtr(v *ContainerizedWorkloadSpecContainersReadinessProbeArgs) ContainerizedWorkloadSpecContainersReadinessProbePtrInput {
	return (*containerizedWorkloadSpecContainersReadinessProbePtrType)(v)
}

func (*containerizedWorkloadSpecContainersReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbe)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersReadinessProbePtrType) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutput() ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersReadinessProbePtrType) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbePtrOutput)
}

// A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
type ContainerizedWorkloadSpecContainersReadinessProbeOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbe)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) ToContainerizedWorkloadSpecContainersReadinessProbeOutput() ContainerizedWorkloadSpecContainersReadinessProbeOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) ToContainerizedWorkloadSpecContainersReadinessProbeOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutput() ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return o.ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbe {
		return &v
	}).(ContainerizedWorkloadSpecContainersReadinessProbePtrOutput)
}

// Exec probes a container's health by executing a command.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) Exec() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbeExec {
		return v.Exec
	}).(ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput)
}

// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) HttpGet() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet {
		return v.HttpGet
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput)
}

// InitialDelaySeconds after a container starts before the first probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// PeriodSeconds between probes.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) TcpSocket() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket {
		return v.TcpSocket
	}).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput)
}

// TimeoutSeconds after which the probe times out.
func (o ContainerizedWorkloadSpecContainersReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type ContainerizedWorkloadSpecContainersReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbe)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutput() ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbePtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbePtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) Elem() ContainerizedWorkloadSpecContainersReadinessProbeOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) ContainerizedWorkloadSpecContainersReadinessProbe {
		return *v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeOutput)
}

// Exec probes a container's health by executing a command.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) Exec() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput)
}

// FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) HttpGet() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput)
}

// InitialDelaySeconds after a container starts before the first probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// PeriodSeconds between probes.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) TcpSocket() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput)
}

// TimeoutSeconds after which the probe times out.
func (o ContainerizedWorkloadSpecContainersReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Exec probes a container's health by executing a command.
type ContainerizedWorkloadSpecContainersReadinessProbeExec struct {
	// Command to be run by this probe.
	Command []string `pulumi:"command"`
}

// ContainerizedWorkloadSpecContainersReadinessProbeExecInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeExecArgs and ContainerizedWorkloadSpecContainersReadinessProbeExecOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeExecInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeExecArgs{...}
type ContainerizedWorkloadSpecContainersReadinessProbeExecInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeExecOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeExecOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecOutput
}

// Exec probes a container's health by executing a command.
type ContainerizedWorkloadSpecContainersReadinessProbeExecArgs struct {
	// Command to be run by this probe.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (ContainerizedWorkloadSpecContainersReadinessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeExec)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeExecArgs) ToContainerizedWorkloadSpecContainersReadinessProbeExecOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeExecOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeExecArgs) ToContainerizedWorkloadSpecContainersReadinessProbeExecOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeExecOutput)
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeExecArgs) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeExecArgs) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeExecOutput).ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersReadinessProbeExecPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeExecArgs, ContainerizedWorkloadSpecContainersReadinessProbeExecPtr and ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeExecPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeExecArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersReadinessProbeExecPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput
}

type containerizedWorkloadSpecContainersReadinessProbeExecPtrType ContainerizedWorkloadSpecContainersReadinessProbeExecArgs

func ContainerizedWorkloadSpecContainersReadinessProbeExecPtr(v *ContainerizedWorkloadSpecContainersReadinessProbeExecArgs) ContainerizedWorkloadSpecContainersReadinessProbeExecPtrInput {
	return (*containerizedWorkloadSpecContainersReadinessProbeExecPtrType)(v)
}

func (*containerizedWorkloadSpecContainersReadinessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbeExec)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersReadinessProbeExecPtrType) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersReadinessProbeExecPtrType) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput)
}

// Exec probes a container's health by executing a command.
type ContainerizedWorkloadSpecContainersReadinessProbeExecOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeExec)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecOutput) ToContainerizedWorkloadSpecContainersReadinessProbeExecOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecOutput) ToContainerizedWorkloadSpecContainersReadinessProbeExecOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecOutput) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecOutput) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeExec) *ContainerizedWorkloadSpecContainersReadinessProbeExec {
		return &v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput)
}

// Command to be run by this probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbeExec)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput) Elem() ContainerizedWorkloadSpecContainersReadinessProbeExecOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeExec) ContainerizedWorkloadSpecContainersReadinessProbeExec {
		return *v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeExecOutput)
}

// Command to be run by this probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGet struct {
	// HTTPHeaders to send with the GET request.
	HttpHeaders []ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to probe, e.g. '/healthz'.
	Path string `pulumi:"path"`
	// Port to probe.
	Port int `pulumi:"port"`
}

// ContainerizedWorkloadSpecContainersReadinessProbeHttpGetInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs and ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeHttpGetInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs{...}
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput
}

// HTTPGet probes a container's health by sending an HTTP GET request.
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs struct {
	// HTTPHeaders to send with the GET request.
	HttpHeaders ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to probe, e.g. '/healthz'.
	Path pulumi.StringInput `pulumi:"path"`
	// Port to probe.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput)
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput).ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs, ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtr and ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput
}

type containerizedWorkloadSpecContainersReadinessProbeHttpGetPtrType ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs

func ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtr(v *ContainerizedWorkloadSpecContainersReadinessProbeHttpGetArgs) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrInput {
	return (*containerizedWorkloadSpecContainersReadinessProbeHttpGetPtrType)(v)
}

func (*containerizedWorkloadSpecContainersReadinessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersReadinessProbeHttpGetPtrType) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersReadinessProbeHttpGetPtrType) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput)
}

// HTTPGet probes a container's health by sending an HTTP GET request.
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet {
		return &v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput)
}

// HTTPHeaders to send with the GET request.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) HttpHeaders() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) []ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to probe, e.g. '/healthz'.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) string { return v.Path }).(pulumi.StringOutput)
}

// Port to probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) int { return v.Port }).(pulumi.IntOutput)
}

type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) Elem() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) ContainerizedWorkloadSpecContainersReadinessProbeHttpGet {
		return *v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput)
}

// HTTPHeaders to send with the GET request.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) HttpHeaders() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) []ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to probe, e.g. '/healthz'.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Port to probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeHttpGet) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// A HTTPHeader to be passed when probing a container.
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders struct {
	// Name of this HTTP header. Must be unique per probe.
	Name string `pulumi:"name"`
	// Value of this HTTP header.
	Value string `pulumi:"value"`
}

// ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs and ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs{...}
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput
}

// A HTTPHeader to be passed when probing a container.
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs struct {
	// Name of this HTTP header. Must be unique per probe.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of this HTTP header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput)
}

// ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArray and ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArray{ ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArgs{...} }
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput
}

type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArray []ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersInput

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArray) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArray) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// A HTTPHeader to be passed when probing a container.
type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

// Name of this HTTP header. Must be unique per probe.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// Value of this HTTP header.
func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput() ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput) ToContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders {
		return vs[0].([]ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
type ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket struct {
	// Port this probe should connect to.
	Port int `pulumi:"port"`
}

// ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs and ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs{...}
type ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
type ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs struct {
	// Port this probe should connect to.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput)
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput).ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs, ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtr and ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput
	ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput
}

type containerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrType ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs

func ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtr(v *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketArgs) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrInput {
	return (*containerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrType)(v)
}

func (*containerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrType) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrType) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput)
}

// TCPSocketProbe probes a container's health by connecting to a TCP socket.
type ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket) *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket {
		return &v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput)
}

// Port this probe should connect to.
func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket) int { return v.Port }).(pulumi.IntOutput)
}

type ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput) ToContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput) Elem() ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket) ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket {
		return *v
	}).(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput)
}

// Port this probe should connect to.
func (o ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersReadinessProbeTcpSocket) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Resources required by this container
type ContainerizedWorkloadSpecContainersResources struct {
	// CPU required by this container.
	Cpu ContainerizedWorkloadSpecContainersResourcesCpu `pulumi:"cpu"`
	// Extended resources required by this container.
	Extended []ContainerizedWorkloadSpecContainersResourcesExtended `pulumi:"extended"`
	// GPU required by this container.
	Gpu *ContainerizedWorkloadSpecContainersResourcesGpu `pulumi:"gpu"`
	// Memory required by this container.
	Memory ContainerizedWorkloadSpecContainersResourcesMemory `pulumi:"memory"`
	// Volumes required by this container.
	Volumes []ContainerizedWorkloadSpecContainersResourcesVolumes `pulumi:"volumes"`
}

// ContainerizedWorkloadSpecContainersResourcesInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesArgs and ContainerizedWorkloadSpecContainersResourcesOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesArgs{...}
type ContainerizedWorkloadSpecContainersResourcesInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesOutput() ContainerizedWorkloadSpecContainersResourcesOutput
	ToContainerizedWorkloadSpecContainersResourcesOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesOutput
}

// Resources required by this container
type ContainerizedWorkloadSpecContainersResourcesArgs struct {
	// CPU required by this container.
	Cpu ContainerizedWorkloadSpecContainersResourcesCpuInput `pulumi:"cpu"`
	// Extended resources required by this container.
	Extended ContainerizedWorkloadSpecContainersResourcesExtendedArrayInput `pulumi:"extended"`
	// GPU required by this container.
	Gpu ContainerizedWorkloadSpecContainersResourcesGpuPtrInput `pulumi:"gpu"`
	// Memory required by this container.
	Memory ContainerizedWorkloadSpecContainersResourcesMemoryInput `pulumi:"memory"`
	// Volumes required by this container.
	Volumes ContainerizedWorkloadSpecContainersResourcesVolumesArrayInput `pulumi:"volumes"`
}

func (ContainerizedWorkloadSpecContainersResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResources)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesArgs) ToContainerizedWorkloadSpecContainersResourcesOutput() ContainerizedWorkloadSpecContainersResourcesOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesArgs) ToContainerizedWorkloadSpecContainersResourcesOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesOutput)
}

func (i ContainerizedWorkloadSpecContainersResourcesArgs) ToContainerizedWorkloadSpecContainersResourcesPtrOutput() ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesArgs) ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesOutput).ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersResourcesPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesArgs, ContainerizedWorkloadSpecContainersResourcesPtr and ContainerizedWorkloadSpecContainersResourcesPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersResourcesPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesPtrOutput() ContainerizedWorkloadSpecContainersResourcesPtrOutput
	ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesPtrOutput
}

type containerizedWorkloadSpecContainersResourcesPtrType ContainerizedWorkloadSpecContainersResourcesArgs

func ContainerizedWorkloadSpecContainersResourcesPtr(v *ContainerizedWorkloadSpecContainersResourcesArgs) ContainerizedWorkloadSpecContainersResourcesPtrInput {
	return (*containerizedWorkloadSpecContainersResourcesPtrType)(v)
}

func (*containerizedWorkloadSpecContainersResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResources)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersResourcesPtrType) ToContainerizedWorkloadSpecContainersResourcesPtrOutput() ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersResourcesPtrType) ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesPtrOutput)
}

// Resources required by this container
type ContainerizedWorkloadSpecContainersResourcesOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResources)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesOutput) ToContainerizedWorkloadSpecContainersResourcesOutput() ContainerizedWorkloadSpecContainersResourcesOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesOutput) ToContainerizedWorkloadSpecContainersResourcesOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesOutput) ToContainerizedWorkloadSpecContainersResourcesPtrOutput() ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersResourcesOutput) ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResources) *ContainerizedWorkloadSpecContainersResources {
		return &v
	}).(ContainerizedWorkloadSpecContainersResourcesPtrOutput)
}

// CPU required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesOutput) Cpu() ContainerizedWorkloadSpecContainersResourcesCpuOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResources) ContainerizedWorkloadSpecContainersResourcesCpu {
		return v.Cpu
	}).(ContainerizedWorkloadSpecContainersResourcesCpuOutput)
}

// Extended resources required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesOutput) Extended() ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResources) []ContainerizedWorkloadSpecContainersResourcesExtended {
		return v.Extended
	}).(ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput)
}

// GPU required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesOutput) Gpu() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResources) *ContainerizedWorkloadSpecContainersResourcesGpu {
		return v.Gpu
	}).(ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput)
}

// Memory required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesOutput) Memory() ContainerizedWorkloadSpecContainersResourcesMemoryOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResources) ContainerizedWorkloadSpecContainersResourcesMemory {
		return v.Memory
	}).(ContainerizedWorkloadSpecContainersResourcesMemoryOutput)
}

// Volumes required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesOutput) Volumes() ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResources) []ContainerizedWorkloadSpecContainersResourcesVolumes {
		return v.Volumes
	}).(ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput)
}

type ContainerizedWorkloadSpecContainersResourcesPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResources)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) ToContainerizedWorkloadSpecContainersResourcesPtrOutput() ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) ToContainerizedWorkloadSpecContainersResourcesPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) Elem() ContainerizedWorkloadSpecContainersResourcesOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResources) ContainerizedWorkloadSpecContainersResources {
		return *v
	}).(ContainerizedWorkloadSpecContainersResourcesOutput)
}

// CPU required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) Cpu() ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResources) *ContainerizedWorkloadSpecContainersResourcesCpu {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput)
}

// Extended resources required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) Extended() ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResources) []ContainerizedWorkloadSpecContainersResourcesExtended {
		if v == nil {
			return nil
		}
		return v.Extended
	}).(ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput)
}

// GPU required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) Gpu() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResources) *ContainerizedWorkloadSpecContainersResourcesGpu {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput)
}

// Memory required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) Memory() ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResources) *ContainerizedWorkloadSpecContainersResourcesMemory {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput)
}

// Volumes required by this container.
func (o ContainerizedWorkloadSpecContainersResourcesPtrOutput) Volumes() ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResources) []ContainerizedWorkloadSpecContainersResourcesVolumes {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput)
}

// CPU required by this container.
type ContainerizedWorkloadSpecContainersResourcesCpu struct {
	// Required CPU count. 1.0 represents one CPU core.
	Required string `pulumi:"required"`
}

// ContainerizedWorkloadSpecContainersResourcesCpuInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesCpuArgs and ContainerizedWorkloadSpecContainersResourcesCpuOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesCpuInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesCpuArgs{...}
type ContainerizedWorkloadSpecContainersResourcesCpuInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesCpuOutput() ContainerizedWorkloadSpecContainersResourcesCpuOutput
	ToContainerizedWorkloadSpecContainersResourcesCpuOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesCpuOutput
}

// CPU required by this container.
type ContainerizedWorkloadSpecContainersResourcesCpuArgs struct {
	// Required CPU count. 1.0 represents one CPU core.
	Required pulumi.StringInput `pulumi:"required"`
}

func (ContainerizedWorkloadSpecContainersResourcesCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesCpu)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesCpuArgs) ToContainerizedWorkloadSpecContainersResourcesCpuOutput() ContainerizedWorkloadSpecContainersResourcesCpuOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesCpuOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesCpuArgs) ToContainerizedWorkloadSpecContainersResourcesCpuOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesCpuOutput)
}

func (i ContainerizedWorkloadSpecContainersResourcesCpuArgs) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesCpuArgs) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesCpuOutput).ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersResourcesCpuPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesCpuArgs, ContainerizedWorkloadSpecContainersResourcesCpuPtr and ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesCpuPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesCpuArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersResourcesCpuPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput
	ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput
}

type containerizedWorkloadSpecContainersResourcesCpuPtrType ContainerizedWorkloadSpecContainersResourcesCpuArgs

func ContainerizedWorkloadSpecContainersResourcesCpuPtr(v *ContainerizedWorkloadSpecContainersResourcesCpuArgs) ContainerizedWorkloadSpecContainersResourcesCpuPtrInput {
	return (*containerizedWorkloadSpecContainersResourcesCpuPtrType)(v)
}

func (*containerizedWorkloadSpecContainersResourcesCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesCpu)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersResourcesCpuPtrType) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersResourcesCpuPtrType) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput)
}

// CPU required by this container.
type ContainerizedWorkloadSpecContainersResourcesCpuOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesCpu)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuOutput) ToContainerizedWorkloadSpecContainersResourcesCpuOutput() ContainerizedWorkloadSpecContainersResourcesCpuOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuOutput) ToContainerizedWorkloadSpecContainersResourcesCpuOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesCpuOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuOutput) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuOutput) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesCpu) *ContainerizedWorkloadSpecContainersResourcesCpu {
		return &v
	}).(ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput)
}

// Required CPU count. 1.0 represents one CPU core.
func (o ContainerizedWorkloadSpecContainersResourcesCpuOutput) Required() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesCpu) string { return v.Required }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesCpu)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput) ToContainerizedWorkloadSpecContainersResourcesCpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput) Elem() ContainerizedWorkloadSpecContainersResourcesCpuOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesCpu) ContainerizedWorkloadSpecContainersResourcesCpu {
		return *v
	}).(ContainerizedWorkloadSpecContainersResourcesCpuOutput)
}

// Required CPU count. 1.0 represents one CPU core.
func (o ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesCpu) *string {
		if v == nil {
			return nil
		}
		return &v.Required
	}).(pulumi.StringPtrOutput)
}

// ExtendedResource required by a container.
type ContainerizedWorkloadSpecContainersResourcesExtended struct {
	// Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.
	Name string `pulumi:"name"`
	// Required extended resource(s), e.g. 8 or "very-cool-widget"
	Required ContainerizedWorkloadSpecContainersResourcesExtendedRequired `pulumi:"required"`
}

// ContainerizedWorkloadSpecContainersResourcesExtendedInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesExtendedArgs and ContainerizedWorkloadSpecContainersResourcesExtendedOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesExtendedInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesExtendedArgs{...}
type ContainerizedWorkloadSpecContainersResourcesExtendedInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesExtendedOutput() ContainerizedWorkloadSpecContainersResourcesExtendedOutput
	ToContainerizedWorkloadSpecContainersResourcesExtendedOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedOutput
}

// ExtendedResource required by a container.
type ContainerizedWorkloadSpecContainersResourcesExtendedArgs struct {
	// Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.
	Name pulumi.StringInput `pulumi:"name"`
	// Required extended resource(s), e.g. 8 or "very-cool-widget"
	Required ContainerizedWorkloadSpecContainersResourcesExtendedRequiredInput `pulumi:"required"`
}

func (ContainerizedWorkloadSpecContainersResourcesExtendedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesExtended)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesExtendedArgs) ToContainerizedWorkloadSpecContainersResourcesExtendedOutput() ContainerizedWorkloadSpecContainersResourcesExtendedOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesExtendedOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesExtendedArgs) ToContainerizedWorkloadSpecContainersResourcesExtendedOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesExtendedOutput)
}

// ContainerizedWorkloadSpecContainersResourcesExtendedArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesExtendedArray and ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesExtendedArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesExtendedArray{ ContainerizedWorkloadSpecContainersResourcesExtendedArgs{...} }
type ContainerizedWorkloadSpecContainersResourcesExtendedArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput() ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput
	ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput
}

type ContainerizedWorkloadSpecContainersResourcesExtendedArray []ContainerizedWorkloadSpecContainersResourcesExtendedInput

func (ContainerizedWorkloadSpecContainersResourcesExtendedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersResourcesExtended)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesExtendedArray) ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput() ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesExtendedArray) ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput)
}

// ExtendedResource required by a container.
type ContainerizedWorkloadSpecContainersResourcesExtendedOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesExtendedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesExtended)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedOutput) ToContainerizedWorkloadSpecContainersResourcesExtendedOutput() ContainerizedWorkloadSpecContainersResourcesExtendedOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedOutput) ToContainerizedWorkloadSpecContainersResourcesExtendedOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedOutput {
	return o
}

// Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.
func (o ContainerizedWorkloadSpecContainersResourcesExtendedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesExtended) string { return v.Name }).(pulumi.StringOutput)
}

// Required extended resource(s), e.g. 8 or "very-cool-widget"
func (o ContainerizedWorkloadSpecContainersResourcesExtendedOutput) Required() ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesExtended) ContainerizedWorkloadSpecContainersResourcesExtendedRequired {
		return v.Required
	}).(ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput)
}

type ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersResourcesExtended)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput) ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput() ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput) ToContainerizedWorkloadSpecContainersResourcesExtendedArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersResourcesExtendedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersResourcesExtended {
		return vs[0].([]ContainerizedWorkloadSpecContainersResourcesExtended)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersResourcesExtendedOutput)
}

type ContainerizedWorkloadSpecContainersResourcesExtendedRequired struct {
}

// ContainerizedWorkloadSpecContainersResourcesExtendedRequiredInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesExtendedRequiredArgs and ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesExtendedRequiredInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesExtendedRequiredArgs{...}
type ContainerizedWorkloadSpecContainersResourcesExtendedRequiredInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput() ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput
	ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput
}

type ContainerizedWorkloadSpecContainersResourcesExtendedRequiredArgs struct {
}

func (ContainerizedWorkloadSpecContainersResourcesExtendedRequiredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesExtendedRequired)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesExtendedRequiredArgs) ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput() ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesExtendedRequiredArgs) ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput)
}

type ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesExtendedRequired)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput) ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput() ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput) ToContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput {
	return o
}

// GPU required by this container.
type ContainerizedWorkloadSpecContainersResourcesGpu struct {
	// Required GPU count.
	Required string `pulumi:"required"`
}

// ContainerizedWorkloadSpecContainersResourcesGpuInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesGpuArgs and ContainerizedWorkloadSpecContainersResourcesGpuOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesGpuInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesGpuArgs{...}
type ContainerizedWorkloadSpecContainersResourcesGpuInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesGpuOutput() ContainerizedWorkloadSpecContainersResourcesGpuOutput
	ToContainerizedWorkloadSpecContainersResourcesGpuOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesGpuOutput
}

// GPU required by this container.
type ContainerizedWorkloadSpecContainersResourcesGpuArgs struct {
	// Required GPU count.
	Required pulumi.StringInput `pulumi:"required"`
}

func (ContainerizedWorkloadSpecContainersResourcesGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesGpu)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesGpuArgs) ToContainerizedWorkloadSpecContainersResourcesGpuOutput() ContainerizedWorkloadSpecContainersResourcesGpuOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesGpuOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesGpuArgs) ToContainerizedWorkloadSpecContainersResourcesGpuOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesGpuOutput)
}

func (i ContainerizedWorkloadSpecContainersResourcesGpuArgs) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesGpuArgs) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesGpuOutput).ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersResourcesGpuPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesGpuArgs, ContainerizedWorkloadSpecContainersResourcesGpuPtr and ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesGpuPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesGpuArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersResourcesGpuPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput
	ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput
}

type containerizedWorkloadSpecContainersResourcesGpuPtrType ContainerizedWorkloadSpecContainersResourcesGpuArgs

func ContainerizedWorkloadSpecContainersResourcesGpuPtr(v *ContainerizedWorkloadSpecContainersResourcesGpuArgs) ContainerizedWorkloadSpecContainersResourcesGpuPtrInput {
	return (*containerizedWorkloadSpecContainersResourcesGpuPtrType)(v)
}

func (*containerizedWorkloadSpecContainersResourcesGpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesGpu)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersResourcesGpuPtrType) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersResourcesGpuPtrType) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput)
}

// GPU required by this container.
type ContainerizedWorkloadSpecContainersResourcesGpuOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesGpu)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuOutput) ToContainerizedWorkloadSpecContainersResourcesGpuOutput() ContainerizedWorkloadSpecContainersResourcesGpuOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuOutput) ToContainerizedWorkloadSpecContainersResourcesGpuOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesGpuOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuOutput) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuOutput) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesGpu) *ContainerizedWorkloadSpecContainersResourcesGpu {
		return &v
	}).(ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput)
}

// Required GPU count.
func (o ContainerizedWorkloadSpecContainersResourcesGpuOutput) Required() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesGpu) string { return v.Required }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesGpu)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutput() ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput) ToContainerizedWorkloadSpecContainersResourcesGpuPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput) Elem() ContainerizedWorkloadSpecContainersResourcesGpuOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesGpu) ContainerizedWorkloadSpecContainersResourcesGpu {
		return *v
	}).(ContainerizedWorkloadSpecContainersResourcesGpuOutput)
}

// Required GPU count.
func (o ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesGpu) *string {
		if v == nil {
			return nil
		}
		return &v.Required
	}).(pulumi.StringPtrOutput)
}

// Memory required by this container.
type ContainerizedWorkloadSpecContainersResourcesMemory struct {
	// Required memory.
	Required string `pulumi:"required"`
}

// ContainerizedWorkloadSpecContainersResourcesMemoryInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesMemoryArgs and ContainerizedWorkloadSpecContainersResourcesMemoryOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesMemoryInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesMemoryArgs{...}
type ContainerizedWorkloadSpecContainersResourcesMemoryInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesMemoryOutput() ContainerizedWorkloadSpecContainersResourcesMemoryOutput
	ToContainerizedWorkloadSpecContainersResourcesMemoryOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryOutput
}

// Memory required by this container.
type ContainerizedWorkloadSpecContainersResourcesMemoryArgs struct {
	// Required memory.
	Required pulumi.StringInput `pulumi:"required"`
}

func (ContainerizedWorkloadSpecContainersResourcesMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesMemory)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesMemoryArgs) ToContainerizedWorkloadSpecContainersResourcesMemoryOutput() ContainerizedWorkloadSpecContainersResourcesMemoryOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesMemoryOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesMemoryArgs) ToContainerizedWorkloadSpecContainersResourcesMemoryOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesMemoryOutput)
}

func (i ContainerizedWorkloadSpecContainersResourcesMemoryArgs) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput() ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesMemoryArgs) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesMemoryOutput).ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersResourcesMemoryPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesMemoryArgs, ContainerizedWorkloadSpecContainersResourcesMemoryPtr and ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesMemoryPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesMemoryArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersResourcesMemoryPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput() ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput
	ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput
}

type containerizedWorkloadSpecContainersResourcesMemoryPtrType ContainerizedWorkloadSpecContainersResourcesMemoryArgs

func ContainerizedWorkloadSpecContainersResourcesMemoryPtr(v *ContainerizedWorkloadSpecContainersResourcesMemoryArgs) ContainerizedWorkloadSpecContainersResourcesMemoryPtrInput {
	return (*containerizedWorkloadSpecContainersResourcesMemoryPtrType)(v)
}

func (*containerizedWorkloadSpecContainersResourcesMemoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesMemory)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersResourcesMemoryPtrType) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput() ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersResourcesMemoryPtrType) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput)
}

// Memory required by this container.
type ContainerizedWorkloadSpecContainersResourcesMemoryOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesMemory)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryOutput) ToContainerizedWorkloadSpecContainersResourcesMemoryOutput() ContainerizedWorkloadSpecContainersResourcesMemoryOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryOutput) ToContainerizedWorkloadSpecContainersResourcesMemoryOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryOutput) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput() ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryOutput) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesMemory) *ContainerizedWorkloadSpecContainersResourcesMemory {
		return &v
	}).(ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput)
}

// Required memory.
func (o ContainerizedWorkloadSpecContainersResourcesMemoryOutput) Required() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesMemory) string { return v.Required }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesMemory)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput() ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput) ToContainerizedWorkloadSpecContainersResourcesMemoryPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput) Elem() ContainerizedWorkloadSpecContainersResourcesMemoryOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesMemory) ContainerizedWorkloadSpecContainersResourcesMemory {
		return *v
	}).(ContainerizedWorkloadSpecContainersResourcesMemoryOutput)
}

// Required memory.
func (o ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesMemory) *string {
		if v == nil {
			return nil
		}
		return &v.Required
	}).(pulumi.StringPtrOutput)
}

// VolumeResource required by a container.
type ContainerizedWorkloadSpecContainersResourcesVolumes struct {
	// AccessMode of this volume; RO (read only) or RW (read and write).
	AccessMode *string `pulumi:"accessMode"`
	// Disk requirements of this volume.
	Disk *ContainerizedWorkloadSpecContainersResourcesVolumesDisk `pulumi:"disk"`
	// MouthPath at which this volume will be mounted within its container.
	MountPath string `pulumi:"mountPath"`
	// Name of this volume. Must be unique within its container.
	Name string `pulumi:"name"`
	// SharingPolicy of this volume; Exclusive or Shared.
	SharingPolicy *string `pulumi:"sharingPolicy"`
}

// ContainerizedWorkloadSpecContainersResourcesVolumesInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesVolumesArgs and ContainerizedWorkloadSpecContainersResourcesVolumesOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesVolumesInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesVolumesArgs{...}
type ContainerizedWorkloadSpecContainersResourcesVolumesInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesVolumesOutput() ContainerizedWorkloadSpecContainersResourcesVolumesOutput
	ToContainerizedWorkloadSpecContainersResourcesVolumesOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesOutput
}

// VolumeResource required by a container.
type ContainerizedWorkloadSpecContainersResourcesVolumesArgs struct {
	// AccessMode of this volume; RO (read only) or RW (read and write).
	AccessMode pulumi.StringPtrInput `pulumi:"accessMode"`
	// Disk requirements of this volume.
	Disk ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrInput `pulumi:"disk"`
	// MouthPath at which this volume will be mounted within its container.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Name of this volume. Must be unique within its container.
	Name pulumi.StringInput `pulumi:"name"`
	// SharingPolicy of this volume; Exclusive or Shared.
	SharingPolicy pulumi.StringPtrInput `pulumi:"sharingPolicy"`
}

func (ContainerizedWorkloadSpecContainersResourcesVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesVolumes)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesArgs) ToContainerizedWorkloadSpecContainersResourcesVolumesOutput() ContainerizedWorkloadSpecContainersResourcesVolumesOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesVolumesOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesArgs) ToContainerizedWorkloadSpecContainersResourcesVolumesOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesVolumesOutput)
}

// ContainerizedWorkloadSpecContainersResourcesVolumesArrayInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesVolumesArray and ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesVolumesArrayInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesVolumesArray{ ContainerizedWorkloadSpecContainersResourcesVolumesArgs{...} }
type ContainerizedWorkloadSpecContainersResourcesVolumesArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput() ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput
	ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput
}

type ContainerizedWorkloadSpecContainersResourcesVolumesArray []ContainerizedWorkloadSpecContainersResourcesVolumesInput

func (ContainerizedWorkloadSpecContainersResourcesVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersResourcesVolumes)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesArray) ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput() ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesArray) ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput)
}

// VolumeResource required by a container.
type ContainerizedWorkloadSpecContainersResourcesVolumesOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesVolumes)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesOutput() ContainerizedWorkloadSpecContainersResourcesVolumesOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesOutput {
	return o
}

// AccessMode of this volume; RO (read only) or RW (read and write).
func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) AccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumes) *string { return v.AccessMode }).(pulumi.StringPtrOutput)
}

// Disk requirements of this volume.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) Disk() ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumes) *ContainerizedWorkloadSpecContainersResourcesVolumesDisk {
		return v.Disk
	}).(ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput)
}

// MouthPath at which this volume will be mounted within its container.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumes) string { return v.MountPath }).(pulumi.StringOutput)
}

// Name of this volume. Must be unique within its container.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumes) string { return v.Name }).(pulumi.StringOutput)
}

// SharingPolicy of this volume; Exclusive or Shared.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesOutput) SharingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumes) *string { return v.SharingPolicy }).(pulumi.StringPtrOutput)
}

type ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadSpecContainersResourcesVolumes)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput() ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadSpecContainersResourcesVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadSpecContainersResourcesVolumes {
		return vs[0].([]ContainerizedWorkloadSpecContainersResourcesVolumes)[vs[1].(int)]
	}).(ContainerizedWorkloadSpecContainersResourcesVolumesOutput)
}

// Disk requirements of this volume.
type ContainerizedWorkloadSpecContainersResourcesVolumesDisk struct {
	// Ephemeral specifies whether an external disk needs to be mounted.
	Ephemeral *bool `pulumi:"ephemeral"`
	// Required disk space.
	Required string `pulumi:"required"`
}

// ContainerizedWorkloadSpecContainersResourcesVolumesDiskInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs and ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesVolumesDiskInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs{...}
type ContainerizedWorkloadSpecContainersResourcesVolumesDiskInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput
	ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput
}

// Disk requirements of this volume.
type ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs struct {
	// Ephemeral specifies whether an external disk needs to be mounted.
	Ephemeral pulumi.BoolPtrInput `pulumi:"ephemeral"`
	// Required disk space.
	Required pulumi.StringInput `pulumi:"required"`
}

func (ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesVolumesDisk)(nil)).Elem()
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput)
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput).ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrInput is an input type that accepts ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs, ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtr and ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrInput` via:
//
//          ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput
	ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput
}

type containerizedWorkloadSpecContainersResourcesVolumesDiskPtrType ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs

func ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtr(v *ContainerizedWorkloadSpecContainersResourcesVolumesDiskArgs) ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrInput {
	return (*containerizedWorkloadSpecContainersResourcesVolumesDiskPtrType)(v)
}

func (*containerizedWorkloadSpecContainersResourcesVolumesDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesVolumesDisk)(nil)).Elem()
}

func (i *containerizedWorkloadSpecContainersResourcesVolumesDiskPtrType) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return i.ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadSpecContainersResourcesVolumesDiskPtrType) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput)
}

// Disk requirements of this volume.
type ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadSpecContainersResourcesVolumesDisk)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return o.ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumesDisk) *ContainerizedWorkloadSpecContainersResourcesVolumesDisk {
		return &v
	}).(ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput)
}

// Ephemeral specifies whether an external disk needs to be mounted.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) Ephemeral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumesDisk) *bool { return v.Ephemeral }).(pulumi.BoolPtrOutput)
}

// Required disk space.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput) Required() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadSpecContainersResourcesVolumesDisk) string { return v.Required }).(pulumi.StringOutput)
}

type ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadSpecContainersResourcesVolumesDisk)(nil)).Elem()
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput() ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput) ToContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput {
	return o
}

func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput) Elem() ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesVolumesDisk) ContainerizedWorkloadSpecContainersResourcesVolumesDisk {
		return *v
	}).(ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput)
}

// Ephemeral specifies whether an external disk needs to be mounted.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput) Ephemeral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesVolumesDisk) *bool {
		if v == nil {
			return nil
		}
		return v.Ephemeral
	}).(pulumi.BoolPtrOutput)
}

// Required disk space.
func (o ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput) Required() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadSpecContainersResourcesVolumesDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Required
	}).(pulumi.StringPtrOutput)
}

// A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
type ContainerizedWorkloadStatus struct {
	// Conditions of the resource.
	Conditions []ContainerizedWorkloadStatusConditions `pulumi:"conditions"`
	// Resources managed by this containerised workload.
	Resources []ContainerizedWorkloadStatusResources `pulumi:"resources"`
}

// ContainerizedWorkloadStatusInput is an input type that accepts ContainerizedWorkloadStatusArgs and ContainerizedWorkloadStatusOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadStatusInput` via:
//
//          ContainerizedWorkloadStatusArgs{...}
type ContainerizedWorkloadStatusInput interface {
	pulumi.Input

	ToContainerizedWorkloadStatusOutput() ContainerizedWorkloadStatusOutput
	ToContainerizedWorkloadStatusOutputWithContext(context.Context) ContainerizedWorkloadStatusOutput
}

// A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
type ContainerizedWorkloadStatusArgs struct {
	// Conditions of the resource.
	Conditions ContainerizedWorkloadStatusConditionsArrayInput `pulumi:"conditions"`
	// Resources managed by this containerised workload.
	Resources ContainerizedWorkloadStatusResourcesArrayInput `pulumi:"resources"`
}

func (ContainerizedWorkloadStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadStatus)(nil)).Elem()
}

func (i ContainerizedWorkloadStatusArgs) ToContainerizedWorkloadStatusOutput() ContainerizedWorkloadStatusOutput {
	return i.ToContainerizedWorkloadStatusOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadStatusArgs) ToContainerizedWorkloadStatusOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusOutput)
}

func (i ContainerizedWorkloadStatusArgs) ToContainerizedWorkloadStatusPtrOutput() ContainerizedWorkloadStatusPtrOutput {
	return i.ToContainerizedWorkloadStatusPtrOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadStatusArgs) ToContainerizedWorkloadStatusPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusOutput).ToContainerizedWorkloadStatusPtrOutputWithContext(ctx)
}

// ContainerizedWorkloadStatusPtrInput is an input type that accepts ContainerizedWorkloadStatusArgs, ContainerizedWorkloadStatusPtr and ContainerizedWorkloadStatusPtrOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadStatusPtrInput` via:
//
//          ContainerizedWorkloadStatusArgs{...}
//
//  or:
//
//          nil
type ContainerizedWorkloadStatusPtrInput interface {
	pulumi.Input

	ToContainerizedWorkloadStatusPtrOutput() ContainerizedWorkloadStatusPtrOutput
	ToContainerizedWorkloadStatusPtrOutputWithContext(context.Context) ContainerizedWorkloadStatusPtrOutput
}

type containerizedWorkloadStatusPtrType ContainerizedWorkloadStatusArgs

func ContainerizedWorkloadStatusPtr(v *ContainerizedWorkloadStatusArgs) ContainerizedWorkloadStatusPtrInput {
	return (*containerizedWorkloadStatusPtrType)(v)
}

func (*containerizedWorkloadStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadStatus)(nil)).Elem()
}

func (i *containerizedWorkloadStatusPtrType) ToContainerizedWorkloadStatusPtrOutput() ContainerizedWorkloadStatusPtrOutput {
	return i.ToContainerizedWorkloadStatusPtrOutputWithContext(context.Background())
}

func (i *containerizedWorkloadStatusPtrType) ToContainerizedWorkloadStatusPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusPtrOutput)
}

// A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
type ContainerizedWorkloadStatusOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadStatus)(nil)).Elem()
}

func (o ContainerizedWorkloadStatusOutput) ToContainerizedWorkloadStatusOutput() ContainerizedWorkloadStatusOutput {
	return o
}

func (o ContainerizedWorkloadStatusOutput) ToContainerizedWorkloadStatusOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusOutput {
	return o
}

func (o ContainerizedWorkloadStatusOutput) ToContainerizedWorkloadStatusPtrOutput() ContainerizedWorkloadStatusPtrOutput {
	return o.ToContainerizedWorkloadStatusPtrOutputWithContext(context.Background())
}

func (o ContainerizedWorkloadStatusOutput) ToContainerizedWorkloadStatusPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatus) *ContainerizedWorkloadStatus {
		return &v
	}).(ContainerizedWorkloadStatusPtrOutput)
}

// Conditions of the resource.
func (o ContainerizedWorkloadStatusOutput) Conditions() ContainerizedWorkloadStatusConditionsArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatus) []ContainerizedWorkloadStatusConditions { return v.Conditions }).(ContainerizedWorkloadStatusConditionsArrayOutput)
}

// Resources managed by this containerised workload.
func (o ContainerizedWorkloadStatusOutput) Resources() ContainerizedWorkloadStatusResourcesArrayOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatus) []ContainerizedWorkloadStatusResources { return v.Resources }).(ContainerizedWorkloadStatusResourcesArrayOutput)
}

type ContainerizedWorkloadStatusPtrOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerizedWorkloadStatus)(nil)).Elem()
}

func (o ContainerizedWorkloadStatusPtrOutput) ToContainerizedWorkloadStatusPtrOutput() ContainerizedWorkloadStatusPtrOutput {
	return o
}

func (o ContainerizedWorkloadStatusPtrOutput) ToContainerizedWorkloadStatusPtrOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusPtrOutput {
	return o
}

func (o ContainerizedWorkloadStatusPtrOutput) Elem() ContainerizedWorkloadStatusOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadStatus) ContainerizedWorkloadStatus { return *v }).(ContainerizedWorkloadStatusOutput)
}

// Conditions of the resource.
func (o ContainerizedWorkloadStatusPtrOutput) Conditions() ContainerizedWorkloadStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadStatus) []ContainerizedWorkloadStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ContainerizedWorkloadStatusConditionsArrayOutput)
}

// Resources managed by this containerised workload.
func (o ContainerizedWorkloadStatusPtrOutput) Resources() ContainerizedWorkloadStatusResourcesArrayOutput {
	return o.ApplyT(func(v *ContainerizedWorkloadStatus) []ContainerizedWorkloadStatusResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ContainerizedWorkloadStatusResourcesArrayOutput)
}

// A Condition that may apply to a resource.
type ContainerizedWorkloadStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// ContainerizedWorkloadStatusConditionsInput is an input type that accepts ContainerizedWorkloadStatusConditionsArgs and ContainerizedWorkloadStatusConditionsOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadStatusConditionsInput` via:
//
//          ContainerizedWorkloadStatusConditionsArgs{...}
type ContainerizedWorkloadStatusConditionsInput interface {
	pulumi.Input

	ToContainerizedWorkloadStatusConditionsOutput() ContainerizedWorkloadStatusConditionsOutput
	ToContainerizedWorkloadStatusConditionsOutputWithContext(context.Context) ContainerizedWorkloadStatusConditionsOutput
}

// A Condition that may apply to a resource.
type ContainerizedWorkloadStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerizedWorkloadStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadStatusConditions)(nil)).Elem()
}

func (i ContainerizedWorkloadStatusConditionsArgs) ToContainerizedWorkloadStatusConditionsOutput() ContainerizedWorkloadStatusConditionsOutput {
	return i.ToContainerizedWorkloadStatusConditionsOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadStatusConditionsArgs) ToContainerizedWorkloadStatusConditionsOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusConditionsOutput)
}

// ContainerizedWorkloadStatusConditionsArrayInput is an input type that accepts ContainerizedWorkloadStatusConditionsArray and ContainerizedWorkloadStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadStatusConditionsArrayInput` via:
//
//          ContainerizedWorkloadStatusConditionsArray{ ContainerizedWorkloadStatusConditionsArgs{...} }
type ContainerizedWorkloadStatusConditionsArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadStatusConditionsArrayOutput() ContainerizedWorkloadStatusConditionsArrayOutput
	ToContainerizedWorkloadStatusConditionsArrayOutputWithContext(context.Context) ContainerizedWorkloadStatusConditionsArrayOutput
}

type ContainerizedWorkloadStatusConditionsArray []ContainerizedWorkloadStatusConditionsInput

func (ContainerizedWorkloadStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadStatusConditions)(nil)).Elem()
}

func (i ContainerizedWorkloadStatusConditionsArray) ToContainerizedWorkloadStatusConditionsArrayOutput() ContainerizedWorkloadStatusConditionsArrayOutput {
	return i.ToContainerizedWorkloadStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadStatusConditionsArray) ToContainerizedWorkloadStatusConditionsArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ContainerizedWorkloadStatusConditionsOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadStatusConditions)(nil)).Elem()
}

func (o ContainerizedWorkloadStatusConditionsOutput) ToContainerizedWorkloadStatusConditionsOutput() ContainerizedWorkloadStatusConditionsOutput {
	return o
}

func (o ContainerizedWorkloadStatusConditionsOutput) ToContainerizedWorkloadStatusConditionsOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o ContainerizedWorkloadStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o ContainerizedWorkloadStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o ContainerizedWorkloadStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o ContainerizedWorkloadStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o ContainerizedWorkloadStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerizedWorkloadStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadStatusConditions)(nil)).Elem()
}

func (o ContainerizedWorkloadStatusConditionsArrayOutput) ToContainerizedWorkloadStatusConditionsArrayOutput() ContainerizedWorkloadStatusConditionsArrayOutput {
	return o
}

func (o ContainerizedWorkloadStatusConditionsArrayOutput) ToContainerizedWorkloadStatusConditionsArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusConditionsArrayOutput {
	return o
}

func (o ContainerizedWorkloadStatusConditionsArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadStatusConditions {
		return vs[0].([]ContainerizedWorkloadStatusConditions)[vs[1].(int)]
	}).(ContainerizedWorkloadStatusConditionsOutput)
}

// A TypedReference refers to an object by Name, Kind, and APIVersion. It is commonly used to reference cluster-scoped objects or objects where the namespace is already known.
type ContainerizedWorkloadStatusResources struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ContainerizedWorkloadStatusResourcesInput is an input type that accepts ContainerizedWorkloadStatusResourcesArgs and ContainerizedWorkloadStatusResourcesOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadStatusResourcesInput` via:
//
//          ContainerizedWorkloadStatusResourcesArgs{...}
type ContainerizedWorkloadStatusResourcesInput interface {
	pulumi.Input

	ToContainerizedWorkloadStatusResourcesOutput() ContainerizedWorkloadStatusResourcesOutput
	ToContainerizedWorkloadStatusResourcesOutputWithContext(context.Context) ContainerizedWorkloadStatusResourcesOutput
}

// A TypedReference refers to an object by Name, Kind, and APIVersion. It is commonly used to reference cluster-scoped objects or objects where the namespace is already known.
type ContainerizedWorkloadStatusResourcesArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ContainerizedWorkloadStatusResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadStatusResources)(nil)).Elem()
}

func (i ContainerizedWorkloadStatusResourcesArgs) ToContainerizedWorkloadStatusResourcesOutput() ContainerizedWorkloadStatusResourcesOutput {
	return i.ToContainerizedWorkloadStatusResourcesOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadStatusResourcesArgs) ToContainerizedWorkloadStatusResourcesOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusResourcesOutput)
}

// ContainerizedWorkloadStatusResourcesArrayInput is an input type that accepts ContainerizedWorkloadStatusResourcesArray and ContainerizedWorkloadStatusResourcesArrayOutput values.
// You can construct a concrete instance of `ContainerizedWorkloadStatusResourcesArrayInput` via:
//
//          ContainerizedWorkloadStatusResourcesArray{ ContainerizedWorkloadStatusResourcesArgs{...} }
type ContainerizedWorkloadStatusResourcesArrayInput interface {
	pulumi.Input

	ToContainerizedWorkloadStatusResourcesArrayOutput() ContainerizedWorkloadStatusResourcesArrayOutput
	ToContainerizedWorkloadStatusResourcesArrayOutputWithContext(context.Context) ContainerizedWorkloadStatusResourcesArrayOutput
}

type ContainerizedWorkloadStatusResourcesArray []ContainerizedWorkloadStatusResourcesInput

func (ContainerizedWorkloadStatusResourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadStatusResources)(nil)).Elem()
}

func (i ContainerizedWorkloadStatusResourcesArray) ToContainerizedWorkloadStatusResourcesArrayOutput() ContainerizedWorkloadStatusResourcesArrayOutput {
	return i.ToContainerizedWorkloadStatusResourcesArrayOutputWithContext(context.Background())
}

func (i ContainerizedWorkloadStatusResourcesArray) ToContainerizedWorkloadStatusResourcesArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusResourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerizedWorkloadStatusResourcesArrayOutput)
}

// A TypedReference refers to an object by Name, Kind, and APIVersion. It is commonly used to reference cluster-scoped objects or objects where the namespace is already known.
type ContainerizedWorkloadStatusResourcesOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadStatusResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerizedWorkloadStatusResources)(nil)).Elem()
}

func (o ContainerizedWorkloadStatusResourcesOutput) ToContainerizedWorkloadStatusResourcesOutput() ContainerizedWorkloadStatusResourcesOutput {
	return o
}

func (o ContainerizedWorkloadStatusResourcesOutput) ToContainerizedWorkloadStatusResourcesOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusResourcesOutput {
	return o
}

// APIVersion of the referenced object.
func (o ContainerizedWorkloadStatusResourcesOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusResources) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ContainerizedWorkloadStatusResourcesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusResources) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ContainerizedWorkloadStatusResourcesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusResources) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ContainerizedWorkloadStatusResourcesOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerizedWorkloadStatusResources) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ContainerizedWorkloadStatusResourcesArrayOutput struct{ *pulumi.OutputState }

func (ContainerizedWorkloadStatusResourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerizedWorkloadStatusResources)(nil)).Elem()
}

func (o ContainerizedWorkloadStatusResourcesArrayOutput) ToContainerizedWorkloadStatusResourcesArrayOutput() ContainerizedWorkloadStatusResourcesArrayOutput {
	return o
}

func (o ContainerizedWorkloadStatusResourcesArrayOutput) ToContainerizedWorkloadStatusResourcesArrayOutputWithContext(ctx context.Context) ContainerizedWorkloadStatusResourcesArrayOutput {
	return o
}

func (o ContainerizedWorkloadStatusResourcesArrayOutput) Index(i pulumi.IntInput) ContainerizedWorkloadStatusResourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerizedWorkloadStatusResources {
		return vs[0].([]ContainerizedWorkloadStatusResources)[vs[1].(int)]
	}).(ContainerizedWorkloadStatusResourcesOutput)
}

// A ManualScalerTrait determines how many replicas a workload should have.
type ManualScalerTraitType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.
	Spec *ManualScalerTraitSpec `pulumi:"spec"`
	// A ManualScalerTraitStatus represents the observed state of a ManualScalerTrait.
	Status *ManualScalerTraitStatus `pulumi:"status"`
}

// ManualScalerTraitTypeInput is an input type that accepts ManualScalerTraitTypeArgs and ManualScalerTraitTypeOutput values.
// You can construct a concrete instance of `ManualScalerTraitTypeInput` via:
//
//          ManualScalerTraitTypeArgs{...}
type ManualScalerTraitTypeInput interface {
	pulumi.Input

	ToManualScalerTraitTypeOutput() ManualScalerTraitTypeOutput
	ToManualScalerTraitTypeOutputWithContext(context.Context) ManualScalerTraitTypeOutput
}

// A ManualScalerTrait determines how many replicas a workload should have.
type ManualScalerTraitTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.
	Spec ManualScalerTraitSpecPtrInput `pulumi:"spec"`
	// A ManualScalerTraitStatus represents the observed state of a ManualScalerTrait.
	Status ManualScalerTraitStatusPtrInput `pulumi:"status"`
}

func (ManualScalerTraitTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitType)(nil)).Elem()
}

func (i ManualScalerTraitTypeArgs) ToManualScalerTraitTypeOutput() ManualScalerTraitTypeOutput {
	return i.ToManualScalerTraitTypeOutputWithContext(context.Background())
}

func (i ManualScalerTraitTypeArgs) ToManualScalerTraitTypeOutputWithContext(ctx context.Context) ManualScalerTraitTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitTypeOutput)
}

// A ManualScalerTrait determines how many replicas a workload should have.
type ManualScalerTraitTypeOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitType)(nil)).Elem()
}

func (o ManualScalerTraitTypeOutput) ToManualScalerTraitTypeOutput() ManualScalerTraitTypeOutput {
	return o
}

func (o ManualScalerTraitTypeOutput) ToManualScalerTraitTypeOutputWithContext(ctx context.Context) ManualScalerTraitTypeOutput {
	return o
}

func (o ManualScalerTraitTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ManualScalerTraitTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ManualScalerTraitTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.
func (o ManualScalerTraitTypeOutput) Spec() ManualScalerTraitSpecPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitType) *ManualScalerTraitSpec { return v.Spec }).(ManualScalerTraitSpecPtrOutput)
}

// A ManualScalerTraitStatus represents the observed state of a ManualScalerTrait.
func (o ManualScalerTraitTypeOutput) Status() ManualScalerTraitStatusPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitType) *ManualScalerTraitStatus { return v.Status }).(ManualScalerTraitStatusPtrOutput)
}

type ManualScalerTraitMetadata struct {
}

// ManualScalerTraitMetadataInput is an input type that accepts ManualScalerTraitMetadataArgs and ManualScalerTraitMetadataOutput values.
// You can construct a concrete instance of `ManualScalerTraitMetadataInput` via:
//
//          ManualScalerTraitMetadataArgs{...}
type ManualScalerTraitMetadataInput interface {
	pulumi.Input

	ToManualScalerTraitMetadataOutput() ManualScalerTraitMetadataOutput
	ToManualScalerTraitMetadataOutputWithContext(context.Context) ManualScalerTraitMetadataOutput
}

type ManualScalerTraitMetadataArgs struct {
}

func (ManualScalerTraitMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitMetadata)(nil)).Elem()
}

func (i ManualScalerTraitMetadataArgs) ToManualScalerTraitMetadataOutput() ManualScalerTraitMetadataOutput {
	return i.ToManualScalerTraitMetadataOutputWithContext(context.Background())
}

func (i ManualScalerTraitMetadataArgs) ToManualScalerTraitMetadataOutputWithContext(ctx context.Context) ManualScalerTraitMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitMetadataOutput)
}

type ManualScalerTraitMetadataOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitMetadata)(nil)).Elem()
}

func (o ManualScalerTraitMetadataOutput) ToManualScalerTraitMetadataOutput() ManualScalerTraitMetadataOutput {
	return o
}

func (o ManualScalerTraitMetadataOutput) ToManualScalerTraitMetadataOutputWithContext(ctx context.Context) ManualScalerTraitMetadataOutput {
	return o
}

// A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.
type ManualScalerTraitSpec struct {
	// ReplicaCount of the workload this trait applies to.
	ReplicaCount int `pulumi:"replicaCount"`
	// WorkloadReference to the workload this trait applies to.
	WorkloadRef ManualScalerTraitSpecWorkloadRef `pulumi:"workloadRef"`
}

// ManualScalerTraitSpecInput is an input type that accepts ManualScalerTraitSpecArgs and ManualScalerTraitSpecOutput values.
// You can construct a concrete instance of `ManualScalerTraitSpecInput` via:
//
//          ManualScalerTraitSpecArgs{...}
type ManualScalerTraitSpecInput interface {
	pulumi.Input

	ToManualScalerTraitSpecOutput() ManualScalerTraitSpecOutput
	ToManualScalerTraitSpecOutputWithContext(context.Context) ManualScalerTraitSpecOutput
}

// A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.
type ManualScalerTraitSpecArgs struct {
	// ReplicaCount of the workload this trait applies to.
	ReplicaCount pulumi.IntInput `pulumi:"replicaCount"`
	// WorkloadReference to the workload this trait applies to.
	WorkloadRef ManualScalerTraitSpecWorkloadRefInput `pulumi:"workloadRef"`
}

func (ManualScalerTraitSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitSpec)(nil)).Elem()
}

func (i ManualScalerTraitSpecArgs) ToManualScalerTraitSpecOutput() ManualScalerTraitSpecOutput {
	return i.ToManualScalerTraitSpecOutputWithContext(context.Background())
}

func (i ManualScalerTraitSpecArgs) ToManualScalerTraitSpecOutputWithContext(ctx context.Context) ManualScalerTraitSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitSpecOutput)
}

func (i ManualScalerTraitSpecArgs) ToManualScalerTraitSpecPtrOutput() ManualScalerTraitSpecPtrOutput {
	return i.ToManualScalerTraitSpecPtrOutputWithContext(context.Background())
}

func (i ManualScalerTraitSpecArgs) ToManualScalerTraitSpecPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitSpecOutput).ToManualScalerTraitSpecPtrOutputWithContext(ctx)
}

// ManualScalerTraitSpecPtrInput is an input type that accepts ManualScalerTraitSpecArgs, ManualScalerTraitSpecPtr and ManualScalerTraitSpecPtrOutput values.
// You can construct a concrete instance of `ManualScalerTraitSpecPtrInput` via:
//
//          ManualScalerTraitSpecArgs{...}
//
//  or:
//
//          nil
type ManualScalerTraitSpecPtrInput interface {
	pulumi.Input

	ToManualScalerTraitSpecPtrOutput() ManualScalerTraitSpecPtrOutput
	ToManualScalerTraitSpecPtrOutputWithContext(context.Context) ManualScalerTraitSpecPtrOutput
}

type manualScalerTraitSpecPtrType ManualScalerTraitSpecArgs

func ManualScalerTraitSpecPtr(v *ManualScalerTraitSpecArgs) ManualScalerTraitSpecPtrInput {
	return (*manualScalerTraitSpecPtrType)(v)
}

func (*manualScalerTraitSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScalerTraitSpec)(nil)).Elem()
}

func (i *manualScalerTraitSpecPtrType) ToManualScalerTraitSpecPtrOutput() ManualScalerTraitSpecPtrOutput {
	return i.ToManualScalerTraitSpecPtrOutputWithContext(context.Background())
}

func (i *manualScalerTraitSpecPtrType) ToManualScalerTraitSpecPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitSpecPtrOutput)
}

// A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.
type ManualScalerTraitSpecOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitSpec)(nil)).Elem()
}

func (o ManualScalerTraitSpecOutput) ToManualScalerTraitSpecOutput() ManualScalerTraitSpecOutput {
	return o
}

func (o ManualScalerTraitSpecOutput) ToManualScalerTraitSpecOutputWithContext(ctx context.Context) ManualScalerTraitSpecOutput {
	return o
}

func (o ManualScalerTraitSpecOutput) ToManualScalerTraitSpecPtrOutput() ManualScalerTraitSpecPtrOutput {
	return o.ToManualScalerTraitSpecPtrOutputWithContext(context.Background())
}

func (o ManualScalerTraitSpecOutput) ToManualScalerTraitSpecPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitSpec) *ManualScalerTraitSpec {
		return &v
	}).(ManualScalerTraitSpecPtrOutput)
}

// ReplicaCount of the workload this trait applies to.
func (o ManualScalerTraitSpecOutput) ReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v ManualScalerTraitSpec) int { return v.ReplicaCount }).(pulumi.IntOutput)
}

// WorkloadReference to the workload this trait applies to.
func (o ManualScalerTraitSpecOutput) WorkloadRef() ManualScalerTraitSpecWorkloadRefOutput {
	return o.ApplyT(func(v ManualScalerTraitSpec) ManualScalerTraitSpecWorkloadRef { return v.WorkloadRef }).(ManualScalerTraitSpecWorkloadRefOutput)
}

type ManualScalerTraitSpecPtrOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScalerTraitSpec)(nil)).Elem()
}

func (o ManualScalerTraitSpecPtrOutput) ToManualScalerTraitSpecPtrOutput() ManualScalerTraitSpecPtrOutput {
	return o
}

func (o ManualScalerTraitSpecPtrOutput) ToManualScalerTraitSpecPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecPtrOutput {
	return o
}

func (o ManualScalerTraitSpecPtrOutput) Elem() ManualScalerTraitSpecOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpec) ManualScalerTraitSpec { return *v }).(ManualScalerTraitSpecOutput)
}

// ReplicaCount of the workload this trait applies to.
func (o ManualScalerTraitSpecPtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpec) *int {
		if v == nil {
			return nil
		}
		return &v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// WorkloadReference to the workload this trait applies to.
func (o ManualScalerTraitSpecPtrOutput) WorkloadRef() ManualScalerTraitSpecWorkloadRefPtrOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpec) *ManualScalerTraitSpecWorkloadRef {
		if v == nil {
			return nil
		}
		return &v.WorkloadRef
	}).(ManualScalerTraitSpecWorkloadRefPtrOutput)
}

// WorkloadReference to the workload this trait applies to.
type ManualScalerTraitSpecWorkloadRef struct {
	// APIVersion of the referenced object.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind string `pulumi:"kind"`
	// Name of the referenced object.
	Name string `pulumi:"name"`
	// UID of the referenced object.
	Uid *string `pulumi:"uid"`
}

// ManualScalerTraitSpecWorkloadRefInput is an input type that accepts ManualScalerTraitSpecWorkloadRefArgs and ManualScalerTraitSpecWorkloadRefOutput values.
// You can construct a concrete instance of `ManualScalerTraitSpecWorkloadRefInput` via:
//
//          ManualScalerTraitSpecWorkloadRefArgs{...}
type ManualScalerTraitSpecWorkloadRefInput interface {
	pulumi.Input

	ToManualScalerTraitSpecWorkloadRefOutput() ManualScalerTraitSpecWorkloadRefOutput
	ToManualScalerTraitSpecWorkloadRefOutputWithContext(context.Context) ManualScalerTraitSpecWorkloadRefOutput
}

// WorkloadReference to the workload this trait applies to.
type ManualScalerTraitSpecWorkloadRefArgs struct {
	// APIVersion of the referenced object.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind of the referenced object.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referenced object.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referenced object.
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ManualScalerTraitSpecWorkloadRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitSpecWorkloadRef)(nil)).Elem()
}

func (i ManualScalerTraitSpecWorkloadRefArgs) ToManualScalerTraitSpecWorkloadRefOutput() ManualScalerTraitSpecWorkloadRefOutput {
	return i.ToManualScalerTraitSpecWorkloadRefOutputWithContext(context.Background())
}

func (i ManualScalerTraitSpecWorkloadRefArgs) ToManualScalerTraitSpecWorkloadRefOutputWithContext(ctx context.Context) ManualScalerTraitSpecWorkloadRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitSpecWorkloadRefOutput)
}

func (i ManualScalerTraitSpecWorkloadRefArgs) ToManualScalerTraitSpecWorkloadRefPtrOutput() ManualScalerTraitSpecWorkloadRefPtrOutput {
	return i.ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(context.Background())
}

func (i ManualScalerTraitSpecWorkloadRefArgs) ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecWorkloadRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitSpecWorkloadRefOutput).ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(ctx)
}

// ManualScalerTraitSpecWorkloadRefPtrInput is an input type that accepts ManualScalerTraitSpecWorkloadRefArgs, ManualScalerTraitSpecWorkloadRefPtr and ManualScalerTraitSpecWorkloadRefPtrOutput values.
// You can construct a concrete instance of `ManualScalerTraitSpecWorkloadRefPtrInput` via:
//
//          ManualScalerTraitSpecWorkloadRefArgs{...}
//
//  or:
//
//          nil
type ManualScalerTraitSpecWorkloadRefPtrInput interface {
	pulumi.Input

	ToManualScalerTraitSpecWorkloadRefPtrOutput() ManualScalerTraitSpecWorkloadRefPtrOutput
	ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(context.Context) ManualScalerTraitSpecWorkloadRefPtrOutput
}

type manualScalerTraitSpecWorkloadRefPtrType ManualScalerTraitSpecWorkloadRefArgs

func ManualScalerTraitSpecWorkloadRefPtr(v *ManualScalerTraitSpecWorkloadRefArgs) ManualScalerTraitSpecWorkloadRefPtrInput {
	return (*manualScalerTraitSpecWorkloadRefPtrType)(v)
}

func (*manualScalerTraitSpecWorkloadRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScalerTraitSpecWorkloadRef)(nil)).Elem()
}

func (i *manualScalerTraitSpecWorkloadRefPtrType) ToManualScalerTraitSpecWorkloadRefPtrOutput() ManualScalerTraitSpecWorkloadRefPtrOutput {
	return i.ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(context.Background())
}

func (i *manualScalerTraitSpecWorkloadRefPtrType) ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecWorkloadRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitSpecWorkloadRefPtrOutput)
}

// WorkloadReference to the workload this trait applies to.
type ManualScalerTraitSpecWorkloadRefOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitSpecWorkloadRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitSpecWorkloadRef)(nil)).Elem()
}

func (o ManualScalerTraitSpecWorkloadRefOutput) ToManualScalerTraitSpecWorkloadRefOutput() ManualScalerTraitSpecWorkloadRefOutput {
	return o
}

func (o ManualScalerTraitSpecWorkloadRefOutput) ToManualScalerTraitSpecWorkloadRefOutputWithContext(ctx context.Context) ManualScalerTraitSpecWorkloadRefOutput {
	return o
}

func (o ManualScalerTraitSpecWorkloadRefOutput) ToManualScalerTraitSpecWorkloadRefPtrOutput() ManualScalerTraitSpecWorkloadRefPtrOutput {
	return o.ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(context.Background())
}

func (o ManualScalerTraitSpecWorkloadRefOutput) ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecWorkloadRefPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitSpecWorkloadRef) *ManualScalerTraitSpecWorkloadRef {
		return &v
	}).(ManualScalerTraitSpecWorkloadRefPtrOutput)
}

// APIVersion of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitSpecWorkloadRef) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitSpecWorkloadRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitSpecWorkloadRef) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitSpecWorkloadRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ManualScalerTraitSpecWorkloadRefPtrOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitSpecWorkloadRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScalerTraitSpecWorkloadRef)(nil)).Elem()
}

func (o ManualScalerTraitSpecWorkloadRefPtrOutput) ToManualScalerTraitSpecWorkloadRefPtrOutput() ManualScalerTraitSpecWorkloadRefPtrOutput {
	return o
}

func (o ManualScalerTraitSpecWorkloadRefPtrOutput) ToManualScalerTraitSpecWorkloadRefPtrOutputWithContext(ctx context.Context) ManualScalerTraitSpecWorkloadRefPtrOutput {
	return o
}

func (o ManualScalerTraitSpecWorkloadRefPtrOutput) Elem() ManualScalerTraitSpecWorkloadRefOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpecWorkloadRef) ManualScalerTraitSpecWorkloadRef { return *v }).(ManualScalerTraitSpecWorkloadRefOutput)
}

// APIVersion of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpecWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Kind of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpecWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpecWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// UID of the referenced object.
func (o ManualScalerTraitSpecWorkloadRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScalerTraitSpecWorkloadRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// A ManualScalerTraitStatus represents the observed state of a ManualScalerTrait.
type ManualScalerTraitStatus struct {
	// Conditions of the resource.
	Conditions []ManualScalerTraitStatusConditions `pulumi:"conditions"`
}

// ManualScalerTraitStatusInput is an input type that accepts ManualScalerTraitStatusArgs and ManualScalerTraitStatusOutput values.
// You can construct a concrete instance of `ManualScalerTraitStatusInput` via:
//
//          ManualScalerTraitStatusArgs{...}
type ManualScalerTraitStatusInput interface {
	pulumi.Input

	ToManualScalerTraitStatusOutput() ManualScalerTraitStatusOutput
	ToManualScalerTraitStatusOutputWithContext(context.Context) ManualScalerTraitStatusOutput
}

// A ManualScalerTraitStatus represents the observed state of a ManualScalerTrait.
type ManualScalerTraitStatusArgs struct {
	// Conditions of the resource.
	Conditions ManualScalerTraitStatusConditionsArrayInput `pulumi:"conditions"`
}

func (ManualScalerTraitStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitStatus)(nil)).Elem()
}

func (i ManualScalerTraitStatusArgs) ToManualScalerTraitStatusOutput() ManualScalerTraitStatusOutput {
	return i.ToManualScalerTraitStatusOutputWithContext(context.Background())
}

func (i ManualScalerTraitStatusArgs) ToManualScalerTraitStatusOutputWithContext(ctx context.Context) ManualScalerTraitStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitStatusOutput)
}

func (i ManualScalerTraitStatusArgs) ToManualScalerTraitStatusPtrOutput() ManualScalerTraitStatusPtrOutput {
	return i.ToManualScalerTraitStatusPtrOutputWithContext(context.Background())
}

func (i ManualScalerTraitStatusArgs) ToManualScalerTraitStatusPtrOutputWithContext(ctx context.Context) ManualScalerTraitStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitStatusOutput).ToManualScalerTraitStatusPtrOutputWithContext(ctx)
}

// ManualScalerTraitStatusPtrInput is an input type that accepts ManualScalerTraitStatusArgs, ManualScalerTraitStatusPtr and ManualScalerTraitStatusPtrOutput values.
// You can construct a concrete instance of `ManualScalerTraitStatusPtrInput` via:
//
//          ManualScalerTraitStatusArgs{...}
//
//  or:
//
//          nil
type ManualScalerTraitStatusPtrInput interface {
	pulumi.Input

	ToManualScalerTraitStatusPtrOutput() ManualScalerTraitStatusPtrOutput
	ToManualScalerTraitStatusPtrOutputWithContext(context.Context) ManualScalerTraitStatusPtrOutput
}

type manualScalerTraitStatusPtrType ManualScalerTraitStatusArgs

func ManualScalerTraitStatusPtr(v *ManualScalerTraitStatusArgs) ManualScalerTraitStatusPtrInput {
	return (*manualScalerTraitStatusPtrType)(v)
}

func (*manualScalerTraitStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScalerTraitStatus)(nil)).Elem()
}

func (i *manualScalerTraitStatusPtrType) ToManualScalerTraitStatusPtrOutput() ManualScalerTraitStatusPtrOutput {
	return i.ToManualScalerTraitStatusPtrOutputWithContext(context.Background())
}

func (i *manualScalerTraitStatusPtrType) ToManualScalerTraitStatusPtrOutputWithContext(ctx context.Context) ManualScalerTraitStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitStatusPtrOutput)
}

// A ManualScalerTraitStatus represents the observed state of a ManualScalerTrait.
type ManualScalerTraitStatusOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitStatus)(nil)).Elem()
}

func (o ManualScalerTraitStatusOutput) ToManualScalerTraitStatusOutput() ManualScalerTraitStatusOutput {
	return o
}

func (o ManualScalerTraitStatusOutput) ToManualScalerTraitStatusOutputWithContext(ctx context.Context) ManualScalerTraitStatusOutput {
	return o
}

func (o ManualScalerTraitStatusOutput) ToManualScalerTraitStatusPtrOutput() ManualScalerTraitStatusPtrOutput {
	return o.ToManualScalerTraitStatusPtrOutputWithContext(context.Background())
}

func (o ManualScalerTraitStatusOutput) ToManualScalerTraitStatusPtrOutputWithContext(ctx context.Context) ManualScalerTraitStatusPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitStatus) *ManualScalerTraitStatus {
		return &v
	}).(ManualScalerTraitStatusPtrOutput)
}

// Conditions of the resource.
func (o ManualScalerTraitStatusOutput) Conditions() ManualScalerTraitStatusConditionsArrayOutput {
	return o.ApplyT(func(v ManualScalerTraitStatus) []ManualScalerTraitStatusConditions { return v.Conditions }).(ManualScalerTraitStatusConditionsArrayOutput)
}

type ManualScalerTraitStatusPtrOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScalerTraitStatus)(nil)).Elem()
}

func (o ManualScalerTraitStatusPtrOutput) ToManualScalerTraitStatusPtrOutput() ManualScalerTraitStatusPtrOutput {
	return o
}

func (o ManualScalerTraitStatusPtrOutput) ToManualScalerTraitStatusPtrOutputWithContext(ctx context.Context) ManualScalerTraitStatusPtrOutput {
	return o
}

func (o ManualScalerTraitStatusPtrOutput) Elem() ManualScalerTraitStatusOutput {
	return o.ApplyT(func(v *ManualScalerTraitStatus) ManualScalerTraitStatus { return *v }).(ManualScalerTraitStatusOutput)
}

// Conditions of the resource.
func (o ManualScalerTraitStatusPtrOutput) Conditions() ManualScalerTraitStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ManualScalerTraitStatus) []ManualScalerTraitStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ManualScalerTraitStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ManualScalerTraitStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// ManualScalerTraitStatusConditionsInput is an input type that accepts ManualScalerTraitStatusConditionsArgs and ManualScalerTraitStatusConditionsOutput values.
// You can construct a concrete instance of `ManualScalerTraitStatusConditionsInput` via:
//
//          ManualScalerTraitStatusConditionsArgs{...}
type ManualScalerTraitStatusConditionsInput interface {
	pulumi.Input

	ToManualScalerTraitStatusConditionsOutput() ManualScalerTraitStatusConditionsOutput
	ToManualScalerTraitStatusConditionsOutputWithContext(context.Context) ManualScalerTraitStatusConditionsOutput
}

// A Condition that may apply to a resource.
type ManualScalerTraitStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManualScalerTraitStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitStatusConditions)(nil)).Elem()
}

func (i ManualScalerTraitStatusConditionsArgs) ToManualScalerTraitStatusConditionsOutput() ManualScalerTraitStatusConditionsOutput {
	return i.ToManualScalerTraitStatusConditionsOutputWithContext(context.Background())
}

func (i ManualScalerTraitStatusConditionsArgs) ToManualScalerTraitStatusConditionsOutputWithContext(ctx context.Context) ManualScalerTraitStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitStatusConditionsOutput)
}

// ManualScalerTraitStatusConditionsArrayInput is an input type that accepts ManualScalerTraitStatusConditionsArray and ManualScalerTraitStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ManualScalerTraitStatusConditionsArrayInput` via:
//
//          ManualScalerTraitStatusConditionsArray{ ManualScalerTraitStatusConditionsArgs{...} }
type ManualScalerTraitStatusConditionsArrayInput interface {
	pulumi.Input

	ToManualScalerTraitStatusConditionsArrayOutput() ManualScalerTraitStatusConditionsArrayOutput
	ToManualScalerTraitStatusConditionsArrayOutputWithContext(context.Context) ManualScalerTraitStatusConditionsArrayOutput
}

type ManualScalerTraitStatusConditionsArray []ManualScalerTraitStatusConditionsInput

func (ManualScalerTraitStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualScalerTraitStatusConditions)(nil)).Elem()
}

func (i ManualScalerTraitStatusConditionsArray) ToManualScalerTraitStatusConditionsArrayOutput() ManualScalerTraitStatusConditionsArrayOutput {
	return i.ToManualScalerTraitStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ManualScalerTraitStatusConditionsArray) ToManualScalerTraitStatusConditionsArrayOutputWithContext(ctx context.Context) ManualScalerTraitStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScalerTraitStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ManualScalerTraitStatusConditionsOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScalerTraitStatusConditions)(nil)).Elem()
}

func (o ManualScalerTraitStatusConditionsOutput) ToManualScalerTraitStatusConditionsOutput() ManualScalerTraitStatusConditionsOutput {
	return o
}

func (o ManualScalerTraitStatusConditionsOutput) ToManualScalerTraitStatusConditionsOutputWithContext(ctx context.Context) ManualScalerTraitStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o ManualScalerTraitStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o ManualScalerTraitStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualScalerTraitStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o ManualScalerTraitStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o ManualScalerTraitStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o ManualScalerTraitStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScalerTraitStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ManualScalerTraitStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ManualScalerTraitStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualScalerTraitStatusConditions)(nil)).Elem()
}

func (o ManualScalerTraitStatusConditionsArrayOutput) ToManualScalerTraitStatusConditionsArrayOutput() ManualScalerTraitStatusConditionsArrayOutput {
	return o
}

func (o ManualScalerTraitStatusConditionsArrayOutput) ToManualScalerTraitStatusConditionsArrayOutputWithContext(ctx context.Context) ManualScalerTraitStatusConditionsArrayOutput {
	return o
}

func (o ManualScalerTraitStatusConditionsArrayOutput) Index(i pulumi.IntInput) ManualScalerTraitStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualScalerTraitStatusConditions {
		return vs[0].([]ManualScalerTraitStatusConditions)[vs[1].(int)]
	}).(ManualScalerTraitStatusConditionsOutput)
}

// A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.
type ScopeDefinitionType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.
	Spec *ScopeDefinitionSpec `pulumi:"spec"`
}

// ScopeDefinitionTypeInput is an input type that accepts ScopeDefinitionTypeArgs and ScopeDefinitionTypeOutput values.
// You can construct a concrete instance of `ScopeDefinitionTypeInput` via:
//
//          ScopeDefinitionTypeArgs{...}
type ScopeDefinitionTypeInput interface {
	pulumi.Input

	ToScopeDefinitionTypeOutput() ScopeDefinitionTypeOutput
	ToScopeDefinitionTypeOutputWithContext(context.Context) ScopeDefinitionTypeOutput
}

// A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.
type ScopeDefinitionTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.
	Spec ScopeDefinitionSpecPtrInput `pulumi:"spec"`
}

func (ScopeDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionType)(nil)).Elem()
}

func (i ScopeDefinitionTypeArgs) ToScopeDefinitionTypeOutput() ScopeDefinitionTypeOutput {
	return i.ToScopeDefinitionTypeOutputWithContext(context.Background())
}

func (i ScopeDefinitionTypeArgs) ToScopeDefinitionTypeOutputWithContext(ctx context.Context) ScopeDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionTypeOutput)
}

// A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.
type ScopeDefinitionTypeOutput struct{ *pulumi.OutputState }

func (ScopeDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionType)(nil)).Elem()
}

func (o ScopeDefinitionTypeOutput) ToScopeDefinitionTypeOutput() ScopeDefinitionTypeOutput {
	return o
}

func (o ScopeDefinitionTypeOutput) ToScopeDefinitionTypeOutputWithContext(ctx context.Context) ScopeDefinitionTypeOutput {
	return o
}

func (o ScopeDefinitionTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeDefinitionType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ScopeDefinitionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScopeDefinitionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ScopeDefinitionTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ScopeDefinitionType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.
func (o ScopeDefinitionTypeOutput) Spec() ScopeDefinitionSpecPtrOutput {
	return o.ApplyT(func(v ScopeDefinitionType) *ScopeDefinitionSpec { return v.Spec }).(ScopeDefinitionSpecPtrOutput)
}

type ScopeDefinitionMetadata struct {
}

// ScopeDefinitionMetadataInput is an input type that accepts ScopeDefinitionMetadataArgs and ScopeDefinitionMetadataOutput values.
// You can construct a concrete instance of `ScopeDefinitionMetadataInput` via:
//
//          ScopeDefinitionMetadataArgs{...}
type ScopeDefinitionMetadataInput interface {
	pulumi.Input

	ToScopeDefinitionMetadataOutput() ScopeDefinitionMetadataOutput
	ToScopeDefinitionMetadataOutputWithContext(context.Context) ScopeDefinitionMetadataOutput
}

type ScopeDefinitionMetadataArgs struct {
}

func (ScopeDefinitionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionMetadata)(nil)).Elem()
}

func (i ScopeDefinitionMetadataArgs) ToScopeDefinitionMetadataOutput() ScopeDefinitionMetadataOutput {
	return i.ToScopeDefinitionMetadataOutputWithContext(context.Background())
}

func (i ScopeDefinitionMetadataArgs) ToScopeDefinitionMetadataOutputWithContext(ctx context.Context) ScopeDefinitionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionMetadataOutput)
}

type ScopeDefinitionMetadataOutput struct{ *pulumi.OutputState }

func (ScopeDefinitionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionMetadata)(nil)).Elem()
}

func (o ScopeDefinitionMetadataOutput) ToScopeDefinitionMetadataOutput() ScopeDefinitionMetadataOutput {
	return o
}

func (o ScopeDefinitionMetadataOutput) ToScopeDefinitionMetadataOutputWithContext(ctx context.Context) ScopeDefinitionMetadataOutput {
	return o
}

// A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.
type ScopeDefinitionSpec struct {
	// AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.
	AllowComponentOverlap bool `pulumi:"allowComponentOverlap"`
	// Reference to the CustomResourceDefinition that defines this scope kind.
	DefinitionRef ScopeDefinitionSpecDefinitionRef `pulumi:"definitionRef"`
}

// ScopeDefinitionSpecInput is an input type that accepts ScopeDefinitionSpecArgs and ScopeDefinitionSpecOutput values.
// You can construct a concrete instance of `ScopeDefinitionSpecInput` via:
//
//          ScopeDefinitionSpecArgs{...}
type ScopeDefinitionSpecInput interface {
	pulumi.Input

	ToScopeDefinitionSpecOutput() ScopeDefinitionSpecOutput
	ToScopeDefinitionSpecOutputWithContext(context.Context) ScopeDefinitionSpecOutput
}

// A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.
type ScopeDefinitionSpecArgs struct {
	// AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.
	AllowComponentOverlap pulumi.BoolInput `pulumi:"allowComponentOverlap"`
	// Reference to the CustomResourceDefinition that defines this scope kind.
	DefinitionRef ScopeDefinitionSpecDefinitionRefInput `pulumi:"definitionRef"`
}

func (ScopeDefinitionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionSpec)(nil)).Elem()
}

func (i ScopeDefinitionSpecArgs) ToScopeDefinitionSpecOutput() ScopeDefinitionSpecOutput {
	return i.ToScopeDefinitionSpecOutputWithContext(context.Background())
}

func (i ScopeDefinitionSpecArgs) ToScopeDefinitionSpecOutputWithContext(ctx context.Context) ScopeDefinitionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionSpecOutput)
}

func (i ScopeDefinitionSpecArgs) ToScopeDefinitionSpecPtrOutput() ScopeDefinitionSpecPtrOutput {
	return i.ToScopeDefinitionSpecPtrOutputWithContext(context.Background())
}

func (i ScopeDefinitionSpecArgs) ToScopeDefinitionSpecPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionSpecOutput).ToScopeDefinitionSpecPtrOutputWithContext(ctx)
}

// ScopeDefinitionSpecPtrInput is an input type that accepts ScopeDefinitionSpecArgs, ScopeDefinitionSpecPtr and ScopeDefinitionSpecPtrOutput values.
// You can construct a concrete instance of `ScopeDefinitionSpecPtrInput` via:
//
//          ScopeDefinitionSpecArgs{...}
//
//  or:
//
//          nil
type ScopeDefinitionSpecPtrInput interface {
	pulumi.Input

	ToScopeDefinitionSpecPtrOutput() ScopeDefinitionSpecPtrOutput
	ToScopeDefinitionSpecPtrOutputWithContext(context.Context) ScopeDefinitionSpecPtrOutput
}

type scopeDefinitionSpecPtrType ScopeDefinitionSpecArgs

func ScopeDefinitionSpecPtr(v *ScopeDefinitionSpecArgs) ScopeDefinitionSpecPtrInput {
	return (*scopeDefinitionSpecPtrType)(v)
}

func (*scopeDefinitionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeDefinitionSpec)(nil)).Elem()
}

func (i *scopeDefinitionSpecPtrType) ToScopeDefinitionSpecPtrOutput() ScopeDefinitionSpecPtrOutput {
	return i.ToScopeDefinitionSpecPtrOutputWithContext(context.Background())
}

func (i *scopeDefinitionSpecPtrType) ToScopeDefinitionSpecPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionSpecPtrOutput)
}

// A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.
type ScopeDefinitionSpecOutput struct{ *pulumi.OutputState }

func (ScopeDefinitionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionSpec)(nil)).Elem()
}

func (o ScopeDefinitionSpecOutput) ToScopeDefinitionSpecOutput() ScopeDefinitionSpecOutput {
	return o
}

func (o ScopeDefinitionSpecOutput) ToScopeDefinitionSpecOutputWithContext(ctx context.Context) ScopeDefinitionSpecOutput {
	return o
}

func (o ScopeDefinitionSpecOutput) ToScopeDefinitionSpecPtrOutput() ScopeDefinitionSpecPtrOutput {
	return o.ToScopeDefinitionSpecPtrOutputWithContext(context.Background())
}

func (o ScopeDefinitionSpecOutput) ToScopeDefinitionSpecPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecPtrOutput {
	return o.ApplyT(func(v ScopeDefinitionSpec) *ScopeDefinitionSpec {
		return &v
	}).(ScopeDefinitionSpecPtrOutput)
}

// AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.
func (o ScopeDefinitionSpecOutput) AllowComponentOverlap() pulumi.BoolOutput {
	return o.ApplyT(func(v ScopeDefinitionSpec) bool { return v.AllowComponentOverlap }).(pulumi.BoolOutput)
}

// Reference to the CustomResourceDefinition that defines this scope kind.
func (o ScopeDefinitionSpecOutput) DefinitionRef() ScopeDefinitionSpecDefinitionRefOutput {
	return o.ApplyT(func(v ScopeDefinitionSpec) ScopeDefinitionSpecDefinitionRef { return v.DefinitionRef }).(ScopeDefinitionSpecDefinitionRefOutput)
}

type ScopeDefinitionSpecPtrOutput struct{ *pulumi.OutputState }

func (ScopeDefinitionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeDefinitionSpec)(nil)).Elem()
}

func (o ScopeDefinitionSpecPtrOutput) ToScopeDefinitionSpecPtrOutput() ScopeDefinitionSpecPtrOutput {
	return o
}

func (o ScopeDefinitionSpecPtrOutput) ToScopeDefinitionSpecPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecPtrOutput {
	return o
}

func (o ScopeDefinitionSpecPtrOutput) Elem() ScopeDefinitionSpecOutput {
	return o.ApplyT(func(v *ScopeDefinitionSpec) ScopeDefinitionSpec { return *v }).(ScopeDefinitionSpecOutput)
}

// AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.
func (o ScopeDefinitionSpecPtrOutput) AllowComponentOverlap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScopeDefinitionSpec) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowComponentOverlap
	}).(pulumi.BoolPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this scope kind.
func (o ScopeDefinitionSpecPtrOutput) DefinitionRef() ScopeDefinitionSpecDefinitionRefPtrOutput {
	return o.ApplyT(func(v *ScopeDefinitionSpec) *ScopeDefinitionSpecDefinitionRef {
		if v == nil {
			return nil
		}
		return &v.DefinitionRef
	}).(ScopeDefinitionSpecDefinitionRefPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this scope kind.
type ScopeDefinitionSpecDefinitionRef struct {
	// Name of the referenced CustomResourceDefinition.
	Name string `pulumi:"name"`
}

// ScopeDefinitionSpecDefinitionRefInput is an input type that accepts ScopeDefinitionSpecDefinitionRefArgs and ScopeDefinitionSpecDefinitionRefOutput values.
// You can construct a concrete instance of `ScopeDefinitionSpecDefinitionRefInput` via:
//
//          ScopeDefinitionSpecDefinitionRefArgs{...}
type ScopeDefinitionSpecDefinitionRefInput interface {
	pulumi.Input

	ToScopeDefinitionSpecDefinitionRefOutput() ScopeDefinitionSpecDefinitionRefOutput
	ToScopeDefinitionSpecDefinitionRefOutputWithContext(context.Context) ScopeDefinitionSpecDefinitionRefOutput
}

// Reference to the CustomResourceDefinition that defines this scope kind.
type ScopeDefinitionSpecDefinitionRefArgs struct {
	// Name of the referenced CustomResourceDefinition.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ScopeDefinitionSpecDefinitionRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (i ScopeDefinitionSpecDefinitionRefArgs) ToScopeDefinitionSpecDefinitionRefOutput() ScopeDefinitionSpecDefinitionRefOutput {
	return i.ToScopeDefinitionSpecDefinitionRefOutputWithContext(context.Background())
}

func (i ScopeDefinitionSpecDefinitionRefArgs) ToScopeDefinitionSpecDefinitionRefOutputWithContext(ctx context.Context) ScopeDefinitionSpecDefinitionRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionSpecDefinitionRefOutput)
}

func (i ScopeDefinitionSpecDefinitionRefArgs) ToScopeDefinitionSpecDefinitionRefPtrOutput() ScopeDefinitionSpecDefinitionRefPtrOutput {
	return i.ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (i ScopeDefinitionSpecDefinitionRefArgs) ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecDefinitionRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionSpecDefinitionRefOutput).ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(ctx)
}

// ScopeDefinitionSpecDefinitionRefPtrInput is an input type that accepts ScopeDefinitionSpecDefinitionRefArgs, ScopeDefinitionSpecDefinitionRefPtr and ScopeDefinitionSpecDefinitionRefPtrOutput values.
// You can construct a concrete instance of `ScopeDefinitionSpecDefinitionRefPtrInput` via:
//
//          ScopeDefinitionSpecDefinitionRefArgs{...}
//
//  or:
//
//          nil
type ScopeDefinitionSpecDefinitionRefPtrInput interface {
	pulumi.Input

	ToScopeDefinitionSpecDefinitionRefPtrOutput() ScopeDefinitionSpecDefinitionRefPtrOutput
	ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(context.Context) ScopeDefinitionSpecDefinitionRefPtrOutput
}

type scopeDefinitionSpecDefinitionRefPtrType ScopeDefinitionSpecDefinitionRefArgs

func ScopeDefinitionSpecDefinitionRefPtr(v *ScopeDefinitionSpecDefinitionRefArgs) ScopeDefinitionSpecDefinitionRefPtrInput {
	return (*scopeDefinitionSpecDefinitionRefPtrType)(v)
}

func (*scopeDefinitionSpecDefinitionRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (i *scopeDefinitionSpecDefinitionRefPtrType) ToScopeDefinitionSpecDefinitionRefPtrOutput() ScopeDefinitionSpecDefinitionRefPtrOutput {
	return i.ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (i *scopeDefinitionSpecDefinitionRefPtrType) ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecDefinitionRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeDefinitionSpecDefinitionRefPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this scope kind.
type ScopeDefinitionSpecDefinitionRefOutput struct{ *pulumi.OutputState }

func (ScopeDefinitionSpecDefinitionRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (o ScopeDefinitionSpecDefinitionRefOutput) ToScopeDefinitionSpecDefinitionRefOutput() ScopeDefinitionSpecDefinitionRefOutput {
	return o
}

func (o ScopeDefinitionSpecDefinitionRefOutput) ToScopeDefinitionSpecDefinitionRefOutputWithContext(ctx context.Context) ScopeDefinitionSpecDefinitionRefOutput {
	return o
}

func (o ScopeDefinitionSpecDefinitionRefOutput) ToScopeDefinitionSpecDefinitionRefPtrOutput() ScopeDefinitionSpecDefinitionRefPtrOutput {
	return o.ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (o ScopeDefinitionSpecDefinitionRefOutput) ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecDefinitionRefPtrOutput {
	return o.ApplyT(func(v ScopeDefinitionSpecDefinitionRef) *ScopeDefinitionSpecDefinitionRef {
		return &v
	}).(ScopeDefinitionSpecDefinitionRefPtrOutput)
}

// Name of the referenced CustomResourceDefinition.
func (o ScopeDefinitionSpecDefinitionRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScopeDefinitionSpecDefinitionRef) string { return v.Name }).(pulumi.StringOutput)
}

type ScopeDefinitionSpecDefinitionRefPtrOutput struct{ *pulumi.OutputState }

func (ScopeDefinitionSpecDefinitionRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (o ScopeDefinitionSpecDefinitionRefPtrOutput) ToScopeDefinitionSpecDefinitionRefPtrOutput() ScopeDefinitionSpecDefinitionRefPtrOutput {
	return o
}

func (o ScopeDefinitionSpecDefinitionRefPtrOutput) ToScopeDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) ScopeDefinitionSpecDefinitionRefPtrOutput {
	return o
}

func (o ScopeDefinitionSpecDefinitionRefPtrOutput) Elem() ScopeDefinitionSpecDefinitionRefOutput {
	return o.ApplyT(func(v *ScopeDefinitionSpecDefinitionRef) ScopeDefinitionSpecDefinitionRef { return *v }).(ScopeDefinitionSpecDefinitionRefOutput)
}

// Name of the referenced CustomResourceDefinition.
func (o ScopeDefinitionSpecDefinitionRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScopeDefinitionSpecDefinitionRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.
type TraitDefinitionType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A TraitDefinitionSpec defines the desired state of a TraitDefinition.
	Spec *TraitDefinitionSpec `pulumi:"spec"`
}

// TraitDefinitionTypeInput is an input type that accepts TraitDefinitionTypeArgs and TraitDefinitionTypeOutput values.
// You can construct a concrete instance of `TraitDefinitionTypeInput` via:
//
//          TraitDefinitionTypeArgs{...}
type TraitDefinitionTypeInput interface {
	pulumi.Input

	ToTraitDefinitionTypeOutput() TraitDefinitionTypeOutput
	ToTraitDefinitionTypeOutputWithContext(context.Context) TraitDefinitionTypeOutput
}

// A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.
type TraitDefinitionTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A TraitDefinitionSpec defines the desired state of a TraitDefinition.
	Spec TraitDefinitionSpecPtrInput `pulumi:"spec"`
}

func (TraitDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionType)(nil)).Elem()
}

func (i TraitDefinitionTypeArgs) ToTraitDefinitionTypeOutput() TraitDefinitionTypeOutput {
	return i.ToTraitDefinitionTypeOutputWithContext(context.Background())
}

func (i TraitDefinitionTypeArgs) ToTraitDefinitionTypeOutputWithContext(ctx context.Context) TraitDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionTypeOutput)
}

// A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.
type TraitDefinitionTypeOutput struct{ *pulumi.OutputState }

func (TraitDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionType)(nil)).Elem()
}

func (o TraitDefinitionTypeOutput) ToTraitDefinitionTypeOutput() TraitDefinitionTypeOutput {
	return o
}

func (o TraitDefinitionTypeOutput) ToTraitDefinitionTypeOutputWithContext(ctx context.Context) TraitDefinitionTypeOutput {
	return o
}

func (o TraitDefinitionTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraitDefinitionType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TraitDefinitionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraitDefinitionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TraitDefinitionTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v TraitDefinitionType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A TraitDefinitionSpec defines the desired state of a TraitDefinition.
func (o TraitDefinitionTypeOutput) Spec() TraitDefinitionSpecPtrOutput {
	return o.ApplyT(func(v TraitDefinitionType) *TraitDefinitionSpec { return v.Spec }).(TraitDefinitionSpecPtrOutput)
}

type TraitDefinitionMetadata struct {
}

// TraitDefinitionMetadataInput is an input type that accepts TraitDefinitionMetadataArgs and TraitDefinitionMetadataOutput values.
// You can construct a concrete instance of `TraitDefinitionMetadataInput` via:
//
//          TraitDefinitionMetadataArgs{...}
type TraitDefinitionMetadataInput interface {
	pulumi.Input

	ToTraitDefinitionMetadataOutput() TraitDefinitionMetadataOutput
	ToTraitDefinitionMetadataOutputWithContext(context.Context) TraitDefinitionMetadataOutput
}

type TraitDefinitionMetadataArgs struct {
}

func (TraitDefinitionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionMetadata)(nil)).Elem()
}

func (i TraitDefinitionMetadataArgs) ToTraitDefinitionMetadataOutput() TraitDefinitionMetadataOutput {
	return i.ToTraitDefinitionMetadataOutputWithContext(context.Background())
}

func (i TraitDefinitionMetadataArgs) ToTraitDefinitionMetadataOutputWithContext(ctx context.Context) TraitDefinitionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionMetadataOutput)
}

type TraitDefinitionMetadataOutput struct{ *pulumi.OutputState }

func (TraitDefinitionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionMetadata)(nil)).Elem()
}

func (o TraitDefinitionMetadataOutput) ToTraitDefinitionMetadataOutput() TraitDefinitionMetadataOutput {
	return o
}

func (o TraitDefinitionMetadataOutput) ToTraitDefinitionMetadataOutputWithContext(ctx context.Context) TraitDefinitionMetadataOutput {
	return o
}

// A TraitDefinitionSpec defines the desired state of a TraitDefinition.
type TraitDefinitionSpec struct {
	// AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
	AppliesToWorkloads []string `pulumi:"appliesToWorkloads"`
	// Reference to the CustomResourceDefinition that defines this trait kind.
	DefinitionRef TraitDefinitionSpecDefinitionRef `pulumi:"definitionRef"`
}

// TraitDefinitionSpecInput is an input type that accepts TraitDefinitionSpecArgs and TraitDefinitionSpecOutput values.
// You can construct a concrete instance of `TraitDefinitionSpecInput` via:
//
//          TraitDefinitionSpecArgs{...}
type TraitDefinitionSpecInput interface {
	pulumi.Input

	ToTraitDefinitionSpecOutput() TraitDefinitionSpecOutput
	ToTraitDefinitionSpecOutputWithContext(context.Context) TraitDefinitionSpecOutput
}

// A TraitDefinitionSpec defines the desired state of a TraitDefinition.
type TraitDefinitionSpecArgs struct {
	// AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
	AppliesToWorkloads pulumi.StringArrayInput `pulumi:"appliesToWorkloads"`
	// Reference to the CustomResourceDefinition that defines this trait kind.
	DefinitionRef TraitDefinitionSpecDefinitionRefInput `pulumi:"definitionRef"`
}

func (TraitDefinitionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionSpec)(nil)).Elem()
}

func (i TraitDefinitionSpecArgs) ToTraitDefinitionSpecOutput() TraitDefinitionSpecOutput {
	return i.ToTraitDefinitionSpecOutputWithContext(context.Background())
}

func (i TraitDefinitionSpecArgs) ToTraitDefinitionSpecOutputWithContext(ctx context.Context) TraitDefinitionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionSpecOutput)
}

func (i TraitDefinitionSpecArgs) ToTraitDefinitionSpecPtrOutput() TraitDefinitionSpecPtrOutput {
	return i.ToTraitDefinitionSpecPtrOutputWithContext(context.Background())
}

func (i TraitDefinitionSpecArgs) ToTraitDefinitionSpecPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionSpecOutput).ToTraitDefinitionSpecPtrOutputWithContext(ctx)
}

// TraitDefinitionSpecPtrInput is an input type that accepts TraitDefinitionSpecArgs, TraitDefinitionSpecPtr and TraitDefinitionSpecPtrOutput values.
// You can construct a concrete instance of `TraitDefinitionSpecPtrInput` via:
//
//          TraitDefinitionSpecArgs{...}
//
//  or:
//
//          nil
type TraitDefinitionSpecPtrInput interface {
	pulumi.Input

	ToTraitDefinitionSpecPtrOutput() TraitDefinitionSpecPtrOutput
	ToTraitDefinitionSpecPtrOutputWithContext(context.Context) TraitDefinitionSpecPtrOutput
}

type traitDefinitionSpecPtrType TraitDefinitionSpecArgs

func TraitDefinitionSpecPtr(v *TraitDefinitionSpecArgs) TraitDefinitionSpecPtrInput {
	return (*traitDefinitionSpecPtrType)(v)
}

func (*traitDefinitionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraitDefinitionSpec)(nil)).Elem()
}

func (i *traitDefinitionSpecPtrType) ToTraitDefinitionSpecPtrOutput() TraitDefinitionSpecPtrOutput {
	return i.ToTraitDefinitionSpecPtrOutputWithContext(context.Background())
}

func (i *traitDefinitionSpecPtrType) ToTraitDefinitionSpecPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionSpecPtrOutput)
}

// A TraitDefinitionSpec defines the desired state of a TraitDefinition.
type TraitDefinitionSpecOutput struct{ *pulumi.OutputState }

func (TraitDefinitionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionSpec)(nil)).Elem()
}

func (o TraitDefinitionSpecOutput) ToTraitDefinitionSpecOutput() TraitDefinitionSpecOutput {
	return o
}

func (o TraitDefinitionSpecOutput) ToTraitDefinitionSpecOutputWithContext(ctx context.Context) TraitDefinitionSpecOutput {
	return o
}

func (o TraitDefinitionSpecOutput) ToTraitDefinitionSpecPtrOutput() TraitDefinitionSpecPtrOutput {
	return o.ToTraitDefinitionSpecPtrOutputWithContext(context.Background())
}

func (o TraitDefinitionSpecOutput) ToTraitDefinitionSpecPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecPtrOutput {
	return o.ApplyT(func(v TraitDefinitionSpec) *TraitDefinitionSpec {
		return &v
	}).(TraitDefinitionSpecPtrOutput)
}

// AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
func (o TraitDefinitionSpecOutput) AppliesToWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TraitDefinitionSpec) []string { return v.AppliesToWorkloads }).(pulumi.StringArrayOutput)
}

// Reference to the CustomResourceDefinition that defines this trait kind.
func (o TraitDefinitionSpecOutput) DefinitionRef() TraitDefinitionSpecDefinitionRefOutput {
	return o.ApplyT(func(v TraitDefinitionSpec) TraitDefinitionSpecDefinitionRef { return v.DefinitionRef }).(TraitDefinitionSpecDefinitionRefOutput)
}

type TraitDefinitionSpecPtrOutput struct{ *pulumi.OutputState }

func (TraitDefinitionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraitDefinitionSpec)(nil)).Elem()
}

func (o TraitDefinitionSpecPtrOutput) ToTraitDefinitionSpecPtrOutput() TraitDefinitionSpecPtrOutput {
	return o
}

func (o TraitDefinitionSpecPtrOutput) ToTraitDefinitionSpecPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecPtrOutput {
	return o
}

func (o TraitDefinitionSpecPtrOutput) Elem() TraitDefinitionSpecOutput {
	return o.ApplyT(func(v *TraitDefinitionSpec) TraitDefinitionSpec { return *v }).(TraitDefinitionSpecOutput)
}

// AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
func (o TraitDefinitionSpecPtrOutput) AppliesToWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TraitDefinitionSpec) []string {
		if v == nil {
			return nil
		}
		return v.AppliesToWorkloads
	}).(pulumi.StringArrayOutput)
}

// Reference to the CustomResourceDefinition that defines this trait kind.
func (o TraitDefinitionSpecPtrOutput) DefinitionRef() TraitDefinitionSpecDefinitionRefPtrOutput {
	return o.ApplyT(func(v *TraitDefinitionSpec) *TraitDefinitionSpecDefinitionRef {
		if v == nil {
			return nil
		}
		return &v.DefinitionRef
	}).(TraitDefinitionSpecDefinitionRefPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this trait kind.
type TraitDefinitionSpecDefinitionRef struct {
	// Name of the referenced CustomResourceDefinition.
	Name string `pulumi:"name"`
}

// TraitDefinitionSpecDefinitionRefInput is an input type that accepts TraitDefinitionSpecDefinitionRefArgs and TraitDefinitionSpecDefinitionRefOutput values.
// You can construct a concrete instance of `TraitDefinitionSpecDefinitionRefInput` via:
//
//          TraitDefinitionSpecDefinitionRefArgs{...}
type TraitDefinitionSpecDefinitionRefInput interface {
	pulumi.Input

	ToTraitDefinitionSpecDefinitionRefOutput() TraitDefinitionSpecDefinitionRefOutput
	ToTraitDefinitionSpecDefinitionRefOutputWithContext(context.Context) TraitDefinitionSpecDefinitionRefOutput
}

// Reference to the CustomResourceDefinition that defines this trait kind.
type TraitDefinitionSpecDefinitionRefArgs struct {
	// Name of the referenced CustomResourceDefinition.
	Name pulumi.StringInput `pulumi:"name"`
}

func (TraitDefinitionSpecDefinitionRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (i TraitDefinitionSpecDefinitionRefArgs) ToTraitDefinitionSpecDefinitionRefOutput() TraitDefinitionSpecDefinitionRefOutput {
	return i.ToTraitDefinitionSpecDefinitionRefOutputWithContext(context.Background())
}

func (i TraitDefinitionSpecDefinitionRefArgs) ToTraitDefinitionSpecDefinitionRefOutputWithContext(ctx context.Context) TraitDefinitionSpecDefinitionRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionSpecDefinitionRefOutput)
}

func (i TraitDefinitionSpecDefinitionRefArgs) ToTraitDefinitionSpecDefinitionRefPtrOutput() TraitDefinitionSpecDefinitionRefPtrOutput {
	return i.ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (i TraitDefinitionSpecDefinitionRefArgs) ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecDefinitionRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionSpecDefinitionRefOutput).ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(ctx)
}

// TraitDefinitionSpecDefinitionRefPtrInput is an input type that accepts TraitDefinitionSpecDefinitionRefArgs, TraitDefinitionSpecDefinitionRefPtr and TraitDefinitionSpecDefinitionRefPtrOutput values.
// You can construct a concrete instance of `TraitDefinitionSpecDefinitionRefPtrInput` via:
//
//          TraitDefinitionSpecDefinitionRefArgs{...}
//
//  or:
//
//          nil
type TraitDefinitionSpecDefinitionRefPtrInput interface {
	pulumi.Input

	ToTraitDefinitionSpecDefinitionRefPtrOutput() TraitDefinitionSpecDefinitionRefPtrOutput
	ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(context.Context) TraitDefinitionSpecDefinitionRefPtrOutput
}

type traitDefinitionSpecDefinitionRefPtrType TraitDefinitionSpecDefinitionRefArgs

func TraitDefinitionSpecDefinitionRefPtr(v *TraitDefinitionSpecDefinitionRefArgs) TraitDefinitionSpecDefinitionRefPtrInput {
	return (*traitDefinitionSpecDefinitionRefPtrType)(v)
}

func (*traitDefinitionSpecDefinitionRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraitDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (i *traitDefinitionSpecDefinitionRefPtrType) ToTraitDefinitionSpecDefinitionRefPtrOutput() TraitDefinitionSpecDefinitionRefPtrOutput {
	return i.ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (i *traitDefinitionSpecDefinitionRefPtrType) ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecDefinitionRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraitDefinitionSpecDefinitionRefPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this trait kind.
type TraitDefinitionSpecDefinitionRefOutput struct{ *pulumi.OutputState }

func (TraitDefinitionSpecDefinitionRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraitDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (o TraitDefinitionSpecDefinitionRefOutput) ToTraitDefinitionSpecDefinitionRefOutput() TraitDefinitionSpecDefinitionRefOutput {
	return o
}

func (o TraitDefinitionSpecDefinitionRefOutput) ToTraitDefinitionSpecDefinitionRefOutputWithContext(ctx context.Context) TraitDefinitionSpecDefinitionRefOutput {
	return o
}

func (o TraitDefinitionSpecDefinitionRefOutput) ToTraitDefinitionSpecDefinitionRefPtrOutput() TraitDefinitionSpecDefinitionRefPtrOutput {
	return o.ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (o TraitDefinitionSpecDefinitionRefOutput) ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecDefinitionRefPtrOutput {
	return o.ApplyT(func(v TraitDefinitionSpecDefinitionRef) *TraitDefinitionSpecDefinitionRef {
		return &v
	}).(TraitDefinitionSpecDefinitionRefPtrOutput)
}

// Name of the referenced CustomResourceDefinition.
func (o TraitDefinitionSpecDefinitionRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TraitDefinitionSpecDefinitionRef) string { return v.Name }).(pulumi.StringOutput)
}

type TraitDefinitionSpecDefinitionRefPtrOutput struct{ *pulumi.OutputState }

func (TraitDefinitionSpecDefinitionRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraitDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (o TraitDefinitionSpecDefinitionRefPtrOutput) ToTraitDefinitionSpecDefinitionRefPtrOutput() TraitDefinitionSpecDefinitionRefPtrOutput {
	return o
}

func (o TraitDefinitionSpecDefinitionRefPtrOutput) ToTraitDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) TraitDefinitionSpecDefinitionRefPtrOutput {
	return o
}

func (o TraitDefinitionSpecDefinitionRefPtrOutput) Elem() TraitDefinitionSpecDefinitionRefOutput {
	return o.ApplyT(func(v *TraitDefinitionSpecDefinitionRef) TraitDefinitionSpecDefinitionRef { return *v }).(TraitDefinitionSpecDefinitionRefOutput)
}

// Name of the referenced CustomResourceDefinition.
func (o TraitDefinitionSpecDefinitionRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraitDefinitionSpecDefinitionRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.
type WorkloadDefinitionType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.
	Spec *WorkloadDefinitionSpec `pulumi:"spec"`
}

// WorkloadDefinitionTypeInput is an input type that accepts WorkloadDefinitionTypeArgs and WorkloadDefinitionTypeOutput values.
// You can construct a concrete instance of `WorkloadDefinitionTypeInput` via:
//
//          WorkloadDefinitionTypeArgs{...}
type WorkloadDefinitionTypeInput interface {
	pulumi.Input

	ToWorkloadDefinitionTypeOutput() WorkloadDefinitionTypeOutput
	ToWorkloadDefinitionTypeOutputWithContext(context.Context) WorkloadDefinitionTypeOutput
}

// A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.
type WorkloadDefinitionTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.
	Spec WorkloadDefinitionSpecPtrInput `pulumi:"spec"`
}

func (WorkloadDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionType)(nil)).Elem()
}

func (i WorkloadDefinitionTypeArgs) ToWorkloadDefinitionTypeOutput() WorkloadDefinitionTypeOutput {
	return i.ToWorkloadDefinitionTypeOutputWithContext(context.Background())
}

func (i WorkloadDefinitionTypeArgs) ToWorkloadDefinitionTypeOutputWithContext(ctx context.Context) WorkloadDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionTypeOutput)
}

// A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.
type WorkloadDefinitionTypeOutput struct{ *pulumi.OutputState }

func (WorkloadDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionType)(nil)).Elem()
}

func (o WorkloadDefinitionTypeOutput) ToWorkloadDefinitionTypeOutput() WorkloadDefinitionTypeOutput {
	return o
}

func (o WorkloadDefinitionTypeOutput) ToWorkloadDefinitionTypeOutputWithContext(ctx context.Context) WorkloadDefinitionTypeOutput {
	return o
}

func (o WorkloadDefinitionTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadDefinitionType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o WorkloadDefinitionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadDefinitionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o WorkloadDefinitionTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v WorkloadDefinitionType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.
func (o WorkloadDefinitionTypeOutput) Spec() WorkloadDefinitionSpecPtrOutput {
	return o.ApplyT(func(v WorkloadDefinitionType) *WorkloadDefinitionSpec { return v.Spec }).(WorkloadDefinitionSpecPtrOutput)
}

type WorkloadDefinitionMetadata struct {
}

// WorkloadDefinitionMetadataInput is an input type that accepts WorkloadDefinitionMetadataArgs and WorkloadDefinitionMetadataOutput values.
// You can construct a concrete instance of `WorkloadDefinitionMetadataInput` via:
//
//          WorkloadDefinitionMetadataArgs{...}
type WorkloadDefinitionMetadataInput interface {
	pulumi.Input

	ToWorkloadDefinitionMetadataOutput() WorkloadDefinitionMetadataOutput
	ToWorkloadDefinitionMetadataOutputWithContext(context.Context) WorkloadDefinitionMetadataOutput
}

type WorkloadDefinitionMetadataArgs struct {
}

func (WorkloadDefinitionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionMetadata)(nil)).Elem()
}

func (i WorkloadDefinitionMetadataArgs) ToWorkloadDefinitionMetadataOutput() WorkloadDefinitionMetadataOutput {
	return i.ToWorkloadDefinitionMetadataOutputWithContext(context.Background())
}

func (i WorkloadDefinitionMetadataArgs) ToWorkloadDefinitionMetadataOutputWithContext(ctx context.Context) WorkloadDefinitionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionMetadataOutput)
}

type WorkloadDefinitionMetadataOutput struct{ *pulumi.OutputState }

func (WorkloadDefinitionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionMetadata)(nil)).Elem()
}

func (o WorkloadDefinitionMetadataOutput) ToWorkloadDefinitionMetadataOutput() WorkloadDefinitionMetadataOutput {
	return o
}

func (o WorkloadDefinitionMetadataOutput) ToWorkloadDefinitionMetadataOutputWithContext(ctx context.Context) WorkloadDefinitionMetadataOutput {
	return o
}

// A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.
type WorkloadDefinitionSpec struct {
	// Reference to the CustomResourceDefinition that defines this workload kind.
	DefinitionRef WorkloadDefinitionSpecDefinitionRef `pulumi:"definitionRef"`
}

// WorkloadDefinitionSpecInput is an input type that accepts WorkloadDefinitionSpecArgs and WorkloadDefinitionSpecOutput values.
// You can construct a concrete instance of `WorkloadDefinitionSpecInput` via:
//
//          WorkloadDefinitionSpecArgs{...}
type WorkloadDefinitionSpecInput interface {
	pulumi.Input

	ToWorkloadDefinitionSpecOutput() WorkloadDefinitionSpecOutput
	ToWorkloadDefinitionSpecOutputWithContext(context.Context) WorkloadDefinitionSpecOutput
}

// A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.
type WorkloadDefinitionSpecArgs struct {
	// Reference to the CustomResourceDefinition that defines this workload kind.
	DefinitionRef WorkloadDefinitionSpecDefinitionRefInput `pulumi:"definitionRef"`
}

func (WorkloadDefinitionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionSpec)(nil)).Elem()
}

func (i WorkloadDefinitionSpecArgs) ToWorkloadDefinitionSpecOutput() WorkloadDefinitionSpecOutput {
	return i.ToWorkloadDefinitionSpecOutputWithContext(context.Background())
}

func (i WorkloadDefinitionSpecArgs) ToWorkloadDefinitionSpecOutputWithContext(ctx context.Context) WorkloadDefinitionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionSpecOutput)
}

func (i WorkloadDefinitionSpecArgs) ToWorkloadDefinitionSpecPtrOutput() WorkloadDefinitionSpecPtrOutput {
	return i.ToWorkloadDefinitionSpecPtrOutputWithContext(context.Background())
}

func (i WorkloadDefinitionSpecArgs) ToWorkloadDefinitionSpecPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionSpecOutput).ToWorkloadDefinitionSpecPtrOutputWithContext(ctx)
}

// WorkloadDefinitionSpecPtrInput is an input type that accepts WorkloadDefinitionSpecArgs, WorkloadDefinitionSpecPtr and WorkloadDefinitionSpecPtrOutput values.
// You can construct a concrete instance of `WorkloadDefinitionSpecPtrInput` via:
//
//          WorkloadDefinitionSpecArgs{...}
//
//  or:
//
//          nil
type WorkloadDefinitionSpecPtrInput interface {
	pulumi.Input

	ToWorkloadDefinitionSpecPtrOutput() WorkloadDefinitionSpecPtrOutput
	ToWorkloadDefinitionSpecPtrOutputWithContext(context.Context) WorkloadDefinitionSpecPtrOutput
}

type workloadDefinitionSpecPtrType WorkloadDefinitionSpecArgs

func WorkloadDefinitionSpecPtr(v *WorkloadDefinitionSpecArgs) WorkloadDefinitionSpecPtrInput {
	return (*workloadDefinitionSpecPtrType)(v)
}

func (*workloadDefinitionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDefinitionSpec)(nil)).Elem()
}

func (i *workloadDefinitionSpecPtrType) ToWorkloadDefinitionSpecPtrOutput() WorkloadDefinitionSpecPtrOutput {
	return i.ToWorkloadDefinitionSpecPtrOutputWithContext(context.Background())
}

func (i *workloadDefinitionSpecPtrType) ToWorkloadDefinitionSpecPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionSpecPtrOutput)
}

// A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.
type WorkloadDefinitionSpecOutput struct{ *pulumi.OutputState }

func (WorkloadDefinitionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionSpec)(nil)).Elem()
}

func (o WorkloadDefinitionSpecOutput) ToWorkloadDefinitionSpecOutput() WorkloadDefinitionSpecOutput {
	return o
}

func (o WorkloadDefinitionSpecOutput) ToWorkloadDefinitionSpecOutputWithContext(ctx context.Context) WorkloadDefinitionSpecOutput {
	return o
}

func (o WorkloadDefinitionSpecOutput) ToWorkloadDefinitionSpecPtrOutput() WorkloadDefinitionSpecPtrOutput {
	return o.ToWorkloadDefinitionSpecPtrOutputWithContext(context.Background())
}

func (o WorkloadDefinitionSpecOutput) ToWorkloadDefinitionSpecPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecPtrOutput {
	return o.ApplyT(func(v WorkloadDefinitionSpec) *WorkloadDefinitionSpec {
		return &v
	}).(WorkloadDefinitionSpecPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this workload kind.
func (o WorkloadDefinitionSpecOutput) DefinitionRef() WorkloadDefinitionSpecDefinitionRefOutput {
	return o.ApplyT(func(v WorkloadDefinitionSpec) WorkloadDefinitionSpecDefinitionRef { return v.DefinitionRef }).(WorkloadDefinitionSpecDefinitionRefOutput)
}

type WorkloadDefinitionSpecPtrOutput struct{ *pulumi.OutputState }

func (WorkloadDefinitionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDefinitionSpec)(nil)).Elem()
}

func (o WorkloadDefinitionSpecPtrOutput) ToWorkloadDefinitionSpecPtrOutput() WorkloadDefinitionSpecPtrOutput {
	return o
}

func (o WorkloadDefinitionSpecPtrOutput) ToWorkloadDefinitionSpecPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecPtrOutput {
	return o
}

func (o WorkloadDefinitionSpecPtrOutput) Elem() WorkloadDefinitionSpecOutput {
	return o.ApplyT(func(v *WorkloadDefinitionSpec) WorkloadDefinitionSpec { return *v }).(WorkloadDefinitionSpecOutput)
}

// Reference to the CustomResourceDefinition that defines this workload kind.
func (o WorkloadDefinitionSpecPtrOutput) DefinitionRef() WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return o.ApplyT(func(v *WorkloadDefinitionSpec) *WorkloadDefinitionSpecDefinitionRef {
		if v == nil {
			return nil
		}
		return &v.DefinitionRef
	}).(WorkloadDefinitionSpecDefinitionRefPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this workload kind.
type WorkloadDefinitionSpecDefinitionRef struct {
	// Name of the referenced CustomResourceDefinition.
	Name string `pulumi:"name"`
}

// WorkloadDefinitionSpecDefinitionRefInput is an input type that accepts WorkloadDefinitionSpecDefinitionRefArgs and WorkloadDefinitionSpecDefinitionRefOutput values.
// You can construct a concrete instance of `WorkloadDefinitionSpecDefinitionRefInput` via:
//
//          WorkloadDefinitionSpecDefinitionRefArgs{...}
type WorkloadDefinitionSpecDefinitionRefInput interface {
	pulumi.Input

	ToWorkloadDefinitionSpecDefinitionRefOutput() WorkloadDefinitionSpecDefinitionRefOutput
	ToWorkloadDefinitionSpecDefinitionRefOutputWithContext(context.Context) WorkloadDefinitionSpecDefinitionRefOutput
}

// Reference to the CustomResourceDefinition that defines this workload kind.
type WorkloadDefinitionSpecDefinitionRefArgs struct {
	// Name of the referenced CustomResourceDefinition.
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkloadDefinitionSpecDefinitionRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (i WorkloadDefinitionSpecDefinitionRefArgs) ToWorkloadDefinitionSpecDefinitionRefOutput() WorkloadDefinitionSpecDefinitionRefOutput {
	return i.ToWorkloadDefinitionSpecDefinitionRefOutputWithContext(context.Background())
}

func (i WorkloadDefinitionSpecDefinitionRefArgs) ToWorkloadDefinitionSpecDefinitionRefOutputWithContext(ctx context.Context) WorkloadDefinitionSpecDefinitionRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionSpecDefinitionRefOutput)
}

func (i WorkloadDefinitionSpecDefinitionRefArgs) ToWorkloadDefinitionSpecDefinitionRefPtrOutput() WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return i.ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (i WorkloadDefinitionSpecDefinitionRefArgs) ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionSpecDefinitionRefOutput).ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(ctx)
}

// WorkloadDefinitionSpecDefinitionRefPtrInput is an input type that accepts WorkloadDefinitionSpecDefinitionRefArgs, WorkloadDefinitionSpecDefinitionRefPtr and WorkloadDefinitionSpecDefinitionRefPtrOutput values.
// You can construct a concrete instance of `WorkloadDefinitionSpecDefinitionRefPtrInput` via:
//
//          WorkloadDefinitionSpecDefinitionRefArgs{...}
//
//  or:
//
//          nil
type WorkloadDefinitionSpecDefinitionRefPtrInput interface {
	pulumi.Input

	ToWorkloadDefinitionSpecDefinitionRefPtrOutput() WorkloadDefinitionSpecDefinitionRefPtrOutput
	ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(context.Context) WorkloadDefinitionSpecDefinitionRefPtrOutput
}

type workloadDefinitionSpecDefinitionRefPtrType WorkloadDefinitionSpecDefinitionRefArgs

func WorkloadDefinitionSpecDefinitionRefPtr(v *WorkloadDefinitionSpecDefinitionRefArgs) WorkloadDefinitionSpecDefinitionRefPtrInput {
	return (*workloadDefinitionSpecDefinitionRefPtrType)(v)
}

func (*workloadDefinitionSpecDefinitionRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (i *workloadDefinitionSpecDefinitionRefPtrType) ToWorkloadDefinitionSpecDefinitionRefPtrOutput() WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return i.ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (i *workloadDefinitionSpecDefinitionRefPtrType) ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadDefinitionSpecDefinitionRefPtrOutput)
}

// Reference to the CustomResourceDefinition that defines this workload kind.
type WorkloadDefinitionSpecDefinitionRefOutput struct{ *pulumi.OutputState }

func (WorkloadDefinitionSpecDefinitionRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (o WorkloadDefinitionSpecDefinitionRefOutput) ToWorkloadDefinitionSpecDefinitionRefOutput() WorkloadDefinitionSpecDefinitionRefOutput {
	return o
}

func (o WorkloadDefinitionSpecDefinitionRefOutput) ToWorkloadDefinitionSpecDefinitionRefOutputWithContext(ctx context.Context) WorkloadDefinitionSpecDefinitionRefOutput {
	return o
}

func (o WorkloadDefinitionSpecDefinitionRefOutput) ToWorkloadDefinitionSpecDefinitionRefPtrOutput() WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return o.ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(context.Background())
}

func (o WorkloadDefinitionSpecDefinitionRefOutput) ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return o.ApplyT(func(v WorkloadDefinitionSpecDefinitionRef) *WorkloadDefinitionSpecDefinitionRef {
		return &v
	}).(WorkloadDefinitionSpecDefinitionRefPtrOutput)
}

// Name of the referenced CustomResourceDefinition.
func (o WorkloadDefinitionSpecDefinitionRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadDefinitionSpecDefinitionRef) string { return v.Name }).(pulumi.StringOutput)
}

type WorkloadDefinitionSpecDefinitionRefPtrOutput struct{ *pulumi.OutputState }

func (WorkloadDefinitionSpecDefinitionRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadDefinitionSpecDefinitionRef)(nil)).Elem()
}

func (o WorkloadDefinitionSpecDefinitionRefPtrOutput) ToWorkloadDefinitionSpecDefinitionRefPtrOutput() WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return o
}

func (o WorkloadDefinitionSpecDefinitionRefPtrOutput) ToWorkloadDefinitionSpecDefinitionRefPtrOutputWithContext(ctx context.Context) WorkloadDefinitionSpecDefinitionRefPtrOutput {
	return o
}

func (o WorkloadDefinitionSpecDefinitionRefPtrOutput) Elem() WorkloadDefinitionSpecDefinitionRefOutput {
	return o.ApplyT(func(v *WorkloadDefinitionSpecDefinitionRef) WorkloadDefinitionSpecDefinitionRef { return *v }).(WorkloadDefinitionSpecDefinitionRefOutput)
}

// Name of the referenced CustomResourceDefinition.
func (o WorkloadDefinitionSpecDefinitionRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadDefinitionSpecDefinitionRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationConfigurationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationMetadataOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecPtrOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsParameterValuesOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsParameterValuesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsParameterValuesValueOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsScopesOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsScopesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsScopesScopeRefOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsTraitsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationSpecComponentsTraitsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusPtrOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusConditionsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsTraitsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsTraitsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsTraitsTraitRefOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsWorkloadRefOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationStatusWorkloadsWorkloadRefPtrOutput{})
	pulumi.RegisterOutputType(ComponentTypeOutput{})
	pulumi.RegisterOutputType(ComponentMetadataOutput{})
	pulumi.RegisterOutputType(ComponentSpecOutput{})
	pulumi.RegisterOutputType(ComponentSpecPtrOutput{})
	pulumi.RegisterOutputType(ComponentSpecParametersOutput{})
	pulumi.RegisterOutputType(ComponentSpecParametersArrayOutput{})
	pulumi.RegisterOutputType(ComponentStatusOutput{})
	pulumi.RegisterOutputType(ComponentStatusPtrOutput{})
	pulumi.RegisterOutputType(ComponentStatusConditionsOutput{})
	pulumi.RegisterOutputType(ComponentStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadTypeOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadMetadataOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersConfigOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersConfigArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersConfigFromSecretOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersConfigFromSecretPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersEnvOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersEnvArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersEnvFromSecretOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersEnvFromSecretPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeExecOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersLivenessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersPortsOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersPortsArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeExecOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersReadinessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesCpuOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesCpuPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesExtendedOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesExtendedArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesExtendedRequiredOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesGpuOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesGpuPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesMemoryOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesMemoryPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesVolumesOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesVolumesArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesVolumesDiskOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadSpecContainersResourcesVolumesDiskPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadStatusOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadStatusPtrOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadStatusConditionsOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadStatusResourcesOutput{})
	pulumi.RegisterOutputType(ContainerizedWorkloadStatusResourcesArrayOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitTypeOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitMetadataOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitSpecOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitSpecPtrOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitSpecWorkloadRefOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitSpecWorkloadRefPtrOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitStatusOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitStatusPtrOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitStatusConditionsOutput{})
	pulumi.RegisterOutputType(ManualScalerTraitStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ScopeDefinitionTypeOutput{})
	pulumi.RegisterOutputType(ScopeDefinitionMetadataOutput{})
	pulumi.RegisterOutputType(ScopeDefinitionSpecOutput{})
	pulumi.RegisterOutputType(ScopeDefinitionSpecPtrOutput{})
	pulumi.RegisterOutputType(ScopeDefinitionSpecDefinitionRefOutput{})
	pulumi.RegisterOutputType(ScopeDefinitionSpecDefinitionRefPtrOutput{})
	pulumi.RegisterOutputType(TraitDefinitionTypeOutput{})
	pulumi.RegisterOutputType(TraitDefinitionMetadataOutput{})
	pulumi.RegisterOutputType(TraitDefinitionSpecOutput{})
	pulumi.RegisterOutputType(TraitDefinitionSpecPtrOutput{})
	pulumi.RegisterOutputType(TraitDefinitionSpecDefinitionRefOutput{})
	pulumi.RegisterOutputType(TraitDefinitionSpecDefinitionRefPtrOutput{})
	pulumi.RegisterOutputType(WorkloadDefinitionTypeOutput{})
	pulumi.RegisterOutputType(WorkloadDefinitionMetadataOutput{})
	pulumi.RegisterOutputType(WorkloadDefinitionSpecOutput{})
	pulumi.RegisterOutputType(WorkloadDefinitionSpecPtrOutput{})
	pulumi.RegisterOutputType(WorkloadDefinitionSpecDefinitionRefOutput{})
	pulumi.RegisterOutputType(WorkloadDefinitionSpecDefinitionRefPtrOutput{})
}
