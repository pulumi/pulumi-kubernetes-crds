// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PackageInstall struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput        `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput        `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput    `pulumi:"metadata"`
	Spec       PackageInstallSpecPtrOutput   `pulumi:"spec"`
	Status     PackageInstallStatusPtrOutput `pulumi:"status"`
}

// NewPackageInstall registers a new resource with the given unique name, arguments, and options.
func NewPackageInstall(ctx *pulumi.Context,
	name string, args *PackageInstallArgs, opts ...pulumi.ResourceOption) (*PackageInstall, error) {
	if args == nil {
		args = &PackageInstallArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("packages.crossplane.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PackageInstall")
	var resource PackageInstall
	err := ctx.RegisterResource("kubernetes:packages.crossplane.io/v1alpha1:PackageInstall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPackageInstall gets an existing PackageInstall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPackageInstall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PackageInstallState, opts ...pulumi.ResourceOption) (*PackageInstall, error) {
	var resource PackageInstall
	err := ctx.ReadResource("kubernetes:packages.crossplane.io/v1alpha1:PackageInstall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PackageInstall resources.
type packageInstallState struct {
	ApiVersion *string               `pulumi:"apiVersion"`
	Kind       *string               `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta    `pulumi:"metadata"`
	Spec       *PackageInstallSpec   `pulumi:"spec"`
	Status     *PackageInstallStatus `pulumi:"status"`
}

type PackageInstallState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       PackageInstallSpecPtrInput
	Status     PackageInstallStatusPtrInput
}

func (PackageInstallState) ElementType() reflect.Type {
	return reflect.TypeOf((*packageInstallState)(nil)).Elem()
}

type packageInstallArgs struct {
	ApiVersion *string               `pulumi:"apiVersion"`
	Kind       *string               `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta    `pulumi:"metadata"`
	Spec       *PackageInstallSpec   `pulumi:"spec"`
	Status     *PackageInstallStatus `pulumi:"status"`
}

// The set of arguments for constructing a PackageInstall resource.
type PackageInstallArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       PackageInstallSpecPtrInput
	Status     PackageInstallStatusPtrInput
}

func (PackageInstallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packageInstallArgs)(nil)).Elem()
}
