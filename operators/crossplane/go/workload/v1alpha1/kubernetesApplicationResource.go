// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A KubernetesApplicationResource is a resource of a Kubernetes application. Each resource templates a single Kubernetes resource to be deployed to its scheduled KubernetesCluster.
type KubernetesApplicationResource struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec KubernetesApplicationResourceSpecPtrOutput `pulumi:"spec"`
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status KubernetesApplicationResourceStatusPtrOutput `pulumi:"status"`
}

// NewKubernetesApplicationResource registers a new resource with the given unique name, arguments, and options.
func NewKubernetesApplicationResource(ctx *pulumi.Context,
	name string, args *KubernetesApplicationResourceArgs, opts ...pulumi.ResourceOption) (*KubernetesApplicationResource, error) {
	if args == nil {
		args = &KubernetesApplicationResourceArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("workload.crossplane.io/v1alpha1")
	args.Kind = pulumi.StringPtr("KubernetesApplicationResource")
	var resource KubernetesApplicationResource
	err := ctx.RegisterResource("kubernetes:workload.crossplane.io/v1alpha1:KubernetesApplicationResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesApplicationResource gets an existing KubernetesApplicationResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesApplicationResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesApplicationResourceState, opts ...pulumi.ResourceOption) (*KubernetesApplicationResource, error) {
	var resource KubernetesApplicationResource
	err := ctx.ReadResource("kubernetes:workload.crossplane.io/v1alpha1:KubernetesApplicationResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesApplicationResource resources.
type kubernetesApplicationResourceState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec *KubernetesApplicationResourceSpec `pulumi:"spec"`
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status *KubernetesApplicationResourceStatus `pulumi:"status"`
}

type KubernetesApplicationResourceState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec KubernetesApplicationResourceSpecPtrInput
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status KubernetesApplicationResourceStatusPtrInput
}

func (KubernetesApplicationResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesApplicationResourceState)(nil)).Elem()
}

type kubernetesApplicationResourceArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec *KubernetesApplicationResourceSpec `pulumi:"spec"`
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status *KubernetesApplicationResourceStatus `pulumi:"status"`
}

// The set of arguments for constructing a KubernetesApplicationResource resource.
type KubernetesApplicationResourceArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec KubernetesApplicationResourceSpecPtrInput
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status KubernetesApplicationResourceStatusPtrInput
}

func (KubernetesApplicationResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesApplicationResourceArgs)(nil)).Elem()
}
