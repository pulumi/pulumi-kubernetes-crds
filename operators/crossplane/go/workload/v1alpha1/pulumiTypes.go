// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A KubernetesApplication defines an application deployed by Crossplane to a Kubernetes cluster, i.e. a portable KubernetesCluster resource claim.
type KubernetesApplicationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A KubernetesApplicationSpec specifies the resources of a Kubernetes application.
	Spec *KubernetesApplicationSpec `pulumi:"spec"`
	// KubernetesApplicationStatus represents the observed state of a KubernetesApplication.
	Status *KubernetesApplicationStatus `pulumi:"status"`
}

// KubernetesApplicationTypeInput is an input type that accepts KubernetesApplicationTypeArgs and KubernetesApplicationTypeOutput values.
// You can construct a concrete instance of `KubernetesApplicationTypeInput` via:
//
//          KubernetesApplicationTypeArgs{...}
type KubernetesApplicationTypeInput interface {
	pulumi.Input

	ToKubernetesApplicationTypeOutput() KubernetesApplicationTypeOutput
	ToKubernetesApplicationTypeOutputWithContext(context.Context) KubernetesApplicationTypeOutput
}

// A KubernetesApplication defines an application deployed by Crossplane to a Kubernetes cluster, i.e. a portable KubernetesCluster resource claim.
type KubernetesApplicationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A KubernetesApplicationSpec specifies the resources of a Kubernetes application.
	Spec KubernetesApplicationSpecPtrInput `pulumi:"spec"`
	// KubernetesApplicationStatus represents the observed state of a KubernetesApplication.
	Status KubernetesApplicationStatusPtrInput `pulumi:"status"`
}

func (KubernetesApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationType)(nil)).Elem()
}

func (i KubernetesApplicationTypeArgs) ToKubernetesApplicationTypeOutput() KubernetesApplicationTypeOutput {
	return i.ToKubernetesApplicationTypeOutputWithContext(context.Background())
}

func (i KubernetesApplicationTypeArgs) ToKubernetesApplicationTypeOutputWithContext(ctx context.Context) KubernetesApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationTypeOutput)
}

// A KubernetesApplication defines an application deployed by Crossplane to a Kubernetes cluster, i.e. a portable KubernetesCluster resource claim.
type KubernetesApplicationTypeOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationType)(nil)).Elem()
}

func (o KubernetesApplicationTypeOutput) ToKubernetesApplicationTypeOutput() KubernetesApplicationTypeOutput {
	return o
}

func (o KubernetesApplicationTypeOutput) ToKubernetesApplicationTypeOutputWithContext(ctx context.Context) KubernetesApplicationTypeOutput {
	return o
}

func (o KubernetesApplicationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KubernetesApplicationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KubernetesApplicationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A KubernetesApplicationSpec specifies the resources of a Kubernetes application.
func (o KubernetesApplicationTypeOutput) Spec() KubernetesApplicationSpecPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationType) *KubernetesApplicationSpec { return v.Spec }).(KubernetesApplicationSpecPtrOutput)
}

// KubernetesApplicationStatus represents the observed state of a KubernetesApplication.
func (o KubernetesApplicationTypeOutput) Status() KubernetesApplicationStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationType) *KubernetesApplicationStatus { return v.Status }).(KubernetesApplicationStatusPtrOutput)
}

type KubernetesApplicationMetadata struct {
}

// KubernetesApplicationMetadataInput is an input type that accepts KubernetesApplicationMetadataArgs and KubernetesApplicationMetadataOutput values.
// You can construct a concrete instance of `KubernetesApplicationMetadataInput` via:
//
//          KubernetesApplicationMetadataArgs{...}
type KubernetesApplicationMetadataInput interface {
	pulumi.Input

	ToKubernetesApplicationMetadataOutput() KubernetesApplicationMetadataOutput
	ToKubernetesApplicationMetadataOutputWithContext(context.Context) KubernetesApplicationMetadataOutput
}

type KubernetesApplicationMetadataArgs struct {
}

func (KubernetesApplicationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationMetadata)(nil)).Elem()
}

func (i KubernetesApplicationMetadataArgs) ToKubernetesApplicationMetadataOutput() KubernetesApplicationMetadataOutput {
	return i.ToKubernetesApplicationMetadataOutputWithContext(context.Background())
}

func (i KubernetesApplicationMetadataArgs) ToKubernetesApplicationMetadataOutputWithContext(ctx context.Context) KubernetesApplicationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationMetadataOutput)
}

type KubernetesApplicationMetadataOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationMetadata)(nil)).Elem()
}

func (o KubernetesApplicationMetadataOutput) ToKubernetesApplicationMetadataOutput() KubernetesApplicationMetadataOutput {
	return o
}

func (o KubernetesApplicationMetadataOutput) ToKubernetesApplicationMetadataOutputWithContext(ctx context.Context) KubernetesApplicationMetadataOutput {
	return o
}

// A KubernetesApplicationResource is a resource of a Kubernetes application. Each resource templates a single Kubernetes resource to be deployed to its scheduled KubernetesCluster.
type KubernetesApplicationResourceType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec *KubernetesApplicationResourceSpec `pulumi:"spec"`
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status *KubernetesApplicationResourceStatus `pulumi:"status"`
}

// KubernetesApplicationResourceTypeInput is an input type that accepts KubernetesApplicationResourceTypeArgs and KubernetesApplicationResourceTypeOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceTypeInput` via:
//
//          KubernetesApplicationResourceTypeArgs{...}
type KubernetesApplicationResourceTypeInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceTypeOutput() KubernetesApplicationResourceTypeOutput
	ToKubernetesApplicationResourceTypeOutputWithContext(context.Context) KubernetesApplicationResourceTypeOutput
}

// A KubernetesApplicationResource is a resource of a Kubernetes application. Each resource templates a single Kubernetes resource to be deployed to its scheduled KubernetesCluster.
type KubernetesApplicationResourceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec KubernetesApplicationResourceSpecPtrInput `pulumi:"spec"`
	// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
	Status KubernetesApplicationResourceStatusPtrInput `pulumi:"status"`
}

func (KubernetesApplicationResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceType)(nil)).Elem()
}

func (i KubernetesApplicationResourceTypeArgs) ToKubernetesApplicationResourceTypeOutput() KubernetesApplicationResourceTypeOutput {
	return i.ToKubernetesApplicationResourceTypeOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceTypeArgs) ToKubernetesApplicationResourceTypeOutputWithContext(ctx context.Context) KubernetesApplicationResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceTypeOutput)
}

// A KubernetesApplicationResource is a resource of a Kubernetes application. Each resource templates a single Kubernetes resource to be deployed to its scheduled KubernetesCluster.
type KubernetesApplicationResourceTypeOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceType)(nil)).Elem()
}

func (o KubernetesApplicationResourceTypeOutput) ToKubernetesApplicationResourceTypeOutput() KubernetesApplicationResourceTypeOutput {
	return o
}

func (o KubernetesApplicationResourceTypeOutput) ToKubernetesApplicationResourceTypeOutputWithContext(ctx context.Context) KubernetesApplicationResourceTypeOutput {
	return o
}

func (o KubernetesApplicationResourceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KubernetesApplicationResourceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KubernetesApplicationResourceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
func (o KubernetesApplicationResourceTypeOutput) Spec() KubernetesApplicationResourceSpecPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceType) *KubernetesApplicationResourceSpec { return v.Spec }).(KubernetesApplicationResourceSpecPtrOutput)
}

// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
func (o KubernetesApplicationResourceTypeOutput) Status() KubernetesApplicationResourceStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceType) *KubernetesApplicationResourceStatus { return v.Status }).(KubernetesApplicationResourceStatusPtrOutput)
}

type KubernetesApplicationResourceMetadata struct {
}

// KubernetesApplicationResourceMetadataInput is an input type that accepts KubernetesApplicationResourceMetadataArgs and KubernetesApplicationResourceMetadataOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceMetadataInput` via:
//
//          KubernetesApplicationResourceMetadataArgs{...}
type KubernetesApplicationResourceMetadataInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceMetadataOutput() KubernetesApplicationResourceMetadataOutput
	ToKubernetesApplicationResourceMetadataOutputWithContext(context.Context) KubernetesApplicationResourceMetadataOutput
}

type KubernetesApplicationResourceMetadataArgs struct {
}

func (KubernetesApplicationResourceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceMetadata)(nil)).Elem()
}

func (i KubernetesApplicationResourceMetadataArgs) ToKubernetesApplicationResourceMetadataOutput() KubernetesApplicationResourceMetadataOutput {
	return i.ToKubernetesApplicationResourceMetadataOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceMetadataArgs) ToKubernetesApplicationResourceMetadataOutputWithContext(ctx context.Context) KubernetesApplicationResourceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceMetadataOutput)
}

type KubernetesApplicationResourceMetadataOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceMetadata)(nil)).Elem()
}

func (o KubernetesApplicationResourceMetadataOutput) ToKubernetesApplicationResourceMetadataOutput() KubernetesApplicationResourceMetadataOutput {
	return o
}

func (o KubernetesApplicationResourceMetadataOutput) ToKubernetesApplicationResourceMetadataOutputWithContext(ctx context.Context) KubernetesApplicationResourceMetadataOutput {
	return o
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
type KubernetesApplicationResourceSpec struct {
	// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
	Secrets []KubernetesApplicationResourceSpecSecrets `pulumi:"secrets"`
	// Target to which this application has been scheduled.
	TargetRef *KubernetesApplicationResourceSpecTargetRef `pulumi:"targetRef"`
	// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
	Template map[string]interface{} `pulumi:"template"`
}

// KubernetesApplicationResourceSpecInput is an input type that accepts KubernetesApplicationResourceSpecArgs and KubernetesApplicationResourceSpecOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecInput` via:
//
//          KubernetesApplicationResourceSpecArgs{...}
type KubernetesApplicationResourceSpecInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecOutput() KubernetesApplicationResourceSpecOutput
	ToKubernetesApplicationResourceSpecOutputWithContext(context.Context) KubernetesApplicationResourceSpecOutput
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
type KubernetesApplicationResourceSpecArgs struct {
	// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
	Secrets KubernetesApplicationResourceSpecSecretsArrayInput `pulumi:"secrets"`
	// Target to which this application has been scheduled.
	TargetRef KubernetesApplicationResourceSpecTargetRefPtrInput `pulumi:"targetRef"`
	// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
	Template pulumi.MapInput `pulumi:"template"`
}

func (KubernetesApplicationResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpec)(nil)).Elem()
}

func (i KubernetesApplicationResourceSpecArgs) ToKubernetesApplicationResourceSpecOutput() KubernetesApplicationResourceSpecOutput {
	return i.ToKubernetesApplicationResourceSpecOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecArgs) ToKubernetesApplicationResourceSpecOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecOutput)
}

func (i KubernetesApplicationResourceSpecArgs) ToKubernetesApplicationResourceSpecPtrOutput() KubernetesApplicationResourceSpecPtrOutput {
	return i.ToKubernetesApplicationResourceSpecPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecArgs) ToKubernetesApplicationResourceSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecOutput).ToKubernetesApplicationResourceSpecPtrOutputWithContext(ctx)
}

// KubernetesApplicationResourceSpecPtrInput is an input type that accepts KubernetesApplicationResourceSpecArgs, KubernetesApplicationResourceSpecPtr and KubernetesApplicationResourceSpecPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecPtrInput` via:
//
//          KubernetesApplicationResourceSpecArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationResourceSpecPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecPtrOutput() KubernetesApplicationResourceSpecPtrOutput
	ToKubernetesApplicationResourceSpecPtrOutputWithContext(context.Context) KubernetesApplicationResourceSpecPtrOutput
}

type kubernetesApplicationResourceSpecPtrType KubernetesApplicationResourceSpecArgs

func KubernetesApplicationResourceSpecPtr(v *KubernetesApplicationResourceSpecArgs) KubernetesApplicationResourceSpecPtrInput {
	return (*kubernetesApplicationResourceSpecPtrType)(v)
}

func (*kubernetesApplicationResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceSpec)(nil)).Elem()
}

func (i *kubernetesApplicationResourceSpecPtrType) ToKubernetesApplicationResourceSpecPtrOutput() KubernetesApplicationResourceSpecPtrOutput {
	return i.ToKubernetesApplicationResourceSpecPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationResourceSpecPtrType) ToKubernetesApplicationResourceSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecPtrOutput)
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
type KubernetesApplicationResourceSpecOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpec)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecOutput) ToKubernetesApplicationResourceSpecOutput() KubernetesApplicationResourceSpecOutput {
	return o
}

func (o KubernetesApplicationResourceSpecOutput) ToKubernetesApplicationResourceSpecOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecOutput {
	return o
}

func (o KubernetesApplicationResourceSpecOutput) ToKubernetesApplicationResourceSpecPtrOutput() KubernetesApplicationResourceSpecPtrOutput {
	return o.ToKubernetesApplicationResourceSpecPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationResourceSpecOutput) ToKubernetesApplicationResourceSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpec) *KubernetesApplicationResourceSpec {
		return &v
	}).(KubernetesApplicationResourceSpecPtrOutput)
}

// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
func (o KubernetesApplicationResourceSpecOutput) Secrets() KubernetesApplicationResourceSpecSecretsArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpec) []KubernetesApplicationResourceSpecSecrets { return v.Secrets }).(KubernetesApplicationResourceSpecSecretsArrayOutput)
}

// Target to which this application has been scheduled.
func (o KubernetesApplicationResourceSpecOutput) TargetRef() KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpec) *KubernetesApplicationResourceSpecTargetRef {
		return v.TargetRef
	}).(KubernetesApplicationResourceSpecTargetRefPtrOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
func (o KubernetesApplicationResourceSpecOutput) Template() pulumi.MapOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpec) map[string]interface{} { return v.Template }).(pulumi.MapOutput)
}

type KubernetesApplicationResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceSpec)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecPtrOutput) ToKubernetesApplicationResourceSpecPtrOutput() KubernetesApplicationResourceSpecPtrOutput {
	return o
}

func (o KubernetesApplicationResourceSpecPtrOutput) ToKubernetesApplicationResourceSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecPtrOutput {
	return o
}

func (o KubernetesApplicationResourceSpecPtrOutput) Elem() KubernetesApplicationResourceSpecOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceSpec) KubernetesApplicationResourceSpec { return *v }).(KubernetesApplicationResourceSpecOutput)
}

// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
func (o KubernetesApplicationResourceSpecPtrOutput) Secrets() KubernetesApplicationResourceSpecSecretsArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceSpec) []KubernetesApplicationResourceSpecSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(KubernetesApplicationResourceSpecSecretsArrayOutput)
}

// Target to which this application has been scheduled.
func (o KubernetesApplicationResourceSpecPtrOutput) TargetRef() KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceSpec) *KubernetesApplicationResourceSpecTargetRef {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(KubernetesApplicationResourceSpecTargetRefPtrOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
func (o KubernetesApplicationResourceSpecPtrOutput) Template() pulumi.MapOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.MapOutput)
}

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type KubernetesApplicationResourceSpecSecrets struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// KubernetesApplicationResourceSpecSecretsInput is an input type that accepts KubernetesApplicationResourceSpecSecretsArgs and KubernetesApplicationResourceSpecSecretsOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecSecretsInput` via:
//
//          KubernetesApplicationResourceSpecSecretsArgs{...}
type KubernetesApplicationResourceSpecSecretsInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecSecretsOutput() KubernetesApplicationResourceSpecSecretsOutput
	ToKubernetesApplicationResourceSpecSecretsOutputWithContext(context.Context) KubernetesApplicationResourceSpecSecretsOutput
}

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type KubernetesApplicationResourceSpecSecretsArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KubernetesApplicationResourceSpecSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpecSecrets)(nil)).Elem()
}

func (i KubernetesApplicationResourceSpecSecretsArgs) ToKubernetesApplicationResourceSpecSecretsOutput() KubernetesApplicationResourceSpecSecretsOutput {
	return i.ToKubernetesApplicationResourceSpecSecretsOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecSecretsArgs) ToKubernetesApplicationResourceSpecSecretsOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecSecretsOutput)
}

// KubernetesApplicationResourceSpecSecretsArrayInput is an input type that accepts KubernetesApplicationResourceSpecSecretsArray and KubernetesApplicationResourceSpecSecretsArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecSecretsArrayInput` via:
//
//          KubernetesApplicationResourceSpecSecretsArray{ KubernetesApplicationResourceSpecSecretsArgs{...} }
type KubernetesApplicationResourceSpecSecretsArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecSecretsArrayOutput() KubernetesApplicationResourceSpecSecretsArrayOutput
	ToKubernetesApplicationResourceSpecSecretsArrayOutputWithContext(context.Context) KubernetesApplicationResourceSpecSecretsArrayOutput
}

type KubernetesApplicationResourceSpecSecretsArray []KubernetesApplicationResourceSpecSecretsInput

func (KubernetesApplicationResourceSpecSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationResourceSpecSecrets)(nil)).Elem()
}

func (i KubernetesApplicationResourceSpecSecretsArray) ToKubernetesApplicationResourceSpecSecretsArrayOutput() KubernetesApplicationResourceSpecSecretsArrayOutput {
	return i.ToKubernetesApplicationResourceSpecSecretsArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecSecretsArray) ToKubernetesApplicationResourceSpecSecretsArrayOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecSecretsArrayOutput)
}

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type KubernetesApplicationResourceSpecSecretsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpecSecrets)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecSecretsOutput) ToKubernetesApplicationResourceSpecSecretsOutput() KubernetesApplicationResourceSpecSecretsOutput {
	return o
}

func (o KubernetesApplicationResourceSpecSecretsOutput) ToKubernetesApplicationResourceSpecSecretsOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecSecretsOutput {
	return o
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o KubernetesApplicationResourceSpecSecretsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpecSecrets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KubernetesApplicationResourceSpecSecretsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationResourceSpecSecrets)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecSecretsArrayOutput) ToKubernetesApplicationResourceSpecSecretsArrayOutput() KubernetesApplicationResourceSpecSecretsArrayOutput {
	return o
}

func (o KubernetesApplicationResourceSpecSecretsArrayOutput) ToKubernetesApplicationResourceSpecSecretsArrayOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecSecretsArrayOutput {
	return o
}

func (o KubernetesApplicationResourceSpecSecretsArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationResourceSpecSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationResourceSpecSecrets {
		return vs[0].([]KubernetesApplicationResourceSpecSecrets)[vs[1].(int)]
	}).(KubernetesApplicationResourceSpecSecretsOutput)
}

// Target to which this application has been scheduled.
type KubernetesApplicationResourceSpecTargetRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// KubernetesApplicationResourceSpecTargetRefInput is an input type that accepts KubernetesApplicationResourceSpecTargetRefArgs and KubernetesApplicationResourceSpecTargetRefOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecTargetRefInput` via:
//
//          KubernetesApplicationResourceSpecTargetRefArgs{...}
type KubernetesApplicationResourceSpecTargetRefInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecTargetRefOutput() KubernetesApplicationResourceSpecTargetRefOutput
	ToKubernetesApplicationResourceSpecTargetRefOutputWithContext(context.Context) KubernetesApplicationResourceSpecTargetRefOutput
}

// Target to which this application has been scheduled.
type KubernetesApplicationResourceSpecTargetRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (KubernetesApplicationResourceSpecTargetRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpecTargetRef)(nil)).Elem()
}

func (i KubernetesApplicationResourceSpecTargetRefArgs) ToKubernetesApplicationResourceSpecTargetRefOutput() KubernetesApplicationResourceSpecTargetRefOutput {
	return i.ToKubernetesApplicationResourceSpecTargetRefOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecTargetRefArgs) ToKubernetesApplicationResourceSpecTargetRefOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTargetRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecTargetRefOutput)
}

func (i KubernetesApplicationResourceSpecTargetRefArgs) ToKubernetesApplicationResourceSpecTargetRefPtrOutput() KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return i.ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecTargetRefArgs) ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecTargetRefOutput).ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(ctx)
}

// KubernetesApplicationResourceSpecTargetRefPtrInput is an input type that accepts KubernetesApplicationResourceSpecTargetRefArgs, KubernetesApplicationResourceSpecTargetRefPtr and KubernetesApplicationResourceSpecTargetRefPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecTargetRefPtrInput` via:
//
//          KubernetesApplicationResourceSpecTargetRefArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationResourceSpecTargetRefPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecTargetRefPtrOutput() KubernetesApplicationResourceSpecTargetRefPtrOutput
	ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(context.Context) KubernetesApplicationResourceSpecTargetRefPtrOutput
}

type kubernetesApplicationResourceSpecTargetRefPtrType KubernetesApplicationResourceSpecTargetRefArgs

func KubernetesApplicationResourceSpecTargetRefPtr(v *KubernetesApplicationResourceSpecTargetRefArgs) KubernetesApplicationResourceSpecTargetRefPtrInput {
	return (*kubernetesApplicationResourceSpecTargetRefPtrType)(v)
}

func (*kubernetesApplicationResourceSpecTargetRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceSpecTargetRef)(nil)).Elem()
}

func (i *kubernetesApplicationResourceSpecTargetRefPtrType) ToKubernetesApplicationResourceSpecTargetRefPtrOutput() KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return i.ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationResourceSpecTargetRefPtrType) ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecTargetRefPtrOutput)
}

// Target to which this application has been scheduled.
type KubernetesApplicationResourceSpecTargetRefOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecTargetRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpecTargetRef)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecTargetRefOutput) ToKubernetesApplicationResourceSpecTargetRefOutput() KubernetesApplicationResourceSpecTargetRefOutput {
	return o
}

func (o KubernetesApplicationResourceSpecTargetRefOutput) ToKubernetesApplicationResourceSpecTargetRefOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTargetRefOutput {
	return o
}

func (o KubernetesApplicationResourceSpecTargetRefOutput) ToKubernetesApplicationResourceSpecTargetRefPtrOutput() KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return o.ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationResourceSpecTargetRefOutput) ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpecTargetRef) *KubernetesApplicationResourceSpecTargetRef {
		return &v
	}).(KubernetesApplicationResourceSpecTargetRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesApplicationResourceSpecTargetRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceSpecTargetRef) string { return v.Name }).(pulumi.StringOutput)
}

type KubernetesApplicationResourceSpecTargetRefPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecTargetRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceSpecTargetRef)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecTargetRefPtrOutput) ToKubernetesApplicationResourceSpecTargetRefPtrOutput() KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return o
}

func (o KubernetesApplicationResourceSpecTargetRefPtrOutput) ToKubernetesApplicationResourceSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTargetRefPtrOutput {
	return o
}

func (o KubernetesApplicationResourceSpecTargetRefPtrOutput) Elem() KubernetesApplicationResourceSpecTargetRefOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceSpecTargetRef) KubernetesApplicationResourceSpecTargetRef {
		return *v
	}).(KubernetesApplicationResourceSpecTargetRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesApplicationResourceSpecTargetRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
type KubernetesApplicationResourceSpecTemplate struct {
}

// KubernetesApplicationResourceSpecTemplateInput is an input type that accepts KubernetesApplicationResourceSpecTemplateArgs and KubernetesApplicationResourceSpecTemplateOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceSpecTemplateInput` via:
//
//          KubernetesApplicationResourceSpecTemplateArgs{...}
type KubernetesApplicationResourceSpecTemplateInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceSpecTemplateOutput() KubernetesApplicationResourceSpecTemplateOutput
	ToKubernetesApplicationResourceSpecTemplateOutputWithContext(context.Context) KubernetesApplicationResourceSpecTemplateOutput
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
type KubernetesApplicationResourceSpecTemplateArgs struct {
}

func (KubernetesApplicationResourceSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpecTemplate)(nil)).Elem()
}

func (i KubernetesApplicationResourceSpecTemplateArgs) ToKubernetesApplicationResourceSpecTemplateOutput() KubernetesApplicationResourceSpecTemplateOutput {
	return i.ToKubernetesApplicationResourceSpecTemplateOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceSpecTemplateArgs) ToKubernetesApplicationResourceSpecTemplateOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceSpecTemplateOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
type KubernetesApplicationResourceSpecTemplateOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceSpecTemplate)(nil)).Elem()
}

func (o KubernetesApplicationResourceSpecTemplateOutput) ToKubernetesApplicationResourceSpecTemplateOutput() KubernetesApplicationResourceSpecTemplateOutput {
	return o
}

func (o KubernetesApplicationResourceSpecTemplateOutput) ToKubernetesApplicationResourceSpecTemplateOutputWithContext(ctx context.Context) KubernetesApplicationResourceSpecTemplateOutput {
	return o
}

// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
type KubernetesApplicationResourceStatus struct {
	// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
	ConditionedStatus *KubernetesApplicationResourceStatusConditionedStatus `pulumi:"conditionedStatus"`
	// Remote status of the resource templated by this application resource.
	Remote *KubernetesApplicationResourceStatusRemote `pulumi:"remote"`
	// State of the application.
	State *string `pulumi:"state"`
}

// KubernetesApplicationResourceStatusInput is an input type that accepts KubernetesApplicationResourceStatusArgs and KubernetesApplicationResourceStatusOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusInput` via:
//
//          KubernetesApplicationResourceStatusArgs{...}
type KubernetesApplicationResourceStatusInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusOutput() KubernetesApplicationResourceStatusOutput
	ToKubernetesApplicationResourceStatusOutputWithContext(context.Context) KubernetesApplicationResourceStatusOutput
}

// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
type KubernetesApplicationResourceStatusArgs struct {
	// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
	ConditionedStatus KubernetesApplicationResourceStatusConditionedStatusPtrInput `pulumi:"conditionedStatus"`
	// Remote status of the resource templated by this application resource.
	Remote KubernetesApplicationResourceStatusRemotePtrInput `pulumi:"remote"`
	// State of the application.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (KubernetesApplicationResourceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatus)(nil)).Elem()
}

func (i KubernetesApplicationResourceStatusArgs) ToKubernetesApplicationResourceStatusOutput() KubernetesApplicationResourceStatusOutput {
	return i.ToKubernetesApplicationResourceStatusOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusArgs) ToKubernetesApplicationResourceStatusOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusOutput)
}

func (i KubernetesApplicationResourceStatusArgs) ToKubernetesApplicationResourceStatusPtrOutput() KubernetesApplicationResourceStatusPtrOutput {
	return i.ToKubernetesApplicationResourceStatusPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusArgs) ToKubernetesApplicationResourceStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusOutput).ToKubernetesApplicationResourceStatusPtrOutputWithContext(ctx)
}

// KubernetesApplicationResourceStatusPtrInput is an input type that accepts KubernetesApplicationResourceStatusArgs, KubernetesApplicationResourceStatusPtr and KubernetesApplicationResourceStatusPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusPtrInput` via:
//
//          KubernetesApplicationResourceStatusArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationResourceStatusPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusPtrOutput() KubernetesApplicationResourceStatusPtrOutput
	ToKubernetesApplicationResourceStatusPtrOutputWithContext(context.Context) KubernetesApplicationResourceStatusPtrOutput
}

type kubernetesApplicationResourceStatusPtrType KubernetesApplicationResourceStatusArgs

func KubernetesApplicationResourceStatusPtr(v *KubernetesApplicationResourceStatusArgs) KubernetesApplicationResourceStatusPtrInput {
	return (*kubernetesApplicationResourceStatusPtrType)(v)
}

func (*kubernetesApplicationResourceStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceStatus)(nil)).Elem()
}

func (i *kubernetesApplicationResourceStatusPtrType) ToKubernetesApplicationResourceStatusPtrOutput() KubernetesApplicationResourceStatusPtrOutput {
	return i.ToKubernetesApplicationResourceStatusPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationResourceStatusPtrType) ToKubernetesApplicationResourceStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusPtrOutput)
}

// KubernetesApplicationResourceStatus represents the observed state of a KubernetesApplicationResource.
type KubernetesApplicationResourceStatusOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatus)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusOutput) ToKubernetesApplicationResourceStatusOutput() KubernetesApplicationResourceStatusOutput {
	return o
}

func (o KubernetesApplicationResourceStatusOutput) ToKubernetesApplicationResourceStatusOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusOutput {
	return o
}

func (o KubernetesApplicationResourceStatusOutput) ToKubernetesApplicationResourceStatusPtrOutput() KubernetesApplicationResourceStatusPtrOutput {
	return o.ToKubernetesApplicationResourceStatusPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationResourceStatusOutput) ToKubernetesApplicationResourceStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatus) *KubernetesApplicationResourceStatus {
		return &v
	}).(KubernetesApplicationResourceStatusPtrOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
func (o KubernetesApplicationResourceStatusOutput) ConditionedStatus() KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatus) *KubernetesApplicationResourceStatusConditionedStatus {
		return v.ConditionedStatus
	}).(KubernetesApplicationResourceStatusConditionedStatusPtrOutput)
}

// Remote status of the resource templated by this application resource.
func (o KubernetesApplicationResourceStatusOutput) Remote() KubernetesApplicationResourceStatusRemotePtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatus) *KubernetesApplicationResourceStatusRemote {
		return v.Remote
	}).(KubernetesApplicationResourceStatusRemotePtrOutput)
}

// State of the application.
func (o KubernetesApplicationResourceStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type KubernetesApplicationResourceStatusPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceStatus)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusPtrOutput) ToKubernetesApplicationResourceStatusPtrOutput() KubernetesApplicationResourceStatusPtrOutput {
	return o
}

func (o KubernetesApplicationResourceStatusPtrOutput) ToKubernetesApplicationResourceStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusPtrOutput {
	return o
}

func (o KubernetesApplicationResourceStatusPtrOutput) Elem() KubernetesApplicationResourceStatusOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatus) KubernetesApplicationResourceStatus { return *v }).(KubernetesApplicationResourceStatusOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
func (o KubernetesApplicationResourceStatusPtrOutput) ConditionedStatus() KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatus) *KubernetesApplicationResourceStatusConditionedStatus {
		if v == nil {
			return nil
		}
		return v.ConditionedStatus
	}).(KubernetesApplicationResourceStatusConditionedStatusPtrOutput)
}

// Remote status of the resource templated by this application resource.
func (o KubernetesApplicationResourceStatusPtrOutput) Remote() KubernetesApplicationResourceStatusRemotePtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatus) *KubernetesApplicationResourceStatusRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(KubernetesApplicationResourceStatusRemotePtrOutput)
}

// State of the application.
func (o KubernetesApplicationResourceStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
type KubernetesApplicationResourceStatusConditionedStatus struct {
	// Conditions of the resource.
	Conditions []KubernetesApplicationResourceStatusConditionedStatusConditions `pulumi:"conditions"`
}

// KubernetesApplicationResourceStatusConditionedStatusInput is an input type that accepts KubernetesApplicationResourceStatusConditionedStatusArgs and KubernetesApplicationResourceStatusConditionedStatusOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusConditionedStatusInput` via:
//
//          KubernetesApplicationResourceStatusConditionedStatusArgs{...}
type KubernetesApplicationResourceStatusConditionedStatusInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusConditionedStatusOutput() KubernetesApplicationResourceStatusConditionedStatusOutput
	ToKubernetesApplicationResourceStatusConditionedStatusOutputWithContext(context.Context) KubernetesApplicationResourceStatusConditionedStatusOutput
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
type KubernetesApplicationResourceStatusConditionedStatusArgs struct {
	// Conditions of the resource.
	Conditions KubernetesApplicationResourceStatusConditionedStatusConditionsArrayInput `pulumi:"conditions"`
}

func (KubernetesApplicationResourceStatusConditionedStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatusConditionedStatus)(nil)).Elem()
}

func (i KubernetesApplicationResourceStatusConditionedStatusArgs) ToKubernetesApplicationResourceStatusConditionedStatusOutput() KubernetesApplicationResourceStatusConditionedStatusOutput {
	return i.ToKubernetesApplicationResourceStatusConditionedStatusOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusConditionedStatusArgs) ToKubernetesApplicationResourceStatusConditionedStatusOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusConditionedStatusOutput)
}

func (i KubernetesApplicationResourceStatusConditionedStatusArgs) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutput() KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return i.ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusConditionedStatusArgs) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusConditionedStatusOutput).ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(ctx)
}

// KubernetesApplicationResourceStatusConditionedStatusPtrInput is an input type that accepts KubernetesApplicationResourceStatusConditionedStatusArgs, KubernetesApplicationResourceStatusConditionedStatusPtr and KubernetesApplicationResourceStatusConditionedStatusPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusConditionedStatusPtrInput` via:
//
//          KubernetesApplicationResourceStatusConditionedStatusArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationResourceStatusConditionedStatusPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusConditionedStatusPtrOutput() KubernetesApplicationResourceStatusConditionedStatusPtrOutput
	ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(context.Context) KubernetesApplicationResourceStatusConditionedStatusPtrOutput
}

type kubernetesApplicationResourceStatusConditionedStatusPtrType KubernetesApplicationResourceStatusConditionedStatusArgs

func KubernetesApplicationResourceStatusConditionedStatusPtr(v *KubernetesApplicationResourceStatusConditionedStatusArgs) KubernetesApplicationResourceStatusConditionedStatusPtrInput {
	return (*kubernetesApplicationResourceStatusConditionedStatusPtrType)(v)
}

func (*kubernetesApplicationResourceStatusConditionedStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceStatusConditionedStatus)(nil)).Elem()
}

func (i *kubernetesApplicationResourceStatusConditionedStatusPtrType) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutput() KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return i.ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationResourceStatusConditionedStatusPtrType) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusConditionedStatusPtrOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
type KubernetesApplicationResourceStatusConditionedStatusOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusConditionedStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatusConditionedStatus)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusConditionedStatusOutput) ToKubernetesApplicationResourceStatusConditionedStatusOutput() KubernetesApplicationResourceStatusConditionedStatusOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusOutput) ToKubernetesApplicationResourceStatusConditionedStatusOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusOutput) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutput() KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return o.ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationResourceStatusConditionedStatusOutput) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatus) *KubernetesApplicationResourceStatusConditionedStatus {
		return &v
	}).(KubernetesApplicationResourceStatusConditionedStatusPtrOutput)
}

// Conditions of the resource.
func (o KubernetesApplicationResourceStatusConditionedStatusOutput) Conditions() KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatus) []KubernetesApplicationResourceStatusConditionedStatusConditions {
		return v.Conditions
	}).(KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput)
}

type KubernetesApplicationResourceStatusConditionedStatusPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusConditionedStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceStatusConditionedStatus)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusConditionedStatusPtrOutput) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutput() KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusPtrOutput) ToKubernetesApplicationResourceStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusPtrOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusPtrOutput) Elem() KubernetesApplicationResourceStatusConditionedStatusOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatusConditionedStatus) KubernetesApplicationResourceStatusConditionedStatus {
		return *v
	}).(KubernetesApplicationResourceStatusConditionedStatusOutput)
}

// Conditions of the resource.
func (o KubernetesApplicationResourceStatusConditionedStatusPtrOutput) Conditions() KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatusConditionedStatus) []KubernetesApplicationResourceStatusConditionedStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type KubernetesApplicationResourceStatusConditionedStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// KubernetesApplicationResourceStatusConditionedStatusConditionsInput is an input type that accepts KubernetesApplicationResourceStatusConditionedStatusConditionsArgs and KubernetesApplicationResourceStatusConditionedStatusConditionsOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusConditionedStatusConditionsInput` via:
//
//          KubernetesApplicationResourceStatusConditionedStatusConditionsArgs{...}
type KubernetesApplicationResourceStatusConditionedStatusConditionsInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutput() KubernetesApplicationResourceStatusConditionedStatusConditionsOutput
	ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutputWithContext(context.Context) KubernetesApplicationResourceStatusConditionedStatusConditionsOutput
}

// A Condition that may apply to a resource.
type KubernetesApplicationResourceStatusConditionedStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KubernetesApplicationResourceStatusConditionedStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatusConditionedStatusConditions)(nil)).Elem()
}

func (i KubernetesApplicationResourceStatusConditionedStatusConditionsArgs) ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutput() KubernetesApplicationResourceStatusConditionedStatusConditionsOutput {
	return i.ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusConditionedStatusConditionsArgs) ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusConditionedStatusConditionsOutput)
}

// KubernetesApplicationResourceStatusConditionedStatusConditionsArrayInput is an input type that accepts KubernetesApplicationResourceStatusConditionedStatusConditionsArray and KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusConditionedStatusConditionsArrayInput` via:
//
//          KubernetesApplicationResourceStatusConditionedStatusConditionsArray{ KubernetesApplicationResourceStatusConditionedStatusConditionsArgs{...} }
type KubernetesApplicationResourceStatusConditionedStatusConditionsArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput() KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput
	ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutputWithContext(context.Context) KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput
}

type KubernetesApplicationResourceStatusConditionedStatusConditionsArray []KubernetesApplicationResourceStatusConditionedStatusConditionsInput

func (KubernetesApplicationResourceStatusConditionedStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationResourceStatusConditionedStatusConditions)(nil)).Elem()
}

func (i KubernetesApplicationResourceStatusConditionedStatusConditionsArray) ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput() KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput {
	return i.ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusConditionedStatusConditionsArray) ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type KubernetesApplicationResourceStatusConditionedStatusConditionsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatusConditionedStatusConditions)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutput() KubernetesApplicationResourceStatusConditionedStatusConditionsOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) ToKubernetesApplicationResourceStatusConditionedStatusConditionsOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatusConditions) string {
		return v.LastTransitionTime
	}).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o KubernetesApplicationResourceStatusConditionedStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusConditionedStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationResourceStatusConditionedStatusConditions)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput) ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput() KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput) ToKubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput {
	return o
}

func (o KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationResourceStatusConditionedStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationResourceStatusConditionedStatusConditions {
		return vs[0].([]KubernetesApplicationResourceStatusConditionedStatusConditions)[vs[1].(int)]
	}).(KubernetesApplicationResourceStatusConditionedStatusConditionsOutput)
}

// Remote status of the resource templated by this application resource.
type KubernetesApplicationResourceStatusRemote struct {
	// Raw JSON representation of the remote status as a byte array.
	Raw *string `pulumi:"raw"`
}

// KubernetesApplicationResourceStatusRemoteInput is an input type that accepts KubernetesApplicationResourceStatusRemoteArgs and KubernetesApplicationResourceStatusRemoteOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusRemoteInput` via:
//
//          KubernetesApplicationResourceStatusRemoteArgs{...}
type KubernetesApplicationResourceStatusRemoteInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusRemoteOutput() KubernetesApplicationResourceStatusRemoteOutput
	ToKubernetesApplicationResourceStatusRemoteOutputWithContext(context.Context) KubernetesApplicationResourceStatusRemoteOutput
}

// Remote status of the resource templated by this application resource.
type KubernetesApplicationResourceStatusRemoteArgs struct {
	// Raw JSON representation of the remote status as a byte array.
	Raw pulumi.StringPtrInput `pulumi:"raw"`
}

func (KubernetesApplicationResourceStatusRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatusRemote)(nil)).Elem()
}

func (i KubernetesApplicationResourceStatusRemoteArgs) ToKubernetesApplicationResourceStatusRemoteOutput() KubernetesApplicationResourceStatusRemoteOutput {
	return i.ToKubernetesApplicationResourceStatusRemoteOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusRemoteArgs) ToKubernetesApplicationResourceStatusRemoteOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusRemoteOutput)
}

func (i KubernetesApplicationResourceStatusRemoteArgs) ToKubernetesApplicationResourceStatusRemotePtrOutput() KubernetesApplicationResourceStatusRemotePtrOutput {
	return i.ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationResourceStatusRemoteArgs) ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusRemoteOutput).ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(ctx)
}

// KubernetesApplicationResourceStatusRemotePtrInput is an input type that accepts KubernetesApplicationResourceStatusRemoteArgs, KubernetesApplicationResourceStatusRemotePtr and KubernetesApplicationResourceStatusRemotePtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationResourceStatusRemotePtrInput` via:
//
//          KubernetesApplicationResourceStatusRemoteArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationResourceStatusRemotePtrInput interface {
	pulumi.Input

	ToKubernetesApplicationResourceStatusRemotePtrOutput() KubernetesApplicationResourceStatusRemotePtrOutput
	ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(context.Context) KubernetesApplicationResourceStatusRemotePtrOutput
}

type kubernetesApplicationResourceStatusRemotePtrType KubernetesApplicationResourceStatusRemoteArgs

func KubernetesApplicationResourceStatusRemotePtr(v *KubernetesApplicationResourceStatusRemoteArgs) KubernetesApplicationResourceStatusRemotePtrInput {
	return (*kubernetesApplicationResourceStatusRemotePtrType)(v)
}

func (*kubernetesApplicationResourceStatusRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceStatusRemote)(nil)).Elem()
}

func (i *kubernetesApplicationResourceStatusRemotePtrType) ToKubernetesApplicationResourceStatusRemotePtrOutput() KubernetesApplicationResourceStatusRemotePtrOutput {
	return i.ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationResourceStatusRemotePtrType) ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationResourceStatusRemotePtrOutput)
}

// Remote status of the resource templated by this application resource.
type KubernetesApplicationResourceStatusRemoteOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationResourceStatusRemote)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusRemoteOutput) ToKubernetesApplicationResourceStatusRemoteOutput() KubernetesApplicationResourceStatusRemoteOutput {
	return o
}

func (o KubernetesApplicationResourceStatusRemoteOutput) ToKubernetesApplicationResourceStatusRemoteOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusRemoteOutput {
	return o
}

func (o KubernetesApplicationResourceStatusRemoteOutput) ToKubernetesApplicationResourceStatusRemotePtrOutput() KubernetesApplicationResourceStatusRemotePtrOutput {
	return o.ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationResourceStatusRemoteOutput) ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusRemotePtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusRemote) *KubernetesApplicationResourceStatusRemote {
		return &v
	}).(KubernetesApplicationResourceStatusRemotePtrOutput)
}

// Raw JSON representation of the remote status as a byte array.
func (o KubernetesApplicationResourceStatusRemoteOutput) Raw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationResourceStatusRemote) *string { return v.Raw }).(pulumi.StringPtrOutput)
}

type KubernetesApplicationResourceStatusRemotePtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationResourceStatusRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationResourceStatusRemote)(nil)).Elem()
}

func (o KubernetesApplicationResourceStatusRemotePtrOutput) ToKubernetesApplicationResourceStatusRemotePtrOutput() KubernetesApplicationResourceStatusRemotePtrOutput {
	return o
}

func (o KubernetesApplicationResourceStatusRemotePtrOutput) ToKubernetesApplicationResourceStatusRemotePtrOutputWithContext(ctx context.Context) KubernetesApplicationResourceStatusRemotePtrOutput {
	return o
}

func (o KubernetesApplicationResourceStatusRemotePtrOutput) Elem() KubernetesApplicationResourceStatusRemoteOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatusRemote) KubernetesApplicationResourceStatusRemote {
		return *v
	}).(KubernetesApplicationResourceStatusRemoteOutput)
}

// Raw JSON representation of the remote status as a byte array.
func (o KubernetesApplicationResourceStatusRemotePtrOutput) Raw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationResourceStatusRemote) *string {
		if v == nil {
			return nil
		}
		return v.Raw
	}).(pulumi.StringPtrOutput)
}

// A KubernetesApplicationSpec specifies the resources of a Kubernetes application.
type KubernetesApplicationSpec struct {
	// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
	ResourceSelector KubernetesApplicationSpecResourceSelector `pulumi:"resourceSelector"`
	// ResourceTemplates specifies a set of Kubernetes application resources managed by this application.
	ResourceTemplates []KubernetesApplicationSpecResourceTemplates `pulumi:"resourceTemplates"`
	// Target to which this application has been scheduled.
	TargetRef *KubernetesApplicationSpecTargetRef `pulumi:"targetRef"`
	// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
	TargetSelector *KubernetesApplicationSpecTargetSelector `pulumi:"targetSelector"`
}

// KubernetesApplicationSpecInput is an input type that accepts KubernetesApplicationSpecArgs and KubernetesApplicationSpecOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecInput` via:
//
//          KubernetesApplicationSpecArgs{...}
type KubernetesApplicationSpecInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecOutput() KubernetesApplicationSpecOutput
	ToKubernetesApplicationSpecOutputWithContext(context.Context) KubernetesApplicationSpecOutput
}

// A KubernetesApplicationSpec specifies the resources of a Kubernetes application.
type KubernetesApplicationSpecArgs struct {
	// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
	ResourceSelector KubernetesApplicationSpecResourceSelectorInput `pulumi:"resourceSelector"`
	// ResourceTemplates specifies a set of Kubernetes application resources managed by this application.
	ResourceTemplates KubernetesApplicationSpecResourceTemplatesArrayInput `pulumi:"resourceTemplates"`
	// Target to which this application has been scheduled.
	TargetRef KubernetesApplicationSpecTargetRefPtrInput `pulumi:"targetRef"`
	// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
	TargetSelector KubernetesApplicationSpecTargetSelectorPtrInput `pulumi:"targetSelector"`
}

func (KubernetesApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpec)(nil)).Elem()
}

func (i KubernetesApplicationSpecArgs) ToKubernetesApplicationSpecOutput() KubernetesApplicationSpecOutput {
	return i.ToKubernetesApplicationSpecOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecArgs) ToKubernetesApplicationSpecOutputWithContext(ctx context.Context) KubernetesApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecOutput)
}

func (i KubernetesApplicationSpecArgs) ToKubernetesApplicationSpecPtrOutput() KubernetesApplicationSpecPtrOutput {
	return i.ToKubernetesApplicationSpecPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecArgs) ToKubernetesApplicationSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecOutput).ToKubernetesApplicationSpecPtrOutputWithContext(ctx)
}

// KubernetesApplicationSpecPtrInput is an input type that accepts KubernetesApplicationSpecArgs, KubernetesApplicationSpecPtr and KubernetesApplicationSpecPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecPtrInput` via:
//
//          KubernetesApplicationSpecArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationSpecPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecPtrOutput() KubernetesApplicationSpecPtrOutput
	ToKubernetesApplicationSpecPtrOutputWithContext(context.Context) KubernetesApplicationSpecPtrOutput
}

type kubernetesApplicationSpecPtrType KubernetesApplicationSpecArgs

func KubernetesApplicationSpecPtr(v *KubernetesApplicationSpecArgs) KubernetesApplicationSpecPtrInput {
	return (*kubernetesApplicationSpecPtrType)(v)
}

func (*kubernetesApplicationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpec)(nil)).Elem()
}

func (i *kubernetesApplicationSpecPtrType) ToKubernetesApplicationSpecPtrOutput() KubernetesApplicationSpecPtrOutput {
	return i.ToKubernetesApplicationSpecPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationSpecPtrType) ToKubernetesApplicationSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecPtrOutput)
}

// A KubernetesApplicationSpec specifies the resources of a Kubernetes application.
type KubernetesApplicationSpecOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpec)(nil)).Elem()
}

func (o KubernetesApplicationSpecOutput) ToKubernetesApplicationSpecOutput() KubernetesApplicationSpecOutput {
	return o
}

func (o KubernetesApplicationSpecOutput) ToKubernetesApplicationSpecOutputWithContext(ctx context.Context) KubernetesApplicationSpecOutput {
	return o
}

func (o KubernetesApplicationSpecOutput) ToKubernetesApplicationSpecPtrOutput() KubernetesApplicationSpecPtrOutput {
	return o.ToKubernetesApplicationSpecPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationSpecOutput) ToKubernetesApplicationSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpec) *KubernetesApplicationSpec {
		return &v
	}).(KubernetesApplicationSpecPtrOutput)
}

// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
func (o KubernetesApplicationSpecOutput) ResourceSelector() KubernetesApplicationSpecResourceSelectorOutput {
	return o.ApplyT(func(v KubernetesApplicationSpec) KubernetesApplicationSpecResourceSelector { return v.ResourceSelector }).(KubernetesApplicationSpecResourceSelectorOutput)
}

// ResourceTemplates specifies a set of Kubernetes application resources managed by this application.
func (o KubernetesApplicationSpecOutput) ResourceTemplates() KubernetesApplicationSpecResourceTemplatesArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationSpec) []KubernetesApplicationSpecResourceTemplates {
		return v.ResourceTemplates
	}).(KubernetesApplicationSpecResourceTemplatesArrayOutput)
}

// Target to which this application has been scheduled.
func (o KubernetesApplicationSpecOutput) TargetRef() KubernetesApplicationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpec) *KubernetesApplicationSpecTargetRef { return v.TargetRef }).(KubernetesApplicationSpecTargetRefPtrOutput)
}

// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
func (o KubernetesApplicationSpecOutput) TargetSelector() KubernetesApplicationSpecTargetSelectorPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpec) *KubernetesApplicationSpecTargetSelector { return v.TargetSelector }).(KubernetesApplicationSpecTargetSelectorPtrOutput)
}

type KubernetesApplicationSpecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpec)(nil)).Elem()
}

func (o KubernetesApplicationSpecPtrOutput) ToKubernetesApplicationSpecPtrOutput() KubernetesApplicationSpecPtrOutput {
	return o
}

func (o KubernetesApplicationSpecPtrOutput) ToKubernetesApplicationSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecPtrOutput {
	return o
}

func (o KubernetesApplicationSpecPtrOutput) Elem() KubernetesApplicationSpecOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpec) KubernetesApplicationSpec { return *v }).(KubernetesApplicationSpecOutput)
}

// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
func (o KubernetesApplicationSpecPtrOutput) ResourceSelector() KubernetesApplicationSpecResourceSelectorPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpec) *KubernetesApplicationSpecResourceSelector {
		if v == nil {
			return nil
		}
		return &v.ResourceSelector
	}).(KubernetesApplicationSpecResourceSelectorPtrOutput)
}

// ResourceTemplates specifies a set of Kubernetes application resources managed by this application.
func (o KubernetesApplicationSpecPtrOutput) ResourceTemplates() KubernetesApplicationSpecResourceTemplatesArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpec) []KubernetesApplicationSpecResourceTemplates {
		if v == nil {
			return nil
		}
		return v.ResourceTemplates
	}).(KubernetesApplicationSpecResourceTemplatesArrayOutput)
}

// Target to which this application has been scheduled.
func (o KubernetesApplicationSpecPtrOutput) TargetRef() KubernetesApplicationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpec) *KubernetesApplicationSpecTargetRef {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(KubernetesApplicationSpecTargetRefPtrOutput)
}

// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
func (o KubernetesApplicationSpecPtrOutput) TargetSelector() KubernetesApplicationSpecTargetSelectorPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpec) *KubernetesApplicationSpecTargetSelector {
		if v == nil {
			return nil
		}
		return v.TargetSelector
	}).(KubernetesApplicationSpecTargetSelectorPtrOutput)
}

// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
type KubernetesApplicationSpecResourceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []KubernetesApplicationSpecResourceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// KubernetesApplicationSpecResourceSelectorInput is an input type that accepts KubernetesApplicationSpecResourceSelectorArgs and KubernetesApplicationSpecResourceSelectorOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceSelectorInput` via:
//
//          KubernetesApplicationSpecResourceSelectorArgs{...}
type KubernetesApplicationSpecResourceSelectorInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceSelectorOutput() KubernetesApplicationSpecResourceSelectorOutput
	ToKubernetesApplicationSpecResourceSelectorOutputWithContext(context.Context) KubernetesApplicationSpecResourceSelectorOutput
}

// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
type KubernetesApplicationSpecResourceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (KubernetesApplicationSpecResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceSelector)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceSelectorArgs) ToKubernetesApplicationSpecResourceSelectorOutput() KubernetesApplicationSpecResourceSelectorOutput {
	return i.ToKubernetesApplicationSpecResourceSelectorOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceSelectorArgs) ToKubernetesApplicationSpecResourceSelectorOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceSelectorOutput)
}

func (i KubernetesApplicationSpecResourceSelectorArgs) ToKubernetesApplicationSpecResourceSelectorPtrOutput() KubernetesApplicationSpecResourceSelectorPtrOutput {
	return i.ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceSelectorArgs) ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceSelectorOutput).ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(ctx)
}

// KubernetesApplicationSpecResourceSelectorPtrInput is an input type that accepts KubernetesApplicationSpecResourceSelectorArgs, KubernetesApplicationSpecResourceSelectorPtr and KubernetesApplicationSpecResourceSelectorPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceSelectorPtrInput` via:
//
//          KubernetesApplicationSpecResourceSelectorArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationSpecResourceSelectorPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceSelectorPtrOutput() KubernetesApplicationSpecResourceSelectorPtrOutput
	ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(context.Context) KubernetesApplicationSpecResourceSelectorPtrOutput
}

type kubernetesApplicationSpecResourceSelectorPtrType KubernetesApplicationSpecResourceSelectorArgs

func KubernetesApplicationSpecResourceSelectorPtr(v *KubernetesApplicationSpecResourceSelectorArgs) KubernetesApplicationSpecResourceSelectorPtrInput {
	return (*kubernetesApplicationSpecResourceSelectorPtrType)(v)
}

func (*kubernetesApplicationSpecResourceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecResourceSelector)(nil)).Elem()
}

func (i *kubernetesApplicationSpecResourceSelectorPtrType) ToKubernetesApplicationSpecResourceSelectorPtrOutput() KubernetesApplicationSpecResourceSelectorPtrOutput {
	return i.ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationSpecResourceSelectorPtrType) ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceSelectorPtrOutput)
}

// ResourceSelector selects the KubernetesApplicationResources that are managed by this KubernetesApplication. Note that a KubernetesApplication will never adopt orphaned KubernetesApplicationResources, and thus this selector serves only to help match a KubernetesApplication to its KubernetesApplicationResources.
type KubernetesApplicationSpecResourceSelectorOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceSelector)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceSelectorOutput) ToKubernetesApplicationSpecResourceSelectorOutput() KubernetesApplicationSpecResourceSelectorOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorOutput) ToKubernetesApplicationSpecResourceSelectorOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorOutput) ToKubernetesApplicationSpecResourceSelectorPtrOutput() KubernetesApplicationSpecResourceSelectorPtrOutput {
	return o.ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationSpecResourceSelectorOutput) ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceSelector) *KubernetesApplicationSpecResourceSelector {
		return &v
	}).(KubernetesApplicationSpecResourceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KubernetesApplicationSpecResourceSelectorOutput) MatchExpressions() KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceSelector) []KubernetesApplicationSpecResourceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KubernetesApplicationSpecResourceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type KubernetesApplicationSpecResourceSelectorPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecResourceSelector)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceSelectorPtrOutput) ToKubernetesApplicationSpecResourceSelectorPtrOutput() KubernetesApplicationSpecResourceSelectorPtrOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorPtrOutput) ToKubernetesApplicationSpecResourceSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorPtrOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorPtrOutput) Elem() KubernetesApplicationSpecResourceSelectorOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceSelector) KubernetesApplicationSpecResourceSelector {
		return *v
	}).(KubernetesApplicationSpecResourceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KubernetesApplicationSpecResourceSelectorPtrOutput) MatchExpressions() KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceSelector) []KubernetesApplicationSpecResourceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KubernetesApplicationSpecResourceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KubernetesApplicationSpecResourceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// KubernetesApplicationSpecResourceSelectorMatchExpressionsInput is an input type that accepts KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs and KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceSelectorMatchExpressionsInput` via:
//
//          KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs{...}
type KubernetesApplicationSpecResourceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutput() KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput
	ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutputWithContext(context.Context) KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceSelectorMatchExpressions)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutput() KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput {
	return i.ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput)
}

// KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayInput is an input type that accepts KubernetesApplicationSpecResourceSelectorMatchExpressionsArray and KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayInput` via:
//
//          KubernetesApplicationSpecResourceSelectorMatchExpressionsArray{ KubernetesApplicationSpecResourceSelectorMatchExpressionsArgs{...} }
type KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput() KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput
	ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutputWithContext(context.Context) KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput
}

type KubernetesApplicationSpecResourceSelectorMatchExpressionsArray []KubernetesApplicationSpecResourceSelectorMatchExpressionsInput

func (KubernetesApplicationSpecResourceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecResourceSelectorMatchExpressions)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceSelectorMatchExpressionsArray) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput() KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput {
	return i.ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceSelectorMatchExpressionsArray) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceSelectorMatchExpressions)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutput() KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecResourceSelectorMatchExpressions)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput() KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput) ToKubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationSpecResourceSelectorMatchExpressions {
		return vs[0].([]KubernetesApplicationSpecResourceSelectorMatchExpressions)[vs[1].(int)]
	}).(KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KubernetesApplicationSpecResourceSelectorMatchLabels struct {
}

// KubernetesApplicationSpecResourceSelectorMatchLabelsInput is an input type that accepts KubernetesApplicationSpecResourceSelectorMatchLabelsArgs and KubernetesApplicationSpecResourceSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceSelectorMatchLabelsInput` via:
//
//          KubernetesApplicationSpecResourceSelectorMatchLabelsArgs{...}
type KubernetesApplicationSpecResourceSelectorMatchLabelsInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutput() KubernetesApplicationSpecResourceSelectorMatchLabelsOutput
	ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutputWithContext(context.Context) KubernetesApplicationSpecResourceSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KubernetesApplicationSpecResourceSelectorMatchLabelsArgs struct {
}

func (KubernetesApplicationSpecResourceSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceSelectorMatchLabels)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceSelectorMatchLabelsArgs) ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutput() KubernetesApplicationSpecResourceSelectorMatchLabelsOutput {
	return i.ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceSelectorMatchLabelsArgs) ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KubernetesApplicationSpecResourceSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceSelectorMatchLabels)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceSelectorMatchLabelsOutput) ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutput() KubernetesApplicationSpecResourceSelectorMatchLabelsOutput {
	return o
}

func (o KubernetesApplicationSpecResourceSelectorMatchLabelsOutput) ToKubernetesApplicationSpecResourceSelectorMatchLabelsOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceSelectorMatchLabelsOutput {
	return o
}

// A KubernetesApplicationResourceTemplate is used to instantiate new KubernetesApplicationResources.
type KubernetesApplicationSpecResourceTemplates struct {
	Metadata map[string]interface{} `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec *KubernetesApplicationSpecResourceTemplatesSpec `pulumi:"spec"`
}

// KubernetesApplicationSpecResourceTemplatesInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesArgs and KubernetesApplicationSpecResourceTemplatesOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesArgs{...}
type KubernetesApplicationSpecResourceTemplatesInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesOutput() KubernetesApplicationSpecResourceTemplatesOutput
	ToKubernetesApplicationSpecResourceTemplatesOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesOutput
}

// A KubernetesApplicationResourceTemplate is used to instantiate new KubernetesApplicationResources.
type KubernetesApplicationSpecResourceTemplatesArgs struct {
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
	Spec KubernetesApplicationSpecResourceTemplatesSpecPtrInput `pulumi:"spec"`
}

func (KubernetesApplicationSpecResourceTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplates)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesArgs) ToKubernetesApplicationSpecResourceTemplatesOutput() KubernetesApplicationSpecResourceTemplatesOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesArgs) ToKubernetesApplicationSpecResourceTemplatesOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesOutput)
}

// KubernetesApplicationSpecResourceTemplatesArrayInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesArray and KubernetesApplicationSpecResourceTemplatesArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesArrayInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesArray{ KubernetesApplicationSpecResourceTemplatesArgs{...} }
type KubernetesApplicationSpecResourceTemplatesArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesArrayOutput() KubernetesApplicationSpecResourceTemplatesArrayOutput
	ToKubernetesApplicationSpecResourceTemplatesArrayOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesArrayOutput
}

type KubernetesApplicationSpecResourceTemplatesArray []KubernetesApplicationSpecResourceTemplatesInput

func (KubernetesApplicationSpecResourceTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecResourceTemplates)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesArray) ToKubernetesApplicationSpecResourceTemplatesArrayOutput() KubernetesApplicationSpecResourceTemplatesArrayOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesArray) ToKubernetesApplicationSpecResourceTemplatesArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesArrayOutput)
}

// A KubernetesApplicationResourceTemplate is used to instantiate new KubernetesApplicationResources.
type KubernetesApplicationSpecResourceTemplatesOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplates)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesOutput) ToKubernetesApplicationSpecResourceTemplatesOutput() KubernetesApplicationSpecResourceTemplatesOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesOutput) ToKubernetesApplicationSpecResourceTemplatesOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplates) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
func (o KubernetesApplicationSpecResourceTemplatesOutput) Spec() KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplates) *KubernetesApplicationSpecResourceTemplatesSpec {
		return v.Spec
	}).(KubernetesApplicationSpecResourceTemplatesSpecPtrOutput)
}

type KubernetesApplicationSpecResourceTemplatesArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecResourceTemplates)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesArrayOutput) ToKubernetesApplicationSpecResourceTemplatesArrayOutput() KubernetesApplicationSpecResourceTemplatesArrayOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesArrayOutput) ToKubernetesApplicationSpecResourceTemplatesArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesArrayOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationSpecResourceTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationSpecResourceTemplates {
		return vs[0].([]KubernetesApplicationSpecResourceTemplates)[vs[1].(int)]
	}).(KubernetesApplicationSpecResourceTemplatesOutput)
}

type KubernetesApplicationSpecResourceTemplatesMetadata struct {
}

// KubernetesApplicationSpecResourceTemplatesMetadataInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesMetadataArgs and KubernetesApplicationSpecResourceTemplatesMetadataOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesMetadataInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesMetadataArgs{...}
type KubernetesApplicationSpecResourceTemplatesMetadataInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesMetadataOutput() KubernetesApplicationSpecResourceTemplatesMetadataOutput
	ToKubernetesApplicationSpecResourceTemplatesMetadataOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesMetadataOutput
}

type KubernetesApplicationSpecResourceTemplatesMetadataArgs struct {
}

func (KubernetesApplicationSpecResourceTemplatesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesMetadata)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesMetadataArgs) ToKubernetesApplicationSpecResourceTemplatesMetadataOutput() KubernetesApplicationSpecResourceTemplatesMetadataOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesMetadataOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesMetadataArgs) ToKubernetesApplicationSpecResourceTemplatesMetadataOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesMetadataOutput)
}

type KubernetesApplicationSpecResourceTemplatesMetadataOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesMetadata)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesMetadataOutput) ToKubernetesApplicationSpecResourceTemplatesMetadataOutput() KubernetesApplicationSpecResourceTemplatesMetadataOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesMetadataOutput) ToKubernetesApplicationSpecResourceTemplatesMetadataOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesMetadataOutput {
	return o
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
type KubernetesApplicationSpecResourceTemplatesSpec struct {
	// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
	Secrets []KubernetesApplicationSpecResourceTemplatesSpecSecrets `pulumi:"secrets"`
	// Target to which this application has been scheduled.
	TargetRef *KubernetesApplicationSpecResourceTemplatesSpecTargetRef `pulumi:"targetRef"`
	// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
	Template map[string]interface{} `pulumi:"template"`
}

// KubernetesApplicationSpecResourceTemplatesSpecInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecArgs and KubernetesApplicationSpecResourceTemplatesSpecOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecArgs{...}
type KubernetesApplicationSpecResourceTemplatesSpecInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecOutput() KubernetesApplicationSpecResourceTemplatesSpecOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecOutput
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
type KubernetesApplicationSpecResourceTemplatesSpecArgs struct {
	// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
	Secrets KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayInput `pulumi:"secrets"`
	// Target to which this application has been scheduled.
	TargetRef KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrInput `pulumi:"targetRef"`
	// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
	Template pulumi.MapInput `pulumi:"template"`
}

func (KubernetesApplicationSpecResourceTemplatesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpec)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesSpecArgs) ToKubernetesApplicationSpecResourceTemplatesSpecOutput() KubernetesApplicationSpecResourceTemplatesSpecOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecArgs) ToKubernetesApplicationSpecResourceTemplatesSpecOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecOutput)
}

func (i KubernetesApplicationSpecResourceTemplatesSpecArgs) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecArgs) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecOutput).ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(ctx)
}

// KubernetesApplicationSpecResourceTemplatesSpecPtrInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecArgs, KubernetesApplicationSpecResourceTemplatesSpecPtr and KubernetesApplicationSpecResourceTemplatesSpecPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecPtrInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationSpecResourceTemplatesSpecPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecPtrOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecPtrOutput
}

type kubernetesApplicationSpecResourceTemplatesSpecPtrType KubernetesApplicationSpecResourceTemplatesSpecArgs

func KubernetesApplicationSpecResourceTemplatesSpecPtr(v *KubernetesApplicationSpecResourceTemplatesSpecArgs) KubernetesApplicationSpecResourceTemplatesSpecPtrInput {
	return (*kubernetesApplicationSpecResourceTemplatesSpecPtrType)(v)
}

func (*kubernetesApplicationSpecResourceTemplatesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecResourceTemplatesSpec)(nil)).Elem()
}

func (i *kubernetesApplicationSpecResourceTemplatesSpecPtrType) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationSpecResourceTemplatesSpecPtrType) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecPtrOutput)
}

// KubernetesApplicationResourceSpec specifies the desired state of a KubernetesApplicationResource.
type KubernetesApplicationSpecResourceTemplatesSpecOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpec)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) ToKubernetesApplicationSpecResourceTemplatesSpecOutput() KubernetesApplicationSpecResourceTemplatesSpecOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) ToKubernetesApplicationSpecResourceTemplatesSpecOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return o.ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpec) *KubernetesApplicationSpecResourceTemplatesSpec {
		return &v
	}).(KubernetesApplicationSpecResourceTemplatesSpecPtrOutput)
}

// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) Secrets() KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpec) []KubernetesApplicationSpecResourceTemplatesSpecSecrets {
		return v.Secrets
	}).(KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput)
}

// Target to which this application has been scheduled.
func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) TargetRef() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpec) *KubernetesApplicationSpecResourceTemplatesSpecTargetRef {
		return v.TargetRef
	}).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
func (o KubernetesApplicationSpecResourceTemplatesSpecOutput) Template() pulumi.MapOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpec) map[string]interface{} { return v.Template }).(pulumi.MapOutput)
}

type KubernetesApplicationSpecResourceTemplatesSpecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecResourceTemplatesSpec)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) ToKubernetesApplicationSpecResourceTemplatesSpecPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecPtrOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) Elem() KubernetesApplicationSpecResourceTemplatesSpecOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceTemplatesSpec) KubernetesApplicationSpecResourceTemplatesSpec {
		return *v
	}).(KubernetesApplicationSpecResourceTemplatesSpecOutput)
}

// Secrets upon which this application resource depends. These secrets will be propagated to the Kubernetes cluster to which this application is scheduled.
func (o KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) Secrets() KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceTemplatesSpec) []KubernetesApplicationSpecResourceTemplatesSpecSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput)
}

// Target to which this application has been scheduled.
func (o KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) TargetRef() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceTemplatesSpec) *KubernetesApplicationSpecResourceTemplatesSpecTargetRef {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
func (o KubernetesApplicationSpecResourceTemplatesSpecPtrOutput) Template() pulumi.MapOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceTemplatesSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.MapOutput)
}

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type KubernetesApplicationSpecResourceTemplatesSpecSecrets struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// KubernetesApplicationSpecResourceTemplatesSpecSecretsInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs and KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecSecretsInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs{...}
type KubernetesApplicationSpecResourceTemplatesSpecSecretsInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutput() KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput
}

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpecSecrets)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutput() KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput)
}

// KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecSecretsArray and KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecSecretsArray{ KubernetesApplicationSpecResourceTemplatesSpecSecretsArgs{...} }
type KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput() KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput
}

type KubernetesApplicationSpecResourceTemplatesSpecSecretsArray []KubernetesApplicationSpecResourceTemplatesSpecSecretsInput

func (KubernetesApplicationSpecResourceTemplatesSpecSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecResourceTemplatesSpecSecrets)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesSpecSecretsArray) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput() KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecSecretsArray) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput)
}

// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpecSecrets)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutput() KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput {
	return o
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpecSecrets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecResourceTemplatesSpecSecrets)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput() KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput) ToKubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationSpecResourceTemplatesSpecSecrets {
		return vs[0].([]KubernetesApplicationSpecResourceTemplatesSpecSecrets)[vs[1].(int)]
	}).(KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput)
}

// Target to which this application has been scheduled.
type KubernetesApplicationSpecResourceTemplatesSpecTargetRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// KubernetesApplicationSpecResourceTemplatesSpecTargetRefInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs and KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecTargetRefInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs{...}
type KubernetesApplicationSpecResourceTemplatesSpecTargetRefInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput
}

// Target to which this application has been scheduled.
type KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpecTargetRef)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput)
}

func (i KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput).ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(ctx)
}

// KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs, KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtr and KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput
}

type kubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrType KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs

func KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtr(v *KubernetesApplicationSpecResourceTemplatesSpecTargetRefArgs) KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrInput {
	return (*kubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrType)(v)
}

func (*kubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecResourceTemplatesSpecTargetRef)(nil)).Elem()
}

func (i *kubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrType) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrType) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput)
}

// Target to which this application has been scheduled.
type KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpecTargetRef)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return o.ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpecTargetRef) *KubernetesApplicationSpecResourceTemplatesSpecTargetRef {
		return &v
	}).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecResourceTemplatesSpecTargetRef) string { return v.Name }).(pulumi.StringOutput)
}

type KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecResourceTemplatesSpecTargetRef)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput() KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput) Elem() KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceTemplatesSpecTargetRef) KubernetesApplicationSpecResourceTemplatesSpecTargetRef {
		return *v
	}).(KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecResourceTemplatesSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
type KubernetesApplicationSpecResourceTemplatesSpecTemplate struct {
}

// KubernetesApplicationSpecResourceTemplatesSpecTemplateInput is an input type that accepts KubernetesApplicationSpecResourceTemplatesSpecTemplateArgs and KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecResourceTemplatesSpecTemplateInput` via:
//
//          KubernetesApplicationSpecResourceTemplatesSpecTemplateArgs{...}
type KubernetesApplicationSpecResourceTemplatesSpecTemplateInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutput() KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput
	ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutputWithContext(context.Context) KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
type KubernetesApplicationSpecResourceTemplatesSpecTemplateArgs struct {
}

func (KubernetesApplicationSpecResourceTemplatesSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpecTemplate)(nil)).Elem()
}

func (i KubernetesApplicationSpecResourceTemplatesSpecTemplateArgs) ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutput() KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput {
	return i.ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecResourceTemplatesSpecTemplateArgs) ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput)
}

// A Template for a Kubernetes resource to be submitted to the KubernetesCluster to which this application resource is scheduled. The resource must be understood by the KubernetesCluster. Crossplane requires only that the resource contains standard Kubernetes type and object metadata.
type KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecResourceTemplatesSpecTemplate)(nil)).Elem()
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutput() KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput {
	return o
}

func (o KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput) ToKubernetesApplicationSpecResourceTemplatesSpecTemplateOutputWithContext(ctx context.Context) KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput {
	return o
}

// Target to which this application has been scheduled.
type KubernetesApplicationSpecTargetRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// KubernetesApplicationSpecTargetRefInput is an input type that accepts KubernetesApplicationSpecTargetRefArgs and KubernetesApplicationSpecTargetRefOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetRefInput` via:
//
//          KubernetesApplicationSpecTargetRefArgs{...}
type KubernetesApplicationSpecTargetRefInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetRefOutput() KubernetesApplicationSpecTargetRefOutput
	ToKubernetesApplicationSpecTargetRefOutputWithContext(context.Context) KubernetesApplicationSpecTargetRefOutput
}

// Target to which this application has been scheduled.
type KubernetesApplicationSpecTargetRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (KubernetesApplicationSpecTargetRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetRef)(nil)).Elem()
}

func (i KubernetesApplicationSpecTargetRefArgs) ToKubernetesApplicationSpecTargetRefOutput() KubernetesApplicationSpecTargetRefOutput {
	return i.ToKubernetesApplicationSpecTargetRefOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetRefArgs) ToKubernetesApplicationSpecTargetRefOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetRefOutput)
}

func (i KubernetesApplicationSpecTargetRefArgs) ToKubernetesApplicationSpecTargetRefPtrOutput() KubernetesApplicationSpecTargetRefPtrOutput {
	return i.ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetRefArgs) ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetRefOutput).ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(ctx)
}

// KubernetesApplicationSpecTargetRefPtrInput is an input type that accepts KubernetesApplicationSpecTargetRefArgs, KubernetesApplicationSpecTargetRefPtr and KubernetesApplicationSpecTargetRefPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetRefPtrInput` via:
//
//          KubernetesApplicationSpecTargetRefArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationSpecTargetRefPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetRefPtrOutput() KubernetesApplicationSpecTargetRefPtrOutput
	ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(context.Context) KubernetesApplicationSpecTargetRefPtrOutput
}

type kubernetesApplicationSpecTargetRefPtrType KubernetesApplicationSpecTargetRefArgs

func KubernetesApplicationSpecTargetRefPtr(v *KubernetesApplicationSpecTargetRefArgs) KubernetesApplicationSpecTargetRefPtrInput {
	return (*kubernetesApplicationSpecTargetRefPtrType)(v)
}

func (*kubernetesApplicationSpecTargetRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecTargetRef)(nil)).Elem()
}

func (i *kubernetesApplicationSpecTargetRefPtrType) ToKubernetesApplicationSpecTargetRefPtrOutput() KubernetesApplicationSpecTargetRefPtrOutput {
	return i.ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationSpecTargetRefPtrType) ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetRefPtrOutput)
}

// Target to which this application has been scheduled.
type KubernetesApplicationSpecTargetRefOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetRef)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetRefOutput) ToKubernetesApplicationSpecTargetRefOutput() KubernetesApplicationSpecTargetRefOutput {
	return o
}

func (o KubernetesApplicationSpecTargetRefOutput) ToKubernetesApplicationSpecTargetRefOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetRefOutput {
	return o
}

func (o KubernetesApplicationSpecTargetRefOutput) ToKubernetesApplicationSpecTargetRefPtrOutput() KubernetesApplicationSpecTargetRefPtrOutput {
	return o.ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationSpecTargetRefOutput) ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetRef) *KubernetesApplicationSpecTargetRef {
		return &v
	}).(KubernetesApplicationSpecTargetRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesApplicationSpecTargetRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetRef) string { return v.Name }).(pulumi.StringOutput)
}

type KubernetesApplicationSpecTargetRefPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecTargetRef)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetRefPtrOutput) ToKubernetesApplicationSpecTargetRefPtrOutput() KubernetesApplicationSpecTargetRefPtrOutput {
	return o
}

func (o KubernetesApplicationSpecTargetRefPtrOutput) ToKubernetesApplicationSpecTargetRefPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetRefPtrOutput {
	return o
}

func (o KubernetesApplicationSpecTargetRefPtrOutput) Elem() KubernetesApplicationSpecTargetRefOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecTargetRef) KubernetesApplicationSpecTargetRef { return *v }).(KubernetesApplicationSpecTargetRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesApplicationSpecTargetRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
type KubernetesApplicationSpecTargetSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []KubernetesApplicationSpecTargetSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// KubernetesApplicationSpecTargetSelectorInput is an input type that accepts KubernetesApplicationSpecTargetSelectorArgs and KubernetesApplicationSpecTargetSelectorOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetSelectorInput` via:
//
//          KubernetesApplicationSpecTargetSelectorArgs{...}
type KubernetesApplicationSpecTargetSelectorInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetSelectorOutput() KubernetesApplicationSpecTargetSelectorOutput
	ToKubernetesApplicationSpecTargetSelectorOutputWithContext(context.Context) KubernetesApplicationSpecTargetSelectorOutput
}

// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
type KubernetesApplicationSpecTargetSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (KubernetesApplicationSpecTargetSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetSelector)(nil)).Elem()
}

func (i KubernetesApplicationSpecTargetSelectorArgs) ToKubernetesApplicationSpecTargetSelectorOutput() KubernetesApplicationSpecTargetSelectorOutput {
	return i.ToKubernetesApplicationSpecTargetSelectorOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetSelectorArgs) ToKubernetesApplicationSpecTargetSelectorOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetSelectorOutput)
}

func (i KubernetesApplicationSpecTargetSelectorArgs) ToKubernetesApplicationSpecTargetSelectorPtrOutput() KubernetesApplicationSpecTargetSelectorPtrOutput {
	return i.ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetSelectorArgs) ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetSelectorOutput).ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(ctx)
}

// KubernetesApplicationSpecTargetSelectorPtrInput is an input type that accepts KubernetesApplicationSpecTargetSelectorArgs, KubernetesApplicationSpecTargetSelectorPtr and KubernetesApplicationSpecTargetSelectorPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetSelectorPtrInput` via:
//
//          KubernetesApplicationSpecTargetSelectorArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationSpecTargetSelectorPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetSelectorPtrOutput() KubernetesApplicationSpecTargetSelectorPtrOutput
	ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(context.Context) KubernetesApplicationSpecTargetSelectorPtrOutput
}

type kubernetesApplicationSpecTargetSelectorPtrType KubernetesApplicationSpecTargetSelectorArgs

func KubernetesApplicationSpecTargetSelectorPtr(v *KubernetesApplicationSpecTargetSelectorArgs) KubernetesApplicationSpecTargetSelectorPtrInput {
	return (*kubernetesApplicationSpecTargetSelectorPtrType)(v)
}

func (*kubernetesApplicationSpecTargetSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecTargetSelector)(nil)).Elem()
}

func (i *kubernetesApplicationSpecTargetSelectorPtrType) ToKubernetesApplicationSpecTargetSelectorPtrOutput() KubernetesApplicationSpecTargetSelectorPtrOutput {
	return i.ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationSpecTargetSelectorPtrType) ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetSelectorPtrOutput)
}

// TargetSelector selects the targets to which this application may be scheduled. Leave both match labels and expressions empty to match any target.
type KubernetesApplicationSpecTargetSelectorOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetSelector)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetSelectorOutput) ToKubernetesApplicationSpecTargetSelectorOutput() KubernetesApplicationSpecTargetSelectorOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorOutput) ToKubernetesApplicationSpecTargetSelectorOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorOutput) ToKubernetesApplicationSpecTargetSelectorPtrOutput() KubernetesApplicationSpecTargetSelectorPtrOutput {
	return o.ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationSpecTargetSelectorOutput) ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetSelector) *KubernetesApplicationSpecTargetSelector {
		return &v
	}).(KubernetesApplicationSpecTargetSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KubernetesApplicationSpecTargetSelectorOutput) MatchExpressions() KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetSelector) []KubernetesApplicationSpecTargetSelectorMatchExpressions {
		return v.MatchExpressions
	}).(KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KubernetesApplicationSpecTargetSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type KubernetesApplicationSpecTargetSelectorPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationSpecTargetSelector)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetSelectorPtrOutput) ToKubernetesApplicationSpecTargetSelectorPtrOutput() KubernetesApplicationSpecTargetSelectorPtrOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorPtrOutput) ToKubernetesApplicationSpecTargetSelectorPtrOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorPtrOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorPtrOutput) Elem() KubernetesApplicationSpecTargetSelectorOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecTargetSelector) KubernetesApplicationSpecTargetSelector { return *v }).(KubernetesApplicationSpecTargetSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o KubernetesApplicationSpecTargetSelectorPtrOutput) MatchExpressions() KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecTargetSelector) []KubernetesApplicationSpecTargetSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o KubernetesApplicationSpecTargetSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesApplicationSpecTargetSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KubernetesApplicationSpecTargetSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// KubernetesApplicationSpecTargetSelectorMatchExpressionsInput is an input type that accepts KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs and KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetSelectorMatchExpressionsInput` via:
//
//          KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs{...}
type KubernetesApplicationSpecTargetSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutput() KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput
	ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutputWithContext(context.Context) KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetSelectorMatchExpressions)(nil)).Elem()
}

func (i KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutput() KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput {
	return i.ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput)
}

// KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayInput is an input type that accepts KubernetesApplicationSpecTargetSelectorMatchExpressionsArray and KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayInput` via:
//
//          KubernetesApplicationSpecTargetSelectorMatchExpressionsArray{ KubernetesApplicationSpecTargetSelectorMatchExpressionsArgs{...} }
type KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput() KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput
	ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutputWithContext(context.Context) KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput
}

type KubernetesApplicationSpecTargetSelectorMatchExpressionsArray []KubernetesApplicationSpecTargetSelectorMatchExpressionsInput

func (KubernetesApplicationSpecTargetSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecTargetSelectorMatchExpressions)(nil)).Elem()
}

func (i KubernetesApplicationSpecTargetSelectorMatchExpressionsArray) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput() KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput {
	return i.ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetSelectorMatchExpressionsArray) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetSelectorMatchExpressions)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutput() KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationSpecTargetSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationSpecTargetSelectorMatchExpressions)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput() KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput) ToKubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationSpecTargetSelectorMatchExpressions {
		return vs[0].([]KubernetesApplicationSpecTargetSelectorMatchExpressions)[vs[1].(int)]
	}).(KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KubernetesApplicationSpecTargetSelectorMatchLabels struct {
}

// KubernetesApplicationSpecTargetSelectorMatchLabelsInput is an input type that accepts KubernetesApplicationSpecTargetSelectorMatchLabelsArgs and KubernetesApplicationSpecTargetSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `KubernetesApplicationSpecTargetSelectorMatchLabelsInput` via:
//
//          KubernetesApplicationSpecTargetSelectorMatchLabelsArgs{...}
type KubernetesApplicationSpecTargetSelectorMatchLabelsInput interface {
	pulumi.Input

	ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutput() KubernetesApplicationSpecTargetSelectorMatchLabelsOutput
	ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutputWithContext(context.Context) KubernetesApplicationSpecTargetSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KubernetesApplicationSpecTargetSelectorMatchLabelsArgs struct {
}

func (KubernetesApplicationSpecTargetSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetSelectorMatchLabels)(nil)).Elem()
}

func (i KubernetesApplicationSpecTargetSelectorMatchLabelsArgs) ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutput() KubernetesApplicationSpecTargetSelectorMatchLabelsOutput {
	return i.ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i KubernetesApplicationSpecTargetSelectorMatchLabelsArgs) ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationSpecTargetSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type KubernetesApplicationSpecTargetSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationSpecTargetSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationSpecTargetSelectorMatchLabels)(nil)).Elem()
}

func (o KubernetesApplicationSpecTargetSelectorMatchLabelsOutput) ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutput() KubernetesApplicationSpecTargetSelectorMatchLabelsOutput {
	return o
}

func (o KubernetesApplicationSpecTargetSelectorMatchLabelsOutput) ToKubernetesApplicationSpecTargetSelectorMatchLabelsOutputWithContext(ctx context.Context) KubernetesApplicationSpecTargetSelectorMatchLabelsOutput {
	return o
}

// KubernetesApplicationStatus represents the observed state of a KubernetesApplication.
type KubernetesApplicationStatus struct {
	// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
	ConditionedStatus *KubernetesApplicationStatusConditionedStatus `pulumi:"conditionedStatus"`
	// Desired resources of this application, i.e. the number of resources that match this application's resource selector.
	DesiredResources *int `pulumi:"desiredResources"`
	// State of the application.
	State *string `pulumi:"state"`
	// Submitted resources of this workload, i.e. the subset of desired resources that have been successfully submitted to their scheduled Kubernetes cluster.
	SubmittedResources *int `pulumi:"submittedResources"`
}

// KubernetesApplicationStatusInput is an input type that accepts KubernetesApplicationStatusArgs and KubernetesApplicationStatusOutput values.
// You can construct a concrete instance of `KubernetesApplicationStatusInput` via:
//
//          KubernetesApplicationStatusArgs{...}
type KubernetesApplicationStatusInput interface {
	pulumi.Input

	ToKubernetesApplicationStatusOutput() KubernetesApplicationStatusOutput
	ToKubernetesApplicationStatusOutputWithContext(context.Context) KubernetesApplicationStatusOutput
}

// KubernetesApplicationStatus represents the observed state of a KubernetesApplication.
type KubernetesApplicationStatusArgs struct {
	// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
	ConditionedStatus KubernetesApplicationStatusConditionedStatusPtrInput `pulumi:"conditionedStatus"`
	// Desired resources of this application, i.e. the number of resources that match this application's resource selector.
	DesiredResources pulumi.IntPtrInput `pulumi:"desiredResources"`
	// State of the application.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Submitted resources of this workload, i.e. the subset of desired resources that have been successfully submitted to their scheduled Kubernetes cluster.
	SubmittedResources pulumi.IntPtrInput `pulumi:"submittedResources"`
}

func (KubernetesApplicationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationStatus)(nil)).Elem()
}

func (i KubernetesApplicationStatusArgs) ToKubernetesApplicationStatusOutput() KubernetesApplicationStatusOutput {
	return i.ToKubernetesApplicationStatusOutputWithContext(context.Background())
}

func (i KubernetesApplicationStatusArgs) ToKubernetesApplicationStatusOutputWithContext(ctx context.Context) KubernetesApplicationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusOutput)
}

func (i KubernetesApplicationStatusArgs) ToKubernetesApplicationStatusPtrOutput() KubernetesApplicationStatusPtrOutput {
	return i.ToKubernetesApplicationStatusPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationStatusArgs) ToKubernetesApplicationStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusOutput).ToKubernetesApplicationStatusPtrOutputWithContext(ctx)
}

// KubernetesApplicationStatusPtrInput is an input type that accepts KubernetesApplicationStatusArgs, KubernetesApplicationStatusPtr and KubernetesApplicationStatusPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationStatusPtrInput` via:
//
//          KubernetesApplicationStatusArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationStatusPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationStatusPtrOutput() KubernetesApplicationStatusPtrOutput
	ToKubernetesApplicationStatusPtrOutputWithContext(context.Context) KubernetesApplicationStatusPtrOutput
}

type kubernetesApplicationStatusPtrType KubernetesApplicationStatusArgs

func KubernetesApplicationStatusPtr(v *KubernetesApplicationStatusArgs) KubernetesApplicationStatusPtrInput {
	return (*kubernetesApplicationStatusPtrType)(v)
}

func (*kubernetesApplicationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationStatus)(nil)).Elem()
}

func (i *kubernetesApplicationStatusPtrType) ToKubernetesApplicationStatusPtrOutput() KubernetesApplicationStatusPtrOutput {
	return i.ToKubernetesApplicationStatusPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationStatusPtrType) ToKubernetesApplicationStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusPtrOutput)
}

// KubernetesApplicationStatus represents the observed state of a KubernetesApplication.
type KubernetesApplicationStatusOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationStatus)(nil)).Elem()
}

func (o KubernetesApplicationStatusOutput) ToKubernetesApplicationStatusOutput() KubernetesApplicationStatusOutput {
	return o
}

func (o KubernetesApplicationStatusOutput) ToKubernetesApplicationStatusOutputWithContext(ctx context.Context) KubernetesApplicationStatusOutput {
	return o
}

func (o KubernetesApplicationStatusOutput) ToKubernetesApplicationStatusPtrOutput() KubernetesApplicationStatusPtrOutput {
	return o.ToKubernetesApplicationStatusPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationStatusOutput) ToKubernetesApplicationStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatus) *KubernetesApplicationStatus {
		return &v
	}).(KubernetesApplicationStatusPtrOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
func (o KubernetesApplicationStatusOutput) ConditionedStatus() KubernetesApplicationStatusConditionedStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatus) *KubernetesApplicationStatusConditionedStatus {
		return v.ConditionedStatus
	}).(KubernetesApplicationStatusConditionedStatusPtrOutput)
}

// Desired resources of this application, i.e. the number of resources that match this application's resource selector.
func (o KubernetesApplicationStatusOutput) DesiredResources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatus) *int { return v.DesiredResources }).(pulumi.IntPtrOutput)
}

// State of the application.
func (o KubernetesApplicationStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Submitted resources of this workload, i.e. the subset of desired resources that have been successfully submitted to their scheduled Kubernetes cluster.
func (o KubernetesApplicationStatusOutput) SubmittedResources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatus) *int { return v.SubmittedResources }).(pulumi.IntPtrOutput)
}

type KubernetesApplicationStatusPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationStatus)(nil)).Elem()
}

func (o KubernetesApplicationStatusPtrOutput) ToKubernetesApplicationStatusPtrOutput() KubernetesApplicationStatusPtrOutput {
	return o
}

func (o KubernetesApplicationStatusPtrOutput) ToKubernetesApplicationStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusPtrOutput {
	return o
}

func (o KubernetesApplicationStatusPtrOutput) Elem() KubernetesApplicationStatusOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatus) KubernetesApplicationStatus { return *v }).(KubernetesApplicationStatusOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
func (o KubernetesApplicationStatusPtrOutput) ConditionedStatus() KubernetesApplicationStatusConditionedStatusPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatus) *KubernetesApplicationStatusConditionedStatus {
		if v == nil {
			return nil
		}
		return v.ConditionedStatus
	}).(KubernetesApplicationStatusConditionedStatusPtrOutput)
}

// Desired resources of this application, i.e. the number of resources that match this application's resource selector.
func (o KubernetesApplicationStatusPtrOutput) DesiredResources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatus) *int {
		if v == nil {
			return nil
		}
		return v.DesiredResources
	}).(pulumi.IntPtrOutput)
}

// State of the application.
func (o KubernetesApplicationStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Submitted resources of this workload, i.e. the subset of desired resources that have been successfully submitted to their scheduled Kubernetes cluster.
func (o KubernetesApplicationStatusPtrOutput) SubmittedResources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatus) *int {
		if v == nil {
			return nil
		}
		return v.SubmittedResources
	}).(pulumi.IntPtrOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
type KubernetesApplicationStatusConditionedStatus struct {
	// Conditions of the resource.
	Conditions []KubernetesApplicationStatusConditionedStatusConditions `pulumi:"conditions"`
}

// KubernetesApplicationStatusConditionedStatusInput is an input type that accepts KubernetesApplicationStatusConditionedStatusArgs and KubernetesApplicationStatusConditionedStatusOutput values.
// You can construct a concrete instance of `KubernetesApplicationStatusConditionedStatusInput` via:
//
//          KubernetesApplicationStatusConditionedStatusArgs{...}
type KubernetesApplicationStatusConditionedStatusInput interface {
	pulumi.Input

	ToKubernetesApplicationStatusConditionedStatusOutput() KubernetesApplicationStatusConditionedStatusOutput
	ToKubernetesApplicationStatusConditionedStatusOutputWithContext(context.Context) KubernetesApplicationStatusConditionedStatusOutput
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
type KubernetesApplicationStatusConditionedStatusArgs struct {
	// Conditions of the resource.
	Conditions KubernetesApplicationStatusConditionedStatusConditionsArrayInput `pulumi:"conditions"`
}

func (KubernetesApplicationStatusConditionedStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationStatusConditionedStatus)(nil)).Elem()
}

func (i KubernetesApplicationStatusConditionedStatusArgs) ToKubernetesApplicationStatusConditionedStatusOutput() KubernetesApplicationStatusConditionedStatusOutput {
	return i.ToKubernetesApplicationStatusConditionedStatusOutputWithContext(context.Background())
}

func (i KubernetesApplicationStatusConditionedStatusArgs) ToKubernetesApplicationStatusConditionedStatusOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusConditionedStatusOutput)
}

func (i KubernetesApplicationStatusConditionedStatusArgs) ToKubernetesApplicationStatusConditionedStatusPtrOutput() KubernetesApplicationStatusConditionedStatusPtrOutput {
	return i.ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(context.Background())
}

func (i KubernetesApplicationStatusConditionedStatusArgs) ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusConditionedStatusOutput).ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(ctx)
}

// KubernetesApplicationStatusConditionedStatusPtrInput is an input type that accepts KubernetesApplicationStatusConditionedStatusArgs, KubernetesApplicationStatusConditionedStatusPtr and KubernetesApplicationStatusConditionedStatusPtrOutput values.
// You can construct a concrete instance of `KubernetesApplicationStatusConditionedStatusPtrInput` via:
//
//          KubernetesApplicationStatusConditionedStatusArgs{...}
//
//  or:
//
//          nil
type KubernetesApplicationStatusConditionedStatusPtrInput interface {
	pulumi.Input

	ToKubernetesApplicationStatusConditionedStatusPtrOutput() KubernetesApplicationStatusConditionedStatusPtrOutput
	ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(context.Context) KubernetesApplicationStatusConditionedStatusPtrOutput
}

type kubernetesApplicationStatusConditionedStatusPtrType KubernetesApplicationStatusConditionedStatusArgs

func KubernetesApplicationStatusConditionedStatusPtr(v *KubernetesApplicationStatusConditionedStatusArgs) KubernetesApplicationStatusConditionedStatusPtrInput {
	return (*kubernetesApplicationStatusConditionedStatusPtrType)(v)
}

func (*kubernetesApplicationStatusConditionedStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationStatusConditionedStatus)(nil)).Elem()
}

func (i *kubernetesApplicationStatusConditionedStatusPtrType) ToKubernetesApplicationStatusConditionedStatusPtrOutput() KubernetesApplicationStatusConditionedStatusPtrOutput {
	return i.ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(context.Background())
}

func (i *kubernetesApplicationStatusConditionedStatusPtrType) ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusConditionedStatusPtrOutput)
}

// A ConditionedStatus reflects the observed status of a resource. Only one condition of each type may exist.
type KubernetesApplicationStatusConditionedStatusOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationStatusConditionedStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationStatusConditionedStatus)(nil)).Elem()
}

func (o KubernetesApplicationStatusConditionedStatusOutput) ToKubernetesApplicationStatusConditionedStatusOutput() KubernetesApplicationStatusConditionedStatusOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusOutput) ToKubernetesApplicationStatusConditionedStatusOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusOutput) ToKubernetesApplicationStatusConditionedStatusPtrOutput() KubernetesApplicationStatusConditionedStatusPtrOutput {
	return o.ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(context.Background())
}

func (o KubernetesApplicationStatusConditionedStatusOutput) ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatus) *KubernetesApplicationStatusConditionedStatus {
		return &v
	}).(KubernetesApplicationStatusConditionedStatusPtrOutput)
}

// Conditions of the resource.
func (o KubernetesApplicationStatusConditionedStatusOutput) Conditions() KubernetesApplicationStatusConditionedStatusConditionsArrayOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatus) []KubernetesApplicationStatusConditionedStatusConditions {
		return v.Conditions
	}).(KubernetesApplicationStatusConditionedStatusConditionsArrayOutput)
}

type KubernetesApplicationStatusConditionedStatusPtrOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationStatusConditionedStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApplicationStatusConditionedStatus)(nil)).Elem()
}

func (o KubernetesApplicationStatusConditionedStatusPtrOutput) ToKubernetesApplicationStatusConditionedStatusPtrOutput() KubernetesApplicationStatusConditionedStatusPtrOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusPtrOutput) ToKubernetesApplicationStatusConditionedStatusPtrOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusPtrOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusPtrOutput) Elem() KubernetesApplicationStatusConditionedStatusOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatusConditionedStatus) KubernetesApplicationStatusConditionedStatus {
		return *v
	}).(KubernetesApplicationStatusConditionedStatusOutput)
}

// Conditions of the resource.
func (o KubernetesApplicationStatusConditionedStatusPtrOutput) Conditions() KubernetesApplicationStatusConditionedStatusConditionsArrayOutput {
	return o.ApplyT(func(v *KubernetesApplicationStatusConditionedStatus) []KubernetesApplicationStatusConditionedStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KubernetesApplicationStatusConditionedStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type KubernetesApplicationStatusConditionedStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// KubernetesApplicationStatusConditionedStatusConditionsInput is an input type that accepts KubernetesApplicationStatusConditionedStatusConditionsArgs and KubernetesApplicationStatusConditionedStatusConditionsOutput values.
// You can construct a concrete instance of `KubernetesApplicationStatusConditionedStatusConditionsInput` via:
//
//          KubernetesApplicationStatusConditionedStatusConditionsArgs{...}
type KubernetesApplicationStatusConditionedStatusConditionsInput interface {
	pulumi.Input

	ToKubernetesApplicationStatusConditionedStatusConditionsOutput() KubernetesApplicationStatusConditionedStatusConditionsOutput
	ToKubernetesApplicationStatusConditionedStatusConditionsOutputWithContext(context.Context) KubernetesApplicationStatusConditionedStatusConditionsOutput
}

// A Condition that may apply to a resource.
type KubernetesApplicationStatusConditionedStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KubernetesApplicationStatusConditionedStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationStatusConditionedStatusConditions)(nil)).Elem()
}

func (i KubernetesApplicationStatusConditionedStatusConditionsArgs) ToKubernetesApplicationStatusConditionedStatusConditionsOutput() KubernetesApplicationStatusConditionedStatusConditionsOutput {
	return i.ToKubernetesApplicationStatusConditionedStatusConditionsOutputWithContext(context.Background())
}

func (i KubernetesApplicationStatusConditionedStatusConditionsArgs) ToKubernetesApplicationStatusConditionedStatusConditionsOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusConditionedStatusConditionsOutput)
}

// KubernetesApplicationStatusConditionedStatusConditionsArrayInput is an input type that accepts KubernetesApplicationStatusConditionedStatusConditionsArray and KubernetesApplicationStatusConditionedStatusConditionsArrayOutput values.
// You can construct a concrete instance of `KubernetesApplicationStatusConditionedStatusConditionsArrayInput` via:
//
//          KubernetesApplicationStatusConditionedStatusConditionsArray{ KubernetesApplicationStatusConditionedStatusConditionsArgs{...} }
type KubernetesApplicationStatusConditionedStatusConditionsArrayInput interface {
	pulumi.Input

	ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutput() KubernetesApplicationStatusConditionedStatusConditionsArrayOutput
	ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutputWithContext(context.Context) KubernetesApplicationStatusConditionedStatusConditionsArrayOutput
}

type KubernetesApplicationStatusConditionedStatusConditionsArray []KubernetesApplicationStatusConditionedStatusConditionsInput

func (KubernetesApplicationStatusConditionedStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationStatusConditionedStatusConditions)(nil)).Elem()
}

func (i KubernetesApplicationStatusConditionedStatusConditionsArray) ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutput() KubernetesApplicationStatusConditionedStatusConditionsArrayOutput {
	return i.ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutputWithContext(context.Background())
}

func (i KubernetesApplicationStatusConditionedStatusConditionsArray) ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesApplicationStatusConditionedStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type KubernetesApplicationStatusConditionedStatusConditionsOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationStatusConditionedStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesApplicationStatusConditionedStatusConditions)(nil)).Elem()
}

func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) ToKubernetesApplicationStatusConditionedStatusConditionsOutput() KubernetesApplicationStatusConditionedStatusConditionsOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) ToKubernetesApplicationStatusConditionedStatusConditionsOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o KubernetesApplicationStatusConditionedStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesApplicationStatusConditionedStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type KubernetesApplicationStatusConditionedStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesApplicationStatusConditionedStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesApplicationStatusConditionedStatusConditions)(nil)).Elem()
}

func (o KubernetesApplicationStatusConditionedStatusConditionsArrayOutput) ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutput() KubernetesApplicationStatusConditionedStatusConditionsArrayOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusConditionsArrayOutput) ToKubernetesApplicationStatusConditionedStatusConditionsArrayOutputWithContext(ctx context.Context) KubernetesApplicationStatusConditionedStatusConditionsArrayOutput {
	return o
}

func (o KubernetesApplicationStatusConditionedStatusConditionsArrayOutput) Index(i pulumi.IntInput) KubernetesApplicationStatusConditionedStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesApplicationStatusConditionedStatusConditions {
		return vs[0].([]KubernetesApplicationStatusConditionedStatusConditions)[vs[1].(int)]
	}).(KubernetesApplicationStatusConditionedStatusConditionsOutput)
}

// A KubernetesTarget is a scheduling target for a Kubernetes Application.
type KubernetesTargetType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// A TargetSpec defines the common fields of objects used for exposing infrastructure to workloads that can be scheduled to.
	Spec KubernetesTargetSpec `pulumi:"spec"`
	// A TargetStatus defines the observed status a target.
	Status *KubernetesTargetStatus `pulumi:"status"`
}

// KubernetesTargetTypeInput is an input type that accepts KubernetesTargetTypeArgs and KubernetesTargetTypeOutput values.
// You can construct a concrete instance of `KubernetesTargetTypeInput` via:
//
//          KubernetesTargetTypeArgs{...}
type KubernetesTargetTypeInput interface {
	pulumi.Input

	ToKubernetesTargetTypeOutput() KubernetesTargetTypeOutput
	ToKubernetesTargetTypeOutputWithContext(context.Context) KubernetesTargetTypeOutput
}

// A KubernetesTarget is a scheduling target for a Kubernetes Application.
type KubernetesTargetTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// A TargetSpec defines the common fields of objects used for exposing infrastructure to workloads that can be scheduled to.
	Spec KubernetesTargetSpecInput `pulumi:"spec"`
	// A TargetStatus defines the observed status a target.
	Status KubernetesTargetStatusPtrInput `pulumi:"status"`
}

func (KubernetesTargetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetType)(nil)).Elem()
}

func (i KubernetesTargetTypeArgs) ToKubernetesTargetTypeOutput() KubernetesTargetTypeOutput {
	return i.ToKubernetesTargetTypeOutputWithContext(context.Background())
}

func (i KubernetesTargetTypeArgs) ToKubernetesTargetTypeOutputWithContext(ctx context.Context) KubernetesTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetTypeOutput)
}

// A KubernetesTarget is a scheduling target for a Kubernetes Application.
type KubernetesTargetTypeOutput struct{ *pulumi.OutputState }

func (KubernetesTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetType)(nil)).Elem()
}

func (o KubernetesTargetTypeOutput) ToKubernetesTargetTypeOutput() KubernetesTargetTypeOutput {
	return o
}

func (o KubernetesTargetTypeOutput) ToKubernetesTargetTypeOutputWithContext(ctx context.Context) KubernetesTargetTypeOutput {
	return o
}

func (o KubernetesTargetTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KubernetesTargetTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KubernetesTargetTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KubernetesTargetType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// A TargetSpec defines the common fields of objects used for exposing infrastructure to workloads that can be scheduled to.
func (o KubernetesTargetTypeOutput) Spec() KubernetesTargetSpecOutput {
	return o.ApplyT(func(v KubernetesTargetType) KubernetesTargetSpec { return v.Spec }).(KubernetesTargetSpecOutput)
}

// A TargetStatus defines the observed status a target.
func (o KubernetesTargetTypeOutput) Status() KubernetesTargetStatusPtrOutput {
	return o.ApplyT(func(v KubernetesTargetType) *KubernetesTargetStatus { return v.Status }).(KubernetesTargetStatusPtrOutput)
}

type KubernetesTargetMetadata struct {
}

// KubernetesTargetMetadataInput is an input type that accepts KubernetesTargetMetadataArgs and KubernetesTargetMetadataOutput values.
// You can construct a concrete instance of `KubernetesTargetMetadataInput` via:
//
//          KubernetesTargetMetadataArgs{...}
type KubernetesTargetMetadataInput interface {
	pulumi.Input

	ToKubernetesTargetMetadataOutput() KubernetesTargetMetadataOutput
	ToKubernetesTargetMetadataOutputWithContext(context.Context) KubernetesTargetMetadataOutput
}

type KubernetesTargetMetadataArgs struct {
}

func (KubernetesTargetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetMetadata)(nil)).Elem()
}

func (i KubernetesTargetMetadataArgs) ToKubernetesTargetMetadataOutput() KubernetesTargetMetadataOutput {
	return i.ToKubernetesTargetMetadataOutputWithContext(context.Background())
}

func (i KubernetesTargetMetadataArgs) ToKubernetesTargetMetadataOutputWithContext(ctx context.Context) KubernetesTargetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetMetadataOutput)
}

type KubernetesTargetMetadataOutput struct{ *pulumi.OutputState }

func (KubernetesTargetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetMetadata)(nil)).Elem()
}

func (o KubernetesTargetMetadataOutput) ToKubernetesTargetMetadataOutput() KubernetesTargetMetadataOutput {
	return o
}

func (o KubernetesTargetMetadataOutput) ToKubernetesTargetMetadataOutputWithContext(ctx context.Context) KubernetesTargetMetadataOutput {
	return o
}

// A TargetSpec defines the common fields of objects used for exposing infrastructure to workloads that can be scheduled to.
type KubernetesTargetSpec struct {
	// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
	ClusterRef *KubernetesTargetSpecClusterRef `pulumi:"clusterRef"`
	// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
	ConnectionSecretRef *KubernetesTargetSpecConnectionSecretRef `pulumi:"connectionSecretRef"`
}

// KubernetesTargetSpecInput is an input type that accepts KubernetesTargetSpecArgs and KubernetesTargetSpecOutput values.
// You can construct a concrete instance of `KubernetesTargetSpecInput` via:
//
//          KubernetesTargetSpecArgs{...}
type KubernetesTargetSpecInput interface {
	pulumi.Input

	ToKubernetesTargetSpecOutput() KubernetesTargetSpecOutput
	ToKubernetesTargetSpecOutputWithContext(context.Context) KubernetesTargetSpecOutput
}

// A TargetSpec defines the common fields of objects used for exposing infrastructure to workloads that can be scheduled to.
type KubernetesTargetSpecArgs struct {
	// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
	ClusterRef KubernetesTargetSpecClusterRefPtrInput `pulumi:"clusterRef"`
	// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
	ConnectionSecretRef KubernetesTargetSpecConnectionSecretRefPtrInput `pulumi:"connectionSecretRef"`
}

func (KubernetesTargetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetSpec)(nil)).Elem()
}

func (i KubernetesTargetSpecArgs) ToKubernetesTargetSpecOutput() KubernetesTargetSpecOutput {
	return i.ToKubernetesTargetSpecOutputWithContext(context.Background())
}

func (i KubernetesTargetSpecArgs) ToKubernetesTargetSpecOutputWithContext(ctx context.Context) KubernetesTargetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecOutput)
}

func (i KubernetesTargetSpecArgs) ToKubernetesTargetSpecPtrOutput() KubernetesTargetSpecPtrOutput {
	return i.ToKubernetesTargetSpecPtrOutputWithContext(context.Background())
}

func (i KubernetesTargetSpecArgs) ToKubernetesTargetSpecPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecOutput).ToKubernetesTargetSpecPtrOutputWithContext(ctx)
}

// KubernetesTargetSpecPtrInput is an input type that accepts KubernetesTargetSpecArgs, KubernetesTargetSpecPtr and KubernetesTargetSpecPtrOutput values.
// You can construct a concrete instance of `KubernetesTargetSpecPtrInput` via:
//
//          KubernetesTargetSpecArgs{...}
//
//  or:
//
//          nil
type KubernetesTargetSpecPtrInput interface {
	pulumi.Input

	ToKubernetesTargetSpecPtrOutput() KubernetesTargetSpecPtrOutput
	ToKubernetesTargetSpecPtrOutputWithContext(context.Context) KubernetesTargetSpecPtrOutput
}

type kubernetesTargetSpecPtrType KubernetesTargetSpecArgs

func KubernetesTargetSpecPtr(v *KubernetesTargetSpecArgs) KubernetesTargetSpecPtrInput {
	return (*kubernetesTargetSpecPtrType)(v)
}

func (*kubernetesTargetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetSpec)(nil)).Elem()
}

func (i *kubernetesTargetSpecPtrType) ToKubernetesTargetSpecPtrOutput() KubernetesTargetSpecPtrOutput {
	return i.ToKubernetesTargetSpecPtrOutputWithContext(context.Background())
}

func (i *kubernetesTargetSpecPtrType) ToKubernetesTargetSpecPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecPtrOutput)
}

// A TargetSpec defines the common fields of objects used for exposing infrastructure to workloads that can be scheduled to.
type KubernetesTargetSpecOutput struct{ *pulumi.OutputState }

func (KubernetesTargetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetSpec)(nil)).Elem()
}

func (o KubernetesTargetSpecOutput) ToKubernetesTargetSpecOutput() KubernetesTargetSpecOutput {
	return o
}

func (o KubernetesTargetSpecOutput) ToKubernetesTargetSpecOutputWithContext(ctx context.Context) KubernetesTargetSpecOutput {
	return o
}

func (o KubernetesTargetSpecOutput) ToKubernetesTargetSpecPtrOutput() KubernetesTargetSpecPtrOutput {
	return o.ToKubernetesTargetSpecPtrOutputWithContext(context.Background())
}

func (o KubernetesTargetSpecOutput) ToKubernetesTargetSpecPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpec) *KubernetesTargetSpec {
		return &v
	}).(KubernetesTargetSpecPtrOutput)
}

// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
func (o KubernetesTargetSpecOutput) ClusterRef() KubernetesTargetSpecClusterRefPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpec) *KubernetesTargetSpecClusterRef { return v.ClusterRef }).(KubernetesTargetSpecClusterRefPtrOutput)
}

// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
func (o KubernetesTargetSpecOutput) ConnectionSecretRef() KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpec) *KubernetesTargetSpecConnectionSecretRef { return v.ConnectionSecretRef }).(KubernetesTargetSpecConnectionSecretRefPtrOutput)
}

type KubernetesTargetSpecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesTargetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetSpec)(nil)).Elem()
}

func (o KubernetesTargetSpecPtrOutput) ToKubernetesTargetSpecPtrOutput() KubernetesTargetSpecPtrOutput {
	return o
}

func (o KubernetesTargetSpecPtrOutput) ToKubernetesTargetSpecPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecPtrOutput {
	return o
}

func (o KubernetesTargetSpecPtrOutput) Elem() KubernetesTargetSpecOutput {
	return o.ApplyT(func(v *KubernetesTargetSpec) KubernetesTargetSpec { return *v }).(KubernetesTargetSpecOutput)
}

// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
func (o KubernetesTargetSpecPtrOutput) ClusterRef() KubernetesTargetSpecClusterRefPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpec) *KubernetesTargetSpecClusterRef {
		if v == nil {
			return nil
		}
		return v.ClusterRef
	}).(KubernetesTargetSpecClusterRefPtrOutput)
}

// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
func (o KubernetesTargetSpecPtrOutput) ConnectionSecretRef() KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpec) *KubernetesTargetSpecConnectionSecretRef {
		if v == nil {
			return nil
		}
		return v.ConnectionSecretRef
	}).(KubernetesTargetSpecConnectionSecretRefPtrOutput)
}

// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
type KubernetesTargetSpecClusterRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// KubernetesTargetSpecClusterRefInput is an input type that accepts KubernetesTargetSpecClusterRefArgs and KubernetesTargetSpecClusterRefOutput values.
// You can construct a concrete instance of `KubernetesTargetSpecClusterRefInput` via:
//
//          KubernetesTargetSpecClusterRefArgs{...}
type KubernetesTargetSpecClusterRefInput interface {
	pulumi.Input

	ToKubernetesTargetSpecClusterRefOutput() KubernetesTargetSpecClusterRefOutput
	ToKubernetesTargetSpecClusterRefOutputWithContext(context.Context) KubernetesTargetSpecClusterRefOutput
}

// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
type KubernetesTargetSpecClusterRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (KubernetesTargetSpecClusterRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetSpecClusterRef)(nil)).Elem()
}

func (i KubernetesTargetSpecClusterRefArgs) ToKubernetesTargetSpecClusterRefOutput() KubernetesTargetSpecClusterRefOutput {
	return i.ToKubernetesTargetSpecClusterRefOutputWithContext(context.Background())
}

func (i KubernetesTargetSpecClusterRefArgs) ToKubernetesTargetSpecClusterRefOutputWithContext(ctx context.Context) KubernetesTargetSpecClusterRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecClusterRefOutput)
}

func (i KubernetesTargetSpecClusterRefArgs) ToKubernetesTargetSpecClusterRefPtrOutput() KubernetesTargetSpecClusterRefPtrOutput {
	return i.ToKubernetesTargetSpecClusterRefPtrOutputWithContext(context.Background())
}

func (i KubernetesTargetSpecClusterRefArgs) ToKubernetesTargetSpecClusterRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecClusterRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecClusterRefOutput).ToKubernetesTargetSpecClusterRefPtrOutputWithContext(ctx)
}

// KubernetesTargetSpecClusterRefPtrInput is an input type that accepts KubernetesTargetSpecClusterRefArgs, KubernetesTargetSpecClusterRefPtr and KubernetesTargetSpecClusterRefPtrOutput values.
// You can construct a concrete instance of `KubernetesTargetSpecClusterRefPtrInput` via:
//
//          KubernetesTargetSpecClusterRefArgs{...}
//
//  or:
//
//          nil
type KubernetesTargetSpecClusterRefPtrInput interface {
	pulumi.Input

	ToKubernetesTargetSpecClusterRefPtrOutput() KubernetesTargetSpecClusterRefPtrOutput
	ToKubernetesTargetSpecClusterRefPtrOutputWithContext(context.Context) KubernetesTargetSpecClusterRefPtrOutput
}

type kubernetesTargetSpecClusterRefPtrType KubernetesTargetSpecClusterRefArgs

func KubernetesTargetSpecClusterRefPtr(v *KubernetesTargetSpecClusterRefArgs) KubernetesTargetSpecClusterRefPtrInput {
	return (*kubernetesTargetSpecClusterRefPtrType)(v)
}

func (*kubernetesTargetSpecClusterRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetSpecClusterRef)(nil)).Elem()
}

func (i *kubernetesTargetSpecClusterRefPtrType) ToKubernetesTargetSpecClusterRefPtrOutput() KubernetesTargetSpecClusterRefPtrOutput {
	return i.ToKubernetesTargetSpecClusterRefPtrOutputWithContext(context.Background())
}

func (i *kubernetesTargetSpecClusterRefPtrType) ToKubernetesTargetSpecClusterRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecClusterRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecClusterRefPtrOutput)
}

// A ResourceReference specifies an existing managed resource, in any namespace, which this target should attempt to propagate a connection secret from.
type KubernetesTargetSpecClusterRefOutput struct{ *pulumi.OutputState }

func (KubernetesTargetSpecClusterRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetSpecClusterRef)(nil)).Elem()
}

func (o KubernetesTargetSpecClusterRefOutput) ToKubernetesTargetSpecClusterRefOutput() KubernetesTargetSpecClusterRefOutput {
	return o
}

func (o KubernetesTargetSpecClusterRefOutput) ToKubernetesTargetSpecClusterRefOutputWithContext(ctx context.Context) KubernetesTargetSpecClusterRefOutput {
	return o
}

func (o KubernetesTargetSpecClusterRefOutput) ToKubernetesTargetSpecClusterRefPtrOutput() KubernetesTargetSpecClusterRefPtrOutput {
	return o.ToKubernetesTargetSpecClusterRefPtrOutputWithContext(context.Background())
}

func (o KubernetesTargetSpecClusterRefOutput) ToKubernetesTargetSpecClusterRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecClusterRefPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *KubernetesTargetSpecClusterRef {
		return &v
	}).(KubernetesTargetSpecClusterRefPtrOutput)
}

// API version of the referent.
func (o KubernetesTargetSpecClusterRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o KubernetesTargetSpecClusterRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KubernetesTargetSpecClusterRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesTargetSpecClusterRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o KubernetesTargetSpecClusterRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o KubernetesTargetSpecClusterRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o KubernetesTargetSpecClusterRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecClusterRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type KubernetesTargetSpecClusterRefPtrOutput struct{ *pulumi.OutputState }

func (KubernetesTargetSpecClusterRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetSpecClusterRef)(nil)).Elem()
}

func (o KubernetesTargetSpecClusterRefPtrOutput) ToKubernetesTargetSpecClusterRefPtrOutput() KubernetesTargetSpecClusterRefPtrOutput {
	return o
}

func (o KubernetesTargetSpecClusterRefPtrOutput) ToKubernetesTargetSpecClusterRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecClusterRefPtrOutput {
	return o
}

func (o KubernetesTargetSpecClusterRefPtrOutput) Elem() KubernetesTargetSpecClusterRefOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) KubernetesTargetSpecClusterRef { return *v }).(KubernetesTargetSpecClusterRefOutput)
}

// API version of the referent.
func (o KubernetesTargetSpecClusterRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o KubernetesTargetSpecClusterRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KubernetesTargetSpecClusterRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o KubernetesTargetSpecClusterRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o KubernetesTargetSpecClusterRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o KubernetesTargetSpecClusterRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o KubernetesTargetSpecClusterRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecClusterRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
type KubernetesTargetSpecConnectionSecretRef struct {
	// Name of the secret.
	Name string `pulumi:"name"`
}

// KubernetesTargetSpecConnectionSecretRefInput is an input type that accepts KubernetesTargetSpecConnectionSecretRefArgs and KubernetesTargetSpecConnectionSecretRefOutput values.
// You can construct a concrete instance of `KubernetesTargetSpecConnectionSecretRefInput` via:
//
//          KubernetesTargetSpecConnectionSecretRefArgs{...}
type KubernetesTargetSpecConnectionSecretRefInput interface {
	pulumi.Input

	ToKubernetesTargetSpecConnectionSecretRefOutput() KubernetesTargetSpecConnectionSecretRefOutput
	ToKubernetesTargetSpecConnectionSecretRefOutputWithContext(context.Context) KubernetesTargetSpecConnectionSecretRefOutput
}

// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
type KubernetesTargetSpecConnectionSecretRefArgs struct {
	// Name of the secret.
	Name pulumi.StringInput `pulumi:"name"`
}

func (KubernetesTargetSpecConnectionSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetSpecConnectionSecretRef)(nil)).Elem()
}

func (i KubernetesTargetSpecConnectionSecretRefArgs) ToKubernetesTargetSpecConnectionSecretRefOutput() KubernetesTargetSpecConnectionSecretRefOutput {
	return i.ToKubernetesTargetSpecConnectionSecretRefOutputWithContext(context.Background())
}

func (i KubernetesTargetSpecConnectionSecretRefArgs) ToKubernetesTargetSpecConnectionSecretRefOutputWithContext(ctx context.Context) KubernetesTargetSpecConnectionSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecConnectionSecretRefOutput)
}

func (i KubernetesTargetSpecConnectionSecretRefArgs) ToKubernetesTargetSpecConnectionSecretRefPtrOutput() KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return i.ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(context.Background())
}

func (i KubernetesTargetSpecConnectionSecretRefArgs) ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecConnectionSecretRefOutput).ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(ctx)
}

// KubernetesTargetSpecConnectionSecretRefPtrInput is an input type that accepts KubernetesTargetSpecConnectionSecretRefArgs, KubernetesTargetSpecConnectionSecretRefPtr and KubernetesTargetSpecConnectionSecretRefPtrOutput values.
// You can construct a concrete instance of `KubernetesTargetSpecConnectionSecretRefPtrInput` via:
//
//          KubernetesTargetSpecConnectionSecretRefArgs{...}
//
//  or:
//
//          nil
type KubernetesTargetSpecConnectionSecretRefPtrInput interface {
	pulumi.Input

	ToKubernetesTargetSpecConnectionSecretRefPtrOutput() KubernetesTargetSpecConnectionSecretRefPtrOutput
	ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(context.Context) KubernetesTargetSpecConnectionSecretRefPtrOutput
}

type kubernetesTargetSpecConnectionSecretRefPtrType KubernetesTargetSpecConnectionSecretRefArgs

func KubernetesTargetSpecConnectionSecretRefPtr(v *KubernetesTargetSpecConnectionSecretRefArgs) KubernetesTargetSpecConnectionSecretRefPtrInput {
	return (*kubernetesTargetSpecConnectionSecretRefPtrType)(v)
}

func (*kubernetesTargetSpecConnectionSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetSpecConnectionSecretRef)(nil)).Elem()
}

func (i *kubernetesTargetSpecConnectionSecretRefPtrType) ToKubernetesTargetSpecConnectionSecretRefPtrOutput() KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return i.ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(context.Background())
}

func (i *kubernetesTargetSpecConnectionSecretRefPtrType) ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetSpecConnectionSecretRefPtrOutput)
}

// WriteConnectionSecretToReference specifies the name of a Secret, in the same namespace as this target, to which any connection details for this target should be written or already exist. Connection secrets referenced by a target should contain information for connecting to a resource that allows for scheduling of workloads.
type KubernetesTargetSpecConnectionSecretRefOutput struct{ *pulumi.OutputState }

func (KubernetesTargetSpecConnectionSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetSpecConnectionSecretRef)(nil)).Elem()
}

func (o KubernetesTargetSpecConnectionSecretRefOutput) ToKubernetesTargetSpecConnectionSecretRefOutput() KubernetesTargetSpecConnectionSecretRefOutput {
	return o
}

func (o KubernetesTargetSpecConnectionSecretRefOutput) ToKubernetesTargetSpecConnectionSecretRefOutputWithContext(ctx context.Context) KubernetesTargetSpecConnectionSecretRefOutput {
	return o
}

func (o KubernetesTargetSpecConnectionSecretRefOutput) ToKubernetesTargetSpecConnectionSecretRefPtrOutput() KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return o.ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(context.Background())
}

func (o KubernetesTargetSpecConnectionSecretRefOutput) ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return o.ApplyT(func(v KubernetesTargetSpecConnectionSecretRef) *KubernetesTargetSpecConnectionSecretRef {
		return &v
	}).(KubernetesTargetSpecConnectionSecretRefPtrOutput)
}

// Name of the secret.
func (o KubernetesTargetSpecConnectionSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesTargetSpecConnectionSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type KubernetesTargetSpecConnectionSecretRefPtrOutput struct{ *pulumi.OutputState }

func (KubernetesTargetSpecConnectionSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetSpecConnectionSecretRef)(nil)).Elem()
}

func (o KubernetesTargetSpecConnectionSecretRefPtrOutput) ToKubernetesTargetSpecConnectionSecretRefPtrOutput() KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return o
}

func (o KubernetesTargetSpecConnectionSecretRefPtrOutput) ToKubernetesTargetSpecConnectionSecretRefPtrOutputWithContext(ctx context.Context) KubernetesTargetSpecConnectionSecretRefPtrOutput {
	return o
}

func (o KubernetesTargetSpecConnectionSecretRefPtrOutput) Elem() KubernetesTargetSpecConnectionSecretRefOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecConnectionSecretRef) KubernetesTargetSpecConnectionSecretRef { return *v }).(KubernetesTargetSpecConnectionSecretRefOutput)
}

// Name of the secret.
func (o KubernetesTargetSpecConnectionSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesTargetSpecConnectionSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A TargetStatus defines the observed status a target.
type KubernetesTargetStatus struct {
	// Conditions of the resource.
	Conditions []KubernetesTargetStatusConditions `pulumi:"conditions"`
}

// KubernetesTargetStatusInput is an input type that accepts KubernetesTargetStatusArgs and KubernetesTargetStatusOutput values.
// You can construct a concrete instance of `KubernetesTargetStatusInput` via:
//
//          KubernetesTargetStatusArgs{...}
type KubernetesTargetStatusInput interface {
	pulumi.Input

	ToKubernetesTargetStatusOutput() KubernetesTargetStatusOutput
	ToKubernetesTargetStatusOutputWithContext(context.Context) KubernetesTargetStatusOutput
}

// A TargetStatus defines the observed status a target.
type KubernetesTargetStatusArgs struct {
	// Conditions of the resource.
	Conditions KubernetesTargetStatusConditionsArrayInput `pulumi:"conditions"`
}

func (KubernetesTargetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetStatus)(nil)).Elem()
}

func (i KubernetesTargetStatusArgs) ToKubernetesTargetStatusOutput() KubernetesTargetStatusOutput {
	return i.ToKubernetesTargetStatusOutputWithContext(context.Background())
}

func (i KubernetesTargetStatusArgs) ToKubernetesTargetStatusOutputWithContext(ctx context.Context) KubernetesTargetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetStatusOutput)
}

func (i KubernetesTargetStatusArgs) ToKubernetesTargetStatusPtrOutput() KubernetesTargetStatusPtrOutput {
	return i.ToKubernetesTargetStatusPtrOutputWithContext(context.Background())
}

func (i KubernetesTargetStatusArgs) ToKubernetesTargetStatusPtrOutputWithContext(ctx context.Context) KubernetesTargetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetStatusOutput).ToKubernetesTargetStatusPtrOutputWithContext(ctx)
}

// KubernetesTargetStatusPtrInput is an input type that accepts KubernetesTargetStatusArgs, KubernetesTargetStatusPtr and KubernetesTargetStatusPtrOutput values.
// You can construct a concrete instance of `KubernetesTargetStatusPtrInput` via:
//
//          KubernetesTargetStatusArgs{...}
//
//  or:
//
//          nil
type KubernetesTargetStatusPtrInput interface {
	pulumi.Input

	ToKubernetesTargetStatusPtrOutput() KubernetesTargetStatusPtrOutput
	ToKubernetesTargetStatusPtrOutputWithContext(context.Context) KubernetesTargetStatusPtrOutput
}

type kubernetesTargetStatusPtrType KubernetesTargetStatusArgs

func KubernetesTargetStatusPtr(v *KubernetesTargetStatusArgs) KubernetesTargetStatusPtrInput {
	return (*kubernetesTargetStatusPtrType)(v)
}

func (*kubernetesTargetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetStatus)(nil)).Elem()
}

func (i *kubernetesTargetStatusPtrType) ToKubernetesTargetStatusPtrOutput() KubernetesTargetStatusPtrOutput {
	return i.ToKubernetesTargetStatusPtrOutputWithContext(context.Background())
}

func (i *kubernetesTargetStatusPtrType) ToKubernetesTargetStatusPtrOutputWithContext(ctx context.Context) KubernetesTargetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetStatusPtrOutput)
}

// A TargetStatus defines the observed status a target.
type KubernetesTargetStatusOutput struct{ *pulumi.OutputState }

func (KubernetesTargetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetStatus)(nil)).Elem()
}

func (o KubernetesTargetStatusOutput) ToKubernetesTargetStatusOutput() KubernetesTargetStatusOutput {
	return o
}

func (o KubernetesTargetStatusOutput) ToKubernetesTargetStatusOutputWithContext(ctx context.Context) KubernetesTargetStatusOutput {
	return o
}

func (o KubernetesTargetStatusOutput) ToKubernetesTargetStatusPtrOutput() KubernetesTargetStatusPtrOutput {
	return o.ToKubernetesTargetStatusPtrOutputWithContext(context.Background())
}

func (o KubernetesTargetStatusOutput) ToKubernetesTargetStatusPtrOutputWithContext(ctx context.Context) KubernetesTargetStatusPtrOutput {
	return o.ApplyT(func(v KubernetesTargetStatus) *KubernetesTargetStatus {
		return &v
	}).(KubernetesTargetStatusPtrOutput)
}

// Conditions of the resource.
func (o KubernetesTargetStatusOutput) Conditions() KubernetesTargetStatusConditionsArrayOutput {
	return o.ApplyT(func(v KubernetesTargetStatus) []KubernetesTargetStatusConditions { return v.Conditions }).(KubernetesTargetStatusConditionsArrayOutput)
}

type KubernetesTargetStatusPtrOutput struct{ *pulumi.OutputState }

func (KubernetesTargetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesTargetStatus)(nil)).Elem()
}

func (o KubernetesTargetStatusPtrOutput) ToKubernetesTargetStatusPtrOutput() KubernetesTargetStatusPtrOutput {
	return o
}

func (o KubernetesTargetStatusPtrOutput) ToKubernetesTargetStatusPtrOutputWithContext(ctx context.Context) KubernetesTargetStatusPtrOutput {
	return o
}

func (o KubernetesTargetStatusPtrOutput) Elem() KubernetesTargetStatusOutput {
	return o.ApplyT(func(v *KubernetesTargetStatus) KubernetesTargetStatus { return *v }).(KubernetesTargetStatusOutput)
}

// Conditions of the resource.
func (o KubernetesTargetStatusPtrOutput) Conditions() KubernetesTargetStatusConditionsArrayOutput {
	return o.ApplyT(func(v *KubernetesTargetStatus) []KubernetesTargetStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(KubernetesTargetStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type KubernetesTargetStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// KubernetesTargetStatusConditionsInput is an input type that accepts KubernetesTargetStatusConditionsArgs and KubernetesTargetStatusConditionsOutput values.
// You can construct a concrete instance of `KubernetesTargetStatusConditionsInput` via:
//
//          KubernetesTargetStatusConditionsArgs{...}
type KubernetesTargetStatusConditionsInput interface {
	pulumi.Input

	ToKubernetesTargetStatusConditionsOutput() KubernetesTargetStatusConditionsOutput
	ToKubernetesTargetStatusConditionsOutputWithContext(context.Context) KubernetesTargetStatusConditionsOutput
}

// A Condition that may apply to a resource.
type KubernetesTargetStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KubernetesTargetStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetStatusConditions)(nil)).Elem()
}

func (i KubernetesTargetStatusConditionsArgs) ToKubernetesTargetStatusConditionsOutput() KubernetesTargetStatusConditionsOutput {
	return i.ToKubernetesTargetStatusConditionsOutputWithContext(context.Background())
}

func (i KubernetesTargetStatusConditionsArgs) ToKubernetesTargetStatusConditionsOutputWithContext(ctx context.Context) KubernetesTargetStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetStatusConditionsOutput)
}

// KubernetesTargetStatusConditionsArrayInput is an input type that accepts KubernetesTargetStatusConditionsArray and KubernetesTargetStatusConditionsArrayOutput values.
// You can construct a concrete instance of `KubernetesTargetStatusConditionsArrayInput` via:
//
//          KubernetesTargetStatusConditionsArray{ KubernetesTargetStatusConditionsArgs{...} }
type KubernetesTargetStatusConditionsArrayInput interface {
	pulumi.Input

	ToKubernetesTargetStatusConditionsArrayOutput() KubernetesTargetStatusConditionsArrayOutput
	ToKubernetesTargetStatusConditionsArrayOutputWithContext(context.Context) KubernetesTargetStatusConditionsArrayOutput
}

type KubernetesTargetStatusConditionsArray []KubernetesTargetStatusConditionsInput

func (KubernetesTargetStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesTargetStatusConditions)(nil)).Elem()
}

func (i KubernetesTargetStatusConditionsArray) ToKubernetesTargetStatusConditionsArrayOutput() KubernetesTargetStatusConditionsArrayOutput {
	return i.ToKubernetesTargetStatusConditionsArrayOutputWithContext(context.Background())
}

func (i KubernetesTargetStatusConditionsArray) ToKubernetesTargetStatusConditionsArrayOutputWithContext(ctx context.Context) KubernetesTargetStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesTargetStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type KubernetesTargetStatusConditionsOutput struct{ *pulumi.OutputState }

func (KubernetesTargetStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesTargetStatusConditions)(nil)).Elem()
}

func (o KubernetesTargetStatusConditionsOutput) ToKubernetesTargetStatusConditionsOutput() KubernetesTargetStatusConditionsOutput {
	return o
}

func (o KubernetesTargetStatusConditionsOutput) ToKubernetesTargetStatusConditionsOutputWithContext(ctx context.Context) KubernetesTargetStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o KubernetesTargetStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesTargetStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o KubernetesTargetStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesTargetStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o KubernetesTargetStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesTargetStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o KubernetesTargetStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesTargetStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o KubernetesTargetStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesTargetStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type KubernetesTargetStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (KubernetesTargetStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesTargetStatusConditions)(nil)).Elem()
}

func (o KubernetesTargetStatusConditionsArrayOutput) ToKubernetesTargetStatusConditionsArrayOutput() KubernetesTargetStatusConditionsArrayOutput {
	return o
}

func (o KubernetesTargetStatusConditionsArrayOutput) ToKubernetesTargetStatusConditionsArrayOutputWithContext(ctx context.Context) KubernetesTargetStatusConditionsArrayOutput {
	return o
}

func (o KubernetesTargetStatusConditionsArrayOutput) Index(i pulumi.IntInput) KubernetesTargetStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesTargetStatusConditions {
		return vs[0].([]KubernetesTargetStatusConditions)[vs[1].(int)]
	}).(KubernetesTargetStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(KubernetesApplicationTypeOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationMetadataOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceTypeOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceMetadataOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecSecretsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecSecretsArrayOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecTargetRefOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecTargetRefPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceSpecTemplateOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusConditionedStatusOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusConditionedStatusPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusConditionedStatusConditionsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusConditionedStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusRemoteOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationResourceStatusRemotePtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceSelectorOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceSelectorPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesArrayOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesMetadataOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecSecretsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecSecretsArrayOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecTargetRefOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecTargetRefPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecResourceTemplatesSpecTemplateOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetRefOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetRefPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetSelectorOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetSelectorPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationSpecTargetSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationStatusOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationStatusPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationStatusConditionedStatusOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationStatusConditionedStatusPtrOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationStatusConditionedStatusConditionsOutput{})
	pulumi.RegisterOutputType(KubernetesApplicationStatusConditionedStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(KubernetesTargetTypeOutput{})
	pulumi.RegisterOutputType(KubernetesTargetMetadataOutput{})
	pulumi.RegisterOutputType(KubernetesTargetSpecOutput{})
	pulumi.RegisterOutputType(KubernetesTargetSpecPtrOutput{})
	pulumi.RegisterOutputType(KubernetesTargetSpecClusterRefOutput{})
	pulumi.RegisterOutputType(KubernetesTargetSpecClusterRefPtrOutput{})
	pulumi.RegisterOutputType(KubernetesTargetSpecConnectionSecretRefOutput{})
	pulumi.RegisterOutputType(KubernetesTargetSpecConnectionSecretRefPtrOutput{})
	pulumi.RegisterOutputType(KubernetesTargetStatusOutput{})
	pulumi.RegisterOutputType(KubernetesTargetStatusPtrOutput{})
	pulumi.RegisterOutputType(KubernetesTargetStatusConditionsOutput{})
	pulumi.RegisterOutputType(KubernetesTargetStatusConditionsArrayOutput{})
}
