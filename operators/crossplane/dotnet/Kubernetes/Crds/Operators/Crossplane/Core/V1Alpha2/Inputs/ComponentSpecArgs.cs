// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1Alpha2
{

    /// <summary>
    /// A ComponentSpec defines the desired state of a Component.
    /// </summary>
    public class ComponentSpecArgs : Pulumi.ResourceArgs
    {
        [Input("parameters")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1Alpha2.ComponentSpecParametersArgs>? _parameters;

        /// <summary>
        /// Parameters exposed by this component. ApplicationConfigurations that reference this component may specify values for these parameters, which will in turn be injected into the embedded workload.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1Alpha2.ComponentSpecParametersArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1Alpha2.ComponentSpecParametersArgs>());
            set => _parameters = value;
        }

        [Input("workload", required: true)]
        private InputMap<object>? _workload;

        /// <summary>
        /// A Workload that will be created for each ApplicationConfiguration that includes this Component. Workloads must be defined by a WorkloadDefinition.
        /// </summary>
        public InputMap<object> Workload
        {
            get => _workload ?? (_workload = new InputMap<object>());
            set => _workload = value;
        }

        public ComponentSpecArgs()
        {
        }
    }
}
