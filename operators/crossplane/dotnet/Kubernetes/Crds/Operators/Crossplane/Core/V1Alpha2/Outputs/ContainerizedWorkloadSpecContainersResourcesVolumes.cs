// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Core.V1Alpha2
{

    [OutputType]
    public sealed class ContainerizedWorkloadSpecContainersResourcesVolumes
    {
        /// <summary>
        /// AccessMode of this volume; RO (read only) or RW (read and write).
        /// </summary>
        public readonly string AccessMode;
        /// <summary>
        /// Disk requirements of this volume.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1Alpha2.ContainerizedWorkloadSpecContainersResourcesVolumesDisk Disk;
        /// <summary>
        /// MouthPath at which this volume will be mounted within its container.
        /// </summary>
        public readonly string MountPath;
        /// <summary>
        /// Name of this volume. Must be unique within its container.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SharingPolicy of this volume; Exclusive or Shared.
        /// </summary>
        public readonly string SharingPolicy;

        [OutputConstructor]
        private ContainerizedWorkloadSpecContainersResourcesVolumes(
            string accessMode,

            Pulumi.Kubernetes.Types.Outputs.Core.V1Alpha2.ContainerizedWorkloadSpecContainersResourcesVolumesDisk disk,

            string mountPath,

            string name,

            string sharingPolicy)
        {
            AccessMode = accessMode;
            Disk = disk;
            MountPath = mountPath;
            Name = name;
            SharingPolicy = sharingPolicy;
        }
    }
}
