// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1
{

    [OutputType]
    public sealed class CompositionSpecTo
    {
        /// <summary>
        /// Base is the target resource that the patches will be applied on.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Base;
        /// <summary>
        /// ConnectionDetails lists the propagation secret keys from this target resource to the composition instance connection secret.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToConnectionDetails> ConnectionDetails;
        /// <summary>
        /// Patches will be applied as overlay to the base resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToPatches> Patches;

        [OutputConstructor]
        private CompositionSpecTo(
            ImmutableDictionary<string, object> @base,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToConnectionDetails> connectionDetails,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToPatches> patches)
        {
            Base = @base;
            ConnectionDetails = connectionDetails;
            Patches = patches;
        }
    }
}
