// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1
{

    [OutputType]
    public sealed class CompositionSpecToPatchesTransforms
    {
        /// <summary>
        /// Map uses the input as a key in the given map and returns the value.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Map;
        /// <summary>
        /// Math is used to transform the input via mathematical operations such as multiplication.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToPatchesTransformsMath Math;
        /// <summary>
        /// String is used to transform the input into a string or a different kind of string. Note that the input does not necessarily need to be a string.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToPatchesTransformsString String;
        /// <summary>
        /// Type of the transform to be run.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private CompositionSpecToPatchesTransforms(
            ImmutableDictionary<string, string> map,

            Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToPatchesTransformsMath math,

            Pulumi.Kubernetes.Types.Outputs.Apiextensions.V1Alpha1.CompositionSpecToPatchesTransformsString @string,

            string type)
        {
            Map = map;
            Math = math;
            String = @string;
            Type = type;
        }
    }
}
