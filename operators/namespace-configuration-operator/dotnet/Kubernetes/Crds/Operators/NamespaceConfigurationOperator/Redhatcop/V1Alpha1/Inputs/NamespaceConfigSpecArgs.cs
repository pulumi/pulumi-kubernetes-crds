// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Redhatcop.V1Alpha1
{

    /// <summary>
    /// NamespaceConfigSpec defines the desired state of NamespaceConfig There are two selectors: "labelSelector", "annotationSelector". Selectors are considered in AND, so if multiple are defined they must all be true for a Namespace to be selected.
    /// </summary>
    public class NamespaceConfigSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AnnotationSelector selects Namespaces by annotation.
        /// </summary>
        [Input("annotationSelector")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Redhatcop.V1Alpha1.NamespaceConfigSpecAnnotationSelectorArgs>? AnnotationSelector { get; set; }

        /// <summary>
        /// LabelSelector selects Namespaces by label.
        /// </summary>
        [Input("labelSelector")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Redhatcop.V1Alpha1.NamespaceConfigSpecLabelSelectorArgs>? LabelSelector { get; set; }

        [Input("templates")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Redhatcop.V1Alpha1.NamespaceConfigSpecTemplatesArgs>? _templates;
        public InputList<Pulumi.Kubernetes.Types.Inputs.Redhatcop.V1Alpha1.NamespaceConfigSpecTemplatesArgs> Templates
        {
            get => _templates ?? (_templates = new InputList<Pulumi.Kubernetes.Types.Inputs.Redhatcop.V1Alpha1.NamespaceConfigSpecTemplatesArgs>());
            set => _templates = value;
        }

        public NamespaceConfigSpecArgs()
        {
        }
    }
}
