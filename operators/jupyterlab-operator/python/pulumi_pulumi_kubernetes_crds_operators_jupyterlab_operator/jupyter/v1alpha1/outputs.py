# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables

__all__ = [
    'JupyterlabSpec',
    'JupyterlabStatus',
]

@pulumi.output_type
class JupyterlabSpec(dict):
    """
    JupyterlabSpec defines the desired state of Jupyterlab
    """
    def __init__(__self__, *,
                 size: int):
        """
        JupyterlabSpec defines the desired state of Jupyterlab
        :param int size: INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
        """
        pulumi.set(__self__, "size", size)

    @property
    @pulumi.getter
    def size(self) -> int:
        """
        INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file
        """
        return pulumi.get(self, "size")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class JupyterlabStatus(dict):
    """
    JupyterlabStatus defines the observed state of Jupyterlab
    """
    def __init__(__self__, *,
                 nodes: Sequence[str]):
        """
        JupyterlabStatus defines the observed state of Jupyterlab
        :param Sequence[str] nodes: INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file
        """
        pulumi.set(__self__, "nodes", nodes)

    @property
    @pulumi.getter
    def nodes(self) -> Sequence[str]:
        """
        INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file
        """
        return pulumi.get(self, "nodes")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


